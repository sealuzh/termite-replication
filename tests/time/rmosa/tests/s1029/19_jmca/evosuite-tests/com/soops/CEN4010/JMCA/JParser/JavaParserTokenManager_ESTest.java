/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 14:50:46 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParserConstants;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaParserTokenManager_ESTest extends JavaParserTokenManager_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5843265743823953
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("d\"+");
      StringReader stringReader4 = new StringReader("e#;lN");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader4, (-736), 3787);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader3, 5000, 5000);
      StringReader stringReader5 = new StringReader("");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader5, (-1150), 2116);
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader2, 51, (-1150));
      JavaCharStream javaCharStream4 = new JavaCharStream(stringReader0, 12, (-736));
      JavaCharStream javaCharStream5 = new JavaCharStream(stringReader2, (-736), 5000);
      JavaCharStream javaCharStream6 = new JavaCharStream(stringReader3, (-1), (-1));
      JavaCharStream javaCharStream7 = new JavaCharStream(stringReader5, 35, (-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream4);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream4);
      javaParserTokenManager0.ReInit(javaCharStream0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream8 = new JavaCharStream(mockFileInputStream0);
      javaParserTokenManager1.ReInit(javaCharStream8);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -736, column 3788.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8783578531833827
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";B=TG-uEzgA!]V_-).J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
      Token token1 = javaParserTokenManager1.getNextToken();
      assertEquals(4, javaCharStream0.getBeginColumn());
      assertEquals(74, token1.kind);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%2D*#1gaC^iU772jMB0");
      StringReader stringReader1 = new StringReader("FKy&;by*^)<!6");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)84;
      byteArray0[1] = (byte)84;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.mark(38);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-429), (byte)84, 26);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.curLexState = (int) (byte)84;
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("", token0.toString());
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.8806763835918008
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FKy&;by*^)<!6");
      StringReader stringReader1 = new StringReader(";O=<57:cl?K");
      StringReader stringReader2 = new StringReader("FKy&;by*^)<!6");
      StringReader stringReader3 = new StringReader("{tQ2h%>+a$:o(c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2145388542, 105);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), (-1150));
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1, (-1150), (-1));
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader1, 29, 5000);
      JavaCharStream javaCharStream4 = new JavaCharStream(stringReader1, 1862, (-1));
      JavaCharStream javaCharStream5 = new JavaCharStream(stringReader0, 11, 117);
      JavaCharStream javaCharStream6 = new JavaCharStream(stringReader2, 1061, (-1150));
      JavaCharStream javaCharStream7 = new JavaCharStream(stringReader3, (-1150), 1774);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream5);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager1.ReInit(javaCharStream1);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream7);
      javaParserTokenManager1.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager2.getNextToken();
      javaParserTokenManager2.getNextToken();
      javaParserTokenManager2.SkipLexicalActions(token0);
      assertEquals(3, javaCharStream7.bufpos);
      assertEquals("&", token0.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.8727808476063772
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("BWb((~:MUbE+$z/9C_2");
      StringReader stringReader1 = new StringReader("BWb((~:MUbE+$z/9C_2");
      StringReader stringReader2 = new StringReader("\"do\"");
      StringReader stringReader3 = new StringReader("BWb((~:MUbE+$z/9C_2");
      stringReader0.read();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 44, 44);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-2327), 44);
      StringReader stringReader4 = new StringReader("void");
      StringReader stringReader5 = new StringReader("\"<<\"");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader4, 38, 514);
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3, (-1063), 66);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.ReInit(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream2);
      Token token0 = new Token();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(45, javaCharStream1.getBeginColumn());
      assertEquals(1, javaCharStream1.bufpos);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5843265743823953
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CeLM:mnJp/x");
      StringReader stringReader1 = new StringReader("p}oj !vaXnB)+\"-&$b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1150), 40);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), 490);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1, 35, (-1730));
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader0, 105, (-1150));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.ReInit(javaCharStream3);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(92, token0.kind);
      assertEquals(105, token0.endLine);
      assertEquals(":", token0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.177018148301881
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("privat");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      JavaCharStream javaCharStream1 = null;
      try {
        javaCharStream1 = new JavaCharStream(stringReader0, 1, 123, (-1073));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.1056211185409706
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-1p!4Y(Fe0Nmle~PP");
      StringReader stringReader1 = new StringReader("FKy&;by*^)<!6");
      StringReader stringReader2 = new StringReader("u(s.+:o>`S~+Zq~");
      StringReader stringReader3 = new StringReader("FKy&;by*^)<!6");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1150), 5000);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 5000, (-133));
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-133), 3380);
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader1, (-4360), (-1));
      JavaCharStream javaCharStream4 = new JavaCharStream(stringReader3, 4783, 39);
      JavaCharStream javaCharStream5 = new JavaCharStream(stringReader3, (-1150), 35);
      JavaCharStream javaCharStream6 = new JavaCharStream(stringReader1, (-2248), (-1));
      JavaCharStream javaCharStream7 = new JavaCharStream(stringReader0, 5000, 22);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream3);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream1);
      javaParserTokenManager1.ReInit(javaCharStream2);
      javaParserTokenManager1.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream6);
      javaParserTokenManager2.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager2.getNextToken();
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager2.SkipLexicalActions(token0);
      javaParserTokenManager2.getNextToken();
      javaParserTokenManager2.SkipLexicalActions(token1);
      assertEquals(4, javaCharStream6.bufpos);
      assertEquals(105, token1.kind);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5857917758475968
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringReader stringReader0 = new StringReader("for");
      StringReader stringReader1 = new StringReader("T?5x_T:aazqHp_qpUA");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-371), 74);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-1150), 31);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 32, 34);
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader0, (-1150), 48);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.ReInit(javaCharStream3);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(74, javaCharStream0.getBeginColumn());
      assertEquals("T", token0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5891783264039585
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("BWb((~:MUbE+$z/9C_2");
      StringReader stringReader1 = new StringReader("throw");
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("X$|~,1_]A@_X0@$");
      stringReader3.read();
      stringReader3.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 121, 735);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader3, 321, 321);
      StringReader stringReader4 = new StringReader("'");
      StringReader stringReader5 = new StringReader("super");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1, (-599), 88);
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader5, 45, (-473));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager0.ReInit(javaCharStream2);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream3);
      Token token0 = new Token();
      Token token1 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.SkipLexicalActions(token1);
      assertEquals(4, javaCharStream3.bufpos);
      assertEquals("super", token1.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.1868180666358947
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("Error: Ignoring invalid lexical state : ");
      char[] charArray0 = new char[8];
      charArray0[0] = '[';
      charArray0[1] = '8';
      charArray0[2] = 'C';
      charArray0[3] = '0';
      charArray0[4] = '\\';
      charArray0[5] = '8';
      charArray0[6] = 'h';
      charArray0[7] = 'd';
      stringReader1.read(charArray0);
      stringReader0.read();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 125, 2539);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-1), 125);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.SkipLexicalActions(token0);
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager1.MoreLexicalActions();
      assertNotSame(javaParserTokenManager1, javaParserTokenManager0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("private");
      StringReader stringReader1 = new StringReader("z=GCAI\"P .QDD[*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1150), 4297);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1792, 5000);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1, 107, 4297);
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader0, 4297, 17);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream3);
      javaParserTokenManager1.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("z", token0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.580093770149591
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringReader stringReader0 = new StringReader("goto");
      StringReader stringReader1 = new StringReader("qD!/j(|'EV8fM");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1150), 40);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-1), 490);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 35, 99);
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader1, (-1), 1187);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      StringReader stringReader2 = new StringReader("FKy&;by*^)<!6");
      JavaCharStream javaCharStream4 = new JavaCharStream(stringReader1, 32, 1809);
      javaParserTokenManager0.ReInit(javaCharStream2);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream2.bufpos);
      assertEquals(102, javaCharStream2.getColumn());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.585098775154596
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader("goto");
      StringReader stringReader1 = new StringReader("qD!/j(|'EV8fM");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1150), 40);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-1), 490);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 35, 99);
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader1, (-1), 1187);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager0.ReInit(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(89, token0.kind);
      assertEquals("!", token0.toString());
      assertEquals(492, token0.endColumn);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.2889661731386695
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%2D*#1gaC^iU772jMB0");
      StringReader stringReader1 = new StringReader("FKy&;by*^)<!6");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5000, 5000);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 7, 533);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1);
      javaParserTokenManager0.ReInit(javaCharStream2);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.ReInit(javaCharStream2);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream1, 1);
      // Undeclared exception!
      try { 
        javaParserTokenManager3.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 7, column 534.  Encountered: \"2\" (50), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.47619047619047616
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringReader stringReader0 = new StringReader(". Stte unchanged.");
      StringReader stringReader1 = new StringReader(". Stte unchanged.");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      javaCharStream0.BeginToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.8814399921878517
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FKy&;by*^)<!6");
      StringReader stringReader1 = new StringReader("FKy&;by*^)<!6");
      StringReader stringReader2 = new StringReader("&S3ko1?6");
      StringReader stringReader3 = new StringReader("FKy&;by*^)<!6");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 5, 5000);
      StringReader stringReader4 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader4, (-270), 35);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader4, 5000, 5000);
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader2, 5000, 324);
      JavaCharStream javaCharStream4 = new JavaCharStream(stringReader3, 5000, (-1019));
      JavaCharStream javaCharStream5 = new JavaCharStream(stringReader4, (-1271), 4389);
      JavaCharStream javaCharStream6 = new JavaCharStream(stringReader1, 35, 11);
      JavaCharStream javaCharStream7 = new JavaCharStream(stringReader1, 35, (-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager1.ReInit(javaCharStream2);
      javaParserTokenManager1.ReInit(javaCharStream2);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream6);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager2.getNextToken();
      Token token0 = javaParserTokenManager2.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager2.SkipLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(5006, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.879800854626384
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6l[}m.%-$Zu/~1cG");
      StringReader stringReader1 = new StringReader("6l[}m.%-$Zu/~1cG");
      char[] charArray0 = new char[9];
      charArray0[0] = 'g';
      charArray0[1] = '_';
      charArray0[2] = '_';
      charArray0[3] = '_';
      charArray0[4] = '_';
      charArray0[5] = '!';
      charArray0[6] = '_';
      charArray0[7] = '_';
      charArray0[8] = '!';
      stringReader0.read(charArray0);
      stringReader0.read(charArray0);
      StringReader stringReader2 = new StringReader("\"d-\"");
      StringReader stringReader3 = new StringReader(">rk> gFd&&");
      int int0 = JavaParserConstants.LONG;
      stringReader1.read(charArray0);
      stringReader3.read();
      stringReader1.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3, 42, 330);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-1), 34);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(36, javaCharStream1.getBeginColumn());
      
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      Token token1 = javaParserTokenManager0.jjFillToken();
      assertEquals("1", token1.toString());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.49523809523809526
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StringReader stringReader0 = new StringReader("v\"85%te`g.aG'");
      stringReader0.mark(19);
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 13.  Encountered: <EOF> after : \"\\\"85%te`g.aG\\'\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.582483256410045
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringReader stringReader0 = new StringReader("BWb((~:MUbE+$z/9C_2");
      StringReader stringReader1 = new StringReader("super");
      StringReader stringReader2 = new StringReader("?9):'^w2(`FW#QT&+A");
      stringReader1.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 44, 44);
      StringReader stringReader3 = new StringReader("void");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader3, 44, 115);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.ReInit(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token1 = new Token();
      javaParserTokenManager1.SkipLexicalActions(token1);
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.582483256410045
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*");
      StringReader stringReader1 = new StringReader("\"assert\"");
      StringReader stringReader2 = new StringReader("-`=*qY8wmVJv346d");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 24, 1181);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-396), (-396));
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, (-396), 451);
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader2);
      JavaCharStream javaCharStream4 = new JavaCharStream(stringReader2);
      JavaCharStream javaCharStream5 = new JavaCharStream(stringReader2);
      JavaCharStream javaCharStream6 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream6);
      javaCharStream5.ReInit((Reader) stringReader2, (-1554), (-690));
      JavaCharStream javaCharStream7 = new JavaCharStream(stringReader0, 25, 43);
      javaParserTokenManager0.ReInit(javaCharStream4);
      JavaCharStream javaCharStream8 = new JavaCharStream(stringReader2, 377, 26);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream8);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"`\" (96), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.8814399921878517
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringReader stringReader0 = new StringReader("goto");
      StringReader stringReader1 = new StringReader("mVz");
      StringReader stringReader2 = new StringReader("92-DD.tBbj^3RnOgw:");
      StringReader stringReader3 = new StringReader("FKy&;by*^)<!6");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 5000, (-3583));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1958), (-1));
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, (-1150), 50);
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader2, (-3135), 33);
      JavaCharStream javaCharStream4 = new JavaCharStream(stringReader3, 5000, (-1));
      JavaCharStream javaCharStream5 = new JavaCharStream(stringReader0, (-2031), (-1150));
      JavaCharStream javaCharStream6 = new JavaCharStream(stringReader2, (-1), 11);
      JavaCharStream javaCharStream7 = new JavaCharStream(stringReader0, (-1958), 1087);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream7);
      javaParserTokenManager1.ReInit(javaCharStream6);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager2.ReInit(javaCharStream6);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager2.getNextToken();
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream5);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager2.getNextToken();
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
      Token token0 = Token.newToken(0);
      javaParserTokenManager0.SkipLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager4 = null;
      try {
        javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream1, (-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.587973990795769
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<LETTER>");
      stringReader0.mark(1154);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("volatile");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 3, 1712);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager1.getNextToken();
      assertEquals(6, javaCharStream1.bufpos);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      StringReader stringReader0 = new StringReader("6l[}m.%-$Zu/~1cG");
      char[] charArray0 = new char[4];
      charArray0[0] = '!';
      charArray0[1] = 'g';
      charArray0[2] = 'g';
      charArray0[3] = 'g';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("6l[}m.%-$Zu/~1cG");
      stringReader1.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 82, 1738);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.SkipLexicalActions(token0);
      assertEquals("m", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.585098775154596
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<DIGIT>");
      StringReader stringReader1 = new StringReader("^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2943, 79);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 95, 2943);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader2 = new StringReader("^");
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader1, 24, 1660);
      StringReader stringReader3 = new StringReader(".QH!&JfUtC1g/");
      JavaCharStream javaCharStream4 = new JavaCharStream(stringReader3, 95, 26);
      JavaCharStream javaCharStream5 = new JavaCharStream(stringReader1, (-192), (-923));
      StringReader stringReader4 = new StringReader("<DIGIT>");
      JavaCharStream javaCharStream6 = new JavaCharStream(stringReader4);
      JavaCharStream javaCharStream7 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream7);
      StringReader stringReader5 = new StringReader("<DIGIT>");
      JavaCharStream javaCharStream8 = new JavaCharStream(stringReader3, 43, 825);
      javaParserTokenManager0.ReInit(javaCharStream2);
      javaParserTokenManager1.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(88, token0.kind);
      assertEquals("<", token0.toString());
      assertEquals(1, token0.endColumn);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5857917758475968
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6l[}m.%-$Zu/~1cG");
      StringReader stringReader1 = new StringReader("6l[}m.%-$Zu/~1cG");
      char[] charArray0 = new char[2];
      charArray0[0] = 'g';
      charArray0[1] = '!';
      stringReader1.read(charArray0);
      stringReader1.read(charArray0);
      StringReader stringReader2 = new StringReader("true");
      StringReader stringReader3 = new StringReader("6l[}m.%-$Zu/~1cG");
      stringReader0.read(charArray0);
      stringReader1.read(charArray0);
      stringReader3.read();
      stringReader1.read();
      StringReader stringReader4 = new StringReader("6l[}m.%-$Zu/~1cG");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 2029, (-192));
      StringReader stringReader5 = new StringReader("6l[}m.%-$Zu/~1cG");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader5, (-1815), 34);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader3, 48, (-192));
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3);
      JavaCharStream javaCharStream4 = new JavaCharStream(stringReader3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      StringReader stringReader6 = new StringReader("6l[}m.%-$Zu/~1cG");
      JavaCharStream javaCharStream5 = new JavaCharStream(stringReader6, 48, 1132);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2029, token0.endLine);
      
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals("$Zu", token1.toString());
      assertEquals(74, token1.kind);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ve@uzcmwiF'QH*4");
      StringReader stringReader1 = new StringReader("I");
      char[] charArray0 = new char[9];
      charArray0[0] = 'g';
      charArray0[1] = '}';
      charArray0[2] = '!';
      charArray0[3] = '!';
      charArray0[4] = 'g';
      charArray0[5] = '!';
      charArray0[6] = '!';
      charArray0[7] = '!';
      charArray0[8] = 'i';
      stringReader0.read(charArray0);
      stringReader1.read(charArray0);
      StringReader stringReader2 = new StringReader("LOJ-D{h|,q]+| ");
      StringReader stringReader3 = new StringReader("6l[}m.%-$Zu/~1cG");
      char[] charArray1 = new char[9];
      charArray1[0] = 'i';
      charArray1[1] = 'L';
      charArray1[2] = 'g';
      charArray1[3] = 'g';
      charArray1[4] = '!';
      charArray1[5] = '!';
      charArray1[6] = 'i';
      charArray1[7] = 'g';
      charArray1[8] = '!';
      stringReader2.read(charArray1);
      stringReader3.read(charArray0);
      stringReader1.read();
      stringReader0.read();
      StringReader stringReader4 = new StringReader("u;y|s");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader4, 48, 43);
      StringReader stringReader5 = new StringReader("Ar-(V_cl+1p541--raH");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader5, (-1), 43);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1, 16, 29);
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader1, (-1), 1);
      JavaCharStream javaCharStream4 = new JavaCharStream(stringReader2);
      JavaCharStream javaCharStream5 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream4);
      JavaCharStream javaCharStream6 = new JavaCharStream(stringReader5, 74, 333);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("u", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.8775224312953291
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      StringReader stringReader0 = new StringReader("6l[}m.%-$Zu/~1cG");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 55, 15);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 7, 28);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 15, 55, 5000);
      javaParserTokenManager0.ReInit(javaCharStream2);
      Token token0 = javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      Token token1 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager2.SkipLexicalActions(token1);
      javaParserTokenManager2.TokenLexicalActions(token0);
      assertEquals(30, javaCharStream1.getBeginColumn());
      assertEquals(66, token0.kind);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.580093770149591
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<LETTER>");
      stringReader0.mark(1154);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("volatile");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 3, 1712);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1, 3);
      javaParserTokenManager1.SkipLexicalActions(token0);
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(88, token0.kind);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5888083670994821
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%2D*#1gaC^iU772jMB0");
      StringReader stringReader1 = new StringReader("FKy&;by*^)<!6");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5000, 5000);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 7, 533);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = new Token();
      stringReader0.skip(0);
      javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(5001, javaCharStream0.getBeginColumn());
      assertEquals(70, token1.kind);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.8790479843082963
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dnc{YV:}/PP");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5000, 5000);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 94, 94);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5786122886681095
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">>>=");
      StringReader stringReader1 = new StringReader(">>>=");
      StringReader stringReader2 = new StringReader(">>");
      StringReader stringReader3 = new StringReader("m Q/ZbKi]lAy.");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 124, 100);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader3, 1093, (-1));
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 12, 87);
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader2, 68, 258);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream4 = new JavaCharStream(stringReader1, 87, 2);
      JavaCharStream javaCharStream5 = new JavaCharStream(stringReader1, (-1824), 2206);
      javaParserTokenManager0.jjround = 660;
      javaParserTokenManager0.ReInit(javaCharStream5);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream2);
      assertFalse(javaParserTokenManager1.equals((Object)javaParserTokenManager0));
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.592118782174603
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FKy&;by*^)<!6");
      StringReader stringReader1 = new StringReader("v-I^c7@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 5000, 74);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 3878, 22);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.ReInit(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager2.getNextToken();
      javaParserTokenManager2.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(3, javaCharStream1.bufpos);
      assertEquals("&", token0.toString());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.580093770149591
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      StringReader stringReader0 = new StringReader("sqy?T<&#+w:0");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 40, 125);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("sqy", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*5Eba");
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)84);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)84, 44, 124);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 84, column 45.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("A", token0.toString());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.8815324563579858
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FKy&;by*^)<!6");
      StringReader stringReader1 = new StringReader("\"try\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1150), 5000);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token1);
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(74, token1.kind);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringReader stringReader0 = new StringReader("1&");
      char[] charArray0 = new char[9];
      charArray0[0] = 'g';
      charArray0[1] = 'g';
      charArray0[2] = '!';
      charArray0[3] = '!';
      charArray0[4] = 'g';
      charArray0[5] = 'g';
      charArray0[6] = '!';
      charArray0[7] = 'y';
      charArray0[8] = '!';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("--");
      char[] charArray1 = new char[0];
      stringReader0.read(charArray1);
      stringReader1.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, (-1314));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 45, 5);
      StringReader stringReader2 = new StringReader("/");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader1, (-1), (-1314));
      javaParserTokenManager0.ReInit(javaCharStream2);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(104, token0.kind);
      
      Token token1 = javaParserTokenManager0.getNextToken();
      assertNotNull(token1);
      
      javaParserTokenManager0.SkipLexicalActions(token1);
      assertEquals("", token1.toString());
      assertEquals(0, token1.kind);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5901377123969231
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringReader stringReader0 = new StringReader("~gX^h!^_-;h;M3p");
      StringReader stringReader1 = new StringReader("wQZ lWx%K<;}0%z7L");
      char[] charArray0 = new char[6];
      charArray0[0] = 'g';
      charArray0[1] = 'g';
      charArray0[2] = 'g';
      charArray0[3] = '!';
      charArray0[4] = '!';
      charArray0[5] = '!';
      stringReader1.read(charArray0);
      stringReader0.read(charArray0);
      StringReader stringReader2 = new StringReader("6l[}m.%-$Zu/~1cG");
      StringReader stringReader3 = new StringReader("6l[}m.%-$Zu/~1cG");
      stringReader2.read(charArray0);
      stringReader1.read(charArray0);
      stringReader2.read();
      stringReader2.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 6, (-1));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader3, 42, 45);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 63, (-1));
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader0, (-1), 63);
      JavaCharStream javaCharStream4 = new JavaCharStream(stringReader3);
      StringReader stringReader4 = new StringReader("");
      JavaCharStream javaCharStream5 = new JavaCharStream(stringReader4);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream4);
      JavaCharStream javaCharStream6 = new JavaCharStream(stringReader3, (-1), (-111));
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(6, token1.endLine);
      
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals("0", token0.toString());
      assertEquals(66, token0.kind);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.580093770149591
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"assert\"");
      StringReader stringReader1 = new StringReader("=0,m_Em:rK");
      StringReader stringReader2 = new StringReader("=0,m_Em:rK");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1181, (-396));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 112, (-1));
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 2091, 336);
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream4 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream5 = new JavaCharStream(stringReader2);
      JavaCharStream javaCharStream6 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream5);
      javaCharStream4.ReInit((Reader) stringReader1, 31, 45);
      JavaCharStream javaCharStream7 = new JavaCharStream(stringReader1, (-1597), 83);
      javaParserTokenManager0.ReInit(javaCharStream7);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream2);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream4);
      Token token0 = javaParserTokenManager2.getNextToken();
      assertEquals(0, javaCharStream4.bufpos);
      assertEquals(87, token0.kind);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.880918017033869
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FKy&;by*^)<!6");
      StringReader stringReader1 = new StringReader("3+d+");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 5000, 5000);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 5000, 123);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.ReInit(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager1.getNextToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.jjFillToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(124, javaCharStream1.getBeginColumn());
      assertEquals("+", token1.toString());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.8802702647343483
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5=dXqbsf'");
      StringReader stringReader1 = new StringReader("\"null\"");
      StringReader stringReader2 = new StringReader("5=dXqbsf'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (-1150), 46);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 523, 4961);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1, 35, (-1150));
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader0, 46, (-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream2);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals((-1150), token0.endLine);
      
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token1.kind);
      assertEquals("dXqbsf", token1.toString());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.582483256410045
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%2D*#1gaC^iU772jMB0");
      StringReader stringReader1 = new StringReader("FKy&;by*^)<!6");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5000, 5000);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 7, 533);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1, 0);
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager3.SkipLexicalActions(token_GTToken0);
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(533, javaCharStream1.getColumn());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5898403588435481
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e|j$*-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 125, (-2874));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.TokenLexicalActions((Token) null);
      assertEquals((-2872), javaCharStream0.getBeginColumn());
      assertEquals((-2871), javaCharStream0.getColumn());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader("long");
      char[] charArray0 = new char[5];
      charArray0[0] = '$';
      charArray0[1] = 'O';
      charArray0[2] = '(';
      charArray0[3] = 'S';
      charArray0[4] = '>';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("rjQ=ml2O33");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = Token.newToken((-1491));
      assertNull(token0.toString());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<<=");
      stringReader0.mark(63);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("egTi:ZIH");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 63, 111);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream1.bufpos);
      assertEquals(114, javaCharStream1.getColumn());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("long");
      StringReader stringReader1 = new StringReader("*5Eba");
      stringReader1.read();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)110;
      byteArray0[1] = (byte)125;
      byteArray0[2] = (byte)125;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)110, 3, (-2041));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("n", token0.toString());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.1803266677394324
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringReader stringReader0 = new StringReader("1&");
      stringReader0.mark(122);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager1.SwitchTo(41);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 41. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.4814814814814815
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader("qkvhq..@u");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 862, 29);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals(4, javaCharStream1.bufpos);
      assertEquals("qkvhq", token0.toString());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.580093770149591
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader("static");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2356, 107);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)32;
      byteArray0[1] = (byte)47;
      byteArray0[2] = (byte)93;
      byteArray0[4] = (byte)72;
      byteArray0[5] = (byte)120;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2356, (byte)93);
      try { 
        stringReader0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.692273073436779
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b");
      StringReader stringReader1 = new StringReader(">>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-240), (-1384));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(4095, javaCharStream0.bufpos);
      assertEquals(0, javaCharStream0.getLine());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringReader stringReader0 = new StringReader("byte");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[2];
      charArray0[0] = '#';
      charArray0[1] = 'K';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte byte0 = (byte)46;
      StringReader stringReader0 = new StringReader(")");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 194, 1228, 31);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%'aa?3ta");
      stringReader0.mark(169);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("@6u=@gTybb");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 102, 102);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals("%", token0.toString());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.580093770149591
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)45;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("['h*!otf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 24, 95);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      JavaCharStream.hexval('1');
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (byte)45, (byte)0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 24, column 98.  Encountered: \"*\" (42), after : \"\\'h\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5813709093577648
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringReader stringReader0 = new StringReader("s]m");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 364, 364);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1297, 83, 1070);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream1.bufpos);
      assertEquals(84, javaCharStream1.getEndColumn());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.Token$GTToken");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<FLOATING_POINT_LITERAL>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(88, token0.kind);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<EOF> ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 25);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("<", token0.toString());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)46, 0, (byte) (-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(".", token0.toString());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.4814814814814815
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FKy&;by*^)<!6");
      StringReader stringReader1 = new StringReader("FKy&;by*^)<!6");
      int int0 = 45;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)113;
      byteArray0[1] = (byte) (-82);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)113, 110);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      byteArrayInputStream0.read();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 113, column 112.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("`|:cG\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(106, token0.kind);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("K|sYyJ[");
      char[] charArray0 = new char[5];
      charArray0[0] = ':';
      charArray0[1] = ':';
      charArray0[2] = '3';
      charArray0[3] = '{';
      charArray0[4] = 'U';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 97, 97, 97);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.GetImage();
      javaParserTokenManager0.jjround = (-284);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = Token.newToken(0);
      token_GTToken0.specialToken = token0;
      Token token1 = token_GTToken0.specialToken;
      token0.beginColumn = 0;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token2 = javaParserTokenManager1.getNextToken();
      assertEquals(74, token2.kind);
      assertEquals("J", token2.toString());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ci{>*=/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      ByteArrayInputStream byteArrayInputStream0 = null;
      try {
        byteArrayInputStream0 = new ByteArrayInputStream((byte[]) null, 513, 1567);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"final\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("\"final\"");
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(31, token0.kind);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FKy&;by*^)<!6");
      StringReader stringReader1 = new StringReader("");
      char[] charArray0 = new char[2];
      charArray0[0] = '!';
      charArray0[1] = 'g';
      stringReader0.read(charArray0);
      StringReader stringReader2 = new StringReader("dyytG `9 %Q`U~a|RW");
      stringReader2.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (-1314), 42);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-2417), 95);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, 1448, (-2417));
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(74, token0.kind);
      assertEquals("y", token0.toString());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.4857142857142857
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringReader stringReader0 = new StringReader("K|sYyJ[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 97, 97, 97);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.GetImage();
      javaParserTokenManager0.jjround = (-284);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = Token.newToken(0);
      token_GTToken0.specialToken = token0;
      Token token1 = token_GTToken0.specialToken;
      token0.beginColumn = 0;
      javaParserTokenManager0.jjround = 25;
      token1.kind = (-2250);
      javaCharStream0.backup(0);
      javaParserTokenManager0.TokenLexicalActions(token1);
      Token token2 = javaParserTokenManager0.jjFillToken();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Token token3 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.TokenLexicalActions(token3);
      Token token4 = javaParserTokenManager0.jjFillToken();
      assertEquals("K", token4.toString());
      
      javaParserTokenManager0.SkipLexicalActions(token2);
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.SkipLexicalActions(token2);
      assertEquals("", token2.toString());
      assertEquals(0, token2.kind);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader("BWb((~:MUbE+$z/9C_2");
      stringReader0.mark(63);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("volatile");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 63, 63);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(7, javaCharStream1.bufpos);
      assertEquals(64, token0.kind);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("BWb((~:MUbE+$z/9C_2");
      stringReader0.mark(63);
      StringReader stringReader1 = new StringReader(".xwf7");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 26, 63, 894);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(65, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("long");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("long");
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.1796336670464318
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6l[}m.%-$Zu/~1cG");
      StringReader stringReader1 = new StringReader("6l[}m.%-$Zu/~1cG");
      char[] charArray0 = new char[9];
      charArray0[0] = 'g';
      charArray0[1] = '_';
      charArray0[2] = '_';
      charArray0[3] = '_';
      charArray0[4] = '_';
      charArray0[5] = '!';
      charArray0[6] = '_';
      charArray0[8] = '!';
      stringReader0.read(charArray0);
      stringReader0.read(charArray0);
      StringReader stringReader2 = new StringReader("\"-\"");
      StringReader stringReader3 = new StringReader(">rk> gFd&&");
      int int0 = JavaParserConstants.LONG;
      StringReader stringReader4 = new StringReader(">rk> gFd&&");
      stringReader4.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader4, 17, 9, 8);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(">", token0.toString());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.58641716671689
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("BWb((~:MUbE+$z/9C_2");
      StringReader stringReader1 = new StringReader("super");
      StringReader stringReader2 = new StringReader("?9):'^w2(`FW#QT&+A");
      stringReader1.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 28, 7);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 675, 28, 7);
      javaParserTokenManager0.ReInit(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.SkipLexicalActions(token0);
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(10, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.58641716671689
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StringReader stringReader0 = new StringReader("BWb((~:MUbE+$z/9C_2");
      StringReader stringReader1 = new StringReader("BWb((~:MUbE+$z/9C_2");
      char[] charArray0 = new char[9];
      charArray0[0] = 'J';
      charArray0[1] = 'J';
      charArray0[2] = 'o';
      charArray0[3] = 'J';
      charArray0[4] = '\"';
      charArray0[5] = '\"';
      charArray0[6] = '\"';
      charArray0[7] = '!';
      charArray0[8] = 'o';
      stringReader1.read(charArray0);
      StringReader stringReader2 = new StringReader("BWb((~:MUbE+$z/9C_2");
      stringReader2.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2514), (-899));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1, (-2514), (-1));
      javaParserTokenManager0.ReInit(javaCharStream2);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("bE", token0.toString());
      
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(1, token1.endColumn);
      assertEquals(101, token1.kind);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\t");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1138), 100);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, token0.kind);
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("V;^Iq2J?6'>#+<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)46, 60);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte)46, (byte)46);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("V", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("ZGG");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjround = (-1);
      javaCharStream0.GetImage();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)45;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)46, 0, (byte)45);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(".", token0.toString());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)46, 0, (byte)0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(85, token0.kind);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("long");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'g';
      charArray0[1] = 'g';
      charArray0[2] = 'J';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 42, 21);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 27, 27);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("g", token0.toString());
      
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(0, token1.kind);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.5786122886681095
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^]5?&ThK%1j]");
      stringReader0.mark(1363);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("^]5?&ThK%1j]");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 15, (-1029));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1, (byte) (-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.47619047619047616
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("NLMW~2@dN+3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 87, (-212), 80);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals((-209), javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.5786122886681095
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("long");
      StringReader stringReader1 = new StringReader("XX0\"B_RAe");
      StringReader stringReader2 = new StringReader("long");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 4. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("--");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.5857917758475968
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("MbOYx2Pd>7G QWFy");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      stringReader0.ready();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjmatchedKind = 19;
      javaCharStream0.ExpandBuff(false);
      javaParserTokenManager0.MoreLexicalActions();
      char[] charArray0 = new char[2];
      stringReader0.read(charArray0);
      javaParserTokenManager0.ReInit(javaCharStream0, 0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "MbOYx2Pd>7G QWFy");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      javaParserTokenManager0.MoreLexicalActions();
      stringReader0.read(charArray0, 0, 0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals("OYx2Pd", token0.toString());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dyytG `9 %Q`U~a|RW");
      char[] charArray0 = new char[3];
      charArray0[0] = 'g';
      charArray0[1] = 'J';
      charArray0[2] = '!';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("try");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1314), 42);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)112;
      byteArray0[1] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-2794), (byte)45, 16);
      char[] charArray0 = new char[1];
      charArray0[0] = 'F';
      javaCharStream0.nextCharBuf = charArray0;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.587973990795769
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("BWb((~:MUbE+$z/9C_2");
      stringReader0.mark(63);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.getNextToken();
      javaCharStream0.ReadByte();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Token token0 = javaParserTokenManager0.jjFillToken();
      token0.beginColumn = (-811);
      javaParserTokenManager0.getNextToken();
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-48);
      byteArray0[2] = (byte)16;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-101);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("~", token1.toString());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.4897959183673469
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Error: Ignoring invalid lexical state : ");
      String string0 = "\\u";
      StringReader stringReader1 = new StringReader(string0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-491), (-491), 125);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaCharStream0.readChar();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)19;
      byteArray0[1] = (byte)67;
      byteArray0[2] = (byte)33;
      byteArray0[3] = (byte) (-108);
      byteArray0[4] = (byte)115;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals("Ignoring", token0.toString());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("MbOYx2Pd>7G QWFy");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      stringReader0.ready();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjmatchedKind = 0;
      javaCharStream0.ExpandBuff(false);
      javaParserTokenManager0.MoreLexicalActions();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-178), (byte)13, 25);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(0, token0.kind);
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader("h:WW");
      StringReader stringReader1 = new StringReader("\t");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 2518, 2518);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 2518, 98, (-2129));
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-1), (-2129));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager0.getNextToken();
      javaCharStream2.maxNextCharInd = 2985;
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      assertEquals(1, javaCharStream2.bufpos);
      assertEquals((-1), javaCharStream2.getEndLine());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      String string0 = "\\u";
      StringReader stringReader0 = new StringReader(string0);
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Invalid escape character at line 1 column 2.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")m'J7h.)%H4");
      StringReader stringReader1 = new StringReader("\":\"");
      StringReader stringReader2 = new StringReader("k~JQM!5$YA$I+");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 76, 76);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 2484, 76);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.ReInit(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(74, token0.kind);
      assertEquals("k", token0.toString());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("default");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 43, 100);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1138), (-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(106, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)90;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)46);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)46, 0, (byte)90);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(".", token0.toString());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      String string0 = "\\u";
      StringReader stringReader0 = new StringReader(string0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)112;
      byteArray0[2] = (byte)46;
      byteArray0[3] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)46, (byte)45, (byte)45);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(85, token0.kind);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "K?");
      StringReader stringReader0 = new StringReader("6l[}m.%-$Zu/~1cG");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)122;
      byteArray0[1] = (byte) (-110);
      byteArray0[2] = (byte) (-58);
      byteArray0[3] = (byte) (-53);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader1 = new StringReader("6l[}m.%-$Zu/~1cG");
      char[] charArray0 = new char[2];
      charArray0[0] = 'g';
      charArray0[1] = '!';
      stringReader1.read(charArray0);
      stringReader1.read(charArray0);
      StringReader stringReader2 = new StringReader("true");
      StringReader stringReader3 = new StringReader("true");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(61, token0.kind);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringReader stringReader0 = new StringReader("public");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(49, token0.kind);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.48000000000000004
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("Error: Ignoring invalid lexical state : ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 125, 44, 44);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(3044);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 3044. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("private");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      ByteArrayInputStream byteArrayInputStream0 = null;
      try {
        byteArrayInputStream0 = new ByteArrayInputStream((byte[]) null, 513, 1567);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader("assert");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(6, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.1779956654084303
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("instanceof");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals("instanceof", token0.toString());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringReader stringReader0 = new StringReader("synchronized");
      StringReader stringReader1 = new StringReader("synchronized");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(11, javaCharStream0.bufpos);
      assertEquals(56, token0.kind);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader("s]m");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.5722964991944255
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("MbOYx2Pd>7G QWFy");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      StringReader stringReader1 = new StringReader("\")\"");
      StringReader stringReader2 = new StringReader("S3^k(N#t&xdoY@Ity");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 76, 4262);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 61, 97);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      StringReader stringReader3 = new StringReader(", column ");
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3, 76, 61);
      javaParserTokenManager0.ReInit(javaCharStream3);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(61, token0.endColumn);
      assertEquals(84, token0.kind);
      assertEquals(",", token0.toString());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.1803266677394324
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("long");
      StringReader stringReader1 = new StringReader("*5Eba");
      stringReader1.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjround = 42;
      javaParserTokenManager0.getNextToken();
      Token token0 = Token.newToken(1);
      assertEquals(0, token0.beginLine);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      StringReader stringReader0 = new StringReader("R2?+k.ERO~n7WI'1wW");
      char[] charArray0 = new char[3];
      charArray0[0] = 'i';
      charArray0[1] = 'e';
      charArray0[2] = 'l';
      stringReader0.read(charArray0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringReader stringReader0 = new StringReader("R%$f9r");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals(74, token0.kind);
      assertEquals("R", token0.toString());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p}oj !vaXnB)+\"-&$b");
      StringReader stringReader1 = new StringReader("\":\"");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-7);
      byteArray0[1] = (byte)89;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1527), (-2110), 25);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -1527, column -2110.  Encountered: \"\\ufffd\" (65533), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringReader stringReader0 = new StringReader("G6.puKp&bT%&|5X_");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.1803266677394324
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("BWb((~:MUbE+$z/9C_2");
      StringReader stringReader1 = new StringReader("BWb((~:MUbE+$z/9C_2");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.MoreLexicalActions();
      javaParserTokenManager1.SkipLexicalActions(token0);
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("}nh,+9t>vbEw3&l+");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("}", token0.toString());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dyytG `9 %Q`U~a|RW");
      StringReader stringReader1 = new StringReader("dyytG `9 %Q`U~a|RW");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)45;
      byteArray0[1] = (byte)112;
      byteArray0[2] = (byte)112;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 39, (byte)45, 886);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("-", token0.toString());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StringReader stringReader0 = new StringReader("protected");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      char[] charArray0 = new char[4];
      charArray0[0] = '?';
      charArray0[1] = 'C';
      charArray0[2] = '4';
      charArray0[3] = '%';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-498), (-652), 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(5, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.8751832500087795
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte)25;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)20;
      byteArray0[0] = (byte)6;
      byteArray0[4] = (byte)28;
      byteArray0[5] = (byte)111;
      StringReader stringReader0 = new StringReader("!*c.&T!I");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)6, (byte)111);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 595);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 595. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!a2G+6BM|D;.");
      StringReader stringReader1 = new StringReader("!a2G+6BM|D;.");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(89, token0.kind);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StringReader stringReader0 = new StringReader("protected");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(8, javaCharStream0.bufpos);
      assertEquals(48, token0.kind);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("protected");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)45;
      byteArray0[1] = (byte)112;
      byteArray0[2] = (byte)11;
      byteArray0[3] = (byte)112;
      byteArray0[4] = (byte)45;
      byteArray0[5] = (byte)112;
      byteArray0[6] = (byte)45;
      byteArray0[7] = (byte)112;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, 81, (-1880), (byte)45);
      int[] intArray0 = new int[8];
      intArray0[0] = (-416);
      intArray0[1] = (-1);
      intArray0[2] = (int) (byte)112;
      intArray0[3] = (int) (byte)112;
      intArray0[4] = (-1880);
      intArray0[5] = 1777;
      intArray0[6] = (int) (byte)11;
      intArray0[7] = (int) (byte)45;
      javaCharStream0.bufcolumn = intArray0;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.48000000000000004
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ZGG");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      StringReader stringReader1 = new StringReader("ZGG");
      stringReader1.reset();
      Token.newToken((-3089));
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.next;
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.SwitchTo(3);
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.1796336670464318
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)46;
      StringReader stringReader0 = new StringReader("48w3B`!3IDc>5^j");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaCharStream0.bufline = javaParserTokenManager0.jjnewLexState;
      Token token0 = Token.newToken((-2160));
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.880547234683109
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("MbOYx2Pd>7G QWFy");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2139, 2139);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("dn(L$~MunR");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 24, (-1));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit((JavaCharStream) null);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager1.SkipLexicalActions(token0);
      assertEquals(9, javaCharStream0.bufpos);
      assertEquals(2148, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"/=\"");
      stringReader0.mark(787);
      StringReader stringReader1 = new StringReader("nORu6C");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      StringReader stringReader2 = new StringReader("nORu6C");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 83, (-211));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals("nORu6C", token0.toString());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-596), (byte)46, (-596));
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-596), (byte)46, 66);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(85, token0.kind);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.1833432589913178
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StringReader stringReader0 = new StringReader("MbOYx2Pd>7G QWFy");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      stringReader0.ready();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjmatchedKind = 0;
      javaCharStream0.ExpandBuff(false);
      javaParserTokenManager0.MoreLexicalActions();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)17;
      byteArray0[1] = (byte)17;
      byteArray0[2] = (byte)17;
      byteArray0[3] = (byte)17;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)17);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte)17, (-2346));
      pushbackInputStream0.available();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(8, javaCharStream0.bufpos);
      assertEquals(8, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\":\"");
      char[] charArray0 = new char[3];
      charArray0[0] = 'q';
      charArray0[1] = 'w';
      charArray0[2] = 'o';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = null;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.ReInit((JavaCharStream) null, 3);
      javaParserTokenManager0.MoreLexicalActions();
      // Undeclared exception!
      try { 
        stringReader0.read(charArray0, 3, (-1830));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.1796336670464318
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!a2G+6BM|D;.");
      StringReader stringReader1 = new StringReader("8fp,XV9>;2\"m4T");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("ZGG");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte)49;
      byteArray0[2] = (byte)47;
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte) (-125);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 6, 27, (byte)47);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream1.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5=dXqbsf'");
      StringReader stringReader1 = new StringReader("\"null\"");
      StringReader stringReader2 = new StringReader("5=dXqbsf'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (-1150), 46);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 523, 4961);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1, 35, (-1150));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals("5", token0.toString());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\f.al?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("\f.al?");
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      int[] intArray0 = new int[0];
      javaCharStream0.bufcolumn = intArray0;
      javaParserTokenManager0.TokenLexicalActions((Token) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("byte");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(17, token0.kind);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*5Eba");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(103, token0.kind);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e|j$*-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("e", token0.toString());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)45;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)45, (-1339));
      javaCharStream0.prevCharIsLF = true;
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals("-", token0.toString());
      assertEquals(102, token0.kind);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StringReader stringReader0 = new StringReader("MbOYx2Pd>7G QWFy");
      StringReader stringReader1 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals(85, token0.kind);
      assertEquals(".", token0.toString());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\":\"");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(25);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 25. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)21;
      byteArray0[1] = (byte)45;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)45, 29, (-1461));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 45, column 29.  Encountered: \"\\u0015\" (21), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StringReader stringReader0 = new StringReader("synchronized");
      StringReader stringReader1 = new StringReader("synchronized");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.curLexState = 96;
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d2<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" Q?qi7%.E");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=0.4827586206896552
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p}oj !vaXnB)+\"-&$b");
      StringReader stringReader1 = new StringReader("\":\"");
      StringReader stringReader2 = new StringReader("\"]\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = Token.newToken(73);
      assertEquals(0, token0.endLine);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=0.48000000000000004
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte) (-66);
      byteArray0[2] = (byte) (-93);
      byteArray0[3] = (byte) (-99);
      byteArray0[4] = (byte)73;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("p}oj !vaXnB)+\"-&$b");
      StringReader stringReader1 = new StringReader("\":\"");
      StringReader stringReader2 = new StringReader("\"]\"");
      StringReader stringReader3 = new StringReader("\"]\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3, 76, 12);
      int[] intArray0 = new int[2];
      intArray0[0] = (int) (byte) (-66);
      intArray0[1] = (int) (byte) (-66);
      javaCharStream0.bufcolumn = intArray0;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("X", token0.toString());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      int int0 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.SwitchTo(0);
      javaCharStream0.ExpandBuff(false);
      Token token0 = new Token();
      javaParserTokenManager0.curLexState = 0;
      token0.endColumn = 0;
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.SwitchTo(0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit((JavaCharStream) null, 154);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 154. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 143
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3208);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 3208, 3208, 3208);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo((-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      StringBuffer stringBuffer0 = new StringBuffer();
      javaParserTokenManager0.image = stringBuffer0;
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream);
      javaParserTokenManager0.setDebugStream(mockPrintStream0);
  }
}
