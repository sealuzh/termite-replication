/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 17:40:21 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SyncFailedException;
import java.net.URI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.0533214504847934
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ(0.0F);
      player0.setConnected(false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.id = (-726);
      player0.setDead((-1L));
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      player0.type();
      player0.type();
      player0.getZ();
      player0.pack();
      Player player1 = new Player(5, "QN|~#", "QN|~#", (short)4919, (short)4919);
      player0.isJoinOK(player1, true);
      System.setCurrentTimeMillis((-2648L));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      int int0 = (-826);
      Player player0 = new Player((-826), (String) null, (String) null, (-826), (-767));
      player0.getIP();
      player0.setMoney((-826));
      URI uRI0 = MockURI.create("0.0.0.0");
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI is not absolute
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4986122886681095
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-957), 3);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Party party0 = new Party();
      Player player0 = new Player(3342, "3f`*u_", 3342);
      player0.setMoney(2523.616F);
      player0.getTimeOfDeath();
      player0.getName();
      player0.getSubparty();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte) (-81);
      player0.setX((-2301.0F));
      byteArray0[3] = (byte)117;
      byteArray0[4] = (byte)117;
      byteArray0[5] = (byte)117;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)10;
      byteArray0[8] = (byte)117;
      player0.getX();
      player0.pack();
      player0.pack();
      assertEquals(2523.616F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(2824, "LF]", "LF]", 3028, 0);
      int int0 = player0.gangStrength();
      assertEquals(0, int0);
      
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      player0.pack();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(3028, player0.getPictureId());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)15;
      byteArray0[2] = (byte)15;
      Player player0 = new Player((byte)15, "moduleModuleBrowserDialog$ModuleFilter", (byte)15);
      Party party0 = new Party((byte)15);
      player0.boss = party0;
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(31795);
      Player player1 = new Player((short)4919);
      player0.setJoinOK(player1, true);
      Player player2 = new Player((short)4919);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(1, player1.getStrength());
      assertEquals("0.0.0.0", player1.getIP());
      assertFalse(boolean0);
      assertTrue(player1.isConnected());
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals("Player4919", player1.toString());
      assertEquals(0, player1.getPictureId());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.124771615329544
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(434);
      player0.setDead();
      player0.setConnected(false);
      player0.setZ((-896.8895F));
      player0.isConnected();
      player0.getSubparty();
      player0.gangStrength();
      player0.pack();
      player0.add((Party) null);
      player0.setY(0.0F);
      player0.setDead(0L, false);
      player0.getY();
      player0.getY();
      player0.setMoney(1.0F);
      player0.toString();
      player0.add((Party) null);
      float float0 = player0.getMoney();
      assertEquals(1.0F, float0, 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player((-4201));
      player0.setDead();
      player0.setConnected(true);
      player0.setZ((-4201));
      player0.getSubparty();
      player0.gangStrength();
      player0.pack();
      player0.add((Party) null);
      player0.setY(1.0F);
      Player player1 = new Player((short)4919, " ", (short)4919);
      player1.setDead((long) (-4201), false);
      player1.getY();
      float float0 = player0.getY();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(1.0F, float0, 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(13107, (String) null, 30464);
      Party party0 = new Party();
      Party party1 = new Party();
      player0.setMoney(117.4465F);
      player0.getTimeOfDeath();
      player0.getName();
      assertEquals(117.4465F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(0, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "module.ModuleBrowserDialog$ModuleFilter", 0);
      player0.setX(0);
      player0.getTimeOfDeath();
      int int0 = Packable.ACTION;
      Player player1 = new Player((-1046), "module.ModuleBrowserDialog$ModuleFilter", (short)4919);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-81);
      byteArray0[3] = (byte) (-22);
      byteArray0[4] = (byte) (-22);
      byteArray0[5] = (byte)124;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 2);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      player1.unpack(dataInputStream0);
      assertEquals(4, byteArrayInputStream0.available());
      
      System.setCurrentTimeMillis(2);
      float float0 = player0.getX();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(573);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-100);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream1);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      player0.unpack(dataInputStream1);
      DataInputStream dataInputStream2 = new DataInputStream(byteArrayInputStream1);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(31232, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "Ek[Jv~f", 1);
      player0.setX((-1.0F));
      player0.pack();
      Party party0 = new Party();
      Party party1 = player0.next;
      player0.remove((Party) null);
      player0.setX(1341.888F);
      assertEquals(1341.888F, player0.getX(), 0.01F);
      
      Player player1 = new Player(5, "{_$6", "{_$6", (-1382), (-833));
      int int0 = player1.getStrength();
      assertEquals((-833), int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.786456060735981
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(1820, " ", 1820);
      Party party0 = new Party();
      party0.boss = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      party0.next = null;
      player0.setDead((long) 3, false);
      player0.getSubparty();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.setJoinOK(player0, true);
      player0.setJoinOK(player0, false);
      player0.setZ(1820);
      player0.gangStrength();
      player0.isDead();
      player0.getX();
      player0.pack();
      player0.getZ();
      System.setCurrentTimeMillis(1);
      boolean boolean0 = player0.isDead();
      assertEquals(1820.0F, player0.getZ(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-67);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-77);
      byteArray0[3] = (byte) (-15);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)3;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)10;
      byteArray0[2] = (byte) (-92);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Player player1 = new Player((short)4919, "", 2578);
      player1.unpack(dataInputStream0);
      assertEquals(7, byteArrayInputStream0.available());
      
      player1.toString();
      player0.getTimeOfDeath();
      player0.getIP();
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.26147761112867
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player((-4201));
      player0.setDead();
      player0.setConnected(false);
      player0.setZ((-896.8895F));
      player0.isConnected();
      player0.getSubparty();
      int int0 = Packable.ACTION;
      player0.pack();
      player0.add((Party) null);
      player0.setY((-4201));
      player0.setDead((-2096L), false);
      player0.getY();
      player0.getY();
      player0.setMoney((-4201));
      player0.toString();
      player0.add((Party) null);
      player0.getMoney();
      Player player1 = new Player(4919, "xaTLYb", 2100);
      player0.gangStrength();
      player1.getStrength();
      player1.isDead();
      // Undeclared exception!
      try { 
        player1.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(3342, "", (-1104));
      player0.setMoney(367.71042F);
      player0.getTimeOfDeath();
      player0.getName();
      assertEquals(367.71042F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Party party0 = new Party();
      Player player0 = new Player(0, "gui.ModuleBrowserDialog$ModuleFilter", "", 0, 0);
      player0.head = party0;
      player0.prev = party0;
      int int0 = player0.getStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("gui.ModuleBrowserDialog$ModuleFilter", player0.getIP());
      assertEquals(0, int0);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(2849, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", 0);
      player0.setX(0);
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.789071579480532
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(4919, ";M(?53T.X`+", 4919);
      Player player1 = new Player(1, "np Ta=H~>", 2789);
      player0.head = (Party) player1;
      player1.setZ(0.2F);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)69;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)93;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)46;
      byteArray0[5] = (byte)7;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)83;
      byteArray0[8] = (byte) (-97);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player2 = new Player(2789, "np Ta=H~>", "", 3790);
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-23);
      byteArray1[1] = (byte) (-88);
      player1.pack();
      player2.unpack(byteArray1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.setJoinOK(player2, true);
      player0.gangStrength();
      player0.getTimeOfDeath();
      player0.getTimeOfDeath();
      int int0 = player1.gangStrength();
      assertEquals(0.2F, player1.getZ(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-80);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DataInputStream dataInputStream2 = new DataInputStream(dataInputStream0);
      dataInputStream0.readBoolean();
      DataInputStream dataInputStream3 = new DataInputStream(dataInputStream1);
      Player player0 = new Player((byte)0, "", "m", 165);
      boolean boolean0 = player0.isDead();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(165, player0.getPictureId());
      assertEquals("", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertFalse(boolean0);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)15;
      byteArray0[2] = (byte)15;
      byteArray0[4] = (byte)15;
      byteArray0[5] = (byte)55;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Player player0 = new Player((byte)55);
      player0.reset(true);
      player0.pack();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player55", player0.toString());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player((-4201));
      player0.setDead();
      player0.setConnected(true);
      player0.setZ((short)4919);
      player0.getSubparty();
      player0.gangStrength();
      player0.pack();
      player0.add((Party) null);
      player0.setY((-1373.1F));
      player0.setDead(0L, false);
      float float0 = Player.MOVE_DISTANCE;
      player0.getY();
      player0.setMoney((-2096L));
      player0.getIP();
      assertEquals(4919.0F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(0, "Player.unpack(): *** WARNING *** data is not of proper type!", (String) null, 0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)66;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-84);
      byteArray0[4] = (byte)126;
      player0.unpack(byteArray0);
      Player player1 = new Player((short)4919, (String) null, "gui.ModuleBrowserDialog$ModuleFilter", 0);
      player0.setZ(0);
      player0.remove(player1);
      assertEquals(0, player1.getPictureId());
      
      player0.toString();
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getZ(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(94, ".*[.]class$", ".*[.]class$", (-219), (-219));
      player0.pack();
      assertTrue(player0.isConnected());
      assertEquals((-219), player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals((-219), player0.getPictureId());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player((-4201), "AQ|]2zO[VKi{", (-312));
      player0.setZ((-4201));
      player0.getIP();
      byte[] byteArray0 = new byte[6];
      player0.gangStrength();
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-22);
      Party party0 = new Party();
      player0.remove(party0);
      player0.setX((-4201));
      player0.getStrength();
      player0.setY((byte)31);
      player0.toString();
      assertEquals((-4201.0F), player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(2000);
      player0.setDead(92L);
      player0.pack();
      player0.getTimeOfDeath();
      player0.getIP();
      long long0 = player0.getTimeOfDeath();
      assertEquals(92L, long0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(28, byteArrayOutputStream0.size());
      
      player0.pack();
      assertEquals("Player0", player0.getName());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player((-4201), "AQ|]2zO[VKi{", (-312));
      player0.setZ((-4201));
      player0.gangStrength();
      player0.getIP();
      byte[] byteArray0 = new byte[6];
      player0.gangStrength();
      byteArray0[0] = (byte)0;
      player0.getPictureId();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("AQ|]2zO[VKi{");
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player((-1), (String) null, (-1));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)15;
      byteArray0[4] = (byte)15;
      byteArray0[5] = (byte)117;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)55;
      byteArray0[8] = (byte)55;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readBoolean();
      DataInputStream dataInputStream2 = new DataInputStream(dataInputStream0);
      DataInputStream dataInputStream3 = new DataInputStream(dataInputStream0);
      Player player0 = new Player(613, "moduleModuleBrowserDialog$ModuleFilter", "moduleModuleBrowserDialog$ModuleFilter", 31833);
      player0.isConnected();
      Player player1 = new Player((-298), "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", (byte) (-1));
      boolean boolean0 = player1.unpack(dataInputStream2);
      assertEquals(6, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".*[.]class$");
      Player player0 = new Player((-1336));
      player0.reset(false);
      String string0 = player0.getIP();
      assertEquals("0.0.0.0", string0);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-1336", player0.getName());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(4919, "", (String) null, 0, (-152));
      int int0 = player0.getPictureId();
      assertEquals((-152), player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Party party0 = new Party();
      Player player0 = new Player(2849, "gui.ModuleBrowserDialog$ModuleFilter", "", 2849, 2849);
      player0.head = party0;
      player0.prev = party0;
      int int0 = player0.getStrength();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("gui.ModuleBrowserDialog$ModuleFilter", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(2849, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(2849, int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(31795);
      Player player1 = new Player((short)4919);
      player0.setJoinOK(player1, false);
      Player player2 = new Player((short)4919);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(0, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(boolean0);
      assertEquals("Player4919", player1.getName());
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player((-4713), "oRNX<0SAR]8AvuhtV'K", "module.ModuleBrowserDialog$ModuleFilter", 688, 4029);
      int int0 = player0.getPictureId();
      assertFalse(player0.isDead());
      assertEquals(4029, player0.getStrength());
      assertEquals("oRNX<0SAR]8AvuhtV'K", player0.getIP());
      assertEquals(688, int0);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player(794);
      long long0 = player0.getTimeOfDeath();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player794", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player((-1));
      Player player1 = new Player((-1));
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals("Player-1", player1.toString());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0, player1.getPictureId());
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int int0 = (-487);
      Player player0 = new Player((-487));
      Player player1 = null;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(0);
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      String string0 = player0.getName();
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player0", string0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player((-1327));
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(540);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      mockFileInputStream0.release();
      Party party0 = player0.gangBoss();
      player0.prev = party0;
      player0.setX((-3369.815F));
      try { 
        fileDescriptor0.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(true);
      player0.setX((-1125.4689F));
      player0.reset(true);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player(3);
      int int0 = player0.type();
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(5, int0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("Player3", player0.getName());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player(1710, "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", 1710, 1710);
      int int0 = player0.gangStrength();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1710, int0);
      assertEquals(1710, player0.getPictureId());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player((-2301), ",&t(X$B*x3W|TD", "state.Party", 2045, (-78));
      player0.setConnected(false);
      player0.gangStrength();
      player0.gangStrength();
      float float0 = player0.getY();
      assertFalse(player0.isConnected());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-64);
      byteArray0[1] = (byte) (-22);
      byteArray0[2] = (byte) (-22);
      byteArray0[3] = (byte) (-22);
      byteArray0[4] = (byte) (-22);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Player player0 = new Player(0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(3, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)124;
      byteArray0[1] = (byte)89;
      byteArray0[2] = (byte)89;
      byteArray0[3] = (byte)89;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Player player0 = new Player((byte)0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(2, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player(301);
      PipedInputStream pipedInputStream0 = new PipedInputStream((short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(boolean0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player301", player0.toString());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player(0);
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals("Player0", player0.getName());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
  }
}
