/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 18:10:54 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.DataOutputStream;
import java.io.File;
import java.io.OutputStream;
import java.io.PipedReader;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.sql.SQLException;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import javax.sql.ConnectionPoolDataSource;
import org.apache.derby.diag.ErrorMessages;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.sql.dictionary.GenericDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.apache.derby.impl.sql.GenericLanguageFactory;
import org.apache.derby.impl.sql.conn.GenericLanguageConnectionFactory;
import org.apache.derby.impl.sql.execute.ConstantActionActivation;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBNotNullConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.h2.jdbcx.JdbcConnectionPool;
import org.h2.jdbcx.JdbcDataSource;
import org.hsqldb.lib.FileUtil;
import org.hsqldb.rowio.RowOutputText;
import org.hsqldb.rowio.RowOutputTextQuoted;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      SQLUtil.isProcedureCall("freate m5te");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "freate m5te";
      stringArray0[1] = "freate m5te";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray1 = new String[8];
      stringArray1[0] = "USAGE";
      stringArray1[1] = "USAGE";
      stringArray1[2] = "execigp]<q?;r&#w";
      stringArray1[3] = "freate m5te";
      stringArray1[4] = "USAGE";
      stringArray1[5] = "USAGE";
      stringArray1[6] = "freate m5te";
      stringArray1[7] = "freate m5te = 'freate m5te' AND freate m5te = 'freate m5te'";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("USAGE", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray1);
      NameSpec nameSpec0 = NameSpec.NEVER;
      RowOutputTextQuoted rowOutputTextQuoted0 = new RowOutputTextQuoted("freate m5te", "USAGE", "freate m5te = 'freate m5te' AND freate m5te = 'freate m5te'", false, "create table");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(rowOutputTextQuoted0);
      Locale locale0 = Locale.US;
      PrintWriter printWriter0 = mockPrintWriter0.printf(locale0, "freate m5te", (Object[]) stringArray0);
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, printWriter0);
      assertSame(mockPrintWriter0, printWriter0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("z9itmw&SAqYzo");
      DBDataType dBDataType0 = DBDataType.getInstance((-1404), "z9itmw&SAqYzo");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("z9itmw&SAqYzo", defaultDBTable0, dBDataType0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "z9itmw&SAqYzo";
      stringArray0[1] = "z9itmw&SAqYzo";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("eL%.i", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("eL%.i");
      PrintWriter printWriter0 = mockPrintWriter0.format("z9itmw&SAqYzo", (Object[]) stringArray0);
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, printWriter0);
      assertFalse(dBForeignKeyConstraint0.isNameDeterministic());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DBDataType.getInstance((-373), "delete");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      Integer integer0 = new Integer((-373));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn((String) null, defaultDBTable0, (-510), "");
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("0&?e%ppH1}; 4(0");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: 0&?e%ppH1}; 4(0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("z9itmw&SAqYzo");
      DBDataType dBDataType0 = DBDataType.getInstance((-1431), "z9itmw&SAqYzo");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("z9itmw&SAqYzo", defaultDBTable0, dBDataType0);
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      SQLUtil.renderColumnNames(dBColumnArray0);
      DBNotNullConstraint dBNotNullConstraint0 = new DBNotNullConstraint(defaultDBTable0, "alter maerialized view", true, "z9itmw&SAqYzo");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.constraintSpec(dBNotNullConstraint0, nameSpec0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "alter maerialized view";
      stringArray0[1] = "z9itmw&SAqYzo NOT NULL";
      stringArray0[2] = "z9itmw&SAqYzo";
      stringArray0[3] = "z9itmw&SAqYzo";
      stringArray0[4] = "z9itmw&SAqYzo";
      stringArray0[5] = "z9itmw&SAqYzo NOT NULL";
      stringArray0[6] = "z9itmw&SAqYzo NOT NULL";
      // Undeclared exception!
      try { 
        defaultDBTable0.getForeignKeyConstraint(stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table 'z9itmw&SAqYzo' has no foreign key with the columns (alter maerialized view, z9itmw&SAqYzo NOT NULL, z9itmw&SAqYzo, z9itmw&SAqYzo, z9itmw&SAqYzo, z9itmw&SAqYzo NOT NULL, z9itmw&SAqYzo NOT NULL)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "alter tablealter maerialized view";
      stringArray0[1] = "alter tablealter maerialized view";
      stringArray0[2] = "alter tablealter maerialized view";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "alter tablealter maerialized view", false, stringArray0);
      dBPrimaryKeyConstraint0.setDoc("sele");
      columnDescriptorList0.add((Object) dBPrimaryKeyConstraint0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.databene.jdbacl.model.DBPrimaryKeyConstraint cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("(j0zx");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (j0zx
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      SQLUtil.removeComments("EQG-(pNW*)`p#");
      String string0 = SQLUtil.normalize("EQG-(pNW*)`p#", false);
      assertEquals("EQG  - (pNW *) ` p #", string0);
      
      String string1 = SQLUtil.normalize("*/", false);
      assertEquals("*/", string1);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("$H^~jUC9FeX@em2K;D]");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "$H^~jUC9FeX@em2K;D]";
      stringArray0[1] = "$H^~jUC9FeX@em2K;D]";
      stringArray0[2] = "$H^~jUC9FeX@em2K;D]";
      stringArray0[3] = "$H^~jUC9FeX@em2K;D]";
      stringArray0[4] = "$H^~jUC9FeX@em2K;D]";
      stringArray0[5] = "$H^~jUC9FeX@em2K;D]";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "$H^~jUC9FeX@em2K;D]", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("$H^~jUC9FeX@em2K;D]", true, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(dBTable0, (String) null, false, stringArray0);
      String string0 = SQLUtil.typeAndName(dBPrimaryKeyConstraint0);
      assertEquals("unique constraint constraint", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("desete");
      assertFalse(boolean0);
      
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint((String) null, false, "desete", "desete");
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CHECK desete", string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("z9itmw&SAqYzo");
      DBDataType dBDataType0 = DBDataType.getInstance((-1404), "z9itmw&SAqYzo");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("z9itmw&SAqYzo", defaultDBTable0, dBDataType0);
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      SQLUtil.renderColumnNames(dBColumnArray0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize(dBColumnArray0[0], (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("[`date");
      DBDataType dBDataType0 = DBDataType.getInstance(523, "truncate");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("[`date", defaultDBTable0, dBDataType0);
      defaultDBColumn0.getForeignKeyConstraint();
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      JdbcConnectionPool jdbcConnectionPool0 = JdbcConnectionPool.create((ConnectionPoolDataSource) jdbcDataSource0);
      jdbcConnectionPool0.getLogWriter();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "[`date";
      stringArray0[1] = "[`date";
      stringArray0[2] = "[`date";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("[`date", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.chars();
      SQLUtil.addOptionalCondition("alter tablev@wn", stringBuilder0);
      assertEquals("alter tablev@wn", stringBuilder0.toString());
      
      TableContainer tableContainer0 = new TableContainer("");
      String string0 = SQLUtil.ownerDotComponent(tableContainer0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("rename", defaultDBTable0, 2, "SET ");
      StringBuilder stringBuilder0 = new StringBuilder(">");
      stringBuilder0.append(2);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals(">2SET ", stringBuilder0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "sele~t ntoexecalter m9eralize  vyew";
      stringArray0[1] = "sele~t ntoexecalter m9eralize  vyew";
      stringArray0[2] = null;
      stringArray0[3] = "sele~t ntoexecalter m9eralize  vyew";
      stringArray0[4] = "sele~t ntoexecalter m9eralize  vyew";
      stringArray0[5] = "sele~t ntoexecalter m9eralize  vyew";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, true, stringArray0);
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, (StringBuilder) null);
      assertNull(dBUniqueConstraint0.getName());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "suW6,E`IX", true, (String[]) null);
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0);
      assertEquals("CONSTRAINT suW6,E`IX ", stringBuilder0.toString());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("z9itmw&SAqYzo");
      DBDataType dBDataType0 = DBDataType.getInstance((-1444), "z9itmw&SAqYzo");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("z9itmw&SAqYzo", defaultDBTable0, dBDataType0);
      defaultDBColumn0.setDefaultValue("z9itmw&SAqYzo");
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumn(dBColumnArray0[0]);
      assertEquals("z9itmw&SAqYzo Z9ITMW&SAQYZO DEFAULT z9itmw&SAqYzo NULL", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = "/*";
      // Undeclared exception!
      SQLUtil.isProcedureCall("/*");
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      System.setCurrentTimeMillis((-2216L));
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SQLUtil.renderColumnListWithTableName("execute", stringArray0);
      String[] stringArray1 = new String[3];
      stringArray1[0] = "execute.null";
      stringArray1[1] = "execute";
      stringArray1[2] = "CONSTRAINT ";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("CONSTRAINT ", stringArray1, "CONSTRAINT ", "A8-J1", stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.renderColumnListWithTableName("execute", stringArray0);
      assertEquals("execute.null", string0);
      
      boolean boolean0 = SQLUtil.isProcedureCall("execute");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("", "Unknown constraint type: ", (VersionNumber) null);
      DBCatalog dBCatalog0 = new DBCatalog("LhpV9+_#7", defaultDatabase0);
      DBSchema dBSchema0 = new DBSchema("exec", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null, dBSchema0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "exec";
      stringArray0[1] = "Unknown constraint type: ";
      stringArray0[2] = "Unknown constraint type: ";
      stringArray0[3] = "Scl<8.&@RB~-<CnS\":,=";
      stringArray0[4] = "kvQ[_;\")ePNVF.;";
      stringArray0[5] = "kvQ[_;\")ePNVF.;";
      stringArray0[6] = "";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "kvQ[_;\")ePNVF.;", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE (exec, Unknown constraint type: , Unknown constraint type: , Scl<8.&@RB~-<CnS\":,=, kvQ[_;\")ePNVF.;, kvQ[_;\")ePNVF.;, )", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      SQLUtil.isQuery("/*");
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("DR<+Nl1j");
      StringBuilder stringBuilder1 = stringBuilder0.insert(0, "*G#L9");
      StringBuilder stringBuilder2 = stringBuilder1.delete(0, 230);
      char[] charArray0 = new char[0];
      stringBuilder2.append(charArray0);
      SQLUtil.renderValue(stringBuilder0);
      SQLUtil.addOptionalCondition("</H(\"kwn>!1H", stringBuilder2);
      // Undeclared exception!
      try { 
        stringBuilder2.replace(230, 230, "</H(\"kwn>!1H");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // start > length()
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Character character0 = Character.valueOf('z');
      Character.lowSurrogate(90044);
      Character.isBmpCodePoint(1214);
      SQLUtil.renderValue(character0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "object already exists";
      stringArray0[1] = "object already exists";
      Character.isIdeographic(1214);
      SQLUtil.innerJoin("object already exists", stringArray0, "object already exists", "", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      RowOutputText rowOutputText0 = null;
      try {
        rowOutputText0 = new RowOutputText("object already exists", "object already exists", (String) null, false, "*/9'[N]hI$.f-V");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.rowio.RowOutputText", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Character character0 = new Character(')');
      String string0 = SQLUtil.substituteMarkers("W:DF,&.i*f3", "W:DF,&.i*f3", character0);
      assertEquals("')'", string0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema((String) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("@I0n9c\"-HV&", dBSchema0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = null;
      String[] stringArray1 = new String[5];
      stringArray1[0] = "@I0n9c\"-HV&";
      stringArray1[1] = null;
      stringArray1[2] = "15mv";
      stringArray1[3] = "@I0n9c\"-HV&";
      stringArray1[4] = "15mv";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "15mv", false, stringArray1);
      dBSchema0.equals(dBPrimaryKeyConstraint0);
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = "@I0n9c\"-HV&";
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("@I0n9c\"-HV&");
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint((String) null, false, defaultDBTable0, stringArray0, defaultDBTable1, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (, , , @I0n9c\"-HV&) REFERENCES @I0n9c\"-HV&(, , , @I0n9c\"-HV&)", string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.48000000000000004
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.mutatesDataOrStructure("un/&]*Kb4\"AoMBB");
      SQLUtil.renderValue(defaultDBTable0);
      String string0 = "xY<?kM(";
      // Undeclared exception!
      try { 
        DBDataType.getInstance((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("select intoselect ito");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("select intoselect into");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      TableContainer tableContainer0 = new TableContainer("z9itmw&SAqYzo");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "z9itmw&SAqYzo";
      stringArray0[1] = "z9itmw&SAqYzo";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "z9itmw&SAqYzo", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("z9itmw&SAqYzo", true, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(dBTable0, "z9itmw&SAqYzo", true, stringArray0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("a<tF+,b/rC*6<");
      defaultDBTable1.addIndex(dBUniqueIndex0);
      DBDataType.getInstance(460, "a<tF+,b/rC*6<");
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("z9itmw&SAqYzo");
      DBDataType dBDataType0 = DBDataType.getInstance((-1404), "z9itmw&SAqYzo");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("z9itmw&SAqYzo", defaultDBTable0, dBDataType0);
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      SQLUtil.renderColumnNames(dBColumnArray0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "z9itmw&SAqYzo";
      stringArray0[1] = "z9itmw&SAqYzo";
      stringArray0[2] = "z9itmw&SAqYzo";
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      SQLUtil.renderNumber(streamTokenizer0);
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      assertEquals("Activation", constantActionActivation0.getClassType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.parseColumnTypeAndSize(")zj+ 5");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Boolean boolean0 = SQLUtil.mutatesStructure("drop materialized view");
      assertTrue(boolean0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = ")zj+ 5";
      stringArray0[1] = "drop materialized view";
      String string0 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("()zj+ 5, drop materialized view)", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SQLUtil.parseColumnTypeAndSize("frea");
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, ".", false, (String[]) null);
      File file0 = MockFile.createTempFile("Z0tT`c6:m8sf+,", "callz9itmw&saqyzo");
      File file1 = FileUtil.canonicalFile(file0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file1);
      PrintWriter printWriter0 = mockPrintWriter0.format("callz9itmw&saqyzo", (Object[]) null);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, ".");
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, printWriter0);
      CompositeDBObject<DBCheckConstraint> compositeDBObject0 = (CompositeDBObject<DBCheckConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("Z0tT`c6:m8sf+,");
      // Undeclared exception!
      try { 
        tableContainer0.getCatalog();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.TableContainer", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      SQLUtil.isQuery("select intoexecalter m9erialized view");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select intoexecalter m9erialized view");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "0&?e%ppH$1}; 4(0";
      stringArray0[1] = "0&?e%ppH$1}; 4(0";
      stringArray0[2] = "0&?e%ppH$1}; 4(0";
      stringArray0[3] = "0&?e%ppH$1}; 4(0";
      stringArray0[4] = "0&?e%ppH$1}; 4(0";
      String[] stringArray1 = new String[2];
      stringArray1[0] = "0&?e%ppH$1}; 4(0";
      stringArray1[1] = "0&?e%ppH$1}; 4(0";
      // Undeclared exception!
      try { 
        SQLUtil.join("0&?e%ppH$1}; 4(0", "0&?e%ppH$1}; 4(0", stringArray0, "0&?e%ppH$1}; 4(0", "alter materialized view", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addRequiredCondition((String) null, stringBuilder0);
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" (");
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      String string0 = SQLUtil.normalize("UOAB,", true);
      assertEquals("UOAB,", string0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.innerJoin("15<~Z3,4?{9T+X^_, ", stringArray0, "15<~Z3,4?{9T+X^_, ", "", stringArray0);
      assertEquals("15<~Z3,4?{9T+X^_,  as  on 15<~Z3,4?{9T+X^_, .null = .null", string0);
      
      String string1 = SQLUtil.substituteMarkers("", "16", "15<~Z3,4?{9T+X^_, ");
      assertEquals("", string1);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Integer integer0 = new Integer((-1436488452));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "jvZ2>O8^,f:w";
      stringArray0[1] = "0+Uc2pMR=3iQ";
      stringArray0[2] = "jvZ2>O8^,f:w";
      stringArray0[3] = "create materialized viewsending blob_id:";
      SQLUtil.join("0+Uc2pMR=3iQ", "Float", stringArray0, "alter indexse", "/C#", stringArray0);
      SQLUtil.mutatesStructure("0+Uc2pMR=3iQ");
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin((String) null, stringArray0, "0+Uc2pMR=3iQ join alter indexse as /C# on Float.jvZ2>O8^,f:w = /C#.jvZ2>O8^,f:w and Float.0+Uc2pMR=3iQ = /C#.0+Uc2pMR=3iQ and Float.jvZ2>O8^,f:w = /C#.jvZ2>O8^,f:w and Float.create materialized viewsending blob_id: = /C#.create materialized viewsending blob_id:", "/C#", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      String[] stringArray0 = new String[8];
      stringArray0[1] = "XSAM4.S";
      stringArray0[2] = null;
      stringArray0[3] = "XSAM4.S";
      stringArray0[5] = null;
      stringArray0[6] = null;
      stringArray0[7] = "XSAM4.S";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "XSAM4.S", false, stringArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("r)uw~;6<8rn", stringArray0, " = ", " (", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SQLUtil.isDML("select intoexecalter m9erialized view");
      StringBuilder stringBuilder0 = new StringBuilder();
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("i@0Zj$J", (String[]) null, "select intoexecalter m9erialized view", "l]6", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("callselect intoselect into");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("executealter maerialized view");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "freate m5te";
      stringArray0[1] = "freate m5te";
      stringArray0[2] = "select";
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("freate m5te = 'freate m5te' AND freate m5te = 'freate m5te' AND select = 'select'", string0);
      
      System.setCurrentTimeMillis((-1L));
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint((String) null, false, defaultDBTable0, "select");
      dBCheckConstraint0.toString();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string1 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CHECK select", string1);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "30W.k!M|\"p";
      stringArray0[4] = "30W.k!M|\"p";
      stringArray0[0] = "30W.k!M|\"p";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("select intoalte# materalizet viewblob");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "getLocalHost", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT getLocalHost PRIMARY KEY (30W.k!M|\"p, , , , 30W.k!M|\"p, , )", string0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5535428464085232
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SQLUtil.join("a^m_7", "org.apache.derby.iapi.sql.dictionary.TableDescriptor", stringArray0, "a^m_7", "truncate", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("a^m_7");
      String[] stringArray1 = new String[5];
      stringArray1[0] = "a^m_7 join a^m_7 as truncate on org.apache.derby.iapi.sql.dictionary.TableDescriptor.null = truncate.null";
      stringArray1[1] = "a^m_7 join a^m_7 as truncate on org.apache.derby.iapi.sql.dictionary.TableDescriptor.null = truncate.null";
      stringArray1[2] = "org.apache.derby.iapi.sql.dictionary.TableDescriptor";
      stringArray1[3] = "truncate";
      stringArray1[4] = "a^m_7 join a^m_7 as truncate on org.apache.derby.iapi.sql.dictionary.TableDescriptor.null = truncate.null";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("n55^qZ", true, defaultDBTable0, stringArray1, defaultDBTable0, stringArray1);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dataOutputStream0);
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      assertEquals("table", defaultDBTable0.getObjectType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("isValid(int)");
      String[] stringArray0 = new String[7];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "isValid(int)", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("UNIQUE (, , , , , , )");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("truncateselect into");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "0&?e%ppH$1}; 4/(0";
      String[] stringArray1 = new String[5];
      stringArray1[0] = "@I<Tk2";
      stringArray1[1] = "@I<Tk2";
      stringArray1[2] = ", ";
      stringArray1[3] = "0&?e%ppH$1}; 4/(0";
      stringArray1[4] = "deletealter maerialized view";
      String string0 = SQLUtil.join("0&?e%ppH$1}; 4/(0", "0&?e%ppH$1}; 4/(0", stringArray0, "@I<Tk2", ", ", stringArray1);
      assertEquals("0&?e%ppH$1}; 4/(0 join @I<Tk2 as ,  on 0&?e%ppH$1}; 4/(0.0&?e%ppH$1}; 4/(0 = , .@I<Tk2", string0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.7689528313755152
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("6W");
      SQLUtil.normalize("%ppIK$Y1}; 4/(0$|", false);
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      DBDataType dBDataType0 = DBDataType.getInstance(248, "%ppIK$Y1}; 4/(0$|");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("%ppIK$Y1}; 4/(0$|", defaultDBTable0, dBDataType0);
      defaultDBColumn0.getForeignKeyConstraint();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      String string0 = SQLUtil.normalize("%ppIK$Y1}; 4/(0$|", true);
      assertEquals("% ppIK $ Y1 } ; 4 / (0 $ |", string0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance((-373), "delete");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("alter session");
      Integer integer0 = new Integer((-373));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn((String) null, defaultDBTable0, dBDataType0, integer0, integer0);
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "W:DF,&.i*f3";
      String string0 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM null WHERE W:DF,&.i*f3 = 'W:DF,&.i*f3'", string0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = ".";
      DBCatalog dBCatalog0 = new DBCatalog("Z0tT`c6:m8sf+,");
      DBSchema dBSchema0 = new DBSchema(".", dBCatalog0);
      String[] stringArray0 = null;
      DBDataType.getInstance(709, "select");
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, (String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "execute";
      stringArray0[1] = "execute";
      stringArray0[2] = "MOD";
      SQLUtil.renderColumnListWithTableName("execute", stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.join("exec]", "b@gI?-w(@JJWU:r&3:", stringArray0, "b@gI?-w(@JJWU:r&3:", "b@gI?-w(@JJWU:r&3:", stringArray0);
      assertEquals("exec] join b@gI?-w(@JJWU:r&3: as b@gI?-w(@JJWU:r&3: on ", string0);
      
      boolean boolean0 = SQLUtil.isDDL("{2dO>*w&/");
      assertFalse(boolean0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string1 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM null WHERE ", string1);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("insert");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, (-35), "insert");
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      vector0.add((DBColumn) defaultDBColumn0);
      List<DBColumn> list0 = defaultDBTable0.getColumns();
      SQLUtil.renderColumnNames(list0);
      Integer integer0 = RawTransaction.ABORT;
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "insert";
      stringArray0[2] = "";
      stringArray0[3] = "insert";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "insert";
      defaultDBTable0.getUniqueConstraint(stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "insert");
      StringBuilder stringBuilder1 = stringBuilder0.append(2561);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      // Undeclared exception!
      try { 
        stringBuilder1.insert(2561, (Object) dBForeignKeyConstraint0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2561
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      GenericLanguageConnectionFactory genericLanguageConnectionFactory0 = new GenericLanguageConnectionFactory();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, " #k>+]+)gQ:dzCI\"kS", true, (String[]) null);
      SQLUtil.constraintName(dBUniqueConstraint0);
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      // Undeclared exception!
      try { 
        jdbcDataSource0.getConnection();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid value  for parameter \"url\" [90008-136]
         //
         verifyException("org.h2.message.DbException", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("", string0);
      
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      SQLUtil.parseColumnTypeAndSize("");
      DBSchema dBSchema0 = new DBSchema("");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("", dBSchema0);
      defaultDBTable0.getUniqueConstraint(stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.join((String) null, "select", stringArray0, "`{7`D", (String) null, stringArray0);
      assertEquals("`{7`D as null on select.null = null.null", string0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "deletec~xq<t{<%5-y2[|zp";
      stringArray0[1] = "deletec~xq<t{<%5-y2[|zp";
      stringArray0[2] = "deletec~xq<t{<%5-y2[|zp";
      stringArray0[3] = "deletec~xq<t{<%5-y2[|zp";
      stringArray0[4] = "deletec~xq<t{<%5-y2[|zp";
      SQLUtil.renderColumnListWithTableName("deletec~xq<t{<%5-y2[|zp", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "r", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("deletec~xq<t{<%5-y2[|zp", false, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBDataType dBDataType0 = DBDataType.getInstance(50, "Am%ti");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("deletec~xq<t{<%5-y2[|zp", dBTable0, dBDataType0, integer0);
      defaultDBColumn0.getForeignKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0);
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey((DBForeignKeyConstraint) null, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("c*fv$%%");
      String[] stringArray0 = new String[0];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      SQLUtil.parseColumnTypeAndSize("");
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      assertNull(constantActionActivation0.getObjectName());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.9248749046381198
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      String string0 = SQLUtil.normalize("EQG-(pNW*)`p#", false);
      assertEquals("EQG  - (pNW *) ` p #", string0);
      
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "create materialized view";
      stringArray0[1] = "create materialized view";
      stringArray0[2] = "create materialized view";
      stringArray0[3] = "EQG  - (pNW *) ` p #";
      stringArray0[4] = "create materialized view";
      stringArray0[5] = "EQG  - (pNW *) ` p #";
      stringArray0[6] = "EQG-(pNW*)`p#";
      stringArray0[7] = "create materialized view";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "create materialized view", false, stringArray0);
      dBPrimaryKeyConstraint0.addColumnName("create materialized view");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string1 = SQLUtil.ukSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("UNIQUE (create materialized view, create materialized view, create materialized view, EQG  - (pNW *) ` p #, create materialized view, EQG  - (pNW *) ` p #, EQG-(pNW*)`p#, create materialized view)", string1);
      
      String string2 = SQLUtil.renderColumnListWithTableName("create materialized view", stringArray0);
      assertEquals("create materialized view.create materialized view, create materialized view.create materialized view, create materialized view.create materialized view, create materialized view.EQG  - (pNW *) ` p #, create materialized view.create materialized view, create materialized view.EQG  - (pNW *) ` p #, create materialized view.EQG-(pNW*)`p#, create materialized view.create materialized view", string2);
      
      String string3 = SQLUtil.typeAndName(defaultDBTable0);
      assertEquals("table null", string3);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("isValid(int)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"int\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      String string0 = "freate m5te";
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      SQLUtil.isDML("%4b4u=[");
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = SQLUtil.normalize("e'l!.g", true);
      assertEquals("e 'l!.g'", string0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      String string0 = SQLUtil.normalize("EQG-l(pNW*?`p#", true);
      assertEquals("EQG  - l (pNW * ? ` p #", string0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      SQLUtil.isProcedureCall("null = null");
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      String string0 = "n*l";
      SQLUtil.isQuery("n*l");
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers("UNIQUE ", (String) null, "UNIQUE ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("truncatedelete");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "TKi,.Y*\"u=(uqtUYX";
      stringArray0[1] = "TKi,.Y*\"u=(uqtUYX";
      stringArray0[2] = "TKi,.Y*\"u=(uqtUYX";
      stringArray0[3] = "Ja)";
      stringArray0[4] = "TKi,.Y*\"u=(uqtUYX";
      stringArray0[5] = null;
      stringArray0[6] = null;
      SQLUtil.join("TKi,.Y*\"u=(uqtUYX", "TKi,.Y*\"u=(uqtUYX", stringArray0, "a-TX}aM2/\n -5^l8~", (String) null, stringArray0);
      String string0 = SQLUtil.normalize("", true);
      assertEquals("", string0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      SQLUtil.renderColumnListWithTableName("}]{mh1", stringArray0);
      boolean boolean0 = SQLUtil.isDML("sysxplain_statement_ti");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      GenericLanguageConnectionFactory genericLanguageConnectionFactory0 = new GenericLanguageConnectionFactory();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, false, (String[]) null);
      SQLUtil.constraintName(dBUniqueConstraint0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      // Undeclared exception!
      try { 
        jdbcDataSource0.getConnection("pL5o9vh'#XI9c7", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      String string0 = "z9itmw&SAqYzo";
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("z9itmw&SAqYzo", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize(":CE(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: :CE(
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "drop materialized viewcreate mate", true, (String[]) null);
      SQLUtil.constraintName(dBUniqueConstraint0);
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      // Undeclared exception!
      try { 
        jdbcDataSource0.getConnection();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid value  for parameter \"url\" [90008-136]
         //
         verifyException("org.h2.message.DbException", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[5];
      stringArray1[0] = "create3 mate";
      stringArray1[1] = "create3 mate";
      stringArray1[2] = " AND ";
      stringArray1[3] = "v5du}k^lw,";
      stringArray1[4] = "select intocall2&m%n";
      String string0 = SQLUtil.join(" AND ", "create3 mate", stringArray0, "v5du}k^lw,", "create3 mate", stringArray1);
      assertEquals(" AND  join v5du}k^lw, as create3 mate on ", string0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = ")\"%W ]F'";
      stringArray0[1] = ")\"%W ]F'";
      String[] stringArray1 = new String[4];
      stringArray1[0] = "gP~zmy";
      stringArray1[1] = "/*";
      stringArray1[2] = ")\"%W ]F'";
      stringArray1[3] = "gP~zmy";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin(")\"%W ]F'", stringArray1, ")\"%W ]F'", "ALTER TABLE ", stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("isValid(int)");
      MockFile mockFile0 = new MockFile("Ri\"R:_qo}\"");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "isValid(int)";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      MockFile mockFile0 = new MockFile("alter table", "alter table");
      File file0 = FileUtil.canonicalFile((File) mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, false, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("c*fv$%%");
      DBDataType.getInstance(457, "c*fv$%%");
      Integer integer0 = new Integer(457);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Float";
      stringArray0[1] = "Float";
      stringArray0[2] = "c*fv$%%";
      stringArray0[3] = "c*fv$%%";
      stringArray0[4] = "c*fv$%%";
      stringArray0[5] = "c*fv$%%";
      stringArray0[6] = "c*fv$%%";
      stringArray0[7] = "c*fv$%%";
      String string0 = "charSet";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("EeAQ\"1r`TqJ6'%)Us", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      int int0 = 2702;
      StringBuilder stringBuilder0 = new StringBuilder(2702);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0, nameSpec0);
      StringBuilder stringBuilder2 = SQLUtil.addOptionalCondition("c*fv$%%", stringBuilder1);
      StringBuilder stringBuilder3 = stringBuilder2.append((CharSequence) "c*fv$%%");
      // Undeclared exception!
      try { 
        stringBuilder3.insert(2702, "EeAQ\"1r`TqJ6'%)Us");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2702
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      SQLUtil.renderValue((Object) null);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "null";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      GenericLanguageFactory genericLanguageFactory0 = new GenericLanguageFactory();
      GenericLanguageConnectionFactory genericLanguageConnectionFactory0 = new GenericLanguageConnectionFactory();
      Boolean boolean0 = Boolean.TRUE;
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "null", true, stringArray0);
      assertEquals("unique constraint", dBPrimaryKeyConstraint0.getObjectType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SQLUtil.join("<-/@+-o.", "<-/@+-o.", stringArray0, "executeselect intoexecalter m9erialized view", "<-/@+-o.", stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String string0 = SQLUtil.normalize("EQG-l(pNW*?`p#", false);
      assertEquals("EQG  - l (pNW * ? ` p #", string0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("create unique index");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("z9itmw&SAqYzo");
      DBDataType dBDataType0 = DBDataType.getInstance((-1431), "z9itmw&SAqYzo");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("z9itmw&SAqYzo", defaultDBTable0, dBDataType0);
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      defaultDBColumn0.setTable(defaultDBTable0);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("Z9ITMW&SAQYZO", string0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      SQLUtil.removeComments("Unknown constrait type: ");
      DBSchema dBSchema0 = new DBSchema("java.util.UUID");
      String string0 = SQLUtil.typeAndName(dBSchema0);
      assertEquals("schema java.util.UUID", string0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("z9itmw&SAqYzo");
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertEquals("table z9itmw&SAqYzo", string0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("kj>Sx", (String[]) null, "%ppIK$Y1}; 4'(0$X", "select", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.leftJoin("", stringArray0, "", "", stringArray0);
      assertEquals("left join  as  on .null = .null", string0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DBDataType.getInstance((-373), "delete");
      SQLUtil.parseColumnTypeAndSize("Unknown constraint type: ");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "-^\"ek3-\"-k";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, " AND ", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      int int0 = 1;
      // Undeclared exception!
      try { 
        stringBuilder0.appendCodePoint((-1971953993));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("|K%x#|DK2: /j5", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "Y[dNztlQ`");
      SQLUtil.addRequiredCondition("Y[dNztlQ`", stringBuilder0);
      assertEquals("Y[dNztlQ` and Y[dNztlQ`", stringBuilder0.toString());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addRequiredCondition("Y[dNztlQ`", stringBuilder0);
      assertEquals("Y[dNztlQ`", stringBuilder0.toString());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      SQLUtil.isQuery("selecJ intoexecalter m9erialized biew");
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("T6*CL?wo");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("'", dBSchema0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "'";
      stringArray0[1] = "T6*CL?wo";
      stringArray0[2] = "T6*CL?wo";
      stringArray0[3] = "'";
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("'", false, defaultDBTable0, stringArray0, defaultDBTable1, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec0);
      SQLUtil.addRequiredCondition("'", stringBuilder0);
      assertEquals("'", stringBuilder0.toString());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = "Y[dNztlQ`";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("O[ r{");
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint((String) null, false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0, nameSpec0);
      StringBuilder stringBuilder2 = stringBuilder1.append((CharSequence) "O[ r{");
      // Undeclared exception!
      try { 
        stringBuilder2.delete(42001, (-665));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("BINARY_FLOAT");
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("selectintoselectinto", false, defaultDBTable0, "selectintoselectinto");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("CONSTRAINT selectintoselectinto ", string0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "-^\"ek3-\"-k";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      String string0 = " AND ";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, " AND ", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      int int0 = 1;
      // Undeclared exception!
      try { 
        stringBuilder0.appendCodePoint((-1971953993));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = "tma(6t<Z0||2O. H";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "tma(6t<Z0||2O. H", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      // Undeclared exception!
      try { 
        stringBuilder1.insert((-1732266778), false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1732266778
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("hd4I?7+h#9");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "L010", true, (String[]) null);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY ()", string0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.751273597885415
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      SQLUtil.normalize("Scl<8.&@RB~-<CnS\":,=", false);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = null;
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("z9itmw&SAqYzo");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("O", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance(1664, "A-;NIt]k yO,@H");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("<WE+-/7;6PaV");
      Integer.getInteger("A-;NIt]k yO,@H");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("':yhZg&8o#>{T|G", defaultDBTable0, dBDataType0, integer0, (Integer) null);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("':yhZg&8o#>{T|G A-;NIT]K YO,@H(2) NULL", string0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      SQLUtil.normalize("eqg-(pnw*)`p#", false);
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers("SUDq1@^js", "SUDq1@^js", "SUDq1@^js");
      assertEquals("'SUDq1@^js'", string0);
      
      boolean boolean0 = SQLUtil.isQuery("SUDq1@^js");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers("S>JCr", "One of the version components not a number : ", "One of the version components not a number : ");
      assertEquals("S>JCr", string0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[3];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("z9itmw&SAqYzo");
      DBDataType dBDataType0 = DBDataType.getInstance((-1431), "z9itmw&SAqYzo");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("z9itmw&SAqYzo", defaultDBTable0, dBDataType0);
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      defaultDBColumn0.setTable(defaultDBTable0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      String[] stringArray0 = new String[8];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.join("call", "call", stringArray0, "call", "Ucknown constraint type: ", stringArray0);
      assertEquals("call join call as Ucknown constraint type:  on call.null = Ucknown constraint type: .null and call.null = Ucknown constraint type: .null and call.null = Ucknown constraint type: .null and call.null = Ucknown constraint type: .null and call.null = Ucknown constraint type: .null and call.null = Ucknown constraint type: .null and call.null = Ucknown constraint type: .null and call.null = Ucknown constraint type: .null", string0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("drop materialized view");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.join("u8", "u8", stringArray0, "alter maerialized view", "alter maerialized view", stringArray0);
      assertEquals("u8 join alter maerialized view as alter maerialized view on ", string0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      SQLUtil.isProcedureCall("freate m5te");
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) genericDescriptorList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = new StringBuilder();
      TableContainer tableContainer0 = new TableContainer("org.apache.derby.impl.sql.execute.rts.RealDistinctScalarAggregateStatistics");
      String string0 = SQLUtil.ownerDotComponent(tableContainer0);
      assertEquals("org.apache.derby.impl.sql.execute.rts.RealDistinctScalarAggregateStatistics", string0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("update", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("", dBSchema0);
      DBDataType dBDataType0 = DBDataType.getInstance((-349675003), "update");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("rJ[\"N0L'{WTW7", defaultDBTable0, dBDataType0, integer0);
      String string0 = SQLUtil.ownerDotComponent(defaultDBColumn0);
      assertEquals(".rJ[\"N0L'{WTW7", string0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Object object0 = new Object();
      String string0 = SQLUtil.renderValue("ucknow");
      assertEquals("'ucknow'", string0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "alter maerialized view";
      stringArray0[1] = "alter maerialized view";
      stringArray0[2] = "alter maerialized view";
      stringArray0[3] = "alter maerialized view";
      stringArray0[4] = "alter maerialized view";
      stringArray0[5] = "alter maerialized view";
      stringArray0[6] = "alter maerialized view";
      stringArray0[7] = "alter maerialized view";
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "alter maerialized view";
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("&KlJ#sSHcr5'sR3");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("~+", defaultDBTable0, (-35), "&KlJ#sSHcr5'sR3");
      vector0.add((DBColumn) defaultDBColumn0);
      List<DBColumn> list0 = defaultDBTable0.getColumns();
      SQLUtil.renderColumnNames(list0);
      Integer integer0 = RawTransaction.ABORT;
      assertEquals(1, (int)integer0);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.renderColumnListWithTableName("execute", stringArray0);
      assertEquals("execute.null", string0);
      
      String string1 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("()", string1);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      String string0 = SQLUtil.renderColumnNames((String[]) null);
      assertEquals("()", string0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=0.48000000000000004
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      SQLUtil.mutatesStructure("");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "org.h2.command.Parser";
      stringArray0[1] = "org.h2.command.Parser";
      stringArray0[2] = "org.h2.command.Parser";
      stringArray0[3] = "org.h2.command.Parser";
      stringArray0[4] = "org.h2.command.Parser";
      stringArray0[5] = "org.h2.command.Parser";
      stringArray0[6] = "org.h2.command.Parser";
      stringArray0[7] = "org.h2.command.Parser";
      stringArray0[8] = "org.h2.command.Parser";
      SQLUtil.renderColumnListWithTableName("org.h2.command.Parser", stringArray0);
      SQLUtil.mutatesDataOrStructure("drop table");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("org.h2.command.Parser");
      defaultDBTable0.setName("org.h2.command.Parser");
      // Undeclared exception!
      try { 
        defaultDBTable0.getForeignKeyConstraint(stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table 'org.h2.command.Parser' has no foreign key with the columns (org.h2.command.Parser, org.h2.command.Parser, org.h2.command.Parser, org.h2.command.Parser, org.h2.command.Parser, org.h2.command.Parser, org.h2.command.Parser, org.h2.command.Parser, org.h2.command.Parser)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("z9itmw&SAqYzo");
      DBDataType dBDataType0 = DBDataType.getInstance((-1404), "z9itmw&SAqYzo");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("z9itmw&SAqYzo", defaultDBTable0, dBDataType0);
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("z9itmw&SAqYzo Z9ITMW&SAQYZO NULL", string0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("c*fv$%%");
      DBDataType dBDataType0 = DBDataType.getInstance(457, "c*fv$%%");
      Integer integer0 = RawTransaction.ABORT;
      Integer integer1 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("c*fv$%%", defaultDBTable0, dBDataType0, integer0, integer1);
      StringBuilder stringBuilder0 = new StringBuilder("c*fv$%%");
      StringBuilder stringBuilder1 = stringBuilder0.append((-615.0));
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder1);
      assertEquals("c*fv$%%-615.0C*FV$%%(1,1)", stringBuilder1.toString());
      assertEquals("c*fv$%%-615.0C*FV$%%(1,1)", stringBuilder0.toString());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-79815026), "0bSE%X\"#[%");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("0bSE%X\"#[%", defaultDBTable0, dBDataType0, integer0, integer0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("0bSE%X\"#[% 0BSE%X\"#[%(2,2) NULL", string0);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 141
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 142
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      SQLUtil.removeComments("");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "drop index),";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = null;
      try {
        dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint((DBTable) null, "", false, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBPrimaryKeyConstraint", e);
      }
  }

  /**
  //Test case number: 143
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("alter tablev@wn");
      SQLUtil.addOptionalCondition("alter tablev@wn", stringBuilder0);
      assertEquals("alter tablev@wn or alter tablev@wn", stringBuilder0.toString());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 145
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("]", stringBuilder0);
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 146
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 147
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("^p3,1");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 148
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("create materialized view");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 149
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("lc\"\"Nc!a1`eH4I");
      assertNull(boolean0);
  }

  /**
  //Test case number: 150
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select intodesete");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 151
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("create materialized view");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 152
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.mutatesDataOrStructure("alter session");
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        errorMessages0.getCharacterStream("alter session");
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getCharacterStream
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 153
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 154
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.renderColumnListWithTableName("execute", stringArray0);
      assertEquals("execute.null", string0);
      
      boolean boolean0 = SQLUtil.isDDL(".o#:.'M");
      assertFalse(boolean0);
      
      String string1 = SQLUtil.innerJoin("7FQd", stringArray0, "truncatedesete", "execute.null", stringArray0);
      assertEquals("truncatedesete as execute.null on 7FQd.null = execute.null.null", string1);
  }

  /**
  //Test case number: 155
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String string0 = SQLUtil.join("create mate", " = ", stringArray0, " = ", " = ", stringArray0);
      assertEquals("create mate join  =  as  =  on  = .null =  = .null and  = .null =  = .null", string0);
  }

  /**
  //Test case number: 156
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("execute", "altex tablew", (String[]) null, "execute", "altex tablew", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 157
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("orEeB>10!8b8J{X", (String[]) null, "drop table", "orEeB>10!8b8J{X", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 158
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String string0 = SQLUtil.join("create mate", "create mate", stringArray0, stringArray0[0], "create mate", stringArray0);
      assertEquals("create mate join null as create mate on create mate.null = create mate.null and create mate.null = create mate.null", string0);
  }

  /**
  //Test case number: 159
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("kj>Sx", "kj>Sx", (String[]) null, "kj>Sx", "kj>Sx", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 160
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("CHECK ");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 161
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("create mate");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 162
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 163
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 164
  /*Coverage entropy=0.7613746079864251
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      boolean boolean0 = true;
      SQLUtil.normalize("Scl<8.&@RB~-<CnS\":,=", true);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      SQLUtil.parseColumnTypeAndSize("w&D>laq>");
      defaultDBTable0.getUniqueConstraint((String[]) null);
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }
}
