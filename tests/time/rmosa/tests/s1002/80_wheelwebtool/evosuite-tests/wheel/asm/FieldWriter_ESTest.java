/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 17:36:09 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2380);
      ClassWriter classWriter1 = new ClassWriter(1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter1, 0, "Deprecated", "Deprecated", "JSR/RET are not supported with computeFrames option", "Deprecated");
      fieldWriter0.visitAnnotation("JSR/RET are not supported with computeFrames option", false);
      classWriter0.version = (-3289);
      ByteVector byteVector0 = new ByteVector(2);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteVector byteVector1 = new ByteVector();
      ByteVector byteVector2 = byteVector1.putByte(1);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-171), "q8v.", "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", (Object) null);
      fieldWriter1.put(byteVector0);
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector0);
      ByteVector byteVector3 = byteVector0.put11(1, 3289);
      assertFalse(byteVector3.equals((Object)byteVector2));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-818));
      classWriter0.index = (-818);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 861, "", "P>c!<('/{~p!6{", "{B8iA", "*#61t[b");
      FieldWriter fieldWriter1 = classWriter0.firstField;
      ByteVector byteVector0 = new ByteVector();
      fieldWriter1.put(byteVector0);
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("*#61t[b", true);
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2380);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2380, "cs8`1)", "cs8`1)", "cs8`1)", "cs8`1)");
      ByteVector byteVector0 = classWriter0.pool;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteVector0.length = (-1);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-818));
      classWriter0.index = (-818);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-815), "", "cs8`1)", "", "");
      fieldWriter0.getSize();
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", true);
      AnnotationVisitor annotationVisitor1 = fieldWriter0.visitAnnotation("", false);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-818));
      classWriter0.index = (-818);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 861, "", "", "", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      FieldWriter fieldWriter1 = classWriter0.firstField;
      ByteVector byteVector1 = new ByteVector();
      fieldWriter1.put(byteVector1);
      assertSame(fieldWriter1, fieldWriter0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(143);
      classWriter0.index = (-1715);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1715), "&5?x$+sM", "&5?x$+sM", "&5?x$+sM", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1524));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      classWriter0.visit((-1524), 4, "Hs8`1)", "Hs8`1)", "Hs8`1)", stringArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "3:,UU~6uK");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-7), "RuntimeInvisibleAnnotations", "P*", "Hs8`1)", "RuntimeInvisibleAnnotations");
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2380);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "cs8`1)", "cs8`1)", (String) null, "cs8`1)");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2324);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2324, "cs8`1)", "cs8`1)", "cs8`1)", "cs8`1)");
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1499));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 49, "cs8`1)", "cs8`1)", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1286));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1286), "Hs8`1)", "Hs8`1)", "Hs8`1)", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2380);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2380, "cs8`1)", "cs8`1)", "cs8`1)", "cs8`1)");
      fieldWriter0.visitAnnotation("R%#?n}5Y*dgb$^", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2355);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "c[8{W", "c[8{W", "c[8{W", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2358);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2358, "cs8`1)", "cs8`1)", "cs8`1)", "cs8`1)");
      Attribute attribute0 = new Attribute("cs8`1)");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1276));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1276), "cs8`1)", "cs8`1)", "cs8`1)", "cs8`1)");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2380);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2380, "cs8`1)", "cs8`1)", "cs8`1)", "cs8`1)");
      fieldWriter0.visitAnnotation("cs8`1)", false);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2355);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2355, "c[8{W", "c[8{W", "c[8{W", "c[8{W");
      fieldWriter0.visitAnnotation("c[8{W", false);
      ByteVector byteVector0 = new ByteVector();
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)90;
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "8pr#'\"FT/\"T~.boX", "Hsa8`1)", "", "");
      fieldWriter0.visitEnd();
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2380);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2380, "cs8`1)", "cs8`1)", "cs8`1)", "cs8`1)");
      Object object0 = new Object();
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 1, "cs8`1)", "cs8`1)", "cs8`1)", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@54ef6083
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2380);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2380, "cs8`1)", "cs8`1)", "cs8`1)", "cs8`1)");
      fieldWriter0.visitAnnotation("cs8`1)", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2324);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2324, "cs8`1)", "cs8`1)", "cs8`1)", "cs8`1)");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1524));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1524), "=", "=", "=", "=");
      Attribute attribute0 = new Attribute("=");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1524));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1524), "Hs8`1)", "Hs8`1)", "Hs8`1)", "Hs8`1)");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1524));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "%[:1o-\"RYoQj;", "%[:1o-\"RYoQj;", "cs8`1)", "%[:1o-\"RYoQj;");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2358);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2358, "cs8`1)", "cs8`1)", "cs8`1)", "cs8`1)");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212676);
      classWriter0.newClass("M:u|7e<C");
      FieldWriter fieldWriter0 = classWriter0.lastField;
      classWriter0.lastField = null;
      classWriter0.newInteger(2);
      classWriter0.newFieldItem("RuntimeInvisibleAnnotations", "Ar\"$SX~;?", "g8WMDkq*!|T12R hsL'");
      classWriter0.index = 285212676;
      classWriter0.newFloat((-1586.727F));
      String string0 = "?eF5#(";
      classWriter0.visitInnerClass("M:u|7e<C", "?eF5#(", "?eF5#(", (-3684));
      classWriter0.newClassItem("M:u|7e<C");
      classWriter0.newFloat(0.0F);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 152, "ConstantValue", "", "", "ConstantValue");
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, (-4700), "@}%Vpx@kd:DiGIFX", "@}%Vpx@kd:DiGIFX", "@}%Vpx@kd:DiGIFX", "@}%Vpx@kd:DiGIFX");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
