/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 05:23:01 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(19728);
      Player player1 = null;
      boolean boolean0 = false;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 723;
      Player player0 = new Player((-12283), "\t=3$:", "", (-207), 723);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-103);
      byteArray0[1] = (byte) (-75);
      byteArray0[2] = (byte) (-114);
      byteArray0[3] = (byte) (-56);
      byteArray0[4] = (byte) (-9);
      byteArray0[5] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-103), 4145);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(0, "RF`(pE+k-JAT;ba~oc", "", 0);
      Player player1 = new Player(1192, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", (String) null, 1978, 0);
      player0.isJoinOK(player0, false);
      assertEquals("RF`(pE+k-JAT;ba~oc", player0.getIP());
      
      Player player2 = new Player((-3219), "\"qvxu+17@", 793);
      long long0 = player2.getTimeOfDeath();
      assertEquals(0L, long0);
      assertEquals("0.0.0.0", player2.getIP());
      
      int int0 = player1.getPictureId();
      assertEquals(1978, int0);
      
      int int1 = player1.gangStrength();
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0, int1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.0506636431758234
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player((-3935));
      Player player1 = new Player((-658), "\"P", "\"P", 236);
      player1.setDead((long) 236);
      player1.setMoney((-1.0F));
      player1.setY((-3935));
      player0.setJoinOK(player1, false);
      player0.pack();
      player0.pack();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      player1.type();
      player0.isJoinOK(player1, false);
      float float0 = player1.getY();
      assertEquals((-1.0F), player1.getMoney(), 0.01F);
      assertEquals((-3935.0F), float0, 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(543);
      Player player1 = new Player(543, (String) null, (short)4919);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertFalse(boolean0);
      
      int int0 = player0.type();
      assertEquals(0, player0.getPictureId());
      assertEquals(5, int0);
      assertEquals("Player543", player0.getName());
      
      player1.getName();
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(4919, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((-1791), "gui.ModuleBrowserDialog$ModuleFilter", (-1791));
      player0.setZ((-1791));
      player0.getZ();
      player0.pack();
      assertEquals((-1791.0F), player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player((-426), "", (String) null, (-426));
      Player player1 = new Player((-426));
      player0.setJoinOK(player1, true);
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertFalse(boolean0);
      
      player0.toString();
      assertEquals((-426), player0.getPictureId());
      
      String string0 = player1.toString();
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals("Player-426", string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(2);
      player0.setJoinOK(player0, false);
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals("Player2", player0.toString());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player((-1));
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertTrue(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.382435249959657
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(365, "=)K$", "=)K$", 208);
      Party party0 = player0.next;
      Player player1 = new Player(4919, "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", "ko(#Lx:7% SF)F$Z(", 4919);
      player1.remove((Party) null);
      Player player2 = new Player(365, ")TG2y8e2%SFAwBAE", (-3537));
      player2.setJoinOK(player1, false);
      player2.remove(player1);
      player1.setDead((long) 0, true);
      player2.getStrength();
      Player player3 = new Player((-3537), "", "", 1);
      player3.setX(0.0F);
      byte[] byteArray0 = player1.pack();
      player1.pack();
      player0.setDead((long) 1);
      player1.getIP();
      player1.type();
      player1.setY(0.0F);
      player1.unpack(byteArray0);
      player2.setMoney(0.1F);
      float float0 = player3.getX();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-933));
      player0.setZ(1.0F);
      player0.pack();
      float float0 = player0.getZ();
      assertEquals(1.0F, float0, 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.197846119469557
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(0, (String) null, "", 1005);
      Party party0 = player0.next;
      player0.remove((Party) null);
      Player player1 = new Player((-3537), "=)K$", 10107);
      player1.setJoinOK(player0, true);
      player0.remove((Party) null);
      Player player2 = new Player();
      player2.setDead(1L, true);
      player2.getStrength();
      player1.setX((short)4919);
      player0.pack();
      Player player3 = new Player(31354, (String) null, "SBOjXfE]vJSGlPl0", 2554, 0);
      player3.pack();
      player2.setDead((long) (short)4919);
      player3.getIP();
      int int0 = player1.type();
      assertEquals(4919.0F, player1.getX(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(2798, "", 1);
      player0.getName();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(10, "RF`(pE+k-JAT;ba~oc", 0);
      Player player1 = new Player((-441), "RF`(pE+k-JAT;ba~oc", "RF`(pE+k-JAT;ba~oc", (-441), 0);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(1, player0.getStrength());
      assertFalse(boolean0);
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      
      int int0 = player1.getStrength();
      assertEquals(0, int0);
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals((-441), player1.getPictureId());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(5, "state.Party", 4919);
      player0.setMoney((-413.0068F));
      float float0 = player0.getMoney();
      assertEquals((-413.0068F), float0, 0.01F);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(10, "RF`(pE+k-JAT;ba~oc", 0);
      player0.setDead((-280L), true);
      player0.getIP();
      long long0 = player0.getTimeOfDeath();
      assertEquals((-280L), long0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player((-17607), "", "", (-17607), (-17607));
      int int0 = player0.gangStrength();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals((-17607), int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-17607), player0.getPictureId());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(0, "RF`(pE+k-JAT;ba~oc", "", 0);
      Player player1 = new Player(1192, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", (String) null, 1978, 0);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals("RF`(pE+k-JAT;ba~oc", player0.getIP());
      assertFalse(boolean0);
      
      Player player2 = new Player((-3219), "\"qvxu+17@", 793);
      long long0 = player2.getTimeOfDeath();
      assertEquals(0L, long0);
      assertEquals("0.0.0.0", player2.getIP());
      assertEquals(1, player2.getStrength());
      
      int int0 = player1.getPictureId();
      assertTrue(player1.isConnected());
      assertEquals(1978, int0);
      assertEquals(0, player1.getStrength());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(1179);
      player0.type();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)83;
      byteArray0[1] = (byte)83;
      byteArray0[2] = (byte) (-1);
      byteArray0[4] = (byte)74;
      byteArray0[5] = (byte) (-115);
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte) (-115);
      byteArray0[8] = (byte)92;
      player0.unpack(byteArray0);
      player0.gangStrength();
      Player player1 = new Player(3426, "6vn-<@!m#zt%hlu\"nn", 3426);
      player1.prev = (Party) player0;
      player0.setDead(961L, false);
      player0.isJoinOK(player1, false);
      player0.setY((short)4919);
      System.setCurrentTimeMillis(2323L);
      player1.getY();
      player0.getY();
      player1.gangStrength();
      int int0 = player0.gangStrength();
      assertTrue(player0.isDead());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player((-1668), "UAaJ=J+a|", "+.O?U", 1613, 31354);
      int int0 = player0.getStrength();
      assertEquals(31354, int0);
      assertEquals("UAaJ=J+a|", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1613, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(4919, (String) null, 4919);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((-426), (String) null, (String) null, (-426), (-426));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player((-1));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(29, byteArrayOutputStream0.size());
      
      player0.pack();
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(5, "state.Party", 4919);
      player0.setMoney(4919);
      float float0 = player0.getMoney();
      assertEquals(4919.0F, float0, 0.01F);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(23);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player((-1329), ";L", (-1329));
      Player player1 = new Player(7937);
      player0.prev = (Party) player1;
      Player player2 = (Player)player0.prev;
      int int0 = 3060;
      player2.next = (Party) player0;
      player2.prev = (Party) player0;
      player2.id = 3060;
      player2.id = (-1025);
      player2.add(player0);
      player1.setY((-1509.9563F));
      player1.gangStrength();
      player0.remove(player2);
      // Undeclared exception!
      player0.gangStrength();
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player();
      player0.remove((Party) null);
      Party party0 = new Party();
      party0.prev = (Party) player0;
      player0.head = party0;
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player((-2923), "", "", (-2923));
      player0.setDead((-105L), true);
      player0.setDead((-105L), true);
      player0.setDead(1272L, false);
      long long0 = player0.getTimeOfDeath();
      assertEquals(1272L, long0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player((-933));
      Player player1 = new Player();
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-1", player1.toString());
      assertEquals(0, player1.getPictureId());
      
      Player player2 = new Player((short)4919, "", "", (short)4919);
      player2.toString();
      assertEquals(4919, player2.getPictureId());
      assertFalse(player2.isDead());
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(0L, player2.getTimeOfDeath());
      assertTrue(player2.isConnected());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals(1, player2.getStrength());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(559);
      float float0 = player0.getZ();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player559", player0.getName());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player((-8));
      player0.setDead();
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player((-41));
      player0.getSubparty();
      String string0 = player0.getName();
      assertEquals("Player-41", string0);
      
      int int0 = player0.getPictureId();
      assertEquals(0, int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(4919);
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player((-1515));
      player0.reset(true);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals("Player-1515", player0.toString());
      assertEquals(0, player0.getPictureId());
      
      Player player1 = new Player((short)4919, "Hk_ ,/#!!@\"T", (-1515));
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals((-1515), player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead(24L);
      player0.setConnected(false);
      boolean boolean0 = player0.isConnected();
      assertEquals(24L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(27651);
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      int int0 = player0.gangStrength();
      assertFalse(player0.isConnected());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player(4934);
      boolean boolean0 = player0.isConnected();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(boolean0);
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertEquals("Player4934", player0.getName());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(1950);
      Player player1 = new Player((short)4919, "k|{{=", (short)4919);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte) (-74);
      byteArray0[2] = (byte) (-1);
      player1.unpack(byteArray0);
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player((-3593), "", "t3(|Z.^.P|{ ", (-3593), (-658));
      player0.getStrength();
      player0.getY();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      float float0 = Player.MOVE_DISTANCE;
      player0.getStrength();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      player0.getIP();
      player0.getPictureId();
      player0.getStrength();
      player0.getIP();
      System.setCurrentTimeMillis(1509L);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ(722.0F);
      assertEquals(722.0F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player((-938));
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.2745180899177098
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      player0.next = (Party) player0;
      float float0 = Player.TOLERANCE;
      player0.isDead();
      player0.getMoney();
      player0.remove(player0);
      Player player1 = new Player();
      player0.isJoinOK(player1, false);
      player1.next = (Party) player0;
      Player player2 = new Player((short)4919);
      player1.getTimeOfDeath();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(5, "state.Party", 4919);
      player0.setMoney(1.0F);
      File file0 = MockFile.createTempFile("state.Party", "module.ModuleBrowserDialog$ModuleFilter");
      Player player1 = new Player();
      player0.add(player1);
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockPrintStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(filterOutputStream0);
      dataOutputStream0.writeInt((short)4919);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      dataInputStream0.readUTF();
      player0.unpack(dataInputStream0);
      assertEquals(1.0F, player0.getMoney(), 0.01F);
      
      Player player2 = new Player(4919);
      assertEquals(10.0F, player2.getX(), 0.01F);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player((-7679));
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player(28, "RF`(pE+k-JAT;ba~oc", 28);
      float float0 = player0.getX();
      assertEquals(28, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(248);
      int int0 = player0.type();
      assertEquals(5, int0);
      
      String string0 = player0.getIP();
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", string0);
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals("Player248", player0.toString());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player((-27));
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)39;
      byteArray0[1] = (byte) (-115);
      byteArray0[2] = (byte) (-52);
      byteArray0[3] = (byte)5;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(2, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(3918, "", 3918);
      Player player1 = new Player(5632, "7<[r", "", 4919);
      player1.remove(player0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      player1.unpack(dataInputStream0);
      player1.setDead(2291L);
      player1.setDead((long) 5632);
      player1.isDead();
      assertEquals(5632L, player1.getTimeOfDeath());
      
      player0.toString();
      assertEquals(3918, player0.getPictureId());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player(31354);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      boolean boolean0 = false;
      Player player0 = new Player((-1));
      player0.setX((-1));
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("8I9R'8");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
}
