/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 11:54:29 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaParserTokenManager_ESTest extends JavaParserTokenManager_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1796336670464318
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1798), (-1798));
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions((Token) null);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1837132182957943
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)31;
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)107;
      StringReader stringReader0 = new StringReader("2qp");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 92, (-2200), (byte)107);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      try { 
        javaCharStream0.BeginToken();
       //  fail("Expecting exception: IOException");
       // Unstable assertion
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1803266677394324
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3En Rtr$qJ{`L#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3714), 3520);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-3714), (-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line -3714, column 13.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5786122886681095
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g9*(?:k");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1870, 1870);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("assrt");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5768731582333269
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 105, 6);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 105, 1);
      JavaCharStream javaCharStream2 = null;
      try {
        javaCharStream2 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.47619047619047616
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5l.zTo!KmO$:%");
      StringReader stringReader1 = new StringReader("BTMI+])xq<^#q");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 114, 2030);
      StringReader stringReader2 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 3793, 62);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, 3793, (-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream1.bufpos);
      assertEquals(65, javaCharStream1.getColumn());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("assrt");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 28, 28);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals("assrt", token0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1849504592484699
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("IEw&e4REx)");
      StringReader stringReader1 = new StringReader("true");
      StringReader stringReader2 = new StringReader("true");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-515), (-3714));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(8, javaCharStream0.bufpos);
      assertEquals((-3710), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4838709677419355
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LCfUK$#ffR)G(q:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-515), 11);
      javaCharStream0.line = (-515);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -515, column 17.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.177018148301881
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!s:TV?|R");
      StringReader stringReader1 = new StringReader("!s:TV?|R");
      StringReader stringReader2 = new StringReader("$&BY'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 3628, (-515));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("&", token0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3714), 30);
      StringReader stringReader1 = new StringReader("%_");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 86, (-1141));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(108, token0.kind);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5891783264039585
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/2Rh!hJHoX$L");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 105, 105);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 105, 105);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-1), (-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      //  // Unstable assertion: assertEquals(3, javaCharStream1.bufpos);
      //  // Unstable assertion: assertEquals(104, token0.kind);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1796336670464318
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"private\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 48, 48);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = new Token();
      stringReader0.read();
      token0.beginColumn = 48;
      javaParserTokenManager0.defaultLexState = 24;
      token0.kind = 48;
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.SkipLexicalActions(token1);
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(53, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5888083670994821
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader("9^d<Ezvi)GNh8l|)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2474), 35);
      javaCharStream0.inputStream = (Reader) stringReader0;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line -2474, column 51.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1849504592484699
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("53nWN{`eSt!IgxwdK$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3714), (-2655));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), (-2655));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(4, javaCharStream1.bufpos);
      //  // Unstable assertion: assertEquals((-2651), javaCharStream1.getColumn());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.48000000000000004
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Owitlh");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3058, (-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringBuffer stringBuffer0 = new StringBuffer();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@t{diYv,>}9c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-459), 16);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-586), 31);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("@", token0.toString());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.177018148301881
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("assert");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1891, 6);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      token0.kind = 803;
      StringReader stringReader1 = new StringReader("assert");
      stringReader1.read();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(11, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=8>0o3BsgzXhujA");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2629), (-3140));
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line -2629, column -3126.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?(v00erHKOHB.& ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 68, (-12));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-12), javaCharStream0.getColumn());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5l.zTo!KmO$:%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3714), (-3714));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-3714), (-3714));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.read();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("l", token0.toString());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">");
      stringReader0.read();
      StringReader stringReader1 = new StringReader("3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1954), 3113);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(66, token0.kind);
      assertEquals("3", token0.toString());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("IN_MULTI_LINE_COMMENT");
      StringReader stringReader1 = new StringReader("");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)83;
      byteArray0[1] = (byte)22;
      byteArray0[2] = (byte)25;
      byteArray0[3] = (byte)93;
      byteArray0[4] = (byte)24;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader2 = new StringReader("+x/J6c/|P]iEGB$Fq/C");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (byte)25, 26);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(1, javaCharStream1.getColumn());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[4] = (byte)0;
      byteArray0[1] = (byte)53;
      byteArray0[2] = (byte)34;
      byteArray0[3] = (byte)37;
      byteArray0[4] = (byte)62;
      StringReader stringReader0 = new StringReader("T0");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)37, (byte)0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ReG@NVCc&Z2%m+rtt?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-550), (-2908));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals((-2906), javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringReader stringReader0 = new StringReader("XR&f{L2T_d");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3340), 829);
      javaCharStream0.BeginToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("R", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X4.");
      StringReader stringReader1 = new StringReader("4@}\"dwr@Q");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1509, (-2908));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1509, column -2899.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("agc> U^)/]c$[");
      StringReader stringReader1 = new StringReader("agc> U^)/]c$[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-453), 114);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("agc", token0.toString());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader("sjZW=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3714), 473);
      stringReader0.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 637, 30);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      StringBuffer stringBuffer0 = new StringBuffer();
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream1.bufpos);
      assertEquals(32, javaCharStream1.getColumn());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.47619047619047616
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("goto");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3464), (-1337));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1780, 22);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.read();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-1337), 41);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals((-1335), javaCharStream0.getColumn());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<aZPVB`ECGp1d");
      StringReader stringReader1 = new StringReader("bq<gbj+_N5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 473, 17);
      StringReader stringReader2 = new StringReader("bq<gbj+_N5");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 105, 473, 105);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream1.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringReader stringReader0 = new StringReader("switch");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-479), (-479));
      stringReader0.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream1.bufpos);
      assertEquals(5, javaCharStream1.getColumn());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5915700351469828
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!FGiVmlmS$A+`HYR]M");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-4362), (-3862));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaCharStream0.BeginToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals((-3851), javaCharStream0.getEndColumn());
      assertEquals(9, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("xq");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3714), 1870);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = new Token();
      javaParserTokenManager0.SkipLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token1.kind);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5913659118565153
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5l.zTo!KmO$:%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2601), 2751);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line -2601, column 2764.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FT9l2%B5[)%+#fL2Q8o");
      StringReader stringReader1 = new StringReader("FT9l2%B5[)%+#fL2Q8o");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-504), 117);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals("FT9l2", token0.toString());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringReader stringReader0 = new StringReader("y-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 114, 114);
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 92, 114);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("y", token0.toString());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<|bq2`*_nLX28V_+]");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3714), 49);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("|", token0.toString());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2188, 15);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 42, 4593);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(106, token0.kind);
      assertEquals("|", token0.toString());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5748027648585858
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringReader stringReader0 = new StringReader("--");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 114, 114);
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 92, 114);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1, 1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 92, column 116.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringReader stringReader0 = new StringReader("y");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 114, 114);
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), 114);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1, 1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -1, column 115.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[4] = (byte) (-4);
      byteArray0[1] = (byte)53;
      byteArray0[2] = (byte)34;
      byteArray0[3] = (byte)37;
      byteArray0[4] = (byte)62;
      StringReader stringReader0 = new StringReader("^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)37, (byte)0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(107, token0.kind);
      assertEquals("^", token0.toString());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringReader stringReader0 = new StringReader("sjZW=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3714), 473);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 597, 1244);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("sjZW", token0.toString());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=8>0o3BsgzXhujA");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2629), (-3140));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-2629), 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals((-2629), javaCharStream1.getLine());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.4838709677419355
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader("YaRL$95Ue)qmM)VD");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3641, 37);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1909, 3641);
      StringReader stringReader1 = new StringReader("YaRL$95Ue)qmM)VD");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1, 44, 15);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager0.jjimageLen = 2;
      javaParserTokenManager0.getNextToken();
      assertEquals(8, javaCharStream2.bufpos);
      assertEquals(23, javaCharStream2.getColumn());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringReader stringReader0 = new StringReader("H=EV^^6");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3714), (-3714));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-3714), (-3714));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("H", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[+Z=Fy9CaTE9'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-282), (-282));
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-282), 34);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals("Z", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringReader stringReader0 = new StringReader("U");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 107, (-508));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("U", token0.toString());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.1809520586087259
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)31;
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)107;
      byteArray0[3] = (byte)6;
      byteArray0[4] = (byte)86;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("[+Z=Fy9CaTE9'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 13, 23);
      StringReader stringReader1 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      StringReader stringReader2 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-1), 19);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream1.bufpos);
      assertEquals(".", token0.toString());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" .$X\"R&<~ReCP?3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 114, 114);
      stringReader0.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 32, (-814));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(".", token0.toString());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringReader stringReader0 = new StringReader("k");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1509, 28);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 40, 40);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("k", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringReader stringReader0 = new StringReader("XR&f{L2T_d");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1399), (-1399));
      stringReader0.read();
      stringReader0.read();
      StringReader stringReader1 = new StringReader("\t");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 45, 1432);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(0, token0.kind);
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a}FgnFT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 31, 467);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(467, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'IJ5~:fAC");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 69, (-195));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.defaultLexState = 39;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals((-192), javaCharStream0.getBeginColumn());
      assertEquals(69, javaCharStream0.getLine());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringReader stringReader0 = new StringReader("XR&f{L2T_d");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1399), (-1399));
      stringReader0.read();
      stringReader0.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), 48);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals((-1398), javaCharStream0.getColumn());
      assertEquals("f", token0.toString());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'IJ5~:fAC");
      StringReader stringReader1 = new StringReader("NO2HM]~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 770, (-32));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-131), 69);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(5, javaCharStream1.bufpos);
      assertEquals(74, javaCharStream1.getBeginColumn());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[+Z==Fy9CaTE9'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 111, 1803);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("[", token0.toString());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[+Z=Fy9CaTE9'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-282), (-282));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-282), 34);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("+", token0.toString());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("1");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-8);
      byteArray0[1] = (byte)109;
      byteArray0[2] = (byte)24;
      byteArray0[3] = (byte)53;
      byteArray0[4] = (byte)89;
      byteArray0[5] = (byte)123;
      byteArray0[6] = (byte) (-121);
      byteArray0[7] = (byte)3;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(dataInputStream0);
      dataInputStream0.read(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, (byte)123, (-547), (-179));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.SwitchTo(3);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.1779956654084303
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*A8[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 105, 87);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 105, 87);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-1), (-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream2.getBeginColumn());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*A8[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2940, (-221));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(103, token0.kind);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" P$X\"R&<yReCP?3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 114, 114);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 39, 113);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      assertEquals(114, javaCharStream1.getBeginColumn());
      assertEquals(116, javaCharStream1.getEndColumn());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" ,OL) T");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1719), (-305));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(84, token0.kind);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!s:TV?|R");
      StringReader stringReader1 = new StringReader("!s:TV?|R");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 41, 41);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("!", token0.toString());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.182508882687605
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[+Z=Fy9CaTE9'");
      StringReader stringReader1 = new StringReader("2G#<K2CzJx}A2uG");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 770, (-2570));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 770, column -2555.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader("--");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2633, 3405);
      StringReader stringReader1 = new StringReader("--");
      StringReader stringReader2 = new StringReader(";H@UU9${P2-+'T");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 40, 2633);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2633, javaCharStream1.getBeginColumn());
      assertEquals(";", token0.toString());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)53;
      byteArray0[2] = (byte)34;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)62;
      StringReader stringReader0 = new StringReader(":s%q.<>v,:-m{8");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)34, 16);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(92, token0.kind);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader("69iE{.<o7^=!U&1Yi)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 50, (-2655));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(66, token0.kind);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("goto");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3464), (-1337));
      StringReader stringReader1 = new StringReader("goto");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 98, 98);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-1), (-1337));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals((-1337), javaCharStream0.getBeginColumn());
      assertEquals((-1334), javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("q|");
      stringReader0.read();
      StringReader stringReader1 = new StringReader("2*YQ1bJg@J-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1954), 113);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line -1954, column 124.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_");
      StringReader stringReader1 = new StringReader("_");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3345), 105);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("_", token0.toString());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|2Rh!hJHoX$B");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 105, 105);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 105, 105);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-1), (-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(106, token0.kind);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!s:TV?|R");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 473, 473);
      stringReader0.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 473, 33);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals("s", token0.toString());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.177018148301881
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g5gQIhq;S2OqUn@#u_!");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1499), (-1499));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals((-1493), javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!FGiVmlmS$A+`HYR]M");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-4362), (-4362));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("!", token0.toString());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-453), 105);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(124, token0.kind);
      assertEquals(">", token0.toString());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">H");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-515), (-515));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-515), javaCharStream0.getLine());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.47619047619047616
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringReader stringReader0 = new StringReader("}E'W");
      StringReader stringReader1 = new StringReader("CD{jQm-?z9D2h,yb");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 87, 39);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.SwitchTo(87);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 87. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'IJ5~:fAC");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-3);
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte) (-115);
      byteArray0[4] = (byte) (-86);
      byte byte0 = (byte) (-2);
      byteArray0[5] = (byte) (-2);
      int int0 = (-1211);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1211), (byte)10);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("utydD(l6@]K[5d,Ii]v");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 69, 20);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(24, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FT9l2%B5[)%+#fL2Q8o");
      StringReader stringReader1 = new StringReader("FT9l2%B5[)%+#fL2Q8o");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-504), 132);
      javaCharStream0.maxNextCharInd = (-504);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("case");
      StringReader stringReader1 = new StringReader("case");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 114, 47);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(47, javaCharStream0.getBeginColumn());
      assertEquals(114, javaCharStream0.getEndLine());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("strictfp");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2145388542, 2145388542);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1622, 29);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream1.bufpos);
      assertEquals(1622, javaCharStream1.getEndLine());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("continue");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6323, 6323);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(6323, javaCharStream0.getBeginColumn());
      assertEquals(23, token0.kind);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader("switch");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4, 473);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(473, javaCharStream0.getBeginColumn());
      assertEquals(4, javaCharStream0.getLine());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.177018148301881
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringReader stringReader0 = new StringReader("implements");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2062, 87);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(9, javaCharStream0.bufpos);
      assertEquals("implements", token0.toString());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("import");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 114, 27);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(27, javaCharStream0.getBeginColumn());
      assertEquals(38, token0.kind);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte byte0 = (byte)45;
      StringReader stringReader0 = new StringReader("new");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-458), 4116);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("N");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 27, 71);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjround = (-1);
      javaParserTokenManager0.jjmatchedKind = 27;
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("N", token0.toString());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.4827586206896552
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\",\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4, 94);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.4827586206896552
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"^\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-383), 1527);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("\"^\"", token0.toString());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"]\"");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<GC?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 15, (-3714));
      stringReader0.read();
      stringReader0.read();
      StringReader stringReader1 = new StringReader("<GC?");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 593, 47);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 15, column -3713.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("W");
      StringReader stringReader1 = new StringReader("aJrmen&C^@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, Integer.MAX_VALUE, 105);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("W", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringReader stringReader0 = new StringReader("--");
      StringReader stringReader1 = new StringReader("--");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-453), 114);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(114, javaCharStream0.getBeginColumn());
      assertEquals(115, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("--");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 56, 114);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringBuffer stringBuffer0 = new StringBuffer();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(102, token0.kind);
      assertEquals("-", token0.toString());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("VnH");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3714), (-3714));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringReader stringReader0 = new StringReader("tz");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 62, 3113);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("tz", token0.toString());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-515), (-4301));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals((-4300), javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("throw");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 90, 1751);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(58, token0.kind);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<|bq2`*_nLX28V_+]");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-515), (-515));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(88, token0.kind);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("t");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 107, (-902));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("t", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X4.");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 40, 1509);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(1510, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Q{EeQv");
      stringReader0.mark(15);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 39, 39);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Q");
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(40, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("sCiteh");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4, 473);
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 4. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-453), 105);
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream);
      javaParserTokenManager0.setDebugStream(mockPrintStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.TokenLexicalActions((Token) null);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringReader stringReader0 = new StringReader("XR&f{L2T_d");
      StringReader stringReader1 = new StringReader("':");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1282), 28);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -1282, column 30.  Encountered: <EOF> after : \"\\':\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"static\"");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo((-262));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -262. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.SwitchTo(0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("` *RaS3Y");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 36, 36);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 36, column 36.  Encountered: \"`\" (96), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("E%FO]G|TD}%NH*O]");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 105, 105);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("E", token0.toString());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StringReader stringReader0 = new StringReader("--");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 114, 26);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 922, 42);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.curLexState = 2147482624;
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, token0.kind);
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 52);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 52. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StringReader stringReader0 = new StringReader("q|");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3113, 3113);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("q", token0.toString());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringReader stringReader0 = new StringReader("D<IFAULT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4646, 69);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("D", token0.toString());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StringReader stringReader0 = new StringReader("49'rMA,/sWhI`HC(");
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 105, 105);
      javaCharStream0.nextCharInd = 105;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 105, column 106.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'IJ5~:fAC");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 107, 69);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 107, column 71.  Encountered: \"J\" (74), after : \"\\'I\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StringReader stringReader0 = new StringReader("}E'W");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 44, 2145388542);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2145388542, javaCharStream0.getBeginColumn());
      assertEquals(80, token0.kind);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StringReader stringReader0 = new StringReader("1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-547), 16);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -547, column 16.  Encountered: \"\\u007f\" (127), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.0614889854388747
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(");
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 105, (-453));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, 13);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 13. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringReader stringReader0 = new StringReader("implements");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup(27);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals("", token0.toString());
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+'RtsQgcY{_GKslsBR");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 34, 34, 34);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }
}
