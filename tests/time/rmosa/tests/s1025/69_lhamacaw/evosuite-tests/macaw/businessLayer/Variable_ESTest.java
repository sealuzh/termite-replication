/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 11:31:55 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.Locale;
import java.util.Set;
import java.util.function.Predicate;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.631361984524191
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("yj");
      derivedVariable0.form = "yj";
      derivedVariable0.setFilePath((String) null);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.columnStart = "eV9";
      derivedVariable0.form = "eV9";
      derivedVariable0.getYear();
      derivedVariable0.getLabel();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.getFilePath();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.getAvailability();
      Variable.validateFields(derivedVariable0);
      Variable.validateFields(rawVariable0);
      derivedVariable0.getDisplayItemIdentifier();
      assertEquals("yj", derivedVariable0.getCodeBookNumber());
      
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.92749369799164
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "ontologyTerm.nameSpace.label";
      rawVariable0.setCleaningDescription((String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.columnStart = ">twuL:fSK6";
      rawVariable0.setAvailability((String) null);
      rawVariable0.getOntologyTerms();
      rawVariable0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.columnEnd = "ontologyTerm.nameSpace.label";
      User user0 = new User(">twuL:fSK6", (String) null);
      user0.setCity(";QSp");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getCodeBookNumber();
      rawVariable0.getCleaningDescription();
      assertEquals("ontologyTerm.nameSpace.label", rawVariable0.getCodeBookNumber());
      
      derivedVariable0.getAlternativeVariable();
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.5391460936374
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("S");
      User user0 = new User();
      derivedVariable0.setLabel("J-gd[M.U]SYeT");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User("S", "S");
      DerivedVariable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
      assertEquals("J-gd[M.U]SYeT", derivedVariable0.getLabel());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.668962921257037
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setCategory((String) null);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getAvailability());
      
      String string0 = rawVariable0.getCategory();
      assertNull(string0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setLabel("K");
      User user0 = new User("K", "K");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("K", derivedVariable0.getLabel());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.5391460936374
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("S");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("variable.isCoded.label");
      user0.setAddressLine2("variable.isCoded.label");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.7462151539509665
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setLabel("");
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.getValueLabels();
      assertEquals("", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.getForm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsSourceVariable(derivedVariable0);
      String string0 = rawVariable0.getCategory();
      assertEquals("Unknown", string0);
      
      rawVariable0.getAlternativeVariable();
      derivedVariable0.getAlternativeVariable();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.5813690145252886
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("`H&hg^=>V\u0002}@<>D:y");
      rawVariable0.setIsNewRecord(true);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable1.isNewRecord();
      assertEquals("`H&hg^=>V\u0002}@<>D:y", rawVariable0.getCategory());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(true);
      derivedVariable0.isCoded();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertEquals("", supportingDocument0.getTitle());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=4.2098683630006075
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Locale locale0 = Locale.ROOT;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      arrayList0.retainAll(set0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.clone();
      derivedVariable0.setCleaningDescription("UNABLE_TO_UPDATE_AVAILABILITY_STATE");
      derivedVariable0.isCoded();
      derivedVariable0.getNotes();
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getAlias();
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getColumnStart();
      assertEquals("UNABLE_TO_UPDATE_AVAILABILITY_STATE", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.749899816710008
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.codeBookNumber = "K\u0004-'j9Y";
      rawVariable0.addValueLabel(valueLabel0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("K\u0004-'j9Y", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("", rawVariable1.getName());
      
      rawVariable0.getValueLabels();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.4297811167972485
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable1);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      rawVariable0.getColumnStart();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setForm("peKOKpd\"/");
      rawVariable0.getForm();
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.283829765951666
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setForm("peKOKpd\"/");
      rawVariable0.getForm();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      assertEquals("peKOKpd\"/", rawVariable0.getForm());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.5391460936374
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("`H&hg^=>V\u0002}@<>D:y");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setYear("!FY)$?za28igbt");
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertEquals("!FY)$?za28igbt", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.805975801225258
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("S");
      User user0 = new User();
      derivedVariable0.setCleaned(false);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User.checkValidUserIDField("S");
      user0.setAddressLine2("J-gd[M.U]eT");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals(1, arrayList1.size());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Variable.validateFields(derivedVariable0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes((String) null);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable0.setForm((String) null);
      String string0 = rawVariable0.getForm();
      assertNull(string0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.749899816710008
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "k3zy";
      rawVariable0.setNotes("UNABLE_TO_UPDATE_DERIVED_VARIABLE");
      rawVariable0.setQuestionNumber("UNABLE_TO_UPDATE_DERIVED_VARIABLE");
      rawVariable0.getFilePath();
      rawVariable0.getCodeBookNumber();
      rawVariable0.getColumnEnd();
      rawVariable0.getNotes();
      rawVariable0.clone();
      assertEquals("UNABLE_TO_UPDATE_DERIVED_VARIABLE", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.5856055546841588
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCategory("`H&hg^=>V\u0002}@<>D:y");
      rawVariable0.clone();
      assertEquals("`H&hg^=>V\u0002}@<>D:y", rawVariable0.getCategory());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.4899851471172094
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setCoded(true);
      user0.setAddressLine2((String) null);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable1.removeSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable2);
      assertTrue(derivedVariable0.isCoded());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.getCleaningStatus();
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.383329504375038
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber((String) null);
      derivedVariable0.columnStart = null;
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.6264033068382404
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("`H&hg^=>V\u0002}@<>D:y");
      rawVariable0.setCategory("`H&hg^=>V\u0002}@<>D:y");
      rawVariable0.clone();
      rawVariable0.getColumnEnd();
      assertEquals("`H&hg^=>V\u0002}@<>D:y", rawVariable0.getCategory());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-1));
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-1));
      derivedVariable0.getIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = null;
      try {
        arrayList0 = new ArrayList<OntologyTerm>((Collection<? extends OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.805754096314494
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("S");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("variable.isCoded.label");
      user0.setAddressLine2("J-gd[M.U]eT");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("", ontologyTerm0.getDescription());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.5391460936374
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      String string0 = derivedVariable1.getCategory();
      assertEquals("Unknown", string0);
      
      derivedVariable1.setName("cEeo.");
      derivedVariable1.setAvailability("cEeo.");
      User user0 = new User();
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable1.setSourceVariables(arrayList0);
      user0.setUserID("awBigBbd");
      user0.setAddressLine2("");
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals(2, arrayList1.size());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList2);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      derivedVariable0.setCleaned(true);
      User user0 = new User();
      user0.setAddressLine2("zseR*YUqG6+b3e+=");
      derivedVariable0.columnStart = "ontologyTerm.ontologyName.saveChanges";
      derivedVariable0.getYear();
      assertTrue(derivedVariable0.isCleaned());
      
      rawVariable0.getSupportingDocuments();
      RawVariable rawVariable1 = new RawVariable();
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(9);
      derivedVariable0.getIdentifier();
      ArrayList<OntologyTerm> arrayList0 = null;
      try {
        arrayList0 = new ArrayList<OntologyTerm>((Collection<? extends OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      derivedVariable0.setCleaned(true);
      User user0 = new User();
      ontologyTerm1.clone();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getYear();
      derivedVariable0.setAlternativeVariable((Variable) null);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCleaned());
      
      boolean boolean0 = derivedVariable0.isCleaned();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      User user0 = new User("^\nS", "h`Fn<;jnU>XIVYLy");
      user0.setAddressLine2("OG$Fm");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertTrue(derivedVariable0.isCleaned());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      User user0 = new User();
      derivedVariable0.getName();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(boolean0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath("aaFRJD|aO");
      rawVariable0.getFilePath();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = derivedVariable0.getCategory();
      assertEquals("Unknown", string0);
      
      derivedVariable0.setName((String) null);
      User user0 = new User();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      User user1 = new User();
      user1.setAddressLine2("FC");
      derivedVariable0.getSourceVariables();
      derivedVariable0.getValueLabels();
      boolean boolean0 = derivedVariable0.isCoded();
      assertFalse(boolean0);
      
      derivedVariable0.getDisplayName();
      derivedVariable0.getAvailability();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.4899851471172094
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User("J-gd[M.U]eT", "J-gd[M.U]eT");
      user1.setAddressLine2("J-gd[M.U]eT");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable1.removeSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setCleaningStatus("J-gd[M.U]eT");
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable2);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.8862673658216265
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setCleaningStatus((String) null);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("peKOKp<P\"/", "Ofmk0L|UJL}<");
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("`H&hg^=>V\u0002}@<>D:y");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("`H&hg^=>V\u0002}@<>D:y", "`H&hg^=>V\u0002}@<>D:y");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("`H&hg^=>V\u0002}@<>D:y", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("6YM'Vl {['", "T");
      user0.setPhone("T");
      user0.setPhone("blank");
      user0.setAffiliation("Unknown");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "Unknown";
      supportingDocument0.clone();
      String string0 = rawVariable0.getFilePath();
      assertEquals("", string0);
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.630231058034413
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("6YM'Vl {['", "T");
      user0.setPhone("T");
      user0.setAffiliation("Unknown");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      supportingDocument0.clone();
      rawVariable0.getFilePath();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getDisplayName();
      derivedVariable0.createVariableSummary();
      derivedVariable0.setIdentifier((-651));
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, rawVariable0);
      assertEquals((-651), derivedVariable0.getIdentifier());
      
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.7101452415269205
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("ZS");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      String string0 = "TJ";
      derivedVariable1.createVariableSummary();
      user0.setAddressLine2("TJ");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      User user1 = new User();
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.6298762384010597
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("u]#&\"", "UNABLE_TO_CHECK_ONTOLOGY_TERM_ASSOCIATION_EXISTS");
      user0.setStatus("UNABLE_TO_CHECK_ONTOLOGY_TERM_ASSOCIATION_EXISTS");
      RawVariable rawVariable0 = new RawVariable();
      user0.setPhone("UNABLE_TO_CHECK_ONTOLOGY_TERM_ASSOCIATION_EXISTS");
      user0.setAffiliation("u]#&\"");
      rawVariable0.setIdentifier((-1));
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setAlias("p");
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.setName("s=IdN%>i\"sT5 g]");
      rawVariable0.setAlias((String) null);
      rawVariable0.createVariableSummary();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, (DerivedVariable) null, (DerivedVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.539259279828685
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("S");
      derivedVariable0.setName("S");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      user0.setAddressLine2("J-gd[M.U]eT");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("S", derivedVariable0.getAlias());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.getYear();
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("9{X$a/]H;=/z=5G");
      rawVariable0.getAlias();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "macaw.system.MacawException";
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.86257310963418
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("S");
      User user0 = new User();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      derivedVariable0.setValueLabels(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      user0.setAddressLine2("J-gd[M.U]eT");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable1.columnStart = "J-gd[M.U]eT";
      derivedVariable0.removeSupportingDocuments(arrayList1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("", ontologyTerm0.getTerm());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm2);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable((Variable) null);
      derivedVariable0.setQuestionNumber("UNABLE_TO_CREATE_TABLES");
      derivedVariable0.createVariableSummary();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      assertEquals("UNABLE_TO_CREATE_TABLES", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("3jHAG^jw3M}VW,%H+");
      rawVariable0.createVariableSummary();
      assertEquals("3jHAG^jw3M}VW,%H+", rawVariable0.getForm());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("INVALID_DERIVED_VARIABLE");
      rawVariable0.createVariableSummary();
      assertEquals("INVALID_DERIVED_VARIABLE", rawVariable0.getNotes());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.214734015212756
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.clone();
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      rawVariable0.getSupportingDocuments();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.4297811167972485
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setIdentifier(1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.containsSourceVariable(derivedVariable0);
      derivedVariable0.getAlias();
      User user0 = new User();
      derivedVariable0.getSourceVariables();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable1.hasSameDisplayName(derivedVariable4);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable4.addSupportingDocuments(arrayList0);
      derivedVariable0.createVariableSummary();
      assertEquals("1", derivedVariable0.getDisplayItemIdentifier());
      
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable4);
      assertEquals("0", derivedVariable4.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("DELETE");
      rawVariable0.createVariableSummary();
      assertEquals("DELETE", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      String string0 = derivedVariable1.getCategory();
      assertEquals("Unknown", string0);
      
      derivedVariable1.setName("cEeo.");
      User user0 = new User();
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable1.setSourceVariables(arrayList0);
      user0.setUserID("awBigBbd");
      user0.setAddressLine2("");
      User.detectFieldChanges(user0, user0, user0);
      derivedVariable1.getName();
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "0";
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getYear());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", variableSummary0.getDisplayName());
      assertEquals(0, variableSummary0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "UNABLE_TO_CHECK_VARIABLE_ASSOCIATION_DUPLICATE";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean0);
      
      String string0 = derivedVariable0.getColumnEnd();
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.5633125094217712
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setCleaningDescription("D<Y");
      rawVariable1.columnStart = "=Mrc3#";
      rawVariable1.codeBookNumber = "J-gd[M.U]eT";
      rawVariable1.setValueLabels((ArrayList<ValueLabel>) null);
      rawVariable0.hasSameDisplayName(rawVariable1);
      rawVariable1.getColumnEnd();
      rawVariable0.getQuestionNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      Integer integer0 = new Integer((-1624));
      Predicate<Object> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      arrayList0.removeIf(predicate2);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.hasSameDisplayName(rawVariable1);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      assertEquals("D<Y", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      String string0 = "S";
      derivedVariable0.columnStart = "S";
      derivedVariable0.setAvailability("S");
      derivedVariable0.getYear();
      derivedVariable0.getCodeBookNumber();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.removeSourceVariables(arrayList0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.388088652873334
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      user0.setAddressLine2("nv]Tz[}\"R%0Zf)>y");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      User user1 = new User();
      user0.clone();
      DerivedVariable.detectFieldChanges(user1, derivedVariable2, derivedVariable1);
      user1.setEmail("SELF_REFERENCING_ALTERNATIVE_VARIABLE");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "nv]Tz[}\"R%0Zf)>y";
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("nv]Tz[}\"R%0Zf)>y", rawVariable0.getColumnEnd());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.438556626225264
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "|pkgQPYiR}Z1<oh/S";
      User user0 = new User();
      user0.setPassword("|pkgQPYiR}Z1<oh/S");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable2.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.383705091229498
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      User user0 = new User();
      user0.setAddressLine2("J-gd[M.U]eT");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("IP=sV|^)BjIX#Kq");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      assertEquals("IP=sV|^)BjIX#Kq", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable0.addValueLabel(valueLabel0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setNotes("supportingDocument.description.saveChanges");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.isCoded();
      derivedVariable0.getNotes();
      derivedVariable0.getCategory();
      RawVariable rawVariable0 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setNotes("9D~h\"xg}ri");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.getAlias();
      assertEquals("9D~h\"xg}ri", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.3831253810845707
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes((String) null);
      rawVariable0.setForm((String) null);
      User user0 = new User("4d=7YH'.f!8HG>r3&|", "4d=7YH'.f!8HG>r3&|");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.notes = "sX)}@Fw8QG*j";
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setNotes("_[j");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.getYear();
      assertEquals("_[j", rawVariable0.getNotes());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.4411277208882947
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      User user1 = new User();
      user0.clone();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.notes = "=UNL+ ";
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable2);
      assertEquals("=UNL+ ", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "2";
      rawVariable0.setCategory("`H&hg^=>V\u0002}@<>D:y");
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      String string0 = rawVariable1.getCleaningDescription();
      assertEquals("`H&hg^=>V\u0002}@<>D:y", rawVariable0.getCategory());
      assertEquals("", string0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "(|rZY";
      rawVariable0.questionNumber = "general.error.invalidEmail";
      rawVariable0.getQuestionNumber();
      assertEquals("general.error.invalidEmail", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(true);
      rawVariable0.columnStart = ":7|iF(p<";
      rawVariable0.getColumnStart();
      assertEquals(":7|iF(p<", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.713243897257155
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("Z-SF");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      user0.setAddressLine2("Z-SF");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      derivedVariable2.setForm("Z-SF");
      User user1 = new User();
      User user2 = (User)user1.clone();
      DerivedVariable.detectFieldChanges(user1, derivedVariable2, derivedVariable0);
      assertEquals("Z-SF", derivedVariable2.getForm());
      
      user2.setEmail("Z-SF");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user2, rawVariable0, rawVariable0);
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.674456708045788
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      rawVariable0.setAvailability("tK|g{9'HZO~Twt'dH9 ");
      assertEquals("tK|g{9'HZO~Twt'dH9 ", rawVariable0.getAvailability());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(2632);
      derivedVariable0.containsSourceVariable(rawVariable1);
      derivedVariable0.getAlias();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.getFilePath();
      rawVariable2.setAvailability("'+/");
      derivedVariable0.hasSameDisplayName(rawVariable2);
      User user1 = new User("tK|g{9'HZO~Twt'dH9 ", "Unknown");
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, rawVariable2);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user2 = new User();
      User.detectFieldChanges(user0, user2, user2);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      DerivedVariable.detectFieldChanges(user2, derivedVariable0, derivedVariable1);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable1.addSourceVariables(arrayList0);
      derivedVariable1.setLabel("");
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "`H&hg^=>V\u0002}@<>D:y";
      rawVariable0.setCategory("`H&hg^=>V\u0002}@<>D:y");
      rawVariable0.clone();
      assertEquals("`H&hg^=>V\u0002}@<>D:y", rawVariable0.getCategory());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.5353865202004258
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("CP1T]!|>SHi}");
      rawVariable0.setCategory("`H&hg^=>V\u0002}@<>D:y");
      rawVariable0.clone();
      assertEquals("CP1T]!|>SHi}", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.5353865202004258
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber((String) null);
      rawVariable0.setCategory("`H&hg^=>V\u0002}@<>D:y");
      rawVariable0.clone();
      assertEquals("`H&hg^=>V\u0002}@<>D:y", rawVariable0.getCategory());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.5353865202004258
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("`H&hg^=>V\u0002}@<>D:y");
      rawVariable0.setCategory("`H&hg^=>V\u0002}@<>D:y");
      rawVariable0.clone();
      assertEquals("`H&hg^=>V\u0002}@<>D:y", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "ING{IbfS2_";
      rawVariable0.setCategory("`H&hg^=>V\u0002}@<>D:y");
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable1.getCleaningDescription();
      assertEquals("`H&hg^=>V\u0002}@<>D:y", rawVariable0.getCategory());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setLabel("");
      derivedVariable0.columnEnd = "";
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.getValueLabels();
      assertEquals("", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("variable.availability.label");
      derivedVariable0.form = "[}Ye0E\"}C.SRKfqoW";
      derivedVariable0.setQuestionNumber("[}Ye0E\"}C.SRKfqoW");
      derivedVariable0.removeSourceVariable((Variable) null);
      derivedVariable0.getFilePath();
      derivedVariable0.getLabel();
      derivedVariable0.setCoded(false);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getAlias();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getSupportingDocuments();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("[}Ye0E\"}C.SRKfqoW", derivedVariable0.getQuestionNumber());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("S");
      assertEquals("S", derivedVariable0.getName());
      
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      user0.setAddressLine2("J-gd[M.U]eT");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("");
      derivedVariable1.containsOntologyTerm(ontologyTerm0);
      DerivedVariable.validateFields(derivedVariable0);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.codeBookNumber = "0:QXiC56EYvdl5smx";
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      boolean boolean0 = derivedVariable2.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      String string0 = derivedVariable0.getAlias();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "A75?J/Q]e$_%Y";
      derivedVariable0.columnEnd = "A75?J/Q]e$_%Y";
      String string0 = derivedVariable0.getAlias();
      assertEquals("", string0);
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getDisplayName());
      
      rawVariable0.getFilePath();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.getName();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("variable.columnStart.label");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getLabel();
      assertEquals("variable.columnStart.label", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.48462116244288
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add((SupportingDocument) null);
      rawVariable0.questionNumber = "UNABLE_TO_GET_VARIABLE_IDENTIFIER";
      rawVariable0.setSupportingDocuments(arrayList0);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = null;
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.539665843289319
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable0.setCategory("`H&hg^=>V\u0002}@<>D:y");
      rawVariable0.clone();
      assertEquals("`H&hg^=>V\u0002}@<>D:y", rawVariable0.getCategory());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.689067872995674
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      user0.setAffiliation("variable.category.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertNull(macawChangeEvent0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.3502705392332346
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCategory();
      derivedVariable0.setName("Unknown");
      User user0 = new User();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.setQuestionNumber("Unknown");
      User user1 = new User();
      user1.setUserID("awBigBbd");
      user1.setAddressLine2("FC");
      derivedVariable0.getSourceVariables();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      derivedVariable0.isCoded();
      derivedVariable0.getDisplayName();
      assertEquals("Unknown", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.5816084910941632
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setCategory("`H&hg^=>V\u0002}@<>D:y");
      rawVariable0.clone();
      assertEquals("`H&hg^=>V\u0002}@<>D:y", rawVariable0.getCategory());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.5633125094217712
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getColumnStart();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      ArrayList<MacawChangeEvent> arrayList1 = new ArrayList<MacawChangeEvent>();
      arrayList0.retainAll(arrayList1);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setAvailability("");
      rawVariable0.addValueLabel(valueLabel0);
      derivedVariable0.addSourceVariables(arrayList0);
      Variable.validateFields(derivedVariable0);
      rawVariable0.getYear();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      User user0 = new User();
      user0.setPostCode("");
      User.checkValidUserIDField("");
      user0.setStatus("");
      RawVariable rawVariable0 = new RawVariable();
      user0.setPhone("T");
      user0.setAffiliation("s=IdN%>i\"sT5 g]");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user1 = new User();
      user1.setUserID("T");
      user0.setAddressLine2("INVALID_VALUE_LABEL");
      User user2 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument.detectFieldChanges(user2, supportingDocument0, supportingDocument0);
      derivedVariable0.getName();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.getDisplayName();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "EDIT";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      String string0 = derivedVariable0.getColumnEnd();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.questionNumber = "variable.year.label";
      String string0 = rawVariable1.getCleaningDescription();
      assertEquals("", string0);
      
      String string1 = rawVariable1.getCleaningStatus();
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", string1);
      assertNotNull(string1);
      assertFalse(rawVariable1.isCleaned());
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = ")INn>~rkY!?";
      String string0 = rawVariable0.getCleaningDescription();
      assertEquals("", string0);
      
      String string1 = rawVariable0.getCleaningStatus();
      assertEquals("Unknown", string1);
      assertNotNull(string1);
      
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getName());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "user.email.saveChanges";
      String string0 = rawVariable0.getCleaningDescription();
      assertEquals("", string0);
      
      String string1 = rawVariable0.getCleaningStatus();
      assertNotNull(string1);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", string1);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setForm("peKOKpd\"/");
      rawVariable0.getCleaningDescription();
      rawVariable0.getCleaningStatus();
      assertEquals("peKOKpd\"/", rawVariable0.getForm());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "UNABLE_TO_CREATE_TABLES";
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getName());
      assertEquals(0, variableSummary0.getIdentifier());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      String string0 = rawVariable0.getCleaningDescription();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.getName();
      // Undeclared exception!
      try { 
        DerivedVariable.validateFields((DerivedVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.5808383717256613
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User((String) null, (String) null);
      ValueLabel.differencesExist(user0, derivedVariable0, valueLabel0, valueLabel0);
      valueLabel0.setValue("[ gMWf4W|wqEJ)");
      arrayList0.add(valueLabel0);
      arrayList0.add(valueLabel0);
      Variable variable0 = null;
      rawVariable0.setAlternativeVariable((Variable) null);
      rawVariable0.setValueLabels(arrayList0);
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes(rawVariable0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.3210182221049966
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory((String) null);
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("%;-FLj");
      rawVariable0.getOntologyTerms();
      assertEquals("%;-FLj", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("variable.columnStart.label");
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.clone();
      derivedVariable0.removeSourceVariables(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "h!-Ufaf$g3=m4~m:S4";
      rawVariable0.setAvailability("Unknown");
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("UNABLE_TO_UPDATE_ONTOLOGY_TERM");
      derivedVariable0.questionNumber = "ZL}^.I^j#(b3";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("UNABLE_TO_UPDATE_ONTOLOGY_TERM", derivedVariable0.getYear());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(2538);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName((String) null);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("2538", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.getYear();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.setAlternativeVariable((Variable) null);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.getOntologyTerms();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("%S)&F.fvyU_i'");
      derivedVariable0.getNotes();
      derivedVariable0.getYear();
      assertEquals("%S)&F.fvyU_i'", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setForm("peKOKpd\"/");
      assertEquals("peKOKpd\"/", rawVariable0.getForm());
      
      RawVariable rawVariable1 = new RawVariable();
      boolean boolean0 = rawVariable1.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = rawVariable0.isNewRecord();
      assertFalse(rawVariable0.isCoded());
      assertFalse(boolean0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      int int0 = rawVariable0.getIdentifier();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      boolean boolean1 = rawVariable0.isCleaned();
      assertTrue(boolean1 == boolean0);
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("UNABLE_TO_GET_ORIGINAL_USER");
      ontologyTerm0.clone();
      arrayList0.add(ontologyTerm0);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList1);
      arrayList0.listIterator();
      derivedVariable0.removeOntologyTerms(arrayList0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }
}
