/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 11:42:18 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      String string0 = "/YkN";
      XPathLexer xPathLexer0 = new XPathLexer("/YkN");
      xPathLexer0.consume((-1));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.566621028859323
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9*xq7zrQ:O1 ");
      xPathLexer0.div();
      xPathLexer0.consume((-39));
      xPathLexer0.currentPosition();
      xPathLexer0.not();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.981410146291498
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mrNL.8kb@9gd");
      Token token0 = xPathLexer0.at();
      assertEquals("m", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals("r", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer0.not();
      assertEquals("N", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("mrNL.8kb@9gd");
      Token token4 = xPathLexer2.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals("m", token4.getTokenText());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("4..CfA%6O_6v0[^a!1e");
      Token token6 = xPathLexer3.nextToken();
      assertEquals("4.", token6.getTokenText());
      assertEquals(31, token6.getTokenType());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.5765175650716485
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("ji>)CKsWyc]");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("ji", token0.getTokenText());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.relationalOperator();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("CKsWyc]", token2.getTokenText());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.9805588237010445
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mrNL.8kb@9gd");
      Token token0 = xPathLexer0.at();
      assertEquals("m", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals("r", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("N", token2.getTokenText());
      
      Token token3 = xPathLexer1.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.minus();
      assertEquals("L", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(".8", token5.getTokenText());
      assertEquals(31, token5.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.980052280855962
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer0.star();
      xPathLexer0.at();
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume();
      xPathLexer1.consume((-2073));
      xPathLexer1.rightBracket();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      // Undeclared exception!
      try { 
        xPathLexer1.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.2774737549423403
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w/NdVw]M+");
      xPathLexer0.and();
      Token token0 = xPathLexer0.slashes();
      assertEquals(12, token0.getTokenType());
      assertEquals("w/", token0.getTokenText());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.799967291946925
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m[Ymr;Mp*Xh");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("[", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals("Y", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("mr", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.430758633903798
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1637));
      xPathLexer0.equals();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.5688032438074955
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("! F.\"n]O v^{");
      xPathLexer0.div();
      xPathLexer0.currentPosition();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.801579056776742
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.plus();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.1368151771488906
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.getPreviousToken();
      xPathLexer0.doubleColon();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.comma();
      xPathLexer0.leftParen();
      xPathLexer0.slashes();
      xPathLexer0.getPreviousToken();
      xPathLexer0.identifier();
      xPathLexer0.rightParen();
      xPathLexer0.dollar();
      xPathLexer0.comma();
      xPathLexer0.div();
      xPathLexer0.doubleColon();
      xPathLexer0.rightParen();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.consume((-2095));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.4296980140706022
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jYP/q");
      Token token0 = xPathLexer0.dots();
      assertEquals("j", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.at();
      assertEquals("Y", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.currentPosition();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.slashes();
      assertEquals(12, token2.getTokenType());
      assertEquals("P/", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("jYP/q");
      xPathLexer1.operatorName();
      xPathLexer0.literal();
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer1.consume();
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.6956064543588734
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9*xq7zrQ:O1 ");
      Token token0 = xPathLexer0.colon();
      assertEquals("9", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("O1", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.063943321244234
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.minus();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (6) (c)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.mod();
      Token token1 = xPathLexer0.plus();
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.or();
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.doubleColon();
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.7996611163858582
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.identifier();
      xPathLexer0.leftBracket();
      xPathLexer0.slashes();
      xPathLexer0.dollar();
      xPathLexer0.plus();
      xPathLexer0.dollar();
      xPathLexer0.dots();
      xPathLexer0.operatorName();
      xPathLexer0.leftBracket();
      xPathLexer0.star();
      xPathLexer0.dots();
      xPathLexer0.whitespace();
      xPathLexer0.consume((-653));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.573112427755785
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%Qaor7e2?|");
      xPathLexer0.pipe();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("%Qaor7e2?|");
      xPathLexer1.getPreviousToken();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.plus();
      xPathLexer0.mod();
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      xPathLexer0.consume((-1726));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.800698300541215
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9*xq75szrQ:O1 ");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.whitespace();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.1363835328238148
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HKSc&y[(R.<X<");
      xPathLexer0.colon();
      xPathLexer0.leftBracket();
      xPathLexer0.relationalOperator();
      xPathLexer0.star();
      xPathLexer0.slashes();
      xPathLexer0.leftParen();
      xPathLexer0.setXPath("HKSc&y[(R.<X<");
      xPathLexer0.slashes();
      xPathLexer0.notEquals();
      xPathLexer0.pipe();
      xPathLexer0.colon();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.consume((-1110));
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.573268702173663
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H");
      xPathLexer0.setXPath("s6.{L{!cfDU`l%");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.4395810351312623
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/2?SOaAwKY|5o{ewQ");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("2", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("?SOaAwKY|5o{ewQ", token2.getTokenText());
      
      char char0 = xPathLexer0.LA(0);
      assertEquals('2', char0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.7271113842046741
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*\"uiG*N\"n'g)KWC'u<");
      int int0 = (-1712);
      xPathLexer0.consume((-1712));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.6930228966639507
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9*xq7zrQ:O1 ");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
      
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer0.setXPath("4n}jRaqU3^@t`");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("4", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("n", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.1356559690710406
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.equals();
      xPathLexer0.leftParen();
      xPathLexer0.comma();
      xPathLexer0.leftBracket();
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer0.mod();
      xPathLexer0.or();
      xPathLexer0.rightParen();
      xPathLexer0.notEquals();
      xPathLexer0.consume((-639));
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      xPathLexer0.minus();
      xPathLexer0.plus();
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-768));
      xPathLexer0.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.5771584366570046
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mrNL.8kb@9gd");
      xPathLexer0.pipe();
      xPathLexer0.colon();
      xPathLexer0.literal();
      xPathLexer0.setXPath("mrNL.8kb@9gd");
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.4352718511829727
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath("m^NvOdK@");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.6935749422997235
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.setXPath("?vUX,dFt-Y4&-RSy");
      Token token1 = xPathLexer0.dots();
      assertEquals("?", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("vUX", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("S%apsgrt6");
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.440292171527223
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".Fa sfBg[eaI MSSL");
      Token token0 = xPathLexer0.plus();
      assertEquals(".", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.slashes();
      assertEquals("F", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.dots();
      assertEquals("a", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%Qaor7e2?|");
      xPathLexer0.pipe();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("%Qaor7e2?|");
      XPathLexer xPathLexer2 = new XPathLexer("%Qaor7e2?|");
      xPathLexer2.nextToken();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.8189807218793812
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9*xq7zrQ:O1 ");
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.consume((-2600));
      xPathLexer0.consume();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.695419523184595
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C#y`GG{5w\"=d}");
      xPathLexer0.or();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.691477450899438
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d(E<Q");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.6946865062702297
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" TZgOkP,B.");
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("TZgOkP", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(32, token1.getTokenType());
      assertEquals(",", token1.getTokenText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.7938131631694842
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!-w)pD]J8SDVLW!h;:");
      Token token0 = xPathLexer0.colon();
      assertEquals("!", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(6, token1.getTokenType());
      assertEquals("-", token1.getTokenText());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("w", token2.getTokenText());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.7302554198153615
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" $t@aEsD;");
      xPathLexer0.setXPath(" $t@aEsD;");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("$", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("t", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("aEsD", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.798311588720541
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d(E<Q");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("d", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("E", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("<", token2.getTokenText());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G(b@(&Q^R$xdLTVB");
      xPathLexer0.consume((-836));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.5755655726875877
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b7>pdHchYi9:");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("b7", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(">", token1.getTokenText());
      assertEquals(9, token1.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.5683304305687247
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|XrkT");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(17, token0.getTokenType());
      assertEquals("|", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("X", token1.getTokenText());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.575993265817767
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MTJsY#hOFn`x");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("MTJsY", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Q");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Q", token0.getTokenText());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.6927997985751575
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath("s6.{L{!cfDU`l%");
      Token token0 = xPathLexer0.slashes();
      assertEquals("s", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.dots();
      assertEquals(14, token1.getTokenType());
      assertEquals("6.", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token2 = xPathLexer3.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer2.equals();
      assertEquals(21, token3.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.0942863972825854
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d(E<Q");
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\u0006pzsmohdKbtfy8");
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      assertEquals("\u0006pzsmohdKbtfy8", token0.getTokenText());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.5740651975938142
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("JWh+8\"97B0Wg:");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Wh", token0.getTokenText());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.8356891051461104
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      String string0 = "F?rFHhY8-";
      XPathLexer xPathLexer0 = new XPathLexer("F?rFHhY8-");
      xPathLexer0.whitespace();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G(b@(&Q^R$xdLTVB");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("G", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.5766166829227735
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l0KeDf{");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("l0KeDf", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("{", token1.getTokenText());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.434799037944202
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%Qaore2{O");
      xPathLexer0.pipe();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Lv!YHy9`k");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Lv", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.573268702173663
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("XQ");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("XQ", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.6960369288801624
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h_JEuujt3<N\"}m");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.comma();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.2782024118633708
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w/NdVPw]M+");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("w", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals("/", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("NdVPw", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.5736944152430543
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer("&k`L aV6;1X1#TVDsy");
      xPathLexer0.setXPath("");
      xPathLexer0.operatorName();
      xPathLexer1.consume();
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("k", token0.getTokenText());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.8670331920473928
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#r");
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.pipe();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(17, token0.getTokenType());
      assertEquals("#", token0.getTokenText());
      
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.6936784780454395
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("pd+4VTirI");
      Token token0 = xPathLexer0.not();
      assertEquals("p", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("d", token1.getTokenText());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.dots();
      assertEquals("+", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("4", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("VTirI", token4.getTokenText());
      assertEquals((-1), token4.getTokenType());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.8949366929167137
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`#@lGXzc)<rj%ps/$");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("`#@lGXzc)<rj%ps/$", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals("`", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("RI{rtA,hPE");
      xPathLexer1.setXPath("`_iUFnHb:m");
      xPathLexer1.setXPath("RI{rtA,hPE");
      xPathLexer0.consume();
      Token token2 = xPathLexer1.nextToken();
      assertEquals("RI", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("@", token3.getTokenText());
      
      Token token4 = xPathLexer1.dollar();
      assertEquals("{", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.573268702173663
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("2", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.consume();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer2.nextToken();
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.8749303045106867
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h_JEuujt3<N\"}m");
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.691342224395043
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      String string0 = "K!otr'-DvY";
      XPathLexer xPathLexer0 = new XPathLexer("K!otr'-DvY");
      xPathLexer0.nextToken();
      xPathLexer0.consume((-426));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.574679636917931
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" $t@aEsD;");
      xPathLexer0.setXPath(" $t@aEsD;");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals(" ", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("t", token1.getTokenText());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-2));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.689430497624162
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9*xq7zrQ:O1 ");
      xPathLexer0.pipe();
      xPathLexer0.colon();
      xPathLexer0.literal();
      xPathLexer0.rightBracket();
      xPathLexer0.and();
      xPathLexer0.setXPath("GEbZja<5Yu^8v08");
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.identifier();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.colon();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.5743910366293306
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("gAy");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("gAy", token0.getTokenText());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.572948035186329
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("I'e");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("Fn8F!dq");
      assertEquals("Fn8F!dq", xPathLexer1.getXPath());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.6936449583059818
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K!otr'-DvY");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(23, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.6916065998081296
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H}+\b(q");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("H}", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("H}+\b(q");
      Token token1 = xPathLexer1.nextToken();
      assertEquals("H", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("f?&|,q{");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("f", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_F9:?=vq,q@");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("_F9", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.850023565853028
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Fn8F!dq");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("Fn", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("8", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("F", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("Fn8F!dq");
      Token token3 = xPathLexer1.plus();
      assertEquals("F", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("n8F", token4.getTokenText());
      
      xPathLexer1.consume();
      Token token5 = xPathLexer0.nextToken();
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer1.doubleColon();
      assertEquals("dq", token6.getTokenText());
      assertEquals(19, token6.getTokenType());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.4326507335097785
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9*xq7zrQ:O1 ");
      xPathLexer0.at();
      xPathLexer0.colon();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.4411482442934083
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s6.{L{!cfDU`l%");
      xPathLexer0.setXPath("s6.{L{!cfDU`l%");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      char char0 = xPathLexer0.LA(7);
      assertEquals('c', char0);
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(31, token1.getTokenType());
      assertEquals("6.", token1.getTokenText());
      
      xPathLexer0.div();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(3, int0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.6922998453647637
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ji>)CKsWyc]");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      int int0 = xPathLexer0.endPosition();
      assertEquals(11, int0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.5736944152430543
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ji>)CKsWyc]");
      xPathLexer0.setXPath("`B^sH):>[");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.0638600328428014
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Dnj*(Av-eZ.");
      xPathLexer0.identifier();
      xPathLexer0.leftBracket();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftParen();
      xPathLexer0.slashes();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer("Dnj*(Av-eZ.");
      xPathLexer0.dots();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer1.getPreviousToken();
      xPathLexer2.consume();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.getPreviousToken();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.isIdentifierChar('2');
      xPathLexer4.identifier();
      xPathLexer2.hasMoreChars();
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer5 = new XPathLexer("");
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer4.consume((-330));
      xPathLexer6.slashes();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer0.mod();
      Token token0 = xPathLexer5.equals();
      XPathLexer xPathLexer8 = new XPathLexer("");
      xPathLexer8.setPreviousToken(token0);
      // Undeclared exception!
      try { 
        xPathLexer4.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.576335951617724
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.dots();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(13, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.3334478243497765
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n^.j&eho#T+])=");
      xPathLexer0.setXPath("");
      XPathLexer xPathLexer1 = new XPathLexer("3ks9CAu%m{8[;(0.8");
      Token token0 = xPathLexer1.doubleColon();
      assertEquals("3k", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.dots();
      Token token1 = xPathLexer1.nextToken();
      assertEquals("s9CAu", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.7467714133573908
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.pipe();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.slashes();
      assertEquals(".", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals("e", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("rken.saxpath.Token", token5.getTokenText());
      
      xPathLexer0.or();
      Token token6 = xPathLexer0.rightParen();
      assertEquals(2, token6.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.345569121835156
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.8186269335454979
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" $t@aEsD;");
      xPathLexer0.setXPath(" $t@aEsD;");
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.slashes();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.437973641118805
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n^.j&eho#T+])=");
      xPathLexer0.setXPath("");
      XPathLexer xPathLexer1 = new XPathLexer("3ks9CAu%m{8[;(0.8");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("3", token1.getTokenText());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.573268702173663
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U5");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("U5", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.7228644023646986
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K!otr'-DvY");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("otr", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("", token2.getTokenText());
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.7177268366806968
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*\"uiG*N\"n'g)KWC'u<");
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-949));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.689329057598464
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9*xq7zrQ:O1 ");
      Token token0 = xPathLexer0.pipe();
      assertEquals("9", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("*", token1.getTokenText());
      
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.setXPath("GEbZja<5Yu^8v08");
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.identifier();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(7, token4.getTokenType());
      assertEquals("<", token4.getTokenText());
      
      xPathLexer0.at();
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("Y", token5.getTokenText());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals("u", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.770643861826774
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*\"uiG*N\"n'g)KWC'u<");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("*", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("uiG", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(20, token3.getTokenType());
      assertEquals("*", token3.getTokenText());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.3455923483728691
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("c", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("om.werken.saxpath.Token", token1.getTokenText());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.437973641118805
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("02{(d&>tsde_ ");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("02", token0.getTokenText());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.7411931785544414
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=Af9'aP7taH=6Au");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(21, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Af9", token1.getTokenText());
      
      xPathLexer0.consume(121);
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("=Af9'aP7taH=6Au");
      Token token3 = xPathLexer1.comma();
      assertEquals("=", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      xPathLexer0.consume();
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("Z%");
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.5750167629187737
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("DP;.Dw Qb1w-a");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("DP", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("Fn8F!dq");
      Token token1 = xPathLexer1.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("F", token1.getTokenText());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.093308880176036
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/<U@9T!x$RT/n");
      xPathLexer0.number();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[R");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("[", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.9838811697675687
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.colon();
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      xPathLexer0.setXPath(") (");
      xPathLexer0.whitespace();
      xPathLexer0.leftBracket();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.identifier();
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      
      xPathLexer0.slashes();
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      xPathLexer0.and();
      Token token6 = xPathLexer0.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      Token token8 = xPathLexer0.number();
      assertEquals(30, token8.getTokenType());
      
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer0.slashes();
      assertEquals(11, token10.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.currentPosition();
      Token token11 = xPathLexer0.leftBracket();
      assertEquals(3, token11.getTokenType());
      
      Token token12 = xPathLexer0.star();
      assertEquals(20, token12.getTokenType());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#r");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("#r", token0.getTokenText());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w/NdVPw]M+");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("w", token0.getTokenText());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.8929447777488657
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      String string0 = "LCX4TLDDDe|YQi@";
      XPathLexer xPathLexer0 = new XPathLexer("kX>");
      xPathLexer0.div();
      xPathLexer0.dollar();
      xPathLexer0.getXPath();
      xPathLexer0.consume();
      xPathLexer0.literal();
      xPathLexer0.comma();
      xPathLexer0.rightBracket();
      xPathLexer0.rightBracket();
      xPathLexer0.consume((-1668));
      xPathLexer0.rightParen();
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.7711733156528782
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Fn8F!dq");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Fn8F", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("Fn8F!dq");
      xPathLexer1.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      assertEquals("dq", token2.getTokenText());
      
      Token token3 = xPathLexer1.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("n8", token3.getTokenText());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")r6_$Zu}()~Aes,[@I");
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.2815553875954016
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-949));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.060276460265276
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.slashes();
      xPathLexer0.star();
      xPathLexer0.at();
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume();
      xPathLexer1.consume((-2073));
      xPathLexer1.rightBracket();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.notEquals();
      xPathLexer1.equals();
      // Undeclared exception!
      try { 
        xPathLexer1.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P#r]");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("P", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("p");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("p", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1&B");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("1", token0.getTokenText());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.801642001678235
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*oZ3!a");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.leftBracket();
      xPathLexer0.and();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.2959948461204251
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(OE5@.;Z<Z1yTG");
      Token token0 = xPathLexer0.dots();
      assertEquals("(", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("O", token1.getTokenText());
      
      xPathLexer0.currentPosition();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.slashes();
      assertEquals("E", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.dots();
      xPathLexer0.consume();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(";Z<Z1yTG", token4.getTokenText());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals(";", token5.getTokenText());
      
      Token token6 = xPathLexer0.literal();
      assertEquals("<", token6.getTokenText());
      assertNotNull(token6);
      assertEquals(27, token6.getTokenType());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.4374398721271855
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" TZgOkP,B.");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("TZgOkP", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals(",B", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(".", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.5275863371526133
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h_JEuujt3<N\"}m");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.literal();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.literal();
      Token token1 = xPathLexer0.nextToken();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.5007683200926882
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*oZ3!a");
      xPathLexer0.consume();
      xPathLexer0.not();
      Token token0 = xPathLexer0.slashes();
      assertEquals("Z", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("3", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("!", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      assertEquals("a", token3.getTokenText());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals("a", token4.getTokenText());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.65714248061445
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.slashes();
      assertEquals("o", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.dots();
      assertEquals("m.", token2.getTokenText());
      assertEquals(14, token2.getTokenType());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("erken.saxpath.Token", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.0894379124341005
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H}+\b(q");
      xPathLexer0.setXPath("H}+\b(q");
      XPathLexer xPathLexer1 = new XPathLexer(",V(vM'i9O");
      boolean boolean0 = xPathLexer1.isIdentifierChar('w');
      xPathLexer0.and();
      boolean boolean1 = xPathLexer1.isIdentifierStartChar('<');
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.5868492247490649
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*oZ3!a");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("*", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.dots();
      assertEquals("o", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("Z3", token2.getTokenText());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("a", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.getPreviousToken();
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.6518577857792476
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/YkN");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("/", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("YkN", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.5651558273941215
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.getXPath();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.4433460464912105
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("-Z8bQx4x}6GO3H");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token0);
      assertEquals("-Z8bQx4x", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.6911745816310761
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ji>)CKsWyc]");
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2799));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.7969671154659554
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.whitespace();
      xPathLexer0.rightParen();
      xPathLexer0.not();
      xPathLexer0.slashes();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-921));
      xPathLexer0.pipe();
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.373307677318121
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ji>)CKsWyc]");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("ji", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(">", token1.getTokenText());
      assertEquals(9, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals(")", token2.getTokenText());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.378225679787863
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*\"uiG*N\"n'g)KWC'u<");
      xPathLexer0.pipe();
      xPathLexer0.equals();
      xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.683711063822706
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.at();
      xPathLexer0.consume((-959));
      xPathLexer0.dollar();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LCX4TLDDDe|YQi@");
      xPathLexer0.div();
      xPathLexer0.dollar();
      String string0 = xPathLexer0.getXPath();
      assertEquals("LCX4TLDDDe|YQi@", string0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.5736944152430543
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      xPathLexer0.at();
      xPathLexer0.and();
      xPathLexer0.getXPath();
      xPathLexer0.colon();
      xPathLexer0.identifier();
      xPathLexer0.consume();
      xPathLexer0.endPosition();
      xPathLexer0.doubleColon();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.309631152261199
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("com.werken.saxpath.Token", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.298603926350669
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath("2&=w{{`Xn");
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.6554306006456874
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@'vl[dMn_a\nfIm*~7");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(16, token0.getTokenType());
      assertEquals("@", token0.getTokenText());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      xPathLexer0.consume();
      xPathLexer0.consume();
      xPathLexer0.literal();
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer0.and();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(23, int0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.isIdentifierChar('&');
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      boolean boolean0 = xPathLexer1.isIdentifierStartChar('q');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.6644546059297527
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ji>)CKsWyc]");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("ji", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(")", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals("CKsWyc", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.7134716458771924
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9*xq7zrQ:O1 ");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("9", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("xq7zrQ:O1 ", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("x", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.072465447014762
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H}+\b(q");
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.div();
      xPathLexer1.consume();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("ydb#52l");
      assertFalse(xPathLexer2.equals((Object)xPathLexer1));
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.6639046245102058
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ji>)CKsWyc]");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("ji", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.not();
      assertEquals("C", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("KsWyc]", token3.getTokenText());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.4212687714490426
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" TZgOkP,B.");
      xPathLexer0.consume((-307));
      xPathLexer0.star();
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.261366144130856
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath("s6.{L{!cfDU`l%");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals("6.", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("{L", token1.getTokenText());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.2015282602738844
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!_#i>)CKsWy]");
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.star();
      xPathLexer0.LA(1649);
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.3455923483728691
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("om.werken.saxpath.Token", token1.getTokenText());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.1286092838889359
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("G(b@(&Q^R$xdLTVB");
      xPathLexer0.setXPath("?]Cj*rr,N19 Y7F]n");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("?", token0.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Cj", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.4646278760667732
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9*xq7zrQ:O1 ");
      Token token0 = xPathLexer0.at();
      assertEquals("9", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals("*", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("q", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("7", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("zrQ:O1 ", token5.getTokenText());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      xPathLexer0.consume(0);
      Token token0 = xPathLexer0.comma();
      assertEquals("c", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`#@lGXzc)<rj%ps/$");
      XPathLexer xPathLexer1 = new XPathLexer("`#@lGXzc)<rj%ps/$");
      boolean boolean0 = xPathLexer1.isIdentifierChar('<');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 142
  /*Coverage entropy=2.6921740722857144
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.currentPosition();
      xPathLexer0.colon();
      xPathLexer0.dots();
      xPathLexer0.not();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer();
      boolean boolean0 = xPathLexer1.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.2628096476240334
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(OE5@.;Z<Z1yTG");
      xPathLexer0.dots();
      xPathLexer0.div();
      xPathLexer0.at();
      xPathLexer0.currentPosition();
      xPathLexer0.mod();
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      xPathLexer0.dots();
      xPathLexer0.consume();
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.278649559223372
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      Token token1 = xPathLexer1.equals();
      assertEquals(21, token1.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer0.setXPath(".>}{Lrm@[m>qgw6x(Ht");
      Token token2 = xPathLexer1.identifier();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(".", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(9, token4.getTokenType());
      assertEquals(">", token4.getTokenText());
      
      boolean boolean0 = xPathLexer1.isIdentifierStartChar('t');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.071852075516091
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H}+\b(q");
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("ydb#52l");
      assertFalse(xPathLexer2.equals((Object)xPathLexer1));
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.261366144130856
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath("s6.{L{!cfDU`l%");
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.div();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.0668077061627648
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("! F.\"n]O v^{");
      xPathLexer0.div();
      Token token0 = xPathLexer0.rightParen();
      assertEquals("!", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals(" ", token1.getTokenText());
      
      xPathLexer0.currentPosition();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("F.", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(12, int0);
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.256974413015246
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(2, token1.getTokenType());
      assertEquals(")", token1.getTokenText());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=0.9278435789256826
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{JhE1/i:!@%D,B_lE2|");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("{JhE1/i:!@%D,B_lE2|", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("{", token1.getTokenText());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=0.9040486083787984
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!_#i>)CKsWy]");
      xPathLexer0.nextToken();
      xPathLexer0.LA(1649);
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }
}
