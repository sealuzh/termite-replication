/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 11:24:30 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.util.List;
import java.util.Vector;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.sql.dictionary.GenericDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPackage;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.h2.jdbcx.JdbcDataSource;
import org.hsqldb.lib.FileUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = "Timestamp";
      String[] stringArray0 = new String[5];
      stringArray0[0] = "3'HEP&qv,k0Cmc&DXj";
      stringArray0[1] = "3'HEP&qv,k0Cmc&DXj";
      stringArray0[2] = "LSgu3";
      stringArray0[3] = "[kXb9^);1)QfLp?";
      String[] stringArray1 = new String[3];
      stringArray1[0] = "FOREIGN KEY ";
      stringArray1[1] = "isBeforeFirst";
      stringArray1[2] = "[kXb9^);1)QfLp?";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("3'HEP&qv,k0Cmc&DXj", stringArray0, "FOREIGN KEY ", "LSgu3", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("left");
      String[] stringArray0 = new String[2];
      stringArray0[1] = "left";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, stringArray0[0], true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      SQLUtil.join("left", stringArray0[0], stringArray0, "alter table", "create materialized view", stringArray0);
      SQLUtil.isProcedureCall("left");
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, (StringBuilder) null);
      assertEquals("unique constraint", dBPrimaryKeyConstraint0.getObjectType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("zcRu");
      DBDataType dBDataType0 = DBDataType.getInstance((-3018), "zcRu");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("zcRu", defaultDBTable0, dBDataType0, integer0);
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      List<DBColumn> list0 = defaultDBTable0.getColumns();
      String string1 = SQLUtil.renderColumnNames(list0);
      assertTrue(string1.equals((Object)string0));
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[11];
      stringArray0[1] = "left";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, stringArray0[0], true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      SQLUtil.removeComments("create materialized view");
      DefaultDBColumn defaultDBColumn0 = null;
      try {
        defaultDBColumn0 = new DefaultDBColumn("create materialized view", defaultDBTable0, 1302, "PRIMARY KEY (, left, , , , , , , , , )");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      String[] stringArray0 = new String[7];
      String string0 = SQLUtil.join("NCLOB", "NCLOB", stringArray0, "NCLOB", "unknown", stringArray0);
      assertEquals("NCLOB join NCLOB as unknown on NCLOB.null = unknown.null and NCLOB.null = unknown.null and NCLOB.null = unknown.null and NCLOB.null = unknown.null and NCLOB.null = unknown.null and NCLOB.null = unknown.null and NCLOB.null = unknown.null", string0);
      
      String string1 = SQLUtil.normalize("/*", false);
      assertEquals("/*", string1);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.renderColumnListWithTableName((String) null, stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("selectcreatestatement()");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      String string0 = "*lV_v(w\"@{>";
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("*lV_v(w\"@{>");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: *lV_v(w\"@{>
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1031808349614796
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("M_[W-M");
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "0");
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      assertEquals(242, jdbcDataSource0.getTraceId());
      
      DBDataType dBDataType0 = DBDataType.getInstance((-514), "M_[W-M");
      Integer integer0 = RawTransaction.ABORT;
      Integer integer1 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("M_[W-M", defaultDBTable0, dBDataType0, integer1);
      defaultDBColumn0.setDefaultValue("NCLOB");
      SQLUtil.renderColumn(defaultDBColumn0);
      Boolean boolean0 = SQLUtil.mutatesStructure("M_[W-M M_[W-M(0) DEFAULT NCLOB NULL");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      SQLUtil.isQuery("SELECT * FROM ");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("SELECT * FROM ");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "h";
      stringArray0[1] = "h";
      stringArray0[2] = "SELECT * FROM ";
      stringArray0[3] = "SELECT * FROM ";
      stringArray0[4] = "h";
      stringArray0[5] = "h";
      stringArray0[6] = "SELECT * FROM ";
      stringArray0[7] = "execalter indexreferences";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "h", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("SELECT * FROM ", true, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      NameSpec nameSpec0 = NameSpec.NEVER;
      File file0 = FileUtil.canonicalFile("h");
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      PrintStream printStream0 = mockPrintStream0.format("SELECT * FROM ", (Object[]) stringArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(printStream0, false);
      PrintWriter printWriter0 = mockPrintWriter0.printf("execalter indexreferences", (Object[]) stringArray0);
      SQLUtil.renderCreateTable(dBTable0, false, nameSpec0, printWriter0);
      assertSame(defaultDBTable0, dBTable0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8720086468341763
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "drop table", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("org.apache.derby.impl.sql.execute.NestedLoopJoinResultSet", true, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(dBTable0, "drop table", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      NameSpec nameSpec1 = NameSpec.IF_REPRODUCIBLE;
      MockFile mockFile0 = new MockFile("drop table", "org.apache.derby.impl.sql.execute.NestedLoopJoinResultSet");
      MockFile mockFile1 = new MockFile(mockFile0, "drop table");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile1, false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      PrintWriter printWriter0 = mockPrintWriter0.format("CONSTRAINT \"drop table\" PRIMARY KEY ()", (Object[]) stringArray0);
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec1, printWriter0);
      StringBuilder stringBuilder0 = new StringBuilder("Owu'aW~hi~s1A");
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition("Owu'aW~hi~s1A", stringBuilder0);
      int int0 = (-34862631);
      // Undeclared exception!
      try { 
        stringBuilder1.replace((-34862631), (-34862631), "CONSTRAINT \"drop table\" PRIMARY KEY ()");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -34862631
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("6gUg");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "a";
      stringArray0[1] = "6gUg";
      stringArray0[2] = "6gUg";
      DBDataType.getInstance(45, "CHR");
      Object object0 = new Object();
      Object object1 = new Object();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn((String) null, defaultDBTable0, 80, "a");
      // Undeclared exception!
      try { 
        SQLUtil.renderValue(defaultDBColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".n^1z?=x2)qAb<2zi[");
      SQLUtil.removeComments(".n^1z?=x2)qAb<2zi[");
      boolean boolean0 = SQLUtil.isQuery("select into");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "(";
      stringArray0[1] = "(";
      stringArray0[2] = "(";
      stringArray0[3] = "(";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "(", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY ((, (, (, (, )", string0);
      
      boolean boolean0 = SQLUtil.isProcedureCall("(");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("L$k1Jt1!");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      SQLUtil.isQuery("L$k1Jt1!");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "1L+Nw{.[nHYQ0";
      stringArray0[1] = "gethas";
      stringArray0[2] = "columnPos";
      SQLUtil.join("AUi*drqiy", "gethas", stringArray0, "AUi*drqiy", "yYPloB.D", stringArray0);
      // Undeclared exception!
      SQLUtil.isDDL("/*");
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.isProcedureCall("/*");
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("", stringBuilder0);
      DBDataType dBDataType0 = DBDataType.getInstance(3524, "insertexdcbte");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", (DBTable) null, dBDataType0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder1);
      assertEquals("INSERTEXDCBTE", stringBuilder1.toString());
      assertEquals("INSERTEXDCBTE", stringBuilder0.toString());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Boolean boolean0 = new Boolean("--");
      Boolean boolean1 = Boolean.TRUE;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "--");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.removeComments("-Odl8N^-<Z|(g.5w");
      SQLUtil.normalize("--", false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-Odl8N^-<Z|(g.5w";
      stringArray0[1] = "--";
      stringArray0[3] = "--";
      // Undeclared exception!
      try { 
        defaultDBTable0.getForeignKeyConstraint(stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table 'null' has no foreign key with the columns (-Odl8N^-<Z|(g.5w, --, , --)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance((-3018), "siy|~nBZgFIzH;O;67");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Integer integer1 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("siy|~nBZgFIzH;O;67", defaultDBTable0, dBDataType0, integer1);
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.864555230685108
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("M_[W-KM");
      String[] stringArray0 = new String[12];
      stringArray0[0] = "qw`4awmg";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "qw`4awmg", false, stringArray0);
      dBUniqueConstraint0.setDoc("}W\"43DJJ(R=;");
      defaultDBTable0.getUniqueConstraint(stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("7QR1.UZC9ZD(", false, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      boolean boolean0 = SQLUtil.isProcedureCall("qw`4awmg");
      assertFalse(boolean0);
      
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint1 = defaultDBTable0.getUniqueConstraint(stringArray0);
      DefaultDBTable defaultDBTable2 = new DefaultDBTable("");
      String string0 = SQLUtil.renderValue("qw`4awmg");
      assertEquals("'qw`4awmg'", string0);
      
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string1 = SQLUtil.constraintSpec(dBUniqueConstraint1, nameSpec0);
      assertEquals("UNIQUE (qw`4awmg, , , , , , , , , , , )", string1);
      
      dBUniqueConstraint0.equals((Object) null);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", dBTable0, 1683, "");
      String string2 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("", string2);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "L$k1Jt1!";
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      genericDescriptorList0.add((Object) "L$k1Jt1!");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) genericDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "M_[W-M";
      stringArray0[1] = "M_[W-M";
      Character character0 = Character.valueOf('i');
      Character.isBmpCodePoint(843);
      SQLUtil.renderValue(character0);
      try { 
        Integer.valueOf((String) null);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("6gUg");
      String string0 = "a";
      String[] stringArray0 = new String[4];
      stringArray0[0] = "a";
      stringArray0[1] = "execute";
      stringArray0[2] = "6gUg";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint(" NOT", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec0);
      int int0 = 45;
      stringBuilder0.append(45);
      // Undeclared exception!
      try { 
        stringBuilder0.insert(95, 0.0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 95
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "SELECT * FROM ");
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-1988), "drop tablenclob");
      String string0 = "select A#intoexdc|te";
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("drop tablenclob", defaultDBTable0, dBDataType0, integer0);
      defaultDBColumn0.setFractionDigits(integer0);
      defaultDBColumn0.toString();
      TableContainer tableContainer0 = new TableContainer("drop tablenclob : DROP TABLENCLOB(3,3)");
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = null;
      try {
        pipedReader0 = new PipedReader(pipedWriter0, (-244));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe size <= 0
         //
         verifyException("java.io.PipedReader", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      String string0 = "Qc_J7@!";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Qc_J7@!");
      DBDataType dBDataType0 = DBDataType.getInstance((-3018), "Qc_J7@!");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Qc_J7@!", defaultDBTable0, dBDataType0, integer0);
      DBColumn[] dBColumnArray0 = new DBColumn[11];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("M_[W-KM");
      DBSchema dBSchema0 = new DBSchema("ALTER TABLE ");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("exec|te", dBSchema0);
      DBPackage dBPackage0 = new DBPackage("\"r#Zoy2mA|:xNB-~`", dBSchema0);
      dBSchema0.addPackage(dBPackage0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "\"r#Zoy2mA|:xNB-~`";
      String[] stringArray1 = new String[7];
      stringArray1[0] = "ALTER TABLE ";
      stringArray1[1] = "M_[W-KM";
      stringArray1[2] = "\"r#Zoy2mA|:xNB-~`";
      stringArray1[3] = "ALTER TABLE ";
      stringArray1[4] = "\"r#Zoy2mA|:xNB-~`";
      stringArray1[5] = "ALTER TABLE ";
      stringArray1[6] = "exec|te";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable1, stringArray1, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("[7x_");
      List<DBColumn> list0 = defaultDBTable0.getColumns();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(list0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Qc_J7@!", defaultDBTable0, 122, "drop able0j*#u(9)yb]|#\"?{");
      String string0 = "SALT '";
      // Undeclared exception!
      try { 
        defaultDBTable0.getColumn("SALT '");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column 'SALT '' not found in table 'null'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = null;
      try {
        defaultDBColumn0 = new DefaultDBColumn("(", defaultDBTable0, 2366, "(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("b9h3", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("org.h2.command.ddl.AlterTableDropConstraint", stringBuilder0);
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      jdbcDataSource0.getLogWriter();
      assertEquals(145, jdbcDataSource0.getTraceId());
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.h2.command.ddl.AlterTableDropConstraint");
      Object object0 = new Object();
      Object object1 = new Object();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      String string0 = SQLUtil.normalize("*/", false);
      assertEquals("*/", string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "y3yX_-3=_He";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "i^#%q4B<\">&},";
      stringArray0[5] = "";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      defaultDBTable1.getUniqueConstraint(stringArray0);
      SQLUtil.renderValue(defaultDBTable1);
      Object object0 = new Object();
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("execute", false, "execute", "execute");
      dBCheckConstraint0.setName((String) null);
      String string0 = SQLUtil.renderValue("execute");
      assertEquals("'execute'", string0);
      
      String string1 = SQLUtil.typeAndName(dBCheckConstraint0);
      assertEquals("check constraint constraint", string1);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      VersionNumber versionNumber0 = new VersionNumber(columnDescriptorList0);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("LpU`/M*n{", "FU?)o|i9", versionNumber0);
      defaultDatabase0.getTable("+*?lKy9m0A)i", false);
      DBDataType dBDataType0 = DBDataType.getInstance(242, "FU?)o|i9");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("LpU`/M*n{", (DBTable) null, dBDataType0, integer0);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("FU?)O|I9(2)", string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("exec");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.toString();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "chdpPbzS/mCG";
      stringArray0[1] = "chdpPbzS/mCG";
      stringArray0[2] = "chdpPbzS/mCG";
      stringArray0[3] = "chdpPbzS/mCG";
      stringArray0[4] = null;
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, true, stringArray0);
      SQLUtil.leftJoin("chdpPbzS/mCG", stringArray0, "drop materialized view", "chdpPbzS/mCG", stringArray0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("drop materialized view", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      DBUniqueConstraint dBUniqueConstraint1 = new DBUniqueConstraint(defaultDBTable0, (String) null, true, stringArray0);
      SQLUtil.constraintName(dBUniqueConstraint1);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("deletenfy/l\"p:^[qzs9`");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("SPACE_TABLE", (String[]) null, "~'%", "FOREIGN KEY ", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("", stringBuilder0);
      SQLUtil.substituteMarkers("", "-YjosN", stringBuilder0);
      assertEquals("", stringBuilder0.toString());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      String string0 = SQLUtil.normalize("aARYtP*KcDg&cC-h", true);
      assertEquals("aARYtP * KcDg & cC - h", string0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("drop table");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("CLOB");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "CLOB";
      stringArray0[1] = "CLOB";
      stringArray0[2] = "CLOB";
      stringArray0[3] = "CLOB";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "CLOB", false, stringArray0);
      String string0 = SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      assertEquals("CONSTRAINT CLOB ", string0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("3#>jgWCp+Og<b O", true, "#N/a??jNM\"FyTT5>", "sm");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "SELECT * FROM ");
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0);
      assertEquals("SELECT * FROM CONSTRAINT \"3#>jgWCp+Og<b O\" ", stringBuilder0.toString());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      String string0 = SQLUtil.normalize("Kz.w", false);
      assertEquals("Kz.w", string0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("gethashjoinr");
      assertNull(boolean0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("deletenfy/l\"p:^[qzs9`");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("SELECT * FROM ");
      assertFalse(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("create unique index");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("M_[W-M");
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      String[] stringArray0 = new String[1];
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.join("(i*j*>", "4gRC?&\"2A[O2,p[TM", stringArray0, "", "4gRC?&\"2A[O2,p[TM", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("drop index");
      PrintWriter printWriter0 = mockPrintWriter0.append('<');
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.renderCreateTable(defaultDBTable1, true, nameSpec0, mockPrintWriter0);
      assertSame(mockPrintWriter0, printWriter0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("M_[W-KM");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "drop table";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "drop table", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("7QR1.UZC9ZD(", false, dBUniqueConstraint0);
      SQLUtil.isProcedureCall("drop table");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      defaultDBTable0.getUniqueConstraint(stringArray0);
      Object[] objectArray0 = new Object[8];
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, objectArray0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)106;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)44;
      byteArray0[4] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SQLUtil.normalize("create tablenfy/l\"p:^[qzs9`", false);
      SQLUtil.parseColumnTypeAndSize("M_[W-KM");
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("9<H$Q~9_3:U/B/Y", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      jdbcDataSource0.getLogWriter();
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.864555230685108
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.peek();
      String string0 = SQLUtil.renderValue((Object) null);
      assertEquals("null", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("null");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "null";
      stringArray0[1] = "null";
      stringArray0[2] = "null";
      stringArray0[3] = "null";
      stringArray0[4] = "null";
      stringArray0[5] = "null";
      stringArray0[6] = "null";
      stringArray0[7] = "null";
      defaultDBTable0.getUniqueConstraint(stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("null");
      stringBuilder0.append(true);
      boolean boolean0 = SQLUtil.isQuery("create materialized view");
      assertFalse(boolean0);
      
      SQLUtil.removeComments("`5Hg=Tn(");
      NameSpec nameSpec0 = NameSpec.NEVER;
      MockFile mockFile0 = new MockFile("create materialized view");
      File file0 = FileUtil.canonicalFile((File) mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      PrintWriter printWriter0 = mockPrintWriter0.append('[');
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("encryptionAlgorithm", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, printWriter0);
      String string1 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("(null, null, null, null, null, null, null, null)", string1);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "@L\"_'cCkt1(";
      stringArray0[1] = "@L\"_'cCkt1(";
      stringArray0[2] = "@L\"_'cCkt1(";
      stringArray0[3] = "@L\"_'cCkt1(";
      String[] stringArray1 = new String[5];
      stringArray1[0] = "//";
      stringArray1[1] = "@L\"_'cCkt1(";
      stringArray1[2] = "//";
      stringArray1[3] = "@L\"_'cCkt1(";
      stringArray1[4] = "//";
      String string0 = SQLUtil.innerJoin("@L\"_'cCkt1(", stringArray0, "//", "org.apache.derby.impl.jdbc.LOBStoredProcedure", stringArray1);
      assertEquals("// as org.apache.derby.impl.jdbc.LOBStoredProcedure on @L\"_'cCkt1(.@L\"_'cCkt1( = org.apache.derby.impl.jdbc.LOBStoredProcedure.// and @L\"_'cCkt1(.@L\"_'cCkt1( = org.apache.derby.impl.jdbc.LOBStoredProcedure.@L\"_'cCkt1( and @L\"_'cCkt1(.@L\"_'cCkt1( = org.apache.derby.impl.jdbc.LOBStoredProcedure.// and @L\"_'cCkt1(.@L\"_'cCkt1( = org.apache.derby.impl.jdbc.LOBStoredProcedure.@L\"_'cCkt1(", string0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.4642567260559776
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      String[] stringArray0 = new String[12];
      String string0 = SQLUtil.join("NCLOB", "NCLOB", stringArray0, "NCLOB", "NCLOB", stringArray0);
      assertEquals("NCLOB join NCLOB as NCLOB on NCLOB.null = NCLOB.null and NCLOB.null = NCLOB.null and NCLOB.null = NCLOB.null and NCLOB.null = NCLOB.null and NCLOB.null = NCLOB.null and NCLOB.null = NCLOB.null and NCLOB.null = NCLOB.null and NCLOB.null = NCLOB.null and NCLOB.null = NCLOB.null and NCLOB.null = NCLOB.null and NCLOB.null = NCLOB.null and NCLOB.null = NCLOB.null", string0);
      
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("*", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null, dBSchema0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "fx3", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string1 = SQLUtil.ukSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT fx3 UNIQUE (, , , , , , , , , , , )", string1);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "[^JD`Wfr*,x,k";
      stringArray0[1] = "[^JD`Wfr*,x,k";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "[^JD`Wfr*,x,k", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("[^JD`Wfr*,x,k", true, dBUniqueConstraint0);
      DBUniqueIndex dBUniqueIndex1 = new DBUniqueIndex(",V(vM'i9O", true, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex1.getTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("`8nMVae([=WH_b|", true, defaultDBTable0, stringArray0, dBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE ([^JD`Wfr*,x,k, [^JD`Wfr*,x,k)", string0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      String string0 = SQLUtil.normalize("@p{pz ,<%Q`4rs$", true);
      assertEquals("@ p { pz, < % Q ` 4rs $", string0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      SQLUtil.normalize("", true);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      // Undeclared exception!
      try { 
        defaultDBTable0.getUniqueConstraint("select into");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      String string0 = SQLUtil.normalize("'l7%e_.) Pxdv", false);
      assertEquals("'l7%e_.) Pxdv'", string0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      String string0 = SQLUtil.normalize("setNCharacterStream(int, Reader)", false);
      assertEquals("setNCharacterStream (int, Reader)", string0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("ORDER", (String[]) null, "ORDER", "ORDER", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      String[] stringArray0 = new String[7];
      String string0 = SQLUtil.join((String) null, (String) null, stringArray0, "unknown", (String) null, stringArray0);
      assertEquals("unknown as null on null.null = null.null and null.null = null.null and null.null = null.null and null.null = null.null and null.null = null.null and null.null = null.null and null.null = null.null", string0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      String string0 = "x";
      String[] stringArray0 = new String[1];
      String string1 = "7i2;q?n";
      String string2 = "constraint";
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("7i2;q?n", stringArray0, "constraint", "constraint", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      String string0 = SQLUtil.normalize("/KMp{#vJw5t:%P{E3#", true);
      assertEquals("/ KMp { # vJw5t : % P { E3 #", string0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("gethashjoinr", false, "gethashjoinr", "gethashjoinr");
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.createConstraintSpecBuilder(dBCheckConstraint0, nameSpec0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'f';
      charArray0[1] = 'f';
      charArray0[2] = 'f';
      charArray0[3] = 'f';
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "filename";
      stringArray0[1] = "nFY/l\"p:^[QZs9`";
      stringArray0[2] = "/org/apache/derby/loc/m";
      char char0 = 'B';
      String string0 = "callselect * from";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "callselect * from", false, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      int int0 = 1130;
      StringBuilder stringBuilder1 = new StringBuilder();
      StringBuilder stringBuilder2 = stringBuilder1.append((-1698L));
      // Undeclared exception!
      try { 
        stringBuilder2.insert(1130, 'B');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("DnlD8B");
      String string0 = SQLUtil.typeAndName(tableContainer0);
      assertNotNull(string0);
      assertEquals("container DnlD8B", string0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertEquals("table null", string0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null", string0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[2] = "";
      SQLUtil.removeComments("");
      String string0 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("(, , , )", string0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("gethashjoinr");
      SQLUtil.addOptionalCondition("gethashjoinr", stringBuilder0);
      assertEquals("gethashjoinr or gethashjoinr", stringBuilder0.toString());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String[] stringArray1 = new String[1];
      stringArray1[0] = "unknown";
      String string0 = SQLUtil.join("unknown", "rename{w{{cz5u{j", stringArray1, "d|gb}v", "unknown", stringArray0);
      assertEquals("unknown join d|gb}v as unknown on rename{w{{cz5u{j.unknown = unknown.null", string0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.join("NCLOB", "TABLETYPE", stringArray0, "", "NCLOB", (String[]) null);
      assertEquals("NCLOB join  as NCLOB on ", string0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers("delete5 y4wzodsv7t?exp", (String) null, "delete5 y4wzodsv7t?exp");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-1024), "(");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("(", defaultDBTable1, dBDataType0, integer0);
      defaultDBColumn0.toString();
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = null;
      try {
        pipedReader0 = new PipedReader(pipedWriter0, (-1024));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe size <= 0
         //
         verifyException("java.io.PipedReader", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Integer integer0 = new Integer((-98432527));
      String string0 = "BLOB";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-98432527), "BLOB");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("BLOB", defaultDBTable0, dBDataType0, integer0);
      defaultDBColumn0.toString();
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = null;
      try {
        pipedReader0 = new PipedReader(pipedWriter0, (-98432527));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe size <= 0
         //
         verifyException("java.io.PipedReader", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("4cow_d:0}/");
      DBDataType dBDataType0 = DBDataType.getInstance((-514), "4cow_d:0}/");
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("4cow_d:0}/", defaultDBTable0, dBDataType0, integer0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("4cow_d:0}/ 4COW_D:0}/(0) NULL", string0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("exdc|Be", "createst", (String[]) null, "createst", "exdc|Be", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("M_[W-M");
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      jdbcDataSource0.getLogWriter();
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "sslfactoryarg");
      SQLUtil.addRequiredCondition("sslfactoryarg", stringBuilder0);
      assertEquals("sslfactoryarg and sslfactoryarg", stringBuilder0.toString());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("M_[W-KM");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("");
      Object object0 = new Object();
      SQLUtil.renderValue(defaultDBTable1);
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      String[] stringArray0 = new String[7];
      String string0 = SQLUtil.leftJoin("unknown", stringArray0, ";Z42;}U)\"1qmh)}VT", "alter tablexb", stringArray0);
      assertEquals("left join ;Z42;}U)\"1qmh)}VT as alter tablexb on unknown.null = alter tablexb.null and unknown.null = alter tablexb.null and unknown.null = alter tablexb.null and unknown.null = alter tablexb.null and unknown.null = alter tablexb.null and unknown.null = alter tablexb.null and unknown.null = alter tablexb.null", string0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader("drop materialized view");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      int int0 = 66541;
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers("drop tablenfy/l\"p:^[qzs9`", "T~fDfB0:b", "T~fDfB0:b");
      assertEquals("drop tablenfy/l\"p:^[qzs9`", string0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String[] stringArray0 = new String[4];
      String string0 = SQLUtil.renderColumnListWithTableName((String) null, stringArray0);
      assertEquals("null.null, null.null, null.null, null.null", string0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("exec|te");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String[] stringArray0 = new String[4];
      Object[] objectArray0 = new Object[1];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String string0 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM  WHERE ", string0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("M_[W-M");
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      jdbcDataSource0.getLogWriter();
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, (String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("T", true, defaultDBTable0, "T");
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CHECK T", string0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("M_[W-KM");
      String[] stringArray0 = new String[0];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "FSS>_NiY6xkpLKf", false, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("*ki/U`tz5E*");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      // Undeclared exception!
      try { 
        stringBuilder0.insert((-254710415), 'f');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("sm", false, "sm", "sm");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "sm");
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0);
      assertEquals("smCONSTRAINT sm ", stringBuilder0.toString());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      String string0 = "exdc|Bte";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("exdc|Bte");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "H>*ZAqxnwCf~!;6h";
      stringArray0[1] = "H>*ZAqxnwCf~!;6h";
      stringArray0[2] = "exdc|Bte";
      stringArray0[3] = "exdc|Bte";
      stringArray0[4] = "exdc|Bte";
      stringArray0[5] = "exdc|Bte";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("H>*ZAqxnwCf~!;6h", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint((String) null, false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY () REFERENCES null()", string0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.7786655906578275
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      SQLUtil.normalize("/KMp{#vJw5t:%P{E3#", false);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = null;
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("|h(MW|^U<]");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "THROTTLE";
      stringArray0[1] = "THROTTLE";
      stringArray0[2] = "P!Di62EjPdUAeJ\"W";
      stringArray0[3] = "|h(MW|^U<]";
      stringArray0[4] = "THROTTLE";
      stringArray0[5] = "THROTTLE";
      stringArray0[6] = "|h(MW|^U<]";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("THROTTLE", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (THROTTLE, THROTTLE, P!Di62EjPdUAeJ\"W, |h(MW|^U<], THROTTLE, THROTTLE, |h(MW|^U<]) REFERENCES |h(MW|^U<](THROTTLE, THROTTLE, P!Di62EjPdUAeJ\"W, |h(MW|^U<], THROTTLE, THROTTLE, |h(MW|^U<])", string0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("X", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("<M:2c^D.{OTRc:0");
      String string0 = SQLUtil.ownerDotComponent(defaultDBTable0);
      assertEquals("<M:2c^D.{OTRc:0", string0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(")dGmP]j(;~]:[j");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "unknown";
      stringArray0[1] = ")dGmP]j(;~]:[j";
      stringArray0[2] = ")dGmP]j(;~]:[j";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "unknown";
      stringArray0[7] = ")dGmP]j(;~]:[j";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      dBForeignKeyConstraint0.isIdentical(defaultDBTable0);
      String string0 = SQLUtil.ownerDotComponent(dBForeignKeyConstraint0);
      assertEquals(")dGmP]j(;~]:[j.", string0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      String[] stringArray0 = new String[15];
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("exec|te");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("deletenfy/l\"p:^[qzs9`");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("renameunique");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("Uhla<`F4\"dGr S=-8\"Y");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("S$-LECT * FYOM ");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }
}
