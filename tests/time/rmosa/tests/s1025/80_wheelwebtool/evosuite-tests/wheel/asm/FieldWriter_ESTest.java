/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 29 10:45:10 GMT 2020
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldVisitor;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1189);
      FieldVisitor fieldVisitor0 = classWriter0.visitField(1189, "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (String) null, "RuntimeInvisibleAnnotations");
      // Undeclared exception!
      try { 
        fieldVisitor0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1189);
      FieldVisitor fieldVisitor0 = classWriter0.visitField(1189, "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (String) null, "RuntimeInvisibleAnnotations");
      // Undeclared exception!
      try { 
        fieldVisitor0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1189);
      FieldVisitor fieldVisitor0 = classWriter0.visitField(1189, "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (String) null, "RuntimeInvisibleAnnotations");
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putShort(3);
      byte[] byteArray0 = new byte[2];
      byteVector1.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldVisitor0.visitAnnotation("@9T0pe{=+vPv:!", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1189);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(1189, "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (String) null, "RuntimeInvisibleAnnotations");
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put11(0, 3);
      byteVector1.length = 1245;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6730116670092565
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1189);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(1189, "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (String) null, "RuntimeInvisibleAnnotations");
      fieldWriter0.next = fieldWriter0;
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putShort(3);
      byte[] byteArray0 = new byte[2];
      byteVector1.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldWriter0.next.getSize();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 259, ">GhZ,&X*.|Xr|O;?", ">GhZ,&X*.|Xr|O;?", ">GhZ,&X*.|Xr|O;?", ">GhZ,&X*.|Xr|O;?");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1189);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, "a4}yS", "0D@3[cvY", "RuntimeInvisibleAnnotations", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6330395116644678
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1189);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(2, "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6546695645285008
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1189);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(1189, "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (String) null, "RuntimeInvisibleAnnotations");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAnnotation("((U", true);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.8239592165010823
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1189);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(1189, "RuntimeInvisibleAnnotations", "f\"`If02rO?,", (String) null, "RuntimeInvisibleAnnotations");
      Attribute attribute0 = new Attribute("2a%1D8%u.b#l]x");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.8599672810355049
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1189);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(1189, "RuntimeInvisibleAnnotations", "f\"`If02rO?,", (String) null, "RuntimeInvisibleAnnotations");
      fieldWriter0.visitAnnotation("2a%1D8%u.b#l]x", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.visitField((-733), "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE", "$K{rJO1Jdz", "$K{rJO1Jdz", (Object) null);
      classWriter0.version = (-2467);
      int int0 = classWriter0.lastField.getSize();
      assertEquals(22, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9146224676606434
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1189);
      classWriter0.visitField((-524), "I@0L&+?A", "RuntimeInvisibleAnnotations", "", "");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(160, byteArray0.length);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1189);
      FieldVisitor fieldVisitor0 = classWriter0.visitField((-524), "I@0L&+?A", "RuntimeInvisibleAnnotations", "", "");
      AnnotationVisitor annotationVisitor0 = fieldVisitor0.visitAnnotation("", true);
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0360334832009355
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1189);
      FieldVisitor fieldVisitor0 = classWriter0.visitField((-524), "I@0L&+?A", "RuntimeInvisibleAnnotations", "", "");
      fieldVisitor0.visitAnnotation("RuntimeInvisibleAnnotations", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(172, byteArray0.length);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1189);
      FieldVisitor fieldVisitor0 = classWriter0.visitField(1189, "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (String) null, "RuntimeInvisibleAnnotations");
      FieldVisitor fieldVisitor1 = classWriter0.visitField(2, "", "", "", (Object) null);
      assertFalse(fieldVisitor1.equals((Object)fieldVisitor0));
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(468);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 26, "", "", "", "");
      fieldWriter0.visitEnd();
  }
}
