/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 29 10:30:53 GMT 2020
 */

package weka.filters.unsupervised.attribute;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.core.Attribute;
import weka.core.BinarySparseInstance;
import weka.core.DenseInstance;
import weka.core.Instance;
import weka.core.Instances;
import weka.core.Range;
import weka.core.SparseInstance;
import weka.filters.Filter;
import weka.filters.unsupervised.attribute.Discretize;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Discretize_ESTest extends Discretize_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("l(N*pZd?ipTx$^'");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances((String) null, arrayList0, 0);
      discretize0.m_FindNumBins = true;
      double[] doubleArray0 = new double[7];
      SparseInstance sparseInstance0 = new SparseInstance(1, doubleArray0);
      instances0.add((Instance) sparseInstance0);
      boolean boolean0 = discretize0.m_IgnoreClass;
      SparseInstance sparseInstance1 = new SparseInstance((-633.9345), doubleArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      discretize0.setUseEqualFrequency(true);
      try { 
        discretize0.setInputFormat(instances0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bin number optimization in conjunction with equal-frequency binning not implemented.
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("l(N*pZd?ipTx$^'");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "!,Cx9>0C;");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances((String) null, arrayList0, 0);
      discretize0.m_FindNumBins = true;
      double[] doubleArray0 = new double[7];
      SparseInstance sparseInstance0 = new SparseInstance(1, doubleArray0);
      sparseInstance0.setValue(0, (-1357.6179452049));
      instances0.add((Instance) sparseInstance0);
      arrayList0.add(attribute0);
      SparseInstance sparseInstance1 = new SparseInstance(2.0, doubleArray0);
      instances0.add((Instance) sparseInstance1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      discretize0.setInputFormat(instances0);
      try { 
        Filter.useFilter(instances0, discretize0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attribute names are not unique! Causes: 'l(N*pZd?ipTx$^'' 
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("l(N*pZd?ipTx$^'");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances((String) null, arrayList0, 0);
      discretize0.setInputFormat(instances0);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 4;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 2;
      doubleArray0[5] = (double) 4;
      doubleArray0[6] = (double) 1;
      doubleArray0[7] = (double) 1;
      SparseInstance sparseInstance0 = new SparseInstance(4, doubleArray0);
      discretize0.batchFinished();
      discretize0.input(sparseInstance0);
      discretize0.setOutputFormat();
      assertFalse(discretize0.isNewBatch());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("import weka.core.Instance;\n");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("relational", arrayList0, 103);
      attribute0.toString();
      arrayList0.add(attribute0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (-704.462848527019);
      doubleArray0[3] = (double) 0;
      SparseInstance sparseInstance0 = new SparseInstance((-229.0), doubleArray0);
      instances0.add((Instance) sparseInstance0);
      boolean boolean0 = discretize0.m_IgnoreClass;
      sparseInstance0.setDataset(instances0);
      SparseInstance sparseInstance1 = new SparseInstance(70);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(3478);
      instances0.add((Instance) binarySparseInstance0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      discretize0.setInputFormat(instances0);
      try { 
        Filter.useFilter(instances0, discretize0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attribute names are not unique! Causes: 'import weka.core.Instance;
         // ' 
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("l(N*pZd?ipTx$^'");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances((String) null, arrayList0, 0);
      discretize0.m_FindNumBins = true;
      double[] doubleArray0 = new double[7];
      SparseInstance sparseInstance0 = new SparseInstance(3);
      instances0.add((Instance) sparseInstance0);
      arrayList0.add(attribute0);
      instances0.add((Instance) sparseInstance0);
      discretize0.setInputFormat(instances0);
      discretize0.setInputFormat(instances0);
      try { 
        Filter.useFilter(instances0, discretize0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attribute names are not unique! Causes: 'l(N*pZd?ipTx$^'' 
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("l(N*pZd?ipTx$^'");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances((String) null, arrayList0, 0);
      discretize0.setInputFormat(instances0);
      arrayList0.add(attribute0);
      String string0 = "AuOxDySf85&";
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.core.Range", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("e79~}y", (List<String>) null);
      arrayList0.add(attribute0);
      Instances instances0 = new Instances(". instance", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 7.53934848;
      SparseInstance sparseInstance0 = new SparseInstance((-689.4127956970864), doubleArray0);
      discretize0.batchFinished();
      // Undeclared exception!
      try { 
        discretize0.convertInstance(sparseInstance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.StringLocator", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("l(N*pdip$Tx'");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      boolean boolean0 = discretize0.m_UseBinNumbers;
      Instances instances0 = new Instances("@end", arrayList0, 0);
      double[] doubleArray0 = new double[7];
      attribute0.toString();
      arrayList0.add(attribute0);
      SparseInstance sparseInstance0 = new SparseInstance(1);
      instances0.add((Instance) sparseInstance0);
      boolean boolean1 = discretize0.m_IgnoreClass;
      sparseInstance0.setDataset(instances0);
      SparseInstance sparseInstance1 = new SparseInstance(4);
      arrayList0.add(attribute0);
      instances0.add((Instance) sparseInstance1);
      discretize0.setInputFormat(instances0);
      Instances instances1 = new Instances(instances0);
      discretize0.setInputFormat(instances1);
      try { 
        Filter.useFilter(instances0, discretize0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attribute names are not unique! Causes: 'l(N*pdip$Tx'' 
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("e79~}y", (List<String>) null);
      arrayList0.add(attribute0);
      Instances instances0 = new Instances(". instance", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      discretize0.getBinRangesString(0);
      discretize0.desiredWeightOfInstancesPerIntervalTipText();
      DenseInstance denseInstance0 = new DenseInstance(3);
      // Undeclared exception!
      try { 
        discretize0.convertInstance(denseInstance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.StringLocator", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      assertFalse(discretize0.getFindNumBins());
      
      Attribute attribute0 = new Attribute("l(N*pZd?ipTx$^'");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances((String) null, arrayList0, 0);
      discretize0.m_FindNumBins = true;
      double[] doubleArray0 = new double[7];
      SparseInstance sparseInstance0 = new SparseInstance(2.0, doubleArray0);
      SparseInstance sparseInstance1 = new SparseInstance(79);
      instances0.add((Instance) sparseInstance1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      discretize0.setInputFormat(instances0);
      Filter.useFilter(instances0, discretize0);
      discretize0.setInputFormat(instances0);
      assertTrue(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("l(N*pZd?ipTx$^'");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances((String) null, arrayList0, 0);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 1.0;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (double) 0;
      Object object0 = new Object();
      attribute0.enumerateValues();
      instances0.remove((Object) null);
      discretize0.setInputFormat(instances0);
      discretize0.input((Instance) null);
      // Undeclared exception!
      try { 
        discretize0.findNumBins(3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.033899244007165
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("l(N*pdip$Tx'");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances((String) null, arrayList0, 0);
      double[] doubleArray0 = new double[7];
      arrayList0.add(attribute0);
      SparseInstance sparseInstance0 = new SparseInstance(1, doubleArray0);
      instances0.add((Instance) sparseInstance0);
      boolean boolean0 = discretize0.m_IgnoreClass;
      sparseInstance0.setDataset(instances0);
      SparseInstance sparseInstance1 = new SparseInstance((-633.9345), doubleArray0);
      instances0.add((Instance) sparseInstance0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      discretize0.setInputFormat(instances0);
      instances0.setClass(attribute0);
      try { 
        Filter.useFilter(instances0, discretize0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attribute names are not unique! Causes: 'l(N*pdip$Tx'' 
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.544744938111471
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("l(N*pZd?ipTx$^'");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances((String) null, arrayList0, 0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 4;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (double) 3;
      doubleArray0[3] = (double) 2;
      doubleArray0[4] = (double) 2;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 1;
      SparseInstance sparseInstance0 = new SparseInstance(4, doubleArray0);
      instances0.add((Instance) sparseInstance0);
      discretize0.setInputFormat(instances0);
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 4;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 2;
      doubleArray1[5] = (double) 4;
      doubleArray1[6] = (double) 1;
      doubleArray1[7] = (double) 1;
      SparseInstance sparseInstance1 = new SparseInstance(4, doubleArray1);
      boolean boolean0 = discretize0.batchFinished();
      assertFalse(boolean0);
      
      discretize0.convertInstance(sparseInstance1);
      discretize0.makeBinaryTipText();
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.650606987867019
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("e79~}y", (List<String>) null);
      arrayList0.add(attribute0);
      Instances instances0 = new Instances(". instance", arrayList0, 1);
      instances0.iterator();
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      discretize0.getBinRangesString(0);
      discretize0.findNumBinsTipText();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.9504543117424777
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("*q");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("/\"6NKb%ek&PE& K6'|", arrayList0, 2);
      arrayList0.add(attribute0);
      Range range0 = new Range("*q");
      Object object0 = new Object();
      boolean boolean0 = discretize0.m_MakeBinary;
      discretize0.setInputFormat(instances0);
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attribute names are not unique! Causes: '*q' 
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Attribute attribute0 = new Attribute("(ri_@Y3(S<:TK?sBQFJ", linkedList0, (-2067947214));
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("d3", arrayList0, 121);
      boolean boolean0 = discretize0.setInputFormat(instances0);
      discretize0.calculateCutPoints();
      double[] doubleArray0 = new double[19];
      doubleArray0[0] = (double) 0;
      doubleArray0[4] = (double) 1903;
      SparseInstance sparseInstance0 = new SparseInstance((-1.0), doubleArray0);
      boolean boolean1 = discretize0.getFindNumBins();
      assertTrue(boolean1 == boolean0);
      
      discretize0.calculateCutPointsByEqualFrequencyBinning(0);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("l(N*pZd?ipTx$^'");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances((String) null, arrayList0, 0);
      arrayList0.add(attribute0);
      double[] doubleArray0 = new double[3];
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(4, doubleArray0);
      Range range0 = new Range("");
      discretize0.m_DiscretizeCols = range0;
      Object object0 = new Object();
      boolean boolean0 = discretize0.m_MakeBinary;
      discretize0.setInputFormat(instances0);
      SparseInstance sparseInstance0 = new SparseInstance((-3290.112474104), doubleArray0);
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attribute names are not unique! Causes: 'l(N*pZd?ipTx$^'' 
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      Locale locale0 = Locale.ENGLISH;
      locale0.getUnicodeLocaleKeys();
      ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Attribute attribute0 = new Attribute("bXF ", linkedList0);
      arrayList1.add(attribute0);
      Instances instances0 = new Instances("string", arrayList1, 15000);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 2;
      doubleArray0[3] = (double) 2;
      SparseInstance sparseInstance0 = new SparseInstance(0, doubleArray0);
      instances0.add((Instance) sparseInstance0);
      arrayList1.add(attribute0);
      instances0.add((Instance) sparseInstance0);
      discretize0.setInputFormat(instances0);
      try { 
        Filter.useFilter(instances0, discretize0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attribute names are not unique! Causes: 'bXF ' 
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[9];
      stringArray0[0] = ".";
      stringArray0[1] = "TswXJo2-3D9;5GHv,)";
      stringArray0[2] = ",<Xt]uJRRfE\"";
      stringArray0[3] = "u<O&o&*a2|] n";
      stringArray0[6] = "eP";
      stringArray0[7] = "}t6P@ch#<:oGcn<xc";
      stringArray0[8] = "\"\"Icr[hj?T[gE`_PDP$";
      Discretize.main(stringArray0);
      discretize0.setInvertSelection(true);
      boolean boolean0 = discretize0.getInvertSelection();
      assertTrue(boolean0);
      
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      String string0 = discretize0.desiredWeightOfInstancesPerIntervalTipText();
      assertEquals("Sets the desired weight of instances per interval for equal-frequency binning.", string0);
      
      String string1 = discretize0.findNumBinsTipText();
      assertEquals("Optimize number of equal-width bins using leave-one-out. Doesn't work for equal-frequency binning", string1);
      
      discretize0.setOutputFormat();
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("l(N*pZd?ipTx$^'");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances((String) null, arrayList0, 0);
      discretize0.setInputFormat(instances0);
      discretize0.setOptions((String[]) null);
      discretize0.setFindNumBins(true);
      assertTrue(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("l(N*pZd?ipTx$^'");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances((String) null, arrayList0, 0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 4;
      doubleArray0[1] = (double) 1;
      doubleArray0[0] = (double) 3;
      doubleArray0[3] = (double) 2;
      doubleArray0[4] = (double) 2;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 1;
      SparseInstance sparseInstance0 = new SparseInstance(4, doubleArray0);
      sparseInstance0.toString(attribute0);
      instances0.add((Instance) sparseInstance0);
      Attribute attribute1 = new Attribute("l&OESv_h", 2);
      discretize0.setAttributeIndices("\tUse bin numbers rather than ranges for discretized attributes.");
      arrayList0.add(attribute1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        discretize0.setInputFormat(instances0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid range list at Use bin numbers rather than ranges for discretized attributes.
         //
         verifyException("weka.core.Range", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Attribute attribute0 = new Attribute("(ri_@Y3(S<:TK?sBQFJ", linkedList0, (-2067947214));
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("d3", arrayList0, 72);
      discretize0.setInputFormat(instances0);
      discretize0.calculateCutPoints();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualFrequencyBinning((-1166));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1166
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.502930741465264
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("l(N*pZd?ipTx$^'");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances((String) null, arrayList0, 0);
      discretize0.setInputFormat(instances0);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 4;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 2;
      doubleArray0[5] = (double) 4;
      doubleArray0[6] = (double) 1;
      doubleArray0[7] = (double) 1;
      SparseInstance sparseInstance0 = new SparseInstance(4, doubleArray0);
      discretize0.batchFinished();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualFrequencyBinning((-2099761786));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2099761786
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Attribute attribute0 = new Attribute("(ri_@Y3(S<:TK?sBQFJ", linkedList0, (-2067947214));
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("\"d3", arrayList0, 90);
      discretize0.setInputFormat(instances0);
      discretize0.calculateCutPoints();
      // Undeclared exception!
      try { 
        discretize0.findNumBins(90);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 90
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.0262296229952916
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Attribute attribute0 = new Attribute("(ri_@Y3(S<:TK?sBQFJ", linkedList0, (-2067947214));
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("Median (ints): ", arrayList0, 111);
      discretize0.setInputFormat(instances0);
      discretize0.calculateCutPoints();
      double[] doubleArray0 = new double[0];
      SparseInstance sparseInstance0 = new SparseInstance(2, doubleArray0);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(sparseInstance0);
      // Undeclared exception!
      try { 
        discretize0.input(binarySparseInstance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.8343719702816235
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("l(N*pZd?ipTx$^'");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances((String) null, arrayList0, 0);
      arrayList0.add(attribute0);
      double[] doubleArray0 = new double[3];
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(4, doubleArray0);
      BinarySparseInstance binarySparseInstance1 = new BinarySparseInstance((SparseInstance) binarySparseInstance0);
      Object object0 = new Object();
      instances0.remove(object0);
      discretize0.setInputFormat(instances0);
      // Undeclared exception!
      try { 
        discretize0.input(binarySparseInstance0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Instance has no dataset assigned!!
         //
         verifyException("weka.core.RelationalLocator", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.908133893291109
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.isNewBatch();
      Attribute attribute0 = new Attribute("l(N*pZd?ipTx$^'");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances((String) null, arrayList0, 0);
      discretize0.setInputFormat(instances0);
      discretize0.calculateCutPoints();
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (double) 3;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 1;
      SparseInstance sparseInstance0 = new SparseInstance(1745.4666241760488, doubleArray0);
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output instance format defined
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.8346096344580887
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      Locale locale0 = Locale.ENGLISH;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) set0, locale_FilteringMode0);
      Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) list0);
      Attribute attribute0 = new Attribute("bXF ");
      ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
      arrayList1.add(attribute0);
      Instances instances0 = new Instances("date", arrayList1, 536);
      instances0.deleteAttributeType(44);
      discretize0.setInputFormat(instances0);
      discretize0.getAttributeIndices();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualFrequencyBinning((-858));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Discretize discretize0 = new Discretize("\tSpecifies the (maximum) number of bins to divide numeric attributes into.\n\t(default = 10)");
      discretize0.m_UseEqualFrequency = true;
      discretize0.getUseEqualFrequency();
      discretize0.invertSelectionTipText();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 500.29866447409;
      doubleArray0[1] = 500.29866447409;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 500.29866447409;
      DenseInstance denseInstance0 = new DenseInstance(500.29866447409, doubleArray0);
      // Undeclared exception!
      try { 
        denseInstance0.toStringMaxDecimalDigits((-2067947214));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Discretize discretize0 = new Discretize("");
      discretize0.getAttributeIndices();
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Discretize discretize0 = new Discretize("V");
      discretize0.setDesiredWeightOfInstancesPerInterval(1329.151742);
      discretize0.useBinNumbersTipText();
      discretize0.desiredWeightOfInstancesPerIntervalTipText();
      discretize0.getDesiredWeightOfInstancesPerInterval();
      SparseInstance sparseInstance0 = null;
      try {
        sparseInstance0 = new SparseInstance((-1983));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.SparseInstance", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      FileSystemHandling.shouldAllThrowIOExceptions();
      discretize0.setMakeBinary(true);
      try { 
        discretize0.setInputFormat((Instances) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]Hd<0");
      Discretize discretize0 = new Discretize();
      discretize0.m_DesiredWeightOfInstancesPerInterval = (-69.11431766231539);
      discretize0.getBinRangesString((-3287));
      FileSystemHandling.shouldAllThrowIOExceptions();
      discretize0.m_NumBins = (-1982292595);
      discretize0.getUseEqualFrequency();
      discretize0.getCutPoints((-857));
      discretize0.binsTipText();
      discretize0.getAttributeIndices();
      discretize0.getInvertSelection();
      discretize0.getBins();
      discretize0.setOutputFormat();
      assertEquals((-1982292595), discretize0.getBins());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.0688846458275627
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Discretize discretize0 = new Discretize(":cMP");
      discretize0.getInvertSelection();
      assertFalse(discretize0.getUseEqualFrequency());
      
      discretize0.m_UseEqualFrequency = true;
      discretize0.setIgnoreClass(true);
      discretize0.getOptions();
      discretize0.globalInfo();
      assertTrue(discretize0.getUseEqualFrequency());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      assertFalse(discretize0.getMakeBinary());
      
      boolean boolean0 = discretize0.m_FindNumBins;
      discretize0.setMakeBinary(true);
      boolean boolean1 = discretize0.getMakeBinary();
      assertTrue(boolean1);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double[][] doubleArray0 = new double[5][3];
      discretize0.m_CutPoints = doubleArray0;
      // Undeclared exception!
      try { 
        discretize0.getBinRangesString((-626));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -626
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double[][] doubleArray0 = new double[4][1];
      discretize0.m_CutPoints = doubleArray0;
      // Undeclared exception!
      try { 
        discretize0.setOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Discretize discretize0 = new Discretize("P`Ch`g");
      assertFalse(discretize0.getUseBinNumbers());
      
      discretize0.setUseBinNumbers(true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      double[][] doubleArray0 = new double[15][3];
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 0.5;
      doubleArray1[0] = (-1131.4706278);
      doubleArray1[2] = 1135.8997619;
      doubleArray1[3] = 0.0;
      doubleArray1[4] = (-1.0);
      doubleArray1[5] = (-2137.70849817);
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 1851.634416;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[8];
      doubleArray2[0] = (-1131.4706278);
      doubleArray2[2] = 1135.8997619;
      doubleArray2[3] = 0.5;
      doubleArray2[4] = 0.0;
      doubleArray2[5] = (-1131.4706278);
      doubleArray2[6] = (-1.0);
      doubleArray2[7] = 0.5;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[9];
      doubleArray3[0] = 1135.8997619;
      doubleArray3[1] = 0.5;
      doubleArray3[2] = 0.0;
      doubleArray3[3] = 1135.8997619;
      doubleArray3[4] = 1851.634416;
      doubleArray3[5] = (-1131.4706278);
      doubleArray3[6] = 0.0;
      doubleArray3[7] = 0.0;
      doubleArray3[8] = 0.0;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[5];
      doubleArray4[0] = 0.0;
      doubleArray4[1] = 1851.634416;
      doubleArray4[2] = 0.0;
      doubleArray4[3] = 1851.634416;
      doubleArray4[4] = (-2137.70849817);
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[4];
      doubleArray5[0] = (-1.0);
      doubleArray5[1] = (-1131.4706278);
      doubleArray5[2] = 493.96307954153184;
      doubleArray5[3] = (-2137.70849817);
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[3];
      doubleArray6[0] = (-1.0);
      doubleArray6[1] = 0.0;
      doubleArray6[2] = (-1.0);
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[3];
      doubleArray7[0] = 0.0;
      doubleArray7[1] = 0.0;
      doubleArray7[2] = 0.5;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[1];
      doubleArray8[0] = 1135.8997619;
      doubleArray0[7] = doubleArray8;
      double[] doubleArray9 = new double[3];
      doubleArray9[0] = 0.0;
      doubleArray9[1] = 0.0;
      doubleArray9[2] = 1135.8997619;
      doubleArray0[8] = doubleArray9;
      discretize0.m_CutPoints = doubleArray0;
      discretize0.getCapabilities();
      discretize0.getCapabilities();
      boolean boolean0 = discretize0.getUseBinNumbers();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Discretize discretize0 = new Discretize("\"t");
      discretize0.getCutPoints(0);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getFindNumBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      assertFalse(discretize0.getFindNumBins());
      
      Attribute attribute0 = new Attribute("l(N*pZd?ipTx$^'");
      discretize0.m_FindNumBins = true;
      double[] doubleArray0 = new double[7];
      SparseInstance sparseInstance0 = new SparseInstance(1, doubleArray0);
      SparseInstance sparseInstance1 = new SparseInstance(2.0, doubleArray0);
      SparseInstance sparseInstance2 = new SparseInstance(79);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      discretize0.getOptions();
      assertTrue(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setIgnoreClass(true);
      discretize0.setInvertSelection(true);
      String[] stringArray0 = discretize0.getOptions();
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(10, discretize0.getBins());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.setAttributeIndices((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setBins((-199));
      // Undeclared exception!
      try { 
        discretize0.outputPeek();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output instance format defined
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.3383717048035724
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Discretize.main((String[]) null);
      discretize0.setOptions((String[]) null);
      discretize0.setFindNumBins(true);
      assertTrue(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      assertFalse(discretize0.getMakeBinary());
      
      discretize0.setMakeBinary(true);
      discretize0.setIgnoreClass(false);
      discretize0.getOptions();
      assertTrue(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("l(N*pZd?ipTx$^'");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances((String) null, arrayList0, 0);
      discretize0.m_FindNumBins = true;
      double[] doubleArray0 = new double[7];
      SparseInstance sparseInstance0 = new SparseInstance(1, doubleArray0);
      instances0.add((Instance) sparseInstance0);
      arrayList0.add(attribute0);
      SparseInstance sparseInstance1 = new SparseInstance(2.0, doubleArray0);
      discretize0.isOutputFormatDefined();
      SparseInstance sparseInstance2 = new SparseInstance(5.3, doubleArray0);
      discretize0.getFindNumBins();
      // Undeclared exception!
      try { 
        discretize0.convertInstance(sparseInstance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[0];
      discretize0.setOptions(stringArray0);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.1639556568820564
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Discretize discretize0 = new Discretize(":cMP");
      Range range0 = new Range();
      discretize0.m_DiscretizeCols = range0;
      discretize0.getInvertSelection();
      discretize0.setIgnoreClass(true);
      discretize0.getOptions();
      discretize0.globalInfo();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualFrequencyBinning(1926);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setAttributeIndices("xPR'_{xrw}Lm");
      Discretize discretize1 = new Discretize();
      double[][] doubleArray0 = new double[6][8];
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = (-1809.0);
      doubleArray1[1] = 2.0;
      doubleArray1[2] = (-1.7976931348623157E308);
      doubleArray1[3] = 974.89;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = 100.0;
      doubleArray2[1] = (-1.7976931348623157E308);
      doubleArray2[2] = 2.0;
      doubleArray2[3] = (-1.7976931348623157E308);
      doubleArray2[4] = (-1934.82371339703);
      doubleArray2[5] = (-1.7976931348623157E308);
      doubleArray2[6] = (-1.7976931348623157E308);
      doubleArray2[7] = 974.89;
      doubleArray2[8] = 974.89;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[7];
      doubleArray3[0] = (-1934.82371339703);
      doubleArray3[1] = 100.0;
      doubleArray3[2] = (-1809.0);
      doubleArray3[3] = (-1.7976931348623157E308);
      doubleArray3[4] = (-1.7976931348623157E308);
      doubleArray3[5] = (-1809.0);
      doubleArray3[6] = (-1934.82371339703);
      doubleArray0[2] = doubleArray3;
      doubleArray0[3] = doubleArray1;
      double[] doubleArray4 = new double[4];
      doubleArray4[0] = 2.0;
      doubleArray4[1] = 2.0;
      doubleArray4[2] = (-1934.82371339703);
      doubleArray4[3] = 2.0;
      doubleArray0[4] = doubleArray4;
      doubleArray0[5] = doubleArray1;
      discretize1.m_CutPoints = doubleArray0;
      // Undeclared exception!
      try { 
        discretize1.getCutPoints(2864);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2864
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Discretize.main(stringArray0);
      assertEquals(0, stringArray0.length);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Discretize discretize0 = new Discretize("H'!\"rqxsH&qlW2");
      discretize0.getBinRangesString(0);
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.m_ClassIndex = 30;
      discretize0.setDesiredWeightOfInstancesPerInterval(1552.90733708);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-995.047582324);
      doubleArray0[1] = (-995.047582324);
      SparseInstance sparseInstance0 = new SparseInstance((-995.047582324), doubleArray0);
      sparseInstance0.isMissing(98);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(98);
      // Undeclared exception!
      try { 
        sparseInstance0.stringValue(2144196297);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DenseInstance doesn't have access to a dataset!
         //
         verifyException("weka.core.AbstractInstance", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      try { 
        discretize0.setInputFormat((Instances) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      try { 
        discretize0.setOptions(stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.setAttributeIndicesArray((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Range", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.findNumBins((-2147483643));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.findNumBins(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setUseBinNumbers(false);
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualFrequencyBinning(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      assertFalse(discretize0.getUseEqualFrequency());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "O4";
      stringArray0[1] = "hwsEH]YLV";
      stringArray0[2] = "'";
      stringArray0[3] = "vORMz57x^2!E3+;n";
      stringArray0[4] = "-R";
      stringArray0[5] = "\");\n";
      stringArray0[6] = "for (i = 0 ; i < inst.numAttributes(); i++) {";
      discretize0.setOptions(stringArray0);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("first-last");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "n$hh/BtB";
      stringArray0[1] = ";b76R";
      stringArray0[2] = "-B";
      stringArray0[3] = "first-last";
      try { 
        discretize0.setOptions(stringArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"first-last\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.6797060388399334
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Discretize discretize0 = new Discretize(":cMP");
      discretize0.getInvertSelection();
      discretize0.setIgnoreClass(true);
      String[] stringArray0 = discretize0.getOptions();
      discretize0.globalInfo();
      discretize0.setOptions(stringArray0);
      assertTrue(discretize0.getIgnoreClass());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getBinRangesString(9);
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.useBinNumbersTipText();
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getFindNumBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals("Use bin numbers (eg BXofY) rather than ranges for for discretized attributes", string0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(140);
      // Undeclared exception!
      try { 
        discretize0.input(binarySparseInstance0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setDesiredWeightOfInstancesPerInterval((-6.78214234));
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.input((Instance) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.useEqualFrequencyTipText();
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertEquals("If set to true, equal-frequency binning will be used instead of equal-width binning.", string0);
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Discretize discretize0 = new Discretize("Nb");
      String string0 = "klMN0&[";
      Discretize discretize1 = new Discretize("klMN0&[");
      String string1 = "";
      discretize0.setAttributeIndices("");
      // Undeclared exception!
      try { 
        discretize1.outputPeek();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output instance format defined
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      FileSystemHandling.shouldAllThrowIOExceptions();
      discretize0.setMakeBinary(true);
      discretize0.setIgnoreClass(true);
      try { 
        discretize0.setInputFormat((Instances) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't ignore class when changing the number of attributes!
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.4500064999181648
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("l(N*pZd?ipTx$^'");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances((String) null, arrayList0, 0);
      instances0.deleteAttributeAt(0);
      try { 
        discretize0.setInputFormat(instances0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // weka.filters.unsupervised.attribute.Discretize: No attributes!
         //
         verifyException("weka.core.Capabilities", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning(14);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning((-1952257852));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.globalInfo();
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertEquals("An instance filter that discretizes a range of numeric attributes in the dataset into nominal attributes. Discretization is by simple binning. Skips the class attribute if set.", string0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualFrequencyBinning(14);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getCapabilities();
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getMakeBinary());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Discretize discretize0 = null;
      try {
        discretize0 = new Discretize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setInvertSelection(false);
      // Undeclared exception!
      try { 
        discretize0.getOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output format defined.
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getCutPoints(2);
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Z['$!xLrU4y(Nm@";
      stringArray0[1] = "8OCpmFhZL";
      stringArray0[2] = "e1Z\"q|qTB";
      stringArray0[3] = "(";
      stringArray0[4] = ":c";
      stringArray0[5] = "On2";
      stringArray0[6] = "of";
      stringArray0[7] = "-M";
      try { 
        discretize0.setOptions(stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No value given for -M option.
         //
         verifyException("weka.core.Utils", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[1];
      try { 
        discretize0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      assertFalse(discretize0.getUseBinNumbers());
      
      discretize0.setUseBinNumbers(true);
      discretize0.getOptions();
      assertTrue(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      boolean boolean0 = discretize0.getUseBinNumbers();
      assertFalse(boolean0);
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setMakeBinary(false);
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getMakeBinary());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setDesiredWeightOfInstancesPerInterval(0.0);
      int[] intArray0 = new int[1];
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double double0 = discretize0.getDesiredWeightOfInstancesPerInterval();
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals((-1.0), double0, 0.01);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.attributeIndicesTipText();
      assertEquals("Specify range of attributes to act on. This is a comma separated list of attribute indices, with \"first\" and \"last\" valid values. Specify an inclusive range with \"-\". E.g: \"first-3,5,6-10,last\".", string0);
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPoints();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.convertInstance((Instance) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.listOptions();
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.invertSelectionTipText();
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertEquals("Set attribute selection mode. If false, only selected (numeric) attributes in the range will be discretized; if true, only non-selected attributes will be discretized.", string0);
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.getRevision();
      assertEquals("8964", string0);
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      int int0 = discretize0.getBins();
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, int0);
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      int[] intArray0 = new int[0];
      discretize0.setAttributeIndicesArray(intArray0);
      assertEquals(10, discretize0.getBins());
      
      discretize0.setBins(0);
      assertEquals(0, discretize0.getBins());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setFindNumBins(false);
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getFindNumBins());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setBins(827);
      assertEquals(827, discretize0.getBins());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      int[] intArray0 = new int[1];
      discretize0.setAttributeIndicesArray(intArray0);
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
  }
}
