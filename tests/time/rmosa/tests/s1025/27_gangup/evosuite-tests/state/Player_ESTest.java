/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 11:41:45 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FilterInputStream;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.789071579480532
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(1701, "module.ModuleBrowserDialog$ModuleFilter", 1701);
      player0.setDead();
      Player player1 = new Player(1701);
      player1.setConnected(true);
      player0.setZ(1935.443F);
      player1.next = (Party) player0;
      player0.head = (Party) player1;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      player0.isJoinOK(player1, true);
      player0.pack();
      player0.getZ();
      System.setCurrentTimeMillis(1701);
      player1.pack();
      player0.pack();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      
      System.setCurrentTimeMillis((short)4919);
      player1.pack();
      assertEquals("Player1701", player1.getName());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(0, "", "k>)0!$~,4pZh;0e", 0, 0);
      int int0 = player0.getStrength();
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, int0);
      assertEquals("", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.129253408046631
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      player0.getSubparty();
      player0.setX(0.0F);
      Player player1 = new Player((-2886), "@W!`[55PonAZsIe", (-2886));
      player0.pack();
      Player player2 = new Player((-2886), "@W!`[55PonAZsIe", 0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player1.unpack(dataInputStream0);
      Player player3 = new Player((short)4919, "", 1);
      player3.setMoney((short)4919);
      player3.setJoinOK(player1, true);
      player0.isJoinOK(player3, true);
      Player player4 = new Player((-1458), "", "@W!`[55PonAZsIe", 1, 3363);
      player4.getZ();
      player3.pack();
      player0.type();
      float float0 = player3.getMoney();
      assertEquals(4919.0F, float0, 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(1920, " ", " ", 4482);
      player0.setConnected(false);
      Player player1 = new Player(4482, " ", "", (short)4919);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-48);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      player0.id = 4482;
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player1.unpack(dataInputStream0);
      player1.setDead(1392409296320L, false);
      player0.isJoinOK(player1, true);
      player0.isConnected();
      player1.type();
      assertEquals(1392409296320L, player1.getTimeOfDeath());
      
      boolean boolean0 = player0.isConnected();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player((-30093), "", "", (-30093));
      boolean boolean0 = true;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-58);
      byteArray0[1] = (byte) (-58);
      byteArray0[2] = (byte) (-34);
      byteArray0[3] = (byte)106;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-58), 1531);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(4635, (String) null, (String) null, (-3873), (-3873));
      player0.id = 514;
      int int0 = player0.getStrength();
      assertEquals((-3873), player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals((-3873), int0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(1249);
      player0.setDead((-557L), false);
      player0.getSubparty();
      Player player1 = new Player(4357, "", 3045);
      player0.setJoinOK(player1, false);
      player1.setX((-557L));
      player1.isJoinOK(player0, false);
      float float0 = player1.getX();
      assertEquals((-557.0F), float0, 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(1994);
      player0.setY((-322.7863F));
      player0.pack();
      float float0 = player0.getY();
      assertEquals((-322.7863F), float0, 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney((-1));
      Player player1 = new Player((-1), ".*[.]class$", (String) null, (-1));
      player0.setJoinOK(player1, true);
      Player player2 = new Player((-1804));
      player0.isJoinOK(player2, true);
      player0.getZ();
      player2.pack();
      float float0 = player0.getMoney();
      assertEquals((-1.0F), float0, 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.124771615329544
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "gui.ModuleBrowserDialog$ModuleFilter");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "state.Player");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Player player0 = new Player(4537, "module.ModuleBrowserDialog$ModuleFilter", "'u?QdAT_VL|", (-20753), (-20753));
      player0.getSubparty();
      player0.id = 4537;
      player0.id = (-20753);
      byte[] byteArray0 = player0.pack();
      player0.setDead((long) (-20753));
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player0.getX();
      player0.getMoney();
      player0.isConnected();
      System.setCurrentTimeMillis((short)4919);
      player0.getSubparty();
      player0.pack();
      player0.getTimeOfDeath();
      player0.type();
      player0.getTimeOfDeath();
      float float0 = player0.getY();
      assertTrue(player0.isDead());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-61));
      Player player1 = new Player(10, " ", 10);
      player1.setY(10);
      player0.pack();
      float float0 = player1.getY();
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(0, "a8y/$7", "7G|q>c_w<bu+V7C0", (-1972), (-1972));
      player0.setX(0.0F);
      player0.setDead((-540L), true);
      player0.getX();
      player0.type();
      Player player1 = new Player(4, (String) null, "7G|q>c_w<bu+V7C0", (-3717), (-1053));
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals((-540L), player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player((byte) (-112));
      player0.remove(player0);
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-112", player0.getName());
      assertFalse(boolean0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player((byte)115);
      player0.setJoinOK(player0, true);
      Player player1 = new Player((byte)115);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertTrue(boolean0);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals(1, player1.getStrength());
      assertEquals("Player115", player1.getName());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player((-408), "~;(Nzqa&ki", (-408));
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)68;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)115;
      Party party0 = player0.next;
      player0.next = null;
      byteArray0[4] = (byte)20;
      byteArray0[5] = (byte) (-79);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      player0.unpack(byteArray0);
      System.setCurrentTimeMillis((-408));
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(1, "", "", (-1731), 1087);
      player0.getSubparty();
      player0.getName();
      player0.setDead((-1L), false);
      Party party0 = player0.head;
      Player player1 = new Player((short)4919);
      player1.getPictureId();
      player0.getSubparty();
      player0.getPictureId();
      player1.setX(1487.0554F);
      player1.setY((-539.0F));
      assertEquals((-539.0F), player1.getY(), 0.01F);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player((-61), (String) null, (String) null, 3, 289);
      player0.getSubparty();
      player0.getName();
      int int0 = player0.gangStrength();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(3, player0.getPictureId());
      assertEquals(289, int0);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player((-61), ">5#IL^:", ">5#IL^:", (-61), (-61));
      int int0 = player0.gangStrength();
      assertEquals((-61), int0);
      
      System.setCurrentTimeMillis((-61));
      int int1 = player0.type();
      assertFalse(player0.isDead());
      assertEquals((-61), player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(5, int1);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.2774737549423403
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ((-1160.0F));
      player0.getZ();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)105;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.getStrength();
      player0.type();
      player0.getStrength();
      player0.getStrength();
      player0.type();
      player0.type();
      Player player1 = new Player();
      player1.boss = (Party) player0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player2 = new Player(2006);
      player0.isJoinOK(player2, true);
      player2.getZ();
      player1.type();
      int int0 = player0.type();
      assertEquals((-1160.0F), player0.getZ(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(1434, (String) null, (-1210));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(1281, "", "Y", 1281, 77);
      String string0 = player0.getIP();
      assertEquals(1281, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("", string0);
      assertTrue(player0.isConnected());
      assertEquals(77, player0.getStrength());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      Player player1 = new Player((short)4919, (String) null, " W(2i<tt", (short)4919, 1709);
      player1.add(player0);
      player1.getSubparty();
      player1.head = (Party) player0;
      player0.remove(player1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player1.unpack(dataInputStream0);
      System.setCurrentTimeMillis(414L);
      System.setCurrentTimeMillis(1348L);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      Player player1 = new Player((short)4919);
      player1.setConnected(true);
      player1.prev = (Party) player0;
      player1.unpack(byteArray0);
      player0.pack();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      boolean boolean0 = true;
      player0.isJoinOK(player1, true);
      long long0 = (-3128L);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(1727, (String) null, 1727);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.1262368167947456
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(3280, "", 0);
      player0.id = 0;
      player0.setY(1.0F);
      Player player1 = new Player((-2040), "Z8[/8/WU,0M+!", (short)4919);
      player0.setJoinOK(player1, true);
      player1.add(player0);
      player0.getSubparty();
      player0.toString();
      player0.getStrength();
      player1.head = (Party) player0;
      player1.isConnected();
      player1.isJoinOK(player0, true);
      byte[] byteArray0 = new byte[0];
      player1.unpack(byteArray0);
      assertEquals(10.0F, player1.getX(), 0.01F);
      
      player0.isConnected();
      player1.setX(0.0F);
      player1.next = (Party) player0;
      player1.setConnected(false);
      player1.getY();
      player1.setDead(0L);
      assertEquals(4919, player1.getPictureId());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(5);
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      assertEquals("Player5", player0.toString());
      assertEquals(0, player0.getPictureId());
      
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Player player1 = new Player(72, ".*[.]class$", 1058);
      assertEquals(1058, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(player1.isConnected());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Player player0 = new Player(154);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player0.unpack(dataInputStream0);
      float float0 = Player.TOLERANCE;
      assertEquals(0.2F, float0, 0.01F);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(77, ")c6I+mcm,_d,,iE\"+J0", "vXEaz6YM", 514);
      int int0 = Packable.PLAYER;
      player0.setDead((long) 77, false);
      player0.getSubparty();
      player0.getTimeOfDeath();
      player0.type();
      int int1 = player0.type();
      assertEquals(77L, player0.getTimeOfDeath());
      assertEquals(5, int1);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.1239058144637433
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(2727, "9q HW}!oG3fqd(+\">NV", "9q HW}!oG3fqd(+\">NV", 2072, 2727);
      Party party0 = new Party((short)4919);
      player0.boss = party0;
      player0.boss.next = party0;
      party0.next = (Party) player0;
      player0.prev = party0;
      player0.setZ(2727);
      player0.setMoney(0.0F);
      player0.getIP();
      player0.getY();
      player0.getX();
      party0.add(player0.boss);
      player0.setDead((long) 2727, true);
      player0.setDead();
      player0.getName();
      player0.isDead();
      player0.setX((-639.0F));
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(1281);
      float float0 = player0.getY();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("Player1281", player0.getName());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(1994);
      int int0 = Packable.PLAYER;
      Player player1 = new Player((short)4919);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-28);
      byteArray0[1] = (byte) (-73);
      byteArray0[2] = (byte) (-119);
      byteArray0[3] = (byte)118;
      byteArray0[4] = (byte) (-11);
      player1.unpack(byteArray0);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(boolean0);
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(1, player1.getStrength());
      assertEquals(0, player1.getPictureId());
      assertEquals("Player4919", player1.getName());
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(5);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(982);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)2;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(boolean0);
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player982", player0.getName());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(2197, (String) null, "S97XrKydoA=\".", 2197);
      player0.getIP();
      player0.gangStrength();
      player0.setZ((-800.7488F));
      Party party0 = new Party((short)4919);
      assertEquals(4919, party0.getId());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(1281);
      player0.gangStrength();
      player0.getIP();
      System.setCurrentTimeMillis(1281);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(297, "", 1);
      player0.getSubparty();
      player0.getName();
      player0.setDead((long) 297, false);
      int int0 = player0.getStrength();
      assertEquals(297L, player0.getTimeOfDeath());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player(297, "", "", 10, 1699);
      player0.getSubparty();
      player0.getName();
      player0.setDead((long) 10, true);
      player0.gangStrength();
      Party party0 = new Party();
      int int0 = player0.getPictureId();
      assertEquals(10L, player0.getTimeOfDeath());
      assertEquals(10, int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(23841, (String) null, (String) null, 466, 466);
      int int0 = player0.getStrength();
      assertEquals(466, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(466, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(426);
      Player player1 = new Player((-1550), "d\"", 3691);
      player0.add(player1);
      int int0 = player0.gangStrength();
      assertEquals(2, int0);
      
      player0.getTimeOfDeath();
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertTrue(player1.isConnected());
      assertEquals(3691, player1.getPictureId());
      assertEquals("Player426", player0.toString());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(boolean0);
      assertFalse(player1.isDead());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player((-2340), "+8,_3}", "o#K.J", (-2340), 0);
      player0.gangStrength();
      PipedInputStream pipedInputStream0 = null;
      PipedOutputStream pipedOutputStream0 = null;
      try {
        pipedOutputStream0 = new PipedOutputStream((PipedInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      System.setCurrentTimeMillis(1392409296320L);
      System.setCurrentTimeMillis(493L);
      Player player0 = new Player(223);
      player0.setX(1392409296320L);
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player((-1213));
      player0.setY((-1213));
      int int0 = player0.type();
      assertEquals((-1213.0F), player0.getY(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player();
      int int0 = player0.getPictureId();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.toString());
      assertTrue(player0.isConnected());
      assertEquals(0, int0);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player();
      player0.getSubparty();
      player0.getName();
      player0.setDead((long) 297, false);
      assertEquals(297L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player(0, (String) null, (String) null, 0);
      player0.toString();
      player0.setMoney(0);
      long long0 = player0.getTimeOfDeath();
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, long0);
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player();
      String string0 = player0.toString();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", string0);
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player((-1382));
      player0.setDead((long) (-1382));
      float float0 = player0.getMoney();
      assertEquals((-1382L), player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player((byte)115);
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player(5);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(byteArrayOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(filterOutputStream0);
      player0.pack(dataOutputStream0);
      player0.isDead();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player(3108);
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player(3631);
      boolean boolean0 = player0.isConnected();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(boolean0);
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player3631", player0.getName());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player(1281);
      float float0 = player0.getX();
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, float0, 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player1281", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player(426);
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      long long0 = player0.getTimeOfDeath();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player426", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player(1997);
      player0.reset(false);
      int int0 = Packable.TEXT_MESSAGE;
      int int1 = player0.type();
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("Player1997", player0.getName());
      assertEquals(5, int1);
      assertEquals("0.0.0.0", player0.getIP());
  }
}
