* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.firebirdsql.encodings.EncodingFactory
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/110_firebird/evosuite-files/evosuite.properties
* Connecting to master process on port 14216
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class org.firebirdsql.encodings.EncodingFactory
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1005
* Starting evolution
* Search finished after 123s and 270 generations, 72429 statements, best individual has fitness: 688.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 94%
* Total number of goals: 242
* Number of covered goals: 227
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 195
* Number of covered goals: 187
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 387
* Number of covered goals: 347
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 48%
* Total number of goals: 25
* Number of covered goals: 12
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 95%
* Total number of goals: 195
* Number of covered goals: 186
* Generated 95 tests with total length 109
* Resulting test suite's coverage: 92% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 38%
* Compiling and checking tests
* Writing JUnit test case 'EncodingFactory_ESTest' to /home/ubuntu/termite/rmosa/tests/s1005/110_firebird/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.firebirdsql.jdbc.FBCachedFetcher
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.firebirdsql.jdbc.FBProcedureCall
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/110_firebird/evosuite-files/evosuite.properties
* Connecting to master process on port 14210
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/110_firebird/evosuite-files/evosuite.properties
* Connecting to master process on port 14217
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class org.firebirdsql.jdbc.FBProcedureCall
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1005
* Starting evolution
[MASTER] 20:25:51.210 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 20:25:51.217 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 20:25:51.217 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 20:25:51.724 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.sql.SQLType
[MASTER] 20:25:52.688 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 20:25:52.688 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 20:25:52.696 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 20:25:54.358 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 20:25:54.370 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 20:25:54.370 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 20:25:54.599 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 20:25:54.600 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 20:25:54.608 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 20:25:54.608 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 20:25:54.616 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 20:25:54.617 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 20:25:55.065 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 20:25:55.477 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class org.firebirdsql.jdbc.FBCachedFetcher
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1005
* Starting evolution
[MASTER] 20:26:09.560 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 20:26:18.407 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.firebirdsql.jca.FBManagedConnectionFactory due to org.evosuite.ga.ConstructionFailedException: Have no generator for class org.firebirdsql.gds.impl.wire.JavaGDSImpl canUseFunctionalMocks=false, canBeMocked: true
[MASTER] 20:26:56.170 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 122s and 283 generations, 86307 statements, best individual has fitness: 704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 117
* Number of covered goals: 111
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 87%
* Total number of goals: 98
* Number of covered goals: 85
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 347
* Number of covered goals: 315
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 69%
* Total number of goals: 70
* Number of covered goals: 48
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 94%
* Total number of goals: 18
* Number of covered goals: 17
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 94%
* Total number of goals: 18
* Number of covered goals: 17
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 87%
* Total number of goals: 98
* Number of covered goals: 85
* Generated 67 tests with total length 366
* Resulting test suite's coverage: 89% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 122s and 249 generations, 128802 statements, best individual has fitness: 2272.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 57%
* Total number of goals: 158
* Number of covered goals: 90
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 46%
* Total number of goals: 118
* Number of covered goals: 54
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 81%
* Total number of goals: 347
* Number of covered goals: 281
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 82%
* Total number of goals: 28
* Number of covered goals: 23
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 33%
* Total number of goals: 118
* Number of covered goals: 39
* Generated 48 tests with total length 275
* Resulting test suite's coverage: 66% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 51%
* Compiling and checking tests
[MASTER] 20:28:19.437 [logback-2] ERROR ClassStateSupport - Could not initialize org.firebirdsql.gds.impl.jni.JniGDSImpl: no jaybird22_x64 in java.library.path
[MASTER] 20:28:19.519 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class org.firebirdsql.gds.impl.jni.JniGDSImpl
* Resulting test suite's mutation score: 58%
* Compiling and checking tests
[MASTER] 20:28:33.619 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 20:28:33.620 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
fBProcedureCall1.setName("");
fBProcedureCall0.setName(":.d5|^ao[o^!.1H");
fBProcedureCall0.equals(fBProcedureCall1);
fBProcedureCall0.getOutputParams();
assertTrue(fBProcedureCall0.equals((Object)fBProcedureCall1));

fBProcedureCall1.getOutputParams();
assertTrue(fBProcedureCall1.equals((Object)fBProcedureCall0));


* Writing JUnit test case 'FBProcedureCall_ESTest' to /home/ubuntu/termite/rmosa/tests/s1005/110_firebird/evosuite-tests
* Done!

* Computation finished
[MASTER] 20:28:38.434 [logback-1] WARN  ClassResetter - java.lang.reflect.InvocationTargetException, caused by: java.lang.NoClassDefFoundError: Could not initialize class org.firebirdsql.gds.impl.jni.JniGDSImpl
* Permissions denied during test execution: 
  - java.security.SecurityPermission: 
         createAccessControlContext: 2
* Writing JUnit test case 'FBCachedFetcher_ESTest' to /home/ubuntu/termite/rmosa/tests/s1005/110_firebird/evosuite-tests
* Done!

* Computation finished
