* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 19154
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 04:17:09.311 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:17:09.319 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:17:09.320 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 04:17:12.662 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 04:17:13.317 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 04:17:13.319 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1016
* Starting evolution
[MASTER] 04:17:21.214 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.<init>(Lweka/classifiers/rules/JRip;)V
[MASTER] 04:18:26.703 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NumericAntd.copy()Ljava/lang/Object;
[MASTER] 04:18:26.704 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.NumericAntd.copy()Ljava/lang/Object;
* Search finished after 124s and 100 generations, 41671 statements, best individual has fitness: 13632.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 32%
* Total number of goals: 705
* Number of covered goals: 226
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 23%
* Total number of goals: 416
* Number of covered goals: 95
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 49%
* Total number of goals: 993
* Number of covered goals: 484
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 27%
* Total number of goals: 93
* Number of covered goals: 25
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 23%
* Total number of goals: 416
* Number of covered goals: 95
* Generated 63 tests with total length 429
* Resulting test suite's coverage: 39% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1016/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 19149
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 19150
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1016
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 04:21:58.020 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:21:58.033 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:21:58.034 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 04:21:58.074 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1016
* Starting evolution
[MASTER] 04:22:04.374 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 126s and 51 generations, 59874 statements, best individual has fitness: 2944.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 217
* Number of covered goals: 186
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 64%
* Total number of goals: 428
* Number of covered goals: 276
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 238
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 64%
* Total number of goals: 428
* Number of covered goals: 275
* Generated 80 tests with total length 368
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 122s and 53 generations, 33755 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 19 tests with total length 98
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1016/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 80%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1016/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 19151
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 19149
* Connecting to master process on port 19152
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 04:32:54.197 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:32:54.228 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:32:54.229 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 04:32:54.387 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 04:32:54.719 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:32:54.730 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:32:54.732 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 04:32:54.800 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 04:32:54.807 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 04:32:54.809 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1016
* Starting evolution
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1016
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 04:33:18.114 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:33:18.121 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:33:18.122 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 04:33:18.994 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 04:33:20.011 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 04:33:20.012 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 04:33:23.118 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 04:33:23.192 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 04:33:23.193 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 04:33:23.193 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 04:33:23.194 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 04:33:23.194 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 04:33:23.194 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 04:33:23.196 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 04:33:23.196 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 04:33:23.265 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 04:33:23.278 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1016
* Starting evolution
[MASTER] 04:33:31.078 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 04:33:41.752 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: I3 Branch 165 IFNULL L1574 - true
[MASTER] 04:33:41.759 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: I3 Branch 165 IFNULL L1574 - true in context: 
[MASTER] 04:33:54.314 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 04:34:14.848 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 04:34:44.016 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.evaluationForSingleInstance(Lweka/classifiers/Classifier;Lweka/core/Instance;Z)D
[MASTER] 04:34:44.020 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.evaluationForSingleInstance(Lweka/classifiers/Classifier;Lweka/core/Instance;Z)D
* Search finished after 122s and 177 generations, 66186 statements, best individual has fitness: 7920.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 45%
* Total number of goals: 370
* Number of covered goals: 166
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 42%
* Total number of goals: 713
* Number of covered goals: 298
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 72
* Number of covered goals: 31
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 45
* Number of covered goals: 44
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Generated 63 tests with total length 328
* Resulting test suite's coverage: 43% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 136s and 15 generations, 13779 statements, best individual has fitness: 3472.0
[MASTER] 04:35:15.541 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 19 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 647
* Number of covered goals: 625
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 90%
* Total number of goals: 441
* Number of covered goals: 395
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 87%
* Total number of goals: 678
* Number of covered goals: 587
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 244
* Number of covered goals: 80
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 86%
* Total number of goals: 124
* Number of covered goals: 107
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 86%
* Total number of goals: 124
* Number of covered goals: 107
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 83%
* Total number of goals: 441
* Number of covered goals: 368
* Generated 130 tests with total length 2433
* Resulting test suite's coverage: 84% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 127s and 40 generations, 23741 statements, best individual has fitness: 15240.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 60%
* Total number of goals: 1378
* Number of covered goals: 827
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 43%
* Total number of goals: 809
* Number of covered goals: 346
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 63%
* Total number of goals: 424
* Number of covered goals: 267
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 18%
* Total number of goals: 278
* Number of covered goals: 51
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 96%
* Total number of goals: 103
* Number of covered goals: 99
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 92%
* Total number of goals: 103
* Number of covered goals: 95
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 41%
* Total number of goals: 809
* Number of covered goals: 329
* Generated 105 tests with total length 1430
* Resulting test suite's coverage: 52% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 13%
* Compiling and checking tests
[MASTER] 04:36:28.695 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 04:36:29.214 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1016/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 04:41:09.525 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.7081229166666667% of time used, but only 30/130 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 12%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
[MASTER] 04:42:41.996 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1016/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 7%
* Compiling and checking tests
[MASTER] 04:43:40.007 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 04:43:40.493 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 04:43:40.493 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 04:43:42.106 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1016/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 19151
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 04:44:48.917 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 04:44:48.923 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 04:44:48.934 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 04:44:49.043 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:44:49.060 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:44:49.061 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1016
* Starting evolution
[MASTER] 04:44:59.097 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z:False
[MASTER] 04:44:59.098 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z
[MASTER] 04:44:59.099 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z
[MASTER] 04:44:59.102 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getUseWordFrequencies()Z
[MASTER] 04:45:11.935 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 04:45:11.935 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Search finished after 124s and 133 generations, 67954 statements, best individual has fitness: 1768.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 338
* Number of covered goals: 298
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 79%
* Total number of goals: 194
* Number of covered goals: 154
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 476
* Number of covered goals: 439
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 46%
* Total number of goals: 112
* Number of covered goals: 52
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 78%
* Total number of goals: 194
* Number of covered goals: 152
* Generated 77 tests with total length 657
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 58%
* Compiling and checking tests
[MASTER] 04:50:00.013 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_44_1575607799981/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_44_1575607799981/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding.java]]
[MASTER] 04:50:00.013 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:50:00.013 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:50:00.018 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 04:50:00.018 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 04:50:00.020 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_44_1575607799981/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 04:49:59 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.mock.java.io.MockFile;
14: import org.evosuite.runtime.testdata.FileSystemHandling;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_44_tmp__ESTest extends NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=2.0761045791007673
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       MockFile mockFile0 = new MockFile("Kiy)Xzp6l>", "Kiy)Xzp6l>");
29:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
30:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
31:       mockFile0.setExecutable(true, true);
32:       mockFile0.createNewFile();
33:       mockFile0.setReadOnly();
34:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
35:       mockFile0.setExecutable(true);
36:       naiveBayesMultinomialText0.setStopwords(mockFile0);
37:       naiveBayesMultinomialText0.getUseWordFrequencies();
38:       naiveBayesMultinomialText0.minWordFrequencyTipText();
39:       naiveBayesMultinomialText0.lowercaseTokensTipText();
40:       naiveBayesMultinomialText0.minWordFrequencyTipText();
41:       assertTrue(naiveBayesMultinomialText0.getUseStopList());
42:   }
43: }
RegularFileObject[/tmp/EvoSuite_44_1575607799981/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 04:49:59 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.core.neighboursearch.balltrees.BottomUpConstructor$TempNode",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.attributeSelection.SubsetEvaluator",
96:       "weka.classifiers.CostMatrix",
97:       "weka.core.logging.Logger$Level",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.attributeSelection.CfsSubsetEval",
102:       "weka.core.DenseInstance",
103:       "weka.classifiers.trees.J48",
104:       "weka.core.stemmers.Stemmer",
105:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
106:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.classifiers.bayes.NaiveBayes",
110:       "weka.estimators.IncrementalEstimator",
111:       "weka.estimators.Estimator$Builder",
112:       "weka.core.neighboursearch.KDTree",
113:       "weka.core.stemmers.NullStemmer",
114:       "weka.classifiers.trees.j48.C45ModelSelection",
115:       "weka.classifiers.functions.SGDText",
116:       "weka.core.RelationalLocator",
117:       "weka.core.Utils",
118:       "weka.core.CustomDisplayStringProvider",
119:       "weka.core.tokenizers.Tokenizer",
120:       "weka.core.NormalizableDistance",
121:       "weka.core.NoSupportForMissingValuesException",
122:       "weka.classifiers.UpdateableClassifier",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
124:       "weka.core.MultiInstanceCapabilitiesHandler",
125:       "weka.core.Copyable",
126:       "weka.core.Capabilities",
127:       "weka.core.BinarySparseInstance",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.core.AttributeLocator",
130:       "weka.core.SerializedObject",
131:       "weka.clusterers.UpdateableClusterer",
132:       "weka.attributeSelection.BestFirst",
133:       "weka.core.Summarizable",
134:       "weka.classifiers.trees.j48.ModelSelection",
135:       "weka.core.neighboursearch.balltrees.BallNode",
136:       "weka.core.AdditionalMeasureProducer",
137:       "org.pentaho.packageManagement.PackageManager$1",
138:       "weka.attributeSelection.GreedyStepwise",
139:       "weka.core.Drawable",
140:       "weka.core.matrix.Matrix",
141:       "weka.core.CapabilitiesHandler",
142:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
143:       "weka.attributeSelection.ASEvaluation",
144:       "weka.core.AbstractInstance",
145:       "weka.core.scripting.JythonObject",
146:       "weka.core.SelectedTag",
147:       "weka.classifiers.meta.FilteredClassifier",
148:       "org.pentaho.packageManagement.DefaultPackage",
149:       "weka.estimators.DiscreteEstimator",
150:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
151:       "weka.core.Version",
152:       "weka.attributeSelection.AttributeSelection",
153:       "weka.core.Tag",
154:       "weka.classifiers.trees.j48.BinC45ModelSelection",
155:       "weka.classifiers.AbstractClassifier",
156:       "weka.core.OptionHandler",
157:       "weka.core.WekaException",
158:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
159:       "weka.filters.supervised.attribute.AttributeSelection",
160:       "weka.filters.StreamableFilter",
161:       "weka.core.Range",
162:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
163:       "weka.core.PartitionGenerator",
164:       "weka.core.scripting.JythonSerializableObject",
165:       "weka.classifiers.Classifier",
166:       "weka.core.Capabilities$Capability",
167:       "weka.core.SparseInstance",
168:       "org.pentaho.packageManagement.PackageManager",
169:       "weka.core.tokenizers.WordTokenizer",
170:       "weka.classifiers.trees.j48.ClassifierTree",
171:       "weka.core.stemmers.SnowballStemmer",
172:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
173:       "weka.classifiers.trees.j48.PruneableClassifierTree",
174:       "weka.classifiers.Evaluation",
175:       "weka.classifiers.functions.supportVector.Kernel",
176:       "weka.core.WekaPackageManager",
177:       "weka.attributeSelection.ASSearch",
178:       "weka.filters.SupervisedFilter",
179:       "weka.core.TechnicalInformationHandler",
180:       "weka.core.neighboursearch.LinearNNSearch",
181:       "weka.attributeSelection.StartSetHandler",
182:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
183:       "weka.classifiers.meta.CostSensitiveClassifier",
184:       "weka.core.Option",
185:       "weka.core.neighboursearch.PerformanceStats",
186:       "weka.estimators.NormalEstimator",
187:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
188:       "weka.filters.Sourcable",
189:       "weka.core.Attribute",
190:       "weka.core.Stopwords",
191:       "weka.core.tokenizers.AlphabeticTokenizer",
192:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
193:       "weka.core.FastVector",
194:       "weka.core.UnassignedDatasetException",
195:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
196:       "weka.classifiers.RandomizableClassifier",
197:       "weka.attributeSelection.RankedOutputSearch",
198:       "weka.classifiers.SingleClassifierEnhancer",
199:       "weka.core.RevisionUtils",
200:       "weka.core.Instance",
201:       "weka.estimators.Estimator",
202:       "weka.core.ProtectedProperties",
203:       "weka.core.StringLocator",
204:       "weka.core.Matchable",
205:       "weka.core.AttributeStats",
206:       "weka.core.WeightedInstancesHandler",
207:       "weka.core.neighboursearch.NearestNeighbourSearch",
208:       "weka.filters.unsupervised.attribute.Remove",
209:       "weka.core.Randomizable",
210:       "weka.core.EuclideanDistance",
211:       "weka.core.Instances",
212:       "weka.classifiers.bayes.NaiveBayesMultinomial",
213:       "weka.core.UnassignedClassException",
214:       "weka.classifiers.rules.ZeroR",
215:       "weka.attributeSelection.Ranker",
216:       "weka.core.TechnicalInformation",
217:       "weka.core.UnsupportedAttributeTypeException",
218:       "weka.classifiers.Sourcable",
219:       "weka.core.RevisionHandler",
220:       "weka.classifiers.evaluation.output.prediction.PlainText",
221:       "weka.core.neighboursearch.TreePerformanceStats",
222:       "weka.core.xml.XMLSerialization",
223:       "weka.classifiers.xml.XMLClassifier",
224:       "weka.filters.Filter",
225:       "weka.filters.supervised.attribute.Discretize"
226:     );
227:   } 
228: 
229:   private static void resetClasses() {
230:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding.class.getClassLoader()); 
231: 
232:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
233:       "weka.classifiers.AbstractClassifier",
234:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
235:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
236:       "weka.core.Capabilities$Capability",
237:       "weka.core.tokenizers.Tokenizer",
238:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
239:       "weka.core.tokenizers.WordTokenizer",
240:       "weka.core.stemmers.NullStemmer",
241:       "weka.core.Utils",
242:       "weka.core.AbstractInstance",
243:       "weka.core.SparseInstance",
244:       "weka.core.BinarySparseInstance",
245:       "weka.core.UnassignedDatasetException",
246:       "weka.classifiers.Evaluation",
247:       "weka.core.Option",
248:       "weka.core.DenseInstance",
249:       "weka.core.TestInstances",
250:       "weka.classifiers.SingleClassifierEnhancer",
251:       "weka.classifiers.misc.InputMappedClassifier",
252:       "weka.classifiers.rules.ZeroR",
253:       "weka.core.neighboursearch.balltrees.BallNode",
254:       "weka.classifiers.bayes.NaiveBayes",
255:       "weka.core.Tag",
256:       "weka.classifiers.lazy.IBk",
257:       "weka.core.neighboursearch.NearestNeighbourSearch",
258:       "weka.core.neighboursearch.LinearNNSearch",
259:       "weka.core.NormalizableDistance",
260:       "weka.core.EuclideanDistance",
261:       "weka.core.Range",
262:       "weka.core.SerializedObject",
263:       "weka.classifiers.RandomizableClassifier",
264:       "weka.classifiers.functions.SGDText",
265:       "weka.core.stemmers.SnowballStemmer",
266:       "weka.core.RevisionUtils",
267:       "weka.core.FindWithCapabilities",
268:       "weka.core.Capabilities",
269:       "org.pentaho.packageManagement.PackageManager",
270:       "org.pentaho.packageManagement.DefaultPackageManager",
271:       "weka.core.Version",
272:       "weka.core.Environment",
273:       "weka.core.WekaPackageManager",
274:       "weka.core.SingleIndex",
275:       "weka.core.Attribute",
276:       "weka.core.ProtectedProperties",
277:       "weka.core.Stopwords",
278:       "weka.core.neighboursearch.BallTree",
279:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
280:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
281:       "weka.core.neighboursearch.balltrees.BallSplitter",
282:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
283:       "weka.core.Instances",
284:       "weka.classifiers.functions.supportVector.Kernel",
285:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
286:       "weka.core.neighboursearch.CoverTree",
287:       "weka.attributeSelection.ASEvaluation",
288:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
289:       "weka.attributeSelection.PrincipalComponents",
290:       "weka.filters.Filter",
291:       "weka.filters.supervised.attribute.Discretize",
292:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
293:       "weka.classifiers.meta.CostSensitiveClassifier",
294:       "weka.classifiers.CostMatrix",
295:       "weka.core.stemmers.LovinsStemmer",
296:       "weka.core.stemmers.IteratedLovinsStemmer",
297:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
298:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
299:       "weka.core.tokenizers.NGramTokenizer",
300:       "weka.core.tokenizers.AlphabeticTokenizer",
301:       "weka.core.ClassDiscovery",
302:       "weka.classifiers.trees.RandomForest",
303:       "weka.classifiers.trees.RandomTree",
304:       "weka.classifiers.MultipleClassifiersCombiner",
305:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
306:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
307:       "weka.classifiers.meta.Stacking",
308:       "weka.core.ManhattanDistance",
309:       "weka.core.stemmers.Stemming",
310:       "weka.classifiers.bayes.BayesNet",
311:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
312:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
313:       "weka.classifiers.bayes.net.search.local.K2",
314:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
315:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
316:       "weka.core.WekaEnumeration",
317:       "weka.core.Attribute$1",
318:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
319:       "weka.classifiers.meta.MultiScheme",
320:       "weka.core.Javadoc",
321:       "weka.core.GlobalInfoJavadoc",
322:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
323:       "weka.core.converters.ArffLoader$ArffReader",
324:       "weka.core.neighboursearch.KDTree",
325:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
326:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
327:       "weka.core.TechnicalInformation",
328:       "weka.core.TechnicalInformation$Type",
329:       "weka.core.TechnicalInformation$Field",
330:       "weka.classifiers.lazy.KStar",
331:       "weka.classifiers.bayes.NaiveBayesUpdateable",
332:       "weka.classifiers.IteratedSingleClassifierEnhancer",
333:       "weka.classifiers.meta.AdditiveRegression",
334:       "weka.core.WekaException",
335:       "weka.core.UnsupportedAttributeTypeException",
336:       "weka.classifiers.meta.MultiClassClassifier",
337:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
338:       "weka.classifiers.functions.Logistic",
339:       "weka.classifiers.bayes.net.BIFReader",
340:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
341:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
342:       "weka.classifiers.rules.DecisionTable",
343:       "weka.attributeSelection.ASSearch",
344:       "weka.attributeSelection.BestFirst",
345:       "weka.core.OptionHandlerJavadoc",
346:       "weka.classifiers.bayes.NaiveBayesMultinomial",
347:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
348:       "weka.classifiers.functions.LinearRegression",
349:       "weka.estimators.Estimator",
350:       "weka.estimators.DiscreteEstimator",
351:       "weka.classifiers.misc.SerializedClassifier",
352:       "weka.attributeSelection.InfoGainAttributeEval",
353:       "weka.classifiers.meta.FilteredClassifier",
354:       "weka.filters.supervised.attribute.AttributeSelection",
355:       "weka.attributeSelection.AttributeSelection",
356:       "weka.attributeSelection.CfsSubsetEval",
357:       "weka.attributeSelection.GreedyStepwise",
358:       "weka.classifiers.trees.J48",
359:       "weka.classifiers.trees.DecisionStump",
360:       "weka.classifiers.functions.VotedPerceptron",
361:       "weka.classifiers.meta.AttributeSelectedClassifier",
362:       "weka.estimators.NormalEstimator",
363:       "weka.core.UnassignedClassException",
364:       "weka.classifiers.functions.supportVector.CachedKernel",
365:       "weka.classifiers.functions.supportVector.PolyKernel",
366:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
367:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
368:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
369:       "weka.classifiers.functions.GaussianProcesses",
370:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
371:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
372:       "weka.classifiers.meta.RandomSubSpace",
373:       "weka.classifiers.trees.REPTree",
374:       "weka.attributeSelection.GainRatioAttributeEval",
375:       "weka.classifiers.functions.supportVector.Puk",
376:       "weka.classifiers.trees.m5.M5Base",
377:       "weka.classifiers.rules.M5Rules",
378:       "weka.attributeSelection.ReliefFAttributeEval",
379:       "weka.classifiers.lazy.LWL",
380:       "weka.core.ClassCache",
381:       "weka.core.AllJavadoc",
382:       "weka.classifiers.functions.MultilayerPerceptron",
383:       "weka.core.FastVector",
384:       "weka.filters.unsupervised.attribute.NominalToBinary",
385:       "weka.classifiers.functions.neural.SigmoidUnit",
386:       "weka.classifiers.functions.neural.LinearUnit",
387:       "weka.filters.SimpleFilter",
388:       "weka.filters.SimpleStreamFilter",
389:       "weka.filters.MultiFilter",
390:       "weka.filters.AllFilter",
391:       "weka.classifiers.functions.SimpleLinearRegression",
392:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
393:       "weka.classifiers.meta.LogitBoost",
394:       "weka.classifiers.rules.JRip",
395:       "weka.classifiers.meta.AdaBoostM1",
396:       "weka.attributeSelection.OneRAttributeEval",
397:       "weka.classifiers.trees.LMT",
398:       "weka.classifiers.functions.SGD",
399:       "weka.classifiers.functions.SMOreg",
400:       "weka.classifiers.functions.supportVector.RegOptimizer",
401:       "weka.classifiers.functions.supportVector.RegSMO",
402:       "weka.classifiers.functions.supportVector.RegSMOImproved",
403:       "weka.estimators.PoissonEstimator",
404:       "weka.classifiers.meta.RegressionByDiscretization",
405:       "weka.filters.unsupervised.attribute.Discretize",
406:       "weka.classifiers.trees.j48.ClassifierTree",
407:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
408:       "weka.core.Statistics",
409:       "weka.classifiers.rules.OneR",
410:       "weka.classifiers.meta.Bagging",
411:       "weka.classifiers.rules.PART",
412:       "weka.classifiers.rules.part.MakeDecList",
413:       "weka.classifiers.functions.SMO",
414:       "weka.core.AttributeStats",
415:       "weka.classifiers.meta.CVParameterSelection",
416:       "weka.attributeSelection.WrapperSubsetEval",
417:       "weka.classifiers.meta.RandomCommittee",
418:       "weka.classifiers.functions.supportVector.StringKernel",
419:       "weka.classifiers.meta.Vote",
420:       "weka.core.matrix.Matrix",
421:       "weka.attributeSelection.CorrelationAttributeEval",
422:       "weka.core.Check",
423:       "weka.core.CheckGOE",
424:       "weka.classifiers.functions.SimpleLogistic",
425:       "weka.classifiers.functions.supportVector.RBFKernel",
426:       "weka.classifiers.meta.ClassificationViaRegression",
427:       "weka.classifiers.trees.M5P",
428:       "weka.estimators.KernelEstimator"
429:     );
430:   }
431: }

[MASTER] 04:50:00.020 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
MockFile mockFile0 = new MockFile("Kiy)Xzp6l>", "Kiy)Xzp6l>");
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
mockFile0.setExecutable(true, true);
mockFile0.createNewFile();
mockFile0.setReadOnly();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
mockFile0.setExecutable(true);
naiveBayesMultinomialText0.setStopwords(mockFile0);
naiveBayesMultinomialText0.getUseWordFrequencies();
naiveBayesMultinomialText0.minWordFrequencyTipText();
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.minWordFrequencyTipText();
assertTrue(naiveBayesMultinomialText0.getUseStopList());


[MASTER] 04:50:00.694 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_64_1575607800664/weka/classifiers/bayes/NaiveBayesMultinomialText_64_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_64_1575607800664/weka/classifiers/bayes/NaiveBayesMultinomialText_64_tmp__ESTest_scaffolding.java]]
[MASTER] 04:50:00.694 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:50:00.694 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:50:00.695 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 04:50:00.695 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 04:50:00.695 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 04:50:00.695 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 04:50:00.695 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 04:50:00.696 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_64_1575607800664/weka/classifiers/bayes/NaiveBayesMultinomialText_64_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 04:50:00 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_64_tmp__ESTest extends NaiveBayesMultinomialText_64_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=2.41257681572198
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
28:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
29:       naiveBayesMultinomialText0.setLNorm(4036.14);
30:       naiveBayesMultinomialText0.setLowercaseTokens(false);
31:       naiveBayesMultinomialText0.tokenizerTipText();
32:       naiveBayesMultinomialText0.m_periodicP = (-1921);
33:       Integer integer0 = new Integer((-1921));
34:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
35:       linkedHashMap0.put(integer0, linkedHashMap1);
36:       naiveBayesMultinomialText0.getCapabilities();
37:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
38:       int int0 = naiveBayesMultinomialText0.getPeriodicPruning();
39:       assertEquals(4036.14, naiveBayesMultinomialText0.getLNorm(), 0.01);
40:       assertEquals((-1921), int0);
41:   }
42: }
RegularFileObject[/tmp/EvoSuite_64_1575607800664/weka/classifiers/bayes/NaiveBayesMultinomialText_64_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 04:50:00 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_64_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_64_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.core.neighboursearch.balltrees.BottomUpConstructor$TempNode",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.attributeSelection.SubsetEvaluator",
96:       "weka.classifiers.CostMatrix",
97:       "weka.core.logging.Logger$Level",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.attributeSelection.CfsSubsetEval",
102:       "weka.core.DenseInstance",
103:       "weka.classifiers.trees.J48",
104:       "weka.core.stemmers.Stemmer",
105:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
106:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.classifiers.bayes.NaiveBayes",
110:       "weka.estimators.IncrementalEstimator",
111:       "weka.estimators.Estimator$Builder",
112:       "weka.core.neighboursearch.KDTree",
113:       "weka.core.stemmers.NullStemmer",
114:       "weka.classifiers.trees.j48.C45ModelSelection",
115:       "weka.classifiers.functions.SGDText",
116:       "weka.core.RelationalLocator",
117:       "weka.core.Utils",
118:       "weka.core.CustomDisplayStringProvider",
119:       "weka.core.tokenizers.Tokenizer",
120:       "weka.core.NormalizableDistance",
121:       "weka.core.NoSupportForMissingValuesException",
122:       "weka.classifiers.UpdateableClassifier",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
124:       "weka.core.MultiInstanceCapabilitiesHandler",
125:       "weka.core.Copyable",
126:       "weka.core.Capabilities",
127:       "weka.core.BinarySparseInstance",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.core.AttributeLocator",
130:       "weka.core.SerializedObject",
131:       "weka.clusterers.UpdateableClusterer",
132:       "weka.attributeSelection.BestFirst",
133:       "weka.core.Summarizable",
134:       "weka.classifiers.trees.j48.ModelSelection",
135:       "weka.core.neighboursearch.balltrees.BallNode",
136:       "weka.core.AdditionalMeasureProducer",
137:       "org.pentaho.packageManagement.PackageManager$1",
138:       "weka.attributeSelection.GreedyStepwise",
139:       "weka.core.Drawable",
140:       "weka.core.matrix.Matrix",
141:       "weka.core.CapabilitiesHandler",
142:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
143:       "weka.attributeSelection.ASEvaluation",
144:       "weka.core.AbstractInstance",
145:       "weka.core.scripting.JythonObject",
146:       "weka.core.SelectedTag",
147:       "weka.classifiers.meta.FilteredClassifier",
148:       "org.pentaho.packageManagement.DefaultPackage",
149:       "weka.estimators.DiscreteEstimator",
150:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
151:       "weka.core.Version",
152:       "weka.attributeSelection.AttributeSelection",
153:       "weka.core.Tag",
154:       "weka.classifiers.trees.j48.BinC45ModelSelection",
155:       "weka.classifiers.AbstractClassifier",
156:       "weka.core.OptionHandler",
157:       "weka.core.WekaException",
158:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
159:       "weka.filters.supervised.attribute.AttributeSelection",
160:       "weka.filters.StreamableFilter",
161:       "weka.core.Range",
162:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
163:       "weka.core.PartitionGenerator",
164:       "weka.core.scripting.JythonSerializableObject",
165:       "weka.classifiers.Classifier",
166:       "weka.core.Capabilities$Capability",
167:       "weka.core.SparseInstance",
168:       "org.pentaho.packageManagement.PackageManager",
169:       "weka.core.tokenizers.WordTokenizer",
170:       "weka.classifiers.trees.j48.ClassifierTree",
171:       "weka.core.stemmers.SnowballStemmer",
172:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
173:       "weka.classifiers.trees.j48.PruneableClassifierTree",
174:       "weka.classifiers.Evaluation",
175:       "weka.classifiers.functions.supportVector.Kernel",
176:       "weka.core.WekaPackageManager",
177:       "weka.attributeSelection.ASSearch",
178:       "weka.filters.SupervisedFilter",
179:       "weka.core.TechnicalInformationHandler",
180:       "weka.core.neighboursearch.LinearNNSearch",
181:       "weka.attributeSelection.StartSetHandler",
182:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
183:       "weka.classifiers.meta.CostSensitiveClassifier",
184:       "weka.core.Option",
185:       "weka.core.neighboursearch.PerformanceStats",
186:       "weka.estimators.NormalEstimator",
187:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
188:       "weka.filters.Sourcable",
189:       "weka.core.Attribute",
190:       "weka.core.Stopwords",
191:       "weka.core.tokenizers.AlphabeticTokenizer",
192:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
193:       "weka.core.FastVector",
194:       "weka.core.UnassignedDatasetException",
195:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
196:       "weka.classifiers.RandomizableClassifier",
197:       "weka.attributeSelection.RankedOutputSearch",
198:       "weka.classifiers.SingleClassifierEnhancer",
199:       "weka.core.RevisionUtils",
200:       "weka.core.Instance",
201:       "weka.estimators.Estimator",
202:       "weka.core.ProtectedProperties",
203:       "weka.core.StringLocator",
204:       "weka.core.Matchable",
205:       "weka.core.AttributeStats",
206:       "weka.core.WeightedInstancesHandler",
207:       "weka.core.neighboursearch.NearestNeighbourSearch",
208:       "weka.filters.unsupervised.attribute.Remove",
209:       "weka.core.Randomizable",
210:       "weka.core.EuclideanDistance",
211:       "weka.core.Instances",
212:       "weka.classifiers.bayes.NaiveBayesMultinomial",
213:       "weka.core.UnassignedClassException",
214:       "weka.classifiers.rules.ZeroR",
215:       "weka.attributeSelection.Ranker",
216:       "weka.core.TechnicalInformation",
217:       "weka.core.UnsupportedAttributeTypeException",
218:       "weka.classifiers.Sourcable",
219:       "weka.core.RevisionHandler",
220:       "weka.classifiers.evaluation.output.prediction.PlainText",
221:       "weka.core.neighboursearch.TreePerformanceStats",
222:       "weka.core.xml.XMLSerialization",
223:       "weka.classifiers.xml.XMLClassifier",
224:       "weka.filters.Filter",
225:       "weka.filters.supervised.attribute.Discretize"
226:     );
227:   } 
228: 
229:   private static void resetClasses() {
230:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_64_tmp__ESTest_scaffolding.class.getClassLoader()); 
231: 
232:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
233:       "weka.classifiers.AbstractClassifier",
234:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
235:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
236:       "weka.core.Capabilities$Capability",
237:       "weka.core.tokenizers.Tokenizer",
238:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
239:       "weka.core.tokenizers.WordTokenizer",
240:       "weka.core.stemmers.NullStemmer",
241:       "weka.core.Utils",
242:       "weka.core.AbstractInstance",
243:       "weka.core.SparseInstance",
244:       "weka.core.BinarySparseInstance",
245:       "weka.core.UnassignedDatasetException",
246:       "weka.classifiers.Evaluation",
247:       "weka.core.Option",
248:       "weka.core.DenseInstance",
249:       "weka.core.TestInstances",
250:       "weka.classifiers.SingleClassifierEnhancer",
251:       "weka.classifiers.misc.InputMappedClassifier",
252:       "weka.classifiers.rules.ZeroR",
253:       "weka.core.neighboursearch.balltrees.BallNode",
254:       "weka.classifiers.bayes.NaiveBayes",
255:       "weka.core.Tag",
256:       "weka.classifiers.lazy.IBk",
257:       "weka.core.neighboursearch.NearestNeighbourSearch",
258:       "weka.core.neighboursearch.LinearNNSearch",
259:       "weka.core.NormalizableDistance",
260:       "weka.core.EuclideanDistance",
261:       "weka.core.Range",
262:       "weka.core.SerializedObject",
263:       "weka.classifiers.RandomizableClassifier",
264:       "weka.classifiers.functions.SGDText",
265:       "weka.core.stemmers.SnowballStemmer",
266:       "weka.core.RevisionUtils",
267:       "weka.core.FindWithCapabilities",
268:       "weka.core.Capabilities",
269:       "org.pentaho.packageManagement.PackageManager",
270:       "org.pentaho.packageManagement.DefaultPackageManager",
271:       "weka.core.Version",
272:       "weka.core.Environment",
273:       "weka.core.WekaPackageManager",
274:       "weka.core.SingleIndex",
275:       "weka.core.Attribute",
276:       "weka.core.ProtectedProperties",
277:       "weka.core.Stopwords",
278:       "weka.core.neighboursearch.BallTree",
279:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
280:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
281:       "weka.core.neighboursearch.balltrees.BallSplitter",
282:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
283:       "weka.core.Instances",
284:       "weka.classifiers.functions.supportVector.Kernel",
285:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
286:       "weka.core.neighboursearch.CoverTree",
287:       "weka.attributeSelection.ASEvaluation",
288:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
289:       "weka.attributeSelection.PrincipalComponents",
290:       "weka.filters.Filter",
291:       "weka.filters.supervised.attribute.Discretize",
292:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
293:       "weka.classifiers.meta.CostSensitiveClassifier",
294:       "weka.classifiers.CostMatrix",
295:       "weka.core.stemmers.LovinsStemmer",
296:       "weka.core.stemmers.IteratedLovinsStemmer",
297:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
298:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
299:       "weka.core.tokenizers.NGramTokenizer",
300:       "weka.core.tokenizers.AlphabeticTokenizer",
301:       "weka.core.ClassDiscovery",
302:       "weka.classifiers.trees.RandomForest",
303:       "weka.classifiers.trees.RandomTree",
304:       "weka.classifiers.MultipleClassifiersCombiner",
305:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
306:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
307:       "weka.classifiers.meta.Stacking",
308:       "weka.core.ManhattanDistance",
309:       "weka.core.stemmers.Stemming",
310:       "weka.classifiers.bayes.BayesNet",
311:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
312:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
313:       "weka.classifiers.bayes.net.search.local.K2",
314:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
315:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
316:       "weka.core.WekaEnumeration",
317:       "weka.core.Attribute$1",
318:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
319:       "weka.classifiers.meta.MultiScheme",
320:       "weka.core.Javadoc",
321:       "weka.core.GlobalInfoJavadoc",
322:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
323:       "weka.core.converters.ArffLoader$ArffReader",
324:       "weka.core.neighboursearch.KDTree",
325:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
326:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
327:       "weka.core.TechnicalInformation",
328:       "weka.core.TechnicalInformation$Type",
329:       "weka.core.TechnicalInformation$Field",
330:       "weka.classifiers.lazy.KStar",
331:       "weka.classifiers.bayes.NaiveBayesUpdateable",
332:       "weka.classifiers.IteratedSingleClassifierEnhancer",
333:       "weka.classifiers.meta.AdditiveRegression",
334:       "weka.core.WekaException",
335:       "weka.core.UnsupportedAttributeTypeException",
336:       "weka.classifiers.meta.MultiClassClassifier",
337:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
338:       "weka.classifiers.functions.Logistic",
339:       "weka.classifiers.bayes.net.BIFReader",
340:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
341:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
342:       "weka.classifiers.rules.DecisionTable",
343:       "weka.attributeSelection.ASSearch",
344:       "weka.attributeSelection.BestFirst",
345:       "weka.core.OptionHandlerJavadoc",
346:       "weka.classifiers.bayes.NaiveBayesMultinomial",
347:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
348:       "weka.classifiers.functions.LinearRegression",
349:       "weka.estimators.Estimator",
350:       "weka.estimators.DiscreteEstimator",
351:       "weka.classifiers.misc.SerializedClassifier",
352:       "weka.attributeSelection.InfoGainAttributeEval",
353:       "weka.classifiers.meta.FilteredClassifier",
354:       "weka.filters.supervised.attribute.AttributeSelection",
355:       "weka.attributeSelection.AttributeSelection",
356:       "weka.attributeSelection.CfsSubsetEval",
357:       "weka.attributeSelection.GreedyStepwise",
358:       "weka.classifiers.trees.J48",
359:       "weka.classifiers.trees.DecisionStump",
360:       "weka.classifiers.functions.VotedPerceptron",
361:       "weka.classifiers.meta.AttributeSelectedClassifier",
362:       "weka.estimators.NormalEstimator",
363:       "weka.core.UnassignedClassException",
364:       "weka.classifiers.functions.supportVector.CachedKernel",
365:       "weka.classifiers.functions.supportVector.PolyKernel",
366:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
367:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
368:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
369:       "weka.classifiers.functions.GaussianProcesses",
370:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
371:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
372:       "weka.classifiers.meta.RandomSubSpace",
373:       "weka.classifiers.trees.REPTree",
374:       "weka.attributeSelection.GainRatioAttributeEval",
375:       "weka.classifiers.functions.supportVector.Puk",
376:       "weka.classifiers.trees.m5.M5Base",
377:       "weka.classifiers.rules.M5Rules",
378:       "weka.attributeSelection.ReliefFAttributeEval",
379:       "weka.classifiers.lazy.LWL",
380:       "weka.core.ClassCache",
381:       "weka.core.AllJavadoc",
382:       "weka.classifiers.functions.MultilayerPerceptron",
383:       "weka.core.FastVector",
384:       "weka.filters.unsupervised.attribute.NominalToBinary",
385:       "weka.classifiers.functions.neural.SigmoidUnit",
386:       "weka.classifiers.functions.neural.LinearUnit",
387:       "weka.filters.SimpleFilter",
388:       "weka.filters.SimpleStreamFilter",
389:       "weka.filters.MultiFilter",
390:       "weka.filters.AllFilter",
391:       "weka.classifiers.functions.SimpleLinearRegression",
392:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
393:       "weka.classifiers.meta.LogitBoost",
394:       "weka.classifiers.rules.JRip",
395:       "weka.classifiers.meta.AdaBoostM1",
396:       "weka.attributeSelection.OneRAttributeEval",
397:       "weka.classifiers.trees.LMT",
398:       "weka.classifiers.functions.SGD",
399:       "weka.classifiers.functions.SMOreg",
400:       "weka.classifiers.functions.supportVector.RegOptimizer",
401:       "weka.classifiers.functions.supportVector.RegSMO",
402:       "weka.classifiers.functions.supportVector.RegSMOImproved",
403:       "weka.estimators.PoissonEstimator",
404:       "weka.classifiers.meta.RegressionByDiscretization",
405:       "weka.filters.unsupervised.attribute.Discretize",
406:       "weka.classifiers.trees.j48.ClassifierTree",
407:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
408:       "weka.core.Statistics",
409:       "weka.classifiers.rules.OneR",
410:       "weka.classifiers.meta.Bagging",
411:       "weka.classifiers.rules.PART",
412:       "weka.classifiers.rules.part.MakeDecList",
413:       "weka.classifiers.functions.SMO",
414:       "weka.core.AttributeStats",
415:       "weka.classifiers.meta.CVParameterSelection",
416:       "weka.attributeSelection.WrapperSubsetEval",
417:       "weka.classifiers.meta.RandomCommittee",
418:       "weka.classifiers.functions.supportVector.StringKernel",
419:       "weka.classifiers.meta.Vote",
420:       "weka.core.matrix.Matrix",
421:       "weka.attributeSelection.CorrelationAttributeEval",
422:       "weka.core.Check",
423:       "weka.core.CheckGOE",
424:       "weka.classifiers.functions.SimpleLogistic",
425:       "weka.classifiers.functions.supportVector.RBFKernel",
426:       "weka.classifiers.meta.ClassificationViaRegression",
427:       "weka.classifiers.trees.M5P",
428:       "weka.estimators.KernelEstimator"
429:     );
430:   }
431: }

[MASTER] 04:50:00.697 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
naiveBayesMultinomialText0.setLNorm(4036.14);
naiveBayesMultinomialText0.setLowercaseTokens(false);
naiveBayesMultinomialText0.tokenizerTipText();
naiveBayesMultinomialText0.m_periodicP = (-1921);
Integer integer0 = new Integer((-1921));
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.put(integer0, linkedHashMap1);
naiveBayesMultinomialText0.getCapabilities();
naiveBayesMultinomialText0.normalizeDocLengthTipText();
int int0 = naiveBayesMultinomialText0.getPeriodicPruning();
assertEquals(4036.14, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertEquals((-1921), int0);


[MASTER] 04:50:03.769 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 04:50:03.870 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1016/107_weka/evosuite-tests
* Done!

* Computation finished
