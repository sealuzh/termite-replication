* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14425
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14427
* Connecting to master process on port 14424
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14430
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1029
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 14:23:37.617 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:23:37.652 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:23:37.652 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 14:23:37.796 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1029
* Starting evolution
[MASTER] 14:23:44.700 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:23:44.739 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:23:44.741 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 14:23:47.776 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 14:23:48.423 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:23:48.441 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:23:48.478 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 14:23:48.492 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 14:23:48.625 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 14:23:48.635 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1029
* Starting evolution
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1029
* Starting evolution
[MASTER] 14:23:51.826 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 14:23:53.903 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NominalAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 14:23:57.679 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I138 Branch 186 IFLT L1136 - true
[MASTER] 14:23:57.679 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I152 Branch 188 IFLT L1138 - true
[MASTER] 14:23:57.692 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:EmptyArray
[MASTER] 14:23:57.697 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I152 Branch 188 IFLT L1138 - true in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
[MASTER] 14:23:57.698 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I138 Branch 186 IFLT L1136 - true in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
[MASTER] 14:24:13.542 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 125s and 84 generations, 48766 statements, best individual has fitness: 2800.0
[MASTER] 14:25:43.449 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 217
* Number of covered goals: 190
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 283
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 238
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 282
* Generated 79 tests with total length 294
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 121s and 65 generations, 53971 statements, best individual has fitness: 16704.0
* Search finished after 133s and 16 generations, 15604 statements, best individual has fitness: 3440.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 19 tests with total length 136
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 123s and 106 generations, 51087 statements, best individual has fitness: 13328.0
[MASTER] 14:25:56.132 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 16 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 33%
* Total number of goals: 705
* Number of covered goals: 234
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 25%
* Total number of goals: 416
* Number of covered goals: 102
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 50%
* Total number of goals: 993
* Number of covered goals: 501
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 27%
* Total number of goals: 93
* Number of covered goals: 25
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 25%
* Total number of goals: 416
* Number of covered goals: 102
* Generated 74 tests with total length 575
* Resulting test suite's coverage: 40% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1029/107_weka/evosuite-tests
* Done!

* Computation finished
* Coverage of criterion LINE: 97%
* Total number of goals: 647
* Number of covered goals: 625
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 90%
* Total number of goals: 441
* Number of covered goals: 397
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 87%
* Total number of goals: 678
* Number of covered goals: 587
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 35%
* Total number of goals: 244
* Number of covered goals: 85
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 86%
* Total number of goals: 124
* Number of covered goals: 107
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 86%
* Total number of goals: 124
* Number of covered goals: 107
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 83%
* Total number of goals: 441
* Number of covered goals: 367
* Generated 152 tests with total length 2957
* Resulting test suite's coverage: 84% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 79%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1029/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1029/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 14:31:33.732 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6718166666666666% of time used, but only 40/152 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 12%
* Compiling and checking tests
[MASTER] 14:33:05.968 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1029/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14427
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 14:33:48.684 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 14:33:48.685 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 14:33:48.687 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 14:33:48.777 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:33:48.802 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:33:48.803 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1029
* Starting evolution
[MASTER] 14:34:28.449 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 14:34:28.449 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 14:35:18.055 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 124s and 100 generations, 68838 statements, best individual has fitness: 1736.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 89%
* Total number of goals: 338
* Number of covered goals: 301
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 82%
* Total number of goals: 194
* Number of covered goals: 160
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 476
* Number of covered goals: 428
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 112
* Number of covered goals: 49
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 194
* Number of covered goals: 159
* Generated 76 tests with total length 801
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 56%
* Compiling and checking tests
[MASTER] 14:40:23.440 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_17_1575643223392/weka/classifiers/bayes/NaiveBayesMultinomialText_17_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_17_1575643223392/weka/classifiers/bayes/NaiveBayesMultinomialText_17_tmp__ESTest_scaffolding.java]]
[MASTER] 14:40:23.440 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:40:23.440 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:40:23.444 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 14:40:23.444 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 14:40:23.445 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_17_1575643223392/weka/classifiers/bayes/NaiveBayesMultinomialText_17_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 14:40:23 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.testdata.FileSystemHandling;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.stemmers.SnowballStemmer;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_17_tmp__ESTest extends NaiveBayesMultinomialText_17_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=2.3716100238072846
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       FileSystemHandling.shouldAllThrowIOExceptions();
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
31:       SnowballStemmer snowballStemmer0 = new SnowballStemmer("X");
32:       naiveBayesMultinomialText0.setStemmer(snowballStemmer0);
33:       String[] stringArray0 = new String[2];
34:       stringArray0[0] = "-stemmer";
35:       stringArray0[1] = "-stemmer";
36:       try { 
37:         naiveBayesMultinomialText0.setOptions(stringArray0);
38:         fail("Expecting exception: ClassNotFoundException");
39:       
40:       } catch(ClassNotFoundException e) {
41:       }
42:   }
43: }
RegularFileObject[/tmp/EvoSuite_17_1575643223392/weka/classifiers/bayes/NaiveBayesMultinomialText_17_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 14:40:23 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_17_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_17_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.CostMatrix",
95:       "weka.core.neighboursearch.BallTree",
96:       "weka.core.logging.Logger$Level",
97:       "weka.core.neighboursearch.CoverTree$DistanceNode",
98:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.core.neighboursearch.CoverTree$MyHeap",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
123:       "weka.core.BinarySparseInstance",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.neighboursearch.balltrees.BallNode",
129:       "weka.core.AdditionalMeasureProducer",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.CapabilitiesHandler",
134:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
135:       "weka.core.AbstractInstance",
136:       "weka.core.scripting.JythonObject",
137:       "weka.core.SelectedTag",
138:       "org.pentaho.packageManagement.DefaultPackage",
139:       "weka.core.neighboursearch.balltrees.BallSplitter",
140:       "weka.core.Version",
141:       "weka.core.Tag",
142:       "weka.core.neighboursearch.CoverTree",
143:       "weka.classifiers.AbstractClassifier",
144:       "weka.core.OptionHandler",
145:       "weka.core.WekaException",
146:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
147:       "weka.core.Range",
148:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
149:       "weka.core.scripting.JythonSerializableObject",
150:       "weka.classifiers.Classifier",
151:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
152:       "weka.core.Capabilities$Capability",
153:       "weka.core.SparseInstance",
154:       "org.pentaho.packageManagement.PackageManager",
155:       "weka.estimators.PoissonEstimator",
156:       "weka.core.WekaEnumeration",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.classifiers.misc.SerializedClassifier",
159:       "weka.core.stemmers.SnowballStemmer",
160:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
161:       "weka.core.stemmers.LovinsStemmer",
162:       "weka.classifiers.Evaluation",
163:       "weka.classifiers.functions.supportVector.Kernel",
164:       "weka.core.WekaPackageManager",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.neighboursearch.LinearNNSearch",
167:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
168:       "weka.core.Option",
169:       "weka.classifiers.meta.CostSensitiveClassifier",
170:       "weka.core.neighboursearch.PerformanceStats",
171:       "weka.core.Attribute",
172:       "weka.core.Stopwords",
173:       "weka.core.FastVector",
174:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
175:       "weka.core.UnassignedDatasetException",
176:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
177:       "weka.classifiers.RandomizableClassifier",
178:       "weka.classifiers.SingleClassifierEnhancer",
179:       "weka.core.RevisionUtils",
180:       "weka.core.Instance",
181:       "weka.estimators.Estimator",
182:       "weka.core.ProtectedProperties",
183:       "weka.core.AttributeStats",
184:       "weka.core.WeightedInstancesHandler",
185:       "weka.core.neighboursearch.NearestNeighbourSearch",
186:       "weka.core.neighboursearch.covertrees.Stack",
187:       "weka.core.Randomizable",
188:       "weka.core.EuclideanDistance",
189:       "weka.core.Instances",
190:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
191:       "weka.core.UnassignedClassException",
192:       "weka.classifiers.rules.ZeroR",
193:       "weka.core.stemmers.IteratedLovinsStemmer",
194:       "weka.core.TechnicalInformation",
195:       "weka.core.UnsupportedAttributeTypeException",
196:       "weka.classifiers.Sourcable",
197:       "weka.core.RevisionHandler",
198:       "weka.classifiers.evaluation.output.prediction.PlainText",
199:       "weka.core.neighboursearch.TreePerformanceStats",
200:       "weka.core.xml.XMLSerialization",
201:       "weka.classifiers.xml.XMLClassifier"
202:     );
203:   } 
204: 
205:   private static void resetClasses() {
206:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_17_tmp__ESTest_scaffolding.class.getClassLoader()); 
207: 
208:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
209:       "weka.classifiers.AbstractClassifier",
210:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
211:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
212:       "weka.core.Capabilities$Capability",
213:       "weka.core.tokenizers.Tokenizer",
214:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
215:       "weka.core.tokenizers.WordTokenizer",
216:       "weka.core.stemmers.NullStemmer",
217:       "weka.core.Option",
218:       "weka.core.AbstractInstance",
219:       "weka.core.SparseInstance",
220:       "weka.core.Utils",
221:       "weka.core.UnassignedDatasetException",
222:       "weka.core.TestInstances",
223:       "weka.core.Attribute",
224:       "weka.core.ProtectedProperties",
225:       "weka.core.Instances",
226:       "weka.core.DenseInstance",
227:       "weka.classifiers.bayes.BayesNet",
228:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
229:       "weka.core.Tag",
230:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
231:       "weka.classifiers.bayes.net.search.local.K2",
232:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
233:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
234:       "weka.core.neighboursearch.balltrees.BallNode",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.classifiers.functions.SGDText",
237:       "weka.classifiers.Evaluation",
238:       "weka.core.BinarySparseInstance",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.FindWithCapabilities",
246:       "weka.core.SingleIndex",
247:       "weka.core.ClassDiscovery",
248:       "weka.core.SerializedObject",
249:       "weka.core.stemmers.SnowballStemmer",
250:       "weka.core.tokenizers.AlphabeticTokenizer",
251:       "weka.classifiers.misc.SerializedClassifier",
252:       "weka.attributeSelection.ASEvaluation",
253:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
254:       "weka.attributeSelection.PrincipalComponents",
255:       "weka.filters.Filter",
256:       "weka.filters.supervised.attribute.Discretize",
257:       "weka.core.Range",
258:       "weka.core.stemmers.LovinsStemmer",
259:       "weka.core.stemmers.IteratedLovinsStemmer",
260:       "weka.core.Stopwords",
261:       "weka.core.RevisionUtils",
262:       "weka.core.neighboursearch.NearestNeighbourSearch",
263:       "weka.core.neighboursearch.KDTree",
264:       "weka.core.NormalizableDistance",
265:       "weka.core.EuclideanDistance",
266:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
267:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
268:       "weka.core.neighboursearch.CoverTree",
269:       "weka.core.WekaEnumeration",
270:       "weka.core.Attribute$1",
271:       "weka.classifiers.lazy.IBk",
272:       "weka.core.neighboursearch.LinearNNSearch",
273:       "weka.classifiers.functions.supportVector.Kernel",
274:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
275:       "weka.core.WekaException",
276:       "weka.classifiers.SingleClassifierEnhancer",
277:       "weka.classifiers.misc.InputMappedClassifier",
278:       "weka.classifiers.rules.ZeroR",
279:       "weka.classifiers.bayes.net.BIFReader",
280:       "weka.core.converters.ConverterUtils$DataSource",
281:       "weka.core.converters.AbstractLoader",
282:       "weka.core.converters.AbstractFileLoader",
283:       "weka.core.converters.ArffLoader",
284:       "weka.core.converters.ArffLoader$ArffReader",
285:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
286:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
287:       "weka.core.neighboursearch.balltrees.BallSplitter",
288:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
289:       "weka.classifiers.functions.SimpleLogistic",
290:       "weka.classifiers.functions.supportVector.StringKernel",
291:       "weka.classifiers.functions.SMOreg",
292:       "weka.classifiers.functions.supportVector.RegOptimizer",
293:       "weka.classifiers.functions.supportVector.RegSMO",
294:       "weka.classifiers.functions.supportVector.RegSMOImproved",
295:       "weka.classifiers.functions.supportVector.CachedKernel",
296:       "weka.classifiers.functions.supportVector.PolyKernel",
297:       "weka.classifiers.trees.J48",
298:       "weka.classifiers.trees.j48.ClassifierTree",
299:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
300:       "weka.classifiers.MultipleClassifiersCombiner",
301:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
302:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
303:       "weka.classifiers.meta.Stacking",
304:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
305:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
306:       "weka.classifiers.meta.CostSensitiveClassifier",
307:       "weka.classifiers.CostMatrix",
308:       "weka.core.stemmers.Stemming",
309:       "weka.classifiers.bayes.NaiveBayes",
310:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
311:       "weka.classifiers.meta.Vote",
312:       "weka.classifiers.rules.PART",
313:       "weka.classifiers.rules.part.MakeDecList",
314:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
315:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
316:       "weka.classifiers.meta.CVParameterSelection",
317:       "weka.core.FastVector",
318:       "weka.classifiers.bayes.NaiveBayesMultinomial",
319:       "weka.classifiers.lazy.LWL",
320:       "weka.classifiers.trees.DecisionStump",
321:       "weka.classifiers.rules.JRip",
322:       "weka.core.tokenizers.NGramTokenizer",
323:       "weka.classifiers.IteratedSingleClassifierEnhancer",
324:       "weka.classifiers.meta.AdditiveRegression",
325:       "weka.core.UnsupportedAttributeTypeException",
326:       "weka.classifiers.meta.AttributeSelectedClassifier",
327:       "weka.attributeSelection.CfsSubsetEval",
328:       "weka.attributeSelection.ASSearch",
329:       "weka.attributeSelection.BestFirst",
330:       "weka.filters.AllFilter",
331:       "weka.classifiers.functions.supportVector.RBFKernel",
332:       "weka.core.TechnicalInformation",
333:       "weka.core.TechnicalInformation$Type",
334:       "weka.core.TechnicalInformation$Field",
335:       "weka.classifiers.functions.SGD",
336:       "weka.attributeSelection.GainRatioAttributeEval",
337:       "weka.classifiers.trees.LMT",
338:       "weka.attributeSelection.WrapperSubsetEval",
339:       "weka.estimators.Estimator",
340:       "weka.estimators.PoissonEstimator",
341:       "weka.core.UnassignedClassException",
342:       "weka.classifiers.functions.SMO",
343:       "weka.core.neighboursearch.BallTree",
344:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
345:       "weka.classifiers.meta.LogitBoost",
346:       "weka.classifiers.functions.VotedPerceptron",
347:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
348:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.meta.RandomCommittee",
350:       "weka.classifiers.trees.RandomTree",
351:       "weka.classifiers.rules.OneR",
352:       "weka.attributeSelection.InfoGainAttributeEval",
353:       "weka.classifiers.trees.REPTree",
354:       "weka.classifiers.meta.FilteredClassifier",
355:       "weka.filters.supervised.attribute.AttributeSelection",
356:       "weka.attributeSelection.AttributeSelection",
357:       "weka.attributeSelection.GreedyStepwise",
358:       "weka.classifiers.meta.MultiClassClassifier",
359:       "weka.classifiers.functions.Logistic",
360:       "weka.classifiers.functions.MultilayerPerceptron",
361:       "weka.filters.unsupervised.attribute.NominalToBinary",
362:       "weka.classifiers.functions.neural.SigmoidUnit",
363:       "weka.classifiers.functions.neural.LinearUnit",
364:       "weka.filters.SimpleFilter",
365:       "weka.filters.SimpleStreamFilter",
366:       "weka.filters.MultiFilter",
367:       "weka.estimators.DiscreteEstimator",
368:       "weka.attributeSelection.ReliefFAttributeEval",
369:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
370:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
371:       "weka.core.matrix.Matrix",
372:       "weka.classifiers.functions.GaussianProcesses",
373:       "weka.classifiers.trees.m5.RuleNode",
374:       "weka.classifiers.meta.RegressionByDiscretization",
375:       "weka.filters.unsupervised.attribute.Discretize",
376:       "weka.classifiers.trees.m5.M5Base",
377:       "weka.classifiers.rules.M5Rules",
378:       "weka.classifiers.functions.LinearRegression",
379:       "weka.classifiers.meta.ClassificationViaRegression",
380:       "weka.classifiers.trees.M5P",
381:       "weka.attributeSelection.CorrelationAttributeEval",
382:       "weka.classifiers.meta.AdaBoostM1",
383:       "weka.core.AttributeStats",
384:       "weka.classifiers.functions.SimpleLinearRegression",
385:       "weka.classifiers.meta.RandomSubSpace",
386:       "weka.estimators.NormalEstimator",
387:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
390:       "weka.core.Queue",
391:       "weka.core.AttributeLocator",
392:       "weka.core.StringLocator",
393:       "weka.core.RelationalLocator",
394:       "weka.core.ContingencyTables",
395:       "weka.core.Queue$QueueNode",
396:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
397:       "weka.classifiers.bayes.NaiveBayesUpdateable",
398:       "weka.attributeSelection.OneRAttributeEval",
399:       "weka.classifiers.meta.MultiScheme",
400:       "weka.classifiers.lazy.KStar",
401:       "weka.classifiers.meta.Bagging",
402:       "weka.classifiers.trees.RandomForest",
403:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
404:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
405:       "weka.classifiers.functions.supportVector.Puk",
406:       "weka.estimators.MahalanobisEstimator",
407:       "weka.classifiers.functions.neural.NeuralConnection",
408:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
409:       "weka.core.Javadoc",
410:       "weka.core.TechnicalInformationHandlerJavadoc"
411:     );
412:   }
413: }

[MASTER] 14:40:23.445 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling.shouldAllThrowIOExceptions();
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
SnowballStemmer snowballStemmer0 = new SnowballStemmer("X");
naiveBayesMultinomialText0.setStemmer(snowballStemmer0);
String[] stringArray0 = new String[2];
stringArray0[0] = "-stemmer";
stringArray0[1] = "-stemmer";
naiveBayesMultinomialText0.setOptions(stringArray0);

[MASTER] 14:40:23.605 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_21_1575643223573/weka/classifiers/bayes/NaiveBayesMultinomialText_21_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_21_1575643223573/weka/classifiers/bayes/NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding.java]]
[MASTER] 14:40:23.605 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:40:23.605 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:40:23.605 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 14:40:23.606 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 14:40:23.606 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_21_1575643223573/weka/classifiers/bayes/NaiveBayesMultinomialText_21_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 14:40:23 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.DenseInstance;
17: import weka.core.Instances;
18: import weka.core.TestInstances;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_21_tmp__ESTest extends NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=0.42857142857142855
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
31:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
32:       TestInstances testInstances0 = new TestInstances();
33:       Instances instances0 = naiveBayesMultinomialText0.m_data;
34:       naiveBayesMultinomialText0.m_lnorm = (double) (-1);
35:       testInstances0.setRelationalClassFormat((Instances) null);
36:       DenseInstance denseInstance0 = new DenseInstance(2827);
37:       try { 
38:         naiveBayesMultinomialText0.distributionForInstance(denseInstance0);
39:         fail("Expecting exception: RuntimeException");
40:       
41:       } catch(RuntimeException e) {
42:          //
43:          // DenseInstance doesn't have access to a dataset!
44:          //
45:          verifyException("weka.core.AbstractInstance", e);
46:       }
47:   }
48: }
RegularFileObject[/tmp/EvoSuite_21_1575643223573/weka/classifiers/bayes/NaiveBayesMultinomialText_21_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 14:40:23 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.CostMatrix",
95:       "weka.core.neighboursearch.BallTree",
96:       "weka.core.logging.Logger$Level",
97:       "weka.core.neighboursearch.CoverTree$DistanceNode",
98:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.core.neighboursearch.CoverTree$MyHeap",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
123:       "weka.core.BinarySparseInstance",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.neighboursearch.balltrees.BallNode",
129:       "weka.core.AdditionalMeasureProducer",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.CapabilitiesHandler",
134:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
135:       "weka.core.AbstractInstance",
136:       "weka.core.scripting.JythonObject",
137:       "weka.core.SelectedTag",
138:       "org.pentaho.packageManagement.DefaultPackage",
139:       "weka.core.neighboursearch.balltrees.BallSplitter",
140:       "weka.core.Version",
141:       "weka.core.Tag",
142:       "weka.core.neighboursearch.CoverTree",
143:       "weka.classifiers.AbstractClassifier",
144:       "weka.core.OptionHandler",
145:       "weka.core.WekaException",
146:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
147:       "weka.core.Range",
148:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
149:       "weka.core.scripting.JythonSerializableObject",
150:       "weka.classifiers.Classifier",
151:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
152:       "weka.core.Capabilities$Capability",
153:       "weka.core.SparseInstance",
154:       "org.pentaho.packageManagement.PackageManager",
155:       "weka.estimators.PoissonEstimator",
156:       "weka.core.WekaEnumeration",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.classifiers.misc.SerializedClassifier",
159:       "weka.core.stemmers.SnowballStemmer",
160:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
161:       "weka.core.stemmers.LovinsStemmer",
162:       "weka.classifiers.Evaluation",
163:       "weka.classifiers.functions.supportVector.Kernel",
164:       "weka.core.WekaPackageManager",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.neighboursearch.LinearNNSearch",
167:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
168:       "weka.core.Option",
169:       "weka.classifiers.meta.CostSensitiveClassifier",
170:       "weka.core.neighboursearch.PerformanceStats",
171:       "weka.core.Attribute",
172:       "weka.core.Stopwords",
173:       "weka.core.FastVector",
174:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
175:       "weka.core.UnassignedDatasetException",
176:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
177:       "weka.classifiers.RandomizableClassifier",
178:       "weka.classifiers.SingleClassifierEnhancer",
179:       "weka.core.RevisionUtils",
180:       "weka.core.Instance",
181:       "weka.estimators.Estimator",
182:       "weka.core.ProtectedProperties",
183:       "weka.core.AttributeStats",
184:       "weka.core.WeightedInstancesHandler",
185:       "weka.core.neighboursearch.NearestNeighbourSearch",
186:       "weka.core.neighboursearch.covertrees.Stack",
187:       "weka.core.Randomizable",
188:       "weka.core.EuclideanDistance",
189:       "weka.core.Instances",
190:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
191:       "weka.core.UnassignedClassException",
192:       "weka.classifiers.rules.ZeroR",
193:       "weka.core.stemmers.IteratedLovinsStemmer",
194:       "weka.core.TechnicalInformation",
195:       "weka.core.UnsupportedAttributeTypeException",
196:       "weka.classifiers.Sourcable",
197:       "weka.core.RevisionHandler",
198:       "weka.classifiers.evaluation.output.prediction.PlainText",
199:       "weka.core.neighboursearch.TreePerformanceStats",
200:       "weka.core.xml.XMLSerialization",
201:       "weka.classifiers.xml.XMLClassifier"
202:     );
203:   } 
204: 
205:   private static void resetClasses() {
206:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding.class.getClassLoader()); 
207: 
208:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
209:       "weka.classifiers.AbstractClassifier",
210:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
211:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
212:       "weka.core.Capabilities$Capability",
213:       "weka.core.tokenizers.Tokenizer",
214:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
215:       "weka.core.tokenizers.WordTokenizer",
216:       "weka.core.stemmers.NullStemmer",
217:       "weka.core.Option",
218:       "weka.core.AbstractInstance",
219:       "weka.core.SparseInstance",
220:       "weka.core.Utils",
221:       "weka.core.UnassignedDatasetException",
222:       "weka.core.TestInstances",
223:       "weka.core.Attribute",
224:       "weka.core.ProtectedProperties",
225:       "weka.core.Instances",
226:       "weka.core.DenseInstance",
227:       "weka.classifiers.bayes.BayesNet",
228:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
229:       "weka.core.Tag",
230:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
231:       "weka.classifiers.bayes.net.search.local.K2",
232:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
233:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
234:       "weka.core.neighboursearch.balltrees.BallNode",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.classifiers.functions.SGDText",
237:       "weka.classifiers.Evaluation",
238:       "weka.core.BinarySparseInstance",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.FindWithCapabilities",
246:       "weka.core.SingleIndex",
247:       "weka.core.ClassDiscovery",
248:       "weka.core.SerializedObject",
249:       "weka.core.stemmers.SnowballStemmer",
250:       "weka.core.tokenizers.AlphabeticTokenizer",
251:       "weka.classifiers.misc.SerializedClassifier",
252:       "weka.attributeSelection.ASEvaluation",
253:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
254:       "weka.attributeSelection.PrincipalComponents",
255:       "weka.filters.Filter",
256:       "weka.filters.supervised.attribute.Discretize",
257:       "weka.core.Range",
258:       "weka.core.stemmers.LovinsStemmer",
259:       "weka.core.stemmers.IteratedLovinsStemmer",
260:       "weka.core.Stopwords",
261:       "weka.core.RevisionUtils",
262:       "weka.core.neighboursearch.NearestNeighbourSearch",
263:       "weka.core.neighboursearch.KDTree",
264:       "weka.core.NormalizableDistance",
265:       "weka.core.EuclideanDistance",
266:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
267:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
268:       "weka.core.neighboursearch.CoverTree",
269:       "weka.core.WekaEnumeration",
270:       "weka.core.Attribute$1",
271:       "weka.classifiers.lazy.IBk",
272:       "weka.core.neighboursearch.LinearNNSearch",
273:       "weka.classifiers.functions.supportVector.Kernel",
274:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
275:       "weka.core.WekaException",
276:       "weka.classifiers.SingleClassifierEnhancer",
277:       "weka.classifiers.misc.InputMappedClassifier",
278:       "weka.classifiers.rules.ZeroR",
279:       "weka.classifiers.bayes.net.BIFReader",
280:       "weka.core.converters.ConverterUtils$DataSource",
281:       "weka.core.converters.AbstractLoader",
282:       "weka.core.converters.AbstractFileLoader",
283:       "weka.core.converters.ArffLoader",
284:       "weka.core.converters.ArffLoader$ArffReader",
285:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
286:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
287:       "weka.core.neighboursearch.balltrees.BallSplitter",
288:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
289:       "weka.classifiers.functions.SimpleLogistic",
290:       "weka.classifiers.functions.supportVector.StringKernel",
291:       "weka.classifiers.functions.SMOreg",
292:       "weka.classifiers.functions.supportVector.RegOptimizer",
293:       "weka.classifiers.functions.supportVector.RegSMO",
294:       "weka.classifiers.functions.supportVector.RegSMOImproved",
295:       "weka.classifiers.functions.supportVector.CachedKernel",
296:       "weka.classifiers.functions.supportVector.PolyKernel",
297:       "weka.classifiers.trees.J48",
298:       "weka.classifiers.trees.j48.ClassifierTree",
299:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
300:       "weka.classifiers.MultipleClassifiersCombiner",
301:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
302:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
303:       "weka.classifiers.meta.Stacking",
304:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
305:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
306:       "weka.classifiers.meta.CostSensitiveClassifier",
307:       "weka.classifiers.CostMatrix",
308:       "weka.core.stemmers.Stemming",
309:       "weka.classifiers.bayes.NaiveBayes",
310:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
311:       "weka.classifiers.meta.Vote",
312:       "weka.classifiers.rules.PART",
313:       "weka.classifiers.rules.part.MakeDecList",
314:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
315:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
316:       "weka.classifiers.meta.CVParameterSelection",
317:       "weka.core.FastVector",
318:       "weka.classifiers.bayes.NaiveBayesMultinomial",
319:       "weka.classifiers.lazy.LWL",
320:       "weka.classifiers.trees.DecisionStump",
321:       "weka.classifiers.rules.JRip",
322:       "weka.core.tokenizers.NGramTokenizer",
323:       "weka.classifiers.IteratedSingleClassifierEnhancer",
324:       "weka.classifiers.meta.AdditiveRegression",
325:       "weka.core.UnsupportedAttributeTypeException",
326:       "weka.classifiers.meta.AttributeSelectedClassifier",
327:       "weka.attributeSelection.CfsSubsetEval",
328:       "weka.attributeSelection.ASSearch",
329:       "weka.attributeSelection.BestFirst",
330:       "weka.filters.AllFilter",
331:       "weka.classifiers.functions.supportVector.RBFKernel",
332:       "weka.core.TechnicalInformation",
333:       "weka.core.TechnicalInformation$Type",
334:       "weka.core.TechnicalInformation$Field",
335:       "weka.classifiers.functions.SGD",
336:       "weka.attributeSelection.GainRatioAttributeEval",
337:       "weka.classifiers.trees.LMT",
338:       "weka.attributeSelection.WrapperSubsetEval",
339:       "weka.estimators.Estimator",
340:       "weka.estimators.PoissonEstimator",
341:       "weka.core.UnassignedClassException",
342:       "weka.classifiers.functions.SMO",
343:       "weka.core.neighboursearch.BallTree",
344:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
345:       "weka.classifiers.meta.LogitBoost",
346:       "weka.classifiers.functions.VotedPerceptron",
347:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
348:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.meta.RandomCommittee",
350:       "weka.classifiers.trees.RandomTree",
351:       "weka.classifiers.rules.OneR",
352:       "weka.attributeSelection.InfoGainAttributeEval",
353:       "weka.classifiers.trees.REPTree",
354:       "weka.classifiers.meta.FilteredClassifier",
355:       "weka.filters.supervised.attribute.AttributeSelection",
356:       "weka.attributeSelection.AttributeSelection",
357:       "weka.attributeSelection.GreedyStepwise",
358:       "weka.classifiers.meta.MultiClassClassifier",
359:       "weka.classifiers.functions.Logistic",
360:       "weka.classifiers.functions.MultilayerPerceptron",
361:       "weka.filters.unsupervised.attribute.NominalToBinary",
362:       "weka.classifiers.functions.neural.SigmoidUnit",
363:       "weka.classifiers.functions.neural.LinearUnit",
364:       "weka.filters.SimpleFilter",
365:       "weka.filters.SimpleStreamFilter",
366:       "weka.filters.MultiFilter",
367:       "weka.estimators.DiscreteEstimator",
368:       "weka.attributeSelection.ReliefFAttributeEval",
369:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
370:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
371:       "weka.core.matrix.Matrix",
372:       "weka.classifiers.functions.GaussianProcesses",
373:       "weka.classifiers.trees.m5.RuleNode",
374:       "weka.classifiers.meta.RegressionByDiscretization",
375:       "weka.filters.unsupervised.attribute.Discretize",
376:       "weka.classifiers.trees.m5.M5Base",
377:       "weka.classifiers.rules.M5Rules",
378:       "weka.classifiers.functions.LinearRegression",
379:       "weka.classifiers.meta.ClassificationViaRegression",
380:       "weka.classifiers.trees.M5P",
381:       "weka.attributeSelection.CorrelationAttributeEval",
382:       "weka.classifiers.meta.AdaBoostM1",
383:       "weka.core.AttributeStats",
384:       "weka.classifiers.functions.SimpleLinearRegression",
385:       "weka.classifiers.meta.RandomSubSpace",
386:       "weka.estimators.NormalEstimator",
387:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
390:       "weka.core.Queue",
391:       "weka.core.AttributeLocator",
392:       "weka.core.StringLocator",
393:       "weka.core.RelationalLocator",
394:       "weka.core.ContingencyTables",
395:       "weka.core.Queue$QueueNode",
396:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
397:       "weka.classifiers.bayes.NaiveBayesUpdateable",
398:       "weka.attributeSelection.OneRAttributeEval",
399:       "weka.classifiers.meta.MultiScheme",
400:       "weka.classifiers.lazy.KStar",
401:       "weka.classifiers.meta.Bagging",
402:       "weka.classifiers.trees.RandomForest",
403:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
404:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
405:       "weka.classifiers.functions.supportVector.Puk",
406:       "weka.estimators.MahalanobisEstimator",
407:       "weka.classifiers.functions.neural.NeuralConnection",
408:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
409:       "weka.core.Javadoc",
410:       "weka.core.TechnicalInformationHandlerJavadoc"
411:     );
412:   }
413: }

[MASTER] 14:40:23.607 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
TestInstances testInstances0 = new TestInstances();
Instances instances0 = naiveBayesMultinomialText0.m_data;
naiveBayesMultinomialText0.m_lnorm = (double) (-1);
testInstances0.setRelationalClassFormat((Instances) null);
DenseInstance denseInstance0 = new DenseInstance(2827);
naiveBayesMultinomialText0.distributionForInstance(denseInstance0);

[MASTER] 14:40:23.762 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_25_1575643223720/weka/classifiers/bayes/NaiveBayesMultinomialText_25_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_25_1575643223720/weka/classifiers/bayes/NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding.java]]
[MASTER] 14:40:23.762 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:40:23.762 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:40:23.762 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 14:40:23.762 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 14:40:23.763 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_25_1575643223720/weka/classifiers/bayes/NaiveBayesMultinomialText_25_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 14:40:23 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.core.Instances;
16: import weka.core.TestInstances;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_25_tmp__ESTest extends NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=1.8833357812382339
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
29:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
30:       naiveBayesMultinomialText0.m_norm = 9.999999998111776E9;
31:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
32:       
33:       TestInstances testInstances0 = new TestInstances();
34:       Instances instances0 = testInstances0.generate();
35:       int[] intArray0 = new int[6];
36:       naiveBayesMultinomialText0.m_lnorm = (double) (-1);
37:       intArray0[1] = (-2);
38:       intArray0[2] = (-2);
39:       intArray0[2] = (-2);
40:       boolean boolean0 = naiveBayesMultinomialText0.m_wordFrequencies;
41:       testInstances0.generate();
42:       naiveBayesMultinomialText0.buildClassifier(instances0);
43:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
44:   }
45: }
RegularFileObject[/tmp/EvoSuite_25_1575643223720/weka/classifiers/bayes/NaiveBayesMultinomialText_25_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 14:40:23 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.CostMatrix",
95:       "weka.core.neighboursearch.BallTree",
96:       "weka.core.logging.Logger$Level",
97:       "weka.core.neighboursearch.CoverTree$DistanceNode",
98:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.core.neighboursearch.CoverTree$MyHeap",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
123:       "weka.core.BinarySparseInstance",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.neighboursearch.balltrees.BallNode",
129:       "weka.core.AdditionalMeasureProducer",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.CapabilitiesHandler",
134:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
135:       "weka.core.AbstractInstance",
136:       "weka.core.scripting.JythonObject",
137:       "weka.core.SelectedTag",
138:       "org.pentaho.packageManagement.DefaultPackage",
139:       "weka.core.neighboursearch.balltrees.BallSplitter",
140:       "weka.core.Version",
141:       "weka.core.Tag",
142:       "weka.core.neighboursearch.CoverTree",
143:       "weka.classifiers.AbstractClassifier",
144:       "weka.core.OptionHandler",
145:       "weka.core.WekaException",
146:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
147:       "weka.core.Range",
148:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
149:       "weka.core.scripting.JythonSerializableObject",
150:       "weka.classifiers.Classifier",
151:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
152:       "weka.core.Capabilities$Capability",
153:       "weka.core.SparseInstance",
154:       "org.pentaho.packageManagement.PackageManager",
155:       "weka.estimators.PoissonEstimator",
156:       "weka.core.WekaEnumeration",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.classifiers.misc.SerializedClassifier",
159:       "weka.core.stemmers.SnowballStemmer",
160:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
161:       "weka.core.stemmers.LovinsStemmer",
162:       "weka.classifiers.Evaluation",
163:       "weka.classifiers.functions.supportVector.Kernel",
164:       "weka.core.WekaPackageManager",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.neighboursearch.LinearNNSearch",
167:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
168:       "weka.core.Option",
169:       "weka.classifiers.meta.CostSensitiveClassifier",
170:       "weka.core.neighboursearch.PerformanceStats",
171:       "weka.core.Attribute",
172:       "weka.core.Stopwords",
173:       "weka.core.FastVector",
174:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
175:       "weka.core.UnassignedDatasetException",
176:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
177:       "weka.classifiers.RandomizableClassifier",
178:       "weka.classifiers.SingleClassifierEnhancer",
179:       "weka.core.RevisionUtils",
180:       "weka.core.Instance",
181:       "weka.estimators.Estimator",
182:       "weka.core.ProtectedProperties",
183:       "weka.core.AttributeStats",
184:       "weka.core.WeightedInstancesHandler",
185:       "weka.core.neighboursearch.NearestNeighbourSearch",
186:       "weka.core.neighboursearch.covertrees.Stack",
187:       "weka.core.Randomizable",
188:       "weka.core.EuclideanDistance",
189:       "weka.core.Instances",
190:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
191:       "weka.core.UnassignedClassException",
192:       "weka.classifiers.rules.ZeroR",
193:       "weka.core.stemmers.IteratedLovinsStemmer",
194:       "weka.core.TechnicalInformation",
195:       "weka.core.UnsupportedAttributeTypeException",
196:       "weka.classifiers.Sourcable",
197:       "weka.core.RevisionHandler",
198:       "weka.classifiers.evaluation.output.prediction.PlainText",
199:       "weka.core.neighboursearch.TreePerformanceStats",
200:       "weka.core.xml.XMLSerialization",
201:       "weka.classifiers.xml.XMLClassifier"
202:     );
203:   } 
204: 
205:   private static void resetClasses() {
206:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding.class.getClassLoader()); 
207: 
208:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
209:       "weka.classifiers.AbstractClassifier",
210:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
211:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
212:       "weka.core.Capabilities$Capability",
213:       "weka.core.tokenizers.Tokenizer",
214:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
215:       "weka.core.tokenizers.WordTokenizer",
216:       "weka.core.stemmers.NullStemmer",
217:       "weka.core.Option",
218:       "weka.core.AbstractInstance",
219:       "weka.core.SparseInstance",
220:       "weka.core.Utils",
221:       "weka.core.UnassignedDatasetException",
222:       "weka.core.TestInstances",
223:       "weka.core.Attribute",
224:       "weka.core.ProtectedProperties",
225:       "weka.core.Instances",
226:       "weka.core.DenseInstance",
227:       "weka.classifiers.bayes.BayesNet",
228:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
229:       "weka.core.Tag",
230:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
231:       "weka.classifiers.bayes.net.search.local.K2",
232:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
233:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
234:       "weka.core.neighboursearch.balltrees.BallNode",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.classifiers.functions.SGDText",
237:       "weka.classifiers.Evaluation",
238:       "weka.core.BinarySparseInstance",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.FindWithCapabilities",
246:       "weka.core.SingleIndex",
247:       "weka.core.ClassDiscovery",
248:       "weka.core.SerializedObject",
249:       "weka.core.stemmers.SnowballStemmer",
250:       "weka.core.tokenizers.AlphabeticTokenizer",
251:       "weka.classifiers.misc.SerializedClassifier",
252:       "weka.attributeSelection.ASEvaluation",
253:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
254:       "weka.attributeSelection.PrincipalComponents",
255:       "weka.filters.Filter",
256:       "weka.filters.supervised.attribute.Discretize",
257:       "weka.core.Range",
258:       "weka.core.stemmers.LovinsStemmer",
259:       "weka.core.stemmers.IteratedLovinsStemmer",
260:       "weka.core.Stopwords",
261:       "weka.core.RevisionUtils",
262:       "weka.core.neighboursearch.NearestNeighbourSearch",
263:       "weka.core.neighboursearch.KDTree",
264:       "weka.core.NormalizableDistance",
265:       "weka.core.EuclideanDistance",
266:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
267:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
268:       "weka.core.neighboursearch.CoverTree",
269:       "weka.core.WekaEnumeration",
270:       "weka.core.Attribute$1",
271:       "weka.classifiers.lazy.IBk",
272:       "weka.core.neighboursearch.LinearNNSearch",
273:       "weka.classifiers.functions.supportVector.Kernel",
274:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
275:       "weka.core.WekaException",
276:       "weka.classifiers.SingleClassifierEnhancer",
277:       "weka.classifiers.misc.InputMappedClassifier",
278:       "weka.classifiers.rules.ZeroR",
279:       "weka.classifiers.bayes.net.BIFReader",
280:       "weka.core.converters.ConverterUtils$DataSource",
281:       "weka.core.converters.AbstractLoader",
282:       "weka.core.converters.AbstractFileLoader",
283:       "weka.core.converters.ArffLoader",
284:       "weka.core.converters.ArffLoader$ArffReader",
285:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
286:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
287:       "weka.core.neighboursearch.balltrees.BallSplitter",
288:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
289:       "weka.classifiers.functions.SimpleLogistic",
290:       "weka.classifiers.functions.supportVector.StringKernel",
291:       "weka.classifiers.functions.SMOreg",
292:       "weka.classifiers.functions.supportVector.RegOptimizer",
293:       "weka.classifiers.functions.supportVector.RegSMO",
294:       "weka.classifiers.functions.supportVector.RegSMOImproved",
295:       "weka.classifiers.functions.supportVector.CachedKernel",
296:       "weka.classifiers.functions.supportVector.PolyKernel",
297:       "weka.classifiers.trees.J48",
298:       "weka.classifiers.trees.j48.ClassifierTree",
299:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
300:       "weka.classifiers.MultipleClassifiersCombiner",
301:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
302:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
303:       "weka.classifiers.meta.Stacking",
304:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
305:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
306:       "weka.classifiers.meta.CostSensitiveClassifier",
307:       "weka.classifiers.CostMatrix",
308:       "weka.core.stemmers.Stemming",
309:       "weka.classifiers.bayes.NaiveBayes",
310:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
311:       "weka.classifiers.meta.Vote",
312:       "weka.classifiers.rules.PART",
313:       "weka.classifiers.rules.part.MakeDecList",
314:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
315:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
316:       "weka.classifiers.meta.CVParameterSelection",
317:       "weka.core.FastVector",
318:       "weka.classifiers.bayes.NaiveBayesMultinomial",
319:       "weka.classifiers.lazy.LWL",
320:       "weka.classifiers.trees.DecisionStump",
321:       "weka.classifiers.rules.JRip",
322:       "weka.core.tokenizers.NGramTokenizer",
323:       "weka.classifiers.IteratedSingleClassifierEnhancer",
324:       "weka.classifiers.meta.AdditiveRegression",
325:       "weka.core.UnsupportedAttributeTypeException",
326:       "weka.classifiers.meta.AttributeSelectedClassifier",
327:       "weka.attributeSelection.CfsSubsetEval",
328:       "weka.attributeSelection.ASSearch",
329:       "weka.attributeSelection.BestFirst",
330:       "weka.filters.AllFilter",
331:       "weka.classifiers.functions.supportVector.RBFKernel",
332:       "weka.core.TechnicalInformation",
333:       "weka.core.TechnicalInformation$Type",
334:       "weka.core.TechnicalInformation$Field",
335:       "weka.classifiers.functions.SGD",
336:       "weka.attributeSelection.GainRatioAttributeEval",
337:       "weka.classifiers.trees.LMT",
338:       "weka.attributeSelection.WrapperSubsetEval",
339:       "weka.estimators.Estimator",
340:       "weka.estimators.PoissonEstimator",
341:       "weka.core.UnassignedClassException",
342:       "weka.classifiers.functions.SMO",
343:       "weka.core.neighboursearch.BallTree",
344:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
345:       "weka.classifiers.meta.LogitBoost",
346:       "weka.classifiers.functions.VotedPerceptron",
347:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
348:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.meta.RandomCommittee",
350:       "weka.classifiers.trees.RandomTree",
351:       "weka.classifiers.rules.OneR",
352:       "weka.attributeSelection.InfoGainAttributeEval",
353:       "weka.classifiers.trees.REPTree",
354:       "weka.classifiers.meta.FilteredClassifier",
355:       "weka.filters.supervised.attribute.AttributeSelection",
356:       "weka.attributeSelection.AttributeSelection",
357:       "weka.attributeSelection.GreedyStepwise",
358:       "weka.classifiers.meta.MultiClassClassifier",
359:       "weka.classifiers.functions.Logistic",
360:       "weka.classifiers.functions.MultilayerPerceptron",
361:       "weka.filters.unsupervised.attribute.NominalToBinary",
362:       "weka.classifiers.functions.neural.SigmoidUnit",
363:       "weka.classifiers.functions.neural.LinearUnit",
364:       "weka.filters.SimpleFilter",
365:       "weka.filters.SimpleStreamFilter",
366:       "weka.filters.MultiFilter",
367:       "weka.estimators.DiscreteEstimator",
368:       "weka.attributeSelection.ReliefFAttributeEval",
369:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
370:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
371:       "weka.core.matrix.Matrix",
372:       "weka.classifiers.functions.GaussianProcesses",
373:       "weka.classifiers.trees.m5.RuleNode",
374:       "weka.classifiers.meta.RegressionByDiscretization",
375:       "weka.filters.unsupervised.attribute.Discretize",
376:       "weka.classifiers.trees.m5.M5Base",
377:       "weka.classifiers.rules.M5Rules",
378:       "weka.classifiers.functions.LinearRegression",
379:       "weka.classifiers.meta.ClassificationViaRegression",
380:       "weka.classifiers.trees.M5P",
381:       "weka.attributeSelection.CorrelationAttributeEval",
382:       "weka.classifiers.meta.AdaBoostM1",
383:       "weka.core.AttributeStats",
384:       "weka.classifiers.functions.SimpleLinearRegression",
385:       "weka.classifiers.meta.RandomSubSpace",
386:       "weka.estimators.NormalEstimator",
387:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
390:       "weka.core.Queue",
391:       "weka.core.AttributeLocator",
392:       "weka.core.StringLocator",
393:       "weka.core.RelationalLocator",
394:       "weka.core.ContingencyTables",
395:       "weka.core.Queue$QueueNode",
396:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
397:       "weka.classifiers.bayes.NaiveBayesUpdateable",
398:       "weka.attributeSelection.OneRAttributeEval",
399:       "weka.classifiers.meta.MultiScheme",
400:       "weka.classifiers.lazy.KStar",
401:       "weka.classifiers.meta.Bagging",
402:       "weka.classifiers.trees.RandomForest",
403:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
404:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
405:       "weka.classifiers.functions.supportVector.Puk",
406:       "weka.estimators.MahalanobisEstimator",
407:       "weka.classifiers.functions.neural.NeuralConnection",
408:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
409:       "weka.core.Javadoc",
410:       "weka.core.TechnicalInformationHandlerJavadoc"
411:     );
412:   }
413: }

[MASTER] 14:40:23.763 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.m_norm = 9.999999998111776E9;
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);

TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate();
int[] intArray0 = new int[6];
naiveBayesMultinomialText0.m_lnorm = (double) (-1);
intArray0[1] = (-2);
intArray0[2] = (-2);
intArray0[2] = (-2);
boolean boolean0 = naiveBayesMultinomialText0.m_wordFrequencies;
testInstances0.generate();
naiveBayesMultinomialText0.buildClassifier(instances0);
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);


[MASTER] 14:40:23.794 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_26_1575643223764/weka/classifiers/bayes/NaiveBayesMultinomialText_26_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_26_1575643223764/weka/classifiers/bayes/NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding.java]]
[MASTER] 14:40:23.794 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:40:23.794 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:40:23.795 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 14:40:23.795 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 14:40:23.795 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_26_1575643223764/weka/classifiers/bayes/NaiveBayesMultinomialText_26_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 14:40:23 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.BinarySparseInstance;
17: import weka.core.TestInstances;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_26_tmp__ESTest extends NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=0.42857142857142855
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
30:       TestInstances testInstances0 = new TestInstances();
31:       int[] intArray0 = new int[6];
32:       naiveBayesMultinomialText0.m_lnorm = (double) (-1);
33:       intArray0[4] = (-1);
34:       naiveBayesMultinomialText0.m_periodicP = (-2);
35:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-1), intArray0, (-1));
36:       try { 
37:         naiveBayesMultinomialText0.distributionForInstance(binarySparseInstance0);
38:         fail("Expecting exception: NullPointerException");
39:       
40:       } catch(NullPointerException e) {
41:          //
42:          // no message in exception (getMessage() returned null)
43:          //
44:          verifyException("weka.classifiers.bayes.NaiveBayesMultinomialText", e);
45:       }
46:   }
47: }
RegularFileObject[/tmp/EvoSuite_26_1575643223764/weka/classifiers/bayes/NaiveBayesMultinomialText_26_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 14:40:23 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.CostMatrix",
95:       "weka.core.neighboursearch.BallTree",
96:       "weka.core.logging.Logger$Level",
97:       "weka.core.neighboursearch.CoverTree$DistanceNode",
98:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.core.neighboursearch.CoverTree$MyHeap",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
123:       "weka.core.BinarySparseInstance",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.neighboursearch.balltrees.BallNode",
129:       "weka.core.AdditionalMeasureProducer",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.CapabilitiesHandler",
134:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
135:       "weka.core.AbstractInstance",
136:       "weka.core.scripting.JythonObject",
137:       "weka.core.SelectedTag",
138:       "org.pentaho.packageManagement.DefaultPackage",
139:       "weka.core.neighboursearch.balltrees.BallSplitter",
140:       "weka.core.Version",
141:       "weka.core.Tag",
142:       "weka.core.neighboursearch.CoverTree",
143:       "weka.classifiers.AbstractClassifier",
144:       "weka.core.OptionHandler",
145:       "weka.core.WekaException",
146:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
147:       "weka.core.Range",
148:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
149:       "weka.core.scripting.JythonSerializableObject",
150:       "weka.classifiers.Classifier",
151:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
152:       "weka.core.Capabilities$Capability",
153:       "weka.core.SparseInstance",
154:       "org.pentaho.packageManagement.PackageManager",
155:       "weka.estimators.PoissonEstimator",
156:       "weka.core.WekaEnumeration",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.classifiers.misc.SerializedClassifier",
159:       "weka.core.stemmers.SnowballStemmer",
160:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
161:       "weka.core.stemmers.LovinsStemmer",
162:       "weka.classifiers.Evaluation",
163:       "weka.classifiers.functions.supportVector.Kernel",
164:       "weka.core.WekaPackageManager",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.neighboursearch.LinearNNSearch",
167:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
168:       "weka.core.Option",
169:       "weka.classifiers.meta.CostSensitiveClassifier",
170:       "weka.core.neighboursearch.PerformanceStats",
171:       "weka.core.Attribute",
172:       "weka.core.Stopwords",
173:       "weka.core.FastVector",
174:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
175:       "weka.core.UnassignedDatasetException",
176:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
177:       "weka.classifiers.RandomizableClassifier",
178:       "weka.classifiers.SingleClassifierEnhancer",
179:       "weka.core.RevisionUtils",
180:       "weka.core.Instance",
181:       "weka.estimators.Estimator",
182:       "weka.core.ProtectedProperties",
183:       "weka.core.AttributeStats",
184:       "weka.core.WeightedInstancesHandler",
185:       "weka.core.neighboursearch.NearestNeighbourSearch",
186:       "weka.core.neighboursearch.covertrees.Stack",
187:       "weka.core.Randomizable",
188:       "weka.core.EuclideanDistance",
189:       "weka.core.Instances",
190:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
191:       "weka.core.UnassignedClassException",
192:       "weka.classifiers.rules.ZeroR",
193:       "weka.core.stemmers.IteratedLovinsStemmer",
194:       "weka.core.TechnicalInformation",
195:       "weka.core.UnsupportedAttributeTypeException",
196:       "weka.classifiers.Sourcable",
197:       "weka.core.RevisionHandler",
198:       "weka.classifiers.evaluation.output.prediction.PlainText",
199:       "weka.core.neighboursearch.TreePerformanceStats",
200:       "weka.core.xml.XMLSerialization",
201:       "weka.classifiers.xml.XMLClassifier"
202:     );
203:   } 
204: 
205:   private static void resetClasses() {
206:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding.class.getClassLoader()); 
207: 
208:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
209:       "weka.classifiers.AbstractClassifier",
210:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
211:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
212:       "weka.core.Capabilities$Capability",
213:       "weka.core.tokenizers.Tokenizer",
214:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
215:       "weka.core.tokenizers.WordTokenizer",
216:       "weka.core.stemmers.NullStemmer",
217:       "weka.core.Option",
218:       "weka.core.AbstractInstance",
219:       "weka.core.SparseInstance",
220:       "weka.core.Utils",
221:       "weka.core.UnassignedDatasetException",
222:       "weka.core.TestInstances",
223:       "weka.core.Attribute",
224:       "weka.core.ProtectedProperties",
225:       "weka.core.Instances",
226:       "weka.core.DenseInstance",
227:       "weka.classifiers.bayes.BayesNet",
228:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
229:       "weka.core.Tag",
230:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
231:       "weka.classifiers.bayes.net.search.local.K2",
232:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
233:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
234:       "weka.core.neighboursearch.balltrees.BallNode",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.classifiers.functions.SGDText",
237:       "weka.classifiers.Evaluation",
238:       "weka.core.BinarySparseInstance",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.FindWithCapabilities",
246:       "weka.core.SingleIndex",
247:       "weka.core.ClassDiscovery",
248:       "weka.core.SerializedObject",
249:       "weka.core.stemmers.SnowballStemmer",
250:       "weka.core.tokenizers.AlphabeticTokenizer",
251:       "weka.classifiers.misc.SerializedClassifier",
252:       "weka.attributeSelection.ASEvaluation",
253:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
254:       "weka.attributeSelection.PrincipalComponents",
255:       "weka.filters.Filter",
256:       "weka.filters.supervised.attribute.Discretize",
257:       "weka.core.Range",
258:       "weka.core.stemmers.LovinsStemmer",
259:       "weka.core.stemmers.IteratedLovinsStemmer",
260:       "weka.core.Stopwords",
261:       "weka.core.RevisionUtils",
262:       "weka.core.neighboursearch.NearestNeighbourSearch",
263:       "weka.core.neighboursearch.KDTree",
264:       "weka.core.NormalizableDistance",
265:       "weka.core.EuclideanDistance",
266:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
267:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
268:       "weka.core.neighboursearch.CoverTree",
269:       "weka.core.WekaEnumeration",
270:       "weka.core.Attribute$1",
271:       "weka.classifiers.lazy.IBk",
272:       "weka.core.neighboursearch.LinearNNSearch",
273:       "weka.classifiers.functions.supportVector.Kernel",
274:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
275:       "weka.core.WekaException",
276:       "weka.classifiers.SingleClassifierEnhancer",
277:       "weka.classifiers.misc.InputMappedClassifier",
278:       "weka.classifiers.rules.ZeroR",
279:       "weka.classifiers.bayes.net.BIFReader",
280:       "weka.core.converters.ConverterUtils$DataSource",
281:       "weka.core.converters.AbstractLoader",
282:       "weka.core.converters.AbstractFileLoader",
283:       "weka.core.converters.ArffLoader",
284:       "weka.core.converters.ArffLoader$ArffReader",
285:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
286:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
287:       "weka.core.neighboursearch.balltrees.BallSplitter",
288:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
289:       "weka.classifiers.functions.SimpleLogistic",
290:       "weka.classifiers.functions.supportVector.StringKernel",
291:       "weka.classifiers.functions.SMOreg",
292:       "weka.classifiers.functions.supportVector.RegOptimizer",
293:       "weka.classifiers.functions.supportVector.RegSMO",
294:       "weka.classifiers.functions.supportVector.RegSMOImproved",
295:       "weka.classifiers.functions.supportVector.CachedKernel",
296:       "weka.classifiers.functions.supportVector.PolyKernel",
297:       "weka.classifiers.trees.J48",
298:       "weka.classifiers.trees.j48.ClassifierTree",
299:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
300:       "weka.classifiers.MultipleClassifiersCombiner",
301:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
302:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
303:       "weka.classifiers.meta.Stacking",
304:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
305:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
306:       "weka.classifiers.meta.CostSensitiveClassifier",
307:       "weka.classifiers.CostMatrix",
308:       "weka.core.stemmers.Stemming",
309:       "weka.classifiers.bayes.NaiveBayes",
310:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
311:       "weka.classifiers.meta.Vote",
312:       "weka.classifiers.rules.PART",
313:       "weka.classifiers.rules.part.MakeDecList",
314:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
315:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
316:       "weka.classifiers.meta.CVParameterSelection",
317:       "weka.core.FastVector",
318:       "weka.classifiers.bayes.NaiveBayesMultinomial",
319:       "weka.classifiers.lazy.LWL",
320:       "weka.classifiers.trees.DecisionStump",
321:       "weka.classifiers.rules.JRip",
322:       "weka.core.tokenizers.NGramTokenizer",
323:       "weka.classifiers.IteratedSingleClassifierEnhancer",
324:       "weka.classifiers.meta.AdditiveRegression",
325:       "weka.core.UnsupportedAttributeTypeException",
326:       "weka.classifiers.meta.AttributeSelectedClassifier",
327:       "weka.attributeSelection.CfsSubsetEval",
328:       "weka.attributeSelection.ASSearch",
329:       "weka.attributeSelection.BestFirst",
330:       "weka.filters.AllFilter",
331:       "weka.classifiers.functions.supportVector.RBFKernel",
332:       "weka.core.TechnicalInformation",
333:       "weka.core.TechnicalInformation$Type",
334:       "weka.core.TechnicalInformation$Field",
335:       "weka.classifiers.functions.SGD",
336:       "weka.attributeSelection.GainRatioAttributeEval",
337:       "weka.classifiers.trees.LMT",
338:       "weka.attributeSelection.WrapperSubsetEval",
339:       "weka.estimators.Estimator",
340:       "weka.estimators.PoissonEstimator",
341:       "weka.core.UnassignedClassException",
342:       "weka.classifiers.functions.SMO",
343:       "weka.core.neighboursearch.BallTree",
344:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
345:       "weka.classifiers.meta.LogitBoost",
346:       "weka.classifiers.functions.VotedPerceptron",
347:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
348:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.meta.RandomCommittee",
350:       "weka.classifiers.trees.RandomTree",
351:       "weka.classifiers.rules.OneR",
352:       "weka.attributeSelection.InfoGainAttributeEval",
353:       "weka.classifiers.trees.REPTree",
354:       "weka.classifiers.meta.FilteredClassifier",
355:       "weka.filters.supervised.attribute.AttributeSelection",
356:       "weka.attributeSelection.AttributeSelection",
357:       "weka.attributeSelection.GreedyStepwise",
358:       "weka.classifiers.meta.MultiClassClassifier",
359:       "weka.classifiers.functions.Logistic",
360:       "weka.classifiers.functions.MultilayerPerceptron",
361:       "weka.filters.unsupervised.attribute.NominalToBinary",
362:       "weka.classifiers.functions.neural.SigmoidUnit",
363:       "weka.classifiers.functions.neural.LinearUnit",
364:       "weka.filters.SimpleFilter",
365:       "weka.filters.SimpleStreamFilter",
366:       "weka.filters.MultiFilter",
367:       "weka.estimators.DiscreteEstimator",
368:       "weka.attributeSelection.ReliefFAttributeEval",
369:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
370:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
371:       "weka.core.matrix.Matrix",
372:       "weka.classifiers.functions.GaussianProcesses",
373:       "weka.classifiers.trees.m5.RuleNode",
374:       "weka.classifiers.meta.RegressionByDiscretization",
375:       "weka.filters.unsupervised.attribute.Discretize",
376:       "weka.classifiers.trees.m5.M5Base",
377:       "weka.classifiers.rules.M5Rules",
378:       "weka.classifiers.functions.LinearRegression",
379:       "weka.classifiers.meta.ClassificationViaRegression",
380:       "weka.classifiers.trees.M5P",
381:       "weka.attributeSelection.CorrelationAttributeEval",
382:       "weka.classifiers.meta.AdaBoostM1",
383:       "weka.core.AttributeStats",
384:       "weka.classifiers.functions.SimpleLinearRegression",
385:       "weka.classifiers.meta.RandomSubSpace",
386:       "weka.estimators.NormalEstimator",
387:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
390:       "weka.core.Queue",
391:       "weka.core.AttributeLocator",
392:       "weka.core.StringLocator",
393:       "weka.core.RelationalLocator",
394:       "weka.core.ContingencyTables",
395:       "weka.core.Queue$QueueNode",
396:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
397:       "weka.classifiers.bayes.NaiveBayesUpdateable",
398:       "weka.attributeSelection.OneRAttributeEval",
399:       "weka.classifiers.meta.MultiScheme",
400:       "weka.classifiers.lazy.KStar",
401:       "weka.classifiers.meta.Bagging",
402:       "weka.classifiers.trees.RandomForest",
403:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
404:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
405:       "weka.classifiers.functions.supportVector.Puk",
406:       "weka.estimators.MahalanobisEstimator",
407:       "weka.classifiers.functions.neural.NeuralConnection",
408:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
409:       "weka.core.Javadoc",
410:       "weka.core.TechnicalInformationHandlerJavadoc"
411:     );
412:   }
413: }

[MASTER] 14:40:23.796 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
TestInstances testInstances0 = new TestInstances();
int[] intArray0 = new int[6];
naiveBayesMultinomialText0.m_lnorm = (double) (-1);
intArray0[4] = (-1);
naiveBayesMultinomialText0.m_periodicP = (-2);
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-1), intArray0, (-1));
naiveBayesMultinomialText0.distributionForInstance(binarySparseInstance0);

[MASTER] 14:40:23.867 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_28_1575643223838/weka/classifiers/bayes/NaiveBayesMultinomialText_28_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_28_1575643223838/weka/classifiers/bayes/NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding.java]]
[MASTER] 14:40:23.868 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:40:23.868 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:40:23.868 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 14:40:23.868 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 14:40:23.870 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_28_1575643223838/weka/classifiers/bayes/NaiveBayesMultinomialText_28_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 14:40:23 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.BinarySparseInstance;
17: import weka.core.Instances;
18: import weka.core.TestInstances;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_28_tmp__ESTest extends NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=0.42857142857142855
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
31:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
32:       TestInstances testInstances0 = new TestInstances();
33:       Instances instances0 = naiveBayesMultinomialText0.m_data;
34:       int[] intArray0 = new int[6];
35:       naiveBayesMultinomialText0.m_lnorm = (double) (-1);
36:       intArray0[0] = (-1);
37:       intArray0[4] = (-1);
38:       naiveBayesMultinomialText0.m_periodicP = (-2);
39:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(1.0, intArray0, 5782);
40:       try { 
41:         naiveBayesMultinomialText0.distributionForInstance(binarySparseInstance0);
42:         fail("Expecting exception: RuntimeException");
43:       
44:       } catch(RuntimeException e) {
45:          //
46:          // DenseInstance doesn't have access to a dataset!
47:          //
48:          verifyException("weka.core.AbstractInstance", e);
49:       }
50:   }
51: }
RegularFileObject[/tmp/EvoSuite_28_1575643223838/weka/classifiers/bayes/NaiveBayesMultinomialText_28_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 14:40:23 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.CostMatrix",
95:       "weka.core.neighboursearch.BallTree",
96:       "weka.core.logging.Logger$Level",
97:       "weka.core.neighboursearch.CoverTree$DistanceNode",
98:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.core.neighboursearch.CoverTree$MyHeap",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
123:       "weka.core.BinarySparseInstance",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.neighboursearch.balltrees.BallNode",
129:       "weka.core.AdditionalMeasureProducer",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.CapabilitiesHandler",
134:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
135:       "weka.core.AbstractInstance",
136:       "weka.core.scripting.JythonObject",
137:       "weka.core.SelectedTag",
138:       "org.pentaho.packageManagement.DefaultPackage",
139:       "weka.core.neighboursearch.balltrees.BallSplitter",
140:       "weka.core.Version",
141:       "weka.core.Tag",
142:       "weka.core.neighboursearch.CoverTree",
143:       "weka.classifiers.AbstractClassifier",
144:       "weka.core.OptionHandler",
145:       "weka.core.WekaException",
146:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
147:       "weka.core.Range",
148:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
149:       "weka.core.scripting.JythonSerializableObject",
150:       "weka.classifiers.Classifier",
151:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
152:       "weka.core.Capabilities$Capability",
153:       "weka.core.SparseInstance",
154:       "org.pentaho.packageManagement.PackageManager",
155:       "weka.estimators.PoissonEstimator",
156:       "weka.core.WekaEnumeration",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.classifiers.misc.SerializedClassifier",
159:       "weka.core.stemmers.SnowballStemmer",
160:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
161:       "weka.core.stemmers.LovinsStemmer",
162:       "weka.classifiers.Evaluation",
163:       "weka.classifiers.functions.supportVector.Kernel",
164:       "weka.core.WekaPackageManager",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.neighboursearch.LinearNNSearch",
167:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
168:       "weka.core.Option",
169:       "weka.classifiers.meta.CostSensitiveClassifier",
170:       "weka.core.neighboursearch.PerformanceStats",
171:       "weka.core.Attribute",
172:       "weka.core.Stopwords",
173:       "weka.core.FastVector",
174:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
175:       "weka.core.UnassignedDatasetException",
176:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
177:       "weka.classifiers.RandomizableClassifier",
178:       "weka.classifiers.SingleClassifierEnhancer",
179:       "weka.core.RevisionUtils",
180:       "weka.core.Instance",
181:       "weka.estimators.Estimator",
182:       "weka.core.ProtectedProperties",
183:       "weka.core.AttributeStats",
184:       "weka.core.WeightedInstancesHandler",
185:       "weka.core.neighboursearch.NearestNeighbourSearch",
186:       "weka.core.neighboursearch.covertrees.Stack",
187:       "weka.core.Randomizable",
188:       "weka.core.EuclideanDistance",
189:       "weka.core.Instances",
190:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
191:       "weka.core.UnassignedClassException",
192:       "weka.classifiers.rules.ZeroR",
193:       "weka.core.stemmers.IteratedLovinsStemmer",
194:       "weka.core.TechnicalInformation",
195:       "weka.core.UnsupportedAttributeTypeException",
196:       "weka.classifiers.Sourcable",
197:       "weka.core.RevisionHandler",
198:       "weka.classifiers.evaluation.output.prediction.PlainText",
199:       "weka.core.neighboursearch.TreePerformanceStats",
200:       "weka.core.xml.XMLSerialization",
201:       "weka.classifiers.xml.XMLClassifier"
202:     );
203:   } 
204: 
205:   private static void resetClasses() {
206:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding.class.getClassLoader()); 
207: 
208:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
209:       "weka.classifiers.AbstractClassifier",
210:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
211:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
212:       "weka.core.Capabilities$Capability",
213:       "weka.core.tokenizers.Tokenizer",
214:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
215:       "weka.core.tokenizers.WordTokenizer",
216:       "weka.core.stemmers.NullStemmer",
217:       "weka.core.Option",
218:       "weka.core.AbstractInstance",
219:       "weka.core.SparseInstance",
220:       "weka.core.Utils",
221:       "weka.core.UnassignedDatasetException",
222:       "weka.core.TestInstances",
223:       "weka.core.Attribute",
224:       "weka.core.ProtectedProperties",
225:       "weka.core.Instances",
226:       "weka.core.DenseInstance",
227:       "weka.classifiers.bayes.BayesNet",
228:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
229:       "weka.core.Tag",
230:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
231:       "weka.classifiers.bayes.net.search.local.K2",
232:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
233:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
234:       "weka.core.neighboursearch.balltrees.BallNode",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.classifiers.functions.SGDText",
237:       "weka.classifiers.Evaluation",
238:       "weka.core.BinarySparseInstance",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.FindWithCapabilities",
246:       "weka.core.SingleIndex",
247:       "weka.core.ClassDiscovery",
248:       "weka.core.SerializedObject",
249:       "weka.core.stemmers.SnowballStemmer",
250:       "weka.core.tokenizers.AlphabeticTokenizer",
251:       "weka.classifiers.misc.SerializedClassifier",
252:       "weka.attributeSelection.ASEvaluation",
253:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
254:       "weka.attributeSelection.PrincipalComponents",
255:       "weka.filters.Filter",
256:       "weka.filters.supervised.attribute.Discretize",
257:       "weka.core.Range",
258:       "weka.core.stemmers.LovinsStemmer",
259:       "weka.core.stemmers.IteratedLovinsStemmer",
260:       "weka.core.Stopwords",
261:       "weka.core.RevisionUtils",
262:       "weka.core.neighboursearch.NearestNeighbourSearch",
263:       "weka.core.neighboursearch.KDTree",
264:       "weka.core.NormalizableDistance",
265:       "weka.core.EuclideanDistance",
266:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
267:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
268:       "weka.core.neighboursearch.CoverTree",
269:       "weka.core.WekaEnumeration",
270:       "weka.core.Attribute$1",
271:       "weka.classifiers.lazy.IBk",
272:       "weka.core.neighboursearch.LinearNNSearch",
273:       "weka.classifiers.functions.supportVector.Kernel",
274:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
275:       "weka.core.WekaException",
276:       "weka.classifiers.SingleClassifierEnhancer",
277:       "weka.classifiers.misc.InputMappedClassifier",
278:       "weka.classifiers.rules.ZeroR",
279:       "weka.classifiers.bayes.net.BIFReader",
280:       "weka.core.converters.ConverterUtils$DataSource",
281:       "weka.core.converters.AbstractLoader",
282:       "weka.core.converters.AbstractFileLoader",
283:       "weka.core.converters.ArffLoader",
284:       "weka.core.converters.ArffLoader$ArffReader",
285:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
286:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
287:       "weka.core.neighboursearch.balltrees.BallSplitter",
288:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
289:       "weka.classifiers.functions.SimpleLogistic",
290:       "weka.classifiers.functions.supportVector.StringKernel",
291:       "weka.classifiers.functions.SMOreg",
292:       "weka.classifiers.functions.supportVector.RegOptimizer",
293:       "weka.classifiers.functions.supportVector.RegSMO",
294:       "weka.classifiers.functions.supportVector.RegSMOImproved",
295:       "weka.classifiers.functions.supportVector.CachedKernel",
296:       "weka.classifiers.functions.supportVector.PolyKernel",
297:       "weka.classifiers.trees.J48",
298:       "weka.classifiers.trees.j48.ClassifierTree",
299:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
300:       "weka.classifiers.MultipleClassifiersCombiner",
301:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
302:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
303:       "weka.classifiers.meta.Stacking",
304:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
305:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
306:       "weka.classifiers.meta.CostSensitiveClassifier",
307:       "weka.classifiers.CostMatrix",
308:       "weka.core.stemmers.Stemming",
309:       "weka.classifiers.bayes.NaiveBayes",
310:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
311:       "weka.classifiers.meta.Vote",
312:       "weka.classifiers.rules.PART",
313:       "weka.classifiers.rules.part.MakeDecList",
314:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
315:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
316:       "weka.classifiers.meta.CVParameterSelection",
317:       "weka.core.FastVector",
318:       "weka.classifiers.bayes.NaiveBayesMultinomial",
319:       "weka.classifiers.lazy.LWL",
320:       "weka.classifiers.trees.DecisionStump",
321:       "weka.classifiers.rules.JRip",
322:       "weka.core.tokenizers.NGramTokenizer",
323:       "weka.classifiers.IteratedSingleClassifierEnhancer",
324:       "weka.classifiers.meta.AdditiveRegression",
325:       "weka.core.UnsupportedAttributeTypeException",
326:       "weka.classifiers.meta.AttributeSelectedClassifier",
327:       "weka.attributeSelection.CfsSubsetEval",
328:       "weka.attributeSelection.ASSearch",
329:       "weka.attributeSelection.BestFirst",
330:       "weka.filters.AllFilter",
331:       "weka.classifiers.functions.supportVector.RBFKernel",
332:       "weka.core.TechnicalInformation",
333:       "weka.core.TechnicalInformation$Type",
334:       "weka.core.TechnicalInformation$Field",
335:       "weka.classifiers.functions.SGD",
336:       "weka.attributeSelection.GainRatioAttributeEval",
337:       "weka.classifiers.trees.LMT",
338:       "weka.attributeSelection.WrapperSubsetEval",
339:       "weka.estimators.Estimator",
340:       "weka.estimators.PoissonEstimator",
341:       "weka.core.UnassignedClassException",
342:       "weka.classifiers.functions.SMO",
343:       "weka.core.neighboursearch.BallTree",
344:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
345:       "weka.classifiers.meta.LogitBoost",
346:       "weka.classifiers.functions.VotedPerceptron",
347:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
348:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.meta.RandomCommittee",
350:       "weka.classifiers.trees.RandomTree",
351:       "weka.classifiers.rules.OneR",
352:       "weka.attributeSelection.InfoGainAttributeEval",
353:       "weka.classifiers.trees.REPTree",
354:       "weka.classifiers.meta.FilteredClassifier",
355:       "weka.filters.supervised.attribute.AttributeSelection",
356:       "weka.attributeSelection.AttributeSelection",
357:       "weka.attributeSelection.GreedyStepwise",
358:       "weka.classifiers.meta.MultiClassClassifier",
359:       "weka.classifiers.functions.Logistic",
360:       "weka.classifiers.functions.MultilayerPerceptron",
361:       "weka.filters.unsupervised.attribute.NominalToBinary",
362:       "weka.classifiers.functions.neural.SigmoidUnit",
363:       "weka.classifiers.functions.neural.LinearUnit",
364:       "weka.filters.SimpleFilter",
365:       "weka.filters.SimpleStreamFilter",
366:       "weka.filters.MultiFilter",
367:       "weka.estimators.DiscreteEstimator",
368:       "weka.attributeSelection.ReliefFAttributeEval",
369:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
370:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
371:       "weka.core.matrix.Matrix",
372:       "weka.classifiers.functions.GaussianProcesses",
373:       "weka.classifiers.trees.m5.RuleNode",
374:       "weka.classifiers.meta.RegressionByDiscretization",
375:       "weka.filters.unsupervised.attribute.Discretize",
376:       "weka.classifiers.trees.m5.M5Base",
377:       "weka.classifiers.rules.M5Rules",
378:       "weka.classifiers.functions.LinearRegression",
379:       "weka.classifiers.meta.ClassificationViaRegression",
380:       "weka.classifiers.trees.M5P",
381:       "weka.attributeSelection.CorrelationAttributeEval",
382:       "weka.classifiers.meta.AdaBoostM1",
383:       "weka.core.AttributeStats",
384:       "weka.classifiers.functions.SimpleLinearRegression",
385:       "weka.classifiers.meta.RandomSubSpace",
386:       "weka.estimators.NormalEstimator",
387:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
390:       "weka.core.Queue",
391:       "weka.core.AttributeLocator",
392:       "weka.core.StringLocator",
393:       "weka.core.RelationalLocator",
394:       "weka.core.ContingencyTables",
395:       "weka.core.Queue$QueueNode",
396:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
397:       "weka.classifiers.bayes.NaiveBayesUpdateable",
398:       "weka.attributeSelection.OneRAttributeEval",
399:       "weka.classifiers.meta.MultiScheme",
400:       "weka.classifiers.lazy.KStar",
401:       "weka.classifiers.meta.Bagging",
402:       "weka.classifiers.trees.RandomForest",
403:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
404:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
405:       "weka.classifiers.functions.supportVector.Puk",
406:       "weka.estimators.MahalanobisEstimator",
407:       "weka.classifiers.functions.neural.NeuralConnection",
408:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
409:       "weka.core.Javadoc",
410:       "weka.core.TechnicalInformationHandlerJavadoc"
411:     );
412:   }
413: }

[MASTER] 14:40:23.871 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
TestInstances testInstances0 = new TestInstances();
Instances instances0 = naiveBayesMultinomialText0.m_data;
int[] intArray0 = new int[6];
naiveBayesMultinomialText0.m_lnorm = (double) (-1);
intArray0[0] = (-1);
intArray0[4] = (-1);
naiveBayesMultinomialText0.m_periodicP = (-2);
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(1.0, intArray0, 5782);
naiveBayesMultinomialText0.distributionForInstance(binarySparseInstance0);

[MASTER] 14:40:24.091 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_34_1575643224060/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_34_1575643224060/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding.java]]
[MASTER] 14:40:24.091 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:40:24.091 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:40:24.091 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 14:40:24.091 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 14:40:24.093 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_34_1575643224060/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 14:40:24 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.core.Instances;
16: import weka.core.TestInstances;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_34_tmp__ESTest extends NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=2.063983366979555
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
29:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
30:       TestInstances testInstances0 = new TestInstances();
31:       Instances instances0 = naiveBayesMultinomialText0.m_data;
32:       naiveBayesMultinomialText0.setLowercaseTokens(true);
33:       int[] intArray0 = new int[6];
34:       naiveBayesMultinomialText0.m_lnorm = (double) (-1);
35:       intArray0[0] = (-2);
36:       intArray0[0] = (-1);
37:       intArray0[4] = (-1);
38:       naiveBayesMultinomialText0.m_periodicP = (-2);
39:       naiveBayesMultinomialText0.m_periodicP = 12;
40:       testInstances0.generate();
41:       naiveBayesMultinomialText0.getNorm();
42:       naiveBayesMultinomialText0.getUseWordFrequencies();
43:       naiveBayesMultinomialText0.periodicPruningTipText();
44:       assertTrue(naiveBayesMultinomialText0.getLowercaseTokens());
45:   }
46: }
RegularFileObject[/tmp/EvoSuite_34_1575643224060/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 14:40:24 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.CostMatrix",
95:       "weka.core.neighboursearch.BallTree",
96:       "weka.core.logging.Logger$Level",
97:       "weka.core.neighboursearch.CoverTree$DistanceNode",
98:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.core.neighboursearch.CoverTree$MyHeap",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
123:       "weka.core.BinarySparseInstance",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.neighboursearch.balltrees.BallNode",
129:       "weka.core.AdditionalMeasureProducer",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.CapabilitiesHandler",
134:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
135:       "weka.core.AbstractInstance",
136:       "weka.core.scripting.JythonObject",
137:       "weka.core.SelectedTag",
138:       "org.pentaho.packageManagement.DefaultPackage",
139:       "weka.core.neighboursearch.balltrees.BallSplitter",
140:       "weka.core.Version",
141:       "weka.core.Tag",
142:       "weka.core.neighboursearch.CoverTree",
143:       "weka.classifiers.AbstractClassifier",
144:       "weka.core.OptionHandler",
145:       "weka.core.WekaException",
146:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
147:       "weka.core.Range",
148:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
149:       "weka.core.scripting.JythonSerializableObject",
150:       "weka.classifiers.Classifier",
151:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
152:       "weka.core.Capabilities$Capability",
153:       "weka.core.SparseInstance",
154:       "org.pentaho.packageManagement.PackageManager",
155:       "weka.estimators.PoissonEstimator",
156:       "weka.core.WekaEnumeration",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.classifiers.misc.SerializedClassifier",
159:       "weka.core.stemmers.SnowballStemmer",
160:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
161:       "weka.core.stemmers.LovinsStemmer",
162:       "weka.classifiers.Evaluation",
163:       "weka.classifiers.functions.supportVector.Kernel",
164:       "weka.core.WekaPackageManager",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.neighboursearch.LinearNNSearch",
167:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
168:       "weka.core.Option",
169:       "weka.classifiers.meta.CostSensitiveClassifier",
170:       "weka.core.neighboursearch.PerformanceStats",
171:       "weka.core.Attribute",
172:       "weka.core.Stopwords",
173:       "weka.core.FastVector",
174:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
175:       "weka.core.UnassignedDatasetException",
176:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
177:       "weka.classifiers.RandomizableClassifier",
178:       "weka.classifiers.SingleClassifierEnhancer",
179:       "weka.core.RevisionUtils",
180:       "weka.core.Instance",
181:       "weka.estimators.Estimator",
182:       "weka.core.ProtectedProperties",
183:       "weka.core.AttributeStats",
184:       "weka.core.WeightedInstancesHandler",
185:       "weka.core.neighboursearch.NearestNeighbourSearch",
186:       "weka.core.neighboursearch.covertrees.Stack",
187:       "weka.core.Randomizable",
188:       "weka.core.EuclideanDistance",
189:       "weka.core.Instances",
190:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
191:       "weka.core.UnassignedClassException",
192:       "weka.classifiers.rules.ZeroR",
193:       "weka.core.stemmers.IteratedLovinsStemmer",
194:       "weka.core.TechnicalInformation",
195:       "weka.core.UnsupportedAttributeTypeException",
196:       "weka.classifiers.Sourcable",
197:       "weka.core.RevisionHandler",
198:       "weka.classifiers.evaluation.output.prediction.PlainText",
199:       "weka.core.neighboursearch.TreePerformanceStats",
200:       "weka.core.xml.XMLSerialization",
201:       "weka.classifiers.xml.XMLClassifier"
202:     );
203:   } 
204: 
205:   private static void resetClasses() {
206:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding.class.getClassLoader()); 
207: 
208:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
209:       "weka.classifiers.AbstractClassifier",
210:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
211:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
212:       "weka.core.Capabilities$Capability",
213:       "weka.core.tokenizers.Tokenizer",
214:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
215:       "weka.core.tokenizers.WordTokenizer",
216:       "weka.core.stemmers.NullStemmer",
217:       "weka.core.Option",
218:       "weka.core.AbstractInstance",
219:       "weka.core.SparseInstance",
220:       "weka.core.Utils",
221:       "weka.core.UnassignedDatasetException",
222:       "weka.core.TestInstances",
223:       "weka.core.Attribute",
224:       "weka.core.ProtectedProperties",
225:       "weka.core.Instances",
226:       "weka.core.DenseInstance",
227:       "weka.classifiers.bayes.BayesNet",
228:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
229:       "weka.core.Tag",
230:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
231:       "weka.classifiers.bayes.net.search.local.K2",
232:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
233:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
234:       "weka.core.neighboursearch.balltrees.BallNode",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.classifiers.functions.SGDText",
237:       "weka.classifiers.Evaluation",
238:       "weka.core.BinarySparseInstance",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.FindWithCapabilities",
246:       "weka.core.SingleIndex",
247:       "weka.core.ClassDiscovery",
248:       "weka.core.SerializedObject",
249:       "weka.core.stemmers.SnowballStemmer",
250:       "weka.core.tokenizers.AlphabeticTokenizer",
251:       "weka.classifiers.misc.SerializedClassifier",
252:       "weka.attributeSelection.ASEvaluation",
253:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
254:       "weka.attributeSelection.PrincipalComponents",
255:       "weka.filters.Filter",
256:       "weka.filters.supervised.attribute.Discretize",
257:       "weka.core.Range",
258:       "weka.core.stemmers.LovinsStemmer",
259:       "weka.core.stemmers.IteratedLovinsStemmer",
260:       "weka.core.Stopwords",
261:       "weka.core.RevisionUtils",
262:       "weka.core.neighboursearch.NearestNeighbourSearch",
263:       "weka.core.neighboursearch.KDTree",
264:       "weka.core.NormalizableDistance",
265:       "weka.core.EuclideanDistance",
266:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
267:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
268:       "weka.core.neighboursearch.CoverTree",
269:       "weka.core.WekaEnumeration",
270:       "weka.core.Attribute$1",
271:       "weka.classifiers.lazy.IBk",
272:       "weka.core.neighboursearch.LinearNNSearch",
273:       "weka.classifiers.functions.supportVector.Kernel",
274:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
275:       "weka.core.WekaException",
276:       "weka.classifiers.SingleClassifierEnhancer",
277:       "weka.classifiers.misc.InputMappedClassifier",
278:       "weka.classifiers.rules.ZeroR",
279:       "weka.classifiers.bayes.net.BIFReader",
280:       "weka.core.converters.ConverterUtils$DataSource",
281:       "weka.core.converters.AbstractLoader",
282:       "weka.core.converters.AbstractFileLoader",
283:       "weka.core.converters.ArffLoader",
284:       "weka.core.converters.ArffLoader$ArffReader",
285:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
286:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
287:       "weka.core.neighboursearch.balltrees.BallSplitter",
288:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
289:       "weka.classifiers.functions.SimpleLogistic",
290:       "weka.classifiers.functions.supportVector.StringKernel",
291:       "weka.classifiers.functions.SMOreg",
292:       "weka.classifiers.functions.supportVector.RegOptimizer",
293:       "weka.classifiers.functions.supportVector.RegSMO",
294:       "weka.classifiers.functions.supportVector.RegSMOImproved",
295:       "weka.classifiers.functions.supportVector.CachedKernel",
296:       "weka.classifiers.functions.supportVector.PolyKernel",
297:       "weka.classifiers.trees.J48",
298:       "weka.classifiers.trees.j48.ClassifierTree",
299:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
300:       "weka.classifiers.MultipleClassifiersCombiner",
301:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
302:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
303:       "weka.classifiers.meta.Stacking",
304:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
305:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
306:       "weka.classifiers.meta.CostSensitiveClassifier",
307:       "weka.classifiers.CostMatrix",
308:       "weka.core.stemmers.Stemming",
309:       "weka.classifiers.bayes.NaiveBayes",
310:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
311:       "weka.classifiers.meta.Vote",
312:       "weka.classifiers.rules.PART",
313:       "weka.classifiers.rules.part.MakeDecList",
314:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
315:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
316:       "weka.classifiers.meta.CVParameterSelection",
317:       "weka.core.FastVector",
318:       "weka.classifiers.bayes.NaiveBayesMultinomial",
319:       "weka.classifiers.lazy.LWL",
320:       "weka.classifiers.trees.DecisionStump",
321:       "weka.classifiers.rules.JRip",
322:       "weka.core.tokenizers.NGramTokenizer",
323:       "weka.classifiers.IteratedSingleClassifierEnhancer",
324:       "weka.classifiers.meta.AdditiveRegression",
325:       "weka.core.UnsupportedAttributeTypeException",
326:       "weka.classifiers.meta.AttributeSelectedClassifier",
327:       "weka.attributeSelection.CfsSubsetEval",
328:       "weka.attributeSelection.ASSearch",
329:       "weka.attributeSelection.BestFirst",
330:       "weka.filters.AllFilter",
331:       "weka.classifiers.functions.supportVector.RBFKernel",
332:       "weka.core.TechnicalInformation",
333:       "weka.core.TechnicalInformation$Type",
334:       "weka.core.TechnicalInformation$Field",
335:       "weka.classifiers.functions.SGD",
336:       "weka.attributeSelection.GainRatioAttributeEval",
337:       "weka.classifiers.trees.LMT",
338:       "weka.attributeSelection.WrapperSubsetEval",
339:       "weka.estimators.Estimator",
340:       "weka.estimators.PoissonEstimator",
341:       "weka.core.UnassignedClassException",
342:       "weka.classifiers.functions.SMO",
343:       "weka.core.neighboursearch.BallTree",
344:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
345:       "weka.classifiers.meta.LogitBoost",
346:       "weka.classifiers.functions.VotedPerceptron",
347:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
348:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.meta.RandomCommittee",
350:       "weka.classifiers.trees.RandomTree",
351:       "weka.classifiers.rules.OneR",
352:       "weka.attributeSelection.InfoGainAttributeEval",
353:       "weka.classifiers.trees.REPTree",
354:       "weka.classifiers.meta.FilteredClassifier",
355:       "weka.filters.supervised.attribute.AttributeSelection",
356:       "weka.attributeSelection.AttributeSelection",
357:       "weka.attributeSelection.GreedyStepwise",
358:       "weka.classifiers.meta.MultiClassClassifier",
359:       "weka.classifiers.functions.Logistic",
360:       "weka.classifiers.functions.MultilayerPerceptron",
361:       "weka.filters.unsupervised.attribute.NominalToBinary",
362:       "weka.classifiers.functions.neural.SigmoidUnit",
363:       "weka.classifiers.functions.neural.LinearUnit",
364:       "weka.filters.SimpleFilter",
365:       "weka.filters.SimpleStreamFilter",
366:       "weka.filters.MultiFilter",
367:       "weka.estimators.DiscreteEstimator",
368:       "weka.attributeSelection.ReliefFAttributeEval",
369:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
370:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
371:       "weka.core.matrix.Matrix",
372:       "weka.classifiers.functions.GaussianProcesses",
373:       "weka.classifiers.trees.m5.RuleNode",
374:       "weka.classifiers.meta.RegressionByDiscretization",
375:       "weka.filters.unsupervised.attribute.Discretize",
376:       "weka.classifiers.trees.m5.M5Base",
377:       "weka.classifiers.rules.M5Rules",
378:       "weka.classifiers.functions.LinearRegression",
379:       "weka.classifiers.meta.ClassificationViaRegression",
380:       "weka.classifiers.trees.M5P",
381:       "weka.attributeSelection.CorrelationAttributeEval",
382:       "weka.classifiers.meta.AdaBoostM1",
383:       "weka.core.AttributeStats",
384:       "weka.classifiers.functions.SimpleLinearRegression",
385:       "weka.classifiers.meta.RandomSubSpace",
386:       "weka.estimators.NormalEstimator",
387:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
390:       "weka.core.Queue",
391:       "weka.core.AttributeLocator",
392:       "weka.core.StringLocator",
393:       "weka.core.RelationalLocator",
394:       "weka.core.ContingencyTables",
395:       "weka.core.Queue$QueueNode",
396:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
397:       "weka.classifiers.bayes.NaiveBayesUpdateable",
398:       "weka.attributeSelection.OneRAttributeEval",
399:       "weka.classifiers.meta.MultiScheme",
400:       "weka.classifiers.lazy.KStar",
401:       "weka.classifiers.meta.Bagging",
402:       "weka.classifiers.trees.RandomForest",
403:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
404:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
405:       "weka.classifiers.functions.supportVector.Puk",
406:       "weka.estimators.MahalanobisEstimator",
407:       "weka.classifiers.functions.neural.NeuralConnection",
408:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
409:       "weka.core.Javadoc",
410:       "weka.core.TechnicalInformationHandlerJavadoc"
411:     );
412:   }
413: }

[MASTER] 14:40:24.093 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
TestInstances testInstances0 = new TestInstances();
Instances instances0 = naiveBayesMultinomialText0.m_data;
naiveBayesMultinomialText0.setLowercaseTokens(true);
int[] intArray0 = new int[6];
naiveBayesMultinomialText0.m_lnorm = (double) (-1);
intArray0[0] = (-2);
intArray0[0] = (-1);
intArray0[4] = (-1);
naiveBayesMultinomialText0.m_periodicP = (-2);
naiveBayesMultinomialText0.m_periodicP = 12;
testInstances0.generate();
naiveBayesMultinomialText0.getNorm();
naiveBayesMultinomialText0.getUseWordFrequencies();
naiveBayesMultinomialText0.periodicPruningTipText();
assertTrue(naiveBayesMultinomialText0.getLowercaseTokens());


[MASTER] 14:40:24.126 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_35_1575643224094/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_35_1575643224094/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding.java]]
[MASTER] 14:40:24.126 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:40:24.126 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:40:24.126 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 14:40:24.127 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 14:40:24.127 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_35_1575643224094/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 14:40:24 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.core.Instances;
16: import weka.core.TestInstances;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_35_tmp__ESTest extends NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=1.5271837172395382
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
29:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
30:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
31:       
32:       TestInstances testInstances0 = new TestInstances();
33:       Instances instances0 = naiveBayesMultinomialText0.m_data;
34:       int[] intArray0 = new int[6];
35:       naiveBayesMultinomialText0.m_lnorm = (double) (-2);
36:       intArray0[0] = (-2);
37:       intArray0[0] = (-1);
38:       intArray0[4] = (-1);
39:       naiveBayesMultinomialText0.m_periodicP = (-2);
40:       naiveBayesMultinomialText0.setUseWordFrequencies(true);
41:       naiveBayesMultinomialText0.m_periodicP = 12;
42:       boolean boolean0 = naiveBayesMultinomialText0.getLowercaseTokens();
43:       assertFalse(boolean0);
44:   }
45: }
RegularFileObject[/tmp/EvoSuite_35_1575643224094/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 14:40:24 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.CostMatrix",
95:       "weka.core.neighboursearch.BallTree",
96:       "weka.core.logging.Logger$Level",
97:       "weka.core.neighboursearch.CoverTree$DistanceNode",
98:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.core.neighboursearch.CoverTree$MyHeap",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
123:       "weka.core.BinarySparseInstance",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.neighboursearch.balltrees.BallNode",
129:       "weka.core.AdditionalMeasureProducer",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.CapabilitiesHandler",
134:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
135:       "weka.core.AbstractInstance",
136:       "weka.core.scripting.JythonObject",
137:       "weka.core.SelectedTag",
138:       "org.pentaho.packageManagement.DefaultPackage",
139:       "weka.core.neighboursearch.balltrees.BallSplitter",
140:       "weka.core.Version",
141:       "weka.core.Tag",
142:       "weka.core.neighboursearch.CoverTree",
143:       "weka.classifiers.AbstractClassifier",
144:       "weka.core.OptionHandler",
145:       "weka.core.WekaException",
146:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
147:       "weka.core.Range",
148:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
149:       "weka.core.scripting.JythonSerializableObject",
150:       "weka.classifiers.Classifier",
151:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
152:       "weka.core.Capabilities$Capability",
153:       "weka.core.SparseInstance",
154:       "org.pentaho.packageManagement.PackageManager",
155:       "weka.estimators.PoissonEstimator",
156:       "weka.core.WekaEnumeration",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.classifiers.misc.SerializedClassifier",
159:       "weka.core.stemmers.SnowballStemmer",
160:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
161:       "weka.core.stemmers.LovinsStemmer",
162:       "weka.classifiers.Evaluation",
163:       "weka.classifiers.functions.supportVector.Kernel",
164:       "weka.core.WekaPackageManager",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.neighboursearch.LinearNNSearch",
167:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
168:       "weka.core.Option",
169:       "weka.classifiers.meta.CostSensitiveClassifier",
170:       "weka.core.neighboursearch.PerformanceStats",
171:       "weka.core.Attribute",
172:       "weka.core.Stopwords",
173:       "weka.core.FastVector",
174:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
175:       "weka.core.UnassignedDatasetException",
176:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
177:       "weka.classifiers.RandomizableClassifier",
178:       "weka.classifiers.SingleClassifierEnhancer",
179:       "weka.core.RevisionUtils",
180:       "weka.core.Instance",
181:       "weka.estimators.Estimator",
182:       "weka.core.ProtectedProperties",
183:       "weka.core.AttributeStats",
184:       "weka.core.WeightedInstancesHandler",
185:       "weka.core.neighboursearch.NearestNeighbourSearch",
186:       "weka.core.neighboursearch.covertrees.Stack",
187:       "weka.core.Randomizable",
188:       "weka.core.EuclideanDistance",
189:       "weka.core.Instances",
190:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
191:       "weka.core.UnassignedClassException",
192:       "weka.classifiers.rules.ZeroR",
193:       "weka.core.stemmers.IteratedLovinsStemmer",
194:       "weka.core.TechnicalInformation",
195:       "weka.core.UnsupportedAttributeTypeException",
196:       "weka.classifiers.Sourcable",
197:       "weka.core.RevisionHandler",
198:       "weka.classifiers.evaluation.output.prediction.PlainText",
199:       "weka.core.neighboursearch.TreePerformanceStats",
200:       "weka.core.xml.XMLSerialization",
201:       "weka.classifiers.xml.XMLClassifier"
202:     );
203:   } 
204: 
205:   private static void resetClasses() {
206:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding.class.getClassLoader()); 
207: 
208:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
209:       "weka.classifiers.AbstractClassifier",
210:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
211:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
212:       "weka.core.Capabilities$Capability",
213:       "weka.core.tokenizers.Tokenizer",
214:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
215:       "weka.core.tokenizers.WordTokenizer",
216:       "weka.core.stemmers.NullStemmer",
217:       "weka.core.Option",
218:       "weka.core.AbstractInstance",
219:       "weka.core.SparseInstance",
220:       "weka.core.Utils",
221:       "weka.core.UnassignedDatasetException",
222:       "weka.core.TestInstances",
223:       "weka.core.Attribute",
224:       "weka.core.ProtectedProperties",
225:       "weka.core.Instances",
226:       "weka.core.DenseInstance",
227:       "weka.classifiers.bayes.BayesNet",
228:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
229:       "weka.core.Tag",
230:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
231:       "weka.classifiers.bayes.net.search.local.K2",
232:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
233:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
234:       "weka.core.neighboursearch.balltrees.BallNode",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.classifiers.functions.SGDText",
237:       "weka.classifiers.Evaluation",
238:       "weka.core.BinarySparseInstance",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.FindWithCapabilities",
246:       "weka.core.SingleIndex",
247:       "weka.core.ClassDiscovery",
248:       "weka.core.SerializedObject",
249:       "weka.core.stemmers.SnowballStemmer",
250:       "weka.core.tokenizers.AlphabeticTokenizer",
251:       "weka.classifiers.misc.SerializedClassifier",
252:       "weka.attributeSelection.ASEvaluation",
253:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
254:       "weka.attributeSelection.PrincipalComponents",
255:       "weka.filters.Filter",
256:       "weka.filters.supervised.attribute.Discretize",
257:       "weka.core.Range",
258:       "weka.core.stemmers.LovinsStemmer",
259:       "weka.core.stemmers.IteratedLovinsStemmer",
260:       "weka.core.Stopwords",
261:       "weka.core.RevisionUtils",
262:       "weka.core.neighboursearch.NearestNeighbourSearch",
263:       "weka.core.neighboursearch.KDTree",
264:       "weka.core.NormalizableDistance",
265:       "weka.core.EuclideanDistance",
266:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
267:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
268:       "weka.core.neighboursearch.CoverTree",
269:       "weka.core.WekaEnumeration",
270:       "weka.core.Attribute$1",
271:       "weka.classifiers.lazy.IBk",
272:       "weka.core.neighboursearch.LinearNNSearch",
273:       "weka.classifiers.functions.supportVector.Kernel",
274:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
275:       "weka.core.WekaException",
276:       "weka.classifiers.SingleClassifierEnhancer",
277:       "weka.classifiers.misc.InputMappedClassifier",
278:       "weka.classifiers.rules.ZeroR",
279:       "weka.classifiers.bayes.net.BIFReader",
280:       "weka.core.converters.ConverterUtils$DataSource",
281:       "weka.core.converters.AbstractLoader",
282:       "weka.core.converters.AbstractFileLoader",
283:       "weka.core.converters.ArffLoader",
284:       "weka.core.converters.ArffLoader$ArffReader",
285:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
286:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
287:       "weka.core.neighboursearch.balltrees.BallSplitter",
288:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
289:       "weka.classifiers.functions.SimpleLogistic",
290:       "weka.classifiers.functions.supportVector.StringKernel",
291:       "weka.classifiers.functions.SMOreg",
292:       "weka.classifiers.functions.supportVector.RegOptimizer",
293:       "weka.classifiers.functions.supportVector.RegSMO",
294:       "weka.classifiers.functions.supportVector.RegSMOImproved",
295:       "weka.classifiers.functions.supportVector.CachedKernel",
296:       "weka.classifiers.functions.supportVector.PolyKernel",
297:       "weka.classifiers.trees.J48",
298:       "weka.classifiers.trees.j48.ClassifierTree",
299:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
300:       "weka.classifiers.MultipleClassifiersCombiner",
301:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
302:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
303:       "weka.classifiers.meta.Stacking",
304:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
305:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
306:       "weka.classifiers.meta.CostSensitiveClassifier",
307:       "weka.classifiers.CostMatrix",
308:       "weka.core.stemmers.Stemming",
309:       "weka.classifiers.bayes.NaiveBayes",
310:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
311:       "weka.classifiers.meta.Vote",
312:       "weka.classifiers.rules.PART",
313:       "weka.classifiers.rules.part.MakeDecList",
314:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
315:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
316:       "weka.classifiers.meta.CVParameterSelection",
317:       "weka.core.FastVector",
318:       "weka.classifiers.bayes.NaiveBayesMultinomial",
319:       "weka.classifiers.lazy.LWL",
320:       "weka.classifiers.trees.DecisionStump",
321:       "weka.classifiers.rules.JRip",
322:       "weka.core.tokenizers.NGramTokenizer",
323:       "weka.classifiers.IteratedSingleClassifierEnhancer",
324:       "weka.classifiers.meta.AdditiveRegression",
325:       "weka.core.UnsupportedAttributeTypeException",
326:       "weka.classifiers.meta.AttributeSelectedClassifier",
327:       "weka.attributeSelection.CfsSubsetEval",
328:       "weka.attributeSelection.ASSearch",
329:       "weka.attributeSelection.BestFirst",
330:       "weka.filters.AllFilter",
331:       "weka.classifiers.functions.supportVector.RBFKernel",
332:       "weka.core.TechnicalInformation",
333:       "weka.core.TechnicalInformation$Type",
334:       "weka.core.TechnicalInformation$Field",
335:       "weka.classifiers.functions.SGD",
336:       "weka.attributeSelection.GainRatioAttributeEval",
337:       "weka.classifiers.trees.LMT",
338:       "weka.attributeSelection.WrapperSubsetEval",
339:       "weka.estimators.Estimator",
340:       "weka.estimators.PoissonEstimator",
341:       "weka.core.UnassignedClassException",
342:       "weka.classifiers.functions.SMO",
343:       "weka.core.neighboursearch.BallTree",
344:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
345:       "weka.classifiers.meta.LogitBoost",
346:       "weka.classifiers.functions.VotedPerceptron",
347:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
348:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.meta.RandomCommittee",
350:       "weka.classifiers.trees.RandomTree",
351:       "weka.classifiers.rules.OneR",
352:       "weka.attributeSelection.InfoGainAttributeEval",
353:       "weka.classifiers.trees.REPTree",
354:       "weka.classifiers.meta.FilteredClassifier",
355:       "weka.filters.supervised.attribute.AttributeSelection",
356:       "weka.attributeSelection.AttributeSelection",
357:       "weka.attributeSelection.GreedyStepwise",
358:       "weka.classifiers.meta.MultiClassClassifier",
359:       "weka.classifiers.functions.Logistic",
360:       "weka.classifiers.functions.MultilayerPerceptron",
361:       "weka.filters.unsupervised.attribute.NominalToBinary",
362:       "weka.classifiers.functions.neural.SigmoidUnit",
363:       "weka.classifiers.functions.neural.LinearUnit",
364:       "weka.filters.SimpleFilter",
365:       "weka.filters.SimpleStreamFilter",
366:       "weka.filters.MultiFilter",
367:       "weka.estimators.DiscreteEstimator",
368:       "weka.attributeSelection.ReliefFAttributeEval",
369:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
370:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
371:       "weka.core.matrix.Matrix",
372:       "weka.classifiers.functions.GaussianProcesses",
373:       "weka.classifiers.trees.m5.RuleNode",
374:       "weka.classifiers.meta.RegressionByDiscretization",
375:       "weka.filters.unsupervised.attribute.Discretize",
376:       "weka.classifiers.trees.m5.M5Base",
377:       "weka.classifiers.rules.M5Rules",
378:       "weka.classifiers.functions.LinearRegression",
379:       "weka.classifiers.meta.ClassificationViaRegression",
380:       "weka.classifiers.trees.M5P",
381:       "weka.attributeSelection.CorrelationAttributeEval",
382:       "weka.classifiers.meta.AdaBoostM1",
383:       "weka.core.AttributeStats",
384:       "weka.classifiers.functions.SimpleLinearRegression",
385:       "weka.classifiers.meta.RandomSubSpace",
386:       "weka.estimators.NormalEstimator",
387:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
390:       "weka.core.Queue",
391:       "weka.core.AttributeLocator",
392:       "weka.core.StringLocator",
393:       "weka.core.RelationalLocator",
394:       "weka.core.ContingencyTables",
395:       "weka.core.Queue$QueueNode",
396:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
397:       "weka.classifiers.bayes.NaiveBayesUpdateable",
398:       "weka.attributeSelection.OneRAttributeEval",
399:       "weka.classifiers.meta.MultiScheme",
400:       "weka.classifiers.lazy.KStar",
401:       "weka.classifiers.meta.Bagging",
402:       "weka.classifiers.trees.RandomForest",
403:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
404:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
405:       "weka.classifiers.functions.supportVector.Puk",
406:       "weka.estimators.MahalanobisEstimator",
407:       "weka.classifiers.functions.neural.NeuralConnection",
408:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
409:       "weka.core.Javadoc",
410:       "weka.core.TechnicalInformationHandlerJavadoc"
411:     );
412:   }
413: }

[MASTER] 14:40:24.128 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);

TestInstances testInstances0 = new TestInstances();
Instances instances0 = naiveBayesMultinomialText0.m_data;
int[] intArray0 = new int[6];
naiveBayesMultinomialText0.m_lnorm = (double) (-2);
intArray0[0] = (-2);
intArray0[0] = (-1);
intArray0[4] = (-1);
naiveBayesMultinomialText0.m_periodicP = (-2);
naiveBayesMultinomialText0.setUseWordFrequencies(true);
naiveBayesMultinomialText0.m_periodicP = 12;
boolean boolean0 = naiveBayesMultinomialText0.getLowercaseTokens();
assertFalse(boolean0);


[MASTER] 14:40:24.179 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_36_1575643224128/weka/classifiers/bayes/NaiveBayesMultinomialText_36_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_36_1575643224128/weka/classifiers/bayes/NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding.java]]
[MASTER] 14:40:24.179 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:40:24.179 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:40:24.179 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 14:40:24.179 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 14:40:24.180 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_36_1575643224128/weka/classifiers/bayes/NaiveBayesMultinomialText_36_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 14:40:24 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.io.File;
12: import java.util.LinkedHashMap;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.AbstractClassifier;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel;
19: import weka.classifiers.misc.SerializedClassifier;
20: import weka.core.Instance;
21: import weka.core.Instances;
22: import weka.core.TestInstances;
23: import weka.core.neighboursearch.balltrees.BallNode;
24: import weka.core.stemmers.IteratedLovinsStemmer;
25: 
26: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
27: public class NaiveBayesMultinomialText_36_tmp__ESTest extends NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding {
28: 
29:   /**
30:   //Test case number: 0
31:   /*Coverage entropy=2.0800261477282183
32:   */
33:   @Test(timeout = 4000)
34:   public void test0()  throws Throwable  {
35:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
36:       naiveBayesMultinomialText0.setNormalizeDocLength(true);
37:       naiveBayesMultinomialText0.m_useStopList = true;
38:       IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
39:       naiveBayesMultinomialText0.setStemmer(iteratedLovinsStemmer0);
40:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
41:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
42:       naiveBayesMultinomialText0.m_norm = 1.0E10;
43:       AbstractClassifier.runClassifier(naiveBayesMultinomialText0, (String[]) null);
44:       SerializedClassifier serializedClassifier0 = new SerializedClassifier();
45:       serializedClassifier0.getModelFile();
46:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
47:       PrecomputedKernelMatrixKernel precomputedKernelMatrixKernel0 = new PrecomputedKernelMatrixKernel();
48:       File file0 = precomputedKernelMatrixKernel0.getKernelMatrixFile();
49:       naiveBayesMultinomialText1.setStopwords(file0);
50:       naiveBayesMultinomialText0.getNormalizeDocLength();
51:       naiveBayesMultinomialText0.periodicPruningTipText();
52:       BallNode ballNode0 = new BallNode((-2689));
53:       TestInstances testInstances0 = new TestInstances();
54:       Instances instances0 = testInstances0.generate();
55:       try { 
56:         BallNode.calcPivot(ballNode0, ballNode0, instances0);
57:         fail("Expecting exception: NullPointerException");
58:       
59:       } catch(NullPointerException e) {
60:          //
61:          // no message in exception (getMessage() returned null)
62:          //
63:          verifyException("weka.core.neighboursearch.balltrees.BallNode", e);
64:       }
65:   }
66: }
RegularFileObject[/tmp/EvoSuite_36_1575643224128/weka/classifiers/bayes/NaiveBayesMultinomialText_36_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 14:40:24 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.CostMatrix",
95:       "weka.core.neighboursearch.BallTree",
96:       "weka.core.logging.Logger$Level",
97:       "weka.core.neighboursearch.CoverTree$DistanceNode",
98:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.core.neighboursearch.CoverTree$MyHeap",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
123:       "weka.core.BinarySparseInstance",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.neighboursearch.balltrees.BallNode",
129:       "weka.core.AdditionalMeasureProducer",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.CapabilitiesHandler",
134:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
135:       "weka.core.AbstractInstance",
136:       "weka.core.scripting.JythonObject",
137:       "weka.core.SelectedTag",
138:       "org.pentaho.packageManagement.DefaultPackage",
139:       "weka.core.neighboursearch.balltrees.BallSplitter",
140:       "weka.core.Version",
141:       "weka.core.Tag",
142:       "weka.core.neighboursearch.CoverTree",
143:       "weka.classifiers.AbstractClassifier",
144:       "weka.core.OptionHandler",
145:       "weka.core.WekaException",
146:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
147:       "weka.core.Range",
148:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
149:       "weka.core.scripting.JythonSerializableObject",
150:       "weka.classifiers.Classifier",
151:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
152:       "weka.core.Capabilities$Capability",
153:       "weka.core.SparseInstance",
154:       "org.pentaho.packageManagement.PackageManager",
155:       "weka.estimators.PoissonEstimator",
156:       "weka.core.WekaEnumeration",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.classifiers.misc.SerializedClassifier",
159:       "weka.core.stemmers.SnowballStemmer",
160:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
161:       "weka.core.stemmers.LovinsStemmer",
162:       "weka.classifiers.Evaluation",
163:       "weka.classifiers.functions.supportVector.Kernel",
164:       "weka.core.WekaPackageManager",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.neighboursearch.LinearNNSearch",
167:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
168:       "weka.core.Option",
169:       "weka.classifiers.meta.CostSensitiveClassifier",
170:       "weka.core.neighboursearch.PerformanceStats",
171:       "weka.core.Attribute",
172:       "weka.core.Stopwords",
173:       "weka.core.FastVector",
174:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
175:       "weka.core.UnassignedDatasetException",
176:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
177:       "weka.classifiers.RandomizableClassifier",
178:       "weka.classifiers.SingleClassifierEnhancer",
179:       "weka.core.RevisionUtils",
180:       "weka.core.Instance",
181:       "weka.estimators.Estimator",
182:       "weka.core.ProtectedProperties",
183:       "weka.core.AttributeStats",
184:       "weka.core.WeightedInstancesHandler",
185:       "weka.core.neighboursearch.NearestNeighbourSearch",
186:       "weka.core.neighboursearch.covertrees.Stack",
187:       "weka.core.Randomizable",
188:       "weka.core.EuclideanDistance",
189:       "weka.core.Instances",
190:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
191:       "weka.core.UnassignedClassException",
192:       "weka.classifiers.rules.ZeroR",
193:       "weka.core.stemmers.IteratedLovinsStemmer",
194:       "weka.core.TechnicalInformation",
195:       "weka.core.UnsupportedAttributeTypeException",
196:       "weka.classifiers.Sourcable",
197:       "weka.core.RevisionHandler",
198:       "weka.classifiers.evaluation.output.prediction.PlainText",
199:       "weka.core.neighboursearch.TreePerformanceStats",
200:       "weka.core.xml.XMLSerialization",
201:       "weka.classifiers.xml.XMLClassifier"
202:     );
203:   } 
204: 
205:   private static void resetClasses() {
206:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding.class.getClassLoader()); 
207: 
208:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
209:       "weka.classifiers.AbstractClassifier",
210:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
211:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
212:       "weka.core.Capabilities$Capability",
213:       "weka.core.tokenizers.Tokenizer",
214:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
215:       "weka.core.tokenizers.WordTokenizer",
216:       "weka.core.stemmers.NullStemmer",
217:       "weka.core.Option",
218:       "weka.core.AbstractInstance",
219:       "weka.core.SparseInstance",
220:       "weka.core.Utils",
221:       "weka.core.UnassignedDatasetException",
222:       "weka.core.TestInstances",
223:       "weka.core.Attribute",
224:       "weka.core.ProtectedProperties",
225:       "weka.core.Instances",
226:       "weka.core.DenseInstance",
227:       "weka.classifiers.bayes.BayesNet",
228:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
229:       "weka.core.Tag",
230:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
231:       "weka.classifiers.bayes.net.search.local.K2",
232:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
233:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
234:       "weka.core.neighboursearch.balltrees.BallNode",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.classifiers.functions.SGDText",
237:       "weka.classifiers.Evaluation",
238:       "weka.core.BinarySparseInstance",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.FindWithCapabilities",
246:       "weka.core.SingleIndex",
247:       "weka.core.ClassDiscovery",
248:       "weka.core.SerializedObject",
249:       "weka.core.stemmers.SnowballStemmer",
250:       "weka.core.tokenizers.AlphabeticTokenizer",
251:       "weka.classifiers.misc.SerializedClassifier",
252:       "weka.attributeSelection.ASEvaluation",
253:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
254:       "weka.attributeSelection.PrincipalComponents",
255:       "weka.filters.Filter",
256:       "weka.filters.supervised.attribute.Discretize",
257:       "weka.core.Range",
258:       "weka.core.stemmers.LovinsStemmer",
259:       "weka.core.stemmers.IteratedLovinsStemmer",
260:       "weka.core.Stopwords",
261:       "weka.core.RevisionUtils",
262:       "weka.core.neighboursearch.NearestNeighbourSearch",
263:       "weka.core.neighboursearch.KDTree",
264:       "weka.core.NormalizableDistance",
265:       "weka.core.EuclideanDistance",
266:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
267:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
268:       "weka.core.neighboursearch.CoverTree",
269:       "weka.core.WekaEnumeration",
270:       "weka.core.Attribute$1",
271:       "weka.classifiers.lazy.IBk",
272:       "weka.core.neighboursearch.LinearNNSearch",
273:       "weka.classifiers.functions.supportVector.Kernel",
274:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
275:       "weka.core.WekaException",
276:       "weka.classifiers.SingleClassifierEnhancer",
277:       "weka.classifiers.misc.InputMappedClassifier",
278:       "weka.classifiers.rules.ZeroR",
279:       "weka.classifiers.bayes.net.BIFReader",
280:       "weka.core.converters.ConverterUtils$DataSource",
281:       "weka.core.converters.AbstractLoader",
282:       "weka.core.converters.AbstractFileLoader",
283:       "weka.core.converters.ArffLoader",
284:       "weka.core.converters.ArffLoader$ArffReader",
285:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
286:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
287:       "weka.core.neighboursearch.balltrees.BallSplitter",
288:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
289:       "weka.classifiers.functions.SimpleLogistic",
290:       "weka.classifiers.functions.supportVector.StringKernel",
291:       "weka.classifiers.functions.SMOreg",
292:       "weka.classifiers.functions.supportVector.RegOptimizer",
293:       "weka.classifiers.functions.supportVector.RegSMO",
294:       "weka.classifiers.functions.supportVector.RegSMOImproved",
295:       "weka.classifiers.functions.supportVector.CachedKernel",
296:       "weka.classifiers.functions.supportVector.PolyKernel",
297:       "weka.classifiers.trees.J48",
298:       "weka.classifiers.trees.j48.ClassifierTree",
299:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
300:       "weka.classifiers.MultipleClassifiersCombiner",
301:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
302:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
303:       "weka.classifiers.meta.Stacking",
304:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
305:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
306:       "weka.classifiers.meta.CostSensitiveClassifier",
307:       "weka.classifiers.CostMatrix",
308:       "weka.core.stemmers.Stemming",
309:       "weka.classifiers.bayes.NaiveBayes",
310:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
311:       "weka.classifiers.meta.Vote",
312:       "weka.classifiers.rules.PART",
313:       "weka.classifiers.rules.part.MakeDecList",
314:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
315:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
316:       "weka.classifiers.meta.CVParameterSelection",
317:       "weka.core.FastVector",
318:       "weka.classifiers.bayes.NaiveBayesMultinomial",
319:       "weka.classifiers.lazy.LWL",
320:       "weka.classifiers.trees.DecisionStump",
321:       "weka.classifiers.rules.JRip",
322:       "weka.core.tokenizers.NGramTokenizer",
323:       "weka.classifiers.IteratedSingleClassifierEnhancer",
324:       "weka.classifiers.meta.AdditiveRegression",
325:       "weka.core.UnsupportedAttributeTypeException",
326:       "weka.classifiers.meta.AttributeSelectedClassifier",
327:       "weka.attributeSelection.CfsSubsetEval",
328:       "weka.attributeSelection.ASSearch",
329:       "weka.attributeSelection.BestFirst",
330:       "weka.filters.AllFilter",
331:       "weka.classifiers.functions.supportVector.RBFKernel",
332:       "weka.core.TechnicalInformation",
333:       "weka.core.TechnicalInformation$Type",
334:       "weka.core.TechnicalInformation$Field",
335:       "weka.classifiers.functions.SGD",
336:       "weka.attributeSelection.GainRatioAttributeEval",
337:       "weka.classifiers.trees.LMT",
338:       "weka.attributeSelection.WrapperSubsetEval",
339:       "weka.estimators.Estimator",
340:       "weka.estimators.PoissonEstimator",
341:       "weka.core.UnassignedClassException",
342:       "weka.classifiers.functions.SMO",
343:       "weka.core.neighboursearch.BallTree",
344:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
345:       "weka.classifiers.meta.LogitBoost",
346:       "weka.classifiers.functions.VotedPerceptron",
347:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
348:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.meta.RandomCommittee",
350:       "weka.classifiers.trees.RandomTree",
351:       "weka.classifiers.rules.OneR",
352:       "weka.attributeSelection.InfoGainAttributeEval",
353:       "weka.classifiers.trees.REPTree",
354:       "weka.classifiers.meta.FilteredClassifier",
355:       "weka.filters.supervised.attribute.AttributeSelection",
356:       "weka.attributeSelection.AttributeSelection",
357:       "weka.attributeSelection.GreedyStepwise",
358:       "weka.classifiers.meta.MultiClassClassifier",
359:       "weka.classifiers.functions.Logistic",
360:       "weka.classifiers.functions.MultilayerPerceptron",
361:       "weka.filters.unsupervised.attribute.NominalToBinary",
362:       "weka.classifiers.functions.neural.SigmoidUnit",
363:       "weka.classifiers.functions.neural.LinearUnit",
364:       "weka.filters.SimpleFilter",
365:       "weka.filters.SimpleStreamFilter",
366:       "weka.filters.MultiFilter",
367:       "weka.estimators.DiscreteEstimator",
368:       "weka.attributeSelection.ReliefFAttributeEval",
369:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
370:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
371:       "weka.core.matrix.Matrix",
372:       "weka.classifiers.functions.GaussianProcesses",
373:       "weka.classifiers.trees.m5.RuleNode",
374:       "weka.classifiers.meta.RegressionByDiscretization",
375:       "weka.filters.unsupervised.attribute.Discretize",
376:       "weka.classifiers.trees.m5.M5Base",
377:       "weka.classifiers.rules.M5Rules",
378:       "weka.classifiers.functions.LinearRegression",
379:       "weka.classifiers.meta.ClassificationViaRegression",
380:       "weka.classifiers.trees.M5P",
381:       "weka.attributeSelection.CorrelationAttributeEval",
382:       "weka.classifiers.meta.AdaBoostM1",
383:       "weka.core.AttributeStats",
384:       "weka.classifiers.functions.SimpleLinearRegression",
385:       "weka.classifiers.meta.RandomSubSpace",
386:       "weka.estimators.NormalEstimator",
387:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
390:       "weka.core.Queue",
391:       "weka.core.AttributeLocator",
392:       "weka.core.StringLocator",
393:       "weka.core.RelationalLocator",
394:       "weka.core.ContingencyTables",
395:       "weka.core.Queue$QueueNode",
396:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
397:       "weka.classifiers.bayes.NaiveBayesUpdateable",
398:       "weka.attributeSelection.OneRAttributeEval",
399:       "weka.classifiers.meta.MultiScheme",
400:       "weka.classifiers.lazy.KStar",
401:       "weka.classifiers.meta.Bagging",
402:       "weka.classifiers.trees.RandomForest",
403:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
404:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
405:       "weka.classifiers.functions.supportVector.Puk",
406:       "weka.estimators.MahalanobisEstimator",
407:       "weka.classifiers.functions.neural.NeuralConnection",
408:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
409:       "weka.core.Javadoc",
410:       "weka.core.TechnicalInformationHandlerJavadoc"
411:     );
412:   }
413: }

[MASTER] 14:40:24.181 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setNormalizeDocLength(true);
naiveBayesMultinomialText0.m_useStopList = true;
IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
naiveBayesMultinomialText0.setStemmer(iteratedLovinsStemmer0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.m_norm = 1.0E10;
AbstractClassifier.runClassifier(naiveBayesMultinomialText0, (String[]) null);
SerializedClassifier serializedClassifier0 = new SerializedClassifier();
serializedClassifier0.getModelFile();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
PrecomputedKernelMatrixKernel precomputedKernelMatrixKernel0 = new PrecomputedKernelMatrixKernel();
File file0 = precomputedKernelMatrixKernel0.getKernelMatrixFile();
naiveBayesMultinomialText1.setStopwords(file0);
naiveBayesMultinomialText0.getNormalizeDocLength();
naiveBayesMultinomialText0.periodicPruningTipText();
BallNode ballNode0 = new BallNode((-2689));
TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate();
BallNode.calcPivot(ballNode0, ballNode0, instances0);

[MASTER] 14:40:24.371 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_41_1575643224332/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_41_1575643224332/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding.java]]
[MASTER] 14:40:24.371 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:40:24.371 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:40:24.372 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 14:40:24.373 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_41_1575643224332/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 14:40:24 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.Random;
15: import org.evosuite.runtime.mock.java.io.MockFile;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.core.Capabilities;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_41_tmp__ESTest extends NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=3.4884858967423966
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       naiveBayesMultinomialText0.listOptions();
31:       naiveBayesMultinomialText0.setNormalizeDocLength(true);
32:       naiveBayesMultinomialText0.getRevision();
33:       Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
34:       naiveBayesMultinomialText0.m_lowercaseTokens = true;
35:       naiveBayesMultinomialText0.pruneDictionary();
36:       naiveBayesMultinomialText0.listOptions();
37:       capabilities0.capabilities();
38:       naiveBayesMultinomialText0.tokenizerTipText();
39:       naiveBayesMultinomialText0.getStemmer();
40:       String[] stringArray0 = new String[6];
41:       stringArray0[0] = "The tokenizing algorithm to use on the strings.";
42:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
43:       naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
44:       stringArray0[0] = "The tokenizing algorithm to use on the strings.";
45:       stringArray0[3] = "weka/core/Capabilities.props";
46:       stringArray0[4] = "9122";
47:       stringArray0[5] = "The tokenizing algorithm to use on the strings.";
48:       NaiveBayesMultinomialText.main(stringArray0);
49:       naiveBayesMultinomialText0.tokenizerTipText();
50:       naiveBayesMultinomialText0.getUseWordFrequencies();
51:       naiveBayesMultinomialText0.getUseStopList();
52:       naiveBayesMultinomialText0.getOptions();
53:       MockFile mockFile0 = new MockFile("The tokenizing algorithm to use on the strings.");
54:       naiveBayesMultinomialText0.setNorm((-2079.3779));
55:       naiveBayesMultinomialText0.setMinWordFrequency((-2079.3779));
56:       naiveBayesMultinomialText0.getCapabilities();
57:       naiveBayesMultinomialText0.setStopwords(mockFile0);
58:       Random.setNextRandom((-1602));
59:   }
60: }
RegularFileObject[/tmp/EvoSuite_41_1575643224332/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 14:40:24 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.CostMatrix",
95:       "weka.core.neighboursearch.BallTree",
96:       "weka.core.logging.Logger$Level",
97:       "weka.core.neighboursearch.CoverTree$DistanceNode",
98:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.core.neighboursearch.CoverTree$MyHeap",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
123:       "weka.core.BinarySparseInstance",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.neighboursearch.balltrees.BallNode",
129:       "weka.core.AdditionalMeasureProducer",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.CapabilitiesHandler",
134:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
135:       "weka.core.AbstractInstance",
136:       "weka.core.scripting.JythonObject",
137:       "weka.core.SelectedTag",
138:       "org.pentaho.packageManagement.DefaultPackage",
139:       "weka.core.neighboursearch.balltrees.BallSplitter",
140:       "weka.core.Version",
141:       "weka.core.Tag",
142:       "weka.core.neighboursearch.CoverTree",
143:       "weka.classifiers.AbstractClassifier",
144:       "weka.core.OptionHandler",
145:       "weka.core.WekaException",
146:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
147:       "weka.core.Range",
148:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
149:       "weka.core.scripting.JythonSerializableObject",
150:       "weka.classifiers.Classifier",
151:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
152:       "weka.core.Capabilities$Capability",
153:       "weka.core.SparseInstance",
154:       "org.pentaho.packageManagement.PackageManager",
155:       "weka.estimators.PoissonEstimator",
156:       "weka.core.WekaEnumeration",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.classifiers.misc.SerializedClassifier",
159:       "weka.core.stemmers.SnowballStemmer",
160:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
161:       "weka.core.stemmers.LovinsStemmer",
162:       "weka.classifiers.Evaluation",
163:       "weka.classifiers.functions.supportVector.Kernel",
164:       "weka.core.WekaPackageManager",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.neighboursearch.LinearNNSearch",
167:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
168:       "weka.core.Option",
169:       "weka.classifiers.meta.CostSensitiveClassifier",
170:       "weka.core.neighboursearch.PerformanceStats",
171:       "weka.core.Attribute",
172:       "weka.core.Stopwords",
173:       "weka.core.FastVector",
174:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
175:       "weka.core.UnassignedDatasetException",
176:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
177:       "weka.classifiers.RandomizableClassifier",
178:       "weka.classifiers.SingleClassifierEnhancer",
179:       "weka.core.RevisionUtils",
180:       "weka.core.Instance",
181:       "weka.estimators.Estimator",
182:       "weka.core.ProtectedProperties",
183:       "weka.core.AttributeStats",
184:       "weka.core.WeightedInstancesHandler",
185:       "weka.core.neighboursearch.NearestNeighbourSearch",
186:       "weka.core.neighboursearch.covertrees.Stack",
187:       "weka.core.Randomizable",
188:       "weka.core.EuclideanDistance",
189:       "weka.core.Instances",
190:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
191:       "weka.core.UnassignedClassException",
192:       "weka.classifiers.rules.ZeroR",
193:       "weka.core.stemmers.IteratedLovinsStemmer",
194:       "weka.core.TechnicalInformation",
195:       "weka.core.UnsupportedAttributeTypeException",
196:       "weka.classifiers.Sourcable",
197:       "weka.core.RevisionHandler",
198:       "weka.classifiers.evaluation.output.prediction.PlainText",
199:       "weka.core.neighboursearch.TreePerformanceStats",
200:       "weka.core.xml.XMLSerialization",
201:       "weka.classifiers.xml.XMLClassifier"
202:     );
203:   } 
204: 
205:   private static void resetClasses() {
206:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding.class.getClassLoader()); 
207: 
208:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
209:       "weka.classifiers.AbstractClassifier",
210:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
211:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
212:       "weka.core.Capabilities$Capability",
213:       "weka.core.tokenizers.Tokenizer",
214:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
215:       "weka.core.tokenizers.WordTokenizer",
216:       "weka.core.stemmers.NullStemmer",
217:       "weka.core.Option",
218:       "weka.core.AbstractInstance",
219:       "weka.core.SparseInstance",
220:       "weka.core.Utils",
221:       "weka.core.UnassignedDatasetException",
222:       "weka.core.TestInstances",
223:       "weka.core.Attribute",
224:       "weka.core.ProtectedProperties",
225:       "weka.core.Instances",
226:       "weka.core.DenseInstance",
227:       "weka.classifiers.bayes.BayesNet",
228:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
229:       "weka.core.Tag",
230:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
231:       "weka.classifiers.bayes.net.search.local.K2",
232:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
233:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
234:       "weka.core.neighboursearch.balltrees.BallNode",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.classifiers.functions.SGDText",
237:       "weka.classifiers.Evaluation",
238:       "weka.core.BinarySparseInstance",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.FindWithCapabilities",
246:       "weka.core.SingleIndex",
247:       "weka.core.ClassDiscovery",
248:       "weka.core.SerializedObject",
249:       "weka.core.stemmers.SnowballStemmer",
250:       "weka.core.tokenizers.AlphabeticTokenizer",
251:       "weka.classifiers.misc.SerializedClassifier",
252:       "weka.attributeSelection.ASEvaluation",
253:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
254:       "weka.attributeSelection.PrincipalComponents",
255:       "weka.filters.Filter",
256:       "weka.filters.supervised.attribute.Discretize",
257:       "weka.core.Range",
258:       "weka.core.stemmers.LovinsStemmer",
259:       "weka.core.stemmers.IteratedLovinsStemmer",
260:       "weka.core.Stopwords",
261:       "weka.core.RevisionUtils",
262:       "weka.core.neighboursearch.NearestNeighbourSearch",
263:       "weka.core.neighboursearch.KDTree",
264:       "weka.core.NormalizableDistance",
265:       "weka.core.EuclideanDistance",
266:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
267:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
268:       "weka.core.neighboursearch.CoverTree",
269:       "weka.core.WekaEnumeration",
270:       "weka.core.Attribute$1",
271:       "weka.classifiers.lazy.IBk",
272:       "weka.core.neighboursearch.LinearNNSearch",
273:       "weka.classifiers.functions.supportVector.Kernel",
274:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
275:       "weka.core.WekaException",
276:       "weka.classifiers.SingleClassifierEnhancer",
277:       "weka.classifiers.misc.InputMappedClassifier",
278:       "weka.classifiers.rules.ZeroR",
279:       "weka.classifiers.bayes.net.BIFReader",
280:       "weka.core.converters.ConverterUtils$DataSource",
281:       "weka.core.converters.AbstractLoader",
282:       "weka.core.converters.AbstractFileLoader",
283:       "weka.core.converters.ArffLoader",
284:       "weka.core.converters.ArffLoader$ArffReader",
285:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
286:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
287:       "weka.core.neighboursearch.balltrees.BallSplitter",
288:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
289:       "weka.classifiers.functions.SimpleLogistic",
290:       "weka.classifiers.functions.supportVector.StringKernel",
291:       "weka.classifiers.functions.SMOreg",
292:       "weka.classifiers.functions.supportVector.RegOptimizer",
293:       "weka.classifiers.functions.supportVector.RegSMO",
294:       "weka.classifiers.functions.supportVector.RegSMOImproved",
295:       "weka.classifiers.functions.supportVector.CachedKernel",
296:       "weka.classifiers.functions.supportVector.PolyKernel",
297:       "weka.classifiers.trees.J48",
298:       "weka.classifiers.trees.j48.ClassifierTree",
299:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
300:       "weka.classifiers.MultipleClassifiersCombiner",
301:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
302:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
303:       "weka.classifiers.meta.Stacking",
304:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
305:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
306:       "weka.classifiers.meta.CostSensitiveClassifier",
307:       "weka.classifiers.CostMatrix",
308:       "weka.core.stemmers.Stemming",
309:       "weka.classifiers.bayes.NaiveBayes",
310:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
311:       "weka.classifiers.meta.Vote",
312:       "weka.classifiers.rules.PART",
313:       "weka.classifiers.rules.part.MakeDecList",
314:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
315:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
316:       "weka.classifiers.meta.CVParameterSelection",
317:       "weka.core.FastVector",
318:       "weka.classifiers.bayes.NaiveBayesMultinomial",
319:       "weka.classifiers.lazy.LWL",
320:       "weka.classifiers.trees.DecisionStump",
321:       "weka.classifiers.rules.JRip",
322:       "weka.core.tokenizers.NGramTokenizer",
323:       "weka.classifiers.IteratedSingleClassifierEnhancer",
324:       "weka.classifiers.meta.AdditiveRegression",
325:       "weka.core.UnsupportedAttributeTypeException",
326:       "weka.classifiers.meta.AttributeSelectedClassifier",
327:       "weka.attributeSelection.CfsSubsetEval",
328:       "weka.attributeSelection.ASSearch",
329:       "weka.attributeSelection.BestFirst",
330:       "weka.filters.AllFilter",
331:       "weka.classifiers.functions.supportVector.RBFKernel",
332:       "weka.core.TechnicalInformation",
333:       "weka.core.TechnicalInformation$Type",
334:       "weka.core.TechnicalInformation$Field",
335:       "weka.classifiers.functions.SGD",
336:       "weka.attributeSelection.GainRatioAttributeEval",
337:       "weka.classifiers.trees.LMT",
338:       "weka.attributeSelection.WrapperSubsetEval",
339:       "weka.estimators.Estimator",
340:       "weka.estimators.PoissonEstimator",
341:       "weka.core.UnassignedClassException",
342:       "weka.classifiers.functions.SMO",
343:       "weka.core.neighboursearch.BallTree",
344:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
345:       "weka.classifiers.meta.LogitBoost",
346:       "weka.classifiers.functions.VotedPerceptron",
347:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
348:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.meta.RandomCommittee",
350:       "weka.classifiers.trees.RandomTree",
351:       "weka.classifiers.rules.OneR",
352:       "weka.attributeSelection.InfoGainAttributeEval",
353:       "weka.classifiers.trees.REPTree",
354:       "weka.classifiers.meta.FilteredClassifier",
355:       "weka.filters.supervised.attribute.AttributeSelection",
356:       "weka.attributeSelection.AttributeSelection",
357:       "weka.attributeSelection.GreedyStepwise",
358:       "weka.classifiers.meta.MultiClassClassifier",
359:       "weka.classifiers.functions.Logistic",
360:       "weka.classifiers.functions.MultilayerPerceptron",
361:       "weka.filters.unsupervised.attribute.NominalToBinary",
362:       "weka.classifiers.functions.neural.SigmoidUnit",
363:       "weka.classifiers.functions.neural.LinearUnit",
364:       "weka.filters.SimpleFilter",
365:       "weka.filters.SimpleStreamFilter",
366:       "weka.filters.MultiFilter",
367:       "weka.estimators.DiscreteEstimator",
368:       "weka.attributeSelection.ReliefFAttributeEval",
369:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
370:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
371:       "weka.core.matrix.Matrix",
372:       "weka.classifiers.functions.GaussianProcesses",
373:       "weka.classifiers.trees.m5.RuleNode",
374:       "weka.classifiers.meta.RegressionByDiscretization",
375:       "weka.filters.unsupervised.attribute.Discretize",
376:       "weka.classifiers.trees.m5.M5Base",
377:       "weka.classifiers.rules.M5Rules",
378:       "weka.classifiers.functions.LinearRegression",
379:       "weka.classifiers.meta.ClassificationViaRegression",
380:       "weka.classifiers.trees.M5P",
381:       "weka.attributeSelection.CorrelationAttributeEval",
382:       "weka.classifiers.meta.AdaBoostM1",
383:       "weka.core.AttributeStats",
384:       "weka.classifiers.functions.SimpleLinearRegression",
385:       "weka.classifiers.meta.RandomSubSpace",
386:       "weka.estimators.NormalEstimator",
387:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
390:       "weka.core.Queue",
391:       "weka.core.AttributeLocator",
392:       "weka.core.StringLocator",
393:       "weka.core.RelationalLocator",
394:       "weka.core.ContingencyTables",
395:       "weka.core.Queue$QueueNode",
396:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
397:       "weka.classifiers.bayes.NaiveBayesUpdateable",
398:       "weka.attributeSelection.OneRAttributeEval",
399:       "weka.classifiers.meta.MultiScheme",
400:       "weka.classifiers.lazy.KStar",
401:       "weka.classifiers.meta.Bagging",
402:       "weka.classifiers.trees.RandomForest",
403:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
404:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
405:       "weka.classifiers.functions.supportVector.Puk",
406:       "weka.estimators.MahalanobisEstimator",
407:       "weka.classifiers.functions.neural.NeuralConnection",
408:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
409:       "weka.core.Javadoc",
410:       "weka.core.TechnicalInformationHandlerJavadoc"
411:     );
412:   }
413: }

[MASTER] 14:40:24.374 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.listOptions();
naiveBayesMultinomialText0.setNormalizeDocLength(true);
naiveBayesMultinomialText0.getRevision();
Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
naiveBayesMultinomialText0.m_lowercaseTokens = true;
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.listOptions();
capabilities0.capabilities();
naiveBayesMultinomialText0.tokenizerTipText();
naiveBayesMultinomialText0.getStemmer();
String[] stringArray0 = new String[6];
stringArray0[0] = "The tokenizing algorithm to use on the strings.";
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
stringArray0[0] = "The tokenizing algorithm to use on the strings.";
stringArray0[3] = "weka/core/Capabilities.props";
stringArray0[4] = "9122";
stringArray0[5] = "The tokenizing algorithm to use on the strings.";
NaiveBayesMultinomialText.main(stringArray0);
naiveBayesMultinomialText0.tokenizerTipText();
naiveBayesMultinomialText0.getUseWordFrequencies();
naiveBayesMultinomialText0.getUseStopList();
naiveBayesMultinomialText0.getOptions();
MockFile mockFile0 = new MockFile("The tokenizing algorithm to use on the strings.");
naiveBayesMultinomialText0.setNorm((-2079.3779));
naiveBayesMultinomialText0.setMinWordFrequency((-2079.3779));
naiveBayesMultinomialText0.getCapabilities();
naiveBayesMultinomialText0.setStopwords(mockFile0);
Random.setNextRandom((-1602));

[MASTER] 14:40:24.479 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_44_1575643224448/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_44_1575643224448/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding.java]]
[MASTER] 14:40:24.479 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:40:24.479 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:40:24.480 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 14:40:24.480 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 14:40:24.480 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_44_1575643224448/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 14:40:24 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.System;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.Instances;
17: import weka.core.TestInstances;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_44_tmp__ESTest extends NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=2.5766482455904502
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       naiveBayesMultinomialText0.setNormalizeDocLength(true);
30:       naiveBayesMultinomialText0.m_useStopList = false;
31:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
32:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
33:       naiveBayesMultinomialText0.m_norm = 9.999999998111776E9;
34:       naiveBayesMultinomialText0.setUseWordFrequencies(true);
35:       TestInstances testInstances0 = new TestInstances();
36:       Instances instances0 = testInstances0.generate();
37:       naiveBayesMultinomialText0.buildClassifier(instances0);
38:       naiveBayesMultinomialText0.stopwordsTipText();
39:       naiveBayesMultinomialText0.toString();
40:       naiveBayesMultinomialText0.getNorm();
41:       System.setCurrentTimeMillis(12);
42:   }
43: }
RegularFileObject[/tmp/EvoSuite_44_1575643224448/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 14:40:24 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.CostMatrix",
95:       "weka.core.neighboursearch.BallTree",
96:       "weka.core.logging.Logger$Level",
97:       "weka.core.neighboursearch.CoverTree$DistanceNode",
98:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.core.neighboursearch.CoverTree$MyHeap",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
123:       "weka.core.BinarySparseInstance",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.neighboursearch.balltrees.BallNode",
129:       "weka.core.AdditionalMeasureProducer",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.CapabilitiesHandler",
134:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
135:       "weka.core.AbstractInstance",
136:       "weka.core.scripting.JythonObject",
137:       "weka.core.SelectedTag",
138:       "org.pentaho.packageManagement.DefaultPackage",
139:       "weka.core.neighboursearch.balltrees.BallSplitter",
140:       "weka.core.Version",
141:       "weka.core.Tag",
142:       "weka.core.neighboursearch.CoverTree",
143:       "weka.classifiers.AbstractClassifier",
144:       "weka.core.OptionHandler",
145:       "weka.core.WekaException",
146:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
147:       "weka.core.Range",
148:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
149:       "weka.core.scripting.JythonSerializableObject",
150:       "weka.classifiers.Classifier",
151:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
152:       "weka.core.Capabilities$Capability",
153:       "weka.core.SparseInstance",
154:       "org.pentaho.packageManagement.PackageManager",
155:       "weka.estimators.PoissonEstimator",
156:       "weka.core.WekaEnumeration",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.classifiers.misc.SerializedClassifier",
159:       "weka.core.stemmers.SnowballStemmer",
160:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
161:       "weka.core.stemmers.LovinsStemmer",
162:       "weka.classifiers.Evaluation",
163:       "weka.classifiers.functions.supportVector.Kernel",
164:       "weka.core.WekaPackageManager",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.neighboursearch.LinearNNSearch",
167:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
168:       "weka.core.Option",
169:       "weka.classifiers.meta.CostSensitiveClassifier",
170:       "weka.core.neighboursearch.PerformanceStats",
171:       "weka.core.Attribute",
172:       "weka.core.Stopwords",
173:       "weka.core.FastVector",
174:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
175:       "weka.core.UnassignedDatasetException",
176:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
177:       "weka.classifiers.RandomizableClassifier",
178:       "weka.classifiers.SingleClassifierEnhancer",
179:       "weka.core.RevisionUtils",
180:       "weka.core.Instance",
181:       "weka.estimators.Estimator",
182:       "weka.core.ProtectedProperties",
183:       "weka.core.AttributeStats",
184:       "weka.core.WeightedInstancesHandler",
185:       "weka.core.neighboursearch.NearestNeighbourSearch",
186:       "weka.core.neighboursearch.covertrees.Stack",
187:       "weka.core.Randomizable",
188:       "weka.core.EuclideanDistance",
189:       "weka.core.Instances",
190:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
191:       "weka.core.UnassignedClassException",
192:       "weka.classifiers.rules.ZeroR",
193:       "weka.core.stemmers.IteratedLovinsStemmer",
194:       "weka.core.TechnicalInformation",
195:       "weka.core.UnsupportedAttributeTypeException",
196:       "weka.classifiers.Sourcable",
197:       "weka.core.RevisionHandler",
198:       "weka.classifiers.evaluation.output.prediction.PlainText",
199:       "weka.core.neighboursearch.TreePerformanceStats",
200:       "weka.core.xml.XMLSerialization",
201:       "weka.classifiers.xml.XMLClassifier"
202:     );
203:   } 
204: 
205:   private static void resetClasses() {
206:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding.class.getClassLoader()); 
207: 
208:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
209:       "weka.classifiers.AbstractClassifier",
210:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
211:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
212:       "weka.core.Capabilities$Capability",
213:       "weka.core.tokenizers.Tokenizer",
214:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
215:       "weka.core.tokenizers.WordTokenizer",
216:       "weka.core.stemmers.NullStemmer",
217:       "weka.core.Option",
218:       "weka.core.AbstractInstance",
219:       "weka.core.SparseInstance",
220:       "weka.core.Utils",
221:       "weka.core.UnassignedDatasetException",
222:       "weka.core.TestInstances",
223:       "weka.core.Attribute",
224:       "weka.core.ProtectedProperties",
225:       "weka.core.Instances",
226:       "weka.core.DenseInstance",
227:       "weka.classifiers.bayes.BayesNet",
228:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
229:       "weka.core.Tag",
230:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
231:       "weka.classifiers.bayes.net.search.local.K2",
232:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
233:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
234:       "weka.core.neighboursearch.balltrees.BallNode",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.classifiers.functions.SGDText",
237:       "weka.classifiers.Evaluation",
238:       "weka.core.BinarySparseInstance",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.FindWithCapabilities",
246:       "weka.core.SingleIndex",
247:       "weka.core.ClassDiscovery",
248:       "weka.core.SerializedObject",
249:       "weka.core.stemmers.SnowballStemmer",
250:       "weka.core.tokenizers.AlphabeticTokenizer",
251:       "weka.classifiers.misc.SerializedClassifier",
252:       "weka.attributeSelection.ASEvaluation",
253:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
254:       "weka.attributeSelection.PrincipalComponents",
255:       "weka.filters.Filter",
256:       "weka.filters.supervised.attribute.Discretize",
257:       "weka.core.Range",
258:       "weka.core.stemmers.LovinsStemmer",
259:       "weka.core.stemmers.IteratedLovinsStemmer",
260:       "weka.core.Stopwords",
261:       "weka.core.RevisionUtils",
262:       "weka.core.neighboursearch.NearestNeighbourSearch",
263:       "weka.core.neighboursearch.KDTree",
264:       "weka.core.NormalizableDistance",
265:       "weka.core.EuclideanDistance",
266:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
267:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
268:       "weka.core.neighboursearch.CoverTree",
269:       "weka.core.WekaEnumeration",
270:       "weka.core.Attribute$1",
271:       "weka.classifiers.lazy.IBk",
272:       "weka.core.neighboursearch.LinearNNSearch",
273:       "weka.classifiers.functions.supportVector.Kernel",
274:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
275:       "weka.core.WekaException",
276:       "weka.classifiers.SingleClassifierEnhancer",
277:       "weka.classifiers.misc.InputMappedClassifier",
278:       "weka.classifiers.rules.ZeroR",
279:       "weka.classifiers.bayes.net.BIFReader",
280:       "weka.core.converters.ConverterUtils$DataSource",
281:       "weka.core.converters.AbstractLoader",
282:       "weka.core.converters.AbstractFileLoader",
283:       "weka.core.converters.ArffLoader",
284:       "weka.core.converters.ArffLoader$ArffReader",
285:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
286:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
287:       "weka.core.neighboursearch.balltrees.BallSplitter",
288:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
289:       "weka.classifiers.functions.SimpleLogistic",
290:       "weka.classifiers.functions.supportVector.StringKernel",
291:       "weka.classifiers.functions.SMOreg",
292:       "weka.classifiers.functions.supportVector.RegOptimizer",
293:       "weka.classifiers.functions.supportVector.RegSMO",
294:       "weka.classifiers.functions.supportVector.RegSMOImproved",
295:       "weka.classifiers.functions.supportVector.CachedKernel",
296:       "weka.classifiers.functions.supportVector.PolyKernel",
297:       "weka.classifiers.trees.J48",
298:       "weka.classifiers.trees.j48.ClassifierTree",
299:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
300:       "weka.classifiers.MultipleClassifiersCombiner",
301:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
302:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
303:       "weka.classifiers.meta.Stacking",
304:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
305:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
306:       "weka.classifiers.meta.CostSensitiveClassifier",
307:       "weka.classifiers.CostMatrix",
308:       "weka.core.stemmers.Stemming",
309:       "weka.classifiers.bayes.NaiveBayes",
310:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
311:       "weka.classifiers.meta.Vote",
312:       "weka.classifiers.rules.PART",
313:       "weka.classifiers.rules.part.MakeDecList",
314:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
315:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
316:       "weka.classifiers.meta.CVParameterSelection",
317:       "weka.core.FastVector",
318:       "weka.classifiers.bayes.NaiveBayesMultinomial",
319:       "weka.classifiers.lazy.LWL",
320:       "weka.classifiers.trees.DecisionStump",
321:       "weka.classifiers.rules.JRip",
322:       "weka.core.tokenizers.NGramTokenizer",
323:       "weka.classifiers.IteratedSingleClassifierEnhancer",
324:       "weka.classifiers.meta.AdditiveRegression",
325:       "weka.core.UnsupportedAttributeTypeException",
326:       "weka.classifiers.meta.AttributeSelectedClassifier",
327:       "weka.attributeSelection.CfsSubsetEval",
328:       "weka.attributeSelection.ASSearch",
329:       "weka.attributeSelection.BestFirst",
330:       "weka.filters.AllFilter",
331:       "weka.classifiers.functions.supportVector.RBFKernel",
332:       "weka.core.TechnicalInformation",
333:       "weka.core.TechnicalInformation$Type",
334:       "weka.core.TechnicalInformation$Field",
335:       "weka.classifiers.functions.SGD",
336:       "weka.attributeSelection.GainRatioAttributeEval",
337:       "weka.classifiers.trees.LMT",
338:       "weka.attributeSelection.WrapperSubsetEval",
339:       "weka.estimators.Estimator",
340:       "weka.estimators.PoissonEstimator",
341:       "weka.core.UnassignedClassException",
342:       "weka.classifiers.functions.SMO",
343:       "weka.core.neighboursearch.BallTree",
344:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
345:       "weka.classifiers.meta.LogitBoost",
346:       "weka.classifiers.functions.VotedPerceptron",
347:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
348:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.meta.RandomCommittee",
350:       "weka.classifiers.trees.RandomTree",
351:       "weka.classifiers.rules.OneR",
352:       "weka.attributeSelection.InfoGainAttributeEval",
353:       "weka.classifiers.trees.REPTree",
354:       "weka.classifiers.meta.FilteredClassifier",
355:       "weka.filters.supervised.attribute.AttributeSelection",
356:       "weka.attributeSelection.AttributeSelection",
357:       "weka.attributeSelection.GreedyStepwise",
358:       "weka.classifiers.meta.MultiClassClassifier",
359:       "weka.classifiers.functions.Logistic",
360:       "weka.classifiers.functions.MultilayerPerceptron",
361:       "weka.filters.unsupervised.attribute.NominalToBinary",
362:       "weka.classifiers.functions.neural.SigmoidUnit",
363:       "weka.classifiers.functions.neural.LinearUnit",
364:       "weka.filters.SimpleFilter",
365:       "weka.filters.SimpleStreamFilter",
366:       "weka.filters.MultiFilter",
367:       "weka.estimators.DiscreteEstimator",
368:       "weka.attributeSelection.ReliefFAttributeEval",
369:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
370:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
371:       "weka.core.matrix.Matrix",
372:       "weka.classifiers.functions.GaussianProcesses",
373:       "weka.classifiers.trees.m5.RuleNode",
374:       "weka.classifiers.meta.RegressionByDiscretization",
375:       "weka.filters.unsupervised.attribute.Discretize",
376:       "weka.classifiers.trees.m5.M5Base",
377:       "weka.classifiers.rules.M5Rules",
378:       "weka.classifiers.functions.LinearRegression",
379:       "weka.classifiers.meta.ClassificationViaRegression",
380:       "weka.classifiers.trees.M5P",
381:       "weka.attributeSelection.CorrelationAttributeEval",
382:       "weka.classifiers.meta.AdaBoostM1",
383:       "weka.core.AttributeStats",
384:       "weka.classifiers.functions.SimpleLinearRegression",
385:       "weka.classifiers.meta.RandomSubSpace",
386:       "weka.estimators.NormalEstimator",
387:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
390:       "weka.core.Queue",
391:       "weka.core.AttributeLocator",
392:       "weka.core.StringLocator",
393:       "weka.core.RelationalLocator",
394:       "weka.core.ContingencyTables",
395:       "weka.core.Queue$QueueNode",
396:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
397:       "weka.classifiers.bayes.NaiveBayesUpdateable",
398:       "weka.attributeSelection.OneRAttributeEval",
399:       "weka.classifiers.meta.MultiScheme",
400:       "weka.classifiers.lazy.KStar",
401:       "weka.classifiers.meta.Bagging",
402:       "weka.classifiers.trees.RandomForest",
403:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
404:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
405:       "weka.classifiers.functions.supportVector.Puk",
406:       "weka.estimators.MahalanobisEstimator",
407:       "weka.classifiers.functions.neural.NeuralConnection",
408:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
409:       "weka.core.Javadoc",
410:       "weka.core.TechnicalInformationHandlerJavadoc"
411:     );
412:   }
413: }

[MASTER] 14:40:24.481 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setNormalizeDocLength(true);
naiveBayesMultinomialText0.m_useStopList = false;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.m_norm = 9.999999998111776E9;
naiveBayesMultinomialText0.setUseWordFrequencies(true);
TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate();
naiveBayesMultinomialText0.buildClassifier(instances0);
naiveBayesMultinomialText0.stopwordsTipText();
naiveBayesMultinomialText0.toString();
naiveBayesMultinomialText0.getNorm();
System.setCurrentTimeMillis(12);

[MASTER] 14:40:28.546 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 14:40:29.808 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1029/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14423
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 14:45:52.179 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:45:52.209 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:45:52.217 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 14:45:52.370 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 14:45:52.389 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 14:45:52.392 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1029
* Starting evolution
* Search finished after 123s and 179 generations, 59921 statements, best individual has fitness: 8064.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 44%
* Total number of goals: 370
* Number of covered goals: 164
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 32%
* Total number of goals: 242
* Number of covered goals: 77
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 18
* Number of covered goals: 18
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 41%
* Total number of goals: 713
* Number of covered goals: 291
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 42%
* Total number of goals: 72
* Number of covered goals: 30
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 45
* Number of covered goals: 43
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 32%
* Total number of goals: 242
* Number of covered goals: 77
* Generated 45 tests with total length 287
* Resulting test suite's coverage: 42% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 14%
* Compiling and checking tests
[MASTER] 14:49:20.697 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 14:49:21.284 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1029/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14421
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 14:52:54.193 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:52:54.197 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:52:54.198 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 14:52:54.882 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 14:52:55.493 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 14:52:55.495 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 14:52:57.433 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 14:52:57.465 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 14:52:57.466 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 14:52:57.466 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 14:52:57.466 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 14:52:57.467 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 14:52:57.467 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 14:52:57.468 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 14:52:57.469 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 14:52:57.527 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 14:52:57.540 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1029
* Starting evolution
[MASTER] 14:53:00.782 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3618
[MASTER] 14:53:00.788 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3620
[MASTER] 14:53:00.788 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3621
[MASTER] 14:53:00.788 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3622
[MASTER] 14:53:00.788 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3625
[MASTER] 14:53:00.788 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3626
[MASTER] 14:53:00.788 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3627
[MASTER] 14:53:00.788 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3628
[MASTER] 14:53:00.788 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3629
[MASTER] 14:53:00.788 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3630
[MASTER] 14:53:00.788 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3631
[MASTER] 14:53:00.788 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3635
[MASTER] 14:53:00.790 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: I39 Branch 355 IF_ICMPGE L3625 - false
[MASTER] 14:53:00.790 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: I59 Branch 356 IFLE L3628 - true
[MASTER] 14:53:00.790 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: I59 Branch 356 IFLE L3628 - false
[MASTER] 14:53:00.792 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 10436: weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;:3625 - ReplaceComparisonOperator >= -> -1
[MASTER] 14:53:00.792 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 10449: weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;:3628 - ReplaceComparisonOperator <= -> -1
[MASTER] 14:53:00.792 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 10450: weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;:3628 - ReplaceComparisonOperator <= -> ==
[MASTER] 14:53:00.793 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;:NonEmptyString
[MASTER] 14:53:00.796 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;
[MASTER] 14:53:00.798 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;
[MASTER] 14:53:00.814 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: I39 Branch 355 IF_ICMPGE L3625 - false in context: 
[MASTER] 14:53:00.814 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: I59 Branch 356 IFLE L3628 - true in context: 
[MASTER] 14:53:00.815 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: I59 Branch 356 IFLE L3628 - false in context: 
[MASTER] 14:53:01.412 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 14:54:19.046 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 131s and 51 generations, 33984 statements, best individual has fitness: 17048.0
[MASTER] 14:55:12.049 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 13 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 48%
* Total number of goals: 1378
* Number of covered goals: 656
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 40%
* Total number of goals: 809
* Number of covered goals: 322
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 44
* Number of covered goals: 44
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 59%
* Total number of goals: 424
* Number of covered goals: 251
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 20%
* Total number of goals: 278
* Number of covered goals: 56
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 95%
* Total number of goals: 103
* Number of covered goals: 98
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 94%
* Total number of goals: 103
* Number of covered goals: 97
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 37%
* Total number of goals: 809
* Number of covered goals: 302
* Generated 127 tests with total length 1720
* Resulting test suite's coverage: 46% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
[MASTER] 15:02:45.974 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_64_1575644565941/weka/classifiers/Evaluation_64_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_64_1575644565941/weka/classifiers/Evaluation_64_tmp__ESTest_scaffolding.java]]
[MASTER] 15:02:45.974 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 15:02:45.974 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 15:02:45.978 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   variable double1
  location: class weka.classifiers.Evaluation_64_tmp__ESTest: 49
[MASTER] 15:02:45.980 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_64_1575644565941/weka/classifiers/Evaluation_64_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 15:02:45 GMT 2019
4:  */
5: 
6: package weka.classifiers;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import org.evosuite.runtime.EvoRunner;
11: import org.evosuite.runtime.EvoRunnerParameters;
12: import org.evosuite.runtime.mock.java.util.MockRandom;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.CostMatrix;
15: import weka.classifiers.Evaluation;
16: import weka.classifiers.functions.GaussianProcesses;
17: import weka.classifiers.functions.LinearRegression;
18: import weka.classifiers.meta.CostSensitiveClassifier;
19: import weka.core.Instances;
20: import weka.core.TestInstances;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class Evaluation_64_tmp__ESTest extends Evaluation_64_tmp__ESTest_scaffolding {
24: 
25:   /**
26:   //Test case number: 0
27:   /*Coverage entropy=0.4615384615384615
28:   */
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       TestInstances testInstances0 = new TestInstances();
32:       Instances instances0 = testInstances0.generate();
33:       CostSensitiveClassifier costSensitiveClassifier0 = new CostSensitiveClassifier();
34:       MockRandom mockRandom0 = new MockRandom(1827L);
35:       CostMatrix costMatrix0 = new CostMatrix(2);
36:       Evaluation evaluation0 = new Evaluation(instances0, costMatrix0);
37:       GaussianProcesses gaussianProcesses0 = new GaussianProcesses();
38:       double[] doubleArray0 = new double[5];
39:       doubleArray0[0] = (double) (-1);
40:       doubleArray0[1] = (double) (-2);
41:       GaussianProcesses gaussianProcesses1 = new GaussianProcesses();
42:       LinearRegression linearRegression0 = new LinearRegression();
43:       Evaluation.getGlobalInfo(linearRegression0);
44:       CostSensitiveClassifier costSensitiveClassifier1 = new CostSensitiveClassifier();
45:       TestInstances testInstances1 = new TestInstances();
46:       testInstances0.assign(testInstances1);
47:       evaluation0.weightedFalseNegativeRate();
48:       double double0 = evaluation0.m_TotalCost;
49:       assertNotEquals(double0, double1, 0.01);
50:   }
51: }
RegularFileObject[/tmp/EvoSuite_64_1575644565941/weka/classifiers/Evaluation_64_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 15:02:45 GMT 2019
5:  */
6: 
7: package weka.classifiers;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class Evaluation_64_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.Evaluation"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Evaluation_64_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.converters.ConverterUtils",
91:       "weka.filters.unsupervised.attribute.NominalToBinary",
92:       "weka.core.converters.TextDirectoryLoader",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.trees.m5.M5Base",
97:       "weka.attributeSelection.SubsetEvaluator",
98:       "weka.classifiers.CostMatrix",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.attributeSelection.CfsSubsetEval",
103:       "weka.core.DenseInstance",
104:       "weka.classifiers.trees.J48",
105:       "weka.classifiers.functions.LinearRegression",
106:       "weka.classifiers.functions.SimpleLinearRegression",
107:       "weka.classifiers.evaluation.output.prediction.CSV",
108:       "weka.core.converters.IncrementalConverter",
109:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
110:       "org.pentaho.packageManagement.DefaultPackageManager",
111:       "weka.estimators.UnivariateIntervalEstimator",
112:       "org.bounce.net.DefaultAuthenticator",
113:       "weka.classifiers.bayes.NaiveBayes",
114:       "weka.filters.SimpleFilter",
115:       "weka.filters.SimpleStreamFilter",
116:       "weka.estimators.IncrementalEstimator",
117:       "weka.core.EnvironmentHandler",
118:       "weka.classifiers.trees.j48.C45ModelSelection",
119:       "weka.classifiers.trees.m5.RuleNode",
120:       "weka.core.RelationalLocator",
121:       "weka.core.Utils",
122:       "weka.classifiers.meta.AdaBoostM1",
123:       "weka.core.converters.XRFFLoader",
124:       "weka.core.CustomDisplayStringProvider",
125:       "weka.core.tokenizers.Tokenizer",
126:       "weka.core.NoSupportForMissingValuesException",
127:       "weka.classifiers.UpdateableClassifier",
128:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
129:       "weka.core.TechnicalInformation$Type",
130:       "weka.core.MultiInstanceCapabilitiesHandler",
131:       "weka.core.Copyable",
132:       "weka.core.Capabilities",
133:       "weka.filters.supervised.attribute.NominalToBinary",
134:       "weka.core.BinarySparseInstance",
135:       "weka.core.AttributeLocator",
136:       "weka.core.converters.SVMLightLoader",
137:       "weka.classifiers.functions.supportVector.CachedKernel",
138:       "weka.core.SerializedObject",
139:       "weka.clusterers.UpdateableClusterer",
140:       "weka.core.Summarizable",
141:       "weka.attributeSelection.BestFirst",
142:       "weka.classifiers.trees.j48.ModelSelection",
143:       "weka.core.AdditionalMeasureProducer",
144:       "org.pentaho.packageManagement.PackageManager$1",
145:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
146:       "weka.core.Drawable",
147:       "weka.core.matrix.Matrix",
148:       "weka.classifiers.ConditionalDensityEstimator",
149:       "weka.core.CapabilitiesHandler",
150:       "weka.core.AttributeExpression",
151:       "weka.classifiers.trees.REPTree",
152:       "weka.attributeSelection.ASEvaluation",
153:       "weka.core.AbstractInstance",
154:       "weka.classifiers.lazy.kstar.KStarConstants",
155:       "weka.core.converters.LibSVMLoader",
156:       "weka.core.SelectedTag",
157:       "org.pentaho.packageManagement.DefaultPackage",
158:       "weka.estimators.DiscreteEstimator",
159:       "weka.classifiers.bayes.NaiveBayesUpdateable",
160:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
161:       "weka.classifiers.misc.InputMappedClassifier",
162:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
163:       "weka.core.Version",
164:       "weka.classifiers.evaluation.Prediction",
165:       "weka.core.converters.AbstractLoader",
166:       "weka.filters.AllFilter",
167:       "weka.filters.unsupervised.attribute.RemoveUseless",
168:       "weka.core.converters.BatchConverter",
169:       "weka.core.Tag",
170:       "weka.classifiers.IteratedSingleClassifierEnhancer",
171:       "weka.classifiers.trees.j48.BinC45ModelSelection",
172:       "weka.classifiers.evaluation.NominalPrediction",
173:       "weka.classifiers.AbstractClassifier",
174:       "weka.estimators.UnivariateDensityEstimator",
175:       "weka.core.converters.ArffLoader",
176:       "weka.classifiers.meta.Stacking",
177:       "weka.core.OptionHandler",
178:       "weka.core.WekaException",
179:       "weka.filters.StreamableFilter",
180:       "weka.core.Range",
181:       "weka.core.Attribute$1",
182:       "weka.core.PartitionGenerator",
183:       "weka.classifiers.Classifier",
184:       "weka.core.Capabilities$Capability",
185:       "weka.core.SparseInstance",
186:       "org.pentaho.packageManagement.PackageManager",
187:       "weka.core.WekaEnumeration",
188:       "weka.classifiers.trees.j48.ClassifierTree",
189:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
190:       "weka.classifiers.functions.VotedPerceptron",
191:       "weka.classifiers.trees.j48.PruneableClassifierTree",
192:       "weka.classifiers.meta.Bagging",
193:       "weka.classifiers.Evaluation",
194:       "weka.classifiers.functions.supportVector.Kernel",
195:       "weka.attributeSelection.ASSearch",
196:       "weka.core.WekaPackageManager",
197:       "weka.filters.SupervisedFilter",
198:       "weka.classifiers.functions.SMO",
199:       "weka.classifiers.evaluation.ThresholdCurve",
200:       "weka.core.TechnicalInformationHandler",
201:       "weka.core.converters.URLSourcedLoader",
202:       "weka.core.converters.FileSourcedConverter",
203:       "weka.attributeSelection.StartSetHandler",
204:       "weka.classifiers.meta.CostSensitiveClassifier",
205:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
206:       "weka.core.Option",
207:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
208:       "weka.filters.Sourcable",
209:       "weka.core.Attribute",
210:       "weka.core.FastVector",
211:       "weka.estimators.UnivariateKernelEstimator",
212:       "weka.classifiers.MultipleClassifiersCombiner",
213:       "weka.core.xml.XMLDocument",
214:       "weka.core.UnassignedDatasetException",
215:       "weka.core.tokenizers.NGramTokenizer",
216:       "weka.core.BatchPredictor",
217:       "weka.classifiers.SingleClassifierEnhancer",
218:       "weka.core.RevisionUtils",
219:       "weka.core.Instance",
220:       "weka.core.converters.SerializedInstancesLoader",
221:       "weka.core.converters.Loader",
222:       "weka.classifiers.functions.supportVector.PolyKernel",
223:       "weka.classifiers.lazy.KStar",
224:       "weka.estimators.Estimator",
225:       "weka.core.ProtectedProperties",
226:       "weka.classifiers.IntervalEstimator",
227:       "weka.core.StringLocator",
228:       "weka.core.Matchable",
229:       "weka.core.AttributeStats",
230:       "weka.filters.MultiFilter",
231:       "weka.core.WeightedInstancesHandler",
232:       "weka.classifiers.trees.DecisionStump",
233:       "weka.classifiers.functions.GaussianProcesses",
234:       "weka.estimators.UnivariateQuantileEstimator",
235:       "weka.core.TechnicalInformation$Field",
236:       "weka.core.Randomizable",
237:       "weka.classifiers.rules.M5Rules",
238:       "weka.classifiers.meta.AttributeSelectedClassifier",
239:       "weka.core.Instances",
240:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
241:       "weka.core.converters.AbstractFileLoader",
242:       "weka.filters.unsupervised.attribute.Normalize",
243:       "weka.core.converters.ConverterUtils$DataSink",
244:       "weka.core.UnassignedClassException",
245:       "weka.classifiers.rules.ZeroR",
246:       "weka.core.xml.XMLInstances",
247:       "weka.filters.unsupervised.attribute.Standardize",
248:       "weka.core.TechnicalInformation",
249:       "weka.core.UnsupportedAttributeTypeException",
250:       "weka.classifiers.Sourcable",
251:       "weka.core.RevisionHandler",
252:       "weka.classifiers.evaluation.output.prediction.PlainText",
253:       "weka.experiment.Stats",
254:       "weka.core.converters.ConverterUtils$DataSource",
255:       "weka.core.xml.XMLSerialization",
256:       "weka.classifiers.xml.XMLClassifier",
257:       "weka.filters.Filter",
258:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
259:       "weka.filters.supervised.attribute.Discretize"
260:     );
261:   } 
262: 
263:   private static void resetClasses() {
264:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Evaluation_64_tmp__ESTest_scaffolding.class.getClassLoader()); 
265: 
266:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
267:       "weka.classifiers.Evaluation",
268:       "weka.core.pmml.PMMLFactory$ModelType",
269:       "weka.core.pmml.PMMLFactory$1",
270:       "weka.core.xml.KOML",
271:       "weka.core.Version",
272:       "weka.core.Utils",
273:       "weka.core.Instances",
274:       "weka.core.converters.AbstractLoader",
275:       "weka.core.converters.AbstractFileLoader",
276:       "weka.core.converters.SerializedInstancesLoader",
277:       "weka.core.converters.SVMLightLoader",
278:       "weka.classifiers.AbstractClassifier",
279:       "weka.classifiers.bayes.BayesNet",
280:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
281:       "weka.core.Tag",
282:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
283:       "weka.classifiers.bayes.net.search.local.K2",
284:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
285:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
286:       "weka.classifiers.SingleClassifierEnhancer",
287:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
288:       "weka.classifiers.meta.CostSensitiveClassifier",
289:       "weka.classifiers.rules.ZeroR",
290:       "weka.classifiers.CostMatrix",
291:       "weka.core.xml.XMLDocument",
292:       "weka.core.xml.XMLInstances",
293:       "weka.core.converters.XRFFLoader",
294:       "weka.core.converters.DatabaseLoader",
295:       "weka.core.Environment",
296:       "weka.experiment.DatabaseUtils",
297:       "weka.core.converters.DatabaseConnection",
298:       "org.pentaho.packageManagement.PackageManager",
299:       "org.pentaho.packageManagement.DefaultPackageManager",
300:       "weka.core.WekaPackageManager",
301:       "weka.core.converters.CSVLoader",
302:       "weka.core.Range",
303:       "weka.core.converters.C45Loader",
304:       "weka.core.converters.ConverterUtils$DataSource",
305:       "weka.core.converters.ArffLoader",
306:       "weka.core.converters.ArffLoader$ArffReader",
307:       "weka.core.converters.TextDirectoryLoader",
308:       "weka.core.Attribute",
309:       "weka.core.ProtectedProperties",
310:       "weka.classifiers.lazy.LWL",
311:       "weka.core.neighboursearch.NearestNeighbourSearch",
312:       "weka.core.neighboursearch.LinearNNSearch",
313:       "weka.core.NormalizableDistance",
314:       "weka.core.EuclideanDistance",
315:       "weka.classifiers.trees.DecisionStump",
316:       "weka.core.converters.MatlabLoader",
317:       "weka.core.converters.LibSVMLoader",
318:       "weka.core.AbstractInstance",
319:       "weka.core.DenseInstance",
320:       "weka.core.SparseInstance",
321:       "weka.core.BinarySparseInstance",
322:       "weka.core.UnassignedDatasetException",
323:       "weka.core.neighboursearch.CoverTree",
324:       "weka.gui.GenericPropertiesCreator",
325:       "weka.gui.GenericObjectEditor",
326:       "weka.core.converters.ConverterUtils",
327:       "weka.classifiers.lazy.IBk",
328:       "weka.classifiers.misc.InputMappedClassifier",
329:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
330:       "weka.classifiers.evaluation.output.prediction.PlainText",
331:       "weka.core.WekaEnumeration",
332:       "weka.core.Attribute$1",
333:       "weka.core.converters.JSONLoader",
334:       "weka.filters.Filter",
335:       "weka.filters.AllFilter",
336:       "weka.core.TestInstances",
337:       "weka.clusterers.AbstractClusterer",
338:       "weka.clusterers.RandomizableClusterer",
339:       "weka.clusterers.FarthestFirst",
340:       "weka.core.Capabilities",
341:       "weka.core.Capabilities$Capability",
342:       "weka.classifiers.trees.J48",
343:       "weka.experiment.InstanceQuery",
344:       "weka.core.Option",
345:       "weka.classifiers.rules.OneR",
346:       "weka.attributeSelection.ASEvaluation",
347:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
348:       "weka.attributeSelection.PrincipalComponents",
349:       "weka.clusterers.SimpleKMeans",
350:       "weka.classifiers.MultipleClassifiersCombiner",
351:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
352:       "weka.classifiers.meta.MultiScheme",
353:       "weka.classifiers.functions.VotedPerceptron",
354:       "weka.classifiers.RandomizableClassifier",
355:       "weka.classifiers.functions.SGDText",
356:       "weka.core.tokenizers.Tokenizer",
357:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
358:       "weka.core.tokenizers.WordTokenizer",
359:       "weka.core.stemmers.NullStemmer",
360:       "weka.core.WekaException",
361:       "weka.core.SerializedObject",
362:       "weka.estimators.UnivariateKernelEstimator",
363:       "weka.clusterers.AbstractDensityBasedClusterer",
364:       "weka.clusterers.MakeDensityBasedClusterer",
365:       "weka.core.RevisionUtils",
366:       "weka.core.UnsupportedAttributeTypeException",
367:       "weka.classifiers.functions.GaussianProcesses",
368:       "weka.classifiers.functions.supportVector.Kernel",
369:       "weka.classifiers.functions.supportVector.CachedKernel",
370:       "weka.classifiers.functions.supportVector.PolyKernel",
371:       "weka.classifiers.meta.FilteredClassifier",
372:       "weka.filters.supervised.attribute.AttributeSelection",
373:       "weka.attributeSelection.AttributeSelection",
374:       "weka.attributeSelection.CfsSubsetEval",
375:       "weka.attributeSelection.ASSearch",
376:       "weka.attributeSelection.GreedyStepwise",
377:       "weka.attributeSelection.BestFirst",
378:       "weka.filters.supervised.attribute.Discretize",
379:       "weka.classifiers.functions.SimpleLinearRegression",
380:       "weka.clusterers.SingleClustererEnhancer",
381:       "weka.clusterers.FilteredClusterer",
382:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
383:       "weka.classifiers.misc.SerializedClassifier",
384:       "weka.classifiers.evaluation.output.prediction.CSV",
385:       "weka.classifiers.functions.SMO",
386:       "weka.classifiers.meta.MultiClassClassifier",
387:       "weka.classifiers.functions.Logistic",
388:       "weka.core.neighboursearch.balltrees.BallNode",
389:       "weka.filters.SimpleFilter",
390:       "weka.filters.SimpleStreamFilter",
391:       "weka.filters.MultiFilter",
392:       "weka.core.UnassignedClassException",
393:       "weka.classifiers.trees.m5.M5Base",
394:       "weka.classifiers.rules.M5Rules",
395:       "weka.classifiers.bayes.NaiveBayes",
396:       "weka.classifiers.bayes.NaiveBayesUpdateable",
397:       "weka.classifiers.IteratedSingleClassifierEnhancer",
398:       "weka.classifiers.meta.AdditiveRegression",
399:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
400:       "weka.classifiers.meta.LogitBoost",
401:       "weka.classifiers.meta.Vote",
402:       "weka.classifiers.trees.RandomTree",
403:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
404:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
405:       "weka.classifiers.meta.Stacking",
406:       "weka.classifiers.lazy.KStar",
407:       "weka.core.SelectedTag",
408:       "weka.classifiers.meta.CVParameterSelection",
409:       "weka.core.FastVector",
410:       "weka.core.Check",
411:       "weka.core.CheckGOE",
412:       "weka.experiment.Stats",
413:       "weka.core.tokenizers.AlphabeticTokenizer",
414:       "weka.classifiers.meta.AttributeSelectedClassifier",
415:       "weka.core.neighboursearch.KDTree",
416:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
417:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
418:       "weka.clusterers.HierarchicalClusterer",
419:       "weka.core.neighboursearch.BallTree",
420:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
421:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
422:       "weka.core.neighboursearch.balltrees.BallSplitter",
423:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
424:       "weka.core.AttributeStats",
425:       "weka.classifiers.functions.LinearRegression",
426:       "weka.core.TechnicalInformation",
427:       "weka.core.TechnicalInformation$Type",
428:       "weka.core.TechnicalInformation$Field",
429:       "weka.core.tokenizers.NGramTokenizer",
430:       "weka.estimators.Estimator",
431:       "weka.estimators.NormalEstimator",
432:       "weka.classifiers.meta.AdaBoostM1",
433:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
434:       "weka.core.Javadoc",
435:       "weka.core.OptionHandlerJavadoc",
436:       "weka.classifiers.meta.RegressionByDiscretization",
437:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
438:       "weka.filters.unsupervised.attribute.Discretize",
439:       "weka.classifiers.rules.OneR$OneRRule",
440:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
441:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
442:       "weka.classifiers.meta.Bagging",
443:       "weka.classifiers.trees.REPTree",
444:       "weka.attributeSelection.GainRatioAttributeEval",
445:       "weka.classifiers.meta.RandomSubSpace",
446:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
447:       "weka.classifiers.rules.JRip",
448:       "weka.classifiers.pmml.consumer.PMMLClassifier",
449:       "weka.classifiers.pmml.consumer.Regression",
450:       "weka.classifiers.pmml.consumer.Regression$Normalization",
451:       "weka.estimators.UnivariateEqualFrequencyHistogramEstimator",
452:       "weka.classifiers.trees.M5P",
453:       "weka.classifiers.evaluation.output.prediction.Null",
454:       "weka.classifiers.trees.RandomForest",
455:       "weka.classifiers.evaluation.output.prediction.XML",
456:       "weka.classifiers.functions.SGD",
457:       "weka.classifiers.trees.j48.ClassifierTree",
458:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
459:       "weka.estimators.PoissonEstimator",
460:       "weka.estimators.KernelEstimator",
461:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
462:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
463:       "weka.clusterers.Cobweb",
464:       "weka.attributeSelection.CorrelationAttributeEval",
465:       "weka.attributeSelection.InfoGainAttributeEval",
466:       "weka.classifiers.evaluation.output.prediction.HTML",
467:       "weka.attributeSelection.WrapperSubsetEval",
468:       "weka.classifiers.bayes.NaiveBayesMultinomial",
469:       "weka.classifiers.pmml.consumer.SupportVectorMachineModel",
470:       "weka.classifiers.pmml.consumer.NeuralNetwork$MiningFunction",
471:       "weka.classifiers.pmml.consumer.SupportVectorMachineModel$classificationMethod",
472:       "weka.classifiers.pmml.consumer.SupportVectorMachineModel$SVM_representation",
473:       "weka.core.pmml.VectorDictionary",
474:       "weka.classifiers.pmml.consumer.SupportVectorMachineModel$Kernel",
475:       "weka.classifiers.evaluation.NominalPrediction",
476:       "weka.classifiers.evaluation.Prediction",
477:       "weka.classifiers.evaluation.ThresholdCurve"
478:     );
479:   }
480: }

[MASTER] 15:02:45.980 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate();
CostSensitiveClassifier costSensitiveClassifier0 = new CostSensitiveClassifier();
MockRandom mockRandom0 = new MockRandom(1827L);
CostMatrix costMatrix0 = new CostMatrix(2);
Evaluation evaluation0 = new Evaluation(instances0, costMatrix0);
GaussianProcesses gaussianProcesses0 = new GaussianProcesses();
double[] doubleArray0 = new double[5];
doubleArray0[0] = (double) (-1);
doubleArray0[1] = (double) (-2);
GaussianProcesses gaussianProcesses1 = new GaussianProcesses();
LinearRegression linearRegression0 = new LinearRegression();
Evaluation.getGlobalInfo(linearRegression0);
CostSensitiveClassifier costSensitiveClassifier1 = new CostSensitiveClassifier();
TestInstances testInstances1 = new TestInstances();
testInstances0.assign(testInstances1);
evaluation0.weightedFalseNegativeRate();
double double0 = evaluation0.m_TotalCost;
assertNotEquals(double0, double1, 0.01);


[MASTER] 15:02:48.849 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 15:02:49.584 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 15:02:49.584 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 15:02:51.291 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1029/107_weka/evosuite-tests
* Done!

* Computation finished
