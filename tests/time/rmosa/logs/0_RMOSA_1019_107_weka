* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13426
* Connecting to master process on port 13429
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13428
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13430
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1019
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 06:56:54.779 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:56:54.799 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:56:54.800 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 06:56:54.880 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1019
* Starting evolution
[MASTER] 06:56:59.567 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:56:59.609 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:56:59.611 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 06:57:02.362 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 194
[MASTER] 06:57:02.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 70
[MASTER] 06:57:02.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 73
[MASTER] 06:57:02.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 76
[MASTER] 06:57:02.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 79
[MASTER] 06:57:02.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 82
[MASTER] 06:57:02.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 85
[MASTER] 06:57:02.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 88
[MASTER] 06:57:02.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 91
[MASTER] 06:57:02.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 94
[MASTER] 06:57:02.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 97
[MASTER] 06:57:02.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 100
[MASTER] 06:57:02.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 103
[MASTER] 06:57:02.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 106
[MASTER] 06:57:02.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 152
[MASTER] 06:57:02.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 155
[MASTER] 06:57:02.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 158
[MASTER] 06:57:02.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 161
[MASTER] 06:57:02.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 164
[MASTER] 06:57:02.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 167
[MASTER] 06:57:02.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 170
[MASTER] 06:57:02.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 173
[MASTER] 06:57:02.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 176
[MASTER] 06:57:02.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 179
[MASTER] 06:57:02.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 195
[MASTER] 06:57:02.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 70
[MASTER] 06:57:02.367 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 73
[MASTER] 06:57:02.367 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 76
[MASTER] 06:57:02.367 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 79
[MASTER] 06:57:02.367 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 82
[MASTER] 06:57:02.367 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 85
[MASTER] 06:57:02.367 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 88
[MASTER] 06:57:02.367 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 91
[MASTER] 06:57:02.367 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 94
[MASTER] 06:57:02.367 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 97
[MASTER] 06:57:02.367 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 100
[MASTER] 06:57:02.367 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 103
[MASTER] 06:57:02.367 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 106
[MASTER] 06:57:02.367 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 152
[MASTER] 06:57:02.368 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 155
[MASTER] 06:57:02.368 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 158
[MASTER] 06:57:02.368 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 161
[MASTER] 06:57:02.368 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 164
[MASTER] 06:57:02.368 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 167
[MASTER] 06:57:02.368 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 170
[MASTER] 06:57:02.368 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 173
[MASTER] 06:57:02.368 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 176
[MASTER] 06:57:02.368 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 179
[MASTER] 06:57:02.369 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setSize(II)V: Line 566
[MASTER] 06:57:02.386 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setSize(II)V: Line 567
[MASTER] 06:57:02.386 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setSize(II)V: Line 568
[MASTER] 06:57:02.386 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setSize(II)V: Line 569
[MASTER] 06:57:02.386 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setSize(II)V: Line 570
[MASTER] 06:57:02.386 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setSize(II)V: Line 571
[MASTER] 06:57:02.386 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setSize(II)V: Line 572
[MASTER] 06:57:02.386 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setSize(II)V: Line 573
[MASTER] 06:57:02.386 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setSize(II)V: Line 574
[MASTER] 06:57:02.386 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setSize(II)V: Line 575
[MASTER] 06:57:02.386 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setSize(II)V: Line 578
[MASTER] 06:57:02.387 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setSize(II)V: Line 579
[MASTER] 06:57:02.387 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setSize(II)V: Line 580
[MASTER] 06:57:02.397 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 485: weka.experiment.ResultMatrix.setSize(II)V:578 - ReplaceConstant - 0 -> 1
[MASTER] 06:57:02.398 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 503: weka.experiment.ResultMatrix.setSize(II)V:578 - ReplaceComparisonOperator >= -> -1
[MASTER] 06:57:02.398 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 506: weka.experiment.ResultMatrix.setSize(II)V:579 - ReplaceConstant - 0 -> 1
[MASTER] 06:57:02.398 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 542: weka.experiment.ResultMatrix.setSize(II)V:579 - ReplaceComparisonOperator >= -> -1
[MASTER] 06:57:02.398 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 543: weka.experiment.ResultMatrix.setSize(II)V:579 - ReplaceComparisonOperator >= -> >
[MASTER] 06:57:02.399 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 580: weka.experiment.ResultMatrix.setSize(II)V:580 - ReplaceConstant - NaN -> 0.0
[MASTER] 06:57:02.399 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 581: weka.experiment.ResultMatrix.setSize(II)V:580 - ReplaceConstant - NaN -> 1.0
[MASTER] 06:57:02.399 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 582: weka.experiment.ResultMatrix.setSize(II)V:580 - ReplaceConstant - NaN -> -1.0
[MASTER] 06:57:02.399 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 583: weka.experiment.ResultMatrix.setSize(II)V:580 - ReplaceConstant - NaN -> NaN
[MASTER] 06:57:02.404 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.significanceWidthTipText()Ljava/lang/String;
[MASTER] 06:57:02.405 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;
[MASTER] 06:57:02.414 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.getMean(II)D
[MASTER] 06:57:02.418 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.toString()Ljava/lang/String;
[MASTER] 06:57:02.420 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.significanceWidthTipText()Ljava/lang/String;
[MASTER] 06:57:02.421 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;
[MASTER] 06:57:02.422 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.getMean(II)D
[MASTER] 06:57:02.423 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.toString()Ljava/lang/String;
[MASTER] 06:57:02.434 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.<init>(II)V: root-Branch in context: weka.experiment.ResultMatrix:<init>(II)V
[MASTER] 06:57:03.053 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 06:57:03.601 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 06:57:03.605 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1019
* Starting evolution
[MASTER] 06:57:09.642 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 06:57:17.573 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:57:17.580 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:57:17.581 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 06:57:18.556 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 06:57:19.632 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 06:57:19.633 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 06:57:23.318 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 06:57:23.417 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 06:57:23.418 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 06:57:23.418 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 06:57:23.419 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 06:57:23.419 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 06:57:23.419 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 06:57:23.420 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 06:57:23.421 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 06:57:23.493 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 06:57:23.507 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1019
* Starting evolution
[MASTER] 06:57:27.456 [logback-2] ERROR TestCluster - Failed to check cache for javax.swing.RowFilter<M, I>.ComparisonType : Type points to itself
[MASTER] 06:57:32.450 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: Line 1614
[MASTER] 06:57:32.453 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: I6 Branch 166 IFEQ L1574 - true
[MASTER] 06:57:32.470 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 856: weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;:1574 - ReplaceComparisonOperator == -> -2
[MASTER] 06:57:32.474 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;:Null
[MASTER] 06:57:32.475 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;
[MASTER] 06:57:32.476 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: I6 Branch 166 IFEQ L1574 - true in context: 
[MASTER] 06:57:40.926 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
* Search finished after 125s and 58 generations, 51990 statements, best individual has fitness: 2832.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 217
* Number of covered goals: 190
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 281
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 238
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 65%
* Total number of goals: 428
* Number of covered goals: 280
* Generated 77 tests with total length 281
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 123s and 97 generations, 47492 statements, best individual has fitness: 12768.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 35%
* Total number of goals: 705
* Number of covered goals: 249
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 109
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 55%
* Total number of goals: 993
* Number of covered goals: 542
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 26%
* Total number of goals: 93
* Number of covered goals: 24
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 109
* Search finished after 135s and 13 generations, 12142 statements, best individual has fitness: 3784.0
* Generated 80 tests with total length 557
* Resulting test suite's coverage: 43% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 06:59:15.730 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 19 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 647
* Number of covered goals: 614
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 88%
* Total number of goals: 441
* Number of covered goals: 386
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 86%
* Total number of goals: 678
* Number of covered goals: 581
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 36%
* Total number of goals: 244
* Number of covered goals: 89
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 85%
* Total number of goals: 124
* Number of covered goals: 106
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 85%
* Total number of goals: 124
* Number of covered goals: 106
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 78%
* Total number of goals: 441
* Number of covered goals: 344
* Generated 127 tests with total length 2473
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 128s and 45 generations, 24581 statements, best individual has fitness: 15984.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 57%
* Total number of goals: 1378
* Number of covered goals: 783
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 41%
* Total number of goals: 809
* Number of covered goals: 332
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 48
* Number of covered goals: 48
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 59%
* Total number of goals: 424
* Number of covered goals: 252
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 19%
* Total number of goals: 278
* Number of covered goals: 52
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 96%
* Total number of goals: 103
* Number of covered goals: 99
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 95%
* Total number of goals: 103
* Number of covered goals: 98
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 38%
* Total number of goals: 809
* Number of covered goals: 306
* Generated 125 tests with total length 1462
* Resulting test suite's coverage: 49% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 80%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1019/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1019/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 07:04:51.692 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.66801875% of time used, but only 48/127 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 14%
* Compiling and checking tests
* Resulting test suite's mutation score: 7%
* Compiling and checking tests
[MASTER] 07:06:08.705 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 07:06:09.183 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 07:06:09.183 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 07:06:10.374 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1019/107_weka/evosuite-tests
[MASTER] 07:06:10.705 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Done!

* Computation finished
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1019/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13427
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 07:07:26.055 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 07:07:26.059 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 07:07:26.059 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 07:07:26.096 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1019
* Starting evolution
[MASTER] 07:07:29.063 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 123s and 69 generations, 46531 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 18 tests with total length 102
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 14%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1019/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13432
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13430
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 07:11:10.285 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 07:11:10.349 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 07:11:10.365 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 07:11:10.654 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 07:11:10.685 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 07:11:10.694 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 07:11:12.535 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 07:11:12.551 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 07:11:12.554 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
[MASTER] 07:11:12.653 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 07:11:12.676 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 07:11:12.682 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Using seed 1019
* Starting evolution
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1019
* Starting evolution
[MASTER] 07:11:28.888 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 07:11:28.889 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Search finished after 122s and 186 generations, 77835 statements, best individual has fitness: 7928.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 45%
* Total number of goals: 370
* Number of covered goals: 166
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 42%
* Total number of goals: 713
* Number of covered goals: 298
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 42%
* Total number of goals: 72
* Number of covered goals: 30
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 45
* Number of covered goals: 44
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Generated 63 tests with total length 324
* Resulting test suite's coverage: 43% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 124s and 131 generations, 72803 statements, best individual has fitness: 1872.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 338
* Number of covered goals: 294
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 80%
* Total number of goals: 194
* Number of covered goals: 155
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 89%
* Total number of goals: 476
* Number of covered goals: 423
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 112
* Number of covered goals: 57
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 79%
* Total number of goals: 194
* Number of covered goals: 153
* Generated 80 tests with total length 894
* Resulting test suite's coverage: 84% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
[MASTER] 07:14:30.178 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 07:14:30.587 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1019/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 43%
* Compiling and checking tests
[MASTER] 07:17:23.172 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_44_1575616643055/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_44_1575616643055/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding.java]]
[MASTER] 07:17:23.172 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 07:17:23.172 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 07:17:23.175 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 07:17:23.175 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 07:17:23.177 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_44_1575616643055/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 07:17:23 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.SparseInstance;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_44_tmp__ESTest extends NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=0.4
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>(15);
29:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
30:       double[] doubleArray0 = new double[6];
31:       doubleArray0[0] = 1340.59931277;
32:       doubleArray0[1] = 1340.59931277;
33:       doubleArray0[2] = 1340.59931277;
34:       doubleArray0[3] = 1340.59931277;
35:       doubleArray0[4] = 1340.59931277;
36:       doubleArray0[5] = 1340.59931277;
37:       SparseInstance sparseInstance0 = new SparseInstance(1340.59931277, doubleArray0);
38:       // Undeclared exception!
39:       try { 
40:         naiveBayesMultinomialText0.tokenizeInstance(sparseInstance0, true);
41:         fail("Expecting exception: RuntimeException");
42:       
43:       } catch(RuntimeException e) {
44:          //
45:          // DenseInstance doesn't have access to a dataset!
46:          //
47:          verifyException("weka.core.AbstractInstance", e);
48:       }
49:   }
50: }
RegularFileObject[/tmp/EvoSuite_44_1575616643055/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 07:17:23 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.classifiers.trees.J48",
104:       "weka.core.stemmers.Stemmer",
105:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.filters.SimpleFilter",
109:       "weka.filters.SimpleStreamFilter",
110:       "weka.estimators.IncrementalEstimator",
111:       "weka.estimators.Estimator$Builder",
112:       "weka.core.neighboursearch.KDTree",
113:       "weka.core.stemmers.NullStemmer",
114:       "weka.core.EnvironmentHandler",
115:       "weka.classifiers.trees.j48.C45ModelSelection",
116:       "weka.classifiers.functions.SGDText",
117:       "weka.core.RelationalLocator",
118:       "weka.core.Utils",
119:       "weka.core.CustomDisplayStringProvider",
120:       "weka.core.tokenizers.Tokenizer",
121:       "weka.core.NormalizableDistance",
122:       "weka.core.NoSupportForMissingValuesException",
123:       "weka.classifiers.UpdateableClassifier",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
125:       "weka.core.MultiInstanceCapabilitiesHandler",
126:       "weka.core.Copyable",
127:       "weka.core.Capabilities",
128:       "weka.core.BinarySparseInstance",
129:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
130:       "weka.core.AttributeLocator",
131:       "weka.core.SerializedObject",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.classifiers.trees.j48.ModelSelection",
135:       "weka.core.AdditionalMeasureProducer",
136:       "org.pentaho.packageManagement.PackageManager$1",
137:       "weka.core.Drawable",
138:       "weka.core.matrix.Matrix",
139:       "weka.core.CapabilitiesHandler",
140:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
141:       "weka.attributeSelection.ASEvaluation",
142:       "weka.core.AbstractInstance",
143:       "weka.core.scripting.JythonObject",
144:       "weka.core.SelectedTag",
145:       "org.pentaho.packageManagement.DefaultPackage",
146:       "weka.classifiers.bayes.BayesNet",
147:       "weka.classifiers.misc.InputMappedClassifier",
148:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
149:       "weka.core.Version",
150:       "weka.filters.AllFilter",
151:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
152:       "weka.core.Tag",
153:       "weka.classifiers.trees.j48.BinC45ModelSelection",
154:       "weka.core.neighboursearch.CoverTree",
155:       "weka.classifiers.AbstractClassifier",
156:       "weka.filters.unsupervised.attribute.Center",
157:       "weka.core.OptionHandler",
158:       "weka.core.WekaException",
159:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
160:       "weka.filters.StreamableFilter",
161:       "weka.core.Range",
162:       "weka.core.PartitionGenerator",
163:       "weka.core.scripting.JythonSerializableObject",
164:       "weka.classifiers.Classifier",
165:       "weka.core.Capabilities$Capability",
166:       "weka.core.SparseInstance",
167:       "org.pentaho.packageManagement.PackageManager",
168:       "weka.attributeSelection.AttributeTransformer",
169:       "weka.core.tokenizers.WordTokenizer",
170:       "weka.classifiers.misc.SerializedClassifier",
171:       "weka.classifiers.trees.j48.ClassifierTree",
172:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
173:       "weka.attributeSelection.PrincipalComponents",
174:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
175:       "weka.core.stemmers.SnowballStemmer",
176:       "weka.classifiers.trees.j48.PruneableClassifierTree",
177:       "weka.core.stemmers.LovinsStemmer",
178:       "weka.classifiers.Evaluation",
179:       "weka.classifiers.functions.supportVector.Kernel",
180:       "weka.core.WekaPackageManager",
181:       "weka.filters.SupervisedFilter",
182:       "weka.core.TechnicalInformationHandler",
183:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
184:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
185:       "weka.core.Option",
186:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
187:       "weka.core.neighboursearch.PerformanceStats",
188:       "weka.estimators.NormalEstimator",
189:       "weka.filters.Sourcable",
190:       "weka.core.Attribute",
191:       "weka.core.Stopwords",
192:       "weka.core.FastVector",
193:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
194:       "weka.core.UnassignedDatasetException",
195:       "weka.classifiers.RandomizableClassifier",
196:       "weka.classifiers.SingleClassifierEnhancer",
197:       "weka.core.RevisionUtils",
198:       "weka.core.Instance",
199:       "weka.estimators.Estimator",
200:       "weka.core.ProtectedProperties",
201:       "weka.core.StringLocator",
202:       "weka.classifiers.bayes.net.ADNode",
203:       "weka.core.Matchable",
204:       "weka.core.AttributeStats",
205:       "weka.filters.MultiFilter",
206:       "weka.core.WeightedInstancesHandler",
207:       "weka.core.neighboursearch.NearestNeighbourSearch",
208:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
209:       "weka.filters.unsupervised.attribute.Remove",
210:       "weka.core.Randomizable",
211:       "weka.core.EuclideanDistance",
212:       "weka.core.Instances",
213:       "weka.core.UnassignedClassException",
214:       "weka.classifiers.bayes.net.BIFReader",
215:       "weka.classifiers.bayes.net.ParentSet",
216:       "weka.classifiers.rules.ZeroR",
217:       "weka.core.stemmers.IteratedLovinsStemmer",
218:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
219:       "weka.filters.unsupervised.attribute.Standardize",
220:       "weka.core.UnsupportedAttributeTypeException",
221:       "weka.core.TechnicalInformation",
222:       "weka.classifiers.Sourcable",
223:       "weka.core.RevisionHandler",
224:       "weka.classifiers.evaluation.output.prediction.PlainText",
225:       "weka.core.neighboursearch.TreePerformanceStats",
226:       "weka.core.xml.XMLSerialization",
227:       "weka.classifiers.xml.XMLClassifier",
228:       "weka.filters.Filter",
229:       "weka.filters.supervised.attribute.Discretize"
230:     );
231:   } 
232: 
233:   private static void resetClasses() {
234:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding.class.getClassLoader()); 
235: 
236:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
237:       "weka.classifiers.AbstractClassifier",
238:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
239:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
240:       "weka.core.Capabilities$Capability",
241:       "weka.core.tokenizers.Tokenizer",
242:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
243:       "weka.core.tokenizers.WordTokenizer",
244:       "weka.core.stemmers.NullStemmer",
245:       "weka.classifiers.RandomizableClassifier",
246:       "weka.core.Tag",
247:       "weka.classifiers.functions.SGDText",
248:       "weka.core.Stopwords",
249:       "weka.core.Utils",
250:       "weka.core.Option",
251:       "weka.classifiers.Evaluation",
252:       "weka.core.stemmers.SnowballStemmer",
253:       "weka.core.AbstractInstance",
254:       "weka.core.SparseInstance",
255:       "weka.attributeSelection.ASEvaluation",
256:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
257:       "weka.attributeSelection.PrincipalComponents",
258:       "weka.classifiers.SingleClassifierEnhancer",
259:       "weka.classifiers.misc.InputMappedClassifier",
260:       "weka.classifiers.rules.ZeroR",
261:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
262:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
263:       "weka.core.neighboursearch.balltrees.BallNode",
264:       "weka.core.RevisionUtils",
265:       "weka.core.neighboursearch.NearestNeighbourSearch",
266:       "weka.core.neighboursearch.CoverTree",
267:       "weka.core.NormalizableDistance",
268:       "weka.core.EuclideanDistance",
269:       "weka.core.Range",
270:       "weka.core.Instances",
271:       "weka.filters.Filter",
272:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
273:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
274:       "weka.classifiers.functions.supportVector.Kernel",
275:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
276:       "weka.core.UnassignedDatasetException",
277:       "weka.core.BinarySparseInstance",
278:       "weka.core.Attribute",
279:       "weka.core.ProtectedProperties",
280:       "weka.core.DenseInstance",
281:       "weka.classifiers.bayes.BayesNet",
282:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
283:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
284:       "weka.classifiers.bayes.net.search.local.K2",
285:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
286:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
287:       "weka.core.Capabilities",
288:       "org.pentaho.packageManagement.PackageManager",
289:       "org.pentaho.packageManagement.DefaultPackageManager",
290:       "weka.core.Version",
291:       "weka.core.Environment",
292:       "weka.core.WekaPackageManager",
293:       "weka.core.neighboursearch.BallTree",
294:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
295:       "weka.core.neighboursearch.balltrees.BallSplitter",
296:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
297:       "weka.core.SerializedObject",
298:       "weka.core.TestInstances",
299:       "weka.classifiers.bayes.net.BIFReader",
300:       "weka.classifiers.lazy.IBk",
301:       "weka.core.neighboursearch.LinearNNSearch",
302:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
303:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
304:       "weka.classifiers.meta.ClassificationViaRegression",
305:       "weka.classifiers.trees.m5.M5Base",
306:       "weka.classifiers.trees.M5P",
307:       "weka.attributeSelection.AttributeSelection",
308:       "weka.classifiers.bayes.NaiveBayesMultinomial",
309:       "weka.classifiers.bayes.NaiveBayes",
310:       "weka.classifiers.misc.SerializedClassifier",
311:       "weka.core.neighboursearch.KDTree",
312:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
313:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
314:       "weka.classifiers.CostMatrix",
315:       "weka.core.stemmers.LovinsStemmer",
316:       "weka.core.stemmers.IteratedLovinsStemmer",
317:       "weka.filters.AllFilter",
318:       "weka.classifiers.functions.supportVector.CachedKernel",
319:       "weka.classifiers.functions.supportVector.Puk",
320:       "weka.classifiers.trees.J48",
321:       "weka.classifiers.trees.j48.ClassifierTree",
322:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
323:       "weka.core.TechnicalInformation",
324:       "weka.core.TechnicalInformation$Type",
325:       "weka.core.TechnicalInformation$Field",
326:       "weka.classifiers.functions.Logistic",
327:       "weka.classifiers.MultipleClassifiersCombiner",
328:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
329:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
330:       "weka.classifiers.meta.Stacking",
331:       "weka.core.WekaException",
332:       "weka.core.UnsupportedAttributeTypeException",
333:       "weka.filters.supervised.attribute.Discretize",
334:       "weka.core.WekaEnumeration",
335:       "weka.core.Attribute$1",
336:       "weka.classifiers.functions.SimpleLinearRegression",
337:       "weka.core.tokenizers.AlphabeticTokenizer",
338:       "weka.classifiers.IteratedSingleClassifierEnhancer",
339:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
340:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
341:       "weka.classifiers.meta.RandomCommittee",
342:       "weka.classifiers.trees.RandomTree",
343:       "weka.core.tokenizers.NGramTokenizer",
344:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
345:       "weka.classifiers.lazy.KStar",
346:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
347:       "weka.classifiers.meta.CostSensitiveClassifier",
348:       "weka.core.SerializationHelper",
349:       "weka.estimators.Estimator",
350:       "weka.estimators.DiscreteEstimator",
351:       "weka.core.FindWithCapabilities",
352:       "weka.core.SingleIndex",
353:       "weka.core.converters.ArffLoader$ArffReader",
354:       "weka.classifiers.rules.PART",
355:       "weka.classifiers.rules.part.MakeDecList",
356:       "weka.classifiers.meta.AttributeSelectedClassifier",
357:       "weka.attributeSelection.CfsSubsetEval",
358:       "weka.attributeSelection.ASSearch",
359:       "weka.attributeSelection.BestFirst",
360:       "weka.core.neighboursearch.PerformanceStats",
361:       "weka.classifiers.functions.SimpleLogistic",
362:       "weka.classifiers.meta.CVParameterSelection",
363:       "weka.core.FastVector",
364:       "weka.classifiers.functions.SMOreg",
365:       "weka.classifiers.functions.supportVector.RegOptimizer",
366:       "weka.classifiers.functions.supportVector.RegSMO",
367:       "weka.classifiers.functions.supportVector.RegSMOImproved",
368:       "weka.classifiers.functions.supportVector.PolyKernel",
369:       "weka.classifiers.meta.AdditiveRegression",
370:       "weka.filters.SimpleFilter",
371:       "weka.filters.SimpleStreamFilter",
372:       "weka.filters.MultiFilter",
373:       "weka.classifiers.rules.M5Rules",
374:       "weka.classifiers.functions.LinearRegression",
375:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
376:       "weka.classifiers.meta.FilteredClassifier",
377:       "weka.filters.supervised.attribute.AttributeSelection",
378:       "weka.attributeSelection.GreedyStepwise",
379:       "weka.estimators.KernelEstimator",
380:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
381:       "weka.classifiers.meta.AdaBoostM1",
382:       "weka.classifiers.trees.DecisionStump",
383:       "weka.estimators.PoissonEstimator",
384:       "weka.classifiers.bayes.NaiveBayesUpdateable",
385:       "weka.classifiers.functions.SMO",
386:       "weka.attributeSelection.ReliefFAttributeEval",
387:       "weka.core.UnassignedClassException",
388:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
389:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
390:       "weka.classifiers.meta.Vote",
391:       "weka.core.stemmers.Stemming",
392:       "weka.attributeSelection.WrapperSubsetEval",
393:       "weka.classifiers.functions.supportVector.RBFKernel",
394:       "weka.core.ClassDiscovery",
395:       "weka.classifiers.meta.Bagging",
396:       "weka.classifiers.trees.REPTree",
397:       "weka.classifiers.meta.MultiScheme",
398:       "weka.attributeSelection.GainRatioAttributeEval",
399:       "weka.attributeSelection.CorrelationAttributeEval",
400:       "weka.classifiers.functions.SGD",
401:       "weka.core.Queue",
402:       "weka.core.AttributeLocator",
403:       "weka.core.StringLocator",
404:       "weka.core.RelationalLocator",
405:       "weka.core.ContingencyTables",
406:       "weka.core.Queue$QueueNode",
407:       "weka.attributeSelection.InfoGainAttributeEval",
408:       "weka.core.MinkowskiDistance",
409:       "weka.classifiers.trees.RandomForest",
410:       "weka.classifiers.rules.OneR",
411:       "weka.classifiers.functions.GaussianProcesses",
412:       "weka.core.AttributeStats",
413:       "weka.classifiers.meta.MultiClassClassifier",
414:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
415:       "weka.classifiers.trees.LMT",
416:       "weka.classifiers.functions.MultilayerPerceptron",
417:       "weka.filters.unsupervised.attribute.NominalToBinary",
418:       "weka.classifiers.functions.neural.SigmoidUnit",
419:       "weka.classifiers.functions.neural.LinearUnit",
420:       "weka.core.Javadoc",
421:       "weka.core.GlobalInfoJavadoc",
422:       "weka.classifiers.rules.JRip",
423:       "weka.classifiers.rules.DecisionTable",
424:       "weka.core.neighboursearch.TreePerformanceStats",
425:       "weka.core.matrix.Matrix",
426:       "weka.estimators.NormalEstimator",
427:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel"
428:     );
429:   }
430: }

[MASTER] 07:17:23.177 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>(15);
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
double[] doubleArray0 = new double[6];
doubleArray0[0] = 1340.59931277;
doubleArray0[1] = 1340.59931277;
doubleArray0[2] = 1340.59931277;
doubleArray0[3] = 1340.59931277;
doubleArray0[4] = 1340.59931277;
doubleArray0[5] = 1340.59931277;
SparseInstance sparseInstance0 = new SparseInstance(1340.59931277, doubleArray0);
naiveBayesMultinomialText0.tokenizeInstance(sparseInstance0, true);

[MASTER] 07:17:23.456 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_52_1575616643428/weka/classifiers/bayes/NaiveBayesMultinomialText_52_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_52_1575616643428/weka/classifiers/bayes/NaiveBayesMultinomialText_52_tmp__ESTest_scaffolding.java]]
[MASTER] 07:17:23.456 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 07:17:23.456 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 07:17:23.456 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 07:17:23.456 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 07:17:23.457 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_52_1575616643428/weka/classifiers/bayes/NaiveBayesMultinomialText_52_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 07:17:23 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.classifiers.misc.SerializedClassifier;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_52_tmp__ESTest extends NaiveBayesMultinomialText_52_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=2.5594415416798357
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       SerializedClassifier serializedClassifier0 = new SerializedClassifier();
28:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
29:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
30:       naiveBayesMultinomialText1.m_inputVector = linkedHashMap0;
31:       String[] stringArray0 = new String[3];
32:       stringArray0[0] = "&.!XL";
33:       stringArray0[1] = "-lowercase";
34:       stringArray0[2] = "/s*w68P0: @ow:7!";
35:       naiveBayesMultinomialText1.setOptions(stringArray0);
36:       boolean boolean0 = naiveBayesMultinomialText1.getUseWordFrequencies();
37:       assertTrue(naiveBayesMultinomialText1.getLowercaseTokens());
38:       assertFalse(boolean0);
39:   }
40: }
RegularFileObject[/tmp/EvoSuite_52_1575616643428/weka/classifiers/bayes/NaiveBayesMultinomialText_52_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 07:17:23 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_52_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_52_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.classifiers.trees.J48",
104:       "weka.core.stemmers.Stemmer",
105:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.filters.SimpleFilter",
109:       "weka.filters.SimpleStreamFilter",
110:       "weka.estimators.IncrementalEstimator",
111:       "weka.estimators.Estimator$Builder",
112:       "weka.core.neighboursearch.KDTree",
113:       "weka.core.stemmers.NullStemmer",
114:       "weka.core.EnvironmentHandler",
115:       "weka.classifiers.trees.j48.C45ModelSelection",
116:       "weka.classifiers.functions.SGDText",
117:       "weka.core.RelationalLocator",
118:       "weka.core.Utils",
119:       "weka.core.CustomDisplayStringProvider",
120:       "weka.core.tokenizers.Tokenizer",
121:       "weka.core.NormalizableDistance",
122:       "weka.core.NoSupportForMissingValuesException",
123:       "weka.classifiers.UpdateableClassifier",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
125:       "weka.core.MultiInstanceCapabilitiesHandler",
126:       "weka.core.Copyable",
127:       "weka.core.Capabilities",
128:       "weka.core.BinarySparseInstance",
129:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
130:       "weka.core.AttributeLocator",
131:       "weka.core.SerializedObject",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.classifiers.trees.j48.ModelSelection",
135:       "weka.core.AdditionalMeasureProducer",
136:       "org.pentaho.packageManagement.PackageManager$1",
137:       "weka.core.Drawable",
138:       "weka.core.matrix.Matrix",
139:       "weka.core.CapabilitiesHandler",
140:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
141:       "weka.attributeSelection.ASEvaluation",
142:       "weka.core.AbstractInstance",
143:       "weka.core.scripting.JythonObject",
144:       "weka.core.SelectedTag",
145:       "org.pentaho.packageManagement.DefaultPackage",
146:       "weka.classifiers.bayes.BayesNet",
147:       "weka.classifiers.misc.InputMappedClassifier",
148:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
149:       "weka.core.Version",
150:       "weka.filters.AllFilter",
151:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
152:       "weka.core.Tag",
153:       "weka.classifiers.trees.j48.BinC45ModelSelection",
154:       "weka.core.neighboursearch.CoverTree",
155:       "weka.classifiers.AbstractClassifier",
156:       "weka.filters.unsupervised.attribute.Center",
157:       "weka.core.OptionHandler",
158:       "weka.core.WekaException",
159:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
160:       "weka.filters.StreamableFilter",
161:       "weka.core.Range",
162:       "weka.core.PartitionGenerator",
163:       "weka.core.scripting.JythonSerializableObject",
164:       "weka.classifiers.Classifier",
165:       "weka.core.Capabilities$Capability",
166:       "weka.core.SparseInstance",
167:       "org.pentaho.packageManagement.PackageManager",
168:       "weka.attributeSelection.AttributeTransformer",
169:       "weka.core.tokenizers.WordTokenizer",
170:       "weka.classifiers.misc.SerializedClassifier",
171:       "weka.classifiers.trees.j48.ClassifierTree",
172:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
173:       "weka.attributeSelection.PrincipalComponents",
174:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
175:       "weka.core.stemmers.SnowballStemmer",
176:       "weka.classifiers.trees.j48.PruneableClassifierTree",
177:       "weka.core.stemmers.LovinsStemmer",
178:       "weka.classifiers.Evaluation",
179:       "weka.classifiers.functions.supportVector.Kernel",
180:       "weka.core.WekaPackageManager",
181:       "weka.filters.SupervisedFilter",
182:       "weka.core.TechnicalInformationHandler",
183:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
184:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
185:       "weka.core.Option",
186:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
187:       "weka.core.neighboursearch.PerformanceStats",
188:       "weka.estimators.NormalEstimator",
189:       "weka.filters.Sourcable",
190:       "weka.core.Attribute",
191:       "weka.core.Stopwords",
192:       "weka.core.FastVector",
193:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
194:       "weka.core.UnassignedDatasetException",
195:       "weka.classifiers.RandomizableClassifier",
196:       "weka.classifiers.SingleClassifierEnhancer",
197:       "weka.core.RevisionUtils",
198:       "weka.core.Instance",
199:       "weka.estimators.Estimator",
200:       "weka.core.ProtectedProperties",
201:       "weka.core.StringLocator",
202:       "weka.classifiers.bayes.net.ADNode",
203:       "weka.core.Matchable",
204:       "weka.core.AttributeStats",
205:       "weka.filters.MultiFilter",
206:       "weka.core.WeightedInstancesHandler",
207:       "weka.core.neighboursearch.NearestNeighbourSearch",
208:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
209:       "weka.filters.unsupervised.attribute.Remove",
210:       "weka.core.Randomizable",
211:       "weka.core.EuclideanDistance",
212:       "weka.core.Instances",
213:       "weka.core.UnassignedClassException",
214:       "weka.classifiers.bayes.net.BIFReader",
215:       "weka.classifiers.bayes.net.ParentSet",
216:       "weka.classifiers.rules.ZeroR",
217:       "weka.core.stemmers.IteratedLovinsStemmer",
218:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
219:       "weka.filters.unsupervised.attribute.Standardize",
220:       "weka.core.UnsupportedAttributeTypeException",
221:       "weka.core.TechnicalInformation",
222:       "weka.classifiers.Sourcable",
223:       "weka.core.RevisionHandler",
224:       "weka.classifiers.evaluation.output.prediction.PlainText",
225:       "weka.core.neighboursearch.TreePerformanceStats",
226:       "weka.core.xml.XMLSerialization",
227:       "weka.classifiers.xml.XMLClassifier",
228:       "weka.filters.Filter",
229:       "weka.filters.supervised.attribute.Discretize"
230:     );
231:   } 
232: 
233:   private static void resetClasses() {
234:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_52_tmp__ESTest_scaffolding.class.getClassLoader()); 
235: 
236:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
237:       "weka.classifiers.AbstractClassifier",
238:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
239:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
240:       "weka.core.Capabilities$Capability",
241:       "weka.core.tokenizers.Tokenizer",
242:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
243:       "weka.core.tokenizers.WordTokenizer",
244:       "weka.core.stemmers.NullStemmer",
245:       "weka.classifiers.RandomizableClassifier",
246:       "weka.core.Tag",
247:       "weka.classifiers.functions.SGDText",
248:       "weka.core.Stopwords",
249:       "weka.core.Utils",
250:       "weka.core.Option",
251:       "weka.classifiers.Evaluation",
252:       "weka.core.stemmers.SnowballStemmer",
253:       "weka.core.AbstractInstance",
254:       "weka.core.SparseInstance",
255:       "weka.attributeSelection.ASEvaluation",
256:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
257:       "weka.attributeSelection.PrincipalComponents",
258:       "weka.classifiers.SingleClassifierEnhancer",
259:       "weka.classifiers.misc.InputMappedClassifier",
260:       "weka.classifiers.rules.ZeroR",
261:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
262:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
263:       "weka.core.neighboursearch.balltrees.BallNode",
264:       "weka.core.RevisionUtils",
265:       "weka.core.neighboursearch.NearestNeighbourSearch",
266:       "weka.core.neighboursearch.CoverTree",
267:       "weka.core.NormalizableDistance",
268:       "weka.core.EuclideanDistance",
269:       "weka.core.Range",
270:       "weka.core.Instances",
271:       "weka.filters.Filter",
272:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
273:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
274:       "weka.classifiers.functions.supportVector.Kernel",
275:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
276:       "weka.core.UnassignedDatasetException",
277:       "weka.core.BinarySparseInstance",
278:       "weka.core.Attribute",
279:       "weka.core.ProtectedProperties",
280:       "weka.core.DenseInstance",
281:       "weka.classifiers.bayes.BayesNet",
282:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
283:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
284:       "weka.classifiers.bayes.net.search.local.K2",
285:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
286:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
287:       "weka.core.Capabilities",
288:       "org.pentaho.packageManagement.PackageManager",
289:       "org.pentaho.packageManagement.DefaultPackageManager",
290:       "weka.core.Version",
291:       "weka.core.Environment",
292:       "weka.core.WekaPackageManager",
293:       "weka.core.neighboursearch.BallTree",
294:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
295:       "weka.core.neighboursearch.balltrees.BallSplitter",
296:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
297:       "weka.core.SerializedObject",
298:       "weka.core.TestInstances",
299:       "weka.classifiers.bayes.net.BIFReader",
300:       "weka.classifiers.lazy.IBk",
301:       "weka.core.neighboursearch.LinearNNSearch",
302:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
303:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
304:       "weka.classifiers.meta.ClassificationViaRegression",
305:       "weka.classifiers.trees.m5.M5Base",
306:       "weka.classifiers.trees.M5P",
307:       "weka.attributeSelection.AttributeSelection",
308:       "weka.classifiers.bayes.NaiveBayesMultinomial",
309:       "weka.classifiers.bayes.NaiveBayes",
310:       "weka.classifiers.misc.SerializedClassifier",
311:       "weka.core.neighboursearch.KDTree",
312:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
313:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
314:       "weka.classifiers.CostMatrix",
315:       "weka.core.stemmers.LovinsStemmer",
316:       "weka.core.stemmers.IteratedLovinsStemmer",
317:       "weka.filters.AllFilter",
318:       "weka.classifiers.functions.supportVector.CachedKernel",
319:       "weka.classifiers.functions.supportVector.Puk",
320:       "weka.classifiers.trees.J48",
321:       "weka.classifiers.trees.j48.ClassifierTree",
322:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
323:       "weka.core.TechnicalInformation",
324:       "weka.core.TechnicalInformation$Type",
325:       "weka.core.TechnicalInformation$Field",
326:       "weka.classifiers.functions.Logistic",
327:       "weka.classifiers.MultipleClassifiersCombiner",
328:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
329:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
330:       "weka.classifiers.meta.Stacking",
331:       "weka.core.WekaException",
332:       "weka.core.UnsupportedAttributeTypeException",
333:       "weka.filters.supervised.attribute.Discretize",
334:       "weka.core.WekaEnumeration",
335:       "weka.core.Attribute$1",
336:       "weka.classifiers.functions.SimpleLinearRegression",
337:       "weka.core.tokenizers.AlphabeticTokenizer",
338:       "weka.classifiers.IteratedSingleClassifierEnhancer",
339:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
340:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
341:       "weka.classifiers.meta.RandomCommittee",
342:       "weka.classifiers.trees.RandomTree",
343:       "weka.core.tokenizers.NGramTokenizer",
344:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
345:       "weka.classifiers.lazy.KStar",
346:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
347:       "weka.classifiers.meta.CostSensitiveClassifier",
348:       "weka.core.SerializationHelper",
349:       "weka.estimators.Estimator",
350:       "weka.estimators.DiscreteEstimator",
351:       "weka.core.FindWithCapabilities",
352:       "weka.core.SingleIndex",
353:       "weka.core.converters.ArffLoader$ArffReader",
354:       "weka.classifiers.rules.PART",
355:       "weka.classifiers.rules.part.MakeDecList",
356:       "weka.classifiers.meta.AttributeSelectedClassifier",
357:       "weka.attributeSelection.CfsSubsetEval",
358:       "weka.attributeSelection.ASSearch",
359:       "weka.attributeSelection.BestFirst",
360:       "weka.core.neighboursearch.PerformanceStats",
361:       "weka.classifiers.functions.SimpleLogistic",
362:       "weka.classifiers.meta.CVParameterSelection",
363:       "weka.core.FastVector",
364:       "weka.classifiers.functions.SMOreg",
365:       "weka.classifiers.functions.supportVector.RegOptimizer",
366:       "weka.classifiers.functions.supportVector.RegSMO",
367:       "weka.classifiers.functions.supportVector.RegSMOImproved",
368:       "weka.classifiers.functions.supportVector.PolyKernel",
369:       "weka.classifiers.meta.AdditiveRegression",
370:       "weka.filters.SimpleFilter",
371:       "weka.filters.SimpleStreamFilter",
372:       "weka.filters.MultiFilter",
373:       "weka.classifiers.rules.M5Rules",
374:       "weka.classifiers.functions.LinearRegression",
375:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
376:       "weka.classifiers.meta.FilteredClassifier",
377:       "weka.filters.supervised.attribute.AttributeSelection",
378:       "weka.attributeSelection.GreedyStepwise",
379:       "weka.estimators.KernelEstimator",
380:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
381:       "weka.classifiers.meta.AdaBoostM1",
382:       "weka.classifiers.trees.DecisionStump",
383:       "weka.estimators.PoissonEstimator",
384:       "weka.classifiers.bayes.NaiveBayesUpdateable",
385:       "weka.classifiers.functions.SMO",
386:       "weka.attributeSelection.ReliefFAttributeEval",
387:       "weka.core.UnassignedClassException",
388:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
389:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
390:       "weka.classifiers.meta.Vote",
391:       "weka.core.stemmers.Stemming",
392:       "weka.attributeSelection.WrapperSubsetEval",
393:       "weka.classifiers.functions.supportVector.RBFKernel",
394:       "weka.core.ClassDiscovery",
395:       "weka.classifiers.meta.Bagging",
396:       "weka.classifiers.trees.REPTree",
397:       "weka.classifiers.meta.MultiScheme",
398:       "weka.attributeSelection.GainRatioAttributeEval",
399:       "weka.attributeSelection.CorrelationAttributeEval",
400:       "weka.classifiers.functions.SGD",
401:       "weka.core.Queue",
402:       "weka.core.AttributeLocator",
403:       "weka.core.StringLocator",
404:       "weka.core.RelationalLocator",
405:       "weka.core.ContingencyTables",
406:       "weka.core.Queue$QueueNode",
407:       "weka.attributeSelection.InfoGainAttributeEval",
408:       "weka.core.MinkowskiDistance",
409:       "weka.classifiers.trees.RandomForest",
410:       "weka.classifiers.rules.OneR",
411:       "weka.classifiers.functions.GaussianProcesses",
412:       "weka.core.AttributeStats",
413:       "weka.classifiers.meta.MultiClassClassifier",
414:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
415:       "weka.classifiers.trees.LMT",
416:       "weka.classifiers.functions.MultilayerPerceptron",
417:       "weka.filters.unsupervised.attribute.NominalToBinary",
418:       "weka.classifiers.functions.neural.SigmoidUnit",
419:       "weka.classifiers.functions.neural.LinearUnit",
420:       "weka.core.Javadoc",
421:       "weka.core.GlobalInfoJavadoc",
422:       "weka.classifiers.rules.JRip",
423:       "weka.classifiers.rules.DecisionTable",
424:       "weka.core.neighboursearch.TreePerformanceStats",
425:       "weka.core.matrix.Matrix",
426:       "weka.estimators.NormalEstimator",
427:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel"
428:     );
429:   }
430: }

[MASTER] 07:17:23.457 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
SerializedClassifier serializedClassifier0 = new SerializedClassifier();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText1.m_inputVector = linkedHashMap0;
String[] stringArray0 = new String[3];
stringArray0[0] = "&.!XL";
stringArray0[1] = "-lowercase";
stringArray0[2] = "/s*w68P0: @ow:7!";
naiveBayesMultinomialText1.setOptions(stringArray0);
boolean boolean0 = naiveBayesMultinomialText1.getUseWordFrequencies();
assertTrue(naiveBayesMultinomialText1.getLowercaseTokens());
assertFalse(boolean0);


[MASTER] 07:17:23.932 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_65_1575616643903/weka/classifiers/bayes/NaiveBayesMultinomialText_65_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_65_1575616643903/weka/classifiers/bayes/NaiveBayesMultinomialText_65_tmp__ESTest_scaffolding.java]]
[MASTER] 07:17:23.932 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 07:17:23.932 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 07:17:23.933 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 07:17:23.933 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 07:17:23.933 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 07:17:23.933 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 07:17:23.933 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 07:17:23.934 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_65_1575616643903/weka/classifiers/bayes/NaiveBayesMultinomialText_65_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 07:17:23 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.System;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_65_tmp__ESTest extends NaiveBayesMultinomialText_65_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=3.261950424367441
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
31:       naiveBayesMultinomialText0.m_wordFrequencies = true;
32:       FileSystemHandling.shouldAllThrowIOExceptions();
33:       naiveBayesMultinomialText0.setUseStopList(true);
34:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
35:       hashMap0.put((Integer) null, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
36:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
37:       naiveBayesMultinomialText0.m_norm = 3.0;
38:       naiveBayesMultinomialText0.stopwordsTipText();
39:       System.setCurrentTimeMillis((-4129L));
40:       naiveBayesMultinomialText0.getTokenizer();
41:       naiveBayesMultinomialText0.lowercaseTokensTipText();
42:       naiveBayesMultinomialText0.m_normalize = true;
43:       naiveBayesMultinomialText0.getUseStopList();
44:       naiveBayesMultinomialText0.stemmerTipText();
45:       naiveBayesMultinomialText0.getOptions();
46:       assertTrue(naiveBayesMultinomialText0.getUseStopList());
47:   }
48: }
RegularFileObject[/tmp/EvoSuite_65_1575616643903/weka/classifiers/bayes/NaiveBayesMultinomialText_65_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 07:17:23 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_65_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_65_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.classifiers.trees.J48",
104:       "weka.core.stemmers.Stemmer",
105:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.filters.SimpleFilter",
109:       "weka.filters.SimpleStreamFilter",
110:       "weka.estimators.IncrementalEstimator",
111:       "weka.estimators.Estimator$Builder",
112:       "weka.core.neighboursearch.KDTree",
113:       "weka.core.stemmers.NullStemmer",
114:       "weka.core.EnvironmentHandler",
115:       "weka.classifiers.trees.j48.C45ModelSelection",
116:       "weka.classifiers.functions.SGDText",
117:       "weka.core.RelationalLocator",
118:       "weka.core.Utils",
119:       "weka.core.CustomDisplayStringProvider",
120:       "weka.core.tokenizers.Tokenizer",
121:       "weka.core.NormalizableDistance",
122:       "weka.core.NoSupportForMissingValuesException",
123:       "weka.classifiers.UpdateableClassifier",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
125:       "weka.core.MultiInstanceCapabilitiesHandler",
126:       "weka.core.Copyable",
127:       "weka.core.Capabilities",
128:       "weka.core.BinarySparseInstance",
129:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
130:       "weka.core.AttributeLocator",
131:       "weka.core.SerializedObject",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.classifiers.trees.j48.ModelSelection",
135:       "weka.core.AdditionalMeasureProducer",
136:       "org.pentaho.packageManagement.PackageManager$1",
137:       "weka.core.Drawable",
138:       "weka.core.matrix.Matrix",
139:       "weka.core.CapabilitiesHandler",
140:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
141:       "weka.attributeSelection.ASEvaluation",
142:       "weka.core.AbstractInstance",
143:       "weka.core.scripting.JythonObject",
144:       "weka.core.SelectedTag",
145:       "org.pentaho.packageManagement.DefaultPackage",
146:       "weka.classifiers.bayes.BayesNet",
147:       "weka.classifiers.misc.InputMappedClassifier",
148:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
149:       "weka.core.Version",
150:       "weka.filters.AllFilter",
151:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
152:       "weka.core.Tag",
153:       "weka.classifiers.trees.j48.BinC45ModelSelection",
154:       "weka.core.neighboursearch.CoverTree",
155:       "weka.classifiers.AbstractClassifier",
156:       "weka.filters.unsupervised.attribute.Center",
157:       "weka.core.OptionHandler",
158:       "weka.core.WekaException",
159:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
160:       "weka.filters.StreamableFilter",
161:       "weka.core.Range",
162:       "weka.core.PartitionGenerator",
163:       "weka.core.scripting.JythonSerializableObject",
164:       "weka.classifiers.Classifier",
165:       "weka.core.Capabilities$Capability",
166:       "weka.core.SparseInstance",
167:       "org.pentaho.packageManagement.PackageManager",
168:       "weka.attributeSelection.AttributeTransformer",
169:       "weka.core.tokenizers.WordTokenizer",
170:       "weka.classifiers.misc.SerializedClassifier",
171:       "weka.classifiers.trees.j48.ClassifierTree",
172:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
173:       "weka.attributeSelection.PrincipalComponents",
174:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
175:       "weka.core.stemmers.SnowballStemmer",
176:       "weka.classifiers.trees.j48.PruneableClassifierTree",
177:       "weka.core.stemmers.LovinsStemmer",
178:       "weka.classifiers.Evaluation",
179:       "weka.classifiers.functions.supportVector.Kernel",
180:       "weka.core.WekaPackageManager",
181:       "weka.filters.SupervisedFilter",
182:       "weka.core.TechnicalInformationHandler",
183:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
184:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
185:       "weka.core.Option",
186:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
187:       "weka.core.neighboursearch.PerformanceStats",
188:       "weka.estimators.NormalEstimator",
189:       "weka.filters.Sourcable",
190:       "weka.core.Attribute",
191:       "weka.core.Stopwords",
192:       "weka.core.FastVector",
193:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
194:       "weka.core.UnassignedDatasetException",
195:       "weka.classifiers.RandomizableClassifier",
196:       "weka.classifiers.SingleClassifierEnhancer",
197:       "weka.core.RevisionUtils",
198:       "weka.core.Instance",
199:       "weka.estimators.Estimator",
200:       "weka.core.ProtectedProperties",
201:       "weka.core.StringLocator",
202:       "weka.classifiers.bayes.net.ADNode",
203:       "weka.core.Matchable",
204:       "weka.core.AttributeStats",
205:       "weka.filters.MultiFilter",
206:       "weka.core.WeightedInstancesHandler",
207:       "weka.core.neighboursearch.NearestNeighbourSearch",
208:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
209:       "weka.filters.unsupervised.attribute.Remove",
210:       "weka.core.Randomizable",
211:       "weka.core.EuclideanDistance",
212:       "weka.core.Instances",
213:       "weka.core.UnassignedClassException",
214:       "weka.classifiers.bayes.net.BIFReader",
215:       "weka.classifiers.bayes.net.ParentSet",
216:       "weka.classifiers.rules.ZeroR",
217:       "weka.core.stemmers.IteratedLovinsStemmer",
218:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
219:       "weka.filters.unsupervised.attribute.Standardize",
220:       "weka.core.UnsupportedAttributeTypeException",
221:       "weka.core.TechnicalInformation",
222:       "weka.classifiers.Sourcable",
223:       "weka.core.RevisionHandler",
224:       "weka.classifiers.evaluation.output.prediction.PlainText",
225:       "weka.core.neighboursearch.TreePerformanceStats",
226:       "weka.core.xml.XMLSerialization",
227:       "weka.classifiers.xml.XMLClassifier",
228:       "weka.filters.Filter",
229:       "weka.filters.supervised.attribute.Discretize"
230:     );
231:   } 
232: 
233:   private static void resetClasses() {
234:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_65_tmp__ESTest_scaffolding.class.getClassLoader()); 
235: 
236:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
237:       "weka.classifiers.AbstractClassifier",
238:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
239:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
240:       "weka.core.Capabilities$Capability",
241:       "weka.core.tokenizers.Tokenizer",
242:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
243:       "weka.core.tokenizers.WordTokenizer",
244:       "weka.core.stemmers.NullStemmer",
245:       "weka.classifiers.RandomizableClassifier",
246:       "weka.core.Tag",
247:       "weka.classifiers.functions.SGDText",
248:       "weka.core.Stopwords",
249:       "weka.core.Utils",
250:       "weka.core.Option",
251:       "weka.classifiers.Evaluation",
252:       "weka.core.stemmers.SnowballStemmer",
253:       "weka.core.AbstractInstance",
254:       "weka.core.SparseInstance",
255:       "weka.attributeSelection.ASEvaluation",
256:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
257:       "weka.attributeSelection.PrincipalComponents",
258:       "weka.classifiers.SingleClassifierEnhancer",
259:       "weka.classifiers.misc.InputMappedClassifier",
260:       "weka.classifiers.rules.ZeroR",
261:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
262:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
263:       "weka.core.neighboursearch.balltrees.BallNode",
264:       "weka.core.RevisionUtils",
265:       "weka.core.neighboursearch.NearestNeighbourSearch",
266:       "weka.core.neighboursearch.CoverTree",
267:       "weka.core.NormalizableDistance",
268:       "weka.core.EuclideanDistance",
269:       "weka.core.Range",
270:       "weka.core.Instances",
271:       "weka.filters.Filter",
272:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
273:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
274:       "weka.classifiers.functions.supportVector.Kernel",
275:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
276:       "weka.core.UnassignedDatasetException",
277:       "weka.core.BinarySparseInstance",
278:       "weka.core.Attribute",
279:       "weka.core.ProtectedProperties",
280:       "weka.core.DenseInstance",
281:       "weka.classifiers.bayes.BayesNet",
282:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
283:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
284:       "weka.classifiers.bayes.net.search.local.K2",
285:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
286:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
287:       "weka.core.Capabilities",
288:       "org.pentaho.packageManagement.PackageManager",
289:       "org.pentaho.packageManagement.DefaultPackageManager",
290:       "weka.core.Version",
291:       "weka.core.Environment",
292:       "weka.core.WekaPackageManager",
293:       "weka.core.neighboursearch.BallTree",
294:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
295:       "weka.core.neighboursearch.balltrees.BallSplitter",
296:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
297:       "weka.core.SerializedObject",
298:       "weka.core.TestInstances",
299:       "weka.classifiers.bayes.net.BIFReader",
300:       "weka.classifiers.lazy.IBk",
301:       "weka.core.neighboursearch.LinearNNSearch",
302:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
303:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
304:       "weka.classifiers.meta.ClassificationViaRegression",
305:       "weka.classifiers.trees.m5.M5Base",
306:       "weka.classifiers.trees.M5P",
307:       "weka.attributeSelection.AttributeSelection",
308:       "weka.classifiers.bayes.NaiveBayesMultinomial",
309:       "weka.classifiers.bayes.NaiveBayes",
310:       "weka.classifiers.misc.SerializedClassifier",
311:       "weka.core.neighboursearch.KDTree",
312:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
313:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
314:       "weka.classifiers.CostMatrix",
315:       "weka.core.stemmers.LovinsStemmer",
316:       "weka.core.stemmers.IteratedLovinsStemmer",
317:       "weka.filters.AllFilter",
318:       "weka.classifiers.functions.supportVector.CachedKernel",
319:       "weka.classifiers.functions.supportVector.Puk",
320:       "weka.classifiers.trees.J48",
321:       "weka.classifiers.trees.j48.ClassifierTree",
322:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
323:       "weka.core.TechnicalInformation",
324:       "weka.core.TechnicalInformation$Type",
325:       "weka.core.TechnicalInformation$Field",
326:       "weka.classifiers.functions.Logistic",
327:       "weka.classifiers.MultipleClassifiersCombiner",
328:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
329:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
330:       "weka.classifiers.meta.Stacking",
331:       "weka.core.WekaException",
332:       "weka.core.UnsupportedAttributeTypeException",
333:       "weka.filters.supervised.attribute.Discretize",
334:       "weka.core.WekaEnumeration",
335:       "weka.core.Attribute$1",
336:       "weka.classifiers.functions.SimpleLinearRegression",
337:       "weka.core.tokenizers.AlphabeticTokenizer",
338:       "weka.classifiers.IteratedSingleClassifierEnhancer",
339:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
340:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
341:       "weka.classifiers.meta.RandomCommittee",
342:       "weka.classifiers.trees.RandomTree",
343:       "weka.core.tokenizers.NGramTokenizer",
344:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
345:       "weka.classifiers.lazy.KStar",
346:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
347:       "weka.classifiers.meta.CostSensitiveClassifier",
348:       "weka.core.SerializationHelper",
349:       "weka.estimators.Estimator",
350:       "weka.estimators.DiscreteEstimator",
351:       "weka.core.FindWithCapabilities",
352:       "weka.core.SingleIndex",
353:       "weka.core.converters.ArffLoader$ArffReader",
354:       "weka.classifiers.rules.PART",
355:       "weka.classifiers.rules.part.MakeDecList",
356:       "weka.classifiers.meta.AttributeSelectedClassifier",
357:       "weka.attributeSelection.CfsSubsetEval",
358:       "weka.attributeSelection.ASSearch",
359:       "weka.attributeSelection.BestFirst",
360:       "weka.core.neighboursearch.PerformanceStats",
361:       "weka.classifiers.functions.SimpleLogistic",
362:       "weka.classifiers.meta.CVParameterSelection",
363:       "weka.core.FastVector",
364:       "weka.classifiers.functions.SMOreg",
365:       "weka.classifiers.functions.supportVector.RegOptimizer",
366:       "weka.classifiers.functions.supportVector.RegSMO",
367:       "weka.classifiers.functions.supportVector.RegSMOImproved",
368:       "weka.classifiers.functions.supportVector.PolyKernel",
369:       "weka.classifiers.meta.AdditiveRegression",
370:       "weka.filters.SimpleFilter",
371:       "weka.filters.SimpleStreamFilter",
372:       "weka.filters.MultiFilter",
373:       "weka.classifiers.rules.M5Rules",
374:       "weka.classifiers.functions.LinearRegression",
375:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
376:       "weka.classifiers.meta.FilteredClassifier",
377:       "weka.filters.supervised.attribute.AttributeSelection",
378:       "weka.attributeSelection.GreedyStepwise",
379:       "weka.estimators.KernelEstimator",
380:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
381:       "weka.classifiers.meta.AdaBoostM1",
382:       "weka.classifiers.trees.DecisionStump",
383:       "weka.estimators.PoissonEstimator",
384:       "weka.classifiers.bayes.NaiveBayesUpdateable",
385:       "weka.classifiers.functions.SMO",
386:       "weka.attributeSelection.ReliefFAttributeEval",
387:       "weka.core.UnassignedClassException",
388:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
389:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
390:       "weka.classifiers.meta.Vote",
391:       "weka.core.stemmers.Stemming",
392:       "weka.attributeSelection.WrapperSubsetEval",
393:       "weka.classifiers.functions.supportVector.RBFKernel",
394:       "weka.core.ClassDiscovery",
395:       "weka.classifiers.meta.Bagging",
396:       "weka.classifiers.trees.REPTree",
397:       "weka.classifiers.meta.MultiScheme",
398:       "weka.attributeSelection.GainRatioAttributeEval",
399:       "weka.attributeSelection.CorrelationAttributeEval",
400:       "weka.classifiers.functions.SGD",
401:       "weka.core.Queue",
402:       "weka.core.AttributeLocator",
403:       "weka.core.StringLocator",
404:       "weka.core.RelationalLocator",
405:       "weka.core.ContingencyTables",
406:       "weka.core.Queue$QueueNode",
407:       "weka.attributeSelection.InfoGainAttributeEval",
408:       "weka.core.MinkowskiDistance",
409:       "weka.classifiers.trees.RandomForest",
410:       "weka.classifiers.rules.OneR",
411:       "weka.classifiers.functions.GaussianProcesses",
412:       "weka.core.AttributeStats",
413:       "weka.classifiers.meta.MultiClassClassifier",
414:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
415:       "weka.classifiers.trees.LMT",
416:       "weka.classifiers.functions.MultilayerPerceptron",
417:       "weka.filters.unsupervised.attribute.NominalToBinary",
418:       "weka.classifiers.functions.neural.SigmoidUnit",
419:       "weka.classifiers.functions.neural.LinearUnit",
420:       "weka.core.Javadoc",
421:       "weka.core.GlobalInfoJavadoc",
422:       "weka.classifiers.rules.JRip",
423:       "weka.classifiers.rules.DecisionTable",
424:       "weka.core.neighboursearch.TreePerformanceStats",
425:       "weka.core.matrix.Matrix",
426:       "weka.estimators.NormalEstimator",
427:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel"
428:     );
429:   }
430: }

[MASTER] 07:17:23.934 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_wordFrequencies = true;
FileSystemHandling.shouldAllThrowIOExceptions();
naiveBayesMultinomialText0.setUseStopList(true);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
hashMap0.put((Integer) null, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
naiveBayesMultinomialText0.m_norm = 3.0;
naiveBayesMultinomialText0.stopwordsTipText();
System.setCurrentTimeMillis((-4129L));
naiveBayesMultinomialText0.getTokenizer();
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.m_normalize = true;
naiveBayesMultinomialText0.getUseStopList();
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.getOptions();
assertTrue(naiveBayesMultinomialText0.getUseStopList());


[MASTER] 07:18:17.493 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1019/107_weka/evosuite-tests
* Done!

* Computation finished
