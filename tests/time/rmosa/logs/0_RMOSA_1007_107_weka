* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 19698
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1007
* Starting evolution
* Search finished after 124s and 52 generations, 45740 statements, best individual has fitness: 2864.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 217
* Number of covered goals: 186
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 281
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 238
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 65%
* Total number of goals: 428
* Number of covered goals: 280
* Generated 68 tests with total length 376
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 77%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1007/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 19694
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:25:29.445 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:25:29.484 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:25:29.485 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:25:34.078 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 21:25:35.418 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 21:25:35.433 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1007
* Starting evolution
[MASTER] 21:25:42.889 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.getRevision()Ljava/lang/String;: Line 937
[MASTER] 21:25:42.902 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.getRevision()Ljava/lang/String;: root-Branch
[MASTER] 21:25:42.907 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 884: weka.classifiers.rules.JRip$NumericAntd.getRevision()Ljava/lang/String;:937 - ReplaceConstant - $Revision: 8118 $ -> 
[MASTER] 21:25:42.923 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NumericAntd.getRevision()Ljava/lang/String;
[MASTER] 21:25:42.942 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.NumericAntd.getRevision()Ljava/lang/String;
[MASTER] 21:25:42.942 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$NumericAntd.getRevision()Ljava/lang/String;: root-Branch in context: 
[MASTER] 21:25:55.119 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NominalAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
* Search finished after 123s and 120 generations, 70284 statements, best individual has fitness: 12608.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 35%
* Total number of goals: 705
* Number of covered goals: 250
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 108
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 57%
* Total number of goals: 993
* Number of covered goals: 562
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 27%
* Total number of goals: 93
* Number of covered goals: 25
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 108
* Generated 67 tests with total length 608
* Resulting test suite's coverage: 43% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1007/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 19698
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:31:28.792 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:31:28.796 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:31:28.797 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:31:29.552 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 21:31:30.406 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 21:31:30.408 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 21:31:32.927 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 21:31:32.963 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 21:31:32.964 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 21:31:32.964 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 21:31:32.965 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 21:31:32.965 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 21:31:32.965 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 21:31:32.970 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 21:31:32.971 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 21:31:33.064 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 21:31:33.097 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1007
* Starting evolution
[MASTER] 21:31:43.188 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 21:32:22.012 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.numTrueNegatives(I)D: I17 Branch 266 IF_ICMPEQ L2863 - true
[MASTER] 21:32:22.012 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.numTrueNegatives(I)D: I31 Branch 268 IF_ICMPEQ L2865 - true
[MASTER] 21:32:22.014 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 5473: weka.classifiers.Evaluation.numTrueNegatives(I)D:2863 - ReplaceComparisonOperator == -> -2
[MASTER] 21:32:22.014 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 5513: weka.classifiers.Evaluation.numTrueNegatives(I)D:2865 - ReplaceComparisonOperator == -> -2
[MASTER] 21:32:22.019 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.numTrueNegatives(I)D: I17 Branch 266 IF_ICMPEQ L2863 - true in context: weka.classifiers.Evaluation:numTrueNegatives(I)D
[MASTER] 21:32:22.019 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.numTrueNegatives(I)D: I31 Branch 268 IF_ICMPEQ L2865 - true in context: weka.classifiers.Evaluation:numTrueNegatives(I)D
[MASTER] 21:33:20.710 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.correlationCoefficient()D
* Search finished after 131s and 40 generations, 23496 statements, best individual has fitness: 16568.0
[MASTER] 21:33:49.462 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 14 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 55%
* Total number of goals: 1378
* Number of covered goals: 755
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 39%
* Total number of goals: 809
* Number of covered goals: 319
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 48
* Number of covered goals: 48
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 58%
* Total number of goals: 424
* Number of covered goals: 245
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 18%
* Total number of goals: 278
* Number of covered goals: 49
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 94%
* Total number of goals: 103
* Number of covered goals: 97
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 93%
* Total number of goals: 103
* Number of covered goals: 96
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 35%
* Total number of goals: 809
* Number of covered goals: 285
* Generated 114 tests with total length 1224
* Resulting test suite's coverage: 48% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 6%
* Compiling and checking tests
[MASTER] 21:39:27.329 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 21:39:27.671 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 21:39:27.671 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 21:39:29.288 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 21:39:29.312 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 21:39:29.496 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1007/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 19697
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:40:37.125 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 21:40:37.126 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 21:40:37.128 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 21:40:37.297 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:40:37.314 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:40:37.315 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1007
* Starting evolution
[MASTER] 21:40:43.551 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 21:40:43.551 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 21:41:05.161 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 123s and 129 generations, 85892 statements, best individual has fitness: 1616.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 89%
* Total number of goals: 338
* Number of covered goals: 301
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 82%
* Total number of goals: 194
* Number of covered goals: 159
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 476
* Number of covered goals: 438
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 60
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 80%
* Total number of goals: 194
* Number of covered goals: 156
* Generated 77 tests with total length 866
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 52%
* Compiling and checking tests
[MASTER] 21:46:53.667 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_1_1575582413590/weka/classifiers/bayes/NaiveBayesMultinomialText_1_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_1_1575582413590/weka/classifiers/bayes/NaiveBayesMultinomialText_1_tmp__ESTest_scaffolding.java]]
[MASTER] 21:46:53.667 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:46:53.667 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:46:53.671 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 21:46:53.672 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 21:46:53.673 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_1_1575582413590/weka/classifiers/bayes/NaiveBayesMultinomialText_1_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 21:46:53 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: 
16: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
17: public class NaiveBayesMultinomialText_1_tmp__ESTest extends NaiveBayesMultinomialText_1_tmp__ESTest_scaffolding {
18: 
19:   /**
20:   //Test case number: 0
21:   /*Coverage entropy=1.0931471805599453
22:   */
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
26:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
27:       
28:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
29:       naiveBayesMultinomialText0.setNormalizeDocLength(true);
30:       assertTrue(naiveBayesMultinomialText0.getNormalizeDocLength());
31:   }
32: }
RegularFileObject[/tmp/EvoSuite_1_1575582413590/weka/classifiers/bayes/NaiveBayesMultinomialText_1_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 21:46:53 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_1_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_1_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.trees.m5.M5Base",
97:       "weka.attributeSelection.SubsetEvaluator",
98:       "weka.classifiers.CostMatrix",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.neighboursearch.BallTree",
101:       "weka.core.logging.Logger$Level",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.attributeSelection.CfsSubsetEval",
104:       "weka.core.DenseInstance",
105:       "weka.classifiers.trees.J48",
106:       "weka.core.ConjugateGradientOptimization",
107:       "weka.core.stemmers.Stemmer",
108:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
109:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
110:       "org.pentaho.packageManagement.DefaultPackageManager",
111:       "org.bounce.net.DefaultAuthenticator",
112:       "weka.classifiers.meta.MultiClassClassifier$RandomCode",
113:       "weka.estimators.IncrementalEstimator",
114:       "weka.estimators.Estimator$Builder",
115:       "weka.core.stemmers.NullStemmer",
116:       "weka.core.EnvironmentHandler",
117:       "weka.classifiers.trees.j48.C45ModelSelection",
118:       "weka.classifiers.functions.SGDText",
119:       "weka.classifiers.functions.Logistic",
120:       "weka.classifiers.trees.m5.RuleNode",
121:       "weka.core.RelationalLocator",
122:       "weka.core.Utils",
123:       "weka.classifiers.meta.AdaBoostM1",
124:       "weka.core.CustomDisplayStringProvider",
125:       "weka.core.tokenizers.Tokenizer",
126:       "weka.filters.unsupervised.instance.RemoveWithValues",
127:       "weka.core.NormalizableDistance",
128:       "weka.core.NoSupportForMissingValuesException",
129:       "weka.classifiers.UpdateableClassifier",
130:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
131:       "weka.core.MultiInstanceCapabilitiesHandler",
132:       "weka.classifiers.meta.MultiClassClassifier$ExhaustiveCode",
133:       "weka.core.Copyable",
134:       "weka.core.Capabilities",
135:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
136:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
137:       "weka.core.BinarySparseInstance",
138:       "weka.filters.supervised.attribute.NominalToBinary",
139:       "weka.core.AttributeLocator",
140:       "weka.core.SerializedObject",
141:       "weka.classifiers.meta.RegressionByDiscretization",
142:       "weka.clusterers.UpdateableClusterer",
143:       "weka.attributeSelection.BestFirst",
144:       "weka.core.Summarizable",
145:       "weka.classifiers.trees.j48.ModelSelection",
146:       "weka.core.AdditionalMeasureProducer",
147:       "weka.core.neighboursearch.balltrees.BallNode",
148:       "org.pentaho.packageManagement.PackageManager$1",
149:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
150:       "weka.classifiers.meta.MultiClassClassifier",
151:       "weka.core.Drawable",
152:       "weka.core.Optimization",
153:       "weka.core.matrix.Matrix",
154:       "weka.classifiers.ConditionalDensityEstimator",
155:       "weka.core.CapabilitiesHandler",
156:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
157:       "weka.attributeSelection.ASEvaluation",
158:       "weka.core.AbstractInstance",
159:       "weka.core.scripting.JythonObject",
160:       "weka.core.SelectedTag",
161:       "org.pentaho.packageManagement.DefaultPackage",
162:       "weka.core.neighboursearch.balltrees.BallSplitter",
163:       "weka.classifiers.misc.InputMappedClassifier",
164:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
165:       "weka.core.Queue",
166:       "weka.core.Version",
167:       "weka.classifiers.meta.MultiClassClassifier$Code",
168:       "weka.filters.unsupervised.attribute.RemoveUseless",
169:       "weka.core.Tag",
170:       "weka.classifiers.IteratedSingleClassifierEnhancer",
171:       "weka.classifiers.trees.j48.BinC45ModelSelection",
172:       "weka.classifiers.AbstractClassifier",
173:       "weka.estimators.UnivariateDensityEstimator",
174:       "weka.filters.unsupervised.attribute.Center",
175:       "weka.core.OptionHandler",
176:       "weka.core.WekaException",
177:       "weka.filters.StreamableFilter",
178:       "weka.core.Range",
179:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
180:       "weka.core.PartitionGenerator",
181:       "weka.core.scripting.JythonSerializableObject",
182:       "weka.classifiers.Classifier",
183:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
184:       "weka.core.Capabilities$Capability",
185:       "weka.core.SparseInstance",
186:       "org.pentaho.packageManagement.PackageManager",
187:       "weka.attributeSelection.AttributeTransformer",
188:       "weka.core.tokenizers.WordTokenizer",
189:       "weka.classifiers.trees.j48.ClassifierTree",
190:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
191:       "weka.attributeSelection.PrincipalComponents",
192:       "weka.core.stemmers.SnowballStemmer",
193:       "weka.classifiers.trees.j48.PruneableClassifierTree",
194:       "weka.core.stemmers.LovinsStemmer",
195:       "weka.classifiers.Evaluation",
196:       "weka.attributeSelection.ASSearch",
197:       "weka.classifiers.functions.supportVector.Kernel",
198:       "weka.core.WekaPackageManager",
199:       "weka.filters.SupervisedFilter",
200:       "weka.core.TechnicalInformationHandler",
201:       "weka.attributeSelection.StartSetHandler",
202:       "weka.core.neighboursearch.LinearNNSearch",
203:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
204:       "weka.classifiers.meta.CostSensitiveClassifier",
205:       "weka.core.Option",
206:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
207:       "weka.core.neighboursearch.PerformanceStats",
208:       "weka.estimators.KernelEstimator",
209:       "weka.filters.Sourcable",
210:       "weka.classifiers.meta.MultiClassClassifier$StandardCode",
211:       "weka.core.Attribute",
212:       "weka.core.Stopwords",
213:       "weka.core.FastVector",
214:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
215:       "weka.core.UnassignedDatasetException",
216:       "weka.core.tokenizers.NGramTokenizer",
217:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
218:       "weka.classifiers.RandomizableClassifier",
219:       "weka.classifiers.meta.CVParameterSelection",
220:       "weka.classifiers.SingleClassifierEnhancer",
221:       "weka.core.RevisionUtils",
222:       "weka.core.Instance",
223:       "weka.core.ProtectedProperties",
224:       "weka.estimators.Estimator",
225:       "weka.classifiers.IntervalEstimator",
226:       "weka.core.StringLocator",
227:       "weka.core.Matchable",
228:       "weka.core.AttributeStats",
229:       "weka.core.WeightedInstancesHandler",
230:       "weka.core.neighboursearch.NearestNeighbourSearch",
231:       "weka.classifiers.trees.DecisionStump",
232:       "weka.filters.unsupervised.attribute.Remove",
233:       "weka.filters.unsupervised.attribute.Discretize",
234:       "weka.core.Randomizable",
235:       "weka.classifiers.rules.M5Rules",
236:       "weka.core.EuclideanDistance",
237:       "weka.core.Instances",
238:       "weka.core.UnassignedClassException",
239:       "weka.classifiers.rules.ZeroR",
240:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
241:       "weka.filters.unsupervised.attribute.Standardize",
242:       "weka.core.stemmers.IteratedLovinsStemmer",
243:       "weka.core.TechnicalInformation",
244:       "weka.core.UnsupportedAttributeTypeException",
245:       "weka.classifiers.Sourcable",
246:       "weka.classifiers.functions.Logistic$OptEngCG",
247:       "weka.classifiers.functions.Logistic$OptEng",
248:       "weka.core.RevisionHandler",
249:       "weka.classifiers.evaluation.output.prediction.PlainText",
250:       "weka.core.neighboursearch.TreePerformanceStats",
251:       "weka.core.xml.XMLSerialization",
252:       "weka.filters.unsupervised.attribute.MakeIndicator",
253:       "weka.classifiers.xml.XMLClassifier",
254:       "weka.filters.Filter",
255:       "weka.filters.supervised.attribute.Discretize"
256:     );
257:   } 
258: 
259:   private static void resetClasses() {
260:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_1_tmp__ESTest_scaffolding.class.getClassLoader()); 
261: 
262:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
263:       "weka.classifiers.AbstractClassifier",
264:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
265:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
266:       "weka.core.Capabilities$Capability",
267:       "weka.core.tokenizers.Tokenizer",
268:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
269:       "weka.core.tokenizers.WordTokenizer",
270:       "weka.core.stemmers.NullStemmer",
271:       "weka.core.Option",
272:       "weka.classifiers.SingleClassifierEnhancer",
273:       "weka.classifiers.misc.InputMappedClassifier",
274:       "weka.classifiers.rules.ZeroR",
275:       "weka.core.neighboursearch.balltrees.BallNode",
276:       "weka.core.AbstractInstance",
277:       "weka.core.SparseInstance",
278:       "weka.core.BinarySparseInstance",
279:       "weka.core.stemmers.LovinsStemmer",
280:       "weka.core.stemmers.IteratedLovinsStemmer",
281:       "weka.classifiers.Evaluation",
282:       "weka.core.Utils",
283:       "weka.core.stemmers.SnowballStemmer",
284:       "weka.core.UnassignedDatasetException",
285:       "weka.core.RevisionUtils",
286:       "weka.core.Capabilities",
287:       "org.pentaho.packageManagement.PackageManager",
288:       "org.pentaho.packageManagement.DefaultPackageManager",
289:       "weka.core.Version",
290:       "weka.core.Environment",
291:       "weka.core.WekaPackageManager",
292:       "weka.core.stemmers.Stemming",
293:       "weka.classifiers.bayes.BayesNet",
294:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
295:       "weka.core.Tag",
296:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
297:       "weka.classifiers.bayes.net.search.local.K2",
298:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
299:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
300:       "weka.attributeSelection.ASEvaluation",
301:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
302:       "weka.attributeSelection.PrincipalComponents",
303:       "weka.core.DenseInstance",
304:       "weka.classifiers.RandomizableClassifier",
305:       "weka.classifiers.functions.SGDText",
306:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
307:       "weka.classifiers.meta.CostSensitiveClassifier",
308:       "weka.classifiers.CostMatrix",
309:       "weka.filters.Filter",
310:       "weka.core.Instances",
311:       "weka.classifiers.functions.supportVector.Kernel",
312:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
313:       "weka.core.SerializedObject",
314:       "weka.core.TestInstances",
315:       "weka.core.neighboursearch.NearestNeighbourSearch",
316:       "weka.core.neighboursearch.CoverTree",
317:       "weka.core.NormalizableDistance",
318:       "weka.core.EuclideanDistance",
319:       "weka.core.Range",
320:       "weka.classifiers.bayes.NaiveBayesMultinomial",
321:       "weka.core.ListOptions",
322:       "weka.core.Stopwords",
323:       "weka.core.WekaException",
324:       "weka.core.FindWithCapabilities",
325:       "weka.core.SingleIndex",
326:       "weka.core.ClassDiscovery",
327:       "weka.core.Attribute",
328:       "weka.core.ProtectedProperties",
329:       "weka.filters.supervised.attribute.Discretize",
330:       "weka.classifiers.MultipleClassifiersCombiner",
331:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
332:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
333:       "weka.classifiers.meta.Stacking",
334:       "weka.attributeSelection.ASSearch",
335:       "weka.attributeSelection.BestFirst",
336:       "weka.core.SelectedTag",
337:       "weka.core.neighboursearch.KDTree",
338:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
339:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
340:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
341:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
342:       "weka.core.neighboursearch.LinearNNSearch",
343:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
344:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
345:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
346:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
347:       "weka.classifiers.functions.SMO",
348:       "weka.classifiers.functions.supportVector.CachedKernel",
349:       "weka.classifiers.functions.supportVector.PolyKernel",
350:       "weka.classifiers.functions.SGD",
351:       "weka.classifiers.lazy.IBk",
352:       "weka.classifiers.misc.SerializedClassifier",
353:       "weka.classifiers.meta.RegressionByDiscretization",
354:       "weka.filters.unsupervised.attribute.Discretize",
355:       "weka.classifiers.trees.J48",
356:       "weka.classifiers.meta.MultiClassClassifier",
357:       "weka.classifiers.functions.Logistic",
358:       "weka.classifiers.bayes.NaiveBayes",
359:       "weka.classifiers.functions.supportVector.StringKernel",
360:       "weka.classifiers.lazy.KStar",
361:       "weka.classifiers.trees.LMT",
362:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
363:       "weka.classifiers.bayes.net.BIFReader",
364:       "weka.classifiers.IteratedSingleClassifierEnhancer",
365:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
366:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
367:       "weka.classifiers.meta.Bagging",
368:       "weka.classifiers.trees.REPTree",
369:       "weka.core.neighboursearch.BallTree",
370:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
371:       "weka.core.neighboursearch.balltrees.BallSplitter",
372:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
373:       "weka.classifiers.rules.DecisionTable",
374:       "weka.classifiers.functions.GaussianProcesses",
375:       "weka.core.converters.ArffLoader$ArffReader",
376:       "weka.classifiers.rules.JRip",
377:       "weka.classifiers.meta.FilteredClassifier",
378:       "weka.filters.supervised.attribute.AttributeSelection",
379:       "weka.attributeSelection.AttributeSelection",
380:       "weka.attributeSelection.CfsSubsetEval",
381:       "weka.attributeSelection.GreedyStepwise",
382:       "weka.classifiers.meta.RandomCommittee",
383:       "weka.classifiers.trees.RandomTree",
384:       "weka.core.TechnicalInformation",
385:       "weka.core.TechnicalInformation$Type",
386:       "weka.core.TechnicalInformation$Field",
387:       "weka.classifiers.trees.j48.ClassifierTree",
388:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
389:       "weka.core.tokenizers.AlphabeticTokenizer",
390:       "weka.attributeSelection.WrapperSubsetEval",
391:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
392:       "weka.classifiers.meta.MultiScheme",
393:       "weka.classifiers.functions.LinearRegression",
394:       "weka.classifiers.meta.Vote",
395:       "weka.classifiers.functions.SMOreg",
396:       "weka.classifiers.functions.supportVector.RegOptimizer",
397:       "weka.classifiers.functions.supportVector.RegSMO",
398:       "weka.classifiers.functions.supportVector.RegSMOImproved",
399:       "weka.classifiers.trees.m5.M5Base",
400:       "weka.classifiers.rules.M5Rules",
401:       "weka.classifiers.lazy.LWL",
402:       "weka.classifiers.trees.DecisionStump",
403:       "weka.estimators.Estimator",
404:       "weka.estimators.KernelEstimator",
405:       "weka.filters.AllFilter",
406:       "weka.classifiers.meta.AdditiveRegression",
407:       "weka.core.UnassignedClassException",
408:       "weka.classifiers.rules.OneR",
409:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
410:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
411:       "weka.classifiers.meta.AdaBoostM1",
412:       "weka.attributeSelection.InfoGainAttributeEval",
413:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
414:       "weka.classifiers.meta.CVParameterSelection",
415:       "weka.core.FastVector",
416:       "weka.core.UnsupportedAttributeTypeException",
417:       "weka.estimators.PoissonEstimator",
418:       "weka.classifiers.meta.AttributeSelectedClassifier",
419:       "weka.classifiers.rules.PART",
420:       "weka.classifiers.rules.part.MakeDecList",
421:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
422:       "weka.core.matrix.Matrix",
423:       "weka.estimators.NormalEstimator",
424:       "weka.classifiers.functions.SimpleLinearRegression",
425:       "weka.classifiers.trees.M5P",
426:       "weka.classifiers.functions.VotedPerceptron",
427:       "weka.attributeSelection.OneRAttributeEval",
428:       "weka.core.AttributeStats",
429:       "weka.classifiers.functions.supportVector.Puk",
430:       "weka.core.WekaEnumeration",
431:       "weka.core.tokenizers.NGramTokenizer",
432:       "weka.filters.SimpleFilter",
433:       "weka.filters.SimpleStreamFilter",
434:       "weka.filters.MultiFilter",
435:       "weka.classifiers.meta.LogitBoost",
436:       "weka.core.Attribute$1",
437:       "weka.classifiers.meta.ClassificationViaRegression",
438:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
439:       "weka.estimators.DiscreteEstimator",
440:       "weka.attributeSelection.CorrelationAttributeEval",
441:       "weka.classifiers.bayes.NaiveBayesUpdateable",
442:       "weka.attributeSelection.GainRatioAttributeEval",
443:       "weka.classifiers.trees.RandomForest",
444:       "weka.classifiers.functions.SimpleLogistic",
445:       "weka.attributeSelection.ReliefFAttributeEval",
446:       "weka.classifiers.functions.supportVector.RBFKernel",
447:       "weka.core.ChebyshevDistance"
448:     );
449:   }
450: }

[MASTER] 21:46:53.673 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());

LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.setNormalizeDocLength(true);
assertTrue(naiveBayesMultinomialText0.getNormalizeDocLength());


[MASTER] 21:46:55.369 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_35_1575582415339/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_35_1575582415339/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding.java]]
[MASTER] 21:46:55.369 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:46:55.369 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:46:55.369 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 21:46:55.369 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 21:46:55.370 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_35_1575582415339/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 21:46:55 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.DenseInstance;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_35_tmp__ESTest extends NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=0.4
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       double[] doubleArray0 = new double[0];
29:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
30:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
31:       DenseInstance denseInstance0 = new DenseInstance(1.0, doubleArray0);
32:       // Undeclared exception!
33:       try { 
34:         naiveBayesMultinomialText0.tokenizeInstance(denseInstance0, true);
35:         fail("Expecting exception: RuntimeException");
36:       
37:       } catch(RuntimeException e) {
38:          //
39:          // DenseInstance doesn't have access to a dataset!
40:          //
41:          verifyException("weka.core.AbstractInstance", e);
42:       }
43:   }
44: }
RegularFileObject[/tmp/EvoSuite_35_1575582415339/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 21:46:55 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.trees.m5.M5Base",
97:       "weka.attributeSelection.SubsetEvaluator",
98:       "weka.classifiers.CostMatrix",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.neighboursearch.BallTree",
101:       "weka.core.logging.Logger$Level",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.attributeSelection.CfsSubsetEval",
104:       "weka.core.DenseInstance",
105:       "weka.classifiers.trees.J48",
106:       "weka.core.ConjugateGradientOptimization",
107:       "weka.core.stemmers.Stemmer",
108:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
109:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
110:       "org.pentaho.packageManagement.DefaultPackageManager",
111:       "org.bounce.net.DefaultAuthenticator",
112:       "weka.classifiers.meta.MultiClassClassifier$RandomCode",
113:       "weka.estimators.IncrementalEstimator",
114:       "weka.estimators.Estimator$Builder",
115:       "weka.core.stemmers.NullStemmer",
116:       "weka.core.EnvironmentHandler",
117:       "weka.classifiers.trees.j48.C45ModelSelection",
118:       "weka.classifiers.functions.SGDText",
119:       "weka.classifiers.functions.Logistic",
120:       "weka.classifiers.trees.m5.RuleNode",
121:       "weka.core.RelationalLocator",
122:       "weka.core.Utils",
123:       "weka.classifiers.meta.AdaBoostM1",
124:       "weka.core.CustomDisplayStringProvider",
125:       "weka.core.tokenizers.Tokenizer",
126:       "weka.filters.unsupervised.instance.RemoveWithValues",
127:       "weka.core.NormalizableDistance",
128:       "weka.core.NoSupportForMissingValuesException",
129:       "weka.classifiers.UpdateableClassifier",
130:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
131:       "weka.core.MultiInstanceCapabilitiesHandler",
132:       "weka.classifiers.meta.MultiClassClassifier$ExhaustiveCode",
133:       "weka.core.Copyable",
134:       "weka.core.Capabilities",
135:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
136:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
137:       "weka.core.BinarySparseInstance",
138:       "weka.filters.supervised.attribute.NominalToBinary",
139:       "weka.core.AttributeLocator",
140:       "weka.core.SerializedObject",
141:       "weka.classifiers.meta.RegressionByDiscretization",
142:       "weka.clusterers.UpdateableClusterer",
143:       "weka.attributeSelection.BestFirst",
144:       "weka.core.Summarizable",
145:       "weka.classifiers.trees.j48.ModelSelection",
146:       "weka.core.AdditionalMeasureProducer",
147:       "weka.core.neighboursearch.balltrees.BallNode",
148:       "org.pentaho.packageManagement.PackageManager$1",
149:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
150:       "weka.classifiers.meta.MultiClassClassifier",
151:       "weka.core.Drawable",
152:       "weka.core.Optimization",
153:       "weka.core.matrix.Matrix",
154:       "weka.classifiers.ConditionalDensityEstimator",
155:       "weka.core.CapabilitiesHandler",
156:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
157:       "weka.attributeSelection.ASEvaluation",
158:       "weka.core.AbstractInstance",
159:       "weka.core.scripting.JythonObject",
160:       "weka.core.SelectedTag",
161:       "org.pentaho.packageManagement.DefaultPackage",
162:       "weka.core.neighboursearch.balltrees.BallSplitter",
163:       "weka.classifiers.misc.InputMappedClassifier",
164:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
165:       "weka.core.Queue",
166:       "weka.core.Version",
167:       "weka.classifiers.meta.MultiClassClassifier$Code",
168:       "weka.filters.unsupervised.attribute.RemoveUseless",
169:       "weka.core.Tag",
170:       "weka.classifiers.IteratedSingleClassifierEnhancer",
171:       "weka.classifiers.trees.j48.BinC45ModelSelection",
172:       "weka.classifiers.AbstractClassifier",
173:       "weka.estimators.UnivariateDensityEstimator",
174:       "weka.filters.unsupervised.attribute.Center",
175:       "weka.core.OptionHandler",
176:       "weka.core.WekaException",
177:       "weka.filters.StreamableFilter",
178:       "weka.core.Range",
179:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
180:       "weka.core.PartitionGenerator",
181:       "weka.core.scripting.JythonSerializableObject",
182:       "weka.classifiers.Classifier",
183:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
184:       "weka.core.Capabilities$Capability",
185:       "weka.core.SparseInstance",
186:       "org.pentaho.packageManagement.PackageManager",
187:       "weka.attributeSelection.AttributeTransformer",
188:       "weka.core.tokenizers.WordTokenizer",
189:       "weka.classifiers.trees.j48.ClassifierTree",
190:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
191:       "weka.attributeSelection.PrincipalComponents",
192:       "weka.core.stemmers.SnowballStemmer",
193:       "weka.classifiers.trees.j48.PruneableClassifierTree",
194:       "weka.core.stemmers.LovinsStemmer",
195:       "weka.classifiers.Evaluation",
196:       "weka.attributeSelection.ASSearch",
197:       "weka.classifiers.functions.supportVector.Kernel",
198:       "weka.core.WekaPackageManager",
199:       "weka.filters.SupervisedFilter",
200:       "weka.core.TechnicalInformationHandler",
201:       "weka.attributeSelection.StartSetHandler",
202:       "weka.core.neighboursearch.LinearNNSearch",
203:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
204:       "weka.classifiers.meta.CostSensitiveClassifier",
205:       "weka.core.Option",
206:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
207:       "weka.core.neighboursearch.PerformanceStats",
208:       "weka.estimators.KernelEstimator",
209:       "weka.filters.Sourcable",
210:       "weka.classifiers.meta.MultiClassClassifier$StandardCode",
211:       "weka.core.Attribute",
212:       "weka.core.Stopwords",
213:       "weka.core.FastVector",
214:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
215:       "weka.core.UnassignedDatasetException",
216:       "weka.core.tokenizers.NGramTokenizer",
217:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
218:       "weka.classifiers.RandomizableClassifier",
219:       "weka.classifiers.meta.CVParameterSelection",
220:       "weka.classifiers.SingleClassifierEnhancer",
221:       "weka.core.RevisionUtils",
222:       "weka.core.Instance",
223:       "weka.core.ProtectedProperties",
224:       "weka.estimators.Estimator",
225:       "weka.classifiers.IntervalEstimator",
226:       "weka.core.StringLocator",
227:       "weka.core.Matchable",
228:       "weka.core.AttributeStats",
229:       "weka.core.WeightedInstancesHandler",
230:       "weka.core.neighboursearch.NearestNeighbourSearch",
231:       "weka.classifiers.trees.DecisionStump",
232:       "weka.filters.unsupervised.attribute.Remove",
233:       "weka.filters.unsupervised.attribute.Discretize",
234:       "weka.core.Randomizable",
235:       "weka.classifiers.rules.M5Rules",
236:       "weka.core.EuclideanDistance",
237:       "weka.core.Instances",
238:       "weka.core.UnassignedClassException",
239:       "weka.classifiers.rules.ZeroR",
240:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
241:       "weka.filters.unsupervised.attribute.Standardize",
242:       "weka.core.stemmers.IteratedLovinsStemmer",
243:       "weka.core.TechnicalInformation",
244:       "weka.core.UnsupportedAttributeTypeException",
245:       "weka.classifiers.Sourcable",
246:       "weka.classifiers.functions.Logistic$OptEngCG",
247:       "weka.classifiers.functions.Logistic$OptEng",
248:       "weka.core.RevisionHandler",
249:       "weka.classifiers.evaluation.output.prediction.PlainText",
250:       "weka.core.neighboursearch.TreePerformanceStats",
251:       "weka.core.xml.XMLSerialization",
252:       "weka.filters.unsupervised.attribute.MakeIndicator",
253:       "weka.classifiers.xml.XMLClassifier",
254:       "weka.filters.Filter",
255:       "weka.filters.supervised.attribute.Discretize"
256:     );
257:   } 
258: 
259:   private static void resetClasses() {
260:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding.class.getClassLoader()); 
261: 
262:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
263:       "weka.classifiers.AbstractClassifier",
264:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
265:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
266:       "weka.core.Capabilities$Capability",
267:       "weka.core.tokenizers.Tokenizer",
268:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
269:       "weka.core.tokenizers.WordTokenizer",
270:       "weka.core.stemmers.NullStemmer",
271:       "weka.core.Option",
272:       "weka.classifiers.SingleClassifierEnhancer",
273:       "weka.classifiers.misc.InputMappedClassifier",
274:       "weka.classifiers.rules.ZeroR",
275:       "weka.core.neighboursearch.balltrees.BallNode",
276:       "weka.core.AbstractInstance",
277:       "weka.core.SparseInstance",
278:       "weka.core.BinarySparseInstance",
279:       "weka.core.stemmers.LovinsStemmer",
280:       "weka.core.stemmers.IteratedLovinsStemmer",
281:       "weka.classifiers.Evaluation",
282:       "weka.core.Utils",
283:       "weka.core.stemmers.SnowballStemmer",
284:       "weka.core.UnassignedDatasetException",
285:       "weka.core.RevisionUtils",
286:       "weka.core.Capabilities",
287:       "org.pentaho.packageManagement.PackageManager",
288:       "org.pentaho.packageManagement.DefaultPackageManager",
289:       "weka.core.Version",
290:       "weka.core.Environment",
291:       "weka.core.WekaPackageManager",
292:       "weka.core.stemmers.Stemming",
293:       "weka.classifiers.bayes.BayesNet",
294:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
295:       "weka.core.Tag",
296:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
297:       "weka.classifiers.bayes.net.search.local.K2",
298:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
299:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
300:       "weka.attributeSelection.ASEvaluation",
301:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
302:       "weka.attributeSelection.PrincipalComponents",
303:       "weka.core.DenseInstance",
304:       "weka.classifiers.RandomizableClassifier",
305:       "weka.classifiers.functions.SGDText",
306:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
307:       "weka.classifiers.meta.CostSensitiveClassifier",
308:       "weka.classifiers.CostMatrix",
309:       "weka.filters.Filter",
310:       "weka.core.Instances",
311:       "weka.classifiers.functions.supportVector.Kernel",
312:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
313:       "weka.core.SerializedObject",
314:       "weka.core.TestInstances",
315:       "weka.core.neighboursearch.NearestNeighbourSearch",
316:       "weka.core.neighboursearch.CoverTree",
317:       "weka.core.NormalizableDistance",
318:       "weka.core.EuclideanDistance",
319:       "weka.core.Range",
320:       "weka.classifiers.bayes.NaiveBayesMultinomial",
321:       "weka.core.ListOptions",
322:       "weka.core.Stopwords",
323:       "weka.core.WekaException",
324:       "weka.core.FindWithCapabilities",
325:       "weka.core.SingleIndex",
326:       "weka.core.ClassDiscovery",
327:       "weka.core.Attribute",
328:       "weka.core.ProtectedProperties",
329:       "weka.filters.supervised.attribute.Discretize",
330:       "weka.classifiers.MultipleClassifiersCombiner",
331:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
332:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
333:       "weka.classifiers.meta.Stacking",
334:       "weka.attributeSelection.ASSearch",
335:       "weka.attributeSelection.BestFirst",
336:       "weka.core.SelectedTag",
337:       "weka.core.neighboursearch.KDTree",
338:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
339:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
340:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
341:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
342:       "weka.core.neighboursearch.LinearNNSearch",
343:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
344:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
345:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
346:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
347:       "weka.classifiers.functions.SMO",
348:       "weka.classifiers.functions.supportVector.CachedKernel",
349:       "weka.classifiers.functions.supportVector.PolyKernel",
350:       "weka.classifiers.functions.SGD",
351:       "weka.classifiers.lazy.IBk",
352:       "weka.classifiers.misc.SerializedClassifier",
353:       "weka.classifiers.meta.RegressionByDiscretization",
354:       "weka.filters.unsupervised.attribute.Discretize",
355:       "weka.classifiers.trees.J48",
356:       "weka.classifiers.meta.MultiClassClassifier",
357:       "weka.classifiers.functions.Logistic",
358:       "weka.classifiers.bayes.NaiveBayes",
359:       "weka.classifiers.functions.supportVector.StringKernel",
360:       "weka.classifiers.lazy.KStar",
361:       "weka.classifiers.trees.LMT",
362:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
363:       "weka.classifiers.bayes.net.BIFReader",
364:       "weka.classifiers.IteratedSingleClassifierEnhancer",
365:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
366:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
367:       "weka.classifiers.meta.Bagging",
368:       "weka.classifiers.trees.REPTree",
369:       "weka.core.neighboursearch.BallTree",
370:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
371:       "weka.core.neighboursearch.balltrees.BallSplitter",
372:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
373:       "weka.classifiers.rules.DecisionTable",
374:       "weka.classifiers.functions.GaussianProcesses",
375:       "weka.core.converters.ArffLoader$ArffReader",
376:       "weka.classifiers.rules.JRip",
377:       "weka.classifiers.meta.FilteredClassifier",
378:       "weka.filters.supervised.attribute.AttributeSelection",
379:       "weka.attributeSelection.AttributeSelection",
380:       "weka.attributeSelection.CfsSubsetEval",
381:       "weka.attributeSelection.GreedyStepwise",
382:       "weka.classifiers.meta.RandomCommittee",
383:       "weka.classifiers.trees.RandomTree",
384:       "weka.core.TechnicalInformation",
385:       "weka.core.TechnicalInformation$Type",
386:       "weka.core.TechnicalInformation$Field",
387:       "weka.classifiers.trees.j48.ClassifierTree",
388:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
389:       "weka.core.tokenizers.AlphabeticTokenizer",
390:       "weka.attributeSelection.WrapperSubsetEval",
391:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
392:       "weka.classifiers.meta.MultiScheme",
393:       "weka.classifiers.functions.LinearRegression",
394:       "weka.classifiers.meta.Vote",
395:       "weka.classifiers.functions.SMOreg",
396:       "weka.classifiers.functions.supportVector.RegOptimizer",
397:       "weka.classifiers.functions.supportVector.RegSMO",
398:       "weka.classifiers.functions.supportVector.RegSMOImproved",
399:       "weka.classifiers.trees.m5.M5Base",
400:       "weka.classifiers.rules.M5Rules",
401:       "weka.classifiers.lazy.LWL",
402:       "weka.classifiers.trees.DecisionStump",
403:       "weka.estimators.Estimator",
404:       "weka.estimators.KernelEstimator",
405:       "weka.filters.AllFilter",
406:       "weka.classifiers.meta.AdditiveRegression",
407:       "weka.core.UnassignedClassException",
408:       "weka.classifiers.rules.OneR",
409:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
410:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
411:       "weka.classifiers.meta.AdaBoostM1",
412:       "weka.attributeSelection.InfoGainAttributeEval",
413:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
414:       "weka.classifiers.meta.CVParameterSelection",
415:       "weka.core.FastVector",
416:       "weka.core.UnsupportedAttributeTypeException",
417:       "weka.estimators.PoissonEstimator",
418:       "weka.classifiers.meta.AttributeSelectedClassifier",
419:       "weka.classifiers.rules.PART",
420:       "weka.classifiers.rules.part.MakeDecList",
421:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
422:       "weka.core.matrix.Matrix",
423:       "weka.estimators.NormalEstimator",
424:       "weka.classifiers.functions.SimpleLinearRegression",
425:       "weka.classifiers.trees.M5P",
426:       "weka.classifiers.functions.VotedPerceptron",
427:       "weka.attributeSelection.OneRAttributeEval",
428:       "weka.core.AttributeStats",
429:       "weka.classifiers.functions.supportVector.Puk",
430:       "weka.core.WekaEnumeration",
431:       "weka.core.tokenizers.NGramTokenizer",
432:       "weka.filters.SimpleFilter",
433:       "weka.filters.SimpleStreamFilter",
434:       "weka.filters.MultiFilter",
435:       "weka.classifiers.meta.LogitBoost",
436:       "weka.core.Attribute$1",
437:       "weka.classifiers.meta.ClassificationViaRegression",
438:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
439:       "weka.estimators.DiscreteEstimator",
440:       "weka.attributeSelection.CorrelationAttributeEval",
441:       "weka.classifiers.bayes.NaiveBayesUpdateable",
442:       "weka.attributeSelection.GainRatioAttributeEval",
443:       "weka.classifiers.trees.RandomForest",
444:       "weka.classifiers.functions.SimpleLogistic",
445:       "weka.attributeSelection.ReliefFAttributeEval",
446:       "weka.classifiers.functions.supportVector.RBFKernel",
447:       "weka.core.ChebyshevDistance"
448:     );
449:   }
450: }

[MASTER] 21:46:55.370 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
double[] doubleArray0 = new double[0];
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
DenseInstance denseInstance0 = new DenseInstance(1.0, doubleArray0);
naiveBayesMultinomialText0.tokenizeInstance(denseInstance0, true);

[MASTER] 21:46:56.501 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_63_1575582416461/weka/classifiers/bayes/NaiveBayesMultinomialText_63_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_63_1575582416461/weka/classifiers/bayes/NaiveBayesMultinomialText_63_tmp__ESTest_scaffolding.java]]
[MASTER] 21:46:56.501 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:46:56.501 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:46:56.501 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 45
[MASTER] 21:46:56.501 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 45
[MASTER] 21:46:56.502 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_63_1575582416461/weka/classifiers/bayes/NaiveBayesMultinomialText_63_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 21:46:56 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.testdata.FileSystemHandling;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.classifiers.meta.AdaBoostM1;
17: import weka.core.Capabilities;
18: import weka.core.Instances;
19: import weka.core.TestInstances;
20: import weka.core.stemmers.IteratedLovinsStemmer;
21: import weka.core.stemmers.SnowballStemmer;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
24: public class NaiveBayesMultinomialText_63_tmp__ESTest extends NaiveBayesMultinomialText_63_tmp__ESTest_scaffolding {
25: 
26:   /**
27:   //Test case number: 0
28:   /*Coverage entropy=2.2897831846430745
29:   */
30:   @Test(timeout = 4000)
31:   public void test0()  throws Throwable  {
32:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
33:       SnowballStemmer snowballStemmer0 = new SnowballStemmer("-tokenizer");
34:       snowballStemmer0.toString();
35:       FileSystemHandling.shouldAllThrowIOExceptions();
36:       naiveBayesMultinomialText0.m_wordFrequencies = true;
37:       FileSystemHandling.shouldAllThrowIOExceptions();
38:       naiveBayesMultinomialText0.m_useStopList = true;
39:       IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
40:       AdaBoostM1 adaBoostM1_0 = new AdaBoostM1();
41:       Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
42:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
43:       TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
44:       Instances instances0 = testInstances0.generate();
45:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
46:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
47:       naiveBayesMultinomialText0.buildClassifier(instances0);
48:       double double0 = naiveBayesMultinomialText0.m_norm;
49:       assertEquals(1.0, double0, 0.01);
50:       
51:       Capabilities capabilities1 = naiveBayesMultinomialText0.getCapabilities();
52:       assertEquals(0, capabilities1.getMinimumNumberInstances());
53:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
54:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
55:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
56:   }
57: }
RegularFileObject[/tmp/EvoSuite_63_1575582416461/weka/classifiers/bayes/NaiveBayesMultinomialText_63_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 21:46:56 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_63_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_63_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.trees.m5.M5Base",
97:       "weka.attributeSelection.SubsetEvaluator",
98:       "weka.classifiers.CostMatrix",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.neighboursearch.BallTree",
101:       "weka.core.logging.Logger$Level",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.attributeSelection.CfsSubsetEval",
104:       "weka.core.DenseInstance",
105:       "weka.classifiers.trees.J48",
106:       "weka.core.ConjugateGradientOptimization",
107:       "weka.core.stemmers.Stemmer",
108:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
109:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
110:       "org.pentaho.packageManagement.DefaultPackageManager",
111:       "org.bounce.net.DefaultAuthenticator",
112:       "weka.classifiers.meta.MultiClassClassifier$RandomCode",
113:       "weka.estimators.IncrementalEstimator",
114:       "weka.estimators.Estimator$Builder",
115:       "weka.core.stemmers.NullStemmer",
116:       "weka.core.EnvironmentHandler",
117:       "weka.classifiers.trees.j48.C45ModelSelection",
118:       "weka.classifiers.functions.SGDText",
119:       "weka.classifiers.functions.Logistic",
120:       "weka.classifiers.trees.m5.RuleNode",
121:       "weka.core.RelationalLocator",
122:       "weka.core.Utils",
123:       "weka.classifiers.meta.AdaBoostM1",
124:       "weka.core.CustomDisplayStringProvider",
125:       "weka.core.tokenizers.Tokenizer",
126:       "weka.filters.unsupervised.instance.RemoveWithValues",
127:       "weka.core.NormalizableDistance",
128:       "weka.core.NoSupportForMissingValuesException",
129:       "weka.classifiers.UpdateableClassifier",
130:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
131:       "weka.core.MultiInstanceCapabilitiesHandler",
132:       "weka.classifiers.meta.MultiClassClassifier$ExhaustiveCode",
133:       "weka.core.Copyable",
134:       "weka.core.Capabilities",
135:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
136:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
137:       "weka.core.BinarySparseInstance",
138:       "weka.filters.supervised.attribute.NominalToBinary",
139:       "weka.core.AttributeLocator",
140:       "weka.core.SerializedObject",
141:       "weka.classifiers.meta.RegressionByDiscretization",
142:       "weka.clusterers.UpdateableClusterer",
143:       "weka.attributeSelection.BestFirst",
144:       "weka.core.Summarizable",
145:       "weka.classifiers.trees.j48.ModelSelection",
146:       "weka.core.AdditionalMeasureProducer",
147:       "weka.core.neighboursearch.balltrees.BallNode",
148:       "org.pentaho.packageManagement.PackageManager$1",
149:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
150:       "weka.classifiers.meta.MultiClassClassifier",
151:       "weka.core.Drawable",
152:       "weka.core.Optimization",
153:       "weka.core.matrix.Matrix",
154:       "weka.classifiers.ConditionalDensityEstimator",
155:       "weka.core.CapabilitiesHandler",
156:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
157:       "weka.attributeSelection.ASEvaluation",
158:       "weka.core.AbstractInstance",
159:       "weka.core.scripting.JythonObject",
160:       "weka.core.SelectedTag",
161:       "org.pentaho.packageManagement.DefaultPackage",
162:       "weka.core.neighboursearch.balltrees.BallSplitter",
163:       "weka.classifiers.misc.InputMappedClassifier",
164:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
165:       "weka.core.Queue",
166:       "weka.core.Version",
167:       "weka.classifiers.meta.MultiClassClassifier$Code",
168:       "weka.filters.unsupervised.attribute.RemoveUseless",
169:       "weka.core.Tag",
170:       "weka.classifiers.IteratedSingleClassifierEnhancer",
171:       "weka.classifiers.trees.j48.BinC45ModelSelection",
172:       "weka.classifiers.AbstractClassifier",
173:       "weka.estimators.UnivariateDensityEstimator",
174:       "weka.filters.unsupervised.attribute.Center",
175:       "weka.core.OptionHandler",
176:       "weka.core.WekaException",
177:       "weka.filters.StreamableFilter",
178:       "weka.core.Range",
179:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
180:       "weka.core.PartitionGenerator",
181:       "weka.core.scripting.JythonSerializableObject",
182:       "weka.classifiers.Classifier",
183:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
184:       "weka.core.Capabilities$Capability",
185:       "weka.core.SparseInstance",
186:       "org.pentaho.packageManagement.PackageManager",
187:       "weka.attributeSelection.AttributeTransformer",
188:       "weka.core.tokenizers.WordTokenizer",
189:       "weka.classifiers.trees.j48.ClassifierTree",
190:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
191:       "weka.attributeSelection.PrincipalComponents",
192:       "weka.core.stemmers.SnowballStemmer",
193:       "weka.classifiers.trees.j48.PruneableClassifierTree",
194:       "weka.core.stemmers.LovinsStemmer",
195:       "weka.classifiers.Evaluation",
196:       "weka.attributeSelection.ASSearch",
197:       "weka.classifiers.functions.supportVector.Kernel",
198:       "weka.core.WekaPackageManager",
199:       "weka.filters.SupervisedFilter",
200:       "weka.core.TechnicalInformationHandler",
201:       "weka.attributeSelection.StartSetHandler",
202:       "weka.core.neighboursearch.LinearNNSearch",
203:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
204:       "weka.classifiers.meta.CostSensitiveClassifier",
205:       "weka.core.Option",
206:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
207:       "weka.core.neighboursearch.PerformanceStats",
208:       "weka.estimators.KernelEstimator",
209:       "weka.filters.Sourcable",
210:       "weka.classifiers.meta.MultiClassClassifier$StandardCode",
211:       "weka.core.Attribute",
212:       "weka.core.Stopwords",
213:       "weka.core.FastVector",
214:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
215:       "weka.core.UnassignedDatasetException",
216:       "weka.core.tokenizers.NGramTokenizer",
217:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
218:       "weka.classifiers.RandomizableClassifier",
219:       "weka.classifiers.meta.CVParameterSelection",
220:       "weka.classifiers.SingleClassifierEnhancer",
221:       "weka.core.RevisionUtils",
222:       "weka.core.Instance",
223:       "weka.core.ProtectedProperties",
224:       "weka.estimators.Estimator",
225:       "weka.classifiers.IntervalEstimator",
226:       "weka.core.StringLocator",
227:       "weka.core.Matchable",
228:       "weka.core.AttributeStats",
229:       "weka.core.WeightedInstancesHandler",
230:       "weka.core.neighboursearch.NearestNeighbourSearch",
231:       "weka.classifiers.trees.DecisionStump",
232:       "weka.filters.unsupervised.attribute.Remove",
233:       "weka.filters.unsupervised.attribute.Discretize",
234:       "weka.core.Randomizable",
235:       "weka.classifiers.rules.M5Rules",
236:       "weka.core.EuclideanDistance",
237:       "weka.core.Instances",
238:       "weka.core.UnassignedClassException",
239:       "weka.classifiers.rules.ZeroR",
240:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
241:       "weka.filters.unsupervised.attribute.Standardize",
242:       "weka.core.stemmers.IteratedLovinsStemmer",
243:       "weka.core.TechnicalInformation",
244:       "weka.core.UnsupportedAttributeTypeException",
245:       "weka.classifiers.Sourcable",
246:       "weka.classifiers.functions.Logistic$OptEngCG",
247:       "weka.classifiers.functions.Logistic$OptEng",
248:       "weka.core.RevisionHandler",
249:       "weka.classifiers.evaluation.output.prediction.PlainText",
250:       "weka.core.neighboursearch.TreePerformanceStats",
251:       "weka.core.xml.XMLSerialization",
252:       "weka.filters.unsupervised.attribute.MakeIndicator",
253:       "weka.classifiers.xml.XMLClassifier",
254:       "weka.filters.Filter",
255:       "weka.filters.supervised.attribute.Discretize"
256:     );
257:   } 
258: 
259:   private static void resetClasses() {
260:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_63_tmp__ESTest_scaffolding.class.getClassLoader()); 
261: 
262:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
263:       "weka.classifiers.AbstractClassifier",
264:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
265:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
266:       "weka.core.Capabilities$Capability",
267:       "weka.core.tokenizers.Tokenizer",
268:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
269:       "weka.core.tokenizers.WordTokenizer",
270:       "weka.core.stemmers.NullStemmer",
271:       "weka.core.Option",
272:       "weka.classifiers.SingleClassifierEnhancer",
273:       "weka.classifiers.misc.InputMappedClassifier",
274:       "weka.classifiers.rules.ZeroR",
275:       "weka.core.neighboursearch.balltrees.BallNode",
276:       "weka.core.AbstractInstance",
277:       "weka.core.SparseInstance",
278:       "weka.core.BinarySparseInstance",
279:       "weka.core.stemmers.LovinsStemmer",
280:       "weka.core.stemmers.IteratedLovinsStemmer",
281:       "weka.classifiers.Evaluation",
282:       "weka.core.Utils",
283:       "weka.core.stemmers.SnowballStemmer",
284:       "weka.core.UnassignedDatasetException",
285:       "weka.core.RevisionUtils",
286:       "weka.core.Capabilities",
287:       "org.pentaho.packageManagement.PackageManager",
288:       "org.pentaho.packageManagement.DefaultPackageManager",
289:       "weka.core.Version",
290:       "weka.core.Environment",
291:       "weka.core.WekaPackageManager",
292:       "weka.core.stemmers.Stemming",
293:       "weka.classifiers.bayes.BayesNet",
294:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
295:       "weka.core.Tag",
296:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
297:       "weka.classifiers.bayes.net.search.local.K2",
298:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
299:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
300:       "weka.attributeSelection.ASEvaluation",
301:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
302:       "weka.attributeSelection.PrincipalComponents",
303:       "weka.core.DenseInstance",
304:       "weka.classifiers.RandomizableClassifier",
305:       "weka.classifiers.functions.SGDText",
306:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
307:       "weka.classifiers.meta.CostSensitiveClassifier",
308:       "weka.classifiers.CostMatrix",
309:       "weka.filters.Filter",
310:       "weka.core.Instances",
311:       "weka.classifiers.functions.supportVector.Kernel",
312:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
313:       "weka.core.SerializedObject",
314:       "weka.core.TestInstances",
315:       "weka.core.neighboursearch.NearestNeighbourSearch",
316:       "weka.core.neighboursearch.CoverTree",
317:       "weka.core.NormalizableDistance",
318:       "weka.core.EuclideanDistance",
319:       "weka.core.Range",
320:       "weka.classifiers.bayes.NaiveBayesMultinomial",
321:       "weka.core.ListOptions",
322:       "weka.core.Stopwords",
323:       "weka.core.WekaException",
324:       "weka.core.FindWithCapabilities",
325:       "weka.core.SingleIndex",
326:       "weka.core.ClassDiscovery",
327:       "weka.core.Attribute",
328:       "weka.core.ProtectedProperties",
329:       "weka.filters.supervised.attribute.Discretize",
330:       "weka.classifiers.MultipleClassifiersCombiner",
331:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
332:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
333:       "weka.classifiers.meta.Stacking",
334:       "weka.attributeSelection.ASSearch",
335:       "weka.attributeSelection.BestFirst",
336:       "weka.core.SelectedTag",
337:       "weka.core.neighboursearch.KDTree",
338:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
339:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
340:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
341:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
342:       "weka.core.neighboursearch.LinearNNSearch",
343:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
344:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
345:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
346:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
347:       "weka.classifiers.functions.SMO",
348:       "weka.classifiers.functions.supportVector.CachedKernel",
349:       "weka.classifiers.functions.supportVector.PolyKernel",
350:       "weka.classifiers.functions.SGD",
351:       "weka.classifiers.lazy.IBk",
352:       "weka.classifiers.misc.SerializedClassifier",
353:       "weka.classifiers.meta.RegressionByDiscretization",
354:       "weka.filters.unsupervised.attribute.Discretize",
355:       "weka.classifiers.trees.J48",
356:       "weka.classifiers.meta.MultiClassClassifier",
357:       "weka.classifiers.functions.Logistic",
358:       "weka.classifiers.bayes.NaiveBayes",
359:       "weka.classifiers.functions.supportVector.StringKernel",
360:       "weka.classifiers.lazy.KStar",
361:       "weka.classifiers.trees.LMT",
362:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
363:       "weka.classifiers.bayes.net.BIFReader",
364:       "weka.classifiers.IteratedSingleClassifierEnhancer",
365:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
366:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
367:       "weka.classifiers.meta.Bagging",
368:       "weka.classifiers.trees.REPTree",
369:       "weka.core.neighboursearch.BallTree",
370:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
371:       "weka.core.neighboursearch.balltrees.BallSplitter",
372:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
373:       "weka.classifiers.rules.DecisionTable",
374:       "weka.classifiers.functions.GaussianProcesses",
375:       "weka.core.converters.ArffLoader$ArffReader",
376:       "weka.classifiers.rules.JRip",
377:       "weka.classifiers.meta.FilteredClassifier",
378:       "weka.filters.supervised.attribute.AttributeSelection",
379:       "weka.attributeSelection.AttributeSelection",
380:       "weka.attributeSelection.CfsSubsetEval",
381:       "weka.attributeSelection.GreedyStepwise",
382:       "weka.classifiers.meta.RandomCommittee",
383:       "weka.classifiers.trees.RandomTree",
384:       "weka.core.TechnicalInformation",
385:       "weka.core.TechnicalInformation$Type",
386:       "weka.core.TechnicalInformation$Field",
387:       "weka.classifiers.trees.j48.ClassifierTree",
388:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
389:       "weka.core.tokenizers.AlphabeticTokenizer",
390:       "weka.attributeSelection.WrapperSubsetEval",
391:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
392:       "weka.classifiers.meta.MultiScheme",
393:       "weka.classifiers.functions.LinearRegression",
394:       "weka.classifiers.meta.Vote",
395:       "weka.classifiers.functions.SMOreg",
396:       "weka.classifiers.functions.supportVector.RegOptimizer",
397:       "weka.classifiers.functions.supportVector.RegSMO",
398:       "weka.classifiers.functions.supportVector.RegSMOImproved",
399:       "weka.classifiers.trees.m5.M5Base",
400:       "weka.classifiers.rules.M5Rules",
401:       "weka.classifiers.lazy.LWL",
402:       "weka.classifiers.trees.DecisionStump",
403:       "weka.estimators.Estimator",
404:       "weka.estimators.KernelEstimator",
405:       "weka.filters.AllFilter",
406:       "weka.classifiers.meta.AdditiveRegression",
407:       "weka.core.UnassignedClassException",
408:       "weka.classifiers.rules.OneR",
409:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
410:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
411:       "weka.classifiers.meta.AdaBoostM1",
412:       "weka.attributeSelection.InfoGainAttributeEval",
413:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
414:       "weka.classifiers.meta.CVParameterSelection",
415:       "weka.core.FastVector",
416:       "weka.core.UnsupportedAttributeTypeException",
417:       "weka.estimators.PoissonEstimator",
418:       "weka.classifiers.meta.AttributeSelectedClassifier",
419:       "weka.classifiers.rules.PART",
420:       "weka.classifiers.rules.part.MakeDecList",
421:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
422:       "weka.core.matrix.Matrix",
423:       "weka.estimators.NormalEstimator",
424:       "weka.classifiers.functions.SimpleLinearRegression",
425:       "weka.classifiers.trees.M5P",
426:       "weka.classifiers.functions.VotedPerceptron",
427:       "weka.attributeSelection.OneRAttributeEval",
428:       "weka.core.AttributeStats",
429:       "weka.classifiers.functions.supportVector.Puk",
430:       "weka.core.WekaEnumeration",
431:       "weka.core.tokenizers.NGramTokenizer",
432:       "weka.filters.SimpleFilter",
433:       "weka.filters.SimpleStreamFilter",
434:       "weka.filters.MultiFilter",
435:       "weka.classifiers.meta.LogitBoost",
436:       "weka.core.Attribute$1",
437:       "weka.classifiers.meta.ClassificationViaRegression",
438:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
439:       "weka.estimators.DiscreteEstimator",
440:       "weka.attributeSelection.CorrelationAttributeEval",
441:       "weka.classifiers.bayes.NaiveBayesUpdateable",
442:       "weka.attributeSelection.GainRatioAttributeEval",
443:       "weka.classifiers.trees.RandomForest",
444:       "weka.classifiers.functions.SimpleLogistic",
445:       "weka.attributeSelection.ReliefFAttributeEval",
446:       "weka.classifiers.functions.supportVector.RBFKernel",
447:       "weka.core.ChebyshevDistance"
448:     );
449:   }
450: }

[MASTER] 21:46:56.504 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
SnowballStemmer snowballStemmer0 = new SnowballStemmer("-tokenizer");
snowballStemmer0.toString();
FileSystemHandling.shouldAllThrowIOExceptions();
naiveBayesMultinomialText0.m_wordFrequencies = true;
FileSystemHandling.shouldAllThrowIOExceptions();
naiveBayesMultinomialText0.m_useStopList = true;
IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
AdaBoostM1 adaBoostM1_0 = new AdaBoostM1();
Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
Instances instances0 = testInstances0.generate();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.buildClassifier(instances0);
double double0 = naiveBayesMultinomialText0.m_norm;
assertEquals(1.0, double0, 0.01);

Capabilities capabilities1 = naiveBayesMultinomialText0.getCapabilities();
assertEquals(0, capabilities1.getMinimumNumberInstances());
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);


[MASTER] 21:46:56.915 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_74_1575582416886/weka/classifiers/bayes/NaiveBayesMultinomialText_74_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_74_1575582416886/weka/classifiers/bayes/NaiveBayesMultinomialText_74_tmp__ESTest_scaffolding.java]]
[MASTER] 21:46:56.916 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:46:56.916 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:46:56.917 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 21:46:56.917 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 21:46:56.919 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_74_1575582416886/weka/classifiers/bayes/NaiveBayesMultinomialText_74_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 21:46:56 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.Random;
15: import org.evosuite.runtime.System;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.DenseInstance;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_74_tmp__ESTest extends NaiveBayesMultinomialText_74_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=3.196422294125466
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       long long0 = 0L;
31:       System.setCurrentTimeMillis(0L);
32:       System.setCurrentTimeMillis(0L);
33:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
34:       naiveBayesMultinomialText0.m_stemmer = null;
35:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
36:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
37:       naiveBayesMultinomialText0.listOptions();
38:       naiveBayesMultinomialText0.pruneDictionary();
39:       naiveBayesMultinomialText0.globalInfo();
40:       naiveBayesMultinomialText0.getOptions();
41:       naiveBayesMultinomialText0.getLowercaseTokens();
42:       double[] doubleArray0 = new double[7];
43:       doubleArray0[0] = (double) 0L;
44:       doubleArray0[1] = (double) 0L;
45:       naiveBayesMultinomialText0.m_lowercaseTokens = true;
46:       doubleArray0[2] = (double) 0L;
47:       doubleArray0[3] = (double) 0L;
48:       doubleArray0[4] = (double) 0L;
49:       FileSystemHandling.shouldAllThrowIOExceptions();
50:       doubleArray0[5] = (double) 0L;
51:       doubleArray0[6] = (-2527.4);
52:       FileSystemHandling.shouldAllThrowIOExceptions();
53:       DenseInstance denseInstance0 = new DenseInstance(0L, doubleArray0);
54:       try { 
55:         naiveBayesMultinomialText0.updateClassifier(denseInstance0);
56:         fail("Expecting exception: RuntimeException");
57:       
58:       } catch(RuntimeException e) {
59:          //
60:          // DenseInstance doesn't have access to a dataset!
61:          //
62:          verifyException("weka.core.AbstractInstance", e);
63:       }
64:   }
65: }
RegularFileObject[/tmp/EvoSuite_74_1575582416886/weka/classifiers/bayes/NaiveBayesMultinomialText_74_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 21:46:56 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_74_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_74_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.trees.m5.M5Base",
97:       "weka.attributeSelection.SubsetEvaluator",
98:       "weka.classifiers.CostMatrix",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.neighboursearch.BallTree",
101:       "weka.core.logging.Logger$Level",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.attributeSelection.CfsSubsetEval",
104:       "weka.core.DenseInstance",
105:       "weka.classifiers.trees.J48",
106:       "weka.core.ConjugateGradientOptimization",
107:       "weka.core.stemmers.Stemmer",
108:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
109:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
110:       "org.pentaho.packageManagement.DefaultPackageManager",
111:       "org.bounce.net.DefaultAuthenticator",
112:       "weka.classifiers.meta.MultiClassClassifier$RandomCode",
113:       "weka.estimators.IncrementalEstimator",
114:       "weka.estimators.Estimator$Builder",
115:       "weka.core.stemmers.NullStemmer",
116:       "weka.core.EnvironmentHandler",
117:       "weka.classifiers.trees.j48.C45ModelSelection",
118:       "weka.classifiers.functions.SGDText",
119:       "weka.classifiers.functions.Logistic",
120:       "weka.classifiers.trees.m5.RuleNode",
121:       "weka.core.RelationalLocator",
122:       "weka.core.Utils",
123:       "weka.classifiers.meta.AdaBoostM1",
124:       "weka.core.CustomDisplayStringProvider",
125:       "weka.core.tokenizers.Tokenizer",
126:       "weka.filters.unsupervised.instance.RemoveWithValues",
127:       "weka.core.NormalizableDistance",
128:       "weka.core.NoSupportForMissingValuesException",
129:       "weka.classifiers.UpdateableClassifier",
130:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
131:       "weka.core.MultiInstanceCapabilitiesHandler",
132:       "weka.classifiers.meta.MultiClassClassifier$ExhaustiveCode",
133:       "weka.core.Copyable",
134:       "weka.core.Capabilities",
135:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
136:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
137:       "weka.core.BinarySparseInstance",
138:       "weka.filters.supervised.attribute.NominalToBinary",
139:       "weka.core.AttributeLocator",
140:       "weka.core.SerializedObject",
141:       "weka.classifiers.meta.RegressionByDiscretization",
142:       "weka.clusterers.UpdateableClusterer",
143:       "weka.attributeSelection.BestFirst",
144:       "weka.core.Summarizable",
145:       "weka.classifiers.trees.j48.ModelSelection",
146:       "weka.core.AdditionalMeasureProducer",
147:       "weka.core.neighboursearch.balltrees.BallNode",
148:       "org.pentaho.packageManagement.PackageManager$1",
149:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
150:       "weka.classifiers.meta.MultiClassClassifier",
151:       "weka.core.Drawable",
152:       "weka.core.Optimization",
153:       "weka.core.matrix.Matrix",
154:       "weka.classifiers.ConditionalDensityEstimator",
155:       "weka.core.CapabilitiesHandler",
156:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
157:       "weka.attributeSelection.ASEvaluation",
158:       "weka.core.AbstractInstance",
159:       "weka.core.scripting.JythonObject",
160:       "weka.core.SelectedTag",
161:       "org.pentaho.packageManagement.DefaultPackage",
162:       "weka.core.neighboursearch.balltrees.BallSplitter",
163:       "weka.classifiers.misc.InputMappedClassifier",
164:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
165:       "weka.core.Queue",
166:       "weka.core.Version",
167:       "weka.classifiers.meta.MultiClassClassifier$Code",
168:       "weka.filters.unsupervised.attribute.RemoveUseless",
169:       "weka.core.Tag",
170:       "weka.classifiers.IteratedSingleClassifierEnhancer",
171:       "weka.classifiers.trees.j48.BinC45ModelSelection",
172:       "weka.classifiers.AbstractClassifier",
173:       "weka.estimators.UnivariateDensityEstimator",
174:       "weka.filters.unsupervised.attribute.Center",
175:       "weka.core.OptionHandler",
176:       "weka.core.WekaException",
177:       "weka.filters.StreamableFilter",
178:       "weka.core.Range",
179:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
180:       "weka.core.PartitionGenerator",
181:       "weka.core.scripting.JythonSerializableObject",
182:       "weka.classifiers.Classifier",
183:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
184:       "weka.core.Capabilities$Capability",
185:       "weka.core.SparseInstance",
186:       "org.pentaho.packageManagement.PackageManager",
187:       "weka.attributeSelection.AttributeTransformer",
188:       "weka.core.tokenizers.WordTokenizer",
189:       "weka.classifiers.trees.j48.ClassifierTree",
190:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
191:       "weka.attributeSelection.PrincipalComponents",
192:       "weka.core.stemmers.SnowballStemmer",
193:       "weka.classifiers.trees.j48.PruneableClassifierTree",
194:       "weka.core.stemmers.LovinsStemmer",
195:       "weka.classifiers.Evaluation",
196:       "weka.attributeSelection.ASSearch",
197:       "weka.classifiers.functions.supportVector.Kernel",
198:       "weka.core.WekaPackageManager",
199:       "weka.filters.SupervisedFilter",
200:       "weka.core.TechnicalInformationHandler",
201:       "weka.attributeSelection.StartSetHandler",
202:       "weka.core.neighboursearch.LinearNNSearch",
203:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
204:       "weka.classifiers.meta.CostSensitiveClassifier",
205:       "weka.core.Option",
206:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
207:       "weka.core.neighboursearch.PerformanceStats",
208:       "weka.estimators.KernelEstimator",
209:       "weka.filters.Sourcable",
210:       "weka.classifiers.meta.MultiClassClassifier$StandardCode",
211:       "weka.core.Attribute",
212:       "weka.core.Stopwords",
213:       "weka.core.FastVector",
214:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
215:       "weka.core.UnassignedDatasetException",
216:       "weka.core.tokenizers.NGramTokenizer",
217:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
218:       "weka.classifiers.RandomizableClassifier",
219:       "weka.classifiers.meta.CVParameterSelection",
220:       "weka.classifiers.SingleClassifierEnhancer",
221:       "weka.core.RevisionUtils",
222:       "weka.core.Instance",
223:       "weka.core.ProtectedProperties",
224:       "weka.estimators.Estimator",
225:       "weka.classifiers.IntervalEstimator",
226:       "weka.core.StringLocator",
227:       "weka.core.Matchable",
228:       "weka.core.AttributeStats",
229:       "weka.core.WeightedInstancesHandler",
230:       "weka.core.neighboursearch.NearestNeighbourSearch",
231:       "weka.classifiers.trees.DecisionStump",
232:       "weka.filters.unsupervised.attribute.Remove",
233:       "weka.filters.unsupervised.attribute.Discretize",
234:       "weka.core.Randomizable",
235:       "weka.classifiers.rules.M5Rules",
236:       "weka.core.EuclideanDistance",
237:       "weka.core.Instances",
238:       "weka.core.UnassignedClassException",
239:       "weka.classifiers.rules.ZeroR",
240:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
241:       "weka.filters.unsupervised.attribute.Standardize",
242:       "weka.core.stemmers.IteratedLovinsStemmer",
243:       "weka.core.TechnicalInformation",
244:       "weka.core.UnsupportedAttributeTypeException",
245:       "weka.classifiers.Sourcable",
246:       "weka.classifiers.functions.Logistic$OptEngCG",
247:       "weka.classifiers.functions.Logistic$OptEng",
248:       "weka.core.RevisionHandler",
249:       "weka.classifiers.evaluation.output.prediction.PlainText",
250:       "weka.core.neighboursearch.TreePerformanceStats",
251:       "weka.core.xml.XMLSerialization",
252:       "weka.filters.unsupervised.attribute.MakeIndicator",
253:       "weka.classifiers.xml.XMLClassifier",
254:       "weka.filters.Filter",
255:       "weka.filters.supervised.attribute.Discretize"
256:     );
257:   } 
258: 
259:   private static void resetClasses() {
260:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_74_tmp__ESTest_scaffolding.class.getClassLoader()); 
261: 
262:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
263:       "weka.classifiers.AbstractClassifier",
264:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
265:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
266:       "weka.core.Capabilities$Capability",
267:       "weka.core.tokenizers.Tokenizer",
268:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
269:       "weka.core.tokenizers.WordTokenizer",
270:       "weka.core.stemmers.NullStemmer",
271:       "weka.core.Option",
272:       "weka.classifiers.SingleClassifierEnhancer",
273:       "weka.classifiers.misc.InputMappedClassifier",
274:       "weka.classifiers.rules.ZeroR",
275:       "weka.core.neighboursearch.balltrees.BallNode",
276:       "weka.core.AbstractInstance",
277:       "weka.core.SparseInstance",
278:       "weka.core.BinarySparseInstance",
279:       "weka.core.stemmers.LovinsStemmer",
280:       "weka.core.stemmers.IteratedLovinsStemmer",
281:       "weka.classifiers.Evaluation",
282:       "weka.core.Utils",
283:       "weka.core.stemmers.SnowballStemmer",
284:       "weka.core.UnassignedDatasetException",
285:       "weka.core.RevisionUtils",
286:       "weka.core.Capabilities",
287:       "org.pentaho.packageManagement.PackageManager",
288:       "org.pentaho.packageManagement.DefaultPackageManager",
289:       "weka.core.Version",
290:       "weka.core.Environment",
291:       "weka.core.WekaPackageManager",
292:       "weka.core.stemmers.Stemming",
293:       "weka.classifiers.bayes.BayesNet",
294:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
295:       "weka.core.Tag",
296:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
297:       "weka.classifiers.bayes.net.search.local.K2",
298:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
299:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
300:       "weka.attributeSelection.ASEvaluation",
301:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
302:       "weka.attributeSelection.PrincipalComponents",
303:       "weka.core.DenseInstance",
304:       "weka.classifiers.RandomizableClassifier",
305:       "weka.classifiers.functions.SGDText",
306:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
307:       "weka.classifiers.meta.CostSensitiveClassifier",
308:       "weka.classifiers.CostMatrix",
309:       "weka.filters.Filter",
310:       "weka.core.Instances",
311:       "weka.classifiers.functions.supportVector.Kernel",
312:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
313:       "weka.core.SerializedObject",
314:       "weka.core.TestInstances",
315:       "weka.core.neighboursearch.NearestNeighbourSearch",
316:       "weka.core.neighboursearch.CoverTree",
317:       "weka.core.NormalizableDistance",
318:       "weka.core.EuclideanDistance",
319:       "weka.core.Range",
320:       "weka.classifiers.bayes.NaiveBayesMultinomial",
321:       "weka.core.ListOptions",
322:       "weka.core.Stopwords",
323:       "weka.core.WekaException",
324:       "weka.core.FindWithCapabilities",
325:       "weka.core.SingleIndex",
326:       "weka.core.ClassDiscovery",
327:       "weka.core.Attribute",
328:       "weka.core.ProtectedProperties",
329:       "weka.filters.supervised.attribute.Discretize",
330:       "weka.classifiers.MultipleClassifiersCombiner",
331:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
332:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
333:       "weka.classifiers.meta.Stacking",
334:       "weka.attributeSelection.ASSearch",
335:       "weka.attributeSelection.BestFirst",
336:       "weka.core.SelectedTag",
337:       "weka.core.neighboursearch.KDTree",
338:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
339:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
340:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
341:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
342:       "weka.core.neighboursearch.LinearNNSearch",
343:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
344:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
345:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
346:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
347:       "weka.classifiers.functions.SMO",
348:       "weka.classifiers.functions.supportVector.CachedKernel",
349:       "weka.classifiers.functions.supportVector.PolyKernel",
350:       "weka.classifiers.functions.SGD",
351:       "weka.classifiers.lazy.IBk",
352:       "weka.classifiers.misc.SerializedClassifier",
353:       "weka.classifiers.meta.RegressionByDiscretization",
354:       "weka.filters.unsupervised.attribute.Discretize",
355:       "weka.classifiers.trees.J48",
356:       "weka.classifiers.meta.MultiClassClassifier",
357:       "weka.classifiers.functions.Logistic",
358:       "weka.classifiers.bayes.NaiveBayes",
359:       "weka.classifiers.functions.supportVector.StringKernel",
360:       "weka.classifiers.lazy.KStar",
361:       "weka.classifiers.trees.LMT",
362:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
363:       "weka.classifiers.bayes.net.BIFReader",
364:       "weka.classifiers.IteratedSingleClassifierEnhancer",
365:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
366:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
367:       "weka.classifiers.meta.Bagging",
368:       "weka.classifiers.trees.REPTree",
369:       "weka.core.neighboursearch.BallTree",
370:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
371:       "weka.core.neighboursearch.balltrees.BallSplitter",
372:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
373:       "weka.classifiers.rules.DecisionTable",
374:       "weka.classifiers.functions.GaussianProcesses",
375:       "weka.core.converters.ArffLoader$ArffReader",
376:       "weka.classifiers.rules.JRip",
377:       "weka.classifiers.meta.FilteredClassifier",
378:       "weka.filters.supervised.attribute.AttributeSelection",
379:       "weka.attributeSelection.AttributeSelection",
380:       "weka.attributeSelection.CfsSubsetEval",
381:       "weka.attributeSelection.GreedyStepwise",
382:       "weka.classifiers.meta.RandomCommittee",
383:       "weka.classifiers.trees.RandomTree",
384:       "weka.core.TechnicalInformation",
385:       "weka.core.TechnicalInformation$Type",
386:       "weka.core.TechnicalInformation$Field",
387:       "weka.classifiers.trees.j48.ClassifierTree",
388:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
389:       "weka.core.tokenizers.AlphabeticTokenizer",
390:       "weka.attributeSelection.WrapperSubsetEval",
391:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
392:       "weka.classifiers.meta.MultiScheme",
393:       "weka.classifiers.functions.LinearRegression",
394:       "weka.classifiers.meta.Vote",
395:       "weka.classifiers.functions.SMOreg",
396:       "weka.classifiers.functions.supportVector.RegOptimizer",
397:       "weka.classifiers.functions.supportVector.RegSMO",
398:       "weka.classifiers.functions.supportVector.RegSMOImproved",
399:       "weka.classifiers.trees.m5.M5Base",
400:       "weka.classifiers.rules.M5Rules",
401:       "weka.classifiers.lazy.LWL",
402:       "weka.classifiers.trees.DecisionStump",
403:       "weka.estimators.Estimator",
404:       "weka.estimators.KernelEstimator",
405:       "weka.filters.AllFilter",
406:       "weka.classifiers.meta.AdditiveRegression",
407:       "weka.core.UnassignedClassException",
408:       "weka.classifiers.rules.OneR",
409:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
410:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
411:       "weka.classifiers.meta.AdaBoostM1",
412:       "weka.attributeSelection.InfoGainAttributeEval",
413:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
414:       "weka.classifiers.meta.CVParameterSelection",
415:       "weka.core.FastVector",
416:       "weka.core.UnsupportedAttributeTypeException",
417:       "weka.estimators.PoissonEstimator",
418:       "weka.classifiers.meta.AttributeSelectedClassifier",
419:       "weka.classifiers.rules.PART",
420:       "weka.classifiers.rules.part.MakeDecList",
421:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
422:       "weka.core.matrix.Matrix",
423:       "weka.estimators.NormalEstimator",
424:       "weka.classifiers.functions.SimpleLinearRegression",
425:       "weka.classifiers.trees.M5P",
426:       "weka.classifiers.functions.VotedPerceptron",
427:       "weka.attributeSelection.OneRAttributeEval",
428:       "weka.core.AttributeStats",
429:       "weka.classifiers.functions.supportVector.Puk",
430:       "weka.core.WekaEnumeration",
431:       "weka.core.tokenizers.NGramTokenizer",
432:       "weka.filters.SimpleFilter",
433:       "weka.filters.SimpleStreamFilter",
434:       "weka.filters.MultiFilter",
435:       "weka.classifiers.meta.LogitBoost",
436:       "weka.core.Attribute$1",
437:       "weka.classifiers.meta.ClassificationViaRegression",
438:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
439:       "weka.estimators.DiscreteEstimator",
440:       "weka.attributeSelection.CorrelationAttributeEval",
441:       "weka.classifiers.bayes.NaiveBayesUpdateable",
442:       "weka.attributeSelection.GainRatioAttributeEval",
443:       "weka.classifiers.trees.RandomForest",
444:       "weka.classifiers.functions.SimpleLogistic",
445:       "weka.attributeSelection.ReliefFAttributeEval",
446:       "weka.classifiers.functions.supportVector.RBFKernel",
447:       "weka.core.ChebyshevDistance"
448:     );
449:   }
450: }

[MASTER] 21:46:56.920 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
long long0 = 0L;
System.setCurrentTimeMillis(0L);
System.setCurrentTimeMillis(0L);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_stemmer = null;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.listOptions();
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.globalInfo();
naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.getLowercaseTokens();
double[] doubleArray0 = new double[7];
doubleArray0[0] = (double) 0L;
doubleArray0[1] = (double) 0L;
naiveBayesMultinomialText0.m_lowercaseTokens = true;
doubleArray0[2] = (double) 0L;
doubleArray0[3] = (double) 0L;
doubleArray0[4] = (double) 0L;
FileSystemHandling.shouldAllThrowIOExceptions();
doubleArray0[5] = (double) 0L;
doubleArray0[6] = (-2527.4);
FileSystemHandling.shouldAllThrowIOExceptions();
DenseInstance denseInstance0 = new DenseInstance(0L, doubleArray0);
naiveBayesMultinomialText0.updateClassifier(denseInstance0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1007/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 19700
* Connecting to master process on port 19695
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:48:04.136 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:48:04.154 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:48:04.155 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:48:04.322 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 21:48:04.327 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 21:48:04.340 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1007
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:48:16.449 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:48:16.454 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:48:16.455 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:48:16.494 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1007
* Starting evolution
[MASTER] 21:48:20.623 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 123s and 161 generations, 59039 statements, best individual has fitness: 9120.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 41%
* Total number of goals: 370
* Number of covered goals: 153
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 28%
* Total number of goals: 242
* Number of covered goals: 67
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 27%
* Total number of goals: 713
* Number of covered goals: 194
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 36%
* Total number of goals: 72
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 28%
* Total number of goals: 242
* Number of covered goals: 67
* Generated 58 tests with total length 292
* Resulting test suite's coverage: 35% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 122s and 63 generations, 36330 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 19 tests with total length 108
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1007/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 10%
* Compiling and checking tests
[MASTER] 21:51:25.903 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 21:51:26.385 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 21:51:45.044 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 21:51:45.045 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize("$VALUES");
FileSystemHandling.createFolder((EvoSuiteFile) null);
discretize0.setMakeBinary(false);
discretize0.attributeIndicesTipText();
discretize0.useEqualFrequencyTipText();
discretize0.getUseEqualFrequency();
discretize0.useEqualFrequencyTipText();
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("If set to true, equal-frequency binning will be used instead of equal-width binning.", arrayList0, 2);
Instances instances1 = new Instances(instances0);
Attribute attribute0 = new Attribute("$VALUES", instances1, (-319));
arrayList0.add(attribute0);
Instances instances2 = new Instances(instances0, 2);
discretize0.setInputFormat(instances2);

* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1007/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 19701
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:59:40.330 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:59:40.335 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:59:40.335 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:59:40.456 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1007
* Starting evolution
* Search finished after 138s and 14 generations, 16696 statements, best individual has fitness: 3128.0
[MASTER] 22:02:04.660 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 22 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 647
* Number of covered goals: 627
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 92%
* Total number of goals: 441
* Number of covered goals: 407
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 18
* Number of covered goals: 18
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 678
* Number of covered goals: 612
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 244
* Number of covered goals: 80
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 87%
* Total number of goals: 124
* Number of covered goals: 108
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 87%
* Total number of goals: 124
* Number of covered goals: 108
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 85%
* Total number of goals: 441
* Number of covered goals: 373
* Generated 149 tests with total length 3472
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 22:07:45.641 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6766354166666667% of time used, but only 51/149 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
[MASTER] 22:09:27.841 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1007/107_weka/evosuite-tests
* Done!

* Computation finished
