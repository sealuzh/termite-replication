* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18438
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18443
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:04:25.350 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:04:25.364 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:04:25.366 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:04:25.510 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 13:04:25.534 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 13:04:25.536 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 13:04:27.279 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 13:04:27.291 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 13:04:27.294 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 13:04:27.440 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:04:27.468 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:04:27.482 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1027
* Starting evolution
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1027
* Starting evolution
[MASTER] 13:04:37.184 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: Line 625
[MASTER] 13:04:37.184 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: Line 626
[MASTER] 13:04:37.184 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;: Line 676
[MASTER] 13:04:37.184 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D: Line 752
[MASTER] 13:04:37.184 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: Line 817
[MASTER] 13:04:37.185 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;: Line 1144
[MASTER] 13:04:37.185 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D: root-Branch
[MASTER] 13:04:37.185 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;: root-Branch
[MASTER] 13:04:37.186 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: root-Branch
[MASTER] 13:04:37.186 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;: root-Branch
[MASTER] 13:04:37.186 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: root-Branch
[MASTER] 13:04:37.195 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 261: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp Negation of l
[MASTER] 13:04:37.195 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 262: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp IINC 1 l
[MASTER] 13:04:37.195 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 263: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp IINC -1 l
[MASTER] 13:04:37.195 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 276: weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;:676 - ReplaceConstant - Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value -> 
[MASTER] 13:04:37.195 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 289: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_normalize
[MASTER] 13:04:37.195 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 290: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_wordFrequencies
[MASTER] 13:04:37.195 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 292: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_lowercaseTokens
[MASTER] 13:04:37.196 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 301: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - ReplaceVariable m_norm -> m_minWordP
[MASTER] 13:04:37.196 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 302: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - ReplaceVariable m_norm -> m_t
[MASTER] 13:04:37.196 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 304: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - ReplaceVariable m_norm -> m_lnorm
[MASTER] 13:04:37.196 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 305: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - InsertUnaryOp Negation
[MASTER] 13:04:37.196 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 335: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z:817 - InsertUnaryOp Negation
[MASTER] 13:04:37.197 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 473: weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;:1144 - ReplaceConstant - $Revision: 9122 $ -> 
[MASTER] 13:04:37.197 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 13:04:37.197 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:Positive
[MASTER] 13:04:37.197 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z:False
[MASTER] 13:04:37.197 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;:NonEmptyString
[MASTER] 13:04:37.199 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V
[MASTER] 13:04:37.200 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;
[MASTER] 13:04:37.200 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D
[MASTER] 13:04:37.200 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z
[MASTER] 13:04:37.201 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;
[MASTER] 13:04:37.202 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V
[MASTER] 13:04:37.202 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;
[MASTER] 13:04:37.202 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D
[MASTER] 13:04:37.202 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z
[MASTER] 13:04:37.203 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;
[MASTER] 13:04:37.204 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:minWordFrequencyTipText()Ljava/lang/String;
[MASTER] 13:04:37.204 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getNorm()D
[MASTER] 13:04:37.204 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getUseStopList()Z
[MASTER] 13:04:37.204 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getRevision()Ljava/lang/String;
[MASTER] 13:04:37.204 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setLowercaseTokens(Z)V
[MASTER] 13:04:46.269 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 13:04:46.269 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Search finished after 123s and 158 generations, 68031 statements, best individual has fitness: 4480.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 69%
* Total number of goals: 370
* Number of covered goals: 257
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 55%
* Total number of goals: 242
* Number of covered goals: 133
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 73%
* Total number of goals: 713
* Number of covered goals: 524
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 47%
* Total number of goals: 72
* Number of covered goals: 34
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 55%
* Total number of goals: 242
* Number of covered goals: 133
* Generated 72 tests with total length 432
* Resulting test suite's coverage: 68% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 123s and 88 generations, 51748 statements, best individual has fitness: 2080.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 338
* Number of covered goals: 285
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 76%
* Total number of goals: 194
* Number of covered goals: 147
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 88%
* Total number of goals: 476
* Number of covered goals: 419
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 60
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 75%
* Total number of goals: 194
* Number of covered goals: 145
* Generated 66 tests with total length 691
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 23%
* Compiling and checking tests
[MASTER] 13:08:27.853 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 13:08:28.702 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 54%
* Compiling and checking tests
[MASTER] 13:10:15.848 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_15_1575637815810/weka/classifiers/bayes/NaiveBayesMultinomialText_15_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_15_1575637815810/weka/classifiers/bayes/NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding.java]]
[MASTER] 13:10:15.848 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 13:10:15.848 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 13:10:15.852 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 13:10:15.852 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 13:10:15.853 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_15_1575637815810/weka/classifiers/bayes/NaiveBayesMultinomialText_15_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 13:10:15 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.stemmers.LovinsStemmer;
18: import weka.core.stemmers.Stemmer;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_15_tmp__ESTest extends NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=1.1217186091313738
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
31:       LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
32:       String string0 = naiveBayesMultinomialText0.globalInfo();
33:       assertEquals("Multinomial naive bayes for text data. Operates directly (and only) on String attributes. Other types of input attributes are accepted but ignored during training and classification", string0);
34:       
35:       naiveBayesMultinomialText0.setStemmer((Stemmer) null);
36:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
37:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
38:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
39:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
40:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
41:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
42:   }
43: }
RegularFileObject[/tmp/EvoSuite_15_1575637815810/weka/classifiers/bayes/NaiveBayesMultinomialText_15_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 13:10:15 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.core.MinkowskiDistance",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.CoverTree$MyHeap",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.estimators.Estimator$Builder",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
124:       "weka.core.AttributeLocator",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.BinarySparseInstance",
127:       "weka.classifiers.functions.supportVector.CachedKernel",
128:       "weka.core.SerializedObject",
129:       "weka.clusterers.UpdateableClusterer",
130:       "weka.core.Summarizable",
131:       "weka.core.AdditionalMeasureProducer",
132:       "weka.core.neighboursearch.balltrees.BallNode",
133:       "org.pentaho.packageManagement.PackageManager$1",
134:       "weka.core.Drawable",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.core.neighboursearch.balltrees.BallSplitter",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.classifiers.meta.AdditiveRegression",
145:       "weka.core.Version",
146:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
147:       "weka.classifiers.functions.supportVector.Puk",
148:       "weka.core.Tag",
149:       "weka.classifiers.IteratedSingleClassifierEnhancer",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.filters.unsupervised.attribute.Center",
153:       "weka.core.OptionHandler",
154:       "weka.core.WekaException",
155:       "weka.filters.StreamableFilter",
156:       "weka.core.Range",
157:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
158:       "weka.core.scripting.JythonSerializableObject",
159:       "weka.classifiers.Classifier",
160:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
161:       "weka.core.Capabilities$Capability",
162:       "weka.core.SparseInstance",
163:       "org.pentaho.packageManagement.PackageManager",
164:       "weka.estimators.PoissonEstimator",
165:       "weka.attributeSelection.AttributeTransformer",
166:       "weka.core.tokenizers.WordTokenizer",
167:       "weka.classifiers.misc.SerializedClassifier",
168:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
169:       "weka.attributeSelection.PrincipalComponents",
170:       "weka.core.stemmers.LovinsStemmer",
171:       "weka.classifiers.Evaluation",
172:       "weka.classifiers.functions.supportVector.Kernel",
173:       "weka.core.WekaPackageManager",
174:       "weka.filters.SupervisedFilter",
175:       "weka.core.TechnicalInformationHandler",
176:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
177:       "weka.core.neighboursearch.LinearNNSearch",
178:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
179:       "weka.core.Option",
180:       "weka.core.neighboursearch.PerformanceStats",
181:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
182:       "weka.filters.Sourcable",
183:       "weka.core.Attribute",
184:       "weka.core.Stopwords",
185:       "weka.core.tokenizers.AlphabeticTokenizer",
186:       "weka.core.FastVector",
187:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
188:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
189:       "weka.core.UnassignedDatasetException",
190:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
191:       "weka.classifiers.RandomizableClassifier",
192:       "weka.classifiers.SingleClassifierEnhancer",
193:       "weka.core.RevisionUtils",
194:       "weka.core.Instance",
195:       "weka.estimators.Estimator",
196:       "weka.core.ProtectedProperties",
197:       "weka.core.StringLocator",
198:       "weka.classifiers.bayes.net.ADNode",
199:       "weka.core.AttributeStats",
200:       "weka.core.WeightedInstancesHandler",
201:       "weka.core.neighboursearch.NearestNeighbourSearch",
202:       "weka.classifiers.trees.DecisionStump",
203:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
204:       "weka.core.neighboursearch.covertrees.Stack",
205:       "weka.filters.unsupervised.attribute.Remove",
206:       "weka.core.Randomizable",
207:       "weka.core.EuclideanDistance",
208:       "weka.core.Instances",
209:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
210:       "weka.core.UnassignedClassException",
211:       "weka.classifiers.bayes.net.ParentSet",
212:       "weka.classifiers.rules.ZeroR",
213:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
214:       "weka.filters.unsupervised.attribute.Standardize",
215:       "weka.core.UnsupportedAttributeTypeException",
216:       "weka.core.TechnicalInformation",
217:       "weka.classifiers.Sourcable",
218:       "weka.core.RevisionHandler",
219:       "weka.classifiers.evaluation.output.prediction.PlainText",
220:       "weka.core.neighboursearch.TreePerformanceStats",
221:       "weka.core.xml.XMLSerialization",
222:       "weka.classifiers.xml.XMLClassifier",
223:       "weka.filters.Filter",
224:       "weka.filters.supervised.attribute.Discretize"
225:     );
226:   } 
227: 
228:   private static void resetClasses() {
229:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding.class.getClassLoader()); 
230: 
231:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
232:       "weka.classifiers.AbstractClassifier",
233:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
234:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
235:       "weka.core.Capabilities$Capability",
236:       "weka.core.tokenizers.Tokenizer",
237:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
238:       "weka.core.tokenizers.WordTokenizer",
239:       "weka.core.stemmers.NullStemmer",
240:       "weka.classifiers.Evaluation",
241:       "weka.core.Utils",
242:       "weka.core.Option",
243:       "weka.classifiers.RandomizableClassifier",
244:       "weka.core.Tag",
245:       "weka.classifiers.functions.SGDText",
246:       "weka.core.Capabilities",
247:       "org.pentaho.packageManagement.PackageManager",
248:       "org.pentaho.packageManagement.DefaultPackageManager",
249:       "weka.core.Version",
250:       "weka.core.Environment",
251:       "weka.core.WekaPackageManager",
252:       "weka.core.AbstractInstance",
253:       "weka.core.SparseInstance",
254:       "weka.core.BinarySparseInstance",
255:       "weka.core.stemmers.LovinsStemmer",
256:       "weka.core.RevisionUtils",
257:       "weka.core.SerializedObject",
258:       "weka.classifiers.bayes.BayesNet",
259:       "weka.classifiers.bayes.net.BIFReader",
260:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
261:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
262:       "weka.classifiers.bayes.net.search.local.K2",
263:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
264:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
265:       "weka.core.neighboursearch.NearestNeighbourSearch",
266:       "weka.core.neighboursearch.BallTree",
267:       "weka.core.NormalizableDistance",
268:       "weka.core.EuclideanDistance",
269:       "weka.core.Range",
270:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
271:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
272:       "weka.core.neighboursearch.balltrees.BallSplitter",
273:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
274:       "weka.core.DenseInstance",
275:       "weka.core.Attribute",
276:       "weka.core.ProtectedProperties",
277:       "weka.classifiers.bayes.NaiveBayesMultinomial",
278:       "weka.core.TestInstances",
279:       "weka.core.Instances",
280:       "weka.core.UnassignedClassException",
281:       "weka.core.SelectedTag",
282:       "weka.classifiers.bayes.NaiveBayes",
283:       "weka.core.tokenizers.NGramTokenizer",
284:       "weka.core.UnassignedDatasetException",
285:       "weka.attributeSelection.ASEvaluation",
286:       "weka.attributeSelection.WrapperSubsetEval",
287:       "weka.classifiers.rules.ZeroR",
288:       "weka.core.stemmers.IteratedLovinsStemmer",
289:       "weka.classifiers.functions.supportVector.Kernel",
290:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
291:       "weka.classifiers.misc.SerializedClassifier",
292:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
293:       "weka.attributeSelection.PrincipalComponents",
294:       "weka.core.tokenizers.AlphabeticTokenizer",
295:       "weka.classifiers.SingleClassifierEnhancer",
296:       "weka.classifiers.misc.InputMappedClassifier",
297:       "weka.filters.Filter",
298:       "weka.core.Stopwords",
299:       "weka.core.neighboursearch.CoverTree",
300:       "weka.classifiers.lazy.IBk",
301:       "weka.core.neighboursearch.LinearNNSearch",
302:       "weka.core.stemmers.SnowballStemmer",
303:       "weka.filters.SimpleFilter",
304:       "weka.filters.SimpleStreamFilter",
305:       "weka.filters.MultiFilter",
306:       "weka.filters.AllFilter",
307:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
308:       "weka.classifiers.meta.CostSensitiveClassifier",
309:       "weka.classifiers.CostMatrix",
310:       "weka.classifiers.trees.m5.M5Base",
311:       "weka.classifiers.rules.M5Rules",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
313:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
314:       "weka.classifiers.trees.LMT",
315:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
316:       "weka.classifiers.functions.LinearRegression",
317:       "weka.core.neighboursearch.KDTree",
318:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
319:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
320:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
321:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
322:       "weka.filters.supervised.attribute.Discretize",
323:       "weka.core.WekaException",
324:       "weka.core.UnsupportedAttributeTypeException",
325:       "weka.core.converters.ArffLoader$ArffReader",
326:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
327:       "weka.core.neighboursearch.balltrees.BallNode",
328:       "weka.classifiers.functions.SimpleLinearRegression",
329:       "weka.core.FindWithCapabilities",
330:       "weka.core.SingleIndex",
331:       "weka.core.ClassDiscovery",
332:       "weka.classifiers.meta.MultiClassClassifier",
333:       "weka.classifiers.functions.Logistic",
334:       "weka.attributeSelection.CorrelationAttributeEval",
335:       "weka.classifiers.trees.RandomForest",
336:       "weka.classifiers.trees.RandomTree",
337:       "weka.classifiers.functions.SMOreg",
338:       "weka.classifiers.functions.supportVector.RegOptimizer",
339:       "weka.classifiers.functions.supportVector.RegSMO",
340:       "weka.classifiers.functions.supportVector.RegSMOImproved",
341:       "weka.classifiers.functions.supportVector.CachedKernel",
342:       "weka.classifiers.functions.supportVector.PolyKernel",
343:       "weka.estimators.Estimator",
344:       "weka.estimators.DiscreteEstimator",
345:       "weka.classifiers.lazy.KStar",
346:       "weka.estimators.KernelEstimator",
347:       "weka.classifiers.functions.SimpleLogistic",
348:       "weka.classifiers.meta.RegressionByDiscretization",
349:       "weka.filters.unsupervised.attribute.Discretize",
350:       "weka.classifiers.trees.J48",
351:       "weka.classifiers.trees.j48.ClassifierTree",
352:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
353:       "weka.classifiers.functions.MultilayerPerceptron",
354:       "weka.core.FastVector",
355:       "weka.filters.unsupervised.attribute.NominalToBinary",
356:       "weka.classifiers.functions.neural.SigmoidUnit",
357:       "weka.classifiers.functions.neural.LinearUnit",
358:       "weka.classifiers.meta.ClassificationViaRegression",
359:       "weka.classifiers.trees.M5P",
360:       "weka.classifiers.IteratedSingleClassifierEnhancer",
361:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
362:       "weka.classifiers.meta.LogitBoost",
363:       "weka.classifiers.trees.DecisionStump",
364:       "weka.classifiers.functions.GaussianProcesses",
365:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
366:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
367:       "weka.classifiers.meta.Bagging",
368:       "weka.classifiers.trees.REPTree",
369:       "weka.classifiers.functions.supportVector.Puk",
370:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
371:       "weka.attributeSelection.OneRAttributeEval",
372:       "weka.attributeSelection.AttributeSelection",
373:       "weka.classifiers.rules.PART",
374:       "weka.classifiers.rules.part.MakeDecList",
375:       "weka.classifiers.functions.VotedPerceptron",
376:       "weka.classifiers.meta.AdaBoostM1",
377:       "weka.attributeSelection.GainRatioAttributeEval",
378:       "weka.classifiers.meta.RandomCommittee",
379:       "weka.classifiers.bayes.NaiveBayesUpdateable",
380:       "weka.classifiers.functions.SMO",
381:       "weka.classifiers.MultipleClassifiersCombiner",
382:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
383:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
384:       "weka.classifiers.meta.Stacking",
385:       "weka.core.AttributeStats",
386:       "weka.attributeSelection.CfsSubsetEval",
387:       "weka.classifiers.functions.SGDText$Count",
388:       "weka.classifiers.meta.FilteredClassifier",
389:       "weka.filters.supervised.attribute.AttributeSelection",
390:       "weka.attributeSelection.ASSearch",
391:       "weka.attributeSelection.GreedyStepwise",
392:       "weka.attributeSelection.BestFirst",
393:       "weka.core.WekaEnumeration",
394:       "weka.core.Attribute$1",
395:       "weka.classifiers.functions.supportVector.StringKernel",
396:       "weka.classifiers.lazy.LWL",
397:       "weka.estimators.PoissonEstimator",
398:       "weka.core.Javadoc",
399:       "weka.core.OptionHandlerJavadoc",
400:       "weka.core.Check",
401:       "weka.core.CheckOptionHandler",
402:       "weka.classifiers.meta.AdditiveRegression",
403:       "weka.core.ClassCache",
404:       "weka.core.AllJavadoc",
405:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
406:       "weka.classifiers.meta.MultiScheme",
407:       "weka.classifiers.rules.OneR",
408:       "weka.core.MinkowskiDistance",
409:       "weka.classifiers.functions.SGD",
410:       "weka.classifiers.functions.supportVector.RBFKernel",
411:       "weka.classifiers.meta.Vote",
412:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
413:       "weka.attributeSelection.ReliefFAttributeEval",
414:       "weka.classifiers.rules.JRip",
415:       "weka.classifiers.meta.CVParameterSelection",
416:       "weka.core.TechnicalInformation",
417:       "weka.core.TechnicalInformation$Type",
418:       "weka.core.TechnicalInformation$Field"
419:     );
420:   }
421: }

[MASTER] 13:10:15.853 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
String string0 = naiveBayesMultinomialText0.globalInfo();
assertEquals("Multinomial naive bayes for text data. Operates directly (and only) on String attributes. Other types of input attributes are accepted but ignored during training and classification", string0);

naiveBayesMultinomialText0.setStemmer((Stemmer) null);
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);


[MASTER] 13:10:17.242 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_48_1575637817200/weka/classifiers/bayes/NaiveBayesMultinomialText_48_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_48_1575637817200/weka/classifiers/bayes/NaiveBayesMultinomialText_48_tmp__ESTest_scaffolding.java]]
[MASTER] 13:10:17.243 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 13:10:17.243 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 13:10:17.243 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 13:10:17.243 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 13:10:17.243 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 13:10:17.243 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 43
[MASTER] 13:10:17.244 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_48_1575637817200/weka/classifiers/bayes/NaiveBayesMultinomialText_48_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 13:10:17 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.net.URI;
12: import java.util.LinkedHashMap;
13: import java.util.Map;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.mock.java.io.MockFile;
17: import org.evosuite.runtime.mock.java.net.MockURI;
18: import org.evosuite.runtime.testdata.EvoSuiteFile;
19: import org.evosuite.runtime.testdata.FileSystemHandling;
20: import org.junit.runner.RunWith;
21: import weka.classifiers.bayes.NaiveBayesMultinomialText;
22: import weka.core.BinarySparseInstance;
23: import weka.core.Instances;
24: import weka.core.neighboursearch.CoverTree;
25: import weka.core.tokenizers.AlphabeticTokenizer;
26: 
27: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
28: public class NaiveBayesMultinomialText_48_tmp__ESTest extends NaiveBayesMultinomialText_48_tmp__ESTest_scaffolding {
29: 
30:   /**
31:   //Test case number: 0
32:   /*Coverage entropy=2.876156142363588
33:   */
34:   @Test(timeout = 4000)
35:   public void test0()  throws Throwable  {
36:       FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
37:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
38:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
39:       FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "`_*qr,@xO");
40:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
41:       Integer integer0 = Integer.valueOf((-423));
42:       linkedHashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
43:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
44:       naiveBayesMultinomialText0.setNorm(0.0);
45:       naiveBayesMultinomialText0.setMinWordFrequency(0.0);
46:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
47:       AlphabeticTokenizer alphabeticTokenizer0 = new AlphabeticTokenizer();
48:       naiveBayesMultinomialText0.setTokenizer(alphabeticTokenizer0);
49:       naiveBayesMultinomialText0.getNorm();
50:       naiveBayesMultinomialText0.setLowercaseTokens(false);
51:       naiveBayesMultinomialText0.periodicPruningTipText();
52:       naiveBayesMultinomialText0.stemmerTipText();
53:       naiveBayesMultinomialText0.getStemmer();
54:       naiveBayesMultinomialText0.LNormTipText();
55:       CoverTree coverTree0 = new CoverTree();
56:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0.0, (int[]) null, (-423));
57:       try { 
58:         coverTree0.kNearestNeighbours(binarySparseInstance0, (-423));
59:         fail("Expecting exception: NullPointerException");
60:       
61:       } catch(NullPointerException e) {
62:          //
63:          // no message in exception (getMessage() returned null)
64:          //
65:          verifyException("weka.core.Instances", e);
66:       }
67:   }
68: }
RegularFileObject[/tmp/EvoSuite_48_1575637817200/weka/classifiers/bayes/NaiveBayesMultinomialText_48_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 13:10:17 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_48_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_48_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.core.MinkowskiDistance",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.CoverTree$MyHeap",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.estimators.Estimator$Builder",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
124:       "weka.core.AttributeLocator",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.BinarySparseInstance",
127:       "weka.classifiers.functions.supportVector.CachedKernel",
128:       "weka.core.SerializedObject",
129:       "weka.clusterers.UpdateableClusterer",
130:       "weka.core.Summarizable",
131:       "weka.core.AdditionalMeasureProducer",
132:       "weka.core.neighboursearch.balltrees.BallNode",
133:       "org.pentaho.packageManagement.PackageManager$1",
134:       "weka.core.Drawable",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.core.neighboursearch.balltrees.BallSplitter",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.classifiers.meta.AdditiveRegression",
145:       "weka.core.Version",
146:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
147:       "weka.classifiers.functions.supportVector.Puk",
148:       "weka.core.Tag",
149:       "weka.classifiers.IteratedSingleClassifierEnhancer",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.filters.unsupervised.attribute.Center",
153:       "weka.core.OptionHandler",
154:       "weka.core.WekaException",
155:       "weka.filters.StreamableFilter",
156:       "weka.core.Range",
157:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
158:       "weka.core.scripting.JythonSerializableObject",
159:       "weka.classifiers.Classifier",
160:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
161:       "weka.core.Capabilities$Capability",
162:       "weka.core.SparseInstance",
163:       "org.pentaho.packageManagement.PackageManager",
164:       "weka.estimators.PoissonEstimator",
165:       "weka.attributeSelection.AttributeTransformer",
166:       "weka.core.tokenizers.WordTokenizer",
167:       "weka.classifiers.misc.SerializedClassifier",
168:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
169:       "weka.attributeSelection.PrincipalComponents",
170:       "weka.core.stemmers.LovinsStemmer",
171:       "weka.classifiers.Evaluation",
172:       "weka.classifiers.functions.supportVector.Kernel",
173:       "weka.core.WekaPackageManager",
174:       "weka.filters.SupervisedFilter",
175:       "weka.core.TechnicalInformationHandler",
176:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
177:       "weka.core.neighboursearch.LinearNNSearch",
178:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
179:       "weka.core.Option",
180:       "weka.core.neighboursearch.PerformanceStats",
181:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
182:       "weka.filters.Sourcable",
183:       "weka.core.Attribute",
184:       "weka.core.Stopwords",
185:       "weka.core.tokenizers.AlphabeticTokenizer",
186:       "weka.core.FastVector",
187:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
188:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
189:       "weka.core.UnassignedDatasetException",
190:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
191:       "weka.classifiers.RandomizableClassifier",
192:       "weka.classifiers.SingleClassifierEnhancer",
193:       "weka.core.RevisionUtils",
194:       "weka.core.Instance",
195:       "weka.estimators.Estimator",
196:       "weka.core.ProtectedProperties",
197:       "weka.core.StringLocator",
198:       "weka.classifiers.bayes.net.ADNode",
199:       "weka.core.AttributeStats",
200:       "weka.core.WeightedInstancesHandler",
201:       "weka.core.neighboursearch.NearestNeighbourSearch",
202:       "weka.classifiers.trees.DecisionStump",
203:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
204:       "weka.core.neighboursearch.covertrees.Stack",
205:       "weka.filters.unsupervised.attribute.Remove",
206:       "weka.core.Randomizable",
207:       "weka.core.EuclideanDistance",
208:       "weka.core.Instances",
209:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
210:       "weka.core.UnassignedClassException",
211:       "weka.classifiers.bayes.net.ParentSet",
212:       "weka.classifiers.rules.ZeroR",
213:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
214:       "weka.filters.unsupervised.attribute.Standardize",
215:       "weka.core.UnsupportedAttributeTypeException",
216:       "weka.core.TechnicalInformation",
217:       "weka.classifiers.Sourcable",
218:       "weka.core.RevisionHandler",
219:       "weka.classifiers.evaluation.output.prediction.PlainText",
220:       "weka.core.neighboursearch.TreePerformanceStats",
221:       "weka.core.xml.XMLSerialization",
222:       "weka.classifiers.xml.XMLClassifier",
223:       "weka.filters.Filter",
224:       "weka.filters.supervised.attribute.Discretize"
225:     );
226:   } 
227: 
228:   private static void resetClasses() {
229:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_48_tmp__ESTest_scaffolding.class.getClassLoader()); 
230: 
231:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
232:       "weka.classifiers.AbstractClassifier",
233:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
234:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
235:       "weka.core.Capabilities$Capability",
236:       "weka.core.tokenizers.Tokenizer",
237:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
238:       "weka.core.tokenizers.WordTokenizer",
239:       "weka.core.stemmers.NullStemmer",
240:       "weka.classifiers.Evaluation",
241:       "weka.core.Utils",
242:       "weka.core.Option",
243:       "weka.classifiers.RandomizableClassifier",
244:       "weka.core.Tag",
245:       "weka.classifiers.functions.SGDText",
246:       "weka.core.Capabilities",
247:       "org.pentaho.packageManagement.PackageManager",
248:       "org.pentaho.packageManagement.DefaultPackageManager",
249:       "weka.core.Version",
250:       "weka.core.Environment",
251:       "weka.core.WekaPackageManager",
252:       "weka.core.AbstractInstance",
253:       "weka.core.SparseInstance",
254:       "weka.core.BinarySparseInstance",
255:       "weka.core.stemmers.LovinsStemmer",
256:       "weka.core.RevisionUtils",
257:       "weka.core.SerializedObject",
258:       "weka.classifiers.bayes.BayesNet",
259:       "weka.classifiers.bayes.net.BIFReader",
260:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
261:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
262:       "weka.classifiers.bayes.net.search.local.K2",
263:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
264:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
265:       "weka.core.neighboursearch.NearestNeighbourSearch",
266:       "weka.core.neighboursearch.BallTree",
267:       "weka.core.NormalizableDistance",
268:       "weka.core.EuclideanDistance",
269:       "weka.core.Range",
270:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
271:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
272:       "weka.core.neighboursearch.balltrees.BallSplitter",
273:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
274:       "weka.core.DenseInstance",
275:       "weka.core.Attribute",
276:       "weka.core.ProtectedProperties",
277:       "weka.classifiers.bayes.NaiveBayesMultinomial",
278:       "weka.core.TestInstances",
279:       "weka.core.Instances",
280:       "weka.core.UnassignedClassException",
281:       "weka.core.SelectedTag",
282:       "weka.classifiers.bayes.NaiveBayes",
283:       "weka.core.tokenizers.NGramTokenizer",
284:       "weka.core.UnassignedDatasetException",
285:       "weka.attributeSelection.ASEvaluation",
286:       "weka.attributeSelection.WrapperSubsetEval",
287:       "weka.classifiers.rules.ZeroR",
288:       "weka.core.stemmers.IteratedLovinsStemmer",
289:       "weka.classifiers.functions.supportVector.Kernel",
290:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
291:       "weka.classifiers.misc.SerializedClassifier",
292:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
293:       "weka.attributeSelection.PrincipalComponents",
294:       "weka.core.tokenizers.AlphabeticTokenizer",
295:       "weka.classifiers.SingleClassifierEnhancer",
296:       "weka.classifiers.misc.InputMappedClassifier",
297:       "weka.filters.Filter",
298:       "weka.core.Stopwords",
299:       "weka.core.neighboursearch.CoverTree",
300:       "weka.classifiers.lazy.IBk",
301:       "weka.core.neighboursearch.LinearNNSearch",
302:       "weka.core.stemmers.SnowballStemmer",
303:       "weka.filters.SimpleFilter",
304:       "weka.filters.SimpleStreamFilter",
305:       "weka.filters.MultiFilter",
306:       "weka.filters.AllFilter",
307:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
308:       "weka.classifiers.meta.CostSensitiveClassifier",
309:       "weka.classifiers.CostMatrix",
310:       "weka.classifiers.trees.m5.M5Base",
311:       "weka.classifiers.rules.M5Rules",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
313:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
314:       "weka.classifiers.trees.LMT",
315:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
316:       "weka.classifiers.functions.LinearRegression",
317:       "weka.core.neighboursearch.KDTree",
318:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
319:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
320:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
321:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
322:       "weka.filters.supervised.attribute.Discretize",
323:       "weka.core.WekaException",
324:       "weka.core.UnsupportedAttributeTypeException",
325:       "weka.core.converters.ArffLoader$ArffReader",
326:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
327:       "weka.core.neighboursearch.balltrees.BallNode",
328:       "weka.classifiers.functions.SimpleLinearRegression",
329:       "weka.core.FindWithCapabilities",
330:       "weka.core.SingleIndex",
331:       "weka.core.ClassDiscovery",
332:       "weka.classifiers.meta.MultiClassClassifier",
333:       "weka.classifiers.functions.Logistic",
334:       "weka.attributeSelection.CorrelationAttributeEval",
335:       "weka.classifiers.trees.RandomForest",
336:       "weka.classifiers.trees.RandomTree",
337:       "weka.classifiers.functions.SMOreg",
338:       "weka.classifiers.functions.supportVector.RegOptimizer",
339:       "weka.classifiers.functions.supportVector.RegSMO",
340:       "weka.classifiers.functions.supportVector.RegSMOImproved",
341:       "weka.classifiers.functions.supportVector.CachedKernel",
342:       "weka.classifiers.functions.supportVector.PolyKernel",
343:       "weka.estimators.Estimator",
344:       "weka.estimators.DiscreteEstimator",
345:       "weka.classifiers.lazy.KStar",
346:       "weka.estimators.KernelEstimator",
347:       "weka.classifiers.functions.SimpleLogistic",
348:       "weka.classifiers.meta.RegressionByDiscretization",
349:       "weka.filters.unsupervised.attribute.Discretize",
350:       "weka.classifiers.trees.J48",
351:       "weka.classifiers.trees.j48.ClassifierTree",
352:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
353:       "weka.classifiers.functions.MultilayerPerceptron",
354:       "weka.core.FastVector",
355:       "weka.filters.unsupervised.attribute.NominalToBinary",
356:       "weka.classifiers.functions.neural.SigmoidUnit",
357:       "weka.classifiers.functions.neural.LinearUnit",
358:       "weka.classifiers.meta.ClassificationViaRegression",
359:       "weka.classifiers.trees.M5P",
360:       "weka.classifiers.IteratedSingleClassifierEnhancer",
361:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
362:       "weka.classifiers.meta.LogitBoost",
363:       "weka.classifiers.trees.DecisionStump",
364:       "weka.classifiers.functions.GaussianProcesses",
365:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
366:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
367:       "weka.classifiers.meta.Bagging",
368:       "weka.classifiers.trees.REPTree",
369:       "weka.classifiers.functions.supportVector.Puk",
370:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
371:       "weka.attributeSelection.OneRAttributeEval",
372:       "weka.attributeSelection.AttributeSelection",
373:       "weka.classifiers.rules.PART",
374:       "weka.classifiers.rules.part.MakeDecList",
375:       "weka.classifiers.functions.VotedPerceptron",
376:       "weka.classifiers.meta.AdaBoostM1",
377:       "weka.attributeSelection.GainRatioAttributeEval",
378:       "weka.classifiers.meta.RandomCommittee",
379:       "weka.classifiers.bayes.NaiveBayesUpdateable",
380:       "weka.classifiers.functions.SMO",
381:       "weka.classifiers.MultipleClassifiersCombiner",
382:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
383:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
384:       "weka.classifiers.meta.Stacking",
385:       "weka.core.AttributeStats",
386:       "weka.attributeSelection.CfsSubsetEval",
387:       "weka.classifiers.functions.SGDText$Count",
388:       "weka.classifiers.meta.FilteredClassifier",
389:       "weka.filters.supervised.attribute.AttributeSelection",
390:       "weka.attributeSelection.ASSearch",
391:       "weka.attributeSelection.GreedyStepwise",
392:       "weka.attributeSelection.BestFirst",
393:       "weka.core.WekaEnumeration",
394:       "weka.core.Attribute$1",
395:       "weka.classifiers.functions.supportVector.StringKernel",
396:       "weka.classifiers.lazy.LWL",
397:       "weka.estimators.PoissonEstimator",
398:       "weka.core.Javadoc",
399:       "weka.core.OptionHandlerJavadoc",
400:       "weka.core.Check",
401:       "weka.core.CheckOptionHandler",
402:       "weka.classifiers.meta.AdditiveRegression",
403:       "weka.core.ClassCache",
404:       "weka.core.AllJavadoc",
405:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
406:       "weka.classifiers.meta.MultiScheme",
407:       "weka.classifiers.rules.OneR",
408:       "weka.core.MinkowskiDistance",
409:       "weka.classifiers.functions.SGD",
410:       "weka.classifiers.functions.supportVector.RBFKernel",
411:       "weka.classifiers.meta.Vote",
412:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
413:       "weka.attributeSelection.ReliefFAttributeEval",
414:       "weka.classifiers.rules.JRip",
415:       "weka.classifiers.meta.CVParameterSelection",
416:       "weka.core.TechnicalInformation",
417:       "weka.core.TechnicalInformation$Type",
418:       "weka.core.TechnicalInformation$Field"
419:     );
420:   }
421: }

[MASTER] 13:10:17.245 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "`_*qr,@xO");
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = Integer.valueOf((-423));
linkedHashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
naiveBayesMultinomialText0.setNorm(0.0);
naiveBayesMultinomialText0.setMinWordFrequency(0.0);
naiveBayesMultinomialText0.normalizeDocLengthTipText();
AlphabeticTokenizer alphabeticTokenizer0 = new AlphabeticTokenizer();
naiveBayesMultinomialText0.setTokenizer(alphabeticTokenizer0);
naiveBayesMultinomialText0.getNorm();
naiveBayesMultinomialText0.setLowercaseTokens(false);
naiveBayesMultinomialText0.periodicPruningTipText();
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.getStemmer();
naiveBayesMultinomialText0.LNormTipText();
CoverTree coverTree0 = new CoverTree();
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0.0, (int[]) null, (-423));
coverTree0.kNearestNeighbours(binarySparseInstance0, (-423));

[MASTER] 13:10:17.968 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_58_1575637817937/weka/classifiers/bayes/NaiveBayesMultinomialText_58_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_58_1575637817937/weka/classifiers/bayes/NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding.java]]
[MASTER] 13:10:17.968 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 13:10:17.968 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 13:10:17.969 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 13:10:17.969 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 13:10:17.969 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 13:10:17.970 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_58_1575637817937/weka/classifiers/bayes/NaiveBayesMultinomialText_58_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 13:10:17 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.io.File;
12: import java.util.HashMap;
13: import java.util.LinkedHashMap;
14: import java.util.Map;
15: import org.evosuite.runtime.EvoRunner;
16: import org.evosuite.runtime.EvoRunnerParameters;
17: import org.evosuite.runtime.System;
18: import org.evosuite.runtime.testdata.EvoSuiteFile;
19: import org.evosuite.runtime.testdata.FileSystemHandling;
20: import org.junit.runner.RunWith;
21: import weka.classifiers.bayes.NaiveBayesMultinomialText;
22: import weka.classifiers.misc.SerializedClassifier;
23: import weka.core.BinarySparseInstance;
24: import weka.core.Instance;
25: 
26: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
27: public class NaiveBayesMultinomialText_58_tmp__ESTest extends NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding {
28: 
29:   /**
30:   //Test case number: 0
31:   /*Coverage entropy=2.0761045791007673
32:   */
33:   @Test(timeout = 4000)
34:   public void test0()  throws Throwable  {
35:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
36:       FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
37:       naiveBayesMultinomialText0.setLNorm((-1015.97075374888));
38:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
39:       naiveBayesMultinomialText0.setPeriodicPruning((-1828));
40:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
41:       SerializedClassifier serializedClassifier0 = new SerializedClassifier();
42:       File file0 = serializedClassifier0.getModelFile();
43:       naiveBayesMultinomialText0.setStopwords(file0);
44:       FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
45:       naiveBayesMultinomialText0.m_t = (-2837.90533504);
46:       naiveBayesMultinomialText0.setUseStopList(false);
47:       FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
48:       naiveBayesMultinomialText0.getLNorm();
49:       naiveBayesMultinomialText0.getLNorm();
50:       System.setCurrentTimeMillis((-1828));
51:       BinarySparseInstance binarySparseInstance0 = null;
52:       try {
53:         binarySparseInstance0 = new BinarySparseInstance((-1828));
54:         fail("Expecting exception: NegativeArraySizeException");
55:       
56:       } catch(NegativeArraySizeException e) {
57:          //
58:          // no message in exception (getMessage() returned null)
59:          //
60:          verifyException("weka.core.BinarySparseInstance", e);
61:       }
62:   }
63: }
RegularFileObject[/tmp/EvoSuite_58_1575637817937/weka/classifiers/bayes/NaiveBayesMultinomialText_58_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 13:10:17 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.core.MinkowskiDistance",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.neighboursearch.CoverTree$MyHeap",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.estimators.Estimator$Builder",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
124:       "weka.core.AttributeLocator",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.BinarySparseInstance",
127:       "weka.classifiers.functions.supportVector.CachedKernel",
128:       "weka.core.SerializedObject",
129:       "weka.clusterers.UpdateableClusterer",
130:       "weka.core.Summarizable",
131:       "weka.core.AdditionalMeasureProducer",
132:       "weka.core.neighboursearch.balltrees.BallNode",
133:       "org.pentaho.packageManagement.PackageManager$1",
134:       "weka.core.Drawable",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.core.neighboursearch.balltrees.BallSplitter",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.classifiers.meta.AdditiveRegression",
145:       "weka.core.Version",
146:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
147:       "weka.classifiers.functions.supportVector.Puk",
148:       "weka.core.Tag",
149:       "weka.classifiers.IteratedSingleClassifierEnhancer",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.filters.unsupervised.attribute.Center",
153:       "weka.core.OptionHandler",
154:       "weka.core.WekaException",
155:       "weka.filters.StreamableFilter",
156:       "weka.core.Range",
157:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
158:       "weka.core.scripting.JythonSerializableObject",
159:       "weka.classifiers.Classifier",
160:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
161:       "weka.core.Capabilities$Capability",
162:       "weka.core.SparseInstance",
163:       "org.pentaho.packageManagement.PackageManager",
164:       "weka.estimators.PoissonEstimator",
165:       "weka.attributeSelection.AttributeTransformer",
166:       "weka.core.tokenizers.WordTokenizer",
167:       "weka.classifiers.misc.SerializedClassifier",
168:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
169:       "weka.attributeSelection.PrincipalComponents",
170:       "weka.core.stemmers.LovinsStemmer",
171:       "weka.classifiers.Evaluation",
172:       "weka.classifiers.functions.supportVector.Kernel",
173:       "weka.core.WekaPackageManager",
174:       "weka.filters.SupervisedFilter",
175:       "weka.core.TechnicalInformationHandler",
176:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
177:       "weka.core.neighboursearch.LinearNNSearch",
178:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
179:       "weka.core.Option",
180:       "weka.core.neighboursearch.PerformanceStats",
181:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
182:       "weka.filters.Sourcable",
183:       "weka.core.Attribute",
184:       "weka.core.Stopwords",
185:       "weka.core.tokenizers.AlphabeticTokenizer",
186:       "weka.core.FastVector",
187:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
188:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
189:       "weka.core.UnassignedDatasetException",
190:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
191:       "weka.classifiers.RandomizableClassifier",
192:       "weka.classifiers.SingleClassifierEnhancer",
193:       "weka.core.RevisionUtils",
194:       "weka.core.Instance",
195:       "weka.estimators.Estimator",
196:       "weka.core.ProtectedProperties",
197:       "weka.core.StringLocator",
198:       "weka.classifiers.bayes.net.ADNode",
199:       "weka.core.AttributeStats",
200:       "weka.core.WeightedInstancesHandler",
201:       "weka.core.neighboursearch.NearestNeighbourSearch",
202:       "weka.classifiers.trees.DecisionStump",
203:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
204:       "weka.core.neighboursearch.covertrees.Stack",
205:       "weka.filters.unsupervised.attribute.Remove",
206:       "weka.core.Randomizable",
207:       "weka.core.EuclideanDistance",
208:       "weka.core.Instances",
209:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
210:       "weka.core.UnassignedClassException",
211:       "weka.classifiers.bayes.net.ParentSet",
212:       "weka.classifiers.rules.ZeroR",
213:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
214:       "weka.filters.unsupervised.attribute.Standardize",
215:       "weka.core.UnsupportedAttributeTypeException",
216:       "weka.core.TechnicalInformation",
217:       "weka.classifiers.Sourcable",
218:       "weka.core.RevisionHandler",
219:       "weka.classifiers.evaluation.output.prediction.PlainText",
220:       "weka.core.neighboursearch.TreePerformanceStats",
221:       "weka.core.xml.XMLSerialization",
222:       "weka.classifiers.xml.XMLClassifier",
223:       "weka.filters.Filter",
224:       "weka.filters.supervised.attribute.Discretize"
225:     );
226:   } 
227: 
228:   private static void resetClasses() {
229:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding.class.getClassLoader()); 
230: 
231:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
232:       "weka.classifiers.AbstractClassifier",
233:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
234:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
235:       "weka.core.Capabilities$Capability",
236:       "weka.core.tokenizers.Tokenizer",
237:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
238:       "weka.core.tokenizers.WordTokenizer",
239:       "weka.core.stemmers.NullStemmer",
240:       "weka.classifiers.Evaluation",
241:       "weka.core.Utils",
242:       "weka.core.Option",
243:       "weka.classifiers.RandomizableClassifier",
244:       "weka.core.Tag",
245:       "weka.classifiers.functions.SGDText",
246:       "weka.core.Capabilities",
247:       "org.pentaho.packageManagement.PackageManager",
248:       "org.pentaho.packageManagement.DefaultPackageManager",
249:       "weka.core.Version",
250:       "weka.core.Environment",
251:       "weka.core.WekaPackageManager",
252:       "weka.core.AbstractInstance",
253:       "weka.core.SparseInstance",
254:       "weka.core.BinarySparseInstance",
255:       "weka.core.stemmers.LovinsStemmer",
256:       "weka.core.RevisionUtils",
257:       "weka.core.SerializedObject",
258:       "weka.classifiers.bayes.BayesNet",
259:       "weka.classifiers.bayes.net.BIFReader",
260:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
261:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
262:       "weka.classifiers.bayes.net.search.local.K2",
263:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
264:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
265:       "weka.core.neighboursearch.NearestNeighbourSearch",
266:       "weka.core.neighboursearch.BallTree",
267:       "weka.core.NormalizableDistance",
268:       "weka.core.EuclideanDistance",
269:       "weka.core.Range",
270:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
271:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
272:       "weka.core.neighboursearch.balltrees.BallSplitter",
273:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
274:       "weka.core.DenseInstance",
275:       "weka.core.Attribute",
276:       "weka.core.ProtectedProperties",
277:       "weka.classifiers.bayes.NaiveBayesMultinomial",
278:       "weka.core.TestInstances",
279:       "weka.core.Instances",
280:       "weka.core.UnassignedClassException",
281:       "weka.core.SelectedTag",
282:       "weka.classifiers.bayes.NaiveBayes",
283:       "weka.core.tokenizers.NGramTokenizer",
284:       "weka.core.UnassignedDatasetException",
285:       "weka.attributeSelection.ASEvaluation",
286:       "weka.attributeSelection.WrapperSubsetEval",
287:       "weka.classifiers.rules.ZeroR",
288:       "weka.core.stemmers.IteratedLovinsStemmer",
289:       "weka.classifiers.functions.supportVector.Kernel",
290:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
291:       "weka.classifiers.misc.SerializedClassifier",
292:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
293:       "weka.attributeSelection.PrincipalComponents",
294:       "weka.core.tokenizers.AlphabeticTokenizer",
295:       "weka.classifiers.SingleClassifierEnhancer",
296:       "weka.classifiers.misc.InputMappedClassifier",
297:       "weka.filters.Filter",
298:       "weka.core.Stopwords",
299:       "weka.core.neighboursearch.CoverTree",
300:       "weka.classifiers.lazy.IBk",
301:       "weka.core.neighboursearch.LinearNNSearch",
302:       "weka.core.stemmers.SnowballStemmer",
303:       "weka.filters.SimpleFilter",
304:       "weka.filters.SimpleStreamFilter",
305:       "weka.filters.MultiFilter",
306:       "weka.filters.AllFilter",
307:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
308:       "weka.classifiers.meta.CostSensitiveClassifier",
309:       "weka.classifiers.CostMatrix",
310:       "weka.classifiers.trees.m5.M5Base",
311:       "weka.classifiers.rules.M5Rules",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
313:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
314:       "weka.classifiers.trees.LMT",
315:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
316:       "weka.classifiers.functions.LinearRegression",
317:       "weka.core.neighboursearch.KDTree",
318:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
319:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
320:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
321:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
322:       "weka.filters.supervised.attribute.Discretize",
323:       "weka.core.WekaException",
324:       "weka.core.UnsupportedAttributeTypeException",
325:       "weka.core.converters.ArffLoader$ArffReader",
326:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
327:       "weka.core.neighboursearch.balltrees.BallNode",
328:       "weka.classifiers.functions.SimpleLinearRegression",
329:       "weka.core.FindWithCapabilities",
330:       "weka.core.SingleIndex",
331:       "weka.core.ClassDiscovery",
332:       "weka.classifiers.meta.MultiClassClassifier",
333:       "weka.classifiers.functions.Logistic",
334:       "weka.attributeSelection.CorrelationAttributeEval",
335:       "weka.classifiers.trees.RandomForest",
336:       "weka.classifiers.trees.RandomTree",
337:       "weka.classifiers.functions.SMOreg",
338:       "weka.classifiers.functions.supportVector.RegOptimizer",
339:       "weka.classifiers.functions.supportVector.RegSMO",
340:       "weka.classifiers.functions.supportVector.RegSMOImproved",
341:       "weka.classifiers.functions.supportVector.CachedKernel",
342:       "weka.classifiers.functions.supportVector.PolyKernel",
343:       "weka.estimators.Estimator",
344:       "weka.estimators.DiscreteEstimator",
345:       "weka.classifiers.lazy.KStar",
346:       "weka.estimators.KernelEstimator",
347:       "weka.classifiers.functions.SimpleLogistic",
348:       "weka.classifiers.meta.RegressionByDiscretization",
349:       "weka.filters.unsupervised.attribute.Discretize",
350:       "weka.classifiers.trees.J48",
351:       "weka.classifiers.trees.j48.ClassifierTree",
352:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
353:       "weka.classifiers.functions.MultilayerPerceptron",
354:       "weka.core.FastVector",
355:       "weka.filters.unsupervised.attribute.NominalToBinary",
356:       "weka.classifiers.functions.neural.SigmoidUnit",
357:       "weka.classifiers.functions.neural.LinearUnit",
358:       "weka.classifiers.meta.ClassificationViaRegression",
359:       "weka.classifiers.trees.M5P",
360:       "weka.classifiers.IteratedSingleClassifierEnhancer",
361:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
362:       "weka.classifiers.meta.LogitBoost",
363:       "weka.classifiers.trees.DecisionStump",
364:       "weka.classifiers.functions.GaussianProcesses",
365:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
366:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
367:       "weka.classifiers.meta.Bagging",
368:       "weka.classifiers.trees.REPTree",
369:       "weka.classifiers.functions.supportVector.Puk",
370:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
371:       "weka.attributeSelection.OneRAttributeEval",
372:       "weka.attributeSelection.AttributeSelection",
373:       "weka.classifiers.rules.PART",
374:       "weka.classifiers.rules.part.MakeDecList",
375:       "weka.classifiers.functions.VotedPerceptron",
376:       "weka.classifiers.meta.AdaBoostM1",
377:       "weka.attributeSelection.GainRatioAttributeEval",
378:       "weka.classifiers.meta.RandomCommittee",
379:       "weka.classifiers.bayes.NaiveBayesUpdateable",
380:       "weka.classifiers.functions.SMO",
381:       "weka.classifiers.MultipleClassifiersCombiner",
382:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
383:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
384:       "weka.classifiers.meta.Stacking",
385:       "weka.core.AttributeStats",
386:       "weka.attributeSelection.CfsSubsetEval",
387:       "weka.classifiers.functions.SGDText$Count",
388:       "weka.classifiers.meta.FilteredClassifier",
389:       "weka.filters.supervised.attribute.AttributeSelection",
390:       "weka.attributeSelection.ASSearch",
391:       "weka.attributeSelection.GreedyStepwise",
392:       "weka.attributeSelection.BestFirst",
393:       "weka.core.WekaEnumeration",
394:       "weka.core.Attribute$1",
395:       "weka.classifiers.functions.supportVector.StringKernel",
396:       "weka.classifiers.lazy.LWL",
397:       "weka.estimators.PoissonEstimator",
398:       "weka.core.Javadoc",
399:       "weka.core.OptionHandlerJavadoc",
400:       "weka.core.Check",
401:       "weka.core.CheckOptionHandler",
402:       "weka.classifiers.meta.AdditiveRegression",
403:       "weka.core.ClassCache",
404:       "weka.core.AllJavadoc",
405:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
406:       "weka.classifiers.meta.MultiScheme",
407:       "weka.classifiers.rules.OneR",
408:       "weka.core.MinkowskiDistance",
409:       "weka.classifiers.functions.SGD",
410:       "weka.classifiers.functions.supportVector.RBFKernel",
411:       "weka.classifiers.meta.Vote",
412:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
413:       "weka.attributeSelection.ReliefFAttributeEval",
414:       "weka.classifiers.rules.JRip",
415:       "weka.classifiers.meta.CVParameterSelection",
416:       "weka.core.TechnicalInformation",
417:       "weka.core.TechnicalInformation$Type",
418:       "weka.core.TechnicalInformation$Field"
419:     );
420:   }
421: }

[MASTER] 13:10:17.971 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
naiveBayesMultinomialText0.setLNorm((-1015.97075374888));
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.setPeriodicPruning((-1828));
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
SerializedClassifier serializedClassifier0 = new SerializedClassifier();
File file0 = serializedClassifier0.getModelFile();
naiveBayesMultinomialText0.setStopwords(file0);
FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
naiveBayesMultinomialText0.m_t = (-2837.90533504);
naiveBayesMultinomialText0.setUseStopList(false);
FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
naiveBayesMultinomialText0.getLNorm();
naiveBayesMultinomialText0.getLNorm();
System.setCurrentTimeMillis((-1828));
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-1828));

[MASTER] 13:10:20.908 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 13:10:21.010 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18439
* Connecting to master process on port 18441
* Connecting to master process on port 18444
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1027
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:19:48.012 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:19:48.017 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:19:48.017 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:19:48.046 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1027
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:20:08.382 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:20:08.388 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:20:08.389 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:20:09.029 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 13:20:09.841 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 13:20:09.842 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 13:20:12.105 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 13:20:12.139 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 13:20:12.140 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 13:20:12.140 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 13:20:12.141 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 13:20:12.141 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 13:20:12.142 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 13:20:12.143 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 13:20:12.143 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 13:20:12.220 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 13:20:12.234 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1027
* Starting evolution
[MASTER] 13:20:16.603 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 13:21:21.119 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 126s and 85 generations, 53802 statements, best individual has fitness: 3168.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 217
* Number of covered goals: 183
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 64%
* Total number of goals: 428
* Number of covered goals: 275
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 83%
* Total number of goals: 260
* Number of covered goals: 215
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 64%
* Total number of goals: 428
* Number of covered goals: 274
* Generated 78 tests with total length 274
* Resulting test suite's coverage: 71% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 136s and 14 generations, 15830 statements, best individual has fitness: 3640.0
[MASTER] 13:22:09.287 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 19 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Search finished after 126s and 47 generations, 28466 statements, best individual has fitness: 17088.0
* Coverage of criterion LINE: 94%
* Total number of goals: 647
* Number of covered goals: 606
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 87%
* Total number of goals: 441
* Number of covered goals: 384
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 86%
* Total number of goals: 678
* Number of covered goals: 581
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 37%
* Total number of goals: 244
* Number of covered goals: 90
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 91%
* Total number of goals: 124
* Number of covered goals: 113
* Coverage analysis for criterion METHODNOEXCEPTION
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion METHODNOEXCEPTION: 91%
* Total number of goals: 124
* Number of covered goals: 113
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 441
* Number of covered goals: 360
* Coverage of criterion LINE: 48%
* Total number of goals: 1378
* Number of covered goals: 663
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 40%
* Total number of goals: 809
* Number of covered goals: 323
* Coverage analysis for criterion EXCEPTION
* Generated 152 tests with total length 3298
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 54
* Number of covered goals: 54
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 58%
* Total number of goals: 424
* Number of covered goals: 247
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 21%
* Total number of goals: 278
* Number of covered goals: 57
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 97%
* Total number of goals: 103
* Number of covered goals: 100
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 94%
* Total number of goals: 103
* Number of covered goals: 97
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 36%
* Total number of goals: 809
* Number of covered goals: 295
* Generated 138 tests with total length 1353
* Resulting test suite's coverage: 46% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 72%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 7%
* Compiling and checking tests
[MASTER] 13:26:55.524 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 13:26:55.642 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 13:26:56.072 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 13:26:56.072 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 13:27:51.292 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6788645833333333% of time used, but only 39/152 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18437
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:30:53.587 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:30:53.631 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:30:53.632 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:30:57.189 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 13:30:58.517 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 13:30:58.555 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1027
* Starting evolution
[MASTER] 13:31:05.711 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.<init>(Lweka/classifiers/rules/JRip;)V
[MASTER] 13:31:43.652 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 124s and 103 generations, 69021 statements, best individual has fitness: 12608.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 35%
* Total number of goals: 705
* Number of covered goals: 249
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 25%
* Total number of goals: 416
* Number of covered goals: 105
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 56%
* Total number of goals: 993
* Number of covered goals: 553
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 27%
* Total number of goals: 93
* Number of covered goals: 25
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 25%
* Total number of goals: 416
* Number of covered goals: 105
* Generated 63 tests with total length 593
* Resulting test suite's coverage: 43% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 25%
* Compiling and checking tests
[MASTER] 13:34:36.595 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<121> but was:<120>
[MASTER] 13:34:36.597 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
FileSystemHandling.createFolder((EvoSuiteFile) null);
FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
jRip0.setMinNo(0.0);
AbstractClassifier.makeCopies(jRip0, 2256);
String string0 = jRip0.globalInfo();
jRip0.getOptimizations();
jRip0.getMinNo();
LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
Environment environment0 = new Environment();
Set<String> set0 = environment0.getVariableNames();
Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0);
Properties properties0 = new Properties();
ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
Attribute attribute0 = new Attribute(string0, list1, protectedProperties0);
JRip.NominalAntd jRip_NominalAntd0 = jRip0.new NominalAntd(attribute0);
jRip_NominalAntd0.copy();
assertEquals(121, set0.size());
assertEquals(Double.NaN, jRip_NominalAntd0.getAccu(), 0.01);


* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18446
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:35:11.814 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:35:11.832 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:35:11.849 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:35:11.888 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1027
* Starting evolution
[MASTER] 13:35:15.733 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 123s and 77 generations, 48870 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 19 tests with total length 206
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
