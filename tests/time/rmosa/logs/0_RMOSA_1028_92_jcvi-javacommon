* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.jcvi.jillion.core.Range
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 20777
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:52:14.169 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:52:14.248 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 13:52:14.285 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToDoubleFunction
[MASTER] 13:52:14.288 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToIntFunction
[MASTER] 13:52:14.289 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToLongFunction
[MASTER] 13:52:14.429 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:52:14.460 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.Range
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1028
* Starting evolution
[MASTER] 13:52:32.352 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: Line 528
[MASTER] 13:52:32.353 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.intersection(Lorg/jcvi/jillion/core/Range;)Lorg/jcvi/jillion/core/Range;: Line 803
[MASTER] 13:52:32.353 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 831
[MASTER] 13:52:32.353 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 832
[MASTER] 13:52:32.353 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 833
[MASTER] 13:52:32.353 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 835
[MASTER] 13:52:32.353 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 836
[MASTER] 13:52:32.353 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 837
[MASTER] 13:52:32.353 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 838
[MASTER] 13:52:32.353 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 839
[MASTER] 13:52:32.353 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 843
[MASTER] 13:52:32.353 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 852
[MASTER] 13:52:32.353 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complementFrom(Ljava/util/Collection;)Ljava/util/List;: Line 859
[MASTER] 13:52:32.367 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.<init>(SJ)V: Line 1541
[MASTER] 13:52:32.367 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.<init>(SJ)V: Line 1542
[MASTER] 13:52:32.367 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.<init>(SJ)V: Line 1543
[MASTER] 13:52:32.367 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.<init>(SJ)V: Line 1545
[MASTER] 13:52:32.367 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getBegin()J: Line 1557
[MASTER] 13:52:32.368 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getLength()J: Line 1562
[MASTER] 13:52:32.368 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J: Line 1567
[MASTER] 13:52:32.368 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$EmptyLongRange.isEmpty()Z: Line 2296
[MASTER] 13:52:32.373 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 240: org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;:525 - ReplaceComparisonOperator > -> -2
[MASTER] 13:52:32.373 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 445: org.jcvi.jillion.core.Range.intersection(Lorg/jcvi/jillion/core/Range;)Lorg/jcvi/jillion/core/Range;:809 - ReplaceArithmeticOperator + -> %
[MASTER] 13:52:32.373 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 467: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:832 - ReplaceComparisonOperator == -> !=
[MASTER] 13:52:32.373 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 478: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:836 - ReplaceComparisonOperator == -> >=
[MASTER] 13:52:32.373 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 485: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:837 - ReplaceArithmeticOperator - -> +
[MASTER] 13:52:32.374 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 486: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:837 - ReplaceArithmeticOperator - -> %
[MASTER] 13:52:32.374 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 487: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:837 - ReplaceArithmeticOperator - -> *
[MASTER] 13:52:32.374 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 488: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:837 - ReplaceArithmeticOperator - -> /
[MASTER] 13:52:32.381 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 492: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:838 - ReplaceComparisonOperator != -> ==
[MASTER] 13:52:32.381 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 503: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:843 - ReplaceComparisonOperator == -> -2
[MASTER] 13:52:32.388 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1113: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator + -> %
[MASTER] 13:52:32.388 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1114: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator + -> -
[MASTER] 13:52:32.388 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1115: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator + -> *
[MASTER] 13:52:32.388 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1116: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator + -> /
[MASTER] 13:52:32.388 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1120: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator - -> +
[MASTER] 13:52:32.388 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1121: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator - -> %
[MASTER] 13:52:32.388 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1122: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator - -> *
[MASTER] 13:52:32.388 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1123: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator - -> /
[MASTER] 13:52:32.390 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;
[MASTER] 13:52:32.391 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;
[MASTER] 13:52:32.397 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getBegin()J: root-Branch in context: 
[MASTER] 13:52:32.397 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$EmptyLongRange.isEmpty()Z: root-Branch in context: 
[MASTER] 13:52:32.398 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getLength()J: root-Branch in context: 
[MASTER] 13:52:32.406 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.complementFrom(Ljava/util/Collection;)Ljava/util/List;: I24 Branch 54 IFEQ L858 - false in context: org.jcvi.jillion.core.Range:complementFrom(Ljava/util/Collection;)Ljava/util/List;
[MASTER] 13:52:32.406 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: I10 Branch 49 IFEQ L832 - false in context: org.jcvi.jillion.core.Range:complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;
[MASTER] 13:52:32.406 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I29 Branch 19 IFGT L525 - true in context: 
[MASTER] 13:52:32.406 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J: root-Branch in context: 
[MASTER] 13:52:35.795 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 565: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:947 - ReplaceComparisonOperator >= -> >
[MASTER] 13:52:53.397 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.parseRange(Ljava/lang/String;Lorg/jcvi/jillion/core/Range$CoordinateSystem;)Lorg/jcvi/jillion/core/Range;
[MASTER] 13:53:09.357 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.intersection(Lorg/jcvi/jillion/core/Range;)Lorg/jcvi/jillion/core/Range;: I28 Branch 46 IFEQ L799 - false in context: org.jcvi.jillion.core.Range:intersection(Lorg/jcvi/jillion/core/Range;)Lorg/jcvi/jillion/core/Range;
[MASTER] 13:53:12.457 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 569: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:951 - ReplaceComparisonOperator >= -> ==
[MASTER] 13:53:12.457 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 578: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:956 - ReplaceComparisonOperator > -> !=
[MASTER] 13:53:12.457 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 597: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator - -> %
* Search finished after 128s and 42 generations, 21548 statements, best individual has fitness: 8232.0
[MASTER] 13:54:28.853 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 13 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 67%
* Total number of goals: 632
* Number of covered goals: 423
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 69%
* Total number of goals: 426
* Number of covered goals: 295
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 52%
* Total number of goals: 802
* Number of covered goals: 419
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 77
* Number of covered goals: 39
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 37%
* Total number of goals: 107
* Number of covered goals: 40
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 37%
* Total number of goals: 107
* Number of covered goals: 40
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 69%
* Total number of goals: 426
* Number of covered goals: 292
* Generated 154 tests with total length 1181
* Resulting test suite's coverage: 60% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 28%
* Compiling and checking tests
[MASTER] 13:56:45.429 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.IndexOutOfBoundsException: given length -9223372036854775784 would make range [1515 - ? ] beyond max allowed end offset
[MASTER] 13:56:45.429 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
long long0 = (-2291L);
Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.SPACE_BASED;
long long1 = (-9223372036854775783L);
Range.of(range_CoordinateSystem1, 1515L, (-9223372036854775783L));

[MASTER] 13:56:51.265 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 13:56:51.266 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, 4294967295L, 4294967295L);
assertFalse(range0.isEmpty());


[MASTER] 13:56:51.529 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 13:56:51.530 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.ofLength(2147483647L);
Object object0 = new Object();
boolean boolean0 = range0.equals(object0);
assertTrue(range0.isEmpty());
assertFalse(boolean0);


[MASTER] 13:56:51.684 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 13:56:51.684 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, 1341389L, 1341389L);
Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.RESIDUE_BASED;
Range range1 = Range.of(range_CoordinateSystem1, (-2291L), 4068L);
range0.complement(range1);
assertFalse(range0.isEmpty());


[MASTER] 13:56:52.249 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 13:56:52.249 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of((-12L));
Range range1 = Range.of((-12L));
boolean boolean0 = range0.equals(range1);
assertTrue(boolean0);
assertTrue(range1.isEmpty());


[MASTER] 13:56:52.762 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 13:56:52.762 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(2147483647L);
Object object0 = new Object();
boolean boolean0 = range0.equals(object0);
assertFalse(boolean0);
assertTrue(range0.isEmpty());


[MASTER] 13:56:53.149 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 13:56:53.149 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of((-12L));
Long long0 = new Long((-1146L));
Long.remainderUnsigned((-12L), (-12L));
range0.equals(long0);
assertTrue(range0.isEmpty());


* Writing JUnit test case 'Range_ESTest' to /home/ubuntu/termite/rmosa/tests/s1028/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.jcvi.jillion.assembly.consed.phd.PhdBuilder
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 20775
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:58:38.974 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 13:58:38.976 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 13:58:38.981 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 13:58:39.057 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:58:39.105 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:58:39.115 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:58:39.302 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 13:58:39.303 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 13:58:39.304 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 13:58:39.307 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 13:58:39.319 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 13:58:39.325 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 13:58:39.326 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 13:58:39.331 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 13:58:39.336 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.assembly.consed.phd.PhdBuilder
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1028
* Starting evolution
* Search finished after 121s and 382 generations, 214126 statements, best individual has fitness: 64.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 93
* Number of covered goals: 93
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 100%
* Total number of goals: 47
* Number of covered goals: 47
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 16
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Generated 27 tests with total length 121
* Resulting test suite's coverage: 97% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 13%
* Compiling and checking tests
* Writing JUnit test case 'PhdBuilder_ESTest' to /home/ubuntu/termite/rmosa/tests/s1028/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 20774
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 14:06:58.005 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:06:58.019 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:06:58.027 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 14:06:58.111 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1028
* Starting evolution
[MASTER] 14:06:59.033 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 14:06:59.034 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 14:07:42.285 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 123s and 190 generations, 170425 statements, best individual has fitness: 336.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 131
* Number of covered goals: 130
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 74
* Number of covered goals: 73
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 47
* Number of covered goals: 47
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 99%
* Total number of goals: 469
* Number of covered goals: 466
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 65%
* Total number of goals: 52
* Number of covered goals: 34
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 83%
* Total number of goals: 18
* Number of covered goals: 15
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 83%
* Total number of goals: 18
* Number of covered goals: 15
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 74
* Number of covered goals: 61
* Generated 95 tests with total length 629
* Resulting test suite's coverage: 95% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 69%
* Compiling and checking tests
[MASTER] 14:09:46.915 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 14:09:46.915 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DefaultNucleotideCodec defaultNucleotideCodec0 = DefaultNucleotideCodec.INSTANCE;
byte[] byteArray0 = new byte[4];
byteArray0[0] = (byte)84;
byteArray0[1] = (byte)0;
byteArray0[2] = (byte)10;
byteArray0[3] = (byte) (-31);
defaultNucleotideCodec0.toString(byteArray0);

* Writing JUnit test case 'DefaultNucleotideCodec_ESTest' to /home/ubuntu/termite/rmosa/tests/s1028/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.jcvi.jillion.core.util.FileIterator
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 20775
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 14:17:23.104 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:17:23.436 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:17:23.437 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 14:17:23.513 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.util.FileIterator
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1028
* Starting evolution
* Search finished after 121s and 405 generations, 143328 statements, best individual has fitness: 592.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 107
* Number of covered goals: 102
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 67
* Number of covered goals: 66
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 98%
* Total number of goals: 53
* Number of covered goals: 52
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 55%
* Total number of goals: 74
* Number of covered goals: 41
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 28
* Number of covered goals: 14
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 28
* Number of covered goals: 14
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 93%
* Total number of goals: 67
* Number of covered goals: 62
* Generated 32 tests with total length 285
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 56%
* Compiling and checking tests
* Writing JUnit test case 'FileIterator_ESTest' to /home/ubuntu/termite/rmosa/tests/s1028/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
