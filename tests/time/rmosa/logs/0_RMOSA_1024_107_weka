* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 8336
* Connecting to master process on port 8335
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 8339
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1024
* Starting evolution
[MASTER] 10:35:32.993 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 10:35:33.001 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 10:35:33.022 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 10:35:33.171 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:35:33.185 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:35:33.203 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1024
* Starting evolution
[MASTER] 10:35:40.177 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 10:35:40.178 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:35:43.153 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:35:43.164 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:35:43.182 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:35:43.197 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1024
* Starting evolution
[MASTER] 10:35:44.887 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V: Line 525
[MASTER] 10:35:44.888 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: Line 1084
[MASTER] 10:35:44.888 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: Line 1085
[MASTER] 10:35:44.888 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V: I3 Branch 47 IFNULL L524 - false
[MASTER] 10:35:44.888 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: I4 Branch 70 IFNONNULL L1084 - false
[MASTER] 10:35:44.890 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 240: weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V:525 - ReplaceVariable value -> m_stemmer
[MASTER] 10:35:44.891 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 435: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:1084 - ReplaceComparisonOperator != null -> = null
[MASTER] 10:35:44.891 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 436: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:1085 - ReplaceConstant - NaiveBayesMultinomialText: No model built yet.
 -> 
[MASTER] 10:35:44.891 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getStemmer()Lweka/core/stemmers/Stemmer;:NonNull
[MASTER] 10:35:44.891 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;:NonNull
[MASTER] 10:35:44.891 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:Zero
[MASTER] 10:35:44.892 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:NonEmptyString
[MASTER] 10:35:44.892 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V
[MASTER] 10:35:44.892 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getStemmer()Lweka/core/stemmers/Stemmer;
[MASTER] 10:35:44.892 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;
[MASTER] 10:35:44.892 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D
[MASTER] 10:35:44.893 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;
[MASTER] 10:35:44.893 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V
[MASTER] 10:35:44.893 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getStemmer()Lweka/core/stemmers/Stemmer;
[MASTER] 10:35:44.893 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;
[MASTER] 10:35:44.894 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D
[MASTER] 10:35:44.914 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;
[MASTER] 10:35:44.914 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: I4 Branch 70 IFNONNULL L1084 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:toString()Ljava/lang/String;
[MASTER] 10:35:44.914 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getTokenizer()Lweka/core/tokenizers/Tokenizer;
[MASTER] 10:35:44.914 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V: I3 Branch 47 IFNULL L524 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStemmer(Lweka/core/stemmers/Stemmer;)V
[MASTER] 10:35:44.915 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getMinWordFrequency()D
[MASTER] 10:35:44.915 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getStemmer()Lweka/core/stemmers/Stemmer;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getStemmer()Lweka/core/stemmers/Stemmer;
[MASTER] 10:35:48.211 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 10:36:20.708 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 10:37:14.296 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
[MASTER] 10:37:21.743 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:Negative
* Search finished after 125s and 81 generations, 50840 statements, best individual has fitness: 2968.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 217
* Number of covered goals: 187
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 64%
* Total number of goals: 428
* Number of covered goals: 274
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 260
* Number of covered goals: 237
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 64%
* Total number of goals: 428
* Number of covered goals: 274
* Generated 75 tests with total length 251
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 124s and 115 generations, 75232 statements, best individual has fitness: 1624.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 92%
* Total number of goals: 338
* Number of covered goals: 310
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 80%
* Total number of goals: 194
* Number of covered goals: 155
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 476
* Number of covered goals: 439
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 47%
* Total number of goals: 112
* Number of covered goals: 53
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 49
* Number of covered goals: 48
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 49
* Number of covered goals: 48
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 78%
* Total number of goals: 194
* Number of covered goals: 152
* Generated 66 tests with total length 836
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 122s and 56 generations, 43441 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 17 tests with total length 162
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1024/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 80%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1024/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 55%
* Compiling and checking tests
[MASTER] 10:41:45.455 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_16_1575628905416/weka/classifiers/bayes/NaiveBayesMultinomialText_16_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_16_1575628905416/weka/classifiers/bayes/NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding.java]]
[MASTER] 10:41:45.455 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:41:45.455 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:41:45.459 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 10:41:45.460 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 10:41:45.460 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_16_1575628905416/weka/classifiers/bayes/NaiveBayesMultinomialText_16_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 10:41:45 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.DenseInstance;
17: import weka.core.Instances;
18: import weka.core.TestInstances;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_16_tmp__ESTest extends NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=1.543056733112554
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
31:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
32:       naiveBayesMultinomialText0.getUseWordFrequencies();
33:       naiveBayesMultinomialText0.setNormalizeDocLength(true);
34:       double[] doubleArray0 = new double[6];
35:       doubleArray0[1] = (-1714.8970879892);
36:       doubleArray0[2] = (-1714.8970879892);
37:       doubleArray0[3] = (-1714.8970879892);
38:       doubleArray0[4] = (-1714.8970879892);
39:       DenseInstance denseInstance0 = new DenseInstance((-1714.8970879892), doubleArray0);
40:       denseInstance0.copy();
41:       // Undeclared exception!
42:       try { 
43:         naiveBayesMultinomialText0.tokenizeInstance(denseInstance0, false);
44:         fail("Expecting exception: RuntimeException");
45:       
46:       } catch(RuntimeException e) {
47:          //
48:          // DenseInstance doesn't have access to a dataset!
49:          //
50:          verifyException("weka.core.AbstractInstance", e);
51:       }
52:   }
53: }
RegularFileObject[/tmp/EvoSuite_16_1575628905416/weka/classifiers/bayes/NaiveBayesMultinomialText_16_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 10:41:45 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.attributeSelection.SubsetEvaluator",
95:       "weka.classifiers.CostMatrix",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.attributeSelection.CfsSubsetEval",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.estimators.IncrementalEstimator",
107:       "weka.estimators.Estimator$Builder",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.EnvironmentHandler",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Capabilities",
121:       "weka.core.Copyable",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.core.AdditionalMeasureProducer",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.SingleIndex",
134:       "weka.core.CapabilitiesHandler",
135:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
136:       "weka.attributeSelection.ASEvaluation",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.classifiers.misc.InputMappedClassifier",
142:       "weka.core.Version",
143:       "weka.core.Tag",
144:       "weka.core.neighboursearch.CoverTree",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.core.FindWithCapabilities",
147:       "weka.core.OptionHandler",
148:       "weka.core.WekaException",
149:       "weka.core.ClassDiscovery",
150:       "weka.core.Range",
151:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
152:       "weka.core.scripting.JythonSerializableObject",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.classifiers.misc.SerializedClassifier",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.core.stemmers.LovinsStemmer",
162:       "weka.classifiers.Evaluation",
163:       "weka.classifiers.functions.supportVector.Kernel",
164:       "weka.core.WekaPackageManager",
165:       "weka.filters.SupervisedFilter",
166:       "weka.core.TechnicalInformationHandler",
167:       "weka.core.neighboursearch.LinearNNSearch",
168:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
169:       "weka.core.Option",
170:       "weka.classifiers.meta.CostSensitiveClassifier",
171:       "weka.core.neighboursearch.PerformanceStats",
172:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
173:       "weka.estimators.KernelEstimator",
174:       "weka.filters.Sourcable",
175:       "weka.core.Attribute",
176:       "weka.core.Stopwords",
177:       "weka.core.tokenizers.AlphabeticTokenizer",
178:       "weka.core.FastVector",
179:       "weka.classifiers.MultipleClassifiersCombiner",
180:       "weka.core.UnassignedDatasetException",
181:       "weka.classifiers.RandomizableClassifier",
182:       "weka.classifiers.SingleClassifierEnhancer",
183:       "weka.core.RevisionUtils",
184:       "weka.core.Instance",
185:       "weka.estimators.Estimator",
186:       "weka.core.ProtectedProperties",
187:       "weka.classifiers.meta.Vote",
188:       "weka.core.StringLocator",
189:       "weka.core.AttributeStats",
190:       "weka.core.WeightedInstancesHandler",
191:       "weka.core.neighboursearch.NearestNeighbourSearch",
192:       "weka.core.GlobalInfoJavadoc",
193:       "weka.core.Randomizable",
194:       "weka.core.Javadoc",
195:       "weka.core.EuclideanDistance",
196:       "weka.core.Instances",
197:       "weka.core.UnassignedClassException",
198:       "weka.classifiers.rules.ZeroR",
199:       "weka.core.TechnicalInformation",
200:       "weka.core.UnsupportedAttributeTypeException",
201:       "weka.classifiers.Sourcable",
202:       "weka.core.RevisionHandler",
203:       "weka.classifiers.evaluation.output.prediction.PlainText",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.core.xml.XMLSerialization",
206:       "weka.classifiers.xml.XMLClassifier",
207:       "weka.filters.Filter",
208:       "weka.classifiers.lazy.IBk",
209:       "weka.filters.supervised.attribute.Discretize"
210:     );
211:   } 
212: 
213:   private static void resetClasses() {
214:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding.class.getClassLoader()); 
215: 
216:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
217:       "weka.classifiers.AbstractClassifier",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
219:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
220:       "weka.core.Capabilities$Capability",
221:       "weka.core.tokenizers.Tokenizer",
222:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
223:       "weka.core.tokenizers.WordTokenizer",
224:       "weka.core.stemmers.NullStemmer",
225:       "weka.classifiers.RandomizableClassifier",
226:       "weka.core.Tag",
227:       "weka.classifiers.functions.SGDText",
228:       "weka.core.SelectedTag",
229:       "weka.core.AbstractInstance",
230:       "weka.core.SparseInstance",
231:       "weka.core.BinarySparseInstance",
232:       "weka.core.UnassignedDatasetException",
233:       "weka.core.Utils",
234:       "weka.classifiers.misc.SerializedClassifier",
235:       "weka.classifiers.Evaluation",
236:       "weka.core.Option",
237:       "weka.core.neighboursearch.NearestNeighbourSearch",
238:       "weka.core.neighboursearch.KDTree",
239:       "weka.core.NormalizableDistance",
240:       "weka.core.EuclideanDistance",
241:       "weka.core.Range",
242:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
243:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
244:       "weka.classifiers.bayes.NaiveBayes",
245:       "weka.core.neighboursearch.LinearNNSearch",
246:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
247:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
248:       "weka.core.SerializedObject",
249:       "weka.core.Capabilities",
250:       "org.pentaho.packageManagement.PackageManager",
251:       "org.pentaho.packageManagement.DefaultPackageManager",
252:       "weka.core.Version",
253:       "weka.core.Environment",
254:       "weka.core.WekaPackageManager",
255:       "weka.core.TestInstances",
256:       "weka.core.Attribute",
257:       "weka.core.ProtectedProperties",
258:       "weka.core.Instances",
259:       "weka.core.DenseInstance",
260:       "weka.classifiers.SingleClassifierEnhancer",
261:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
262:       "weka.classifiers.meta.CostSensitiveClassifier",
263:       "weka.classifiers.rules.ZeroR",
264:       "weka.classifiers.CostMatrix",
265:       "weka.core.RevisionUtils",
266:       "weka.attributeSelection.ASEvaluation",
267:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
268:       "weka.attributeSelection.PrincipalComponents",
269:       "weka.core.tokenizers.AlphabeticTokenizer",
270:       "weka.filters.Filter",
271:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
272:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
273:       "weka.estimators.Estimator",
274:       "weka.estimators.DiscreteEstimator",
275:       "weka.core.UnassignedClassException",
276:       "weka.classifiers.rules.OneR",
277:       "weka.core.tokenizers.NGramTokenizer",
278:       "weka.core.neighboursearch.CoverTree",
279:       "weka.classifiers.bayes.BayesNet",
280:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
281:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
282:       "weka.classifiers.bayes.net.search.local.K2",
283:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
284:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
285:       "weka.core.TechnicalInformation",
286:       "weka.core.TechnicalInformation$Type",
287:       "weka.core.TechnicalInformation$Field",
288:       "weka.attributeSelection.CorrelationAttributeEval",
289:       "weka.core.neighboursearch.BallTree",
290:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
291:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
292:       "weka.core.neighboursearch.balltrees.BallSplitter",
293:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
294:       "weka.core.stemmers.SnowballStemmer",
295:       "weka.core.stemmers.Stemming",
296:       "weka.filters.supervised.attribute.Discretize",
297:       "weka.core.stemmers.LovinsStemmer",
298:       "weka.core.FindWithCapabilities",
299:       "weka.core.SingleIndex",
300:       "weka.core.WekaException",
301:       "weka.core.UnsupportedAttributeTypeException",
302:       "weka.core.neighboursearch.balltrees.BallNode",
303:       "weka.core.stemmers.IteratedLovinsStemmer",
304:       "weka.classifiers.trees.m5.M5Base",
305:       "weka.classifiers.rules.M5Rules",
306:       "weka.core.converters.ArffLoader$ArffReader",
307:       "weka.classifiers.functions.supportVector.Kernel",
308:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
309:       "weka.classifiers.bayes.net.BIFReader",
310:       "weka.classifiers.misc.InputMappedClassifier",
311:       "weka.core.Javadoc",
312:       "weka.core.ClassDiscovery",
313:       "weka.core.ClassCache",
314:       "weka.core.AllJavadoc",
315:       "weka.core.WekaEnumeration",
316:       "weka.core.Attribute$1",
317:       "weka.classifiers.lazy.IBk",
318:       "weka.filters.SimpleFilter",
319:       "weka.filters.SimpleStreamFilter",
320:       "weka.filters.MultiFilter",
321:       "weka.filters.AllFilter",
322:       "weka.classifiers.meta.MultiClassClassifier",
323:       "weka.classifiers.functions.Logistic",
324:       "weka.classifiers.functions.GaussianProcesses",
325:       "weka.classifiers.functions.supportVector.CachedKernel",
326:       "weka.classifiers.functions.supportVector.PolyKernel",
327:       "weka.classifiers.functions.SGD",
328:       "weka.estimators.NormalEstimator",
329:       "weka.classifiers.bayes.NaiveBayesMultinomial",
330:       "weka.classifiers.trees.REPTree",
331:       "weka.core.Stopwords",
332:       "weka.classifiers.trees.LMT",
333:       "weka.classifiers.meta.ClassificationViaRegression",
334:       "weka.classifiers.trees.M5P",
335:       "weka.classifiers.functions.LinearRegression",
336:       "weka.classifiers.MultipleClassifiersCombiner",
337:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
338:       "weka.classifiers.meta.Vote",
339:       "weka.classifiers.functions.VotedPerceptron",
340:       "weka.attributeSelection.CfsSubsetEval",
341:       "weka.estimators.PoissonEstimator",
342:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
343:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
344:       "weka.classifiers.functions.SimpleLogistic",
345:       "weka.attributeSelection.AttributeSelection",
346:       "weka.core.Check",
347:       "weka.core.CheckGOE",
348:       "weka.classifiers.functions.supportVector.Puk",
349:       "weka.attributeSelection.GainRatioAttributeEval",
350:       "weka.core.TechnicalInformationHandlerJavadoc",
351:       "weka.classifiers.lazy.LWL",
352:       "weka.classifiers.trees.DecisionStump",
353:       "weka.classifiers.trees.J48",
354:       "weka.classifiers.trees.j48.ClassifierTree",
355:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
356:       "weka.classifiers.rules.PART",
357:       "weka.classifiers.rules.part.MakeDecList",
358:       "weka.classifiers.IteratedSingleClassifierEnhancer",
359:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
360:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
361:       "weka.classifiers.meta.RandomCommittee",
362:       "weka.classifiers.trees.RandomTree",
363:       "weka.core.CheckOptionHandler",
364:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
365:       "weka.attributeSelection.WrapperSubsetEval",
366:       "weka.core.ChebyshevDistance",
367:       "weka.classifiers.functions.SimpleLinearRegression",
368:       "weka.classifiers.functions.supportVector.StringKernel",
369:       "weka.classifiers.lazy.KStar",
370:       "weka.core.MinkowskiDistance",
371:       "weka.classifiers.meta.MultiScheme",
372:       "weka.core.GlobalInfoJavadoc",
373:       "weka.classifiers.functions.MultilayerPerceptron",
374:       "weka.core.FastVector",
375:       "weka.filters.unsupervised.attribute.NominalToBinary",
376:       "weka.classifiers.functions.neural.SigmoidUnit",
377:       "weka.classifiers.functions.neural.LinearUnit",
378:       "weka.classifiers.meta.FilteredClassifier",
379:       "weka.filters.supervised.attribute.AttributeSelection",
380:       "weka.attributeSelection.ASSearch",
381:       "weka.attributeSelection.GreedyStepwise",
382:       "weka.attributeSelection.BestFirst",
383:       "weka.core.OptionHandlerJavadoc",
384:       "weka.classifiers.trees.RandomForest",
385:       "weka.core.ListOptions",
386:       "weka.estimators.MahalanobisEstimator",
387:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
388:       "weka.classifiers.meta.Bagging",
389:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
390:       "weka.attributeSelection.ReliefFAttributeEval",
391:       "weka.classifiers.meta.AdditiveRegression",
392:       "weka.classifiers.functions.supportVector.RBFKernel",
393:       "weka.estimators.KernelEstimator",
394:       "weka.core.ManhattanDistance",
395:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
396:       "weka.classifiers.meta.AdaBoostM1",
397:       "weka.core.matrix.Matrix",
398:       "weka.classifiers.rules.JRip",
399:       "weka.classifiers.rules.DecisionTable",
400:       "weka.classifiers.functions.SMO",
401:       "weka.attributeSelection.OneRAttributeEval",
402:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
403:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
404:       "weka.classifiers.meta.Stacking",
405:       "weka.core.AttributeStats",
406:       "weka.classifiers.meta.CVParameterSelection",
407:       "weka.classifiers.bayes.NaiveBayesUpdateable",
408:       "weka.classifiers.functions.SMOreg",
409:       "weka.classifiers.functions.supportVector.RegOptimizer",
410:       "weka.classifiers.functions.supportVector.RegSMO",
411:       "weka.classifiers.functions.supportVector.RegSMOImproved",
412:       "weka.classifiers.meta.AttributeSelectedClassifier",
413:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
414:       "weka.attributeSelection.InfoGainAttributeEval",
415:       "weka.core.SerializationHelper",
416:       "weka.classifiers.meta.LogitBoost",
417:       "weka.core.neighboursearch.PerformanceStats"
418:     );
419:   }
420: }

[MASTER] 10:41:45.461 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.getUseWordFrequencies();
naiveBayesMultinomialText0.setNormalizeDocLength(true);
double[] doubleArray0 = new double[6];
doubleArray0[1] = (-1714.8970879892);
doubleArray0[2] = (-1714.8970879892);
doubleArray0[3] = (-1714.8970879892);
doubleArray0[4] = (-1714.8970879892);
DenseInstance denseInstance0 = new DenseInstance((-1714.8970879892), doubleArray0);
denseInstance0.copy();
naiveBayesMultinomialText0.tokenizeInstance(denseInstance0, false);

[MASTER] 10:41:45.691 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_21_1575628905658/weka/classifiers/bayes/NaiveBayesMultinomialText_21_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_21_1575628905658/weka/classifiers/bayes/NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding.java]]
[MASTER] 10:41:45.691 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:41:45.691 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:41:45.691 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 10:41:45.692 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 10:41:45.692 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_21_1575628905658/weka/classifiers/bayes/NaiveBayesMultinomialText_21_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 10:41:45 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.io.File;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_21_tmp__ESTest extends NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=2.4164983843494308
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       double[] doubleArray0 = new double[6];
28:       doubleArray0[0] = 4.9E-324;
29:       doubleArray0[1] = 0.0;
30:       doubleArray0[2] = (-173.30379469724);
31:       doubleArray0[3] = 0.0;
32:       doubleArray0[4] = 1.0;
33:       doubleArray0[5] = 0.0;
34:       naiveBayesMultinomialText0.m_wordsPerClass = doubleArray0;
35:       naiveBayesMultinomialText0.m_t = 0.0;
36:       naiveBayesMultinomialText0.m_t = 3.0;
37:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
38:       
39:       naiveBayesMultinomialText0.setNormalizeDocLength(true);
40:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
41:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
42:       naiveBayesMultinomialText0.setStopwords((File) null);
43:       naiveBayesMultinomialText0.useStopListTipText();
44:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
45:       naiveBayesMultinomialText0.getNormalizeDocLength();
46:       naiveBayesMultinomialText0.getNorm();
47:       naiveBayesMultinomialText0.globalInfo();
48:       assertTrue(naiveBayesMultinomialText0.getNormalizeDocLength());
49:   }
50: }
RegularFileObject[/tmp/EvoSuite_21_1575628905658/weka/classifiers/bayes/NaiveBayesMultinomialText_21_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 10:41:45 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.attributeSelection.SubsetEvaluator",
95:       "weka.classifiers.CostMatrix",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.attributeSelection.CfsSubsetEval",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.estimators.IncrementalEstimator",
107:       "weka.estimators.Estimator$Builder",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.EnvironmentHandler",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Capabilities",
121:       "weka.core.Copyable",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.core.AdditionalMeasureProducer",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.SingleIndex",
134:       "weka.core.CapabilitiesHandler",
135:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
136:       "weka.attributeSelection.ASEvaluation",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.classifiers.misc.InputMappedClassifier",
142:       "weka.core.Version",
143:       "weka.core.Tag",
144:       "weka.core.neighboursearch.CoverTree",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.core.FindWithCapabilities",
147:       "weka.core.OptionHandler",
148:       "weka.core.WekaException",
149:       "weka.core.ClassDiscovery",
150:       "weka.core.Range",
151:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
152:       "weka.core.scripting.JythonSerializableObject",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.classifiers.misc.SerializedClassifier",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.core.stemmers.LovinsStemmer",
162:       "weka.classifiers.Evaluation",
163:       "weka.classifiers.functions.supportVector.Kernel",
164:       "weka.core.WekaPackageManager",
165:       "weka.filters.SupervisedFilter",
166:       "weka.core.TechnicalInformationHandler",
167:       "weka.core.neighboursearch.LinearNNSearch",
168:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
169:       "weka.core.Option",
170:       "weka.classifiers.meta.CostSensitiveClassifier",
171:       "weka.core.neighboursearch.PerformanceStats",
172:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
173:       "weka.estimators.KernelEstimator",
174:       "weka.filters.Sourcable",
175:       "weka.core.Attribute",
176:       "weka.core.Stopwords",
177:       "weka.core.tokenizers.AlphabeticTokenizer",
178:       "weka.core.FastVector",
179:       "weka.classifiers.MultipleClassifiersCombiner",
180:       "weka.core.UnassignedDatasetException",
181:       "weka.classifiers.RandomizableClassifier",
182:       "weka.classifiers.SingleClassifierEnhancer",
183:       "weka.core.RevisionUtils",
184:       "weka.core.Instance",
185:       "weka.estimators.Estimator",
186:       "weka.core.ProtectedProperties",
187:       "weka.classifiers.meta.Vote",
188:       "weka.core.StringLocator",
189:       "weka.core.AttributeStats",
190:       "weka.core.WeightedInstancesHandler",
191:       "weka.core.neighboursearch.NearestNeighbourSearch",
192:       "weka.core.GlobalInfoJavadoc",
193:       "weka.core.Randomizable",
194:       "weka.core.Javadoc",
195:       "weka.core.EuclideanDistance",
196:       "weka.core.Instances",
197:       "weka.core.UnassignedClassException",
198:       "weka.classifiers.rules.ZeroR",
199:       "weka.core.TechnicalInformation",
200:       "weka.core.UnsupportedAttributeTypeException",
201:       "weka.classifiers.Sourcable",
202:       "weka.core.RevisionHandler",
203:       "weka.classifiers.evaluation.output.prediction.PlainText",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.core.xml.XMLSerialization",
206:       "weka.classifiers.xml.XMLClassifier",
207:       "weka.filters.Filter",
208:       "weka.classifiers.lazy.IBk",
209:       "weka.filters.supervised.attribute.Discretize"
210:     );
211:   } 
212: 
213:   private static void resetClasses() {
214:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding.class.getClassLoader()); 
215: 
216:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
217:       "weka.classifiers.AbstractClassifier",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
219:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
220:       "weka.core.Capabilities$Capability",
221:       "weka.core.tokenizers.Tokenizer",
222:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
223:       "weka.core.tokenizers.WordTokenizer",
224:       "weka.core.stemmers.NullStemmer",
225:       "weka.classifiers.RandomizableClassifier",
226:       "weka.core.Tag",
227:       "weka.classifiers.functions.SGDText",
228:       "weka.core.SelectedTag",
229:       "weka.core.AbstractInstance",
230:       "weka.core.SparseInstance",
231:       "weka.core.BinarySparseInstance",
232:       "weka.core.UnassignedDatasetException",
233:       "weka.core.Utils",
234:       "weka.classifiers.misc.SerializedClassifier",
235:       "weka.classifiers.Evaluation",
236:       "weka.core.Option",
237:       "weka.core.neighboursearch.NearestNeighbourSearch",
238:       "weka.core.neighboursearch.KDTree",
239:       "weka.core.NormalizableDistance",
240:       "weka.core.EuclideanDistance",
241:       "weka.core.Range",
242:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
243:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
244:       "weka.classifiers.bayes.NaiveBayes",
245:       "weka.core.neighboursearch.LinearNNSearch",
246:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
247:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
248:       "weka.core.SerializedObject",
249:       "weka.core.Capabilities",
250:       "org.pentaho.packageManagement.PackageManager",
251:       "org.pentaho.packageManagement.DefaultPackageManager",
252:       "weka.core.Version",
253:       "weka.core.Environment",
254:       "weka.core.WekaPackageManager",
255:       "weka.core.TestInstances",
256:       "weka.core.Attribute",
257:       "weka.core.ProtectedProperties",
258:       "weka.core.Instances",
259:       "weka.core.DenseInstance",
260:       "weka.classifiers.SingleClassifierEnhancer",
261:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
262:       "weka.classifiers.meta.CostSensitiveClassifier",
263:       "weka.classifiers.rules.ZeroR",
264:       "weka.classifiers.CostMatrix",
265:       "weka.core.RevisionUtils",
266:       "weka.attributeSelection.ASEvaluation",
267:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
268:       "weka.attributeSelection.PrincipalComponents",
269:       "weka.core.tokenizers.AlphabeticTokenizer",
270:       "weka.filters.Filter",
271:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
272:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
273:       "weka.estimators.Estimator",
274:       "weka.estimators.DiscreteEstimator",
275:       "weka.core.UnassignedClassException",
276:       "weka.classifiers.rules.OneR",
277:       "weka.core.tokenizers.NGramTokenizer",
278:       "weka.core.neighboursearch.CoverTree",
279:       "weka.classifiers.bayes.BayesNet",
280:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
281:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
282:       "weka.classifiers.bayes.net.search.local.K2",
283:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
284:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
285:       "weka.core.TechnicalInformation",
286:       "weka.core.TechnicalInformation$Type",
287:       "weka.core.TechnicalInformation$Field",
288:       "weka.attributeSelection.CorrelationAttributeEval",
289:       "weka.core.neighboursearch.BallTree",
290:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
291:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
292:       "weka.core.neighboursearch.balltrees.BallSplitter",
293:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
294:       "weka.core.stemmers.SnowballStemmer",
295:       "weka.core.stemmers.Stemming",
296:       "weka.filters.supervised.attribute.Discretize",
297:       "weka.core.stemmers.LovinsStemmer",
298:       "weka.core.FindWithCapabilities",
299:       "weka.core.SingleIndex",
300:       "weka.core.WekaException",
301:       "weka.core.UnsupportedAttributeTypeException",
302:       "weka.core.neighboursearch.balltrees.BallNode",
303:       "weka.core.stemmers.IteratedLovinsStemmer",
304:       "weka.classifiers.trees.m5.M5Base",
305:       "weka.classifiers.rules.M5Rules",
306:       "weka.core.converters.ArffLoader$ArffReader",
307:       "weka.classifiers.functions.supportVector.Kernel",
308:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
309:       "weka.classifiers.bayes.net.BIFReader",
310:       "weka.classifiers.misc.InputMappedClassifier",
311:       "weka.core.Javadoc",
312:       "weka.core.ClassDiscovery",
313:       "weka.core.ClassCache",
314:       "weka.core.AllJavadoc",
315:       "weka.core.WekaEnumeration",
316:       "weka.core.Attribute$1",
317:       "weka.classifiers.lazy.IBk",
318:       "weka.filters.SimpleFilter",
319:       "weka.filters.SimpleStreamFilter",
320:       "weka.filters.MultiFilter",
321:       "weka.filters.AllFilter",
322:       "weka.classifiers.meta.MultiClassClassifier",
323:       "weka.classifiers.functions.Logistic",
324:       "weka.classifiers.functions.GaussianProcesses",
325:       "weka.classifiers.functions.supportVector.CachedKernel",
326:       "weka.classifiers.functions.supportVector.PolyKernel",
327:       "weka.classifiers.functions.SGD",
328:       "weka.estimators.NormalEstimator",
329:       "weka.classifiers.bayes.NaiveBayesMultinomial",
330:       "weka.classifiers.trees.REPTree",
331:       "weka.core.Stopwords",
332:       "weka.classifiers.trees.LMT",
333:       "weka.classifiers.meta.ClassificationViaRegression",
334:       "weka.classifiers.trees.M5P",
335:       "weka.classifiers.functions.LinearRegression",
336:       "weka.classifiers.MultipleClassifiersCombiner",
337:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
338:       "weka.classifiers.meta.Vote",
339:       "weka.classifiers.functions.VotedPerceptron",
340:       "weka.attributeSelection.CfsSubsetEval",
341:       "weka.estimators.PoissonEstimator",
342:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
343:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
344:       "weka.classifiers.functions.SimpleLogistic",
345:       "weka.attributeSelection.AttributeSelection",
346:       "weka.core.Check",
347:       "weka.core.CheckGOE",
348:       "weka.classifiers.functions.supportVector.Puk",
349:       "weka.attributeSelection.GainRatioAttributeEval",
350:       "weka.core.TechnicalInformationHandlerJavadoc",
351:       "weka.classifiers.lazy.LWL",
352:       "weka.classifiers.trees.DecisionStump",
353:       "weka.classifiers.trees.J48",
354:       "weka.classifiers.trees.j48.ClassifierTree",
355:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
356:       "weka.classifiers.rules.PART",
357:       "weka.classifiers.rules.part.MakeDecList",
358:       "weka.classifiers.IteratedSingleClassifierEnhancer",
359:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
360:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
361:       "weka.classifiers.meta.RandomCommittee",
362:       "weka.classifiers.trees.RandomTree",
363:       "weka.core.CheckOptionHandler",
364:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
365:       "weka.attributeSelection.WrapperSubsetEval",
366:       "weka.core.ChebyshevDistance",
367:       "weka.classifiers.functions.SimpleLinearRegression",
368:       "weka.classifiers.functions.supportVector.StringKernel",
369:       "weka.classifiers.lazy.KStar",
370:       "weka.core.MinkowskiDistance",
371:       "weka.classifiers.meta.MultiScheme",
372:       "weka.core.GlobalInfoJavadoc",
373:       "weka.classifiers.functions.MultilayerPerceptron",
374:       "weka.core.FastVector",
375:       "weka.filters.unsupervised.attribute.NominalToBinary",
376:       "weka.classifiers.functions.neural.SigmoidUnit",
377:       "weka.classifiers.functions.neural.LinearUnit",
378:       "weka.classifiers.meta.FilteredClassifier",
379:       "weka.filters.supervised.attribute.AttributeSelection",
380:       "weka.attributeSelection.ASSearch",
381:       "weka.attributeSelection.GreedyStepwise",
382:       "weka.attributeSelection.BestFirst",
383:       "weka.core.OptionHandlerJavadoc",
384:       "weka.classifiers.trees.RandomForest",
385:       "weka.core.ListOptions",
386:       "weka.estimators.MahalanobisEstimator",
387:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
388:       "weka.classifiers.meta.Bagging",
389:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
390:       "weka.attributeSelection.ReliefFAttributeEval",
391:       "weka.classifiers.meta.AdditiveRegression",
392:       "weka.classifiers.functions.supportVector.RBFKernel",
393:       "weka.estimators.KernelEstimator",
394:       "weka.core.ManhattanDistance",
395:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
396:       "weka.classifiers.meta.AdaBoostM1",
397:       "weka.core.matrix.Matrix",
398:       "weka.classifiers.rules.JRip",
399:       "weka.classifiers.rules.DecisionTable",
400:       "weka.classifiers.functions.SMO",
401:       "weka.attributeSelection.OneRAttributeEval",
402:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
403:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
404:       "weka.classifiers.meta.Stacking",
405:       "weka.core.AttributeStats",
406:       "weka.classifiers.meta.CVParameterSelection",
407:       "weka.classifiers.bayes.NaiveBayesUpdateable",
408:       "weka.classifiers.functions.SMOreg",
409:       "weka.classifiers.functions.supportVector.RegOptimizer",
410:       "weka.classifiers.functions.supportVector.RegSMO",
411:       "weka.classifiers.functions.supportVector.RegSMOImproved",
412:       "weka.classifiers.meta.AttributeSelectedClassifier",
413:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
414:       "weka.attributeSelection.InfoGainAttributeEval",
415:       "weka.core.SerializationHelper",
416:       "weka.classifiers.meta.LogitBoost",
417:       "weka.core.neighboursearch.PerformanceStats"
418:     );
419:   }
420: }

[MASTER] 10:41:45.693 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
double[] doubleArray0 = new double[6];
doubleArray0[0] = 4.9E-324;
doubleArray0[1] = 0.0;
doubleArray0[2] = (-173.30379469724);
doubleArray0[3] = 0.0;
doubleArray0[4] = 1.0;
doubleArray0[5] = 0.0;
naiveBayesMultinomialText0.m_wordsPerClass = doubleArray0;
naiveBayesMultinomialText0.m_t = 0.0;
naiveBayesMultinomialText0.m_t = 3.0;
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());

naiveBayesMultinomialText0.setNormalizeDocLength(true);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.setStopwords((File) null);
naiveBayesMultinomialText0.useStopListTipText();
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText0.getNormalizeDocLength();
naiveBayesMultinomialText0.getNorm();
naiveBayesMultinomialText0.globalInfo();
assertTrue(naiveBayesMultinomialText0.getNormalizeDocLength());


[MASTER] 10:41:49.926 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 10:41:50.025 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1024/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 8341
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:43:12.535 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:43:12.543 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:43:12.544 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:43:13.299 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 10:43:13.969 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 10:43:13.970 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 10:43:15.978 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 10:43:16.059 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 10:43:16.060 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 10:43:16.061 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 10:43:16.061 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 10:43:16.061 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 10:43:16.062 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 10:43:16.063 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 10:43:16.066 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 10:43:16.191 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 10:43:16.204 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1024
* Starting evolution
[MASTER] 10:43:20.017 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 10:43:33.770 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.<init>(Lweka/core/Instances;)V: Line 386
[MASTER] 10:43:33.771 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.<init>(Lweka/core/Instances;)V: Line 387
[MASTER] 10:43:33.771 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.<init>(Lweka/core/Instances;Lweka/classifiers/CostMatrix;)V: Line 406
[MASTER] 10:43:33.771 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.<init>(Lweka/core/Instances;Lweka/classifiers/CostMatrix;)V: Line 407
[MASTER] 10:43:33.771 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.<init>(Lweka/core/Instances;Lweka/classifiers/CostMatrix;)V: Line 408
[MASTER] 10:43:33.771 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.<init>(Lweka/core/Instances;Lweka/classifiers/CostMatrix;)V: Line 410
[MASTER] 10:43:33.771 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.<init>(Lweka/core/Instances;Lweka/classifiers/CostMatrix;)V: Line 411
[MASTER] 10:43:33.771 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.<init>(Lweka/core/Instances;Lweka/classifiers/CostMatrix;)V: Line 412
[MASTER] 10:43:33.771 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.<init>(Lweka/core/Instances;Lweka/classifiers/CostMatrix;)V: Line 413
[MASTER] 10:43:33.771 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.<init>(Lweka/core/Instances;Lweka/classifiers/CostMatrix;)V: Line 417
[MASTER] 10:43:33.771 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.<init>(Lweka/core/Instances;Lweka/classifiers/CostMatrix;)V: Line 418
[MASTER] 10:43:33.771 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.<init>(Lweka/core/Instances;Lweka/classifiers/CostMatrix;)V: Line 426
[MASTER] 10:43:33.771 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.<init>(Lweka/core/Instances;Lweka/classifiers/CostMatrix;)V: Line 427
[MASTER] 10:43:33.771 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.<init>(Lweka/core/Instances;Lweka/classifiers/CostMatrix;)V: Line 428
[MASTER] 10:43:33.771 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.<init>(Lweka/core/Instances;Lweka/classifiers/CostMatrix;)V: Line 429
[MASTER] 10:43:33.775 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.setPriors(Lweka/core/Instances;)V: Line 3333
[MASTER] 10:43:33.775 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.setPriors(Lweka/core/Instances;)V: Line 3335
[MASTER] 10:43:33.775 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.setPriors(Lweka/core/Instances;)V: Line 3362
[MASTER] 10:43:33.775 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.setPriors(Lweka/core/Instances;)V: Line 3365
[MASTER] 10:43:33.775 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.setPriors(Lweka/core/Instances;)V: Line 3366
[MASTER] 10:43:33.775 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.setPriors(Lweka/core/Instances;)V: Line 3373
[MASTER] 10:43:33.775 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.setPriors(Lweka/core/Instances;)V: Line 3374
[MASTER] 10:43:33.775 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.setPriors(Lweka/core/Instances;)V: Line 3376
[MASTER] 10:43:33.778 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 9834: weka.classifiers.Evaluation.setPriors(Lweka/core/Instances;)V:3335 - ReplaceComparisonOperator != -> ==
[MASTER] 10:43:33.781 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.<init>(Lweka/core/Instances;)V
[MASTER] 10:43:33.783 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.<init>(Lweka/core/Instances;Lweka/classifiers/CostMatrix;)V: I55 Branch 1 IFEQ L410 - false in context: weka.classifiers.Evaluation:<init>(Lweka/core/Instances;Lweka/classifiers/CostMatrix;)V
[MASTER] 10:43:33.783 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.<init>(Lweka/core/Instances;Lweka/classifiers/CostMatrix;)V: I80 Branch 2 IF_ICMPGE L413 - true in context: weka.classifiers.Evaluation:<init>(Lweka/core/Instances;Lweka/classifiers/CostMatrix;)V
[MASTER] 10:43:33.783 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.<init>(Lweka/core/Instances;Lweka/classifiers/CostMatrix;)V: I104 Branch 3 IFNULL L418 - true in context: weka.classifiers.Evaluation:<init>(Lweka/core/Instances;Lweka/classifiers/CostMatrix;)V
[MASTER] 10:43:33.784 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.<init>(Lweka/core/Instances;)V: root-Branch in context: weka.classifiers.Evaluation:<init>(Lweka/core/Instances;)V
* Search finished after 127s and 32 generations, 15654 statements, best individual has fitness: 17496.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 51%
* Total number of goals: 1378
* Number of covered goals: 708
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 37%
* Total number of goals: 809
* Number of covered goals: 297
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 34
* Number of covered goals: 34
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 54%
* Total number of goals: 424
* Number of covered goals: 231
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 15%
* Total number of goals: 278
* Number of covered goals: 43
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 82%
* Total number of goals: 103
* Number of covered goals: 84
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 81%
* Total number of goals: 103
* Number of covered goals: 83
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 35%
* Total number of goals: 809
* Number of covered goals: 280
* Generated 105 tests with total length 1039
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 6%
* Compiling and checking tests
[MASTER] 10:50:09.578 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 10:50:09.734 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 10:50:09.904 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 10:50:09.904 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1024/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 8338
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 8341
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:51:14.259 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:51:14.272 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:51:14.291 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:51:14.555 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 10:51:14.579 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 10:51:14.595 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1024
* Starting evolution
[MASTER] 10:51:20.673 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:51:20.717 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:51:20.718 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:51:25.509 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 10:51:26.650 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 10:51:26.652 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1024
* Starting evolution
[MASTER] 10:51:59.683 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 122s and 153 generations, 82888 statements, best individual has fitness: 7936.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 45%
* Total number of goals: 370
* Number of covered goals: 166
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 42%
* Total number of goals: 713
* Number of covered goals: 298
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 40%
* Total number of goals: 72
* Number of covered goals: 29
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 45
* Number of covered goals: 43
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Generated 63 tests with total length 359
* Resulting test suite's coverage: 43% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 123s and 128 generations, 56451 statements, best individual has fitness: 13456.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 33%
* Total number of goals: 705
* Number of covered goals: 231
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 24%
* Total number of goals: 416
* Number of covered goals: 98
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 50%
* Total number of goals: 993
* Number of covered goals: 495
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 27%
* Total number of goals: 93
* Number of covered goals: 25
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 24%
* Total number of goals: 416
* Number of covered goals: 98
* Generated 65 tests with total length 515
* Resulting test suite's coverage: 39% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
* Resulting test suite's mutation score: 14%
* Compiling and checking tests
[MASTER] 10:54:42.401 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 10:54:43.357 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1024/107_weka/evosuite-tests
* Done!

* Computation finished
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1024/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 8339
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:59:22.330 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:59:22.381 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:59:22.382 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:59:22.467 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1024
* Starting evolution
* Search finished after 131s and 14 generations, 14105 statements, best individual has fitness: 4168.0
[MASTER] 11:01:38.507 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 14 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 94%
* Total number of goals: 647
* Number of covered goals: 606
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 87%
* Total number of goals: 441
* Number of covered goals: 385
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 84%
* Total number of goals: 678
* Number of covered goals: 569
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 31%
* Total number of goals: 244
* Number of covered goals: 76
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 83%
* Total number of goals: 124
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 82%
* Total number of goals: 124
* Number of covered goals: 102
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 78%
* Total number of goals: 441
* Number of covered goals: 344
* Generated 127 tests with total length 2484
* Resulting test suite's coverage: 81% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 11:07:24.288 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.68945% of time used, but only 45/127 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 12%
* Compiling and checking tests
* Permissions denied during test execution: 
[MASTER] 11:08:50.333 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1024/107_weka/evosuite-tests
* Done!

* Computation finished
