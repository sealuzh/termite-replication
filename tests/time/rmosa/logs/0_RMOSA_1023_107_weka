* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11929
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1023
* Starting evolution
* Search finished after 126s and 66 generations, 46768 statements, best individual has fitness: 2864.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 217
* Number of covered goals: 187
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 65%
* Total number of goals: 428
* Number of covered goals: 280
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 238
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 65%
* Total number of goals: 428
* Number of covered goals: 280
* Generated 78 tests with total length 319
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 77%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11924
* Connecting to master process on port 11929
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 09:53:45.335 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:53:45.346 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:53:45.347 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 09:53:45.485 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 09:53:45.501 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 09:53:45.520 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1023
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 09:54:07.190 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:54:07.197 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:54:07.199 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 09:54:07.926 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 09:54:08.797 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 09:54:08.798 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 09:54:11.336 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 09:54:11.373 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 09:54:11.373 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 09:54:11.377 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 09:54:11.377 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 09:54:11.378 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 09:54:11.378 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 09:54:11.379 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 09:54:11.380 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 09:54:11.468 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 09:54:11.489 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1023
* Starting evolution
[MASTER] 09:54:28.380 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
* Search finished after 122s and 155 generations, 52102 statements, best individual has fitness: 9120.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 41%
* Total number of goals: 370
* Number of covered goals: 152
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 27%
* Total number of goals: 242
* Number of covered goals: 66
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 27%
* Total number of goals: 713
* Number of covered goals: 193
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 42%
* Total number of goals: 72
* Number of covered goals: 30
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 45
* Number of covered goals: 44
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 27%
* Total number of goals: 242
* Number of covered goals: 66
* Generated 56 tests with total length 274
* Resulting test suite's coverage: 35% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 131s and 54 generations, 31968 statements, best individual has fitness: 16440.0
[MASTER] 09:56:27.380 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 13 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 54%
* Total number of goals: 1378
* Number of covered goals: 749
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 39%
* Total number of goals: 809
* Number of covered goals: 315
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 47
* Number of covered goals: 47
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 58%
* Total number of goals: 424
* Number of covered goals: 246
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 20%
* Total number of goals: 278
* Number of covered goals: 56
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 94%
* Total number of goals: 103
* Number of covered goals: 97
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 92%
* Total number of goals: 103
* Number of covered goals: 95
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 38%
* Total number of goals: 809
* Number of covered goals: 304
* Generated 120 tests with total length 1563
* Resulting test suite's coverage: 48% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 10%
* Compiling and checking tests
[MASTER] 09:57:04.788 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 09:57:05.206 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 6%
* Compiling and checking tests
[MASTER] 10:01:32.103 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 10:01:32.386 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 10:01:32.614 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 10:01:32.614 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11924
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:02:39.017 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 10:02:39.021 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 10:02:39.053 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 10:02:39.135 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:02:39.144 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:02:39.172 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1023
* Starting evolution
[MASTER] 10:02:47.074 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 10:02:47.075 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 10:02:48.739 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V: Line 525
[MASTER] 10:02:48.770 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V: I3 Branch 47 IFNULL L524 - false
[MASTER] 10:02:48.794 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 240: weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V:525 - ReplaceVariable value -> m_stemmer
[MASTER] 10:02:48.795 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V
[MASTER] 10:02:48.796 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V
[MASTER] 10:02:48.797 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V: I3 Branch 47 IFNULL L524 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStemmer(Lweka/core/stemmers/Stemmer;)V
[MASTER] 10:02:56.360 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 123s and 134 generations, 65965 statements, best individual has fitness: 2672.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 77%
* Total number of goals: 338
* Number of covered goals: 259
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 65%
* Total number of goals: 194
* Number of covered goals: 127
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 86%
* Total number of goals: 476
* Number of covered goals: 411
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 112
* Number of covered goals: 56
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 65%
* Total number of goals: 194
* Number of covered goals: 127
* Generated 69 tests with total length 697
* Resulting test suite's coverage: 77% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 47%
* Compiling and checking tests
[MASTER] 10:08:21.192 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_27_1575626901124/weka/classifiers/bayes/NaiveBayesMultinomialText_27_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_27_1575626901124/weka/classifiers/bayes/NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding.java]]
[MASTER] 10:08:21.195 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:08:21.195 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:08:21.210 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 10:08:21.210 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 10:08:21.211 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_27_1575626901124/weka/classifiers/bayes/NaiveBayesMultinomialText_27_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 10:08:21 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.Random;
15: import org.evosuite.runtime.testdata.EvoSuiteFile;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.AbstractClassifier;
19: import weka.classifiers.bayes.NaiveBayesMultinomialText;
20: import weka.core.BinarySparseInstance;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class NaiveBayesMultinomialText_27_tmp__ESTest extends NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding {
24: 
25:   /**
26:   //Test case number: 0
27:   /*Coverage entropy=1.847832822658352
28:   */
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       naiveBayesMultinomialText0.setDebug(false);
33:       AbstractClassifier.makeCopies(naiveBayesMultinomialText0, 288);
34:       naiveBayesMultinomialText0.setLNorm(0.693147181);
35:       naiveBayesMultinomialText0.getRevision();
36:       naiveBayesMultinomialText0.useStopListTipText();
37:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
38:       FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
39:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
40:       FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
41:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(288, (int[]) null, 288);
42:       try { 
43:         naiveBayesMultinomialText0.distributionForInstance(binarySparseInstance0);
44:         fail("Expecting exception: RuntimeException");
45:       
46:       } catch(RuntimeException e) {
47:          //
48:          // DenseInstance doesn't have access to a dataset!
49:          //
50:          verifyException("weka.core.AbstractInstance", e);
51:       }
52:   }
53: }
RegularFileObject[/tmp/EvoSuite_27_1575626901124/weka/classifiers/bayes/NaiveBayesMultinomialText_27_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 10:08:21 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.CostMatrix",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.classifiers.bayes.NaiveBayes",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.TechnicalInformation$Type",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.BinarySparseInstance",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.classifiers.functions.supportVector.CachedKernel",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.core.neighboursearch.balltrees.BallNode",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.matrix.Matrix",
134:       "weka.classifiers.ConditionalDensityEstimator",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.AbstractInstance",
137:       "weka.core.scripting.JythonObject",
138:       "weka.core.SelectedTag",
139:       "org.pentaho.packageManagement.DefaultPackage",
140:       "weka.estimators.DiscreteEstimator",
141:       "weka.classifiers.bayes.NaiveBayesUpdateable",
142:       "weka.classifiers.bayes.BayesNet",
143:       "weka.classifiers.misc.InputMappedClassifier",
144:       "weka.core.Version",
145:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
146:       "weka.core.Tag",
147:       "weka.classifiers.AbstractClassifier",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.core.Range",
151:       "weka.core.scripting.JythonSerializableObject",
152:       "weka.classifiers.Classifier",
153:       "weka.core.Capabilities$Capability",
154:       "weka.core.SparseInstance",
155:       "org.pentaho.packageManagement.PackageManager",
156:       "weka.estimators.PoissonEstimator",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
159:       "weka.core.stemmers.SnowballStemmer",
160:       "weka.core.stemmers.LovinsStemmer",
161:       "weka.classifiers.Evaluation",
162:       "weka.classifiers.functions.supportVector.Kernel",
163:       "weka.core.WekaPackageManager",
164:       "weka.filters.SupervisedFilter",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
167:       "weka.core.neighboursearch.LinearNNSearch",
168:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
169:       "weka.classifiers.meta.CostSensitiveClassifier",
170:       "weka.core.Option",
171:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
172:       "weka.core.neighboursearch.PerformanceStats",
173:       "weka.filters.Sourcable",
174:       "weka.core.Attribute",
175:       "weka.core.Stopwords",
176:       "weka.core.FastVector",
177:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
178:       "weka.core.UnassignedDatasetException",
179:       "weka.core.tokenizers.NGramTokenizer",
180:       "weka.classifiers.RandomizableClassifier",
181:       "weka.classifiers.SingleClassifierEnhancer",
182:       "weka.core.RevisionUtils",
183:       "weka.core.Instance",
184:       "weka.classifiers.functions.supportVector.PolyKernel",
185:       "weka.estimators.Estimator",
186:       "weka.core.ProtectedProperties",
187:       "weka.classifiers.IntervalEstimator",
188:       "weka.classifiers.bayes.net.ADNode",
189:       "weka.core.AttributeStats",
190:       "weka.core.WeightedInstancesHandler",
191:       "weka.core.neighboursearch.NearestNeighbourSearch",
192:       "weka.classifiers.trees.DecisionStump",
193:       "weka.classifiers.functions.GaussianProcesses",
194:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.core.Randomizable",
197:       "weka.classifiers.functions.SGD",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.filters.unsupervised.attribute.Normalize",
201:       "weka.core.UnassignedClassException",
202:       "weka.classifiers.bayes.net.BIFReader",
203:       "weka.classifiers.bayes.net.ParentSet",
204:       "weka.classifiers.rules.ZeroR",
205:       "weka.core.stemmers.IteratedLovinsStemmer",
206:       "weka.filters.unsupervised.attribute.Standardize",
207:       "weka.core.stemmers.Stemming",
208:       "weka.core.TechnicalInformation",
209:       "weka.core.UnsupportedAttributeTypeException",
210:       "weka.classifiers.Sourcable",
211:       "weka.core.RevisionHandler",
212:       "weka.classifiers.evaluation.output.prediction.PlainText",
213:       "weka.core.xml.XMLSerialization",
214:       "weka.classifiers.xml.XMLClassifier",
215:       "weka.filters.Filter",
216:       "weka.classifiers.lazy.IBk",
217:       "weka.filters.supervised.attribute.Discretize"
218:     );
219:   } 
220: 
221:   private static void resetClasses() {
222:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding.class.getClassLoader()); 
223: 
224:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
225:       "weka.classifiers.AbstractClassifier",
226:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
227:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
228:       "weka.core.Capabilities$Capability",
229:       "weka.core.tokenizers.Tokenizer",
230:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
231:       "weka.core.tokenizers.WordTokenizer",
232:       "weka.core.stemmers.NullStemmer",
233:       "weka.core.Utils",
234:       "weka.core.AbstractInstance",
235:       "weka.core.SparseInstance",
236:       "weka.classifiers.Evaluation",
237:       "weka.core.Option",
238:       "weka.core.UnassignedDatasetException",
239:       "weka.core.stemmers.SnowballStemmer",
240:       "weka.core.BinarySparseInstance",
241:       "weka.core.SerializedObject",
242:       "weka.classifiers.RandomizableClassifier",
243:       "weka.core.Tag",
244:       "weka.classifiers.functions.SGDText",
245:       "weka.core.FindWithCapabilities",
246:       "weka.core.Capabilities",
247:       "org.pentaho.packageManagement.PackageManager",
248:       "org.pentaho.packageManagement.DefaultPackageManager",
249:       "weka.core.Version",
250:       "weka.core.Environment",
251:       "weka.core.WekaPackageManager",
252:       "weka.core.SingleIndex",
253:       "weka.classifiers.SingleClassifierEnhancer",
254:       "weka.classifiers.IteratedSingleClassifierEnhancer",
255:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
256:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
257:       "weka.classifiers.meta.Bagging",
258:       "weka.classifiers.rules.ZeroR",
259:       "weka.classifiers.trees.REPTree",
260:       "weka.core.Attribute",
261:       "weka.core.ProtectedProperties",
262:       "weka.core.RevisionUtils",
263:       "weka.classifiers.bayes.BayesNet",
264:       "weka.classifiers.bayes.net.BIFReader",
265:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
266:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
267:       "weka.classifiers.bayes.net.search.local.K2",
268:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
269:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
270:       "weka.classifiers.bayes.NaiveBayes",
271:       "weka.core.stemmers.LovinsStemmer",
272:       "weka.core.stemmers.IteratedLovinsStemmer",
273:       "weka.core.TechnicalInformation",
274:       "weka.core.TechnicalInformation$Type",
275:       "weka.core.TechnicalInformation$Field",
276:       "weka.core.tokenizers.NGramTokenizer",
277:       "weka.classifiers.misc.InputMappedClassifier",
278:       "weka.core.DenseInstance",
279:       "weka.classifiers.functions.supportVector.Kernel",
280:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
281:       "weka.filters.Filter",
282:       "weka.filters.supervised.attribute.Discretize",
283:       "weka.core.Range",
284:       "weka.classifiers.lazy.IBk",
285:       "weka.core.neighboursearch.NearestNeighbourSearch",
286:       "weka.core.neighboursearch.LinearNNSearch",
287:       "weka.core.NormalizableDistance",
288:       "weka.core.EuclideanDistance",
289:       "weka.core.TestInstances",
290:       "weka.attributeSelection.ASEvaluation",
291:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
292:       "weka.attributeSelection.PrincipalComponents",
293:       "weka.core.Instances",
294:       "weka.core.converters.ArffLoader$ArffReader",
295:       "weka.core.neighboursearch.CoverTree",
296:       "weka.core.Stopwords",
297:       "weka.core.neighboursearch.balltrees.BallNode",
298:       "weka.classifiers.misc.SerializedClassifier",
299:       "weka.core.neighboursearch.BallTree",
300:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
301:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
302:       "weka.core.neighboursearch.balltrees.BallSplitter",
303:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
304:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
305:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
306:       "weka.core.neighboursearch.KDTree",
307:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
308:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
309:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
310:       "weka.classifiers.meta.CostSensitiveClassifier",
311:       "weka.classifiers.CostMatrix",
312:       "weka.core.tokenizers.AlphabeticTokenizer",
313:       "weka.classifiers.rules.DecisionTable",
314:       "weka.attributeSelection.ASSearch",
315:       "weka.attributeSelection.BestFirst",
316:       "weka.classifiers.meta.MultiClassClassifier",
317:       "weka.classifiers.functions.Logistic",
318:       "weka.core.stemmers.Stemming",
319:       "weka.core.neighboursearch.PerformanceStats",
320:       "weka.classifiers.trees.RandomTree",
321:       "weka.core.WekaEnumeration",
322:       "weka.core.Attribute$1",
323:       "weka.classifiers.bayes.NaiveBayesUpdateable",
324:       "weka.classifiers.functions.GaussianProcesses",
325:       "weka.classifiers.functions.supportVector.CachedKernel",
326:       "weka.classifiers.functions.supportVector.PolyKernel",
327:       "weka.attributeSelection.InfoGainAttributeEval",
328:       "weka.core.SelectedTag",
329:       "weka.estimators.Estimator",
330:       "weka.estimators.PoissonEstimator",
331:       "weka.core.UnassignedClassException",
332:       "weka.classifiers.trees.LMT",
333:       "weka.classifiers.functions.SimpleLinearRegression",
334:       "weka.core.WekaException",
335:       "weka.core.UnsupportedAttributeTypeException",
336:       "weka.classifiers.trees.DecisionStump",
337:       "weka.classifiers.bayes.NaiveBayesMultinomial",
338:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
339:       "weka.attributeSelection.CorrelationAttributeEval",
340:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
341:       "weka.classifiers.meta.LogitBoost",
342:       "weka.classifiers.meta.RegressionByDiscretization",
343:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
344:       "weka.filters.unsupervised.attribute.Discretize",
345:       "weka.classifiers.trees.J48",
346:       "weka.classifiers.trees.j48.ClassifierTree",
347:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
348:       "weka.attributeSelection.GainRatioAttributeEval",
349:       "weka.classifiers.meta.FilteredClassifier",
350:       "weka.filters.supervised.attribute.AttributeSelection",
351:       "weka.attributeSelection.AttributeSelection",
352:       "weka.attributeSelection.CfsSubsetEval",
353:       "weka.attributeSelection.GreedyStepwise",
354:       "weka.core.matrix.Matrix",
355:       "weka.estimators.NormalEstimator",
356:       "weka.core.ClassDiscovery",
357:       "weka.estimators.DiscreteEstimator",
358:       "weka.classifiers.functions.MultilayerPerceptron",
359:       "weka.core.FastVector",
360:       "weka.filters.unsupervised.attribute.NominalToBinary",
361:       "weka.classifiers.functions.neural.SigmoidUnit",
362:       "weka.classifiers.functions.neural.LinearUnit",
363:       "weka.classifiers.meta.ClassificationViaRegression",
364:       "weka.classifiers.trees.m5.M5Base",
365:       "weka.classifiers.trees.M5P",
366:       "weka.classifiers.functions.LinearRegression",
367:       "weka.classifiers.MultipleClassifiersCombiner",
368:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
369:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
370:       "weka.classifiers.meta.Stacking",
371:       "weka.filters.SimpleFilter",
372:       "weka.filters.SimpleStreamFilter",
373:       "weka.filters.MultiFilter",
374:       "weka.filters.AllFilter",
375:       "weka.attributeSelection.OneRAttributeEval",
376:       "weka.attributeSelection.ReliefFAttributeEval",
377:       "weka.classifiers.meta.RandomCommittee",
378:       "weka.classifiers.rules.OneR",
379:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
380:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
381:       "weka.classifiers.meta.Vote",
382:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
383:       "weka.classifiers.rules.JRip",
384:       "weka.classifiers.meta.AdditiveRegression",
385:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
386:       "weka.classifiers.meta.CVParameterSelection",
387:       "weka.estimators.MahalanobisEstimator",
388:       "weka.classifiers.functions.SMO",
389:       "weka.classifiers.functions.SGD",
390:       "weka.classifiers.functions.SimpleLogistic",
391:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
392:       "weka.estimators.KernelEstimator",
393:       "weka.classifiers.functions.supportVector.Puk",
394:       "weka.core.SerializationHelper",
395:       "weka.classifiers.functions.SMOreg",
396:       "weka.classifiers.functions.supportVector.RegOptimizer",
397:       "weka.classifiers.functions.supportVector.RegSMO",
398:       "weka.classifiers.functions.supportVector.RegSMOImproved",
399:       "weka.classifiers.meta.AdaBoostM1",
400:       "weka.classifiers.functions.supportVector.StringKernel",
401:       "weka.core.AttributeStats",
402:       "weka.classifiers.trees.RandomForest",
403:       "weka.experiment.Stats",
404:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
405:       "weka.classifiers.lazy.LWL",
406:       "weka.attributeSelection.WrapperSubsetEval",
407:       "weka.core.ListOptions",
408:       "weka.classifiers.rules.PART",
409:       "weka.classifiers.rules.part.MakeDecList",
410:       "weka.core.neighboursearch.balltrees.BottomUpConstructor"
411:     );
412:   }
413: }

[MASTER] 10:08:21.212 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setDebug(false);
AbstractClassifier.makeCopies(naiveBayesMultinomialText0, 288);
naiveBayesMultinomialText0.setLNorm(0.693147181);
naiveBayesMultinomialText0.getRevision();
naiveBayesMultinomialText0.useStopListTipText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(288, (int[]) null, 288);
naiveBayesMultinomialText0.distributionForInstance(binarySparseInstance0);

[MASTER] 10:08:38.210 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 10:08:38.211 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
double[] doubleArray0 = new double[7];
doubleArray0[0] = (-2.0);
doubleArray0[1] = (-2.0);
doubleArray0[2] = (-2.0);
doubleArray0[3] = (-2.0);
doubleArray0[4] = (-2.0);
doubleArray0[5] = (-2.0);
FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
doubleArray0[6] = (-2.0);
naiveBayesMultinomialText0.m_wordsPerClass = doubleArray0;
naiveBayesMultinomialText0.m_leplace = (-2.0);
naiveBayesMultinomialText0.toString();
SparseInstance sparseInstance0 = new SparseInstance(1968526677);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11930
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:09:34.386 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:09:34.410 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:09:34.411 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:09:37.485 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 10:09:38.141 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 10:09:38.157 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1023
* Starting evolution
[MASTER] 10:09:42.018 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.<init>(Lweka/classifiers/rules/JRip;)V
* Search finished after 124s and 112 generations, 64376 statements, best individual has fitness: 13024.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 34%
* Total number of goals: 705
* Number of covered goals: 238
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 24%
* Total number of goals: 416
* Number of covered goals: 99
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 53%
* Total number of goals: 993
* Number of covered goals: 525
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 28%
* Total number of goals: 93
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 96%
* Total number of goals: 72
* Number of covered goals: 69
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 72
* Number of covered goals: 69
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 24%
* Total number of goals: 416
* Number of covered goals: 99
* Generated 60 tests with total length 590
* Resulting test suite's coverage: 41% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
[MASTER] 10:12:43.220 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 10:12:44.066 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11929
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:20:47.336 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:20:47.350 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:20:47.350 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:20:47.416 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1023
* Starting evolution
* Search finished after 137s and 22 generations, 20600 statements, best individual has fitness: 3384.0
[MASTER] 10:23:10.183 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 20 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 94%
* Total number of goals: 647
* Number of covered goals: 605
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 89%
* Total number of goals: 441
* Number of covered goals: 394
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 86%
* Total number of goals: 678
* Number of covered goals: 583
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 39%
* Total number of goals: 244
* Number of covered goals: 94
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 94%
* Total number of goals: 124
* Number of covered goals: 117
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 94%
* Total number of goals: 124
* Number of covered goals: 116
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 84%
* Total number of goals: 441
* Number of covered goals: 370
* Generated 156 tests with total length 2569
* Resulting test suite's coverage: 84% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 10:28:58.318 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.7032708333333333% of time used, but only 62/156 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11925
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:31:01.425 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:31:01.431 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:31:01.446 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:31:01.457 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1023
* Starting evolution
[MASTER] 10:31:07.075 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 123s and 63 generations, 44629 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 18 tests with total length 159
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
