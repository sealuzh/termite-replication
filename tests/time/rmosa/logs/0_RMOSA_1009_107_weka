* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7355
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1009
* Starting evolution
* Search finished after 125s and 63 generations, 49335 statements, best individual has fitness: 2960.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 217
* Number of covered goals: 188
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 64%
* Total number of goals: 428
* Number of covered goals: 275
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 260
* Number of covered goals: 236
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 64%
* Total number of goals: 428
* Number of covered goals: 274
* Generated 75 tests with total length 295
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 74%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1009/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7357
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:09:11.143 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:09:11.148 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:09:11.151 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 23:09:11.828 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 23:09:12.823 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 23:09:12.834 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 23:09:15.346 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 23:09:15.390 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 23:09:15.394 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 23:09:15.394 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 23:09:15.395 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 23:09:15.395 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 23:09:15.395 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 23:09:15.396 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 23:09:15.397 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 23:09:15.510 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 23:09:15.561 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1009
* Starting evolution
[MASTER] 23:09:20.306 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 23:09:20.433 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 23:10:57.289 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 132s and 48 generations, 30467 statements, best individual has fitness: 15880.0
[MASTER] 23:11:33.288 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 15 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 56%
* Total number of goals: 1378
* Number of covered goals: 776
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 42%
* Total number of goals: 809
* Number of covered goals: 338
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 52
* Number of covered goals: 52
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 59%
* Total number of goals: 424
* Number of covered goals: 250
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 19%
* Total number of goals: 278
* Number of covered goals: 54
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 96%
* Total number of goals: 103
* Number of covered goals: 99
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 103
* Number of covered goals: 99
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 40%
* Total number of goals: 809
* Number of covered goals: 324
* Generated 126 tests with total length 1534
* Resulting test suite's coverage: 50% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
[MASTER] 23:16:33.463 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 23:16:33.659 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 23:16:33.863 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 23:16:33.863 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1009/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7354
* Connecting to master process on port 7355
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:17:39.027 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:17:39.047 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:17:39.049 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 23:17:39.243 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 23:17:39.263 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 23:17:39.273 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1009
* Starting evolution
[MASTER] 23:17:41.911 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 23:17:41.912 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 23:17:41.926 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 23:17:42.040 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:17:42.071 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:17:42.074 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1009
* Starting evolution
[MASTER] 23:17:55.718 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getStemmer()Lweka/core/stemmers/Stemmer;: Line 536
[MASTER] 23:17:55.718 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;: Line 564
[MASTER] 23:17:55.719 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;: Line 574
[MASTER] 23:17:55.719 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z: Line 605
[MASTER] 23:17:55.719 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.lowercaseTokensTipText()Ljava/lang/String;: Line 615
[MASTER] 23:17:55.719 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z: Line 635
[MASTER] 23:17:55.719 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I: Line 666
[MASTER] 23:17:55.719 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D: Line 704
[MASTER] 23:17:55.719 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getNormalizeDocLength()Z: Line 733
[MASTER] 23:17:55.719 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D: Line 752
[MASTER] 23:17:55.719 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D: Line 780
[MASTER] 23:17:55.719 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: Line 817
[MASTER] 23:17:55.719 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: Line 828
[MASTER] 23:17:55.719 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: Line 829
[MASTER] 23:17:55.719 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: Line 831
[MASTER] 23:17:55.719 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: Line 832
[MASTER] 23:17:55.719 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: Line 834
[MASTER] 23:17:55.719 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getStopwords()Ljava/io/File;: Line 843
[MASTER] 23:17:55.728 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1034
[MASTER] 23:17:55.728 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1036
[MASTER] 23:17:55.729 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1039
[MASTER] 23:17:55.729 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1040
[MASTER] 23:17:55.729 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1042
[MASTER] 23:17:55.729 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1045
[MASTER] 23:17:55.729 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1046
[MASTER] 23:17:55.729 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1047
[MASTER] 23:17:55.729 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1050
[MASTER] 23:17:55.729 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1053
[MASTER] 23:17:55.729 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1057
[MASTER] 23:17:55.729 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1058
[MASTER] 23:17:55.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1059
[MASTER] 23:17:55.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1060
[MASTER] 23:17:55.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1062
[MASTER] 23:17:55.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1064
[MASTER] 23:17:55.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1065
[MASTER] 23:17:55.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1066
[MASTER] 23:17:55.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1067
[MASTER] 23:17:55.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1071
[MASTER] 23:17:55.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1074
[MASTER] 23:17:55.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: Line 1084
[MASTER] 23:17:55.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: Line 1085
[MASTER] 23:17:55.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D: root-Branch
[MASTER] 23:17:55.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getStemmer()Lweka/core/stemmers/Stemmer;: root-Branch
[MASTER] 23:17:55.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z: root-Branch
[MASTER] 23:17:55.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D: root-Branch
[MASTER] 23:17:55.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D: root-Branch
[MASTER] 23:17:55.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I: root-Branch
[MASTER] 23:17:55.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getStopwords()Ljava/io/File;: root-Branch
[MASTER] 23:17:55.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.lowercaseTokensTipText()Ljava/lang/String;: root-Branch
[MASTER] 23:17:55.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: root-Branch
[MASTER] 23:17:55.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getNormalizeDocLength()Z: root-Branch
[MASTER] 23:17:55.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;: root-Branch
[MASTER] 23:17:55.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z: root-Branch
[MASTER] 23:17:55.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;: root-Branch
[MASTER] 23:17:55.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I3 Branch 48 IFNONNULL L828 - false
[MASTER] 23:17:55.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I34 Branch 49 IFEQ L832 - false
[MASTER] 23:17:55.745 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I37 Branch 50 IFEQ L832 - true
[MASTER] 23:17:55.745 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I10 Branch 62 IFEQ L1036 - true
[MASTER] 23:17:55.745 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I57 Branch 63 IFEQ L1042 - true
[MASTER] 23:17:55.745 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I104 Branch 64 IFEQ L1047 - true
[MASTER] 23:17:55.745 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I115 Branch 65 IFEQ L1050 - true
[MASTER] 23:17:55.745 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I127 Branch 66 IFNE L1053 - true
[MASTER] 23:17:55.745 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I158 Branch 67 IFEQ L1059 - false
[MASTER] 23:17:55.745 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I186 Branch 68 IFNULL L1064 - false
[MASTER] 23:17:55.745 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I205 Branch 69 IFEQ L1067 - true
[MASTER] 23:17:55.745 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: I4 Branch 70 IFNONNULL L1084 - false
[MASTER] 23:17:55.766 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 243: weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;:574 - ReplaceConstant - The tokenizing algorithm to use on the strings. -> 
[MASTER] 23:17:55.766 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 255: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z:605 - InsertUnaryOp Negation
[MASTER] 23:17:55.766 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 256: weka.classifiers.bayes.NaiveBayesMultinomialText.lowercaseTokensTipText()Ljava/lang/String;:615 - ReplaceConstant - Whether to convert all tokens to lowercase -> 
[MASTER] 23:17:55.766 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 267: weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z:635 - InsertUnaryOp Negation
[MASTER] 23:17:55.766 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 273: weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I:666 - InsertUnaryOp Negation
[MASTER] 23:17:55.766 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 274: weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I:666 - InsertUnaryOp +1
[MASTER] 23:17:55.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 275: weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I:666 - InsertUnaryOp -1
[MASTER] 23:17:55.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 283: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - ReplaceVariable m_minWordP -> m_norm
[MASTER] 23:17:55.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 284: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - ReplaceVariable m_minWordP -> m_t
[MASTER] 23:17:55.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 285: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - ReplaceVariable m_minWordP -> m_leplace
[MASTER] 23:17:55.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 286: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - ReplaceVariable m_minWordP -> m_lnorm
[MASTER] 23:17:55.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 287: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - InsertUnaryOp Negation
[MASTER] 23:17:55.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 299: weka.classifiers.bayes.NaiveBayesMultinomialText.getNormalizeDocLength()Z:733 - InsertUnaryOp Negation
[MASTER] 23:17:55.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 301: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - ReplaceVariable m_norm -> m_minWordP
[MASTER] 23:17:55.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 302: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - ReplaceVariable m_norm -> m_t
[MASTER] 23:17:55.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 304: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - ReplaceVariable m_norm -> m_lnorm
[MASTER] 23:17:55.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 305: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - InsertUnaryOp Negation
[MASTER] 23:17:55.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 313: weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D:780 - ReplaceVariable m_lnorm -> m_norm
[MASTER] 23:17:55.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 314: weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D:780 - ReplaceVariable m_lnorm -> m_minWordP
[MASTER] 23:17:55.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 315: weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D:780 - ReplaceVariable m_lnorm -> m_t
[MASTER] 23:17:55.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 316: weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D:780 - ReplaceVariable m_lnorm -> m_leplace
[MASTER] 23:17:55.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 317: weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D:780 - InsertUnaryOp Negation
[MASTER] 23:17:55.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 335: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z:817 - InsertUnaryOp Negation
[MASTER] 23:17:55.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 336: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:828 - ReplaceVariable value -> m_stopwordsFile
[MASTER] 23:17:55.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 337: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:828 - ReplaceComparisonOperator != null -> = null
[MASTER] 23:17:55.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 338: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:829 - ReplaceConstant - user.dir -> 
[MASTER] 23:17:55.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 339: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:831 - ReplaceVariable value -> m_stopwordsFile
[MASTER] 23:17:55.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 341: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:832 - ReplaceComparisonOperator == -> !=
[MASTER] 23:17:55.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 343: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:832 - ReplaceComparisonOperator == -> !=
[MASTER] 23:17:55.768 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 423: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1036 - ReplaceComparisonOperator == -> !=
[MASTER] 23:17:55.783 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 425: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1039 - ReplaceConstant - -P -> 
[MASTER] 23:17:55.784 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 426: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1040 - ReplaceConstant - -M -> 
[MASTER] 23:17:55.786 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 427: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1042 - ReplaceComparisonOperator == -> !=
[MASTER] 23:17:55.786 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 429: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1045 - ReplaceConstant - -norm -> 
[MASTER] 23:17:55.787 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 430: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1046 - ReplaceConstant - -lnorm -> 
[MASTER] 23:17:55.787 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 431: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1047 - ReplaceComparisonOperator == -> !=
[MASTER] 23:17:55.787 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 433: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1050 - ReplaceComparisonOperator == -> !=
[MASTER] 23:17:55.787 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 435: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:1084 - ReplaceComparisonOperator != null -> = null
[MASTER] 23:17:55.787 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 436: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:1085 - ReplaceConstant - NaiveBayesMultinomialText: No model built yet.
 -> 
[MASTER] 23:17:55.788 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 23:17:55.788 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.lowercaseTokensTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 23:17:55.789 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:NonEmptyArray
[MASTER] 23:17:55.789 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:NonEmptyString
[MASTER] 23:17:55.789 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;
[MASTER] 23:17:55.789 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.lowercaseTokensTipText()Ljava/lang/String;
[MASTER] 23:17:55.790 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V
[MASTER] 23:17:55.790 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;
[MASTER] 23:17:55.793 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;
[MASTER] 23:17:55.793 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;
[MASTER] 23:17:55.794 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.lowercaseTokensTipText()Ljava/lang/String;
[MASTER] 23:17:55.794 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V
[MASTER] 23:17:55.794 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;
[MASTER] 23:17:55.794 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;
[MASTER] 23:17:55.794 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: I4 Branch 70 IFNONNULL L1084 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:toString()Ljava/lang/String;
[MASTER] 23:17:55.794 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.lowercaseTokensTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:lowercaseTokensTipText()Ljava/lang/String;
[MASTER] 23:17:55.794 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I104 Branch 64 IFEQ L1047 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 23:17:55.794 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I10 Branch 62 IFEQ L1036 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 23:17:55.795 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I127 Branch 66 IFNE L1053 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 23:17:55.795 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I3 Branch 48 IFNONNULL L828 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStopwords(Ljava/io/File;)V
[MASTER] 23:17:55.795 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I57 Branch 63 IFEQ L1042 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 23:17:55.795 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:tokenizerTipText()Ljava/lang/String;
[MASTER] 23:17:55.795 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I34 Branch 49 IFEQ L832 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStopwords(Ljava/io/File;)V
[MASTER] 23:17:55.795 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I158 Branch 67 IFEQ L1059 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 23:17:55.795 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I186 Branch 68 IFNULL L1064 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 23:17:55.795 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I115 Branch 65 IFEQ L1050 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 23:17:55.795 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I205 Branch 69 IFEQ L1067 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 23:17:55.795 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I37 Branch 50 IFEQ L832 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStopwords(Ljava/io/File;)V
[MASTER] 23:17:58.991 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V
[MASTER] 23:17:58.991 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I
[MASTER] 23:17:58.992 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getNormalizeDocLength()Z
[MASTER] 23:17:58.992 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.reset()V
[MASTER] 23:17:58.992 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V
[MASTER] 23:17:58.992 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I
[MASTER] 23:17:58.992 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getNormalizeDocLength()Z
[MASTER] 23:17:58.992 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.reset()V
[MASTER] 23:18:15.648 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 23:18:15.648 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 23:18:54.135 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 122s and 156 generations, 43901 statements, best individual has fitness: 8072.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 44%
* Total number of goals: 370
* Number of covered goals: 163
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 32%
* Total number of goals: 242
* Number of covered goals: 78
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 41%
* Total number of goals: 713
* Number of covered goals: 291
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 39%
* Total number of goals: 72
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 32%
* Total number of goals: 242
* Number of covered goals: 78
* Generated 58 tests with total length 257
* Resulting test suite's coverage: 42% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 123s and 134 generations, 74363 statements, best individual has fitness: 1952.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 338
* Number of covered goals: 290
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 78%
* Total number of goals: 194
* Number of covered goals: 152
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 88%
* Total number of goals: 476
* Number of covered goals: 419
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 61
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 77%
* Total number of goals: 194
* Number of covered goals: 150
* Generated 81 tests with total length 847
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
[MASTER] 23:21:09.429 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 23:21:09.945 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1009/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 54%
* Compiling and checking tests
[MASTER] 23:24:25.349 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_8_1575588265300/weka/classifiers/bayes/NaiveBayesMultinomialText_8_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_8_1575588265300/weka/classifiers/bayes/NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding.java]]
[MASTER] 23:24:25.349 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:24:25.349 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:24:25.354 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 23:24:25.354 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 23:24:25.355 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_8_1575588265300/weka/classifiers/bayes/NaiveBayesMultinomialText_8_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 23:24:25 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.io.File;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.mock.java.io.MockFile;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_8_tmp__ESTest extends NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=1.1217186091313738
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
29:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
30:       String[] stringArray0 = new String[6];
31:       File file0 = MockFile.createTempFile("d2Dml`k7-`/f'wE3#", "");
32:       naiveBayesMultinomialText0.setStopwords(file0);
33:       assertTrue(naiveBayesMultinomialText0.getUseStopList());
34:   }
35: }
RegularFileObject[/tmp/EvoSuite_8_1575588265300/weka/classifiers/bayes/NaiveBayesMultinomialText_8_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 23:24:25 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.filters.SimpleFilter",
105:       "weka.filters.SimpleStreamFilter",
106:       "weka.estimators.IncrementalEstimator",
107:       "weka.estimators.Estimator$Builder",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.classifiers.functions.SGDText",
110:       "weka.core.RelationalLocator",
111:       "weka.core.Utils",
112:       "weka.core.CustomDisplayStringProvider",
113:       "weka.core.tokenizers.Tokenizer",
114:       "weka.core.NormalizableDistance",
115:       "weka.core.NoSupportForMissingValuesException",
116:       "weka.classifiers.UpdateableClassifier",
117:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
118:       "weka.core.MultiInstanceCapabilitiesHandler",
119:       "weka.core.Copyable",
120:       "weka.core.Capabilities",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
122:       "weka.core.BinarySparseInstance",
123:       "weka.core.AttributeLocator",
124:       "weka.core.SerializedObject",
125:       "weka.clusterers.UpdateableClusterer",
126:       "weka.core.Summarizable",
127:       "weka.core.AdditionalMeasureProducer",
128:       "org.pentaho.packageManagement.PackageManager$1",
129:       "weka.core.Drawable",
130:       "weka.core.matrix.Matrix",
131:       "weka.core.CapabilitiesHandler",
132:       "weka.classifiers.trees.REPTree",
133:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
134:       "weka.attributeSelection.ASEvaluation",
135:       "weka.core.AbstractInstance",
136:       "weka.core.scripting.JythonObject",
137:       "weka.core.SelectedTag",
138:       "org.pentaho.packageManagement.DefaultPackage",
139:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
140:       "weka.attributeSelection.CorrelationAttributeEval",
141:       "weka.core.Version",
142:       "weka.filters.AllFilter",
143:       "weka.core.Tag",
144:       "weka.classifiers.IteratedSingleClassifierEnhancer",
145:       "weka.core.neighboursearch.CoverTree",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.filters.StreamableFilter",
151:       "weka.core.Range",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
153:       "weka.core.PartitionGenerator",
154:       "weka.core.scripting.JythonSerializableObject",
155:       "weka.classifiers.Classifier",
156:       "weka.core.Capabilities$Capability",
157:       "weka.core.SparseInstance",
158:       "org.pentaho.packageManagement.PackageManager",
159:       "weka.estimators.PoissonEstimator",
160:       "weka.attributeSelection.AttributeTransformer",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.classifiers.misc.SerializedClassifier",
163:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
164:       "weka.attributeSelection.PrincipalComponents",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.classifiers.meta.Bagging",
167:       "weka.core.stemmers.LovinsStemmer",
168:       "weka.classifiers.Evaluation",
169:       "weka.classifiers.functions.supportVector.Kernel",
170:       "weka.core.WekaPackageManager",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.core.neighboursearch.LinearNNSearch",
173:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
174:       "weka.core.Option",
175:       "weka.core.neighboursearch.PerformanceStats",
176:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
177:       "weka.filters.Sourcable",
178:       "weka.core.Attribute",
179:       "weka.core.Stopwords",
180:       "weka.core.tokenizers.AlphabeticTokenizer",
181:       "weka.core.FastVector",
182:       "weka.core.UnassignedDatasetException",
183:       "weka.classifiers.RandomizableClassifier",
184:       "weka.classifiers.SingleClassifierEnhancer",
185:       "weka.core.RevisionUtils",
186:       "weka.core.Instance",
187:       "weka.core.ProtectedProperties",
188:       "weka.estimators.Estimator",
189:       "weka.core.StringLocator",
190:       "weka.core.AttributeStats",
191:       "weka.filters.MultiFilter",
192:       "weka.core.WeightedInstancesHandler",
193:       "weka.core.neighboursearch.NearestNeighbourSearch",
194:       "weka.classifiers.trees.DecisionStump",
195:       "weka.filters.unsupervised.attribute.Remove",
196:       "weka.core.Randomizable",
197:       "weka.core.EuclideanDistance",
198:       "weka.core.Instances",
199:       "weka.core.UnassignedClassException",
200:       "weka.classifiers.rules.ZeroR",
201:       "weka.core.stemmers.IteratedLovinsStemmer",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.core.neighboursearch.TreePerformanceStats",
210:       "weka.core.xml.XMLSerialization",
211:       "weka.classifiers.xml.XMLClassifier",
212:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
213:       "weka.filters.Filter",
214:       "weka.classifiers.lazy.IBk"
215:     );
216:   } 
217: 
218:   private static void resetClasses() {
219:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding.class.getClassLoader()); 
220: 
221:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
222:       "weka.classifiers.AbstractClassifier",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
225:       "weka.core.Capabilities$Capability",
226:       "weka.core.tokenizers.Tokenizer",
227:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
228:       "weka.core.tokenizers.WordTokenizer",
229:       "weka.core.stemmers.NullStemmer",
230:       "weka.core.Option",
231:       "weka.core.AbstractInstance",
232:       "weka.core.SparseInstance",
233:       "weka.core.BinarySparseInstance",
234:       "weka.core.Attribute",
235:       "weka.core.ProtectedProperties",
236:       "weka.core.UnassignedDatasetException",
237:       "weka.classifiers.Evaluation",
238:       "weka.core.Utils",
239:       "weka.core.RevisionUtils",
240:       "weka.classifiers.RandomizableClassifier",
241:       "weka.core.Tag",
242:       "weka.classifiers.functions.SGDText",
243:       "weka.core.Instances",
244:       "weka.core.Capabilities",
245:       "org.pentaho.packageManagement.PackageManager",
246:       "org.pentaho.packageManagement.DefaultPackageManager",
247:       "weka.core.Version",
248:       "weka.core.Environment",
249:       "weka.core.WekaPackageManager",
250:       "weka.core.Stopwords",
251:       "weka.classifiers.functions.SimpleLogistic",
252:       "weka.core.SerializedObject",
253:       "weka.core.DenseInstance",
254:       "weka.core.neighboursearch.NearestNeighbourSearch",
255:       "weka.core.neighboursearch.KDTree",
256:       "weka.core.NormalizableDistance",
257:       "weka.core.EuclideanDistance",
258:       "weka.core.Range",
259:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
260:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
261:       "weka.classifiers.bayes.BayesNet",
262:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
264:       "weka.classifiers.bayes.net.search.local.K2",
265:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
266:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
267:       "weka.attributeSelection.ASEvaluation",
268:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
269:       "weka.attributeSelection.PrincipalComponents",
270:       "weka.core.stemmers.SnowballStemmer",
271:       "weka.core.WekaEnumeration",
272:       "weka.core.Attribute$1",
273:       "weka.core.stemmers.LovinsStemmer",
274:       "weka.core.stemmers.IteratedLovinsStemmer",
275:       "weka.core.converters.ArffLoader$ArffReader",
276:       "weka.core.TestInstances",
277:       "weka.core.neighboursearch.BallTree",
278:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
279:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
280:       "weka.core.neighboursearch.balltrees.BallSplitter",
281:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
282:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
283:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
284:       "weka.core.FindWithCapabilities",
285:       "weka.core.SingleIndex",
286:       "weka.classifiers.functions.supportVector.Kernel",
287:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
288:       "weka.classifiers.bayes.NaiveBayes",
289:       "weka.core.ClassDiscovery",
290:       "weka.filters.Filter",
291:       "weka.filters.supervised.attribute.Discretize",
292:       "weka.classifiers.SingleClassifierEnhancer",
293:       "weka.classifiers.IteratedSingleClassifierEnhancer",
294:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
295:       "weka.classifiers.meta.AdaBoostM1",
296:       "weka.classifiers.rules.ZeroR",
297:       "weka.classifiers.trees.DecisionStump",
298:       "weka.classifiers.misc.InputMappedClassifier",
299:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
300:       "weka.classifiers.meta.CostSensitiveClassifier",
301:       "weka.classifiers.CostMatrix",
302:       "weka.core.neighboursearch.CoverTree",
303:       "weka.core.neighboursearch.LinearNNSearch",
304:       "weka.core.tokenizers.AlphabeticTokenizer",
305:       "weka.classifiers.meta.CVParameterSelection",
306:       "weka.core.FastVector",
307:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
308:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
309:       "weka.classifiers.meta.Bagging",
310:       "weka.classifiers.trees.REPTree",
311:       "weka.classifiers.trees.J48",
312:       "weka.classifiers.trees.j48.ClassifierTree",
313:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
314:       "weka.core.stemmers.Stemming",
315:       "weka.core.neighboursearch.balltrees.BallNode",
316:       "weka.classifiers.meta.AttributeSelectedClassifier",
317:       "weka.attributeSelection.CfsSubsetEval",
318:       "weka.attributeSelection.ASSearch",
319:       "weka.attributeSelection.BestFirst",
320:       "weka.core.TechnicalInformation",
321:       "weka.core.TechnicalInformation$Type",
322:       "weka.core.TechnicalInformation$Field",
323:       "weka.classifiers.rules.OneR",
324:       "weka.classifiers.bayes.NaiveBayesMultinomial",
325:       "weka.attributeSelection.ReliefFAttributeEval",
326:       "weka.core.ManhattanDistance",
327:       "weka.attributeSelection.WrapperSubsetEval",
328:       "weka.classifiers.bayes.NaiveBayesUpdateable",
329:       "weka.classifiers.functions.SMO",
330:       "weka.classifiers.functions.supportVector.CachedKernel",
331:       "weka.classifiers.functions.supportVector.PolyKernel",
332:       "weka.classifiers.rules.DecisionTable",
333:       "weka.classifiers.bayes.net.BIFReader",
334:       "weka.core.UnassignedClassException",
335:       "weka.core.tokenizers.NGramTokenizer",
336:       "weka.classifiers.functions.supportVector.Puk",
337:       "weka.classifiers.lazy.IBk",
338:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
339:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
340:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
341:       "weka.attributeSelection.GainRatioAttributeEval",
342:       "weka.classifiers.functions.SGD",
343:       "weka.core.matrix.Matrix",
344:       "weka.core.WekaException",
345:       "weka.attributeSelection.OneRAttributeEval",
346:       "weka.core.UnsupportedAttributeTypeException",
347:       "weka.estimators.Estimator",
348:       "weka.estimators.KernelEstimator",
349:       "weka.attributeSelection.InfoGainAttributeEval",
350:       "weka.classifiers.meta.RegressionByDiscretization",
351:       "weka.filters.unsupervised.attribute.Discretize",
352:       "weka.estimators.DiscreteEstimator",
353:       "weka.core.Javadoc",
354:       "weka.core.GlobalInfoJavadoc",
355:       "weka.classifiers.meta.MultiClassClassifier",
356:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
357:       "weka.classifiers.functions.Logistic",
358:       "weka.classifiers.rules.JRip",
359:       "weka.classifiers.lazy.LWL",
360:       "weka.classifiers.rules.PART",
361:       "weka.classifiers.rules.part.MakeDecList",
362:       "weka.classifiers.trees.REPTree$Tree",
363:       "weka.core.ContingencyTables",
364:       "weka.classifiers.MultipleClassifiersCombiner",
365:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
366:       "weka.classifiers.meta.MultiScheme",
367:       "weka.classifiers.misc.SerializedClassifier",
368:       "weka.classifiers.functions.MultilayerPerceptron",
369:       "weka.filters.unsupervised.attribute.NominalToBinary",
370:       "weka.classifiers.functions.neural.SigmoidUnit",
371:       "weka.classifiers.functions.neural.LinearUnit",
372:       "weka.estimators.PoissonEstimator",
373:       "weka.core.SelectedTag",
374:       "weka.classifiers.functions.SimpleLinearRegression",
375:       "weka.attributeSelection.AttributeSelection",
376:       "weka.core.TechnicalInformationHandlerJavadoc",
377:       "weka.classifiers.functions.VotedPerceptron",
378:       "weka.attributeSelection.CorrelationAttributeEval",
379:       "weka.estimators.NormalEstimator",
380:       "weka.filters.SimpleFilter",
381:       "weka.filters.SimpleStreamFilter",
382:       "weka.filters.MultiFilter",
383:       "weka.filters.AllFilter",
384:       "weka.classifiers.functions.supportVector.RBFKernel",
385:       "weka.classifiers.trees.LMT",
386:       "weka.classifiers.lazy.KStar",
387:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
388:       "weka.core.AttributeStats",
389:       "weka.classifiers.meta.LogitBoost",
390:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
391:       "weka.classifiers.trees.RandomTree",
392:       "weka.classifiers.meta.AdditiveRegression",
393:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
394:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
395:       "weka.classifiers.meta.Stacking",
396:       "weka.classifiers.functions.GaussianProcesses",
397:       "weka.classifiers.trees.m5.M5Base",
398:       "weka.classifiers.rules.M5Rules",
399:       "weka.classifiers.meta.RandomCommittee",
400:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
401:       "weka.classifiers.meta.Vote",
402:       "weka.classifiers.meta.FilteredClassifier",
403:       "weka.filters.supervised.attribute.AttributeSelection",
404:       "weka.attributeSelection.GreedyStepwise",
405:       "weka.experiment.Stats",
406:       "weka.classifiers.functions.LinearRegression",
407:       "weka.classifiers.meta.ClassificationViaRegression",
408:       "weka.classifiers.trees.M5P",
409:       "weka.classifiers.functions.supportVector.StringKernel"
410:     );
411:   }
412: }

[MASTER] 23:24:25.355 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
String[] stringArray0 = new String[6];
File file0 = MockFile.createTempFile("d2Dml`k7-`/f'wE3#", "");
naiveBayesMultinomialText0.setStopwords(file0);
assertTrue(naiveBayesMultinomialText0.getUseStopList());


[MASTER] 23:24:26.643 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_36_1575588266597/weka/classifiers/bayes/NaiveBayesMultinomialText_36_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_36_1575588266597/weka/classifiers/bayes/NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding.java]]
[MASTER] 23:24:26.643 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:24:26.643 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:24:26.644 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 23:24:26.644 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 23:24:26.645 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_36_1575588266597/weka/classifiers/bayes/NaiveBayesMultinomialText_36_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 23:24:26 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.mock.java.io.MockFile;
14: import org.evosuite.runtime.testdata.EvoSuiteFile;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_36_tmp__ESTest extends NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=2.678706058817701
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
30:       
31:       naiveBayesMultinomialText0.m_norm = 0.0;
32:       FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "primitive");
33:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
34:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
35:       naiveBayesMultinomialText0.minWordFrequencyTipText();
36:       String[] stringArray0 = new String[8];
37:       stringArray0[0] = "primitive";
38:       stringArray0[1] = "Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value";
39:       FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
40:       stringArray0[2] = "primitive";
41:       stringArray0[3] = "Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value";
42:       stringArray0[4] = "primitive";
43:       stringArray0[5] = "primitive";
44:       stringArray0[6] = "primitive";
45:       stringArray0[7] = "primitive";
46:       naiveBayesMultinomialText0.setOptions(stringArray0);
47:       naiveBayesMultinomialText0.getNorm();
48:       MockFile mockFile0 = new MockFile("primitive");
49:       naiveBayesMultinomialText0.setStopwords(mockFile0);
50:       assertEquals(0.0, naiveBayesMultinomialText0.getNorm(), 0.01);
51:   }
52: }
RegularFileObject[/tmp/EvoSuite_36_1575588266597/weka/classifiers/bayes/NaiveBayesMultinomialText_36_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 23:24:26 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.filters.SimpleFilter",
105:       "weka.filters.SimpleStreamFilter",
106:       "weka.estimators.IncrementalEstimator",
107:       "weka.estimators.Estimator$Builder",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.classifiers.functions.SGDText",
110:       "weka.core.RelationalLocator",
111:       "weka.core.Utils",
112:       "weka.core.CustomDisplayStringProvider",
113:       "weka.core.tokenizers.Tokenizer",
114:       "weka.core.NormalizableDistance",
115:       "weka.core.NoSupportForMissingValuesException",
116:       "weka.classifiers.UpdateableClassifier",
117:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
118:       "weka.core.MultiInstanceCapabilitiesHandler",
119:       "weka.core.Copyable",
120:       "weka.core.Capabilities",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
122:       "weka.core.BinarySparseInstance",
123:       "weka.core.AttributeLocator",
124:       "weka.core.SerializedObject",
125:       "weka.clusterers.UpdateableClusterer",
126:       "weka.core.Summarizable",
127:       "weka.core.AdditionalMeasureProducer",
128:       "org.pentaho.packageManagement.PackageManager$1",
129:       "weka.core.Drawable",
130:       "weka.core.matrix.Matrix",
131:       "weka.core.CapabilitiesHandler",
132:       "weka.classifiers.trees.REPTree",
133:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
134:       "weka.attributeSelection.ASEvaluation",
135:       "weka.core.AbstractInstance",
136:       "weka.core.scripting.JythonObject",
137:       "weka.core.SelectedTag",
138:       "org.pentaho.packageManagement.DefaultPackage",
139:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
140:       "weka.attributeSelection.CorrelationAttributeEval",
141:       "weka.core.Version",
142:       "weka.filters.AllFilter",
143:       "weka.core.Tag",
144:       "weka.classifiers.IteratedSingleClassifierEnhancer",
145:       "weka.core.neighboursearch.CoverTree",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.filters.StreamableFilter",
151:       "weka.core.Range",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
153:       "weka.core.PartitionGenerator",
154:       "weka.core.scripting.JythonSerializableObject",
155:       "weka.classifiers.Classifier",
156:       "weka.core.Capabilities$Capability",
157:       "weka.core.SparseInstance",
158:       "org.pentaho.packageManagement.PackageManager",
159:       "weka.estimators.PoissonEstimator",
160:       "weka.attributeSelection.AttributeTransformer",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.classifiers.misc.SerializedClassifier",
163:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
164:       "weka.attributeSelection.PrincipalComponents",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.classifiers.meta.Bagging",
167:       "weka.core.stemmers.LovinsStemmer",
168:       "weka.classifiers.Evaluation",
169:       "weka.classifiers.functions.supportVector.Kernel",
170:       "weka.core.WekaPackageManager",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.core.neighboursearch.LinearNNSearch",
173:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
174:       "weka.core.Option",
175:       "weka.core.neighboursearch.PerformanceStats",
176:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
177:       "weka.filters.Sourcable",
178:       "weka.core.Attribute",
179:       "weka.core.Stopwords",
180:       "weka.core.tokenizers.AlphabeticTokenizer",
181:       "weka.core.FastVector",
182:       "weka.core.UnassignedDatasetException",
183:       "weka.classifiers.RandomizableClassifier",
184:       "weka.classifiers.SingleClassifierEnhancer",
185:       "weka.core.RevisionUtils",
186:       "weka.core.Instance",
187:       "weka.core.ProtectedProperties",
188:       "weka.estimators.Estimator",
189:       "weka.core.StringLocator",
190:       "weka.core.AttributeStats",
191:       "weka.filters.MultiFilter",
192:       "weka.core.WeightedInstancesHandler",
193:       "weka.core.neighboursearch.NearestNeighbourSearch",
194:       "weka.classifiers.trees.DecisionStump",
195:       "weka.filters.unsupervised.attribute.Remove",
196:       "weka.core.Randomizable",
197:       "weka.core.EuclideanDistance",
198:       "weka.core.Instances",
199:       "weka.core.UnassignedClassException",
200:       "weka.classifiers.rules.ZeroR",
201:       "weka.core.stemmers.IteratedLovinsStemmer",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.core.neighboursearch.TreePerformanceStats",
210:       "weka.core.xml.XMLSerialization",
211:       "weka.classifiers.xml.XMLClassifier",
212:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
213:       "weka.filters.Filter",
214:       "weka.classifiers.lazy.IBk"
215:     );
216:   } 
217: 
218:   private static void resetClasses() {
219:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding.class.getClassLoader()); 
220: 
221:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
222:       "weka.classifiers.AbstractClassifier",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
225:       "weka.core.Capabilities$Capability",
226:       "weka.core.tokenizers.Tokenizer",
227:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
228:       "weka.core.tokenizers.WordTokenizer",
229:       "weka.core.stemmers.NullStemmer",
230:       "weka.core.Option",
231:       "weka.core.AbstractInstance",
232:       "weka.core.SparseInstance",
233:       "weka.core.BinarySparseInstance",
234:       "weka.core.Attribute",
235:       "weka.core.ProtectedProperties",
236:       "weka.core.UnassignedDatasetException",
237:       "weka.classifiers.Evaluation",
238:       "weka.core.Utils",
239:       "weka.core.RevisionUtils",
240:       "weka.classifiers.RandomizableClassifier",
241:       "weka.core.Tag",
242:       "weka.classifiers.functions.SGDText",
243:       "weka.core.Instances",
244:       "weka.core.Capabilities",
245:       "org.pentaho.packageManagement.PackageManager",
246:       "org.pentaho.packageManagement.DefaultPackageManager",
247:       "weka.core.Version",
248:       "weka.core.Environment",
249:       "weka.core.WekaPackageManager",
250:       "weka.core.Stopwords",
251:       "weka.classifiers.functions.SimpleLogistic",
252:       "weka.core.SerializedObject",
253:       "weka.core.DenseInstance",
254:       "weka.core.neighboursearch.NearestNeighbourSearch",
255:       "weka.core.neighboursearch.KDTree",
256:       "weka.core.NormalizableDistance",
257:       "weka.core.EuclideanDistance",
258:       "weka.core.Range",
259:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
260:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
261:       "weka.classifiers.bayes.BayesNet",
262:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
264:       "weka.classifiers.bayes.net.search.local.K2",
265:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
266:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
267:       "weka.attributeSelection.ASEvaluation",
268:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
269:       "weka.attributeSelection.PrincipalComponents",
270:       "weka.core.stemmers.SnowballStemmer",
271:       "weka.core.WekaEnumeration",
272:       "weka.core.Attribute$1",
273:       "weka.core.stemmers.LovinsStemmer",
274:       "weka.core.stemmers.IteratedLovinsStemmer",
275:       "weka.core.converters.ArffLoader$ArffReader",
276:       "weka.core.TestInstances",
277:       "weka.core.neighboursearch.BallTree",
278:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
279:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
280:       "weka.core.neighboursearch.balltrees.BallSplitter",
281:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
282:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
283:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
284:       "weka.core.FindWithCapabilities",
285:       "weka.core.SingleIndex",
286:       "weka.classifiers.functions.supportVector.Kernel",
287:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
288:       "weka.classifiers.bayes.NaiveBayes",
289:       "weka.core.ClassDiscovery",
290:       "weka.filters.Filter",
291:       "weka.filters.supervised.attribute.Discretize",
292:       "weka.classifiers.SingleClassifierEnhancer",
293:       "weka.classifiers.IteratedSingleClassifierEnhancer",
294:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
295:       "weka.classifiers.meta.AdaBoostM1",
296:       "weka.classifiers.rules.ZeroR",
297:       "weka.classifiers.trees.DecisionStump",
298:       "weka.classifiers.misc.InputMappedClassifier",
299:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
300:       "weka.classifiers.meta.CostSensitiveClassifier",
301:       "weka.classifiers.CostMatrix",
302:       "weka.core.neighboursearch.CoverTree",
303:       "weka.core.neighboursearch.LinearNNSearch",
304:       "weka.core.tokenizers.AlphabeticTokenizer",
305:       "weka.classifiers.meta.CVParameterSelection",
306:       "weka.core.FastVector",
307:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
308:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
309:       "weka.classifiers.meta.Bagging",
310:       "weka.classifiers.trees.REPTree",
311:       "weka.classifiers.trees.J48",
312:       "weka.classifiers.trees.j48.ClassifierTree",
313:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
314:       "weka.core.stemmers.Stemming",
315:       "weka.core.neighboursearch.balltrees.BallNode",
316:       "weka.classifiers.meta.AttributeSelectedClassifier",
317:       "weka.attributeSelection.CfsSubsetEval",
318:       "weka.attributeSelection.ASSearch",
319:       "weka.attributeSelection.BestFirst",
320:       "weka.core.TechnicalInformation",
321:       "weka.core.TechnicalInformation$Type",
322:       "weka.core.TechnicalInformation$Field",
323:       "weka.classifiers.rules.OneR",
324:       "weka.classifiers.bayes.NaiveBayesMultinomial",
325:       "weka.attributeSelection.ReliefFAttributeEval",
326:       "weka.core.ManhattanDistance",
327:       "weka.attributeSelection.WrapperSubsetEval",
328:       "weka.classifiers.bayes.NaiveBayesUpdateable",
329:       "weka.classifiers.functions.SMO",
330:       "weka.classifiers.functions.supportVector.CachedKernel",
331:       "weka.classifiers.functions.supportVector.PolyKernel",
332:       "weka.classifiers.rules.DecisionTable",
333:       "weka.classifiers.bayes.net.BIFReader",
334:       "weka.core.UnassignedClassException",
335:       "weka.core.tokenizers.NGramTokenizer",
336:       "weka.classifiers.functions.supportVector.Puk",
337:       "weka.classifiers.lazy.IBk",
338:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
339:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
340:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
341:       "weka.attributeSelection.GainRatioAttributeEval",
342:       "weka.classifiers.functions.SGD",
343:       "weka.core.matrix.Matrix",
344:       "weka.core.WekaException",
345:       "weka.attributeSelection.OneRAttributeEval",
346:       "weka.core.UnsupportedAttributeTypeException",
347:       "weka.estimators.Estimator",
348:       "weka.estimators.KernelEstimator",
349:       "weka.attributeSelection.InfoGainAttributeEval",
350:       "weka.classifiers.meta.RegressionByDiscretization",
351:       "weka.filters.unsupervised.attribute.Discretize",
352:       "weka.estimators.DiscreteEstimator",
353:       "weka.core.Javadoc",
354:       "weka.core.GlobalInfoJavadoc",
355:       "weka.classifiers.meta.MultiClassClassifier",
356:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
357:       "weka.classifiers.functions.Logistic",
358:       "weka.classifiers.rules.JRip",
359:       "weka.classifiers.lazy.LWL",
360:       "weka.classifiers.rules.PART",
361:       "weka.classifiers.rules.part.MakeDecList",
362:       "weka.classifiers.trees.REPTree$Tree",
363:       "weka.core.ContingencyTables",
364:       "weka.classifiers.MultipleClassifiersCombiner",
365:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
366:       "weka.classifiers.meta.MultiScheme",
367:       "weka.classifiers.misc.SerializedClassifier",
368:       "weka.classifiers.functions.MultilayerPerceptron",
369:       "weka.filters.unsupervised.attribute.NominalToBinary",
370:       "weka.classifiers.functions.neural.SigmoidUnit",
371:       "weka.classifiers.functions.neural.LinearUnit",
372:       "weka.estimators.PoissonEstimator",
373:       "weka.core.SelectedTag",
374:       "weka.classifiers.functions.SimpleLinearRegression",
375:       "weka.attributeSelection.AttributeSelection",
376:       "weka.core.TechnicalInformationHandlerJavadoc",
377:       "weka.classifiers.functions.VotedPerceptron",
378:       "weka.attributeSelection.CorrelationAttributeEval",
379:       "weka.estimators.NormalEstimator",
380:       "weka.filters.SimpleFilter",
381:       "weka.filters.SimpleStreamFilter",
382:       "weka.filters.MultiFilter",
383:       "weka.filters.AllFilter",
384:       "weka.classifiers.functions.supportVector.RBFKernel",
385:       "weka.classifiers.trees.LMT",
386:       "weka.classifiers.lazy.KStar",
387:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
388:       "weka.core.AttributeStats",
389:       "weka.classifiers.meta.LogitBoost",
390:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
391:       "weka.classifiers.trees.RandomTree",
392:       "weka.classifiers.meta.AdditiveRegression",
393:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
394:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
395:       "weka.classifiers.meta.Stacking",
396:       "weka.classifiers.functions.GaussianProcesses",
397:       "weka.classifiers.trees.m5.M5Base",
398:       "weka.classifiers.rules.M5Rules",
399:       "weka.classifiers.meta.RandomCommittee",
400:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
401:       "weka.classifiers.meta.Vote",
402:       "weka.classifiers.meta.FilteredClassifier",
403:       "weka.filters.supervised.attribute.AttributeSelection",
404:       "weka.attributeSelection.GreedyStepwise",
405:       "weka.experiment.Stats",
406:       "weka.classifiers.functions.LinearRegression",
407:       "weka.classifiers.meta.ClassificationViaRegression",
408:       "weka.classifiers.trees.M5P",
409:       "weka.classifiers.functions.supportVector.StringKernel"
410:     );
411:   }
412: }

[MASTER] 23:24:26.646 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);

naiveBayesMultinomialText0.m_norm = 0.0;
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "primitive");
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.minWordFrequencyTipText();
String[] stringArray0 = new String[8];
stringArray0[0] = "primitive";
stringArray0[1] = "Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value";
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
stringArray0[2] = "primitive";
stringArray0[3] = "Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value";
stringArray0[4] = "primitive";
stringArray0[5] = "primitive";
stringArray0[6] = "primitive";
stringArray0[7] = "primitive";
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.getNorm();
MockFile mockFile0 = new MockFile("primitive");
naiveBayesMultinomialText0.setStopwords(mockFile0);
assertEquals(0.0, naiveBayesMultinomialText0.getNorm(), 0.01);


[MASTER] 23:24:27.145 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_42_1575588267109/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_42_1575588267109/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding.java]]
[MASTER] 23:24:27.145 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:24:27.145 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:24:27.145 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 23:24:27.146 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 23:24:27.146 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_42_1575588267109/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 23:24:27 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.ArrayList;
12: import java.util.LinkedHashMap;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.Attribute;
18: import weka.core.Instance;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_42_tmp__ESTest extends NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=1.1375916250043898
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       naiveBayesMultinomialText0.m_useStopList = true;
31:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
32:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
33:       ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
34:       // Undeclared exception!
35:       try { 
36:         naiveBayesMultinomialText0.tokenizeInstance((Instance) null, true);
37:         fail("Expecting exception: NullPointerException");
38:       
39:       } catch(NullPointerException e) {
40:          //
41:          // no message in exception (getMessage() returned null)
42:          //
43:          verifyException("weka.classifiers.bayes.NaiveBayesMultinomialText", e);
44:       }
45:   }
46: }
RegularFileObject[/tmp/EvoSuite_42_1575588267109/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 23:24:27 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.filters.SimpleFilter",
105:       "weka.filters.SimpleStreamFilter",
106:       "weka.estimators.IncrementalEstimator",
107:       "weka.estimators.Estimator$Builder",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.classifiers.functions.SGDText",
110:       "weka.core.RelationalLocator",
111:       "weka.core.Utils",
112:       "weka.core.CustomDisplayStringProvider",
113:       "weka.core.tokenizers.Tokenizer",
114:       "weka.core.NormalizableDistance",
115:       "weka.core.NoSupportForMissingValuesException",
116:       "weka.classifiers.UpdateableClassifier",
117:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
118:       "weka.core.MultiInstanceCapabilitiesHandler",
119:       "weka.core.Copyable",
120:       "weka.core.Capabilities",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
122:       "weka.core.BinarySparseInstance",
123:       "weka.core.AttributeLocator",
124:       "weka.core.SerializedObject",
125:       "weka.clusterers.UpdateableClusterer",
126:       "weka.core.Summarizable",
127:       "weka.core.AdditionalMeasureProducer",
128:       "org.pentaho.packageManagement.PackageManager$1",
129:       "weka.core.Drawable",
130:       "weka.core.matrix.Matrix",
131:       "weka.core.CapabilitiesHandler",
132:       "weka.classifiers.trees.REPTree",
133:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
134:       "weka.attributeSelection.ASEvaluation",
135:       "weka.core.AbstractInstance",
136:       "weka.core.scripting.JythonObject",
137:       "weka.core.SelectedTag",
138:       "org.pentaho.packageManagement.DefaultPackage",
139:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
140:       "weka.attributeSelection.CorrelationAttributeEval",
141:       "weka.core.Version",
142:       "weka.filters.AllFilter",
143:       "weka.core.Tag",
144:       "weka.classifiers.IteratedSingleClassifierEnhancer",
145:       "weka.core.neighboursearch.CoverTree",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.filters.StreamableFilter",
151:       "weka.core.Range",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
153:       "weka.core.PartitionGenerator",
154:       "weka.core.scripting.JythonSerializableObject",
155:       "weka.classifiers.Classifier",
156:       "weka.core.Capabilities$Capability",
157:       "weka.core.SparseInstance",
158:       "org.pentaho.packageManagement.PackageManager",
159:       "weka.estimators.PoissonEstimator",
160:       "weka.attributeSelection.AttributeTransformer",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.classifiers.misc.SerializedClassifier",
163:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
164:       "weka.attributeSelection.PrincipalComponents",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.classifiers.meta.Bagging",
167:       "weka.core.stemmers.LovinsStemmer",
168:       "weka.classifiers.Evaluation",
169:       "weka.classifiers.functions.supportVector.Kernel",
170:       "weka.core.WekaPackageManager",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.core.neighboursearch.LinearNNSearch",
173:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
174:       "weka.core.Option",
175:       "weka.core.neighboursearch.PerformanceStats",
176:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
177:       "weka.filters.Sourcable",
178:       "weka.core.Attribute",
179:       "weka.core.Stopwords",
180:       "weka.core.tokenizers.AlphabeticTokenizer",
181:       "weka.core.FastVector",
182:       "weka.core.UnassignedDatasetException",
183:       "weka.classifiers.RandomizableClassifier",
184:       "weka.classifiers.SingleClassifierEnhancer",
185:       "weka.core.RevisionUtils",
186:       "weka.core.Instance",
187:       "weka.core.ProtectedProperties",
188:       "weka.estimators.Estimator",
189:       "weka.core.StringLocator",
190:       "weka.core.AttributeStats",
191:       "weka.filters.MultiFilter",
192:       "weka.core.WeightedInstancesHandler",
193:       "weka.core.neighboursearch.NearestNeighbourSearch",
194:       "weka.classifiers.trees.DecisionStump",
195:       "weka.filters.unsupervised.attribute.Remove",
196:       "weka.core.Randomizable",
197:       "weka.core.EuclideanDistance",
198:       "weka.core.Instances",
199:       "weka.core.UnassignedClassException",
200:       "weka.classifiers.rules.ZeroR",
201:       "weka.core.stemmers.IteratedLovinsStemmer",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.core.neighboursearch.TreePerformanceStats",
210:       "weka.core.xml.XMLSerialization",
211:       "weka.classifiers.xml.XMLClassifier",
212:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
213:       "weka.filters.Filter",
214:       "weka.classifiers.lazy.IBk"
215:     );
216:   } 
217: 
218:   private static void resetClasses() {
219:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding.class.getClassLoader()); 
220: 
221:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
222:       "weka.classifiers.AbstractClassifier",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
225:       "weka.core.Capabilities$Capability",
226:       "weka.core.tokenizers.Tokenizer",
227:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
228:       "weka.core.tokenizers.WordTokenizer",
229:       "weka.core.stemmers.NullStemmer",
230:       "weka.core.Option",
231:       "weka.core.AbstractInstance",
232:       "weka.core.SparseInstance",
233:       "weka.core.BinarySparseInstance",
234:       "weka.core.Attribute",
235:       "weka.core.ProtectedProperties",
236:       "weka.core.UnassignedDatasetException",
237:       "weka.classifiers.Evaluation",
238:       "weka.core.Utils",
239:       "weka.core.RevisionUtils",
240:       "weka.classifiers.RandomizableClassifier",
241:       "weka.core.Tag",
242:       "weka.classifiers.functions.SGDText",
243:       "weka.core.Instances",
244:       "weka.core.Capabilities",
245:       "org.pentaho.packageManagement.PackageManager",
246:       "org.pentaho.packageManagement.DefaultPackageManager",
247:       "weka.core.Version",
248:       "weka.core.Environment",
249:       "weka.core.WekaPackageManager",
250:       "weka.core.Stopwords",
251:       "weka.classifiers.functions.SimpleLogistic",
252:       "weka.core.SerializedObject",
253:       "weka.core.DenseInstance",
254:       "weka.core.neighboursearch.NearestNeighbourSearch",
255:       "weka.core.neighboursearch.KDTree",
256:       "weka.core.NormalizableDistance",
257:       "weka.core.EuclideanDistance",
258:       "weka.core.Range",
259:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
260:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
261:       "weka.classifiers.bayes.BayesNet",
262:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
264:       "weka.classifiers.bayes.net.search.local.K2",
265:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
266:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
267:       "weka.attributeSelection.ASEvaluation",
268:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
269:       "weka.attributeSelection.PrincipalComponents",
270:       "weka.core.stemmers.SnowballStemmer",
271:       "weka.core.WekaEnumeration",
272:       "weka.core.Attribute$1",
273:       "weka.core.stemmers.LovinsStemmer",
274:       "weka.core.stemmers.IteratedLovinsStemmer",
275:       "weka.core.converters.ArffLoader$ArffReader",
276:       "weka.core.TestInstances",
277:       "weka.core.neighboursearch.BallTree",
278:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
279:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
280:       "weka.core.neighboursearch.balltrees.BallSplitter",
281:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
282:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
283:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
284:       "weka.core.FindWithCapabilities",
285:       "weka.core.SingleIndex",
286:       "weka.classifiers.functions.supportVector.Kernel",
287:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
288:       "weka.classifiers.bayes.NaiveBayes",
289:       "weka.core.ClassDiscovery",
290:       "weka.filters.Filter",
291:       "weka.filters.supervised.attribute.Discretize",
292:       "weka.classifiers.SingleClassifierEnhancer",
293:       "weka.classifiers.IteratedSingleClassifierEnhancer",
294:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
295:       "weka.classifiers.meta.AdaBoostM1",
296:       "weka.classifiers.rules.ZeroR",
297:       "weka.classifiers.trees.DecisionStump",
298:       "weka.classifiers.misc.InputMappedClassifier",
299:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
300:       "weka.classifiers.meta.CostSensitiveClassifier",
301:       "weka.classifiers.CostMatrix",
302:       "weka.core.neighboursearch.CoverTree",
303:       "weka.core.neighboursearch.LinearNNSearch",
304:       "weka.core.tokenizers.AlphabeticTokenizer",
305:       "weka.classifiers.meta.CVParameterSelection",
306:       "weka.core.FastVector",
307:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
308:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
309:       "weka.classifiers.meta.Bagging",
310:       "weka.classifiers.trees.REPTree",
311:       "weka.classifiers.trees.J48",
312:       "weka.classifiers.trees.j48.ClassifierTree",
313:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
314:       "weka.core.stemmers.Stemming",
315:       "weka.core.neighboursearch.balltrees.BallNode",
316:       "weka.classifiers.meta.AttributeSelectedClassifier",
317:       "weka.attributeSelection.CfsSubsetEval",
318:       "weka.attributeSelection.ASSearch",
319:       "weka.attributeSelection.BestFirst",
320:       "weka.core.TechnicalInformation",
321:       "weka.core.TechnicalInformation$Type",
322:       "weka.core.TechnicalInformation$Field",
323:       "weka.classifiers.rules.OneR",
324:       "weka.classifiers.bayes.NaiveBayesMultinomial",
325:       "weka.attributeSelection.ReliefFAttributeEval",
326:       "weka.core.ManhattanDistance",
327:       "weka.attributeSelection.WrapperSubsetEval",
328:       "weka.classifiers.bayes.NaiveBayesUpdateable",
329:       "weka.classifiers.functions.SMO",
330:       "weka.classifiers.functions.supportVector.CachedKernel",
331:       "weka.classifiers.functions.supportVector.PolyKernel",
332:       "weka.classifiers.rules.DecisionTable",
333:       "weka.classifiers.bayes.net.BIFReader",
334:       "weka.core.UnassignedClassException",
335:       "weka.core.tokenizers.NGramTokenizer",
336:       "weka.classifiers.functions.supportVector.Puk",
337:       "weka.classifiers.lazy.IBk",
338:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
339:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
340:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
341:       "weka.attributeSelection.GainRatioAttributeEval",
342:       "weka.classifiers.functions.SGD",
343:       "weka.core.matrix.Matrix",
344:       "weka.core.WekaException",
345:       "weka.attributeSelection.OneRAttributeEval",
346:       "weka.core.UnsupportedAttributeTypeException",
347:       "weka.estimators.Estimator",
348:       "weka.estimators.KernelEstimator",
349:       "weka.attributeSelection.InfoGainAttributeEval",
350:       "weka.classifiers.meta.RegressionByDiscretization",
351:       "weka.filters.unsupervised.attribute.Discretize",
352:       "weka.estimators.DiscreteEstimator",
353:       "weka.core.Javadoc",
354:       "weka.core.GlobalInfoJavadoc",
355:       "weka.classifiers.meta.MultiClassClassifier",
356:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
357:       "weka.classifiers.functions.Logistic",
358:       "weka.classifiers.rules.JRip",
359:       "weka.classifiers.lazy.LWL",
360:       "weka.classifiers.rules.PART",
361:       "weka.classifiers.rules.part.MakeDecList",
362:       "weka.classifiers.trees.REPTree$Tree",
363:       "weka.core.ContingencyTables",
364:       "weka.classifiers.MultipleClassifiersCombiner",
365:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
366:       "weka.classifiers.meta.MultiScheme",
367:       "weka.classifiers.misc.SerializedClassifier",
368:       "weka.classifiers.functions.MultilayerPerceptron",
369:       "weka.filters.unsupervised.attribute.NominalToBinary",
370:       "weka.classifiers.functions.neural.SigmoidUnit",
371:       "weka.classifiers.functions.neural.LinearUnit",
372:       "weka.estimators.PoissonEstimator",
373:       "weka.core.SelectedTag",
374:       "weka.classifiers.functions.SimpleLinearRegression",
375:       "weka.attributeSelection.AttributeSelection",
376:       "weka.core.TechnicalInformationHandlerJavadoc",
377:       "weka.classifiers.functions.VotedPerceptron",
378:       "weka.attributeSelection.CorrelationAttributeEval",
379:       "weka.estimators.NormalEstimator",
380:       "weka.filters.SimpleFilter",
381:       "weka.filters.SimpleStreamFilter",
382:       "weka.filters.MultiFilter",
383:       "weka.filters.AllFilter",
384:       "weka.classifiers.functions.supportVector.RBFKernel",
385:       "weka.classifiers.trees.LMT",
386:       "weka.classifiers.lazy.KStar",
387:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
388:       "weka.core.AttributeStats",
389:       "weka.classifiers.meta.LogitBoost",
390:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
391:       "weka.classifiers.trees.RandomTree",
392:       "weka.classifiers.meta.AdditiveRegression",
393:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
394:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
395:       "weka.classifiers.meta.Stacking",
396:       "weka.classifiers.functions.GaussianProcesses",
397:       "weka.classifiers.trees.m5.M5Base",
398:       "weka.classifiers.rules.M5Rules",
399:       "weka.classifiers.meta.RandomCommittee",
400:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
401:       "weka.classifiers.meta.Vote",
402:       "weka.classifiers.meta.FilteredClassifier",
403:       "weka.filters.supervised.attribute.AttributeSelection",
404:       "weka.attributeSelection.GreedyStepwise",
405:       "weka.experiment.Stats",
406:       "weka.classifiers.functions.LinearRegression",
407:       "weka.classifiers.meta.ClassificationViaRegression",
408:       "weka.classifiers.trees.M5P",
409:       "weka.classifiers.functions.supportVector.StringKernel"
410:     );
411:   }
412: }

[MASTER] 23:24:27.146 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_useStopList = true;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
naiveBayesMultinomialText0.tokenizeInstance((Instance) null, true);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1009/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7357
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:32:13.606 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:32:13.617 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:32:13.619 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 23:32:13.661 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1009
* Starting evolution
* Search finished after 130s and 10 generations, 11011 statements, best individual has fitness: 4776.0
[MASTER] 23:34:28.478 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 13 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 91%
* Total number of goals: 647
* Number of covered goals: 590
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 83%
* Total number of goals: 441
* Number of covered goals: 365
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 83%
* Total number of goals: 678
* Number of covered goals: 561
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 30%
* Total number of goals: 244
* Number of covered goals: 74
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 80%
* Total number of goals: 124
* Number of covered goals: 99
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 79%
* Total number of goals: 124
* Number of covered goals: 98
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 73%
* Total number of goals: 441
* Number of covered goals: 323
* Generated 107 tests with total length 2129
* Resulting test suite's coverage: 78% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 23:40:00.151 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6682479166666667% of time used, but only 43/107 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 14%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1009/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7357
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7358
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:41:46.041 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:41:46.072 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:41:46.079 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 23:41:48.317 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 23:41:49.232 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 23:41:49.247 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
[MASTER] 23:41:51.733 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:41:51.750 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:41:51.752 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 23:41:51.769 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Using seed 1009
* Starting evolution
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1009
* Starting evolution
[MASTER] 23:41:55.295 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 23:41:56.469 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 124s and 112 generations, 63345 statements, best individual has fitness: 12768.0
* Search finished after 123s and 57 generations, 39439 statements, best individual has fitness: 16712.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 35%
* Total number of goals: 705
* Number of covered goals: 244
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 25%
* Total number of goals: 416
* Number of covered goals: 104
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Generated 21 tests with total length 230
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Coverage of criterion WEAKMUTATION: 55%
* Total number of goals: 993
* Number of covered goals: 546
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 28%
* Total number of goals: 93
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 25%
* Total number of goals: 416
* Number of covered goals: 104
* Generated 58 tests with total length 551
* Resulting test suite's coverage: 43% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1009/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1009/107_weka/evosuite-tests
* Done!

* Computation finished
