* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2867
* Connecting to master process on port 2866
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:17:07.147 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 01:17:07.148 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 01:17:07.149 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 01:17:07.217 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:17:07.258 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:17:07.259 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1012
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:17:19.020 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:17:19.035 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:17:19.036 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 01:17:19.051 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1012
* Starting evolution
[MASTER] 01:17:22.626 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 01:17:38.049 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 01:17:38.049 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 01:18:28.010 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 123s and 80 generations, 56301 statements, best individual has fitness: 2120.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 338
* Number of covered goals: 289
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 74%
* Total number of goals: 194
* Number of covered goals: 144
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 88%
* Total number of goals: 476
* Number of covered goals: 420
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 52%
* Total number of goals: 112
* Number of covered goals: 58
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 73%
* Total number of goals: 194
* Number of covered goals: 141
* Generated 65 tests with total length 765
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 122s and 63 generations, 41909 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 18 tests with total length 165
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1012/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 46%
* Compiling and checking tests
[MASTER] 01:23:03.738 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_6_1575595383682/weka/classifiers/bayes/NaiveBayesMultinomialText_6_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_6_1575595383682/weka/classifiers/bayes/NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding.java]]
[MASTER] 01:23:03.739 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:23:03.739 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:23:03.745 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 01:23:03.750 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_6_1575595383682/weka/classifiers/bayes/NaiveBayesMultinomialText_6_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 01:23:03 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.classifiers.functions.SGDText;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_6_tmp__ESTest extends NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=1.8408398156653452
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       SGDText sGDText0 = new SGDText();
30:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
31:       String[] stringArray0 = new String[1];
32:       stringArray0[0] = "-norm";
33:       try { 
34:         naiveBayesMultinomialText0.setOptions(stringArray0);
35:         fail("Expecting exception: Exception");
36:       
37:       } catch(Exception e) {
38:          //
39:          // No value given for -norm option.
40:          //
41:          verifyException("weka.core.Utils", e);
42:       }
43:   }
44: }
RegularFileObject[/tmp/EvoSuite_6_1575595383682/weka/classifiers/bayes/NaiveBayesMultinomialText_6_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 01:23:03 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.core.neighboursearch.balltrees.BottomUpConstructor$TempNode",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.CostMatrix",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.rules.PART",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.filters.SimpleFilter",
108:       "weka.filters.SimpleStreamFilter",
109:       "weka.estimators.IncrementalEstimator",
110:       "weka.estimators.Estimator$Builder",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.classifiers.trees.j48.C45ModelSelection",
113:       "weka.classifiers.functions.SGDText",
114:       "weka.core.RelationalLocator",
115:       "weka.core.Utils",
116:       "weka.classifiers.meta.AdaBoostM1",
117:       "weka.core.CustomDisplayStringProvider",
118:       "weka.core.tokenizers.Tokenizer",
119:       "weka.core.NormalizableDistance",
120:       "weka.core.NoSupportForMissingValuesException",
121:       "weka.classifiers.UpdateableClassifier",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
123:       "weka.core.MultiInstanceCapabilitiesHandler",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.core.AttributeLocator",
127:       "weka.core.BinarySparseInstance",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.classifiers.trees.j48.ModelSelection",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "weka.core.AdditionalMeasureProducer",
135:       "org.pentaho.packageManagement.PackageManager$1",
136:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
137:       "weka.core.Drawable",
138:       "weka.core.matrix.Matrix",
139:       "weka.core.CapabilitiesHandler",
140:       "weka.core.AbstractInstance",
141:       "weka.core.scripting.JythonObject",
142:       "weka.core.SelectedTag",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.classifiers.bayes.BayesNet",
145:       "weka.core.Version",
146:       "weka.filters.AllFilter",
147:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
148:       "weka.core.Tag",
149:       "weka.classifiers.IteratedSingleClassifierEnhancer",
150:       "weka.classifiers.trees.j48.BinC45ModelSelection",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.OptionHandler",
153:       "weka.core.WekaException",
154:       "weka.classifiers.trees.RandomForest",
155:       "weka.filters.StreamableFilter",
156:       "weka.core.Range",
157:       "weka.core.PartitionGenerator",
158:       "weka.core.scripting.JythonSerializableObject",
159:       "weka.classifiers.Classifier",
160:       "weka.core.Capabilities$Capability",
161:       "weka.core.SparseInstance",
162:       "org.pentaho.packageManagement.PackageManager",
163:       "weka.core.tokenizers.WordTokenizer",
164:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
173:       "weka.core.neighboursearch.LinearNNSearch",
174:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
175:       "weka.core.Option",
176:       "weka.classifiers.meta.CostSensitiveClassifier",
177:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
178:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
179:       "weka.estimators.KernelEstimator",
180:       "weka.filters.Sourcable",
181:       "weka.core.Attribute",
182:       "weka.core.Stopwords",
183:       "weka.core.tokenizers.AlphabeticTokenizer",
184:       "weka.core.FastVector",
185:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
186:       "weka.core.UnassignedDatasetException",
187:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
188:       "weka.classifiers.RandomizableClassifier",
189:       "weka.classifiers.SingleClassifierEnhancer",
190:       "weka.core.RevisionUtils",
191:       "weka.core.Instance",
192:       "weka.estimators.Estimator",
193:       "weka.core.ProtectedProperties",
194:       "weka.core.StringLocator",
195:       "weka.classifiers.bayes.net.ADNode",
196:       "weka.core.AttributeStats",
197:       "weka.filters.MultiFilter",
198:       "weka.core.WeightedInstancesHandler",
199:       "weka.core.neighboursearch.NearestNeighbourSearch",
200:       "weka.classifiers.trees.DecisionStump",
201:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
202:       "weka.core.Randomizable",
203:       "weka.classifiers.functions.SGD",
204:       "weka.core.EuclideanDistance",
205:       "weka.core.Instances",
206:       "weka.core.UnassignedClassException",
207:       "weka.classifiers.bayes.net.BIFReader",
208:       "weka.classifiers.bayes.net.ParentSet",
209:       "weka.classifiers.rules.ZeroR",
210:       "weka.core.stemmers.IteratedLovinsStemmer",
211:       "weka.core.stemmers.Stemming",
212:       "weka.core.TechnicalInformation",
213:       "weka.core.UnsupportedAttributeTypeException",
214:       "weka.classifiers.Sourcable",
215:       "weka.core.RevisionHandler",
216:       "weka.classifiers.evaluation.output.prediction.PlainText",
217:       "weka.core.xml.XMLSerialization",
218:       "weka.classifiers.xml.XMLClassifier",
219:       "weka.filters.Filter",
220:       "weka.classifiers.lazy.IBk",
221:       "weka.filters.supervised.attribute.Discretize"
222:     );
223:   } 
224: 
225:   private static void resetClasses() {
226:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding.class.getClassLoader()); 
227: 
228:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
229:       "weka.classifiers.AbstractClassifier",
230:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
231:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
232:       "weka.core.Capabilities$Capability",
233:       "weka.core.tokenizers.Tokenizer",
234:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
235:       "weka.core.tokenizers.WordTokenizer",
236:       "weka.core.stemmers.NullStemmer",
237:       "weka.classifiers.Evaluation",
238:       "weka.core.Utils",
239:       "weka.core.Option",
240:       "weka.core.Capabilities",
241:       "org.pentaho.packageManagement.PackageManager",
242:       "org.pentaho.packageManagement.DefaultPackageManager",
243:       "weka.core.Version",
244:       "weka.core.Environment",
245:       "weka.core.WekaPackageManager",
246:       "weka.core.TestInstances",
247:       "weka.core.Attribute",
248:       "weka.core.ProtectedProperties",
249:       "weka.core.Instances",
250:       "weka.core.AbstractInstance",
251:       "weka.core.DenseInstance",
252:       "weka.core.neighboursearch.balltrees.BallNode",
253:       "weka.classifiers.RandomizableClassifier",
254:       "weka.core.Tag",
255:       "weka.classifiers.functions.SGDText",
256:       "weka.core.SerializedObject",
257:       "weka.core.SparseInstance",
258:       "weka.core.BinarySparseInstance",
259:       "weka.core.UnassignedDatasetException",
260:       "weka.core.neighboursearch.NearestNeighbourSearch",
261:       "weka.core.neighboursearch.KDTree",
262:       "weka.core.NormalizableDistance",
263:       "weka.core.EuclideanDistance",
264:       "weka.core.Range",
265:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
266:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
267:       "weka.filters.Filter",
268:       "weka.filters.supervised.attribute.Discretize",
269:       "weka.core.neighboursearch.CoverTree",
270:       "weka.core.stemmers.SnowballStemmer",
271:       "weka.core.RevisionUtils",
272:       "weka.classifiers.functions.supportVector.Kernel",
273:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
274:       "weka.attributeSelection.ASEvaluation",
275:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
276:       "weka.attributeSelection.PrincipalComponents",
277:       "weka.core.converters.ArffLoader$ArffReader",
278:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
279:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
280:       "weka.core.tokenizers.AlphabeticTokenizer",
281:       "weka.classifiers.SingleClassifierEnhancer",
282:       "weka.classifiers.misc.InputMappedClassifier",
283:       "weka.classifiers.rules.ZeroR",
284:       "weka.classifiers.functions.LinearRegression",
285:       "weka.classifiers.bayes.BayesNet",
286:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
287:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
288:       "weka.classifiers.bayes.net.search.local.K2",
289:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
290:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
291:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
292:       "weka.classifiers.meta.CostSensitiveClassifier",
293:       "weka.classifiers.CostMatrix",
294:       "weka.core.stemmers.Stemming",
295:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
296:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
297:       "weka.core.neighboursearch.balltrees.BallSplitter",
298:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
299:       "weka.core.stemmers.LovinsStemmer",
300:       "weka.core.stemmers.IteratedLovinsStemmer",
301:       "weka.classifiers.lazy.IBk",
302:       "weka.core.neighboursearch.LinearNNSearch",
303:       "weka.classifiers.IteratedSingleClassifierEnhancer",
304:       "weka.classifiers.meta.AdditiveRegression",
305:       "weka.classifiers.trees.DecisionStump",
306:       "weka.classifiers.functions.GaussianProcesses",
307:       "weka.classifiers.functions.supportVector.CachedKernel",
308:       "weka.classifiers.functions.supportVector.PolyKernel",
309:       "weka.classifiers.MultipleClassifiersCombiner",
310:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
311:       "weka.classifiers.meta.MultiScheme",
312:       "weka.core.WekaException",
313:       "weka.core.UnsupportedAttributeTypeException",
314:       "weka.core.neighboursearch.BallTree",
315:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
316:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
317:       "weka.classifiers.bayes.NaiveBayesMultinomial",
318:       "weka.core.Stopwords",
319:       "weka.classifiers.trees.J48",
320:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
321:       "weka.classifiers.meta.AdaBoostM1",
322:       "weka.classifiers.bayes.NaiveBayes",
323:       "weka.core.TechnicalInformation",
324:       "weka.core.TechnicalInformation$Type",
325:       "weka.core.TechnicalInformation$Field",
326:       "weka.core.matrix.Matrix",
327:       "weka.core.tokenizers.NGramTokenizer",
328:       "weka.core.WekaEnumeration",
329:       "weka.core.Attribute$1",
330:       "weka.classifiers.meta.ClassificationViaRegression",
331:       "weka.classifiers.trees.m5.M5Base",
332:       "weka.classifiers.trees.M5P",
333:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
334:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
335:       "weka.classifiers.meta.RandomSubSpace",
336:       "weka.classifiers.trees.REPTree",
337:       "weka.classifiers.rules.M5Rules",
338:       "weka.core.Javadoc",
339:       "weka.core.TechnicalInformationHandlerJavadoc",
340:       "weka.core.OptionHandlerJavadoc",
341:       "weka.classifiers.functions.SMO",
342:       "weka.classifiers.misc.SerializedClassifier",
343:       "weka.core.FindWithCapabilities",
344:       "weka.core.SingleIndex",
345:       "weka.attributeSelection.GainRatioAttributeEval",
346:       "weka.classifiers.bayes.net.BIFReader",
347:       "weka.attributeSelection.WrapperSubsetEval",
348:       "weka.classifiers.functions.supportVector.StringKernel",
349:       "weka.core.AttributeStats",
350:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
351:       "weka.classifiers.bayes.NaiveBayesUpdateable",
352:       "weka.classifiers.trees.RandomTree",
353:       "weka.classifiers.rules.DecisionTable",
354:       "weka.attributeSelection.ASSearch",
355:       "weka.attributeSelection.BestFirst",
356:       "weka.classifiers.rules.OneR",
357:       "weka.classifiers.meta.FilteredClassifier",
358:       "weka.filters.supervised.attribute.AttributeSelection",
359:       "weka.attributeSelection.AttributeSelection",
360:       "weka.attributeSelection.CfsSubsetEval",
361:       "weka.attributeSelection.GreedyStepwise",
362:       "weka.core.SelectedTag",
363:       "weka.estimators.Estimator",
364:       "weka.estimators.NormalEstimator",
365:       "weka.core.UnassignedClassException",
366:       "weka.classifiers.functions.SMOreg",
367:       "weka.classifiers.functions.supportVector.RegOptimizer",
368:       "weka.classifiers.functions.supportVector.RegSMO",
369:       "weka.classifiers.functions.supportVector.RegSMOImproved",
370:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
371:       "weka.classifiers.meta.RegressionByDiscretization",
372:       "weka.filters.unsupervised.attribute.Discretize",
373:       "weka.classifiers.trees.j48.ClassifierTree",
374:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
375:       "weka.classifiers.rules.PART",
376:       "weka.classifiers.rules.part.MakeDecList",
377:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
378:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
379:       "weka.classifiers.meta.Stacking",
380:       "weka.core.ChebyshevDistance",
381:       "weka.filters.AllFilter",
382:       "weka.classifiers.functions.SimpleLinearRegression",
383:       "weka.classifiers.functions.supportVector.Puk",
384:       "weka.classifiers.trees.RandomForest",
385:       "weka.classifiers.lazy.LWL",
386:       "weka.attributeSelection.ReliefFAttributeEval",
387:       "weka.core.ClassDiscovery",
388:       "weka.classifiers.meta.RandomCommittee",
389:       "weka.classifiers.functions.SimpleLogistic",
390:       "weka.attributeSelection.InfoGainAttributeEval",
391:       "weka.classifiers.functions.VotedPerceptron",
392:       "weka.estimators.DiscreteEstimator",
393:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
394:       "weka.classifiers.meta.MultiClassClassifier",
395:       "weka.classifiers.functions.Logistic",
396:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
397:       "weka.core.SerializationHelper",
398:       "weka.filters.SimpleFilter",
399:       "weka.filters.SimpleStreamFilter",
400:       "weka.filters.MultiFilter",
401:       "weka.classifiers.lazy.KStar",
402:       "weka.core.ListOptions",
403:       "weka.estimators.MahalanobisEstimator",
404:       "weka.estimators.KernelEstimator",
405:       "weka.attributeSelection.CorrelationAttributeEval",
406:       "weka.classifiers.meta.CVParameterSelection",
407:       "weka.core.FastVector",
408:       "weka.classifiers.trees.LMT",
409:       "weka.classifiers.functions.SGD",
410:       "weka.classifiers.meta.Vote",
411:       "weka.classifiers.rules.JRip",
412:       "weka.classifiers.meta.Bagging",
413:       "weka.classifiers.meta.LogitBoost",
414:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
415:       "weka.attributeSelection.OneRAttributeEval"
416:     );
417:   }
418: }

[MASTER] 01:23:03.751 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
SGDText sGDText0 = new SGDText();
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
String[] stringArray0 = new String[1];
stringArray0[0] = "-norm";
naiveBayesMultinomialText0.setOptions(stringArray0);

[MASTER] 01:23:03.806 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_7_1575595383752/weka/classifiers/bayes/NaiveBayesMultinomialText_7_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_7_1575595383752/weka/classifiers/bayes/NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding.java]]
[MASTER] 01:23:03.806 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:23:03.806 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:23:03.807 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 01:23:03.810 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_7_1575595383752/weka/classifiers/bayes/NaiveBayesMultinomialText_7_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 01:23:03 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.classifiers.functions.SGDText;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_7_tmp__ESTest extends NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=1.8408398156653452
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       SGDText sGDText0 = new SGDText();
30:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
31:       String[] stringArray0 = new String[3];
32:       stringArray0[0] = "-norm";
33:       stringArray0[1] = "v:~";
34:       stringArray0[2] = "v:~";
35:       try { 
36:         naiveBayesMultinomialText0.setOptions(stringArray0);
37:         fail("Expecting exception: NumberFormatException");
38:       
39:       } catch(NumberFormatException e) {
40:       }
41:   }
42: }
RegularFileObject[/tmp/EvoSuite_7_1575595383752/weka/classifiers/bayes/NaiveBayesMultinomialText_7_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 01:23:03 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.core.neighboursearch.balltrees.BottomUpConstructor$TempNode",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.CostMatrix",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.rules.PART",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.filters.SimpleFilter",
108:       "weka.filters.SimpleStreamFilter",
109:       "weka.estimators.IncrementalEstimator",
110:       "weka.estimators.Estimator$Builder",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.classifiers.trees.j48.C45ModelSelection",
113:       "weka.classifiers.functions.SGDText",
114:       "weka.core.RelationalLocator",
115:       "weka.core.Utils",
116:       "weka.classifiers.meta.AdaBoostM1",
117:       "weka.core.CustomDisplayStringProvider",
118:       "weka.core.tokenizers.Tokenizer",
119:       "weka.core.NormalizableDistance",
120:       "weka.core.NoSupportForMissingValuesException",
121:       "weka.classifiers.UpdateableClassifier",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
123:       "weka.core.MultiInstanceCapabilitiesHandler",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.core.AttributeLocator",
127:       "weka.core.BinarySparseInstance",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.classifiers.trees.j48.ModelSelection",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "weka.core.AdditionalMeasureProducer",
135:       "org.pentaho.packageManagement.PackageManager$1",
136:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
137:       "weka.core.Drawable",
138:       "weka.core.matrix.Matrix",
139:       "weka.core.CapabilitiesHandler",
140:       "weka.core.AbstractInstance",
141:       "weka.core.scripting.JythonObject",
142:       "weka.core.SelectedTag",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.classifiers.bayes.BayesNet",
145:       "weka.core.Version",
146:       "weka.filters.AllFilter",
147:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
148:       "weka.core.Tag",
149:       "weka.classifiers.IteratedSingleClassifierEnhancer",
150:       "weka.classifiers.trees.j48.BinC45ModelSelection",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.OptionHandler",
153:       "weka.core.WekaException",
154:       "weka.classifiers.trees.RandomForest",
155:       "weka.filters.StreamableFilter",
156:       "weka.core.Range",
157:       "weka.core.PartitionGenerator",
158:       "weka.core.scripting.JythonSerializableObject",
159:       "weka.classifiers.Classifier",
160:       "weka.core.Capabilities$Capability",
161:       "weka.core.SparseInstance",
162:       "org.pentaho.packageManagement.PackageManager",
163:       "weka.core.tokenizers.WordTokenizer",
164:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
173:       "weka.core.neighboursearch.LinearNNSearch",
174:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
175:       "weka.core.Option",
176:       "weka.classifiers.meta.CostSensitiveClassifier",
177:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
178:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
179:       "weka.estimators.KernelEstimator",
180:       "weka.filters.Sourcable",
181:       "weka.core.Attribute",
182:       "weka.core.Stopwords",
183:       "weka.core.tokenizers.AlphabeticTokenizer",
184:       "weka.core.FastVector",
185:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
186:       "weka.core.UnassignedDatasetException",
187:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
188:       "weka.classifiers.RandomizableClassifier",
189:       "weka.classifiers.SingleClassifierEnhancer",
190:       "weka.core.RevisionUtils",
191:       "weka.core.Instance",
192:       "weka.estimators.Estimator",
193:       "weka.core.ProtectedProperties",
194:       "weka.core.StringLocator",
195:       "weka.classifiers.bayes.net.ADNode",
196:       "weka.core.AttributeStats",
197:       "weka.filters.MultiFilter",
198:       "weka.core.WeightedInstancesHandler",
199:       "weka.core.neighboursearch.NearestNeighbourSearch",
200:       "weka.classifiers.trees.DecisionStump",
201:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
202:       "weka.core.Randomizable",
203:       "weka.classifiers.functions.SGD",
204:       "weka.core.EuclideanDistance",
205:       "weka.core.Instances",
206:       "weka.core.UnassignedClassException",
207:       "weka.classifiers.bayes.net.BIFReader",
208:       "weka.classifiers.bayes.net.ParentSet",
209:       "weka.classifiers.rules.ZeroR",
210:       "weka.core.stemmers.IteratedLovinsStemmer",
211:       "weka.core.stemmers.Stemming",
212:       "weka.core.TechnicalInformation",
213:       "weka.core.UnsupportedAttributeTypeException",
214:       "weka.classifiers.Sourcable",
215:       "weka.core.RevisionHandler",
216:       "weka.classifiers.evaluation.output.prediction.PlainText",
217:       "weka.core.xml.XMLSerialization",
218:       "weka.classifiers.xml.XMLClassifier",
219:       "weka.filters.Filter",
220:       "weka.classifiers.lazy.IBk",
221:       "weka.filters.supervised.attribute.Discretize"
222:     );
223:   } 
224: 
225:   private static void resetClasses() {
226:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding.class.getClassLoader()); 
227: 
228:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
229:       "weka.classifiers.AbstractClassifier",
230:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
231:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
232:       "weka.core.Capabilities$Capability",
233:       "weka.core.tokenizers.Tokenizer",
234:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
235:       "weka.core.tokenizers.WordTokenizer",
236:       "weka.core.stemmers.NullStemmer",
237:       "weka.classifiers.Evaluation",
238:       "weka.core.Utils",
239:       "weka.core.Option",
240:       "weka.core.Capabilities",
241:       "org.pentaho.packageManagement.PackageManager",
242:       "org.pentaho.packageManagement.DefaultPackageManager",
243:       "weka.core.Version",
244:       "weka.core.Environment",
245:       "weka.core.WekaPackageManager",
246:       "weka.core.TestInstances",
247:       "weka.core.Attribute",
248:       "weka.core.ProtectedProperties",
249:       "weka.core.Instances",
250:       "weka.core.AbstractInstance",
251:       "weka.core.DenseInstance",
252:       "weka.core.neighboursearch.balltrees.BallNode",
253:       "weka.classifiers.RandomizableClassifier",
254:       "weka.core.Tag",
255:       "weka.classifiers.functions.SGDText",
256:       "weka.core.SerializedObject",
257:       "weka.core.SparseInstance",
258:       "weka.core.BinarySparseInstance",
259:       "weka.core.UnassignedDatasetException",
260:       "weka.core.neighboursearch.NearestNeighbourSearch",
261:       "weka.core.neighboursearch.KDTree",
262:       "weka.core.NormalizableDistance",
263:       "weka.core.EuclideanDistance",
264:       "weka.core.Range",
265:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
266:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
267:       "weka.filters.Filter",
268:       "weka.filters.supervised.attribute.Discretize",
269:       "weka.core.neighboursearch.CoverTree",
270:       "weka.core.stemmers.SnowballStemmer",
271:       "weka.core.RevisionUtils",
272:       "weka.classifiers.functions.supportVector.Kernel",
273:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
274:       "weka.attributeSelection.ASEvaluation",
275:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
276:       "weka.attributeSelection.PrincipalComponents",
277:       "weka.core.converters.ArffLoader$ArffReader",
278:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
279:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
280:       "weka.core.tokenizers.AlphabeticTokenizer",
281:       "weka.classifiers.SingleClassifierEnhancer",
282:       "weka.classifiers.misc.InputMappedClassifier",
283:       "weka.classifiers.rules.ZeroR",
284:       "weka.classifiers.functions.LinearRegression",
285:       "weka.classifiers.bayes.BayesNet",
286:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
287:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
288:       "weka.classifiers.bayes.net.search.local.K2",
289:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
290:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
291:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
292:       "weka.classifiers.meta.CostSensitiveClassifier",
293:       "weka.classifiers.CostMatrix",
294:       "weka.core.stemmers.Stemming",
295:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
296:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
297:       "weka.core.neighboursearch.balltrees.BallSplitter",
298:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
299:       "weka.core.stemmers.LovinsStemmer",
300:       "weka.core.stemmers.IteratedLovinsStemmer",
301:       "weka.classifiers.lazy.IBk",
302:       "weka.core.neighboursearch.LinearNNSearch",
303:       "weka.classifiers.IteratedSingleClassifierEnhancer",
304:       "weka.classifiers.meta.AdditiveRegression",
305:       "weka.classifiers.trees.DecisionStump",
306:       "weka.classifiers.functions.GaussianProcesses",
307:       "weka.classifiers.functions.supportVector.CachedKernel",
308:       "weka.classifiers.functions.supportVector.PolyKernel",
309:       "weka.classifiers.MultipleClassifiersCombiner",
310:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
311:       "weka.classifiers.meta.MultiScheme",
312:       "weka.core.WekaException",
313:       "weka.core.UnsupportedAttributeTypeException",
314:       "weka.core.neighboursearch.BallTree",
315:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
316:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
317:       "weka.classifiers.bayes.NaiveBayesMultinomial",
318:       "weka.core.Stopwords",
319:       "weka.classifiers.trees.J48",
320:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
321:       "weka.classifiers.meta.AdaBoostM1",
322:       "weka.classifiers.bayes.NaiveBayes",
323:       "weka.core.TechnicalInformation",
324:       "weka.core.TechnicalInformation$Type",
325:       "weka.core.TechnicalInformation$Field",
326:       "weka.core.matrix.Matrix",
327:       "weka.core.tokenizers.NGramTokenizer",
328:       "weka.core.WekaEnumeration",
329:       "weka.core.Attribute$1",
330:       "weka.classifiers.meta.ClassificationViaRegression",
331:       "weka.classifiers.trees.m5.M5Base",
332:       "weka.classifiers.trees.M5P",
333:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
334:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
335:       "weka.classifiers.meta.RandomSubSpace",
336:       "weka.classifiers.trees.REPTree",
337:       "weka.classifiers.rules.M5Rules",
338:       "weka.core.Javadoc",
339:       "weka.core.TechnicalInformationHandlerJavadoc",
340:       "weka.core.OptionHandlerJavadoc",
341:       "weka.classifiers.functions.SMO",
342:       "weka.classifiers.misc.SerializedClassifier",
343:       "weka.core.FindWithCapabilities",
344:       "weka.core.SingleIndex",
345:       "weka.attributeSelection.GainRatioAttributeEval",
346:       "weka.classifiers.bayes.net.BIFReader",
347:       "weka.attributeSelection.WrapperSubsetEval",
348:       "weka.classifiers.functions.supportVector.StringKernel",
349:       "weka.core.AttributeStats",
350:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
351:       "weka.classifiers.bayes.NaiveBayesUpdateable",
352:       "weka.classifiers.trees.RandomTree",
353:       "weka.classifiers.rules.DecisionTable",
354:       "weka.attributeSelection.ASSearch",
355:       "weka.attributeSelection.BestFirst",
356:       "weka.classifiers.rules.OneR",
357:       "weka.classifiers.meta.FilteredClassifier",
358:       "weka.filters.supervised.attribute.AttributeSelection",
359:       "weka.attributeSelection.AttributeSelection",
360:       "weka.attributeSelection.CfsSubsetEval",
361:       "weka.attributeSelection.GreedyStepwise",
362:       "weka.core.SelectedTag",
363:       "weka.estimators.Estimator",
364:       "weka.estimators.NormalEstimator",
365:       "weka.core.UnassignedClassException",
366:       "weka.classifiers.functions.SMOreg",
367:       "weka.classifiers.functions.supportVector.RegOptimizer",
368:       "weka.classifiers.functions.supportVector.RegSMO",
369:       "weka.classifiers.functions.supportVector.RegSMOImproved",
370:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
371:       "weka.classifiers.meta.RegressionByDiscretization",
372:       "weka.filters.unsupervised.attribute.Discretize",
373:       "weka.classifiers.trees.j48.ClassifierTree",
374:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
375:       "weka.classifiers.rules.PART",
376:       "weka.classifiers.rules.part.MakeDecList",
377:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
378:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
379:       "weka.classifiers.meta.Stacking",
380:       "weka.core.ChebyshevDistance",
381:       "weka.filters.AllFilter",
382:       "weka.classifiers.functions.SimpleLinearRegression",
383:       "weka.classifiers.functions.supportVector.Puk",
384:       "weka.classifiers.trees.RandomForest",
385:       "weka.classifiers.lazy.LWL",
386:       "weka.attributeSelection.ReliefFAttributeEval",
387:       "weka.core.ClassDiscovery",
388:       "weka.classifiers.meta.RandomCommittee",
389:       "weka.classifiers.functions.SimpleLogistic",
390:       "weka.attributeSelection.InfoGainAttributeEval",
391:       "weka.classifiers.functions.VotedPerceptron",
392:       "weka.estimators.DiscreteEstimator",
393:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
394:       "weka.classifiers.meta.MultiClassClassifier",
395:       "weka.classifiers.functions.Logistic",
396:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
397:       "weka.core.SerializationHelper",
398:       "weka.filters.SimpleFilter",
399:       "weka.filters.SimpleStreamFilter",
400:       "weka.filters.MultiFilter",
401:       "weka.classifiers.lazy.KStar",
402:       "weka.core.ListOptions",
403:       "weka.estimators.MahalanobisEstimator",
404:       "weka.estimators.KernelEstimator",
405:       "weka.attributeSelection.CorrelationAttributeEval",
406:       "weka.classifiers.meta.CVParameterSelection",
407:       "weka.core.FastVector",
408:       "weka.classifiers.trees.LMT",
409:       "weka.classifiers.functions.SGD",
410:       "weka.classifiers.meta.Vote",
411:       "weka.classifiers.rules.JRip",
412:       "weka.classifiers.meta.Bagging",
413:       "weka.classifiers.meta.LogitBoost",
414:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
415:       "weka.attributeSelection.OneRAttributeEval"
416:     );
417:   }
418: }

[MASTER] 01:23:03.810 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
SGDText sGDText0 = new SGDText();
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
String[] stringArray0 = new String[3];
stringArray0[0] = "-norm";
stringArray0[1] = "v:~";
stringArray0[2] = "v:~";
naiveBayesMultinomialText0.setOptions(stringArray0);

[MASTER] 01:23:04.501 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_19_1575595384461/weka/classifiers/bayes/NaiveBayesMultinomialText_19_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_19_1575595384461/weka/classifiers/bayes/NaiveBayesMultinomialText_19_tmp__ESTest_scaffolding.java]]
[MASTER] 01:23:04.501 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:23:04.501 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:23:04.502 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 41
[MASTER] 01:23:04.502 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 41
[MASTER] 01:23:04.502 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 43
[MASTER] 01:23:04.502 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 43
[MASTER] 01:23:04.502 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 01:23:04.503 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_19_1575595384461/weka/classifiers/bayes/NaiveBayesMultinomialText_19_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 01:23:04 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.classifiers.functions.SGDText;
16: import weka.classifiers.rules.PART;
17: import weka.classifiers.trees.RandomForest;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_19_tmp__ESTest extends NaiveBayesMultinomialText_19_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=2.4241710186205303
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       SGDText sGDText0 = new SGDText();
30:       sGDText0.getCapabilities();
31:       RandomForest randomForest0 = new RandomForest();
32:       String[] stringArray0 = new String[7];
33:       stringArray0[0] = "-norm";
34:       stringArray0[1] = "";
35:       stringArray0[2] = "weka/core/Capabilities.props";
36:       stringArray0[3] = "-norm";
37:       stringArray0[4] = "-norm";
38:       stringArray0[5] = "weka/core/Capabilities.props";
39:       stringArray0[6] = "-norm";
40:       naiveBayesMultinomialText0.setOptions(stringArray0);
41:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
42:       Integer integer0 = new Integer(3114);
43:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
44:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = naiveBayesMultinomialText0.m_inputVector;
45:       PART pART0 = new PART();
46:       naiveBayesMultinomialText0.pruneDictionary();
47:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
48:       assertFalse(naiveBayesMultinomialText0.getLowercaseTokens());
49:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
50:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
51:       assertFalse(naiveBayesMultinomialText0.getUseStopList());
52:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
53:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
54:   }
55: }
RegularFileObject[/tmp/EvoSuite_19_1575595384461/weka/classifiers/bayes/NaiveBayesMultinomialText_19_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 01:23:04 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_19_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_19_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.core.neighboursearch.balltrees.BottomUpConstructor$TempNode",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.CostMatrix",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.rules.PART",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.filters.SimpleFilter",
108:       "weka.filters.SimpleStreamFilter",
109:       "weka.estimators.IncrementalEstimator",
110:       "weka.estimators.Estimator$Builder",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.classifiers.trees.j48.C45ModelSelection",
113:       "weka.classifiers.functions.SGDText",
114:       "weka.core.RelationalLocator",
115:       "weka.core.Utils",
116:       "weka.classifiers.meta.AdaBoostM1",
117:       "weka.core.CustomDisplayStringProvider",
118:       "weka.core.tokenizers.Tokenizer",
119:       "weka.core.NormalizableDistance",
120:       "weka.core.NoSupportForMissingValuesException",
121:       "weka.classifiers.UpdateableClassifier",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
123:       "weka.core.MultiInstanceCapabilitiesHandler",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.core.AttributeLocator",
127:       "weka.core.BinarySparseInstance",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.classifiers.trees.j48.ModelSelection",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "weka.core.AdditionalMeasureProducer",
135:       "org.pentaho.packageManagement.PackageManager$1",
136:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
137:       "weka.core.Drawable",
138:       "weka.core.matrix.Matrix",
139:       "weka.core.CapabilitiesHandler",
140:       "weka.core.AbstractInstance",
141:       "weka.core.scripting.JythonObject",
142:       "weka.core.SelectedTag",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.classifiers.bayes.BayesNet",
145:       "weka.core.Version",
146:       "weka.filters.AllFilter",
147:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
148:       "weka.core.Tag",
149:       "weka.classifiers.IteratedSingleClassifierEnhancer",
150:       "weka.classifiers.trees.j48.BinC45ModelSelection",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.OptionHandler",
153:       "weka.core.WekaException",
154:       "weka.classifiers.trees.RandomForest",
155:       "weka.filters.StreamableFilter",
156:       "weka.core.Range",
157:       "weka.core.PartitionGenerator",
158:       "weka.core.scripting.JythonSerializableObject",
159:       "weka.classifiers.Classifier",
160:       "weka.core.Capabilities$Capability",
161:       "weka.core.SparseInstance",
162:       "org.pentaho.packageManagement.PackageManager",
163:       "weka.core.tokenizers.WordTokenizer",
164:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
173:       "weka.core.neighboursearch.LinearNNSearch",
174:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
175:       "weka.core.Option",
176:       "weka.classifiers.meta.CostSensitiveClassifier",
177:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
178:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
179:       "weka.estimators.KernelEstimator",
180:       "weka.filters.Sourcable",
181:       "weka.core.Attribute",
182:       "weka.core.Stopwords",
183:       "weka.core.tokenizers.AlphabeticTokenizer",
184:       "weka.core.FastVector",
185:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
186:       "weka.core.UnassignedDatasetException",
187:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
188:       "weka.classifiers.RandomizableClassifier",
189:       "weka.classifiers.SingleClassifierEnhancer",
190:       "weka.core.RevisionUtils",
191:       "weka.core.Instance",
192:       "weka.estimators.Estimator",
193:       "weka.core.ProtectedProperties",
194:       "weka.core.StringLocator",
195:       "weka.classifiers.bayes.net.ADNode",
196:       "weka.core.AttributeStats",
197:       "weka.filters.MultiFilter",
198:       "weka.core.WeightedInstancesHandler",
199:       "weka.core.neighboursearch.NearestNeighbourSearch",
200:       "weka.classifiers.trees.DecisionStump",
201:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
202:       "weka.core.Randomizable",
203:       "weka.classifiers.functions.SGD",
204:       "weka.core.EuclideanDistance",
205:       "weka.core.Instances",
206:       "weka.core.UnassignedClassException",
207:       "weka.classifiers.bayes.net.BIFReader",
208:       "weka.classifiers.bayes.net.ParentSet",
209:       "weka.classifiers.rules.ZeroR",
210:       "weka.core.stemmers.IteratedLovinsStemmer",
211:       "weka.core.stemmers.Stemming",
212:       "weka.core.TechnicalInformation",
213:       "weka.core.UnsupportedAttributeTypeException",
214:       "weka.classifiers.Sourcable",
215:       "weka.core.RevisionHandler",
216:       "weka.classifiers.evaluation.output.prediction.PlainText",
217:       "weka.core.xml.XMLSerialization",
218:       "weka.classifiers.xml.XMLClassifier",
219:       "weka.filters.Filter",
220:       "weka.classifiers.lazy.IBk",
221:       "weka.filters.supervised.attribute.Discretize"
222:     );
223:   } 
224: 
225:   private static void resetClasses() {
226:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_19_tmp__ESTest_scaffolding.class.getClassLoader()); 
227: 
228:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
229:       "weka.classifiers.AbstractClassifier",
230:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
231:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
232:       "weka.core.Capabilities$Capability",
233:       "weka.core.tokenizers.Tokenizer",
234:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
235:       "weka.core.tokenizers.WordTokenizer",
236:       "weka.core.stemmers.NullStemmer",
237:       "weka.classifiers.Evaluation",
238:       "weka.core.Utils",
239:       "weka.core.Option",
240:       "weka.core.Capabilities",
241:       "org.pentaho.packageManagement.PackageManager",
242:       "org.pentaho.packageManagement.DefaultPackageManager",
243:       "weka.core.Version",
244:       "weka.core.Environment",
245:       "weka.core.WekaPackageManager",
246:       "weka.core.TestInstances",
247:       "weka.core.Attribute",
248:       "weka.core.ProtectedProperties",
249:       "weka.core.Instances",
250:       "weka.core.AbstractInstance",
251:       "weka.core.DenseInstance",
252:       "weka.core.neighboursearch.balltrees.BallNode",
253:       "weka.classifiers.RandomizableClassifier",
254:       "weka.core.Tag",
255:       "weka.classifiers.functions.SGDText",
256:       "weka.core.SerializedObject",
257:       "weka.core.SparseInstance",
258:       "weka.core.BinarySparseInstance",
259:       "weka.core.UnassignedDatasetException",
260:       "weka.core.neighboursearch.NearestNeighbourSearch",
261:       "weka.core.neighboursearch.KDTree",
262:       "weka.core.NormalizableDistance",
263:       "weka.core.EuclideanDistance",
264:       "weka.core.Range",
265:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
266:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
267:       "weka.filters.Filter",
268:       "weka.filters.supervised.attribute.Discretize",
269:       "weka.core.neighboursearch.CoverTree",
270:       "weka.core.stemmers.SnowballStemmer",
271:       "weka.core.RevisionUtils",
272:       "weka.classifiers.functions.supportVector.Kernel",
273:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
274:       "weka.attributeSelection.ASEvaluation",
275:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
276:       "weka.attributeSelection.PrincipalComponents",
277:       "weka.core.converters.ArffLoader$ArffReader",
278:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
279:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
280:       "weka.core.tokenizers.AlphabeticTokenizer",
281:       "weka.classifiers.SingleClassifierEnhancer",
282:       "weka.classifiers.misc.InputMappedClassifier",
283:       "weka.classifiers.rules.ZeroR",
284:       "weka.classifiers.functions.LinearRegression",
285:       "weka.classifiers.bayes.BayesNet",
286:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
287:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
288:       "weka.classifiers.bayes.net.search.local.K2",
289:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
290:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
291:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
292:       "weka.classifiers.meta.CostSensitiveClassifier",
293:       "weka.classifiers.CostMatrix",
294:       "weka.core.stemmers.Stemming",
295:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
296:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
297:       "weka.core.neighboursearch.balltrees.BallSplitter",
298:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
299:       "weka.core.stemmers.LovinsStemmer",
300:       "weka.core.stemmers.IteratedLovinsStemmer",
301:       "weka.classifiers.lazy.IBk",
302:       "weka.core.neighboursearch.LinearNNSearch",
303:       "weka.classifiers.IteratedSingleClassifierEnhancer",
304:       "weka.classifiers.meta.AdditiveRegression",
305:       "weka.classifiers.trees.DecisionStump",
306:       "weka.classifiers.functions.GaussianProcesses",
307:       "weka.classifiers.functions.supportVector.CachedKernel",
308:       "weka.classifiers.functions.supportVector.PolyKernel",
309:       "weka.classifiers.MultipleClassifiersCombiner",
310:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
311:       "weka.classifiers.meta.MultiScheme",
312:       "weka.core.WekaException",
313:       "weka.core.UnsupportedAttributeTypeException",
314:       "weka.core.neighboursearch.BallTree",
315:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
316:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
317:       "weka.classifiers.bayes.NaiveBayesMultinomial",
318:       "weka.core.Stopwords",
319:       "weka.classifiers.trees.J48",
320:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
321:       "weka.classifiers.meta.AdaBoostM1",
322:       "weka.classifiers.bayes.NaiveBayes",
323:       "weka.core.TechnicalInformation",
324:       "weka.core.TechnicalInformation$Type",
325:       "weka.core.TechnicalInformation$Field",
326:       "weka.core.matrix.Matrix",
327:       "weka.core.tokenizers.NGramTokenizer",
328:       "weka.core.WekaEnumeration",
329:       "weka.core.Attribute$1",
330:       "weka.classifiers.meta.ClassificationViaRegression",
331:       "weka.classifiers.trees.m5.M5Base",
332:       "weka.classifiers.trees.M5P",
333:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
334:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
335:       "weka.classifiers.meta.RandomSubSpace",
336:       "weka.classifiers.trees.REPTree",
337:       "weka.classifiers.rules.M5Rules",
338:       "weka.core.Javadoc",
339:       "weka.core.TechnicalInformationHandlerJavadoc",
340:       "weka.core.OptionHandlerJavadoc",
341:       "weka.classifiers.functions.SMO",
342:       "weka.classifiers.misc.SerializedClassifier",
343:       "weka.core.FindWithCapabilities",
344:       "weka.core.SingleIndex",
345:       "weka.attributeSelection.GainRatioAttributeEval",
346:       "weka.classifiers.bayes.net.BIFReader",
347:       "weka.attributeSelection.WrapperSubsetEval",
348:       "weka.classifiers.functions.supportVector.StringKernel",
349:       "weka.core.AttributeStats",
350:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
351:       "weka.classifiers.bayes.NaiveBayesUpdateable",
352:       "weka.classifiers.trees.RandomTree",
353:       "weka.classifiers.rules.DecisionTable",
354:       "weka.attributeSelection.ASSearch",
355:       "weka.attributeSelection.BestFirst",
356:       "weka.classifiers.rules.OneR",
357:       "weka.classifiers.meta.FilteredClassifier",
358:       "weka.filters.supervised.attribute.AttributeSelection",
359:       "weka.attributeSelection.AttributeSelection",
360:       "weka.attributeSelection.CfsSubsetEval",
361:       "weka.attributeSelection.GreedyStepwise",
362:       "weka.core.SelectedTag",
363:       "weka.estimators.Estimator",
364:       "weka.estimators.NormalEstimator",
365:       "weka.core.UnassignedClassException",
366:       "weka.classifiers.functions.SMOreg",
367:       "weka.classifiers.functions.supportVector.RegOptimizer",
368:       "weka.classifiers.functions.supportVector.RegSMO",
369:       "weka.classifiers.functions.supportVector.RegSMOImproved",
370:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
371:       "weka.classifiers.meta.RegressionByDiscretization",
372:       "weka.filters.unsupervised.attribute.Discretize",
373:       "weka.classifiers.trees.j48.ClassifierTree",
374:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
375:       "weka.classifiers.rules.PART",
376:       "weka.classifiers.rules.part.MakeDecList",
377:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
378:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
379:       "weka.classifiers.meta.Stacking",
380:       "weka.core.ChebyshevDistance",
381:       "weka.filters.AllFilter",
382:       "weka.classifiers.functions.SimpleLinearRegression",
383:       "weka.classifiers.functions.supportVector.Puk",
384:       "weka.classifiers.trees.RandomForest",
385:       "weka.classifiers.lazy.LWL",
386:       "weka.attributeSelection.ReliefFAttributeEval",
387:       "weka.core.ClassDiscovery",
388:       "weka.classifiers.meta.RandomCommittee",
389:       "weka.classifiers.functions.SimpleLogistic",
390:       "weka.attributeSelection.InfoGainAttributeEval",
391:       "weka.classifiers.functions.VotedPerceptron",
392:       "weka.estimators.DiscreteEstimator",
393:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
394:       "weka.classifiers.meta.MultiClassClassifier",
395:       "weka.classifiers.functions.Logistic",
396:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
397:       "weka.core.SerializationHelper",
398:       "weka.filters.SimpleFilter",
399:       "weka.filters.SimpleStreamFilter",
400:       "weka.filters.MultiFilter",
401:       "weka.classifiers.lazy.KStar",
402:       "weka.core.ListOptions",
403:       "weka.estimators.MahalanobisEstimator",
404:       "weka.estimators.KernelEstimator",
405:       "weka.attributeSelection.CorrelationAttributeEval",
406:       "weka.classifiers.meta.CVParameterSelection",
407:       "weka.core.FastVector",
408:       "weka.classifiers.trees.LMT",
409:       "weka.classifiers.functions.SGD",
410:       "weka.classifiers.meta.Vote",
411:       "weka.classifiers.rules.JRip",
412:       "weka.classifiers.meta.Bagging",
413:       "weka.classifiers.meta.LogitBoost",
414:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
415:       "weka.attributeSelection.OneRAttributeEval"
416:     );
417:   }
418: }

[MASTER] 01:23:04.503 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
SGDText sGDText0 = new SGDText();
sGDText0.getCapabilities();
RandomForest randomForest0 = new RandomForest();
String[] stringArray0 = new String[7];
stringArray0[0] = "-norm";
stringArray0[1] = "";
stringArray0[2] = "weka/core/Capabilities.props";
stringArray0[3] = "-norm";
stringArray0[4] = "-norm";
stringArray0[5] = "weka/core/Capabilities.props";
stringArray0[6] = "-norm";
naiveBayesMultinomialText0.setOptions(stringArray0);
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = new Integer(3114);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = naiveBayesMultinomialText0.m_inputVector;
PART pART0 = new PART();
naiveBayesMultinomialText0.pruneDictionary();
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getLowercaseTokens());
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertFalse(naiveBayesMultinomialText0.getUseStopList());
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);


[MASTER] 01:23:05.041 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_32_1575595385005/weka/classifiers/bayes/NaiveBayesMultinomialText_32_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_32_1575595385005/weka/classifiers/bayes/NaiveBayesMultinomialText_32_tmp__ESTest_scaffolding.java]]
[MASTER] 01:23:05.041 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:23:05.041 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:23:05.041 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 01:23:05.041 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 01:23:05.042 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 01:23:05.042 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 01:23:05.042 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 01:23:05.043 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_32_1575595385005/weka/classifiers/bayes/NaiveBayesMultinomialText_32_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 01:23:05 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.classifiers.rules.PART;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_32_tmp__ESTest extends NaiveBayesMultinomialText_32_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=1.543056733112554
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       naiveBayesMultinomialText0.setPeriodicPruning(22);
29:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
30:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
31:       Integer integer0 = new Integer((-907));
32:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
33:       linkedHashMap0.put(integer0, linkedHashMap1);
34:       PART pART0 = new PART();
35:       naiveBayesMultinomialText0.pruneDictionary();
36:       int int0 = naiveBayesMultinomialText0.getPeriodicPruning();
37:       assertEquals(22, int0);
38:   }
39: }
RegularFileObject[/tmp/EvoSuite_32_1575595385005/weka/classifiers/bayes/NaiveBayesMultinomialText_32_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 01:23:05 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_32_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_32_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.core.neighboursearch.balltrees.BottomUpConstructor$TempNode",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.CostMatrix",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.rules.PART",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.filters.SimpleFilter",
108:       "weka.filters.SimpleStreamFilter",
109:       "weka.estimators.IncrementalEstimator",
110:       "weka.estimators.Estimator$Builder",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.classifiers.trees.j48.C45ModelSelection",
113:       "weka.classifiers.functions.SGDText",
114:       "weka.core.RelationalLocator",
115:       "weka.core.Utils",
116:       "weka.classifiers.meta.AdaBoostM1",
117:       "weka.core.CustomDisplayStringProvider",
118:       "weka.core.tokenizers.Tokenizer",
119:       "weka.core.NormalizableDistance",
120:       "weka.core.NoSupportForMissingValuesException",
121:       "weka.classifiers.UpdateableClassifier",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
123:       "weka.core.MultiInstanceCapabilitiesHandler",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.core.AttributeLocator",
127:       "weka.core.BinarySparseInstance",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.classifiers.trees.j48.ModelSelection",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "weka.core.AdditionalMeasureProducer",
135:       "org.pentaho.packageManagement.PackageManager$1",
136:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
137:       "weka.core.Drawable",
138:       "weka.core.matrix.Matrix",
139:       "weka.core.CapabilitiesHandler",
140:       "weka.core.AbstractInstance",
141:       "weka.core.scripting.JythonObject",
142:       "weka.core.SelectedTag",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.classifiers.bayes.BayesNet",
145:       "weka.core.Version",
146:       "weka.filters.AllFilter",
147:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
148:       "weka.core.Tag",
149:       "weka.classifiers.IteratedSingleClassifierEnhancer",
150:       "weka.classifiers.trees.j48.BinC45ModelSelection",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.OptionHandler",
153:       "weka.core.WekaException",
154:       "weka.classifiers.trees.RandomForest",
155:       "weka.filters.StreamableFilter",
156:       "weka.core.Range",
157:       "weka.core.PartitionGenerator",
158:       "weka.core.scripting.JythonSerializableObject",
159:       "weka.classifiers.Classifier",
160:       "weka.core.Capabilities$Capability",
161:       "weka.core.SparseInstance",
162:       "org.pentaho.packageManagement.PackageManager",
163:       "weka.core.tokenizers.WordTokenizer",
164:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
173:       "weka.core.neighboursearch.LinearNNSearch",
174:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
175:       "weka.core.Option",
176:       "weka.classifiers.meta.CostSensitiveClassifier",
177:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
178:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
179:       "weka.estimators.KernelEstimator",
180:       "weka.filters.Sourcable",
181:       "weka.core.Attribute",
182:       "weka.core.Stopwords",
183:       "weka.core.tokenizers.AlphabeticTokenizer",
184:       "weka.core.FastVector",
185:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
186:       "weka.core.UnassignedDatasetException",
187:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
188:       "weka.classifiers.RandomizableClassifier",
189:       "weka.classifiers.SingleClassifierEnhancer",
190:       "weka.core.RevisionUtils",
191:       "weka.core.Instance",
192:       "weka.estimators.Estimator",
193:       "weka.core.ProtectedProperties",
194:       "weka.core.StringLocator",
195:       "weka.classifiers.bayes.net.ADNode",
196:       "weka.core.AttributeStats",
197:       "weka.filters.MultiFilter",
198:       "weka.core.WeightedInstancesHandler",
199:       "weka.core.neighboursearch.NearestNeighbourSearch",
200:       "weka.classifiers.trees.DecisionStump",
201:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
202:       "weka.core.Randomizable",
203:       "weka.classifiers.functions.SGD",
204:       "weka.core.EuclideanDistance",
205:       "weka.core.Instances",
206:       "weka.core.UnassignedClassException",
207:       "weka.classifiers.bayes.net.BIFReader",
208:       "weka.classifiers.bayes.net.ParentSet",
209:       "weka.classifiers.rules.ZeroR",
210:       "weka.core.stemmers.IteratedLovinsStemmer",
211:       "weka.core.stemmers.Stemming",
212:       "weka.core.TechnicalInformation",
213:       "weka.core.UnsupportedAttributeTypeException",
214:       "weka.classifiers.Sourcable",
215:       "weka.core.RevisionHandler",
216:       "weka.classifiers.evaluation.output.prediction.PlainText",
217:       "weka.core.xml.XMLSerialization",
218:       "weka.classifiers.xml.XMLClassifier",
219:       "weka.filters.Filter",
220:       "weka.classifiers.lazy.IBk",
221:       "weka.filters.supervised.attribute.Discretize"
222:     );
223:   } 
224: 
225:   private static void resetClasses() {
226:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_32_tmp__ESTest_scaffolding.class.getClassLoader()); 
227: 
228:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
229:       "weka.classifiers.AbstractClassifier",
230:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
231:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
232:       "weka.core.Capabilities$Capability",
233:       "weka.core.tokenizers.Tokenizer",
234:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
235:       "weka.core.tokenizers.WordTokenizer",
236:       "weka.core.stemmers.NullStemmer",
237:       "weka.classifiers.Evaluation",
238:       "weka.core.Utils",
239:       "weka.core.Option",
240:       "weka.core.Capabilities",
241:       "org.pentaho.packageManagement.PackageManager",
242:       "org.pentaho.packageManagement.DefaultPackageManager",
243:       "weka.core.Version",
244:       "weka.core.Environment",
245:       "weka.core.WekaPackageManager",
246:       "weka.core.TestInstances",
247:       "weka.core.Attribute",
248:       "weka.core.ProtectedProperties",
249:       "weka.core.Instances",
250:       "weka.core.AbstractInstance",
251:       "weka.core.DenseInstance",
252:       "weka.core.neighboursearch.balltrees.BallNode",
253:       "weka.classifiers.RandomizableClassifier",
254:       "weka.core.Tag",
255:       "weka.classifiers.functions.SGDText",
256:       "weka.core.SerializedObject",
257:       "weka.core.SparseInstance",
258:       "weka.core.BinarySparseInstance",
259:       "weka.core.UnassignedDatasetException",
260:       "weka.core.neighboursearch.NearestNeighbourSearch",
261:       "weka.core.neighboursearch.KDTree",
262:       "weka.core.NormalizableDistance",
263:       "weka.core.EuclideanDistance",
264:       "weka.core.Range",
265:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
266:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
267:       "weka.filters.Filter",
268:       "weka.filters.supervised.attribute.Discretize",
269:       "weka.core.neighboursearch.CoverTree",
270:       "weka.core.stemmers.SnowballStemmer",
271:       "weka.core.RevisionUtils",
272:       "weka.classifiers.functions.supportVector.Kernel",
273:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
274:       "weka.attributeSelection.ASEvaluation",
275:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
276:       "weka.attributeSelection.PrincipalComponents",
277:       "weka.core.converters.ArffLoader$ArffReader",
278:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
279:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
280:       "weka.core.tokenizers.AlphabeticTokenizer",
281:       "weka.classifiers.SingleClassifierEnhancer",
282:       "weka.classifiers.misc.InputMappedClassifier",
283:       "weka.classifiers.rules.ZeroR",
284:       "weka.classifiers.functions.LinearRegression",
285:       "weka.classifiers.bayes.BayesNet",
286:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
287:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
288:       "weka.classifiers.bayes.net.search.local.K2",
289:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
290:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
291:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
292:       "weka.classifiers.meta.CostSensitiveClassifier",
293:       "weka.classifiers.CostMatrix",
294:       "weka.core.stemmers.Stemming",
295:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
296:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
297:       "weka.core.neighboursearch.balltrees.BallSplitter",
298:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
299:       "weka.core.stemmers.LovinsStemmer",
300:       "weka.core.stemmers.IteratedLovinsStemmer",
301:       "weka.classifiers.lazy.IBk",
302:       "weka.core.neighboursearch.LinearNNSearch",
303:       "weka.classifiers.IteratedSingleClassifierEnhancer",
304:       "weka.classifiers.meta.AdditiveRegression",
305:       "weka.classifiers.trees.DecisionStump",
306:       "weka.classifiers.functions.GaussianProcesses",
307:       "weka.classifiers.functions.supportVector.CachedKernel",
308:       "weka.classifiers.functions.supportVector.PolyKernel",
309:       "weka.classifiers.MultipleClassifiersCombiner",
310:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
311:       "weka.classifiers.meta.MultiScheme",
312:       "weka.core.WekaException",
313:       "weka.core.UnsupportedAttributeTypeException",
314:       "weka.core.neighboursearch.BallTree",
315:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
316:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
317:       "weka.classifiers.bayes.NaiveBayesMultinomial",
318:       "weka.core.Stopwords",
319:       "weka.classifiers.trees.J48",
320:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
321:       "weka.classifiers.meta.AdaBoostM1",
322:       "weka.classifiers.bayes.NaiveBayes",
323:       "weka.core.TechnicalInformation",
324:       "weka.core.TechnicalInformation$Type",
325:       "weka.core.TechnicalInformation$Field",
326:       "weka.core.matrix.Matrix",
327:       "weka.core.tokenizers.NGramTokenizer",
328:       "weka.core.WekaEnumeration",
329:       "weka.core.Attribute$1",
330:       "weka.classifiers.meta.ClassificationViaRegression",
331:       "weka.classifiers.trees.m5.M5Base",
332:       "weka.classifiers.trees.M5P",
333:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
334:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
335:       "weka.classifiers.meta.RandomSubSpace",
336:       "weka.classifiers.trees.REPTree",
337:       "weka.classifiers.rules.M5Rules",
338:       "weka.core.Javadoc",
339:       "weka.core.TechnicalInformationHandlerJavadoc",
340:       "weka.core.OptionHandlerJavadoc",
341:       "weka.classifiers.functions.SMO",
342:       "weka.classifiers.misc.SerializedClassifier",
343:       "weka.core.FindWithCapabilities",
344:       "weka.core.SingleIndex",
345:       "weka.attributeSelection.GainRatioAttributeEval",
346:       "weka.classifiers.bayes.net.BIFReader",
347:       "weka.attributeSelection.WrapperSubsetEval",
348:       "weka.classifiers.functions.supportVector.StringKernel",
349:       "weka.core.AttributeStats",
350:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
351:       "weka.classifiers.bayes.NaiveBayesUpdateable",
352:       "weka.classifiers.trees.RandomTree",
353:       "weka.classifiers.rules.DecisionTable",
354:       "weka.attributeSelection.ASSearch",
355:       "weka.attributeSelection.BestFirst",
356:       "weka.classifiers.rules.OneR",
357:       "weka.classifiers.meta.FilteredClassifier",
358:       "weka.filters.supervised.attribute.AttributeSelection",
359:       "weka.attributeSelection.AttributeSelection",
360:       "weka.attributeSelection.CfsSubsetEval",
361:       "weka.attributeSelection.GreedyStepwise",
362:       "weka.core.SelectedTag",
363:       "weka.estimators.Estimator",
364:       "weka.estimators.NormalEstimator",
365:       "weka.core.UnassignedClassException",
366:       "weka.classifiers.functions.SMOreg",
367:       "weka.classifiers.functions.supportVector.RegOptimizer",
368:       "weka.classifiers.functions.supportVector.RegSMO",
369:       "weka.classifiers.functions.supportVector.RegSMOImproved",
370:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
371:       "weka.classifiers.meta.RegressionByDiscretization",
372:       "weka.filters.unsupervised.attribute.Discretize",
373:       "weka.classifiers.trees.j48.ClassifierTree",
374:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
375:       "weka.classifiers.rules.PART",
376:       "weka.classifiers.rules.part.MakeDecList",
377:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
378:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
379:       "weka.classifiers.meta.Stacking",
380:       "weka.core.ChebyshevDistance",
381:       "weka.filters.AllFilter",
382:       "weka.classifiers.functions.SimpleLinearRegression",
383:       "weka.classifiers.functions.supportVector.Puk",
384:       "weka.classifiers.trees.RandomForest",
385:       "weka.classifiers.lazy.LWL",
386:       "weka.attributeSelection.ReliefFAttributeEval",
387:       "weka.core.ClassDiscovery",
388:       "weka.classifiers.meta.RandomCommittee",
389:       "weka.classifiers.functions.SimpleLogistic",
390:       "weka.attributeSelection.InfoGainAttributeEval",
391:       "weka.classifiers.functions.VotedPerceptron",
392:       "weka.estimators.DiscreteEstimator",
393:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
394:       "weka.classifiers.meta.MultiClassClassifier",
395:       "weka.classifiers.functions.Logistic",
396:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
397:       "weka.core.SerializationHelper",
398:       "weka.filters.SimpleFilter",
399:       "weka.filters.SimpleStreamFilter",
400:       "weka.filters.MultiFilter",
401:       "weka.classifiers.lazy.KStar",
402:       "weka.core.ListOptions",
403:       "weka.estimators.MahalanobisEstimator",
404:       "weka.estimators.KernelEstimator",
405:       "weka.attributeSelection.CorrelationAttributeEval",
406:       "weka.classifiers.meta.CVParameterSelection",
407:       "weka.core.FastVector",
408:       "weka.classifiers.trees.LMT",
409:       "weka.classifiers.functions.SGD",
410:       "weka.classifiers.meta.Vote",
411:       "weka.classifiers.rules.JRip",
412:       "weka.classifiers.meta.Bagging",
413:       "weka.classifiers.meta.LogitBoost",
414:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
415:       "weka.attributeSelection.OneRAttributeEval"
416:     );
417:   }
418: }

[MASTER] 01:23:05.043 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setPeriodicPruning(22);
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
Integer integer0 = new Integer((-907));
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.put(integer0, linkedHashMap1);
PART pART0 = new PART();
naiveBayesMultinomialText0.pruneDictionary();
int int0 = naiveBayesMultinomialText0.getPeriodicPruning();
assertEquals(22, int0);


[MASTER] 01:23:05.257 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_37_1575595385224/weka/classifiers/bayes/NaiveBayesMultinomialText_37_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_37_1575595385224/weka/classifiers/bayes/NaiveBayesMultinomialText_37_tmp__ESTest_scaffolding.java]]
[MASTER] 01:23:05.258 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:23:05.258 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:23:05.258 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 01:23:05.258 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 01:23:05.259 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_37_1575595385224/weka/classifiers/bayes/NaiveBayesMultinomialText_37_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 01:23:05 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.io.File;
12: import java.util.LinkedHashMap;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.classifiers.meta.CostSensitiveClassifier;
18: import weka.core.DenseInstance;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_37_tmp__ESTest extends NaiveBayesMultinomialText_37_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=1.8624848373103666
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       CostSensitiveClassifier costSensitiveClassifier0 = new CostSensitiveClassifier();
31:       File file0 = costSensitiveClassifier0.getOnDemandDirectory();
32:       naiveBayesMultinomialText0.setStopwords(file0);
33:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
34:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
35:       naiveBayesMultinomialText0.pruneDictionary();
36:       naiveBayesMultinomialText0.getCapabilities();
37:       naiveBayesMultinomialText0.stopwordsTipText();
38:       naiveBayesMultinomialText0.getCapabilities();
39:       naiveBayesMultinomialText0.getLowercaseTokens();
40:       DenseInstance denseInstance0 = new DenseInstance(2);
41:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
42:       try { 
43:         naiveBayesMultinomialText0.distributionForInstance(denseInstance0);
44:         fail("Expecting exception: RuntimeException");
45:       
46:       } catch(RuntimeException e) {
47:          //
48:          // DenseInstance doesn't have access to a dataset!
49:          //
50:          verifyException("weka.core.AbstractInstance", e);
51:       }
52:   }
53: }
RegularFileObject[/tmp/EvoSuite_37_1575595385224/weka/classifiers/bayes/NaiveBayesMultinomialText_37_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 01:23:05 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_37_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_37_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.core.neighboursearch.balltrees.BottomUpConstructor$TempNode",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.CostMatrix",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.rules.PART",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.filters.SimpleFilter",
108:       "weka.filters.SimpleStreamFilter",
109:       "weka.estimators.IncrementalEstimator",
110:       "weka.estimators.Estimator$Builder",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.classifiers.trees.j48.C45ModelSelection",
113:       "weka.classifiers.functions.SGDText",
114:       "weka.core.RelationalLocator",
115:       "weka.core.Utils",
116:       "weka.classifiers.meta.AdaBoostM1",
117:       "weka.core.CustomDisplayStringProvider",
118:       "weka.core.tokenizers.Tokenizer",
119:       "weka.core.NormalizableDistance",
120:       "weka.core.NoSupportForMissingValuesException",
121:       "weka.classifiers.UpdateableClassifier",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
123:       "weka.core.MultiInstanceCapabilitiesHandler",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.core.AttributeLocator",
127:       "weka.core.BinarySparseInstance",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.core.Summarizable",
132:       "weka.classifiers.trees.j48.ModelSelection",
133:       "weka.core.neighboursearch.balltrees.BallNode",
134:       "weka.core.AdditionalMeasureProducer",
135:       "org.pentaho.packageManagement.PackageManager$1",
136:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
137:       "weka.core.Drawable",
138:       "weka.core.matrix.Matrix",
139:       "weka.core.CapabilitiesHandler",
140:       "weka.core.AbstractInstance",
141:       "weka.core.scripting.JythonObject",
142:       "weka.core.SelectedTag",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.classifiers.bayes.BayesNet",
145:       "weka.core.Version",
146:       "weka.filters.AllFilter",
147:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
148:       "weka.core.Tag",
149:       "weka.classifiers.IteratedSingleClassifierEnhancer",
150:       "weka.classifiers.trees.j48.BinC45ModelSelection",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.OptionHandler",
153:       "weka.core.WekaException",
154:       "weka.classifiers.trees.RandomForest",
155:       "weka.filters.StreamableFilter",
156:       "weka.core.Range",
157:       "weka.core.PartitionGenerator",
158:       "weka.core.scripting.JythonSerializableObject",
159:       "weka.classifiers.Classifier",
160:       "weka.core.Capabilities$Capability",
161:       "weka.core.SparseInstance",
162:       "org.pentaho.packageManagement.PackageManager",
163:       "weka.core.tokenizers.WordTokenizer",
164:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
173:       "weka.core.neighboursearch.LinearNNSearch",
174:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
175:       "weka.core.Option",
176:       "weka.classifiers.meta.CostSensitiveClassifier",
177:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
178:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
179:       "weka.estimators.KernelEstimator",
180:       "weka.filters.Sourcable",
181:       "weka.core.Attribute",
182:       "weka.core.Stopwords",
183:       "weka.core.tokenizers.AlphabeticTokenizer",
184:       "weka.core.FastVector",
185:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
186:       "weka.core.UnassignedDatasetException",
187:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
188:       "weka.classifiers.RandomizableClassifier",
189:       "weka.classifiers.SingleClassifierEnhancer",
190:       "weka.core.RevisionUtils",
191:       "weka.core.Instance",
192:       "weka.estimators.Estimator",
193:       "weka.core.ProtectedProperties",
194:       "weka.core.StringLocator",
195:       "weka.classifiers.bayes.net.ADNode",
196:       "weka.core.AttributeStats",
197:       "weka.filters.MultiFilter",
198:       "weka.core.WeightedInstancesHandler",
199:       "weka.core.neighboursearch.NearestNeighbourSearch",
200:       "weka.classifiers.trees.DecisionStump",
201:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
202:       "weka.core.Randomizable",
203:       "weka.classifiers.functions.SGD",
204:       "weka.core.EuclideanDistance",
205:       "weka.core.Instances",
206:       "weka.core.UnassignedClassException",
207:       "weka.classifiers.bayes.net.BIFReader",
208:       "weka.classifiers.bayes.net.ParentSet",
209:       "weka.classifiers.rules.ZeroR",
210:       "weka.core.stemmers.IteratedLovinsStemmer",
211:       "weka.core.stemmers.Stemming",
212:       "weka.core.TechnicalInformation",
213:       "weka.core.UnsupportedAttributeTypeException",
214:       "weka.classifiers.Sourcable",
215:       "weka.core.RevisionHandler",
216:       "weka.classifiers.evaluation.output.prediction.PlainText",
217:       "weka.core.xml.XMLSerialization",
218:       "weka.classifiers.xml.XMLClassifier",
219:       "weka.filters.Filter",
220:       "weka.classifiers.lazy.IBk",
221:       "weka.filters.supervised.attribute.Discretize"
222:     );
223:   } 
224: 
225:   private static void resetClasses() {
226:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_37_tmp__ESTest_scaffolding.class.getClassLoader()); 
227: 
228:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
229:       "weka.classifiers.AbstractClassifier",
230:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
231:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
232:       "weka.core.Capabilities$Capability",
233:       "weka.core.tokenizers.Tokenizer",
234:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
235:       "weka.core.tokenizers.WordTokenizer",
236:       "weka.core.stemmers.NullStemmer",
237:       "weka.classifiers.Evaluation",
238:       "weka.core.Utils",
239:       "weka.core.Option",
240:       "weka.core.Capabilities",
241:       "org.pentaho.packageManagement.PackageManager",
242:       "org.pentaho.packageManagement.DefaultPackageManager",
243:       "weka.core.Version",
244:       "weka.core.Environment",
245:       "weka.core.WekaPackageManager",
246:       "weka.core.TestInstances",
247:       "weka.core.Attribute",
248:       "weka.core.ProtectedProperties",
249:       "weka.core.Instances",
250:       "weka.core.AbstractInstance",
251:       "weka.core.DenseInstance",
252:       "weka.core.neighboursearch.balltrees.BallNode",
253:       "weka.classifiers.RandomizableClassifier",
254:       "weka.core.Tag",
255:       "weka.classifiers.functions.SGDText",
256:       "weka.core.SerializedObject",
257:       "weka.core.SparseInstance",
258:       "weka.core.BinarySparseInstance",
259:       "weka.core.UnassignedDatasetException",
260:       "weka.core.neighboursearch.NearestNeighbourSearch",
261:       "weka.core.neighboursearch.KDTree",
262:       "weka.core.NormalizableDistance",
263:       "weka.core.EuclideanDistance",
264:       "weka.core.Range",
265:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
266:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
267:       "weka.filters.Filter",
268:       "weka.filters.supervised.attribute.Discretize",
269:       "weka.core.neighboursearch.CoverTree",
270:       "weka.core.stemmers.SnowballStemmer",
271:       "weka.core.RevisionUtils",
272:       "weka.classifiers.functions.supportVector.Kernel",
273:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
274:       "weka.attributeSelection.ASEvaluation",
275:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
276:       "weka.attributeSelection.PrincipalComponents",
277:       "weka.core.converters.ArffLoader$ArffReader",
278:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
279:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
280:       "weka.core.tokenizers.AlphabeticTokenizer",
281:       "weka.classifiers.SingleClassifierEnhancer",
282:       "weka.classifiers.misc.InputMappedClassifier",
283:       "weka.classifiers.rules.ZeroR",
284:       "weka.classifiers.functions.LinearRegression",
285:       "weka.classifiers.bayes.BayesNet",
286:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
287:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
288:       "weka.classifiers.bayes.net.search.local.K2",
289:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
290:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
291:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
292:       "weka.classifiers.meta.CostSensitiveClassifier",
293:       "weka.classifiers.CostMatrix",
294:       "weka.core.stemmers.Stemming",
295:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
296:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
297:       "weka.core.neighboursearch.balltrees.BallSplitter",
298:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
299:       "weka.core.stemmers.LovinsStemmer",
300:       "weka.core.stemmers.IteratedLovinsStemmer",
301:       "weka.classifiers.lazy.IBk",
302:       "weka.core.neighboursearch.LinearNNSearch",
303:       "weka.classifiers.IteratedSingleClassifierEnhancer",
304:       "weka.classifiers.meta.AdditiveRegression",
305:       "weka.classifiers.trees.DecisionStump",
306:       "weka.classifiers.functions.GaussianProcesses",
307:       "weka.classifiers.functions.supportVector.CachedKernel",
308:       "weka.classifiers.functions.supportVector.PolyKernel",
309:       "weka.classifiers.MultipleClassifiersCombiner",
310:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
311:       "weka.classifiers.meta.MultiScheme",
312:       "weka.core.WekaException",
313:       "weka.core.UnsupportedAttributeTypeException",
314:       "weka.core.neighboursearch.BallTree",
315:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
316:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
317:       "weka.classifiers.bayes.NaiveBayesMultinomial",
318:       "weka.core.Stopwords",
319:       "weka.classifiers.trees.J48",
320:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
321:       "weka.classifiers.meta.AdaBoostM1",
322:       "weka.classifiers.bayes.NaiveBayes",
323:       "weka.core.TechnicalInformation",
324:       "weka.core.TechnicalInformation$Type",
325:       "weka.core.TechnicalInformation$Field",
326:       "weka.core.matrix.Matrix",
327:       "weka.core.tokenizers.NGramTokenizer",
328:       "weka.core.WekaEnumeration",
329:       "weka.core.Attribute$1",
330:       "weka.classifiers.meta.ClassificationViaRegression",
331:       "weka.classifiers.trees.m5.M5Base",
332:       "weka.classifiers.trees.M5P",
333:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
334:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
335:       "weka.classifiers.meta.RandomSubSpace",
336:       "weka.classifiers.trees.REPTree",
337:       "weka.classifiers.rules.M5Rules",
338:       "weka.core.Javadoc",
339:       "weka.core.TechnicalInformationHandlerJavadoc",
340:       "weka.core.OptionHandlerJavadoc",
341:       "weka.classifiers.functions.SMO",
342:       "weka.classifiers.misc.SerializedClassifier",
343:       "weka.core.FindWithCapabilities",
344:       "weka.core.SingleIndex",
345:       "weka.attributeSelection.GainRatioAttributeEval",
346:       "weka.classifiers.bayes.net.BIFReader",
347:       "weka.attributeSelection.WrapperSubsetEval",
348:       "weka.classifiers.functions.supportVector.StringKernel",
349:       "weka.core.AttributeStats",
350:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
351:       "weka.classifiers.bayes.NaiveBayesUpdateable",
352:       "weka.classifiers.trees.RandomTree",
353:       "weka.classifiers.rules.DecisionTable",
354:       "weka.attributeSelection.ASSearch",
355:       "weka.attributeSelection.BestFirst",
356:       "weka.classifiers.rules.OneR",
357:       "weka.classifiers.meta.FilteredClassifier",
358:       "weka.filters.supervised.attribute.AttributeSelection",
359:       "weka.attributeSelection.AttributeSelection",
360:       "weka.attributeSelection.CfsSubsetEval",
361:       "weka.attributeSelection.GreedyStepwise",
362:       "weka.core.SelectedTag",
363:       "weka.estimators.Estimator",
364:       "weka.estimators.NormalEstimator",
365:       "weka.core.UnassignedClassException",
366:       "weka.classifiers.functions.SMOreg",
367:       "weka.classifiers.functions.supportVector.RegOptimizer",
368:       "weka.classifiers.functions.supportVector.RegSMO",
369:       "weka.classifiers.functions.supportVector.RegSMOImproved",
370:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
371:       "weka.classifiers.meta.RegressionByDiscretization",
372:       "weka.filters.unsupervised.attribute.Discretize",
373:       "weka.classifiers.trees.j48.ClassifierTree",
374:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
375:       "weka.classifiers.rules.PART",
376:       "weka.classifiers.rules.part.MakeDecList",
377:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
378:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
379:       "weka.classifiers.meta.Stacking",
380:       "weka.core.ChebyshevDistance",
381:       "weka.filters.AllFilter",
382:       "weka.classifiers.functions.SimpleLinearRegression",
383:       "weka.classifiers.functions.supportVector.Puk",
384:       "weka.classifiers.trees.RandomForest",
385:       "weka.classifiers.lazy.LWL",
386:       "weka.attributeSelection.ReliefFAttributeEval",
387:       "weka.core.ClassDiscovery",
388:       "weka.classifiers.meta.RandomCommittee",
389:       "weka.classifiers.functions.SimpleLogistic",
390:       "weka.attributeSelection.InfoGainAttributeEval",
391:       "weka.classifiers.functions.VotedPerceptron",
392:       "weka.estimators.DiscreteEstimator",
393:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
394:       "weka.classifiers.meta.MultiClassClassifier",
395:       "weka.classifiers.functions.Logistic",
396:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
397:       "weka.core.SerializationHelper",
398:       "weka.filters.SimpleFilter",
399:       "weka.filters.SimpleStreamFilter",
400:       "weka.filters.MultiFilter",
401:       "weka.classifiers.lazy.KStar",
402:       "weka.core.ListOptions",
403:       "weka.estimators.MahalanobisEstimator",
404:       "weka.estimators.KernelEstimator",
405:       "weka.attributeSelection.CorrelationAttributeEval",
406:       "weka.classifiers.meta.CVParameterSelection",
407:       "weka.core.FastVector",
408:       "weka.classifiers.trees.LMT",
409:       "weka.classifiers.functions.SGD",
410:       "weka.classifiers.meta.Vote",
411:       "weka.classifiers.rules.JRip",
412:       "weka.classifiers.meta.Bagging",
413:       "weka.classifiers.meta.LogitBoost",
414:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
415:       "weka.attributeSelection.OneRAttributeEval"
416:     );
417:   }
418: }

[MASTER] 01:23:05.260 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
CostSensitiveClassifier costSensitiveClassifier0 = new CostSensitiveClassifier();
File file0 = costSensitiveClassifier0.getOnDemandDirectory();
naiveBayesMultinomialText0.setStopwords(file0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.getCapabilities();
naiveBayesMultinomialText0.stopwordsTipText();
naiveBayesMultinomialText0.getCapabilities();
naiveBayesMultinomialText0.getLowercaseTokens();
DenseInstance denseInstance0 = new DenseInstance(2);
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.distributionForInstance(denseInstance0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1012/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2862
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2868
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1012
* Starting evolution
[MASTER] 01:30:25.102 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:30:25.122 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:30:25.124 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 01:30:25.274 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 01:30:25.317 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 01:30:25.319 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1012
* Starting evolution
[MASTER] 01:31:03.396 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 123s and 132 generations, 56272 statements, best individual has fitness: 7944.0
* Search finished after 126s and 57 generations, 52468 statements, best individual has fitness: 2792.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 45%
* Total number of goals: 370
* Number of covered goals: 165
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 80
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 18
* Number of covered goals: 18
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 42%
* Total number of goals: 713
* Number of covered goals: 297
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 72
* Number of covered goals: 32
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 80
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Generated 58 tests with total length 362
* Resulting test suite's coverage: 43% (average coverage for all fitness functions)
* Generating assertions
* Coverage of criterion LINE: 87%
* Total number of goals: 217
* Number of covered goals: 189
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 283
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 239
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 283
* Generated 77 tests with total length 348
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 77%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1012/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
[MASTER] 01:34:01.827 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 01:34:02.735 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1012/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2862
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2864
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:34:35.245 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:34:35.285 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:34:35.296 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 01:34:35.382 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1012
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:34:54.592 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:34:54.599 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:34:54.600 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 01:34:55.314 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 01:34:56.282 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 01:34:56.284 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 01:34:59.520 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 01:34:59.591 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 01:34:59.592 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 01:34:59.593 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 01:34:59.612 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 01:34:59.615 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 01:34:59.616 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 01:34:59.617 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 01:34:59.618 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 01:34:59.802 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 01:34:59.839 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1012
* Starting evolution
[MASTER] 01:35:05.202 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 01:35:52.382 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.evaluateModelOnce(DLweka/core/Instance;)V
[MASTER] 01:35:52.384 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.evaluateModelOnce(DLweka/core/Instance;)V
* Search finished after 138s and 15 generations, 13860 statements, best individual has fitness: 3712.0
[MASTER] 01:36:58.801 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 21 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 647
* Number of covered goals: 614
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 88%
* Total number of goals: 441
* Number of covered goals: 389
* Coverage analysis for criterion EXCEPTION
* Search finished after 127s and 41 generations, 24571 statements, best individual has fitness: 16736.0
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 83%
* Total number of goals: 678
* Number of covered goals: 565
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 37%
* Total number of goals: 244
* Number of covered goals: 91
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 90%
* Total number of goals: 124
* Number of covered goals: 111
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 90%
* Total number of goals: 124
* Number of covered goals: 111
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 81%
* Total number of goals: 441
* Number of covered goals: 358
* Generated 142 tests with total length 2619
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 50%
* Total number of goals: 1378
* Number of covered goals: 684
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 43%
* Total number of goals: 809
* Number of covered goals: 344
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 60%
* Total number of goals: 424
* Number of covered goals: 253
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 17%
* Total number of goals: 278
* Number of covered goals: 48
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 94%
* Total number of goals: 103
* Number of covered goals: 97
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 94%
* Total number of goals: 103
* Number of covered goals: 97
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 38%
* Total number of goals: 809
* Number of covered goals: 309
* Generated 115 tests with total length 1385
* Resulting test suite's coverage: 47% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 6%
* Compiling and checking tests
[MASTER] 01:40:18.989 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 01:40:19.190 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 01:40:19.406 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 01:40:19.406 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1012/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 01:42:35.240 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6737916666666667% of time used, but only 55/142 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
[MASTER] 01:44:06.812 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1012/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2863
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:44:55.809 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:44:55.875 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:44:55.882 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 01:44:58.777 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 01:44:59.680 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 01:44:59.682 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1012
* Starting evolution
[MASTER] 01:46:52.264 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 124s and 105 generations, 49942 statements, best individual has fitness: 13144.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 34%
* Total number of goals: 705
* Number of covered goals: 240
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 24%
* Total number of goals: 416
* Number of covered goals: 100
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 52%
* Total number of goals: 993
* Number of covered goals: 520
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 27%
* Total number of goals: 93
* Number of covered goals: 25
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 24%
* Total number of goals: 416
* Number of covered goals: 100
* Generated 68 tests with total length 513
* Resulting test suite's coverage: 41% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1012/107_weka/evosuite-tests
* Done!

* Computation finished
