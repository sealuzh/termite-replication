* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2243
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2248
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:33:48.250 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:33:48.256 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:33:48.257 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:33:48.477 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 17:33:48.506 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 17:33:48.508 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1002
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:34:01.439 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:34:01.450 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:34:01.451 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:34:01.482 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1002
* Starting evolution
[MASTER] 17:34:06.657 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 17:34:41.555 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 122s and 176 generations, 74246 statements, best individual has fitness: 7968.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 45%
* Total number of goals: 370
* Number of covered goals: 165
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 80
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 41%
* Total number of goals: 713
* Number of covered goals: 294
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 72
* Number of covered goals: 32
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 45
* Number of covered goals: 44
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 80
* Generated 66 tests with total length 382
* Resulting test suite's coverage: 43% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 123s and 70 generations, 40435 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 16 tests with total length 124
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1002/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 12%
* Compiling and checking tests
[MASTER] 17:37:03.364 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 17:37:03.781 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1002/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2248
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1002
* Starting evolution
* Search finished after 126s and 66 generations, 45614 statements, best individual has fitness: 3128.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 217
* Number of covered goals: 183
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 64%
* Total number of goals: 428
* Number of covered goals: 272
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 87%
* Total number of goals: 260
* Number of covered goals: 226
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 63%
* Total number of goals: 428
* Number of covered goals: 271
* Generated 69 tests with total length 244
* Resulting test suite's coverage: 71% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 75%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1002/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2245
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:50:18.825 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:50:18.832 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:50:18.833 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:50:20.068 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 17:50:21.531 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 17:50:21.541 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 17:50:24.137 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 17:50:24.189 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 17:50:24.191 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 17:50:24.193 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 17:50:24.194 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 17:50:24.195 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 17:50:24.195 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 17:50:24.198 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 17:50:24.200 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 17:50:24.292 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 17:50:24.318 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1002
* Starting evolution
[MASTER] 17:50:46.984 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getDiscardPredictions()Z: Line 461
[MASTER] 17:50:46.995 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.getDiscardPredictions()Z
[MASTER] 17:50:46.995 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.getDiscardPredictions()Z
[MASTER] 17:50:46.997 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.getDiscardPredictions()Z: root-Branch in context: weka.classifiers.Evaluation:getDiscardPredictions()Z
[MASTER] 17:50:50.916 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 17:51:58.423 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 126s and 43 generations, 23481 statements, best individual has fitness: 19448.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 43%
* Total number of goals: 1378
* Number of covered goals: 595
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 32%
* Total number of goals: 809
* Number of covered goals: 261
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 48%
* Total number of goals: 424
* Number of covered goals: 205
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 14%
* Total number of goals: 278
* Number of covered goals: 40
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 90%
* Total number of goals: 103
* Number of covered goals: 93
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 89%
* Total number of goals: 103
* Number of covered goals: 92
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 25%
* Total number of goals: 809
* Number of covered goals: 204
* Generated 101 tests with total length 919
* Resulting test suite's coverage: 38% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 4%
* Compiling and checking tests
[MASTER] 17:57:33.922 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 17:57:34.502 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
[MASTER] 17:57:35.703 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 17:57:35.860 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 17:57:36.057 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 17:57:36.058 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1002/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2245
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2250
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:58:41.455 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 17:58:41.467 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 17:58:41.479 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 17:58:41.584 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:58:41.590 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:58:41.605 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:58:45.990 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:58:46.020 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:58:46.026 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1002
* Starting evolution
[MASTER] 17:58:48.702 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 17:58:48.702 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 17:58:49.310 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 17:58:49.886 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 17:58:49.896 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1002
* Starting evolution
[MASTER] 17:58:53.372 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: Line 625
[MASTER] 17:58:53.372 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: Line 626
[MASTER] 17:58:53.373 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: root-Branch
[MASTER] 17:58:53.386 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 257: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - ReplaceVariable l -> m_normalize
[MASTER] 17:58:53.386 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 261: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp Negation of l
[MASTER] 17:58:53.386 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 262: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp IINC 1 l
[MASTER] 17:58:53.386 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 263: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp IINC -1 l
[MASTER] 17:58:53.388 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V
[MASTER] 17:58:53.388 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V
[MASTER] 17:58:53.389 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setLowercaseTokens(Z)V
[MASTER] 17:58:56.005 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 754
[MASTER] 17:58:56.005 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 755
[MASTER] 17:58:56.005 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 756
[MASTER] 17:58:56.005 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 757
[MASTER] 17:58:56.007 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.getRevision()Ljava/lang/String;: Line 937
[MASTER] 17:58:56.007 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 699
[MASTER] 17:58:56.007 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 700
[MASTER] 17:58:56.007 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 701
[MASTER] 17:58:56.007 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 702
[MASTER] 17:58:56.007 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 703
[MASTER] 17:58:56.007 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 704
[MASTER] 17:58:56.008 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 705
[MASTER] 17:58:56.008 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 706
[MASTER] 17:58:56.009 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setCheckErrorRate(Z)V: Line 609
[MASTER] 17:58:56.009 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setCheckErrorRate(Z)V: Line 610
[MASTER] 17:58:56.013 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.toString()Ljava/lang/String;: Line 2027
[MASTER] 17:58:56.013 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.toString()Ljava/lang/String;: Line 2028
[MASTER] 17:58:56.014 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.getRevision()Ljava/lang/String;: root-Branch
[MASTER] 17:58:56.014 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: root-Branch
[MASTER] 17:58:56.015 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: root-Branch
[MASTER] 17:58:56.015 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setCheckErrorRate(Z)V: root-Branch
[MASTER] 17:58:56.015 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.toString()Ljava/lang/String;: I4 Branch 105 IFNONNULL L2027 - false
[MASTER] 17:58:56.018 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 215: weka.classifiers.rules.JRip.setCheckErrorRate(Z)V:609 - InsertUnaryOp Negation of d
[MASTER] 17:58:56.019 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 216: weka.classifiers.rules.JRip.setCheckErrorRate(Z)V:609 - InsertUnaryOp IINC 1 d
[MASTER] 17:58:56.019 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 217: weka.classifiers.rules.JRip.setCheckErrorRate(Z)V:609 - InsertUnaryOp IINC -1 d
[MASTER] 17:58:56.019 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 378: weka.classifiers.rules.JRip.toString()Ljava/lang/String;:2027 - ReplaceComparisonOperator != null -> = null
[MASTER] 17:58:56.019 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 379: weka.classifiers.rules.JRip.toString()Ljava/lang/String;:2028 - ReplaceConstant - JRIP: No model built yet. -> 
[MASTER] 17:58:56.026 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 646: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:700 - ReplaceVariable a -> att
[MASTER] 17:58:56.026 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 647: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:701 - ReplaceConstant - NaN -> 0.0
[MASTER] 17:58:56.027 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 648: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:701 - ReplaceConstant - NaN -> 1.0
[MASTER] 17:58:56.027 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 649: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:701 - ReplaceConstant - NaN -> -1.0
[MASTER] 17:58:56.033 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 650: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:701 - ReplaceConstant - NaN -> NaN
[MASTER] 17:58:56.033 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 651: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:702 - ReplaceConstant - 0.0 -> 1.0
[MASTER] 17:58:56.042 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 652: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:702 - ReplaceConstant - 0.0 -> -1.0
[MASTER] 17:58:56.042 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 653: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:703 - ReplaceConstant - NaN -> 0.0
[MASTER] 17:58:56.042 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 654: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:703 - ReplaceConstant - NaN -> 1.0
[MASTER] 17:58:56.042 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 655: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:703 - ReplaceConstant - NaN -> -1.0
[MASTER] 17:58:56.042 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 656: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:703 - ReplaceConstant - NaN -> NaN
[MASTER] 17:58:56.042 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 657: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:704 - ReplaceConstant - NaN -> 0.0
[MASTER] 17:58:56.042 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 658: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:704 - ReplaceConstant - NaN -> 1.0
[MASTER] 17:58:56.042 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 659: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:704 - ReplaceConstant - NaN -> -1.0
[MASTER] 17:58:56.042 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 660: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:704 - ReplaceConstant - NaN -> NaN
[MASTER] 17:58:56.042 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 661: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:705 - ReplaceConstant - NaN -> 0.0
[MASTER] 17:58:56.042 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 662: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:705 - ReplaceConstant - NaN -> 1.0
[MASTER] 17:58:56.042 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 663: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:705 - ReplaceConstant - NaN -> -1.0
[MASTER] 17:58:56.042 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 664: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:705 - ReplaceConstant - NaN -> NaN
[MASTER] 17:58:56.043 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 691: weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:756 - ReplaceConstant - NaN -> 0.0
[MASTER] 17:58:56.043 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 692: weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:756 - ReplaceConstant - NaN -> 1.0
[MASTER] 17:58:56.043 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 693: weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:756 - ReplaceConstant - NaN -> -1.0
[MASTER] 17:58:56.043 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 694: weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:756 - ReplaceConstant - NaN -> NaN
[MASTER] 17:58:56.043 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 884: weka.classifiers.rules.JRip$NumericAntd.getRevision()Ljava/lang/String;:937 - ReplaceConstant - $Revision: 8118 $ -> 
[MASTER] 17:58:56.044 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.listOptions()Ljava/util/Enumeration;:NonNull
[MASTER] 17:58:56.044 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.toString()Ljava/lang/String;:NonEmptyString
[MASTER] 17:58:56.044 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.listOptions()Ljava/util/Enumeration;
[MASTER] 17:58:56.045 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setCheckErrorRate(Z)V
[MASTER] 17:58:56.045 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.toString()Ljava/lang/String;
[MASTER] 17:58:56.045 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 17:58:56.045 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NumericAntd.getRevision()Ljava/lang/String;
[MASTER] 17:58:56.046 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.listOptions()Ljava/util/Enumeration;
[MASTER] 17:58:56.046 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setCheckErrorRate(Z)V
[MASTER] 17:58:56.046 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.toString()Ljava/lang/String;
[MASTER] 17:58:56.047 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 17:58:56.047 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.NumericAntd.getRevision()Ljava/lang/String;
[MASTER] 17:58:56.047 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$NumericAntd.getRevision()Ljava/lang/String;: root-Branch in context: 
[MASTER] 17:58:56.047 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.toString()Ljava/lang/String;: I4 Branch 105 IFNONNULL L2027 - false in context: weka.classifiers.rules.JRip:toString()Ljava/lang/String;
[MASTER] 17:58:56.048 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: root-Branch in context: weka.classifiers.rules.JRip$Antd:<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 17:58:56.048 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.listOptions()Ljava/util/Enumeration;: root-Branch in context: weka.classifiers.rules.JRip:listOptions()Ljava/util/Enumeration;
[MASTER] 17:58:56.048 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: root-Branch in context: weka.classifiers.rules.JRip$NumericAntd:<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 17:58:56.048 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setCheckErrorRate(Z)V: root-Branch in context: weka.classifiers.rules.JRip:setCheckErrorRate(Z)V
[MASTER] 17:59:16.867 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 17:59:22.113 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.getAccu()D: Line 726
[MASTER] 17:59:22.119 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.getAccu()D: root-Branch
[MASTER] 17:59:22.122 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 680: weka.classifiers.rules.JRip$Antd.getAccu()D:726 - ReplaceVariable accu -> cover
[MASTER] 17:59:22.123 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 681: weka.classifiers.rules.JRip$Antd.getAccu()D:726 - ReplaceVariable accu -> value
[MASTER] 17:59:22.123 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 682: weka.classifiers.rules.JRip$Antd.getAccu()D:726 - ReplaceVariable accu -> accuRate
[MASTER] 17:59:22.123 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 683: weka.classifiers.rules.JRip$Antd.getAccu()D:726 - ReplaceVariable accu -> maxInfoGain
[MASTER] 17:59:22.124 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 684: weka.classifiers.rules.JRip$Antd.getAccu()D:726 - InsertUnaryOp Negation
[MASTER] 17:59:22.127 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.Antd.getAccu()D
[MASTER] 17:59:22.128 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.Antd.getAccu()D
[MASTER] 17:59:22.128 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$Antd.getAccu()D: root-Branch in context: weka.classifiers.rules.JRip$Antd:getAccu()D
[MASTER] 18:00:17.189 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NominalAntd.splitData(Lweka/core/Instances;DD)[Lweka/core/Instances;: Line 1010
[MASTER] 18:00:17.189 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NominalAntd.splitData(Lweka/core/Instances;DD)[Lweka/core/Instances;: Line 1027
[MASTER] 18:00:17.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NominalAntd.splitData(Lweka/core/Instances;DD)[Lweka/core/Instances;: I56 Branch 175 IF_ICMPGE L999 - true
[MASTER] 18:00:17.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NominalAntd.splitData(Lweka/core/Instances;DD)[Lweka/core/Instances;: I127 Branch 178 IF_ICMPGE L1010 - true
[MASTER] 18:00:17.193 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 934: weka.classifiers.rules.JRip$NominalAntd.splitData(Lweka/core/Instances;DD)[Lweka/core/Instances;:999 - ReplaceComparisonOperator >= -> >
[MASTER] 18:00:17.195 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.NominalAntd.splitData(Lweka/core/Instances;DD)[Lweka/core/Instances;
[MASTER] 18:00:17.195 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$NominalAntd.splitData(Lweka/core/Instances;DD)[Lweka/core/Instances;: I127 Branch 178 IF_ICMPGE L1010 - true in context: 
[MASTER] 18:00:17.195 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$NominalAntd.splitData(Lweka/core/Instances;DD)[Lweka/core/Instances;: I56 Branch 175 IF_ICMPGE L999 - true in context: 
* Search finished after 123s and 118 generations, 84460 statements, best individual has fitness: 1776.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 338
* Number of covered goals: 298
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 80%
* Total number of goals: 194
* Number of covered goals: 155
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 89%
* Total number of goals: 476
* Number of covered goals: 426
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 55%
* Total number of goals: 112
* Number of covered goals: 62
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 79%
* Total number of goals: 194
* Number of covered goals: 153
* Generated 73 tests with total length 874
* Resulting test suite's coverage: 84% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 125s and 96 generations, 44113 statements, best individual has fitness: 13136.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 34%
* Total number of goals: 705
* Number of covered goals: 243
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 25%
* Total number of goals: 416
* Number of covered goals: 103
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 50%
* Total number of goals: 993
* Number of covered goals: 495
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 30%
* Total number of goals: 93
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 96%
* Total number of goals: 72
* Number of covered goals: 69
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 72
* Number of covered goals: 69
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 24%
* Total number of goals: 416
* Number of covered goals: 101
* Generated 75 tests with total length 507
* Resulting test suite's coverage: 41% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1002/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 52%
* Compiling and checking tests
[MASTER] 18:05:37.673 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_14_1575569137622/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_14_1575569137622/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding.java]]
[MASTER] 18:05:37.673 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:05:37.673 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:05:37.678 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 18:05:37.678 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 18:05:37.680 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_14_1575569137622/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 18:05:37 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.testdata.EvoSuiteFile;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayes;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.BinarySparseInstance;
20: import weka.core.DenseInstance;
21: import weka.core.Instance;
22: import weka.core.SparseInstance;
23: import weka.core.neighboursearch.BallTree;
24: import weka.filters.supervised.attribute.Discretize;
25: 
26: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
27: public class NaiveBayesMultinomialText_14_tmp__ESTest extends NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding {
28: 
29:   /**
30:   //Test case number: 0
31:   /*Coverage entropy=1.543056733112554
32:   */
33:   @Test(timeout = 4000)
34:   public void test0()  throws Throwable  {
35:       FileSystemHandling.createFolder((EvoSuiteFile) null);
36:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
37:       FileSystemHandling.shouldAllThrowIOExceptions();
38:       String[] stringArray0 = new String[1];
39:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
40:       stringArray0[0] = "-M";
41:       try { 
42:         naiveBayesMultinomialText0.setOptions(stringArray0);
43:         fail("Expecting exception: Exception");
44:       
45:       } catch(Exception e) {
46:          //
47:          // No value given for -M option.
48:          //
49:          verifyException("weka.core.Utils", e);
50:       }
51:   }
52: }
RegularFileObject[/tmp/EvoSuite_14_1575569137622/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 18:05:37 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.ChebyshevDistance",
108:       "weka.classifiers.bayes.NaiveBayes",
109:       "weka.core.neighboursearch.CoverTree$MyHeap",
110:       "weka.estimators.IncrementalEstimator",
111:       "weka.estimators.Estimator$Builder",
112:       "weka.core.stemmers.NullStemmer",
113:       "weka.core.EnvironmentHandler",
114:       "weka.classifiers.functions.SGDText",
115:       "weka.core.RelationalLocator",
116:       "weka.classifiers.functions.SMO$BinarySMO",
117:       "weka.core.Utils",
118:       "weka.core.CustomDisplayStringProvider",
119:       "weka.core.tokenizers.Tokenizer",
120:       "weka.core.NormalizableDistance",
121:       "weka.core.NoSupportForMissingValuesException",
122:       "weka.classifiers.UpdateableClassifier",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
124:       "weka.core.TechnicalInformation$Type",
125:       "weka.core.MultiInstanceCapabilitiesHandler",
126:       "weka.core.Copyable",
127:       "weka.core.Capabilities",
128:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
129:       "weka.core.BinarySparseInstance",
130:       "weka.core.AttributeLocator",
131:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
132:       "weka.classifiers.functions.supportVector.CachedKernel",
133:       "weka.core.SerializedObject",
134:       "weka.clusterers.UpdateableClusterer",
135:       "weka.core.Summarizable",
136:       "weka.core.AdditionalMeasureProducer",
137:       "weka.core.neighboursearch.balltrees.BallNode",
138:       "org.pentaho.packageManagement.PackageManager$1",
139:       "weka.core.Drawable",
140:       "weka.core.matrix.Matrix",
141:       "weka.core.CapabilitiesHandler",
142:       "weka.attributeSelection.ASEvaluation",
143:       "weka.core.AbstractInstance",
144:       "weka.core.scripting.JythonObject",
145:       "weka.core.SelectedTag",
146:       "org.pentaho.packageManagement.DefaultPackage",
147:       "weka.estimators.DiscreteEstimator",
148:       "weka.core.neighboursearch.balltrees.BallSplitter",
149:       "weka.classifiers.misc.InputMappedClassifier",
150:       "weka.core.Version",
151:       "weka.filters.AllFilter",
152:       "weka.core.Tag",
153:       "weka.core.neighboursearch.CoverTree",
154:       "weka.classifiers.AbstractClassifier",
155:       "weka.filters.unsupervised.attribute.Center",
156:       "weka.core.OptionHandler",
157:       "weka.core.WekaException",
158:       "weka.filters.StreamableFilter",
159:       "weka.core.Range",
160:       "weka.core.Attribute$1",
161:       "weka.core.scripting.JythonSerializableObject",
162:       "weka.classifiers.Classifier",
163:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
164:       "weka.core.Capabilities$Capability",
165:       "weka.core.SparseInstance",
166:       "org.pentaho.packageManagement.PackageManager",
167:       "weka.estimators.PoissonEstimator",
168:       "weka.core.WekaEnumeration",
169:       "weka.attributeSelection.AttributeTransformer",
170:       "weka.core.tokenizers.WordTokenizer",
171:       "weka.classifiers.misc.SerializedClassifier",
172:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
173:       "weka.attributeSelection.PrincipalComponents",
174:       "weka.core.stemmers.SnowballStemmer",
175:       "weka.core.stemmers.LovinsStemmer",
176:       "weka.classifiers.Evaluation",
177:       "weka.classifiers.functions.supportVector.Kernel",
178:       "weka.core.WekaPackageManager",
179:       "weka.filters.SupervisedFilter",
180:       "weka.classifiers.functions.SMO",
181:       "weka.core.TechnicalInformationHandler",
182:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
183:       "weka.core.Option",
184:       "weka.core.neighboursearch.PerformanceStats",
185:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
186:       "weka.filters.Sourcable",
187:       "weka.core.Attribute",
188:       "weka.core.Stopwords",
189:       "weka.core.FastVector",
190:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
191:       "weka.core.UnassignedDatasetException",
192:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
193:       "weka.classifiers.RandomizableClassifier",
194:       "weka.classifiers.SingleClassifierEnhancer",
195:       "weka.core.RevisionUtils",
196:       "weka.core.Instance",
197:       "weka.classifiers.functions.supportVector.PolyKernel",
198:       "weka.estimators.Estimator",
199:       "weka.core.ProtectedProperties",
200:       "weka.core.StringLocator",
201:       "weka.core.AttributeStats",
202:       "weka.core.WeightedInstancesHandler",
203:       "weka.core.neighboursearch.NearestNeighbourSearch",
204:       "weka.core.TechnicalInformation$Field",
205:       "weka.core.neighboursearch.covertrees.Stack",
206:       "weka.filters.unsupervised.attribute.Remove",
207:       "weka.core.Randomizable",
208:       "weka.classifiers.functions.SGD",
209:       "weka.core.EuclideanDistance",
210:       "weka.core.Instances",
211:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
212:       "weka.filters.unsupervised.attribute.Normalize",
213:       "weka.core.UnassignedClassException",
214:       "weka.classifiers.rules.ZeroR",
215:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
216:       "weka.filters.unsupervised.attribute.Standardize",
217:       "weka.core.TechnicalInformation",
218:       "weka.core.UnsupportedAttributeTypeException",
219:       "weka.classifiers.Sourcable",
220:       "weka.core.RevisionHandler",
221:       "weka.classifiers.evaluation.output.prediction.PlainText",
222:       "weka.experiment.Stats",
223:       "weka.core.neighboursearch.TreePerformanceStats",
224:       "weka.core.xml.XMLSerialization",
225:       "weka.classifiers.xml.XMLClassifier",
226:       "weka.filters.Filter",
227:       "weka.filters.supervised.attribute.Discretize"
228:     );
229:   } 
230: 
231:   private static void resetClasses() {
232:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding.class.getClassLoader()); 
233: 
234:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
235:       "weka.classifiers.AbstractClassifier",
236:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
237:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
238:       "weka.core.Capabilities$Capability",
239:       "weka.core.tokenizers.Tokenizer",
240:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
241:       "weka.core.tokenizers.WordTokenizer",
242:       "weka.core.stemmers.NullStemmer",
243:       "weka.core.NormalizableDistance",
244:       "weka.core.ChebyshevDistance",
245:       "weka.core.Range",
246:       "weka.core.AbstractInstance",
247:       "weka.core.SparseInstance",
248:       "weka.core.BinarySparseInstance",
249:       "weka.core.RevisionUtils",
250:       "weka.classifiers.misc.SerializedClassifier",
251:       "weka.core.Utils",
252:       "weka.core.tokenizers.NGramTokenizer",
253:       "weka.core.Option",
254:       "weka.core.neighboursearch.balltrees.BallNode",
255:       "weka.core.UnassignedDatasetException",
256:       "weka.classifiers.Evaluation",
257:       "weka.core.DenseInstance",
258:       "weka.core.stemmers.LovinsStemmer",
259:       "weka.classifiers.SingleClassifierEnhancer",
260:       "weka.classifiers.misc.InputMappedClassifier",
261:       "weka.classifiers.rules.ZeroR",
262:       "weka.core.SerializedObject",
263:       "weka.classifiers.bayes.BayesNet",
264:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
265:       "weka.core.Tag",
266:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
267:       "weka.classifiers.bayes.net.search.local.K2",
268:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
269:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
270:       "weka.core.Capabilities",
271:       "org.pentaho.packageManagement.PackageManager",
272:       "org.pentaho.packageManagement.DefaultPackageManager",
273:       "weka.core.Version",
274:       "weka.core.Environment",
275:       "weka.core.WekaPackageManager",
276:       "weka.core.stemmers.Stemming",
277:       "weka.core.Instances",
278:       "weka.classifiers.RandomizableClassifier",
279:       "weka.classifiers.functions.SGDText",
280:       "weka.core.tokenizers.AlphabeticTokenizer",
281:       "weka.core.neighboursearch.NearestNeighbourSearch",
282:       "weka.core.neighboursearch.KDTree",
283:       "weka.core.EuclideanDistance",
284:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
285:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
286:       "weka.core.TechnicalInformation",
287:       "weka.core.TechnicalInformation$Type",
288:       "weka.core.TechnicalInformation$Field",
289:       "weka.attributeSelection.ASEvaluation",
290:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
291:       "weka.attributeSelection.PrincipalComponents",
292:       "weka.core.TestInstances",
293:       "weka.core.Attribute",
294:       "weka.core.ProtectedProperties",
295:       "weka.core.WekaEnumeration",
296:       "weka.core.Attribute$1",
297:       "weka.core.stemmers.SnowballStemmer",
298:       "weka.core.neighboursearch.LinearNNSearch",
299:       "weka.attributeSelection.GainRatioAttributeEval",
300:       "weka.attributeSelection.AttributeSelection",
301:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
302:       "weka.classifiers.meta.CostSensitiveClassifier",
303:       "weka.classifiers.CostMatrix",
304:       "weka.estimators.Estimator",
305:       "weka.estimators.DiscreteEstimator",
306:       "weka.core.UnassignedClassException",
307:       "weka.core.SerializationHelper",
308:       "weka.core.Javadoc",
309:       "weka.core.OptionHandlerJavadoc",
310:       "weka.core.Check",
311:       "weka.core.CheckOptionHandler",
312:       "weka.core.neighboursearch.CoverTree",
313:       "weka.classifiers.rules.PART",
314:       "weka.filters.Filter",
315:       "weka.filters.SimpleFilter",
316:       "weka.filters.SimpleStreamFilter",
317:       "weka.filters.MultiFilter",
318:       "weka.filters.AllFilter",
319:       "weka.classifiers.meta.RegressionByDiscretization",
320:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
321:       "weka.filters.unsupervised.attribute.Discretize",
322:       "weka.classifiers.trees.J48",
323:       "weka.core.SelectedTag",
324:       "weka.classifiers.bayes.NaiveBayes",
325:       "weka.filters.supervised.attribute.Discretize",
326:       "weka.core.neighboursearch.BallTree",
327:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
328:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
329:       "weka.core.neighboursearch.balltrees.BallSplitter",
330:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
331:       "weka.classifiers.functions.GaussianProcesses",
332:       "weka.classifiers.functions.supportVector.Kernel",
333:       "weka.classifiers.functions.supportVector.CachedKernel",
334:       "weka.classifiers.functions.supportVector.PolyKernel",
335:       "weka.core.WekaException",
336:       "weka.core.UnsupportedAttributeTypeException",
337:       "weka.classifiers.bayes.net.BIFReader",
338:       "weka.classifiers.lazy.IBk",
339:       "weka.core.converters.ArffLoader$ArffReader",
340:       "weka.core.Stopwords",
341:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
342:       "weka.classifiers.trees.LMT",
343:       "weka.core.FindWithCapabilities",
344:       "weka.core.SingleIndex",
345:       "weka.core.MinkowskiDistance",
346:       "weka.attributeSelection.CorrelationAttributeEval",
347:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
348:       "weka.classifiers.IteratedSingleClassifierEnhancer",
349:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.LogitBoost",
351:       "weka.classifiers.trees.DecisionStump",
352:       "weka.attributeSelection.ReliefFAttributeEval",
353:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
354:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
355:       "weka.classifiers.rules.part.MakeDecList",
356:       "weka.classifiers.bayes.NaiveBayesMultinomial",
357:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
358:       "weka.core.stemmers.IteratedLovinsStemmer",
359:       "weka.classifiers.functions.LinearRegression",
360:       "weka.classifiers.functions.SMOreg",
361:       "weka.classifiers.functions.supportVector.RegOptimizer",
362:       "weka.classifiers.functions.supportVector.RegSMO",
363:       "weka.classifiers.functions.supportVector.RegSMOImproved",
364:       "weka.classifiers.trees.j48.ClassifierTree",
365:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
366:       "weka.classifiers.functions.SGDText$Count",
367:       "weka.classifiers.meta.AdaBoostM1",
368:       "weka.attributeSelection.InfoGainAttributeEval",
369:       "weka.estimators.PoissonEstimator",
370:       "weka.estimators.KernelEstimator",
371:       "weka.attributeSelection.WrapperSubsetEval",
372:       "weka.classifiers.functions.supportVector.RBFKernel",
373:       "weka.classifiers.functions.supportVector.Puk",
374:       "weka.classifiers.lazy.KStar",
375:       "weka.classifiers.meta.AdditiveRegression",
376:       "weka.classifiers.meta.AttributeSelectedClassifier",
377:       "weka.attributeSelection.CfsSubsetEval",
378:       "weka.attributeSelection.ASSearch",
379:       "weka.attributeSelection.BestFirst",
380:       "weka.classifiers.MultipleClassifiersCombiner",
381:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
382:       "weka.classifiers.meta.MultiScheme",
383:       "weka.classifiers.rules.JRip",
384:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
385:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
386:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
387:       "weka.classifiers.meta.RandomSubSpace",
388:       "weka.classifiers.trees.REPTree",
389:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
390:       "weka.attributeSelection.OneRAttributeEval",
391:       "weka.classifiers.functions.MultilayerPerceptron",
392:       "weka.core.FastVector",
393:       "weka.filters.unsupervised.attribute.NominalToBinary",
394:       "weka.classifiers.functions.neural.SigmoidUnit",
395:       "weka.classifiers.functions.neural.LinearUnit",
396:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
397:       "weka.classifiers.meta.Bagging",
398:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
399:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
400:       "weka.classifiers.meta.Stacking",
401:       "weka.classifiers.functions.SimpleLinearRegression",
402:       "weka.classifiers.meta.CVParameterSelection",
403:       "weka.classifiers.lazy.LWL",
404:       "weka.classifiers.functions.Logistic",
405:       "weka.core.matrix.Matrix",
406:       "weka.classifiers.functions.neural.NeuralConnection",
407:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
408:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
409:       "weka.classifiers.meta.FilteredClassifier",
410:       "weka.filters.supervised.attribute.AttributeSelection",
411:       "weka.attributeSelection.GreedyStepwise",
412:       "weka.classifiers.functions.SMO",
413:       "weka.classifiers.rules.OneR",
414:       "weka.estimators.NormalEstimator",
415:       "weka.classifiers.trees.RandomTree",
416:       "weka.classifiers.functions.VotedPerceptron",
417:       "weka.core.AttributeStats",
418:       "weka.experiment.Stats",
419:       "weka.core.CheckGOE",
420:       "weka.classifiers.meta.MultiClassClassifier",
421:       "weka.classifiers.functions.SimpleLogistic",
422:       "weka.classifiers.meta.RandomCommittee",
423:       "weka.classifiers.trees.RandomForest",
424:       "weka.classifiers.functions.supportVector.StringKernel",
425:       "weka.classifiers.meta.Vote",
426:       "weka.classifiers.trees.m5.M5Base",
427:       "weka.classifiers.rules.M5Rules",
428:       "weka.classifiers.functions.SGD",
429:       "weka.classifiers.meta.ClassificationViaRegression",
430:       "weka.classifiers.trees.M5P"
431:     );
432:   }
433: }

[MASTER] 18:05:37.680 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling.createFolder((EvoSuiteFile) null);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
FileSystemHandling.shouldAllThrowIOExceptions();
String[] stringArray0 = new String[1];
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
stringArray0[0] = "-M";
naiveBayesMultinomialText0.setOptions(stringArray0);

[MASTER] 18:05:38.352 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_32_1575569138320/weka/classifiers/bayes/NaiveBayesMultinomialText_32_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_32_1575569138320/weka/classifiers/bayes/NaiveBayesMultinomialText_32_tmp__ESTest_scaffolding.java]]
[MASTER] 18:05:38.352 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:05:38.352 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:05:38.352 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 43
[MASTER] 18:05:38.352 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 43
[MASTER] 18:05:38.354 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_32_1575569138320/weka/classifiers/bayes/NaiveBayesMultinomialText_32_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 18:05:38 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.DenseInstance;
17: import weka.core.stemmers.LovinsStemmer;
18: import weka.core.stemmers.Stemmer;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_32_tmp__ESTest extends NaiveBayesMultinomialText_32_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=0.42857142857142855
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       String[] stringArray0 = new String[9];
31:       stringArray0[0] = "XtmH7=*7%d";
32:       LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
33:       naiveBayesMultinomialText0.m_stemmer = (Stemmer) lovinsStemmer0;
34:       stringArray0[1] = "-tokenizer";
35:       stringArray0[2] = "not-no-class";
36:       stringArray0[3] = "XtmH7=*7%d";
37:       stringArray0[4] = "not-no-class";
38:       stringArray0[5] = "-tokenizer";
39:       double[] doubleArray0 = new double[8];
40:       doubleArray0[0] = 12.0;
41:       doubleArray0[1] = 12.0;
42:       doubleArray0[2] = 12.0;
43:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
44:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
45:       doubleArray0[3] = 12.0;
46:       doubleArray0[4] = (-682.859668);
47:       doubleArray0[5] = 12.0;
48:       doubleArray0[6] = 12.0;
49:       doubleArray0[7] = 12.0;
50:       DenseInstance denseInstance0 = new DenseInstance(12.0, doubleArray0);
51:       try { 
52:         naiveBayesMultinomialText0.distributionForInstance(denseInstance0);
53:         fail("Expecting exception: RuntimeException");
54:       
55:       } catch(RuntimeException e) {
56:          //
57:          // DenseInstance doesn't have access to a dataset!
58:          //
59:          verifyException("weka.core.AbstractInstance", e);
60:       }
61:   }
62: }
RegularFileObject[/tmp/EvoSuite_32_1575569138320/weka/classifiers/bayes/NaiveBayesMultinomialText_32_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 18:05:38 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_32_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_32_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.ChebyshevDistance",
108:       "weka.classifiers.bayes.NaiveBayes",
109:       "weka.core.neighboursearch.CoverTree$MyHeap",
110:       "weka.estimators.IncrementalEstimator",
111:       "weka.estimators.Estimator$Builder",
112:       "weka.core.stemmers.NullStemmer",
113:       "weka.core.EnvironmentHandler",
114:       "weka.classifiers.functions.SGDText",
115:       "weka.core.RelationalLocator",
116:       "weka.classifiers.functions.SMO$BinarySMO",
117:       "weka.core.Utils",
118:       "weka.core.CustomDisplayStringProvider",
119:       "weka.core.tokenizers.Tokenizer",
120:       "weka.core.NormalizableDistance",
121:       "weka.core.NoSupportForMissingValuesException",
122:       "weka.classifiers.UpdateableClassifier",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
124:       "weka.core.TechnicalInformation$Type",
125:       "weka.core.MultiInstanceCapabilitiesHandler",
126:       "weka.core.Copyable",
127:       "weka.core.Capabilities",
128:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
129:       "weka.core.BinarySparseInstance",
130:       "weka.core.AttributeLocator",
131:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
132:       "weka.classifiers.functions.supportVector.CachedKernel",
133:       "weka.core.SerializedObject",
134:       "weka.clusterers.UpdateableClusterer",
135:       "weka.core.Summarizable",
136:       "weka.core.AdditionalMeasureProducer",
137:       "weka.core.neighboursearch.balltrees.BallNode",
138:       "org.pentaho.packageManagement.PackageManager$1",
139:       "weka.core.Drawable",
140:       "weka.core.matrix.Matrix",
141:       "weka.core.CapabilitiesHandler",
142:       "weka.attributeSelection.ASEvaluation",
143:       "weka.core.AbstractInstance",
144:       "weka.core.scripting.JythonObject",
145:       "weka.core.SelectedTag",
146:       "org.pentaho.packageManagement.DefaultPackage",
147:       "weka.estimators.DiscreteEstimator",
148:       "weka.core.neighboursearch.balltrees.BallSplitter",
149:       "weka.classifiers.misc.InputMappedClassifier",
150:       "weka.core.Version",
151:       "weka.filters.AllFilter",
152:       "weka.core.Tag",
153:       "weka.core.neighboursearch.CoverTree",
154:       "weka.classifiers.AbstractClassifier",
155:       "weka.filters.unsupervised.attribute.Center",
156:       "weka.core.OptionHandler",
157:       "weka.core.WekaException",
158:       "weka.filters.StreamableFilter",
159:       "weka.core.Range",
160:       "weka.core.Attribute$1",
161:       "weka.core.scripting.JythonSerializableObject",
162:       "weka.classifiers.Classifier",
163:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
164:       "weka.core.Capabilities$Capability",
165:       "weka.core.SparseInstance",
166:       "org.pentaho.packageManagement.PackageManager",
167:       "weka.estimators.PoissonEstimator",
168:       "weka.core.WekaEnumeration",
169:       "weka.attributeSelection.AttributeTransformer",
170:       "weka.core.tokenizers.WordTokenizer",
171:       "weka.classifiers.misc.SerializedClassifier",
172:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
173:       "weka.attributeSelection.PrincipalComponents",
174:       "weka.core.stemmers.SnowballStemmer",
175:       "weka.core.stemmers.LovinsStemmer",
176:       "weka.classifiers.Evaluation",
177:       "weka.classifiers.functions.supportVector.Kernel",
178:       "weka.core.WekaPackageManager",
179:       "weka.filters.SupervisedFilter",
180:       "weka.classifiers.functions.SMO",
181:       "weka.core.TechnicalInformationHandler",
182:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
183:       "weka.core.Option",
184:       "weka.core.neighboursearch.PerformanceStats",
185:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
186:       "weka.filters.Sourcable",
187:       "weka.core.Attribute",
188:       "weka.core.Stopwords",
189:       "weka.core.FastVector",
190:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
191:       "weka.core.UnassignedDatasetException",
192:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
193:       "weka.classifiers.RandomizableClassifier",
194:       "weka.classifiers.SingleClassifierEnhancer",
195:       "weka.core.RevisionUtils",
196:       "weka.core.Instance",
197:       "weka.classifiers.functions.supportVector.PolyKernel",
198:       "weka.estimators.Estimator",
199:       "weka.core.ProtectedProperties",
200:       "weka.core.StringLocator",
201:       "weka.core.AttributeStats",
202:       "weka.core.WeightedInstancesHandler",
203:       "weka.core.neighboursearch.NearestNeighbourSearch",
204:       "weka.core.TechnicalInformation$Field",
205:       "weka.core.neighboursearch.covertrees.Stack",
206:       "weka.filters.unsupervised.attribute.Remove",
207:       "weka.core.Randomizable",
208:       "weka.classifiers.functions.SGD",
209:       "weka.core.EuclideanDistance",
210:       "weka.core.Instances",
211:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
212:       "weka.filters.unsupervised.attribute.Normalize",
213:       "weka.core.UnassignedClassException",
214:       "weka.classifiers.rules.ZeroR",
215:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
216:       "weka.filters.unsupervised.attribute.Standardize",
217:       "weka.core.TechnicalInformation",
218:       "weka.core.UnsupportedAttributeTypeException",
219:       "weka.classifiers.Sourcable",
220:       "weka.core.RevisionHandler",
221:       "weka.classifiers.evaluation.output.prediction.PlainText",
222:       "weka.experiment.Stats",
223:       "weka.core.neighboursearch.TreePerformanceStats",
224:       "weka.core.xml.XMLSerialization",
225:       "weka.classifiers.xml.XMLClassifier",
226:       "weka.filters.Filter",
227:       "weka.filters.supervised.attribute.Discretize"
228:     );
229:   } 
230: 
231:   private static void resetClasses() {
232:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_32_tmp__ESTest_scaffolding.class.getClassLoader()); 
233: 
234:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
235:       "weka.classifiers.AbstractClassifier",
236:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
237:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
238:       "weka.core.Capabilities$Capability",
239:       "weka.core.tokenizers.Tokenizer",
240:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
241:       "weka.core.tokenizers.WordTokenizer",
242:       "weka.core.stemmers.NullStemmer",
243:       "weka.core.NormalizableDistance",
244:       "weka.core.ChebyshevDistance",
245:       "weka.core.Range",
246:       "weka.core.AbstractInstance",
247:       "weka.core.SparseInstance",
248:       "weka.core.BinarySparseInstance",
249:       "weka.core.RevisionUtils",
250:       "weka.classifiers.misc.SerializedClassifier",
251:       "weka.core.Utils",
252:       "weka.core.tokenizers.NGramTokenizer",
253:       "weka.core.Option",
254:       "weka.core.neighboursearch.balltrees.BallNode",
255:       "weka.core.UnassignedDatasetException",
256:       "weka.classifiers.Evaluation",
257:       "weka.core.DenseInstance",
258:       "weka.core.stemmers.LovinsStemmer",
259:       "weka.classifiers.SingleClassifierEnhancer",
260:       "weka.classifiers.misc.InputMappedClassifier",
261:       "weka.classifiers.rules.ZeroR",
262:       "weka.core.SerializedObject",
263:       "weka.classifiers.bayes.BayesNet",
264:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
265:       "weka.core.Tag",
266:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
267:       "weka.classifiers.bayes.net.search.local.K2",
268:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
269:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
270:       "weka.core.Capabilities",
271:       "org.pentaho.packageManagement.PackageManager",
272:       "org.pentaho.packageManagement.DefaultPackageManager",
273:       "weka.core.Version",
274:       "weka.core.Environment",
275:       "weka.core.WekaPackageManager",
276:       "weka.core.stemmers.Stemming",
277:       "weka.core.Instances",
278:       "weka.classifiers.RandomizableClassifier",
279:       "weka.classifiers.functions.SGDText",
280:       "weka.core.tokenizers.AlphabeticTokenizer",
281:       "weka.core.neighboursearch.NearestNeighbourSearch",
282:       "weka.core.neighboursearch.KDTree",
283:       "weka.core.EuclideanDistance",
284:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
285:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
286:       "weka.core.TechnicalInformation",
287:       "weka.core.TechnicalInformation$Type",
288:       "weka.core.TechnicalInformation$Field",
289:       "weka.attributeSelection.ASEvaluation",
290:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
291:       "weka.attributeSelection.PrincipalComponents",
292:       "weka.core.TestInstances",
293:       "weka.core.Attribute",
294:       "weka.core.ProtectedProperties",
295:       "weka.core.WekaEnumeration",
296:       "weka.core.Attribute$1",
297:       "weka.core.stemmers.SnowballStemmer",
298:       "weka.core.neighboursearch.LinearNNSearch",
299:       "weka.attributeSelection.GainRatioAttributeEval",
300:       "weka.attributeSelection.AttributeSelection",
301:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
302:       "weka.classifiers.meta.CostSensitiveClassifier",
303:       "weka.classifiers.CostMatrix",
304:       "weka.estimators.Estimator",
305:       "weka.estimators.DiscreteEstimator",
306:       "weka.core.UnassignedClassException",
307:       "weka.core.SerializationHelper",
308:       "weka.core.Javadoc",
309:       "weka.core.OptionHandlerJavadoc",
310:       "weka.core.Check",
311:       "weka.core.CheckOptionHandler",
312:       "weka.core.neighboursearch.CoverTree",
313:       "weka.classifiers.rules.PART",
314:       "weka.filters.Filter",
315:       "weka.filters.SimpleFilter",
316:       "weka.filters.SimpleStreamFilter",
317:       "weka.filters.MultiFilter",
318:       "weka.filters.AllFilter",
319:       "weka.classifiers.meta.RegressionByDiscretization",
320:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
321:       "weka.filters.unsupervised.attribute.Discretize",
322:       "weka.classifiers.trees.J48",
323:       "weka.core.SelectedTag",
324:       "weka.classifiers.bayes.NaiveBayes",
325:       "weka.filters.supervised.attribute.Discretize",
326:       "weka.core.neighboursearch.BallTree",
327:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
328:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
329:       "weka.core.neighboursearch.balltrees.BallSplitter",
330:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
331:       "weka.classifiers.functions.GaussianProcesses",
332:       "weka.classifiers.functions.supportVector.Kernel",
333:       "weka.classifiers.functions.supportVector.CachedKernel",
334:       "weka.classifiers.functions.supportVector.PolyKernel",
335:       "weka.core.WekaException",
336:       "weka.core.UnsupportedAttributeTypeException",
337:       "weka.classifiers.bayes.net.BIFReader",
338:       "weka.classifiers.lazy.IBk",
339:       "weka.core.converters.ArffLoader$ArffReader",
340:       "weka.core.Stopwords",
341:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
342:       "weka.classifiers.trees.LMT",
343:       "weka.core.FindWithCapabilities",
344:       "weka.core.SingleIndex",
345:       "weka.core.MinkowskiDistance",
346:       "weka.attributeSelection.CorrelationAttributeEval",
347:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
348:       "weka.classifiers.IteratedSingleClassifierEnhancer",
349:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.LogitBoost",
351:       "weka.classifiers.trees.DecisionStump",
352:       "weka.attributeSelection.ReliefFAttributeEval",
353:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
354:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
355:       "weka.classifiers.rules.part.MakeDecList",
356:       "weka.classifiers.bayes.NaiveBayesMultinomial",
357:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
358:       "weka.core.stemmers.IteratedLovinsStemmer",
359:       "weka.classifiers.functions.LinearRegression",
360:       "weka.classifiers.functions.SMOreg",
361:       "weka.classifiers.functions.supportVector.RegOptimizer",
362:       "weka.classifiers.functions.supportVector.RegSMO",
363:       "weka.classifiers.functions.supportVector.RegSMOImproved",
364:       "weka.classifiers.trees.j48.ClassifierTree",
365:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
366:       "weka.classifiers.functions.SGDText$Count",
367:       "weka.classifiers.meta.AdaBoostM1",
368:       "weka.attributeSelection.InfoGainAttributeEval",
369:       "weka.estimators.PoissonEstimator",
370:       "weka.estimators.KernelEstimator",
371:       "weka.attributeSelection.WrapperSubsetEval",
372:       "weka.classifiers.functions.supportVector.RBFKernel",
373:       "weka.classifiers.functions.supportVector.Puk",
374:       "weka.classifiers.lazy.KStar",
375:       "weka.classifiers.meta.AdditiveRegression",
376:       "weka.classifiers.meta.AttributeSelectedClassifier",
377:       "weka.attributeSelection.CfsSubsetEval",
378:       "weka.attributeSelection.ASSearch",
379:       "weka.attributeSelection.BestFirst",
380:       "weka.classifiers.MultipleClassifiersCombiner",
381:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
382:       "weka.classifiers.meta.MultiScheme",
383:       "weka.classifiers.rules.JRip",
384:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
385:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
386:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
387:       "weka.classifiers.meta.RandomSubSpace",
388:       "weka.classifiers.trees.REPTree",
389:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
390:       "weka.attributeSelection.OneRAttributeEval",
391:       "weka.classifiers.functions.MultilayerPerceptron",
392:       "weka.core.FastVector",
393:       "weka.filters.unsupervised.attribute.NominalToBinary",
394:       "weka.classifiers.functions.neural.SigmoidUnit",
395:       "weka.classifiers.functions.neural.LinearUnit",
396:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
397:       "weka.classifiers.meta.Bagging",
398:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
399:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
400:       "weka.classifiers.meta.Stacking",
401:       "weka.classifiers.functions.SimpleLinearRegression",
402:       "weka.classifiers.meta.CVParameterSelection",
403:       "weka.classifiers.lazy.LWL",
404:       "weka.classifiers.functions.Logistic",
405:       "weka.core.matrix.Matrix",
406:       "weka.classifiers.functions.neural.NeuralConnection",
407:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
408:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
409:       "weka.classifiers.meta.FilteredClassifier",
410:       "weka.filters.supervised.attribute.AttributeSelection",
411:       "weka.attributeSelection.GreedyStepwise",
412:       "weka.classifiers.functions.SMO",
413:       "weka.classifiers.rules.OneR",
414:       "weka.estimators.NormalEstimator",
415:       "weka.classifiers.trees.RandomTree",
416:       "weka.classifiers.functions.VotedPerceptron",
417:       "weka.core.AttributeStats",
418:       "weka.experiment.Stats",
419:       "weka.core.CheckGOE",
420:       "weka.classifiers.meta.MultiClassClassifier",
421:       "weka.classifiers.functions.SimpleLogistic",
422:       "weka.classifiers.meta.RandomCommittee",
423:       "weka.classifiers.trees.RandomForest",
424:       "weka.classifiers.functions.supportVector.StringKernel",
425:       "weka.classifiers.meta.Vote",
426:       "weka.classifiers.trees.m5.M5Base",
427:       "weka.classifiers.rules.M5Rules",
428:       "weka.classifiers.functions.SGD",
429:       "weka.classifiers.meta.ClassificationViaRegression",
430:       "weka.classifiers.trees.M5P"
431:     );
432:   }
433: }

[MASTER] 18:05:38.354 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
String[] stringArray0 = new String[9];
stringArray0[0] = "XtmH7=*7%d";
LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
naiveBayesMultinomialText0.m_stemmer = (Stemmer) lovinsStemmer0;
stringArray0[1] = "-tokenizer";
stringArray0[2] = "not-no-class";
stringArray0[3] = "XtmH7=*7%d";
stringArray0[4] = "not-no-class";
stringArray0[5] = "-tokenizer";
double[] doubleArray0 = new double[8];
doubleArray0[0] = 12.0;
doubleArray0[1] = 12.0;
doubleArray0[2] = 12.0;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
doubleArray0[3] = 12.0;
doubleArray0[4] = (-682.859668);
doubleArray0[5] = 12.0;
doubleArray0[6] = 12.0;
doubleArray0[7] = 12.0;
DenseInstance denseInstance0 = new DenseInstance(12.0, doubleArray0);
naiveBayesMultinomialText0.distributionForInstance(denseInstance0);

[MASTER] 18:05:38.812 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_45_1575569138771/weka/classifiers/bayes/NaiveBayesMultinomialText_45_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_45_1575569138771/weka/classifiers/bayes/NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding.java]]
[MASTER] 18:05:38.812 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:05:38.812 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:05:38.812 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 18:05:38.813 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_45_1575569138771/weka/classifiers/bayes/NaiveBayesMultinomialText_45_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 18:05:38 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.classifiers.functions.SGDText;
16: import weka.core.Instances;
17: import weka.core.TestInstances;
18: import weka.core.stemmers.NullStemmer;
19: import weka.core.tokenizers.Tokenizer;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_45_tmp__ESTest extends NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=3.1365942754280662
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       TestInstances testInstances0 = new TestInstances();
32:       testInstances0.setRelation("RG1=e66u2");
33:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
34:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText1.m_inputVector;
35:       naiveBayesMultinomialText0.m_inputVector = null;
36:       SGDText sGDText0 = new SGDText();
37:       Tokenizer tokenizer0 = sGDText0.getTokenizer();
38:       naiveBayesMultinomialText0.m_tokenizer = tokenizer0;
39:       naiveBayesMultinomialText0.m_lowercaseTokens = false;
40:       TestInstances.main(testInstances0.DEFAULT_WORDS);
41:       Instances instances0 = testInstances0.generate("");
42:       NullStemmer nullStemmer0 = new NullStemmer();
43:       instances0.remove((Object) nullStemmer0);
44:       naiveBayesMultinomialText0.buildClassifier(instances0);
45:       naiveBayesMultinomialText0.setPeriodicPruning(0);
46:       NaiveBayesMultinomialText.main(testInstances0.DEFAULT_WORDS);
47:       naiveBayesMultinomialText0.tokenizerTipText();
48:       naiveBayesMultinomialText0.getUseStopList();
49:       naiveBayesMultinomialText0.setNorm((-1));
50:       naiveBayesMultinomialText0.lowercaseTokensTipText();
51:       NaiveBayesMultinomialText.main(testInstances0.DEFAULT_WORDS);
52:       naiveBayesMultinomialText0.setLNorm((-1));
53:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
54:       naiveBayesMultinomialText1.reset();
55:       naiveBayesMultinomialText0.stemmerTipText();
56:       double double0 = naiveBayesMultinomialText0.getNorm();
57:       assertEquals((-1.0), naiveBayesMultinomialText0.getLNorm(), 0.01);
58:       assertEquals((-1.0), double0, 0.01);
59:   }
60: }
RegularFileObject[/tmp/EvoSuite_45_1575569138771/weka/classifiers/bayes/NaiveBayesMultinomialText_45_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 18:05:38 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.ChebyshevDistance",
108:       "weka.classifiers.bayes.NaiveBayes",
109:       "weka.core.neighboursearch.CoverTree$MyHeap",
110:       "weka.estimators.IncrementalEstimator",
111:       "weka.estimators.Estimator$Builder",
112:       "weka.core.stemmers.NullStemmer",
113:       "weka.core.EnvironmentHandler",
114:       "weka.classifiers.functions.SGDText",
115:       "weka.core.RelationalLocator",
116:       "weka.classifiers.functions.SMO$BinarySMO",
117:       "weka.core.Utils",
118:       "weka.core.CustomDisplayStringProvider",
119:       "weka.core.tokenizers.Tokenizer",
120:       "weka.core.NormalizableDistance",
121:       "weka.core.NoSupportForMissingValuesException",
122:       "weka.classifiers.UpdateableClassifier",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
124:       "weka.core.TechnicalInformation$Type",
125:       "weka.core.MultiInstanceCapabilitiesHandler",
126:       "weka.core.Copyable",
127:       "weka.core.Capabilities",
128:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
129:       "weka.core.BinarySparseInstance",
130:       "weka.core.AttributeLocator",
131:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
132:       "weka.classifiers.functions.supportVector.CachedKernel",
133:       "weka.core.SerializedObject",
134:       "weka.clusterers.UpdateableClusterer",
135:       "weka.core.Summarizable",
136:       "weka.core.AdditionalMeasureProducer",
137:       "weka.core.neighboursearch.balltrees.BallNode",
138:       "org.pentaho.packageManagement.PackageManager$1",
139:       "weka.core.Drawable",
140:       "weka.core.matrix.Matrix",
141:       "weka.core.CapabilitiesHandler",
142:       "weka.attributeSelection.ASEvaluation",
143:       "weka.core.AbstractInstance",
144:       "weka.core.scripting.JythonObject",
145:       "weka.core.SelectedTag",
146:       "org.pentaho.packageManagement.DefaultPackage",
147:       "weka.estimators.DiscreteEstimator",
148:       "weka.core.neighboursearch.balltrees.BallSplitter",
149:       "weka.classifiers.misc.InputMappedClassifier",
150:       "weka.core.Version",
151:       "weka.filters.AllFilter",
152:       "weka.core.Tag",
153:       "weka.core.neighboursearch.CoverTree",
154:       "weka.classifiers.AbstractClassifier",
155:       "weka.filters.unsupervised.attribute.Center",
156:       "weka.core.OptionHandler",
157:       "weka.core.WekaException",
158:       "weka.filters.StreamableFilter",
159:       "weka.core.Range",
160:       "weka.core.Attribute$1",
161:       "weka.core.scripting.JythonSerializableObject",
162:       "weka.classifiers.Classifier",
163:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
164:       "weka.core.Capabilities$Capability",
165:       "weka.core.SparseInstance",
166:       "org.pentaho.packageManagement.PackageManager",
167:       "weka.estimators.PoissonEstimator",
168:       "weka.core.WekaEnumeration",
169:       "weka.attributeSelection.AttributeTransformer",
170:       "weka.core.tokenizers.WordTokenizer",
171:       "weka.classifiers.misc.SerializedClassifier",
172:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
173:       "weka.attributeSelection.PrincipalComponents",
174:       "weka.core.stemmers.SnowballStemmer",
175:       "weka.core.stemmers.LovinsStemmer",
176:       "weka.classifiers.Evaluation",
177:       "weka.classifiers.functions.supportVector.Kernel",
178:       "weka.core.WekaPackageManager",
179:       "weka.filters.SupervisedFilter",
180:       "weka.classifiers.functions.SMO",
181:       "weka.core.TechnicalInformationHandler",
182:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
183:       "weka.core.Option",
184:       "weka.core.neighboursearch.PerformanceStats",
185:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
186:       "weka.filters.Sourcable",
187:       "weka.core.Attribute",
188:       "weka.core.Stopwords",
189:       "weka.core.FastVector",
190:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
191:       "weka.core.UnassignedDatasetException",
192:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
193:       "weka.classifiers.RandomizableClassifier",
194:       "weka.classifiers.SingleClassifierEnhancer",
195:       "weka.core.RevisionUtils",
196:       "weka.core.Instance",
197:       "weka.classifiers.functions.supportVector.PolyKernel",
198:       "weka.estimators.Estimator",
199:       "weka.core.ProtectedProperties",
200:       "weka.core.StringLocator",
201:       "weka.core.AttributeStats",
202:       "weka.core.WeightedInstancesHandler",
203:       "weka.core.neighboursearch.NearestNeighbourSearch",
204:       "weka.core.TechnicalInformation$Field",
205:       "weka.core.neighboursearch.covertrees.Stack",
206:       "weka.filters.unsupervised.attribute.Remove",
207:       "weka.core.Randomizable",
208:       "weka.classifiers.functions.SGD",
209:       "weka.core.EuclideanDistance",
210:       "weka.core.Instances",
211:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
212:       "weka.filters.unsupervised.attribute.Normalize",
213:       "weka.core.UnassignedClassException",
214:       "weka.classifiers.rules.ZeroR",
215:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
216:       "weka.filters.unsupervised.attribute.Standardize",
217:       "weka.core.TechnicalInformation",
218:       "weka.core.UnsupportedAttributeTypeException",
219:       "weka.classifiers.Sourcable",
220:       "weka.core.RevisionHandler",
221:       "weka.classifiers.evaluation.output.prediction.PlainText",
222:       "weka.experiment.Stats",
223:       "weka.core.neighboursearch.TreePerformanceStats",
224:       "weka.core.xml.XMLSerialization",
225:       "weka.classifiers.xml.XMLClassifier",
226:       "weka.filters.Filter",
227:       "weka.filters.supervised.attribute.Discretize"
228:     );
229:   } 
230: 
231:   private static void resetClasses() {
232:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding.class.getClassLoader()); 
233: 
234:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
235:       "weka.classifiers.AbstractClassifier",
236:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
237:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
238:       "weka.core.Capabilities$Capability",
239:       "weka.core.tokenizers.Tokenizer",
240:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
241:       "weka.core.tokenizers.WordTokenizer",
242:       "weka.core.stemmers.NullStemmer",
243:       "weka.core.NormalizableDistance",
244:       "weka.core.ChebyshevDistance",
245:       "weka.core.Range",
246:       "weka.core.AbstractInstance",
247:       "weka.core.SparseInstance",
248:       "weka.core.BinarySparseInstance",
249:       "weka.core.RevisionUtils",
250:       "weka.classifiers.misc.SerializedClassifier",
251:       "weka.core.Utils",
252:       "weka.core.tokenizers.NGramTokenizer",
253:       "weka.core.Option",
254:       "weka.core.neighboursearch.balltrees.BallNode",
255:       "weka.core.UnassignedDatasetException",
256:       "weka.classifiers.Evaluation",
257:       "weka.core.DenseInstance",
258:       "weka.core.stemmers.LovinsStemmer",
259:       "weka.classifiers.SingleClassifierEnhancer",
260:       "weka.classifiers.misc.InputMappedClassifier",
261:       "weka.classifiers.rules.ZeroR",
262:       "weka.core.SerializedObject",
263:       "weka.classifiers.bayes.BayesNet",
264:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
265:       "weka.core.Tag",
266:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
267:       "weka.classifiers.bayes.net.search.local.K2",
268:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
269:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
270:       "weka.core.Capabilities",
271:       "org.pentaho.packageManagement.PackageManager",
272:       "org.pentaho.packageManagement.DefaultPackageManager",
273:       "weka.core.Version",
274:       "weka.core.Environment",
275:       "weka.core.WekaPackageManager",
276:       "weka.core.stemmers.Stemming",
277:       "weka.core.Instances",
278:       "weka.classifiers.RandomizableClassifier",
279:       "weka.classifiers.functions.SGDText",
280:       "weka.core.tokenizers.AlphabeticTokenizer",
281:       "weka.core.neighboursearch.NearestNeighbourSearch",
282:       "weka.core.neighboursearch.KDTree",
283:       "weka.core.EuclideanDistance",
284:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
285:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
286:       "weka.core.TechnicalInformation",
287:       "weka.core.TechnicalInformation$Type",
288:       "weka.core.TechnicalInformation$Field",
289:       "weka.attributeSelection.ASEvaluation",
290:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
291:       "weka.attributeSelection.PrincipalComponents",
292:       "weka.core.TestInstances",
293:       "weka.core.Attribute",
294:       "weka.core.ProtectedProperties",
295:       "weka.core.WekaEnumeration",
296:       "weka.core.Attribute$1",
297:       "weka.core.stemmers.SnowballStemmer",
298:       "weka.core.neighboursearch.LinearNNSearch",
299:       "weka.attributeSelection.GainRatioAttributeEval",
300:       "weka.attributeSelection.AttributeSelection",
301:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
302:       "weka.classifiers.meta.CostSensitiveClassifier",
303:       "weka.classifiers.CostMatrix",
304:       "weka.estimators.Estimator",
305:       "weka.estimators.DiscreteEstimator",
306:       "weka.core.UnassignedClassException",
307:       "weka.core.SerializationHelper",
308:       "weka.core.Javadoc",
309:       "weka.core.OptionHandlerJavadoc",
310:       "weka.core.Check",
311:       "weka.core.CheckOptionHandler",
312:       "weka.core.neighboursearch.CoverTree",
313:       "weka.classifiers.rules.PART",
314:       "weka.filters.Filter",
315:       "weka.filters.SimpleFilter",
316:       "weka.filters.SimpleStreamFilter",
317:       "weka.filters.MultiFilter",
318:       "weka.filters.AllFilter",
319:       "weka.classifiers.meta.RegressionByDiscretization",
320:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
321:       "weka.filters.unsupervised.attribute.Discretize",
322:       "weka.classifiers.trees.J48",
323:       "weka.core.SelectedTag",
324:       "weka.classifiers.bayes.NaiveBayes",
325:       "weka.filters.supervised.attribute.Discretize",
326:       "weka.core.neighboursearch.BallTree",
327:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
328:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
329:       "weka.core.neighboursearch.balltrees.BallSplitter",
330:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
331:       "weka.classifiers.functions.GaussianProcesses",
332:       "weka.classifiers.functions.supportVector.Kernel",
333:       "weka.classifiers.functions.supportVector.CachedKernel",
334:       "weka.classifiers.functions.supportVector.PolyKernel",
335:       "weka.core.WekaException",
336:       "weka.core.UnsupportedAttributeTypeException",
337:       "weka.classifiers.bayes.net.BIFReader",
338:       "weka.classifiers.lazy.IBk",
339:       "weka.core.converters.ArffLoader$ArffReader",
340:       "weka.core.Stopwords",
341:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
342:       "weka.classifiers.trees.LMT",
343:       "weka.core.FindWithCapabilities",
344:       "weka.core.SingleIndex",
345:       "weka.core.MinkowskiDistance",
346:       "weka.attributeSelection.CorrelationAttributeEval",
347:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
348:       "weka.classifiers.IteratedSingleClassifierEnhancer",
349:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.LogitBoost",
351:       "weka.classifiers.trees.DecisionStump",
352:       "weka.attributeSelection.ReliefFAttributeEval",
353:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
354:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
355:       "weka.classifiers.rules.part.MakeDecList",
356:       "weka.classifiers.bayes.NaiveBayesMultinomial",
357:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
358:       "weka.core.stemmers.IteratedLovinsStemmer",
359:       "weka.classifiers.functions.LinearRegression",
360:       "weka.classifiers.functions.SMOreg",
361:       "weka.classifiers.functions.supportVector.RegOptimizer",
362:       "weka.classifiers.functions.supportVector.RegSMO",
363:       "weka.classifiers.functions.supportVector.RegSMOImproved",
364:       "weka.classifiers.trees.j48.ClassifierTree",
365:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
366:       "weka.classifiers.functions.SGDText$Count",
367:       "weka.classifiers.meta.AdaBoostM1",
368:       "weka.attributeSelection.InfoGainAttributeEval",
369:       "weka.estimators.PoissonEstimator",
370:       "weka.estimators.KernelEstimator",
371:       "weka.attributeSelection.WrapperSubsetEval",
372:       "weka.classifiers.functions.supportVector.RBFKernel",
373:       "weka.classifiers.functions.supportVector.Puk",
374:       "weka.classifiers.lazy.KStar",
375:       "weka.classifiers.meta.AdditiveRegression",
376:       "weka.classifiers.meta.AttributeSelectedClassifier",
377:       "weka.attributeSelection.CfsSubsetEval",
378:       "weka.attributeSelection.ASSearch",
379:       "weka.attributeSelection.BestFirst",
380:       "weka.classifiers.MultipleClassifiersCombiner",
381:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
382:       "weka.classifiers.meta.MultiScheme",
383:       "weka.classifiers.rules.JRip",
384:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
385:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
386:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
387:       "weka.classifiers.meta.RandomSubSpace",
388:       "weka.classifiers.trees.REPTree",
389:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
390:       "weka.attributeSelection.OneRAttributeEval",
391:       "weka.classifiers.functions.MultilayerPerceptron",
392:       "weka.core.FastVector",
393:       "weka.filters.unsupervised.attribute.NominalToBinary",
394:       "weka.classifiers.functions.neural.SigmoidUnit",
395:       "weka.classifiers.functions.neural.LinearUnit",
396:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
397:       "weka.classifiers.meta.Bagging",
398:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
399:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
400:       "weka.classifiers.meta.Stacking",
401:       "weka.classifiers.functions.SimpleLinearRegression",
402:       "weka.classifiers.meta.CVParameterSelection",
403:       "weka.classifiers.lazy.LWL",
404:       "weka.classifiers.functions.Logistic",
405:       "weka.core.matrix.Matrix",
406:       "weka.classifiers.functions.neural.NeuralConnection",
407:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
408:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
409:       "weka.classifiers.meta.FilteredClassifier",
410:       "weka.filters.supervised.attribute.AttributeSelection",
411:       "weka.attributeSelection.GreedyStepwise",
412:       "weka.classifiers.functions.SMO",
413:       "weka.classifiers.rules.OneR",
414:       "weka.estimators.NormalEstimator",
415:       "weka.classifiers.trees.RandomTree",
416:       "weka.classifiers.functions.VotedPerceptron",
417:       "weka.core.AttributeStats",
418:       "weka.experiment.Stats",
419:       "weka.core.CheckGOE",
420:       "weka.classifiers.meta.MultiClassClassifier",
421:       "weka.classifiers.functions.SimpleLogistic",
422:       "weka.classifiers.meta.RandomCommittee",
423:       "weka.classifiers.trees.RandomForest",
424:       "weka.classifiers.functions.supportVector.StringKernel",
425:       "weka.classifiers.meta.Vote",
426:       "weka.classifiers.trees.m5.M5Base",
427:       "weka.classifiers.rules.M5Rules",
428:       "weka.classifiers.functions.SGD",
429:       "weka.classifiers.meta.ClassificationViaRegression",
430:       "weka.classifiers.trees.M5P"
431:     );
432:   }
433: }

[MASTER] 18:05:38.814 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
TestInstances testInstances0 = new TestInstances();
testInstances0.setRelation("RG1=e66u2");
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText1.m_inputVector;
naiveBayesMultinomialText0.m_inputVector = null;
SGDText sGDText0 = new SGDText();
Tokenizer tokenizer0 = sGDText0.getTokenizer();
naiveBayesMultinomialText0.m_tokenizer = tokenizer0;
naiveBayesMultinomialText0.m_lowercaseTokens = false;
TestInstances.main(testInstances0.DEFAULT_WORDS);
Instances instances0 = testInstances0.generate("");
NullStemmer nullStemmer0 = new NullStemmer();
instances0.remove((Object) nullStemmer0);
naiveBayesMultinomialText0.buildClassifier(instances0);
naiveBayesMultinomialText0.setPeriodicPruning(0);
NaiveBayesMultinomialText.main(testInstances0.DEFAULT_WORDS);
naiveBayesMultinomialText0.tokenizerTipText();
naiveBayesMultinomialText0.getUseStopList();
naiveBayesMultinomialText0.setNorm((-1));
naiveBayesMultinomialText0.lowercaseTokensTipText();
NaiveBayesMultinomialText.main(testInstances0.DEFAULT_WORDS);
naiveBayesMultinomialText0.setLNorm((-1));
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.reset();
naiveBayesMultinomialText0.stemmerTipText();
double double0 = naiveBayesMultinomialText0.getNorm();
assertEquals((-1.0), naiveBayesMultinomialText0.getLNorm(), 0.01);
assertEquals((-1.0), double0, 0.01);


[MASTER] 18:05:39.164 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_54_1575569139129/weka/classifiers/bayes/NaiveBayesMultinomialText_54_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_54_1575569139129/weka/classifiers/bayes/NaiveBayesMultinomialText_54_tmp__ESTest_scaffolding.java]]
[MASTER] 18:05:39.164 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:05:39.164 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:05:39.165 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 18:05:39.165 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_54_1575569139129/weka/classifiers/bayes/NaiveBayesMultinomialText_54_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 18:05:39 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.classifiers.functions.SGDText;
16: import weka.core.ChebyshevDistance;
17: import weka.core.Instances;
18: import weka.core.TestInstances;
19: import weka.core.stemmers.NullStemmer;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_54_tmp__ESTest extends NaiveBayesMultinomialText_54_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=2.288902326370912
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       TestInstances testInstances0 = new TestInstances();
32:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
33:       SGDText sGDText0 = new SGDText();
34:       sGDText0.setUseWordFrequencies(false);
35:       TestInstances.main(testInstances0.DEFAULT_WORDS);
36:       Instances instances0 = testInstances0.generate("");
37:       NullStemmer nullStemmer0 = new NullStemmer();
38:       ChebyshevDistance chebyshevDistance0 = new ChebyshevDistance(instances0);
39:       naiveBayesMultinomialText0.m_leplace = (-361.94);
40:       naiveBayesMultinomialText0.buildClassifier(instances0);
41:       naiveBayesMultinomialText0.setPeriodicPruning(1);
42:       naiveBayesMultinomialText0.pruneDictionary();
43:       naiveBayesMultinomialText0.useStopListTipText();
44:       assertEquals(1, naiveBayesMultinomialText0.getPeriodicPruning());
45:   }
46: }
RegularFileObject[/tmp/EvoSuite_54_1575569139129/weka/classifiers/bayes/NaiveBayesMultinomialText_54_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 18:05:39 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_54_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_54_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.ChebyshevDistance",
108:       "weka.classifiers.bayes.NaiveBayes",
109:       "weka.core.neighboursearch.CoverTree$MyHeap",
110:       "weka.estimators.IncrementalEstimator",
111:       "weka.estimators.Estimator$Builder",
112:       "weka.core.stemmers.NullStemmer",
113:       "weka.core.EnvironmentHandler",
114:       "weka.classifiers.functions.SGDText",
115:       "weka.core.RelationalLocator",
116:       "weka.classifiers.functions.SMO$BinarySMO",
117:       "weka.core.Utils",
118:       "weka.core.CustomDisplayStringProvider",
119:       "weka.core.tokenizers.Tokenizer",
120:       "weka.core.NormalizableDistance",
121:       "weka.core.NoSupportForMissingValuesException",
122:       "weka.classifiers.UpdateableClassifier",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
124:       "weka.core.TechnicalInformation$Type",
125:       "weka.core.MultiInstanceCapabilitiesHandler",
126:       "weka.core.Copyable",
127:       "weka.core.Capabilities",
128:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
129:       "weka.core.BinarySparseInstance",
130:       "weka.core.AttributeLocator",
131:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
132:       "weka.classifiers.functions.supportVector.CachedKernel",
133:       "weka.core.SerializedObject",
134:       "weka.clusterers.UpdateableClusterer",
135:       "weka.core.Summarizable",
136:       "weka.core.AdditionalMeasureProducer",
137:       "weka.core.neighboursearch.balltrees.BallNode",
138:       "org.pentaho.packageManagement.PackageManager$1",
139:       "weka.core.Drawable",
140:       "weka.core.matrix.Matrix",
141:       "weka.core.CapabilitiesHandler",
142:       "weka.attributeSelection.ASEvaluation",
143:       "weka.core.AbstractInstance",
144:       "weka.core.scripting.JythonObject",
145:       "weka.core.SelectedTag",
146:       "org.pentaho.packageManagement.DefaultPackage",
147:       "weka.estimators.DiscreteEstimator",
148:       "weka.core.neighboursearch.balltrees.BallSplitter",
149:       "weka.classifiers.misc.InputMappedClassifier",
150:       "weka.core.Version",
151:       "weka.filters.AllFilter",
152:       "weka.core.Tag",
153:       "weka.core.neighboursearch.CoverTree",
154:       "weka.classifiers.AbstractClassifier",
155:       "weka.filters.unsupervised.attribute.Center",
156:       "weka.core.OptionHandler",
157:       "weka.core.WekaException",
158:       "weka.filters.StreamableFilter",
159:       "weka.core.Range",
160:       "weka.core.Attribute$1",
161:       "weka.core.scripting.JythonSerializableObject",
162:       "weka.classifiers.Classifier",
163:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
164:       "weka.core.Capabilities$Capability",
165:       "weka.core.SparseInstance",
166:       "org.pentaho.packageManagement.PackageManager",
167:       "weka.estimators.PoissonEstimator",
168:       "weka.core.WekaEnumeration",
169:       "weka.attributeSelection.AttributeTransformer",
170:       "weka.core.tokenizers.WordTokenizer",
171:       "weka.classifiers.misc.SerializedClassifier",
172:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
173:       "weka.attributeSelection.PrincipalComponents",
174:       "weka.core.stemmers.SnowballStemmer",
175:       "weka.core.stemmers.LovinsStemmer",
176:       "weka.classifiers.Evaluation",
177:       "weka.classifiers.functions.supportVector.Kernel",
178:       "weka.core.WekaPackageManager",
179:       "weka.filters.SupervisedFilter",
180:       "weka.classifiers.functions.SMO",
181:       "weka.core.TechnicalInformationHandler",
182:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
183:       "weka.core.Option",
184:       "weka.core.neighboursearch.PerformanceStats",
185:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
186:       "weka.filters.Sourcable",
187:       "weka.core.Attribute",
188:       "weka.core.Stopwords",
189:       "weka.core.FastVector",
190:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
191:       "weka.core.UnassignedDatasetException",
192:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
193:       "weka.classifiers.RandomizableClassifier",
194:       "weka.classifiers.SingleClassifierEnhancer",
195:       "weka.core.RevisionUtils",
196:       "weka.core.Instance",
197:       "weka.classifiers.functions.supportVector.PolyKernel",
198:       "weka.estimators.Estimator",
199:       "weka.core.ProtectedProperties",
200:       "weka.core.StringLocator",
201:       "weka.core.AttributeStats",
202:       "weka.core.WeightedInstancesHandler",
203:       "weka.core.neighboursearch.NearestNeighbourSearch",
204:       "weka.core.TechnicalInformation$Field",
205:       "weka.core.neighboursearch.covertrees.Stack",
206:       "weka.filters.unsupervised.attribute.Remove",
207:       "weka.core.Randomizable",
208:       "weka.classifiers.functions.SGD",
209:       "weka.core.EuclideanDistance",
210:       "weka.core.Instances",
211:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
212:       "weka.filters.unsupervised.attribute.Normalize",
213:       "weka.core.UnassignedClassException",
214:       "weka.classifiers.rules.ZeroR",
215:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
216:       "weka.filters.unsupervised.attribute.Standardize",
217:       "weka.core.TechnicalInformation",
218:       "weka.core.UnsupportedAttributeTypeException",
219:       "weka.classifiers.Sourcable",
220:       "weka.core.RevisionHandler",
221:       "weka.classifiers.evaluation.output.prediction.PlainText",
222:       "weka.experiment.Stats",
223:       "weka.core.neighboursearch.TreePerformanceStats",
224:       "weka.core.xml.XMLSerialization",
225:       "weka.classifiers.xml.XMLClassifier",
226:       "weka.filters.Filter",
227:       "weka.filters.supervised.attribute.Discretize"
228:     );
229:   } 
230: 
231:   private static void resetClasses() {
232:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_54_tmp__ESTest_scaffolding.class.getClassLoader()); 
233: 
234:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
235:       "weka.classifiers.AbstractClassifier",
236:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
237:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
238:       "weka.core.Capabilities$Capability",
239:       "weka.core.tokenizers.Tokenizer",
240:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
241:       "weka.core.tokenizers.WordTokenizer",
242:       "weka.core.stemmers.NullStemmer",
243:       "weka.core.NormalizableDistance",
244:       "weka.core.ChebyshevDistance",
245:       "weka.core.Range",
246:       "weka.core.AbstractInstance",
247:       "weka.core.SparseInstance",
248:       "weka.core.BinarySparseInstance",
249:       "weka.core.RevisionUtils",
250:       "weka.classifiers.misc.SerializedClassifier",
251:       "weka.core.Utils",
252:       "weka.core.tokenizers.NGramTokenizer",
253:       "weka.core.Option",
254:       "weka.core.neighboursearch.balltrees.BallNode",
255:       "weka.core.UnassignedDatasetException",
256:       "weka.classifiers.Evaluation",
257:       "weka.core.DenseInstance",
258:       "weka.core.stemmers.LovinsStemmer",
259:       "weka.classifiers.SingleClassifierEnhancer",
260:       "weka.classifiers.misc.InputMappedClassifier",
261:       "weka.classifiers.rules.ZeroR",
262:       "weka.core.SerializedObject",
263:       "weka.classifiers.bayes.BayesNet",
264:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
265:       "weka.core.Tag",
266:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
267:       "weka.classifiers.bayes.net.search.local.K2",
268:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
269:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
270:       "weka.core.Capabilities",
271:       "org.pentaho.packageManagement.PackageManager",
272:       "org.pentaho.packageManagement.DefaultPackageManager",
273:       "weka.core.Version",
274:       "weka.core.Environment",
275:       "weka.core.WekaPackageManager",
276:       "weka.core.stemmers.Stemming",
277:       "weka.core.Instances",
278:       "weka.classifiers.RandomizableClassifier",
279:       "weka.classifiers.functions.SGDText",
280:       "weka.core.tokenizers.AlphabeticTokenizer",
281:       "weka.core.neighboursearch.NearestNeighbourSearch",
282:       "weka.core.neighboursearch.KDTree",
283:       "weka.core.EuclideanDistance",
284:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
285:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
286:       "weka.core.TechnicalInformation",
287:       "weka.core.TechnicalInformation$Type",
288:       "weka.core.TechnicalInformation$Field",
289:       "weka.attributeSelection.ASEvaluation",
290:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
291:       "weka.attributeSelection.PrincipalComponents",
292:       "weka.core.TestInstances",
293:       "weka.core.Attribute",
294:       "weka.core.ProtectedProperties",
295:       "weka.core.WekaEnumeration",
296:       "weka.core.Attribute$1",
297:       "weka.core.stemmers.SnowballStemmer",
298:       "weka.core.neighboursearch.LinearNNSearch",
299:       "weka.attributeSelection.GainRatioAttributeEval",
300:       "weka.attributeSelection.AttributeSelection",
301:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
302:       "weka.classifiers.meta.CostSensitiveClassifier",
303:       "weka.classifiers.CostMatrix",
304:       "weka.estimators.Estimator",
305:       "weka.estimators.DiscreteEstimator",
306:       "weka.core.UnassignedClassException",
307:       "weka.core.SerializationHelper",
308:       "weka.core.Javadoc",
309:       "weka.core.OptionHandlerJavadoc",
310:       "weka.core.Check",
311:       "weka.core.CheckOptionHandler",
312:       "weka.core.neighboursearch.CoverTree",
313:       "weka.classifiers.rules.PART",
314:       "weka.filters.Filter",
315:       "weka.filters.SimpleFilter",
316:       "weka.filters.SimpleStreamFilter",
317:       "weka.filters.MultiFilter",
318:       "weka.filters.AllFilter",
319:       "weka.classifiers.meta.RegressionByDiscretization",
320:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
321:       "weka.filters.unsupervised.attribute.Discretize",
322:       "weka.classifiers.trees.J48",
323:       "weka.core.SelectedTag",
324:       "weka.classifiers.bayes.NaiveBayes",
325:       "weka.filters.supervised.attribute.Discretize",
326:       "weka.core.neighboursearch.BallTree",
327:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
328:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
329:       "weka.core.neighboursearch.balltrees.BallSplitter",
330:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
331:       "weka.classifiers.functions.GaussianProcesses",
332:       "weka.classifiers.functions.supportVector.Kernel",
333:       "weka.classifiers.functions.supportVector.CachedKernel",
334:       "weka.classifiers.functions.supportVector.PolyKernel",
335:       "weka.core.WekaException",
336:       "weka.core.UnsupportedAttributeTypeException",
337:       "weka.classifiers.bayes.net.BIFReader",
338:       "weka.classifiers.lazy.IBk",
339:       "weka.core.converters.ArffLoader$ArffReader",
340:       "weka.core.Stopwords",
341:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
342:       "weka.classifiers.trees.LMT",
343:       "weka.core.FindWithCapabilities",
344:       "weka.core.SingleIndex",
345:       "weka.core.MinkowskiDistance",
346:       "weka.attributeSelection.CorrelationAttributeEval",
347:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
348:       "weka.classifiers.IteratedSingleClassifierEnhancer",
349:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.LogitBoost",
351:       "weka.classifiers.trees.DecisionStump",
352:       "weka.attributeSelection.ReliefFAttributeEval",
353:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
354:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
355:       "weka.classifiers.rules.part.MakeDecList",
356:       "weka.classifiers.bayes.NaiveBayesMultinomial",
357:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
358:       "weka.core.stemmers.IteratedLovinsStemmer",
359:       "weka.classifiers.functions.LinearRegression",
360:       "weka.classifiers.functions.SMOreg",
361:       "weka.classifiers.functions.supportVector.RegOptimizer",
362:       "weka.classifiers.functions.supportVector.RegSMO",
363:       "weka.classifiers.functions.supportVector.RegSMOImproved",
364:       "weka.classifiers.trees.j48.ClassifierTree",
365:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
366:       "weka.classifiers.functions.SGDText$Count",
367:       "weka.classifiers.meta.AdaBoostM1",
368:       "weka.attributeSelection.InfoGainAttributeEval",
369:       "weka.estimators.PoissonEstimator",
370:       "weka.estimators.KernelEstimator",
371:       "weka.attributeSelection.WrapperSubsetEval",
372:       "weka.classifiers.functions.supportVector.RBFKernel",
373:       "weka.classifiers.functions.supportVector.Puk",
374:       "weka.classifiers.lazy.KStar",
375:       "weka.classifiers.meta.AdditiveRegression",
376:       "weka.classifiers.meta.AttributeSelectedClassifier",
377:       "weka.attributeSelection.CfsSubsetEval",
378:       "weka.attributeSelection.ASSearch",
379:       "weka.attributeSelection.BestFirst",
380:       "weka.classifiers.MultipleClassifiersCombiner",
381:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
382:       "weka.classifiers.meta.MultiScheme",
383:       "weka.classifiers.rules.JRip",
384:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
385:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
386:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
387:       "weka.classifiers.meta.RandomSubSpace",
388:       "weka.classifiers.trees.REPTree",
389:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
390:       "weka.attributeSelection.OneRAttributeEval",
391:       "weka.classifiers.functions.MultilayerPerceptron",
392:       "weka.core.FastVector",
393:       "weka.filters.unsupervised.attribute.NominalToBinary",
394:       "weka.classifiers.functions.neural.SigmoidUnit",
395:       "weka.classifiers.functions.neural.LinearUnit",
396:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
397:       "weka.classifiers.meta.Bagging",
398:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
399:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
400:       "weka.classifiers.meta.Stacking",
401:       "weka.classifiers.functions.SimpleLinearRegression",
402:       "weka.classifiers.meta.CVParameterSelection",
403:       "weka.classifiers.lazy.LWL",
404:       "weka.classifiers.functions.Logistic",
405:       "weka.core.matrix.Matrix",
406:       "weka.classifiers.functions.neural.NeuralConnection",
407:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
408:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
409:       "weka.classifiers.meta.FilteredClassifier",
410:       "weka.filters.supervised.attribute.AttributeSelection",
411:       "weka.attributeSelection.GreedyStepwise",
412:       "weka.classifiers.functions.SMO",
413:       "weka.classifiers.rules.OneR",
414:       "weka.estimators.NormalEstimator",
415:       "weka.classifiers.trees.RandomTree",
416:       "weka.classifiers.functions.VotedPerceptron",
417:       "weka.core.AttributeStats",
418:       "weka.experiment.Stats",
419:       "weka.core.CheckGOE",
420:       "weka.classifiers.meta.MultiClassClassifier",
421:       "weka.classifiers.functions.SimpleLogistic",
422:       "weka.classifiers.meta.RandomCommittee",
423:       "weka.classifiers.trees.RandomForest",
424:       "weka.classifiers.functions.supportVector.StringKernel",
425:       "weka.classifiers.meta.Vote",
426:       "weka.classifiers.trees.m5.M5Base",
427:       "weka.classifiers.rules.M5Rules",
428:       "weka.classifiers.functions.SGD",
429:       "weka.classifiers.meta.ClassificationViaRegression",
430:       "weka.classifiers.trees.M5P"
431:     );
432:   }
433: }

[MASTER] 18:05:39.166 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
TestInstances testInstances0 = new TestInstances();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
SGDText sGDText0 = new SGDText();
sGDText0.setUseWordFrequencies(false);
TestInstances.main(testInstances0.DEFAULT_WORDS);
Instances instances0 = testInstances0.generate("");
NullStemmer nullStemmer0 = new NullStemmer();
ChebyshevDistance chebyshevDistance0 = new ChebyshevDistance(instances0);
naiveBayesMultinomialText0.m_leplace = (-361.94);
naiveBayesMultinomialText0.buildClassifier(instances0);
naiveBayesMultinomialText0.setPeriodicPruning(1);
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.useStopListTipText();
assertEquals(1, naiveBayesMultinomialText0.getPeriodicPruning());


[MASTER] 18:05:39.248 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_56_1575569139218/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_56_1575569139218/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding.java]]
[MASTER] 18:05:39.249 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:05:39.249 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:05:39.249 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 18:05:39.250 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_56_1575569139218/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 18:05:39 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.core.stemmers.NullStemmer;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_56_tmp__ESTest extends NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=2.6772245773362195
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
28:       naiveBayesMultinomialText0.m_inputVector = null;
29:       naiveBayesMultinomialText0.stemmerTipText();
30:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
31:       
32:       naiveBayesMultinomialText0.m_wordFrequencies = true;
33:       naiveBayesMultinomialText0.setLNorm(0);
34:       naiveBayesMultinomialText0.setPeriodicPruning(0);
35:       NullStemmer nullStemmer0 = new NullStemmer();
36:       naiveBayesMultinomialText0.setStemmer(nullStemmer0);
37:       nullStemmer0.stem("The stemming algorithm to use on the words.");
38:       naiveBayesMultinomialText0.getNormalizeDocLength();
39:       naiveBayesMultinomialText0.getStopwords();
40:       naiveBayesMultinomialText0.setStemmer(nullStemmer0);
41:       String[] stringArray0 = new String[5];
42:       stringArray0[0] = "The stemming algorithm to use on the words.";
43:       stringArray0[1] = "The stemming algorithm to use on the words.";
44:       stringArray0[2] = "The stemming algorithm to use on the words.";
45:       stringArray0[3] = "The stemming algorithm to use on the words.";
46:       stringArray0[4] = "The stemming algorithm to use on the words.";
47:       NaiveBayesMultinomialText.main(stringArray0);
48:       double double0 = naiveBayesMultinomialText0.getLNorm();
49:       assertEquals(0.0, double0, 0.01);
50:   }
51: }
RegularFileObject[/tmp/EvoSuite_56_1575569139218/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 18:05:39 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.core.ChebyshevDistance",
108:       "weka.classifiers.bayes.NaiveBayes",
109:       "weka.core.neighboursearch.CoverTree$MyHeap",
110:       "weka.estimators.IncrementalEstimator",
111:       "weka.estimators.Estimator$Builder",
112:       "weka.core.stemmers.NullStemmer",
113:       "weka.core.EnvironmentHandler",
114:       "weka.classifiers.functions.SGDText",
115:       "weka.core.RelationalLocator",
116:       "weka.classifiers.functions.SMO$BinarySMO",
117:       "weka.core.Utils",
118:       "weka.core.CustomDisplayStringProvider",
119:       "weka.core.tokenizers.Tokenizer",
120:       "weka.core.NormalizableDistance",
121:       "weka.core.NoSupportForMissingValuesException",
122:       "weka.classifiers.UpdateableClassifier",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
124:       "weka.core.TechnicalInformation$Type",
125:       "weka.core.MultiInstanceCapabilitiesHandler",
126:       "weka.core.Copyable",
127:       "weka.core.Capabilities",
128:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
129:       "weka.core.BinarySparseInstance",
130:       "weka.core.AttributeLocator",
131:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
132:       "weka.classifiers.functions.supportVector.CachedKernel",
133:       "weka.core.SerializedObject",
134:       "weka.clusterers.UpdateableClusterer",
135:       "weka.core.Summarizable",
136:       "weka.core.AdditionalMeasureProducer",
137:       "weka.core.neighboursearch.balltrees.BallNode",
138:       "org.pentaho.packageManagement.PackageManager$1",
139:       "weka.core.Drawable",
140:       "weka.core.matrix.Matrix",
141:       "weka.core.CapabilitiesHandler",
142:       "weka.attributeSelection.ASEvaluation",
143:       "weka.core.AbstractInstance",
144:       "weka.core.scripting.JythonObject",
145:       "weka.core.SelectedTag",
146:       "org.pentaho.packageManagement.DefaultPackage",
147:       "weka.estimators.DiscreteEstimator",
148:       "weka.core.neighboursearch.balltrees.BallSplitter",
149:       "weka.classifiers.misc.InputMappedClassifier",
150:       "weka.core.Version",
151:       "weka.filters.AllFilter",
152:       "weka.core.Tag",
153:       "weka.core.neighboursearch.CoverTree",
154:       "weka.classifiers.AbstractClassifier",
155:       "weka.filters.unsupervised.attribute.Center",
156:       "weka.core.OptionHandler",
157:       "weka.core.WekaException",
158:       "weka.filters.StreamableFilter",
159:       "weka.core.Range",
160:       "weka.core.Attribute$1",
161:       "weka.core.scripting.JythonSerializableObject",
162:       "weka.classifiers.Classifier",
163:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
164:       "weka.core.Capabilities$Capability",
165:       "weka.core.SparseInstance",
166:       "org.pentaho.packageManagement.PackageManager",
167:       "weka.estimators.PoissonEstimator",
168:       "weka.core.WekaEnumeration",
169:       "weka.attributeSelection.AttributeTransformer",
170:       "weka.core.tokenizers.WordTokenizer",
171:       "weka.classifiers.misc.SerializedClassifier",
172:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
173:       "weka.attributeSelection.PrincipalComponents",
174:       "weka.core.stemmers.SnowballStemmer",
175:       "weka.core.stemmers.LovinsStemmer",
176:       "weka.classifiers.Evaluation",
177:       "weka.classifiers.functions.supportVector.Kernel",
178:       "weka.core.WekaPackageManager",
179:       "weka.filters.SupervisedFilter",
180:       "weka.classifiers.functions.SMO",
181:       "weka.core.TechnicalInformationHandler",
182:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
183:       "weka.core.Option",
184:       "weka.core.neighboursearch.PerformanceStats",
185:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
186:       "weka.filters.Sourcable",
187:       "weka.core.Attribute",
188:       "weka.core.Stopwords",
189:       "weka.core.FastVector",
190:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
191:       "weka.core.UnassignedDatasetException",
192:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
193:       "weka.classifiers.RandomizableClassifier",
194:       "weka.classifiers.SingleClassifierEnhancer",
195:       "weka.core.RevisionUtils",
196:       "weka.core.Instance",
197:       "weka.classifiers.functions.supportVector.PolyKernel",
198:       "weka.estimators.Estimator",
199:       "weka.core.ProtectedProperties",
200:       "weka.core.StringLocator",
201:       "weka.core.AttributeStats",
202:       "weka.core.WeightedInstancesHandler",
203:       "weka.core.neighboursearch.NearestNeighbourSearch",
204:       "weka.core.TechnicalInformation$Field",
205:       "weka.core.neighboursearch.covertrees.Stack",
206:       "weka.filters.unsupervised.attribute.Remove",
207:       "weka.core.Randomizable",
208:       "weka.classifiers.functions.SGD",
209:       "weka.core.EuclideanDistance",
210:       "weka.core.Instances",
211:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
212:       "weka.filters.unsupervised.attribute.Normalize",
213:       "weka.core.UnassignedClassException",
214:       "weka.classifiers.rules.ZeroR",
215:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
216:       "weka.filters.unsupervised.attribute.Standardize",
217:       "weka.core.TechnicalInformation",
218:       "weka.core.UnsupportedAttributeTypeException",
219:       "weka.classifiers.Sourcable",
220:       "weka.core.RevisionHandler",
221:       "weka.classifiers.evaluation.output.prediction.PlainText",
222:       "weka.experiment.Stats",
223:       "weka.core.neighboursearch.TreePerformanceStats",
224:       "weka.core.xml.XMLSerialization",
225:       "weka.classifiers.xml.XMLClassifier",
226:       "weka.filters.Filter",
227:       "weka.filters.supervised.attribute.Discretize"
228:     );
229:   } 
230: 
231:   private static void resetClasses() {
232:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding.class.getClassLoader()); 
233: 
234:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
235:       "weka.classifiers.AbstractClassifier",
236:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
237:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
238:       "weka.core.Capabilities$Capability",
239:       "weka.core.tokenizers.Tokenizer",
240:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
241:       "weka.core.tokenizers.WordTokenizer",
242:       "weka.core.stemmers.NullStemmer",
243:       "weka.core.NormalizableDistance",
244:       "weka.core.ChebyshevDistance",
245:       "weka.core.Range",
246:       "weka.core.AbstractInstance",
247:       "weka.core.SparseInstance",
248:       "weka.core.BinarySparseInstance",
249:       "weka.core.RevisionUtils",
250:       "weka.classifiers.misc.SerializedClassifier",
251:       "weka.core.Utils",
252:       "weka.core.tokenizers.NGramTokenizer",
253:       "weka.core.Option",
254:       "weka.core.neighboursearch.balltrees.BallNode",
255:       "weka.core.UnassignedDatasetException",
256:       "weka.classifiers.Evaluation",
257:       "weka.core.DenseInstance",
258:       "weka.core.stemmers.LovinsStemmer",
259:       "weka.classifiers.SingleClassifierEnhancer",
260:       "weka.classifiers.misc.InputMappedClassifier",
261:       "weka.classifiers.rules.ZeroR",
262:       "weka.core.SerializedObject",
263:       "weka.classifiers.bayes.BayesNet",
264:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
265:       "weka.core.Tag",
266:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
267:       "weka.classifiers.bayes.net.search.local.K2",
268:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
269:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
270:       "weka.core.Capabilities",
271:       "org.pentaho.packageManagement.PackageManager",
272:       "org.pentaho.packageManagement.DefaultPackageManager",
273:       "weka.core.Version",
274:       "weka.core.Environment",
275:       "weka.core.WekaPackageManager",
276:       "weka.core.stemmers.Stemming",
277:       "weka.core.Instances",
278:       "weka.classifiers.RandomizableClassifier",
279:       "weka.classifiers.functions.SGDText",
280:       "weka.core.tokenizers.AlphabeticTokenizer",
281:       "weka.core.neighboursearch.NearestNeighbourSearch",
282:       "weka.core.neighboursearch.KDTree",
283:       "weka.core.EuclideanDistance",
284:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
285:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
286:       "weka.core.TechnicalInformation",
287:       "weka.core.TechnicalInformation$Type",
288:       "weka.core.TechnicalInformation$Field",
289:       "weka.attributeSelection.ASEvaluation",
290:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
291:       "weka.attributeSelection.PrincipalComponents",
292:       "weka.core.TestInstances",
293:       "weka.core.Attribute",
294:       "weka.core.ProtectedProperties",
295:       "weka.core.WekaEnumeration",
296:       "weka.core.Attribute$1",
297:       "weka.core.stemmers.SnowballStemmer",
298:       "weka.core.neighboursearch.LinearNNSearch",
299:       "weka.attributeSelection.GainRatioAttributeEval",
300:       "weka.attributeSelection.AttributeSelection",
301:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
302:       "weka.classifiers.meta.CostSensitiveClassifier",
303:       "weka.classifiers.CostMatrix",
304:       "weka.estimators.Estimator",
305:       "weka.estimators.DiscreteEstimator",
306:       "weka.core.UnassignedClassException",
307:       "weka.core.SerializationHelper",
308:       "weka.core.Javadoc",
309:       "weka.core.OptionHandlerJavadoc",
310:       "weka.core.Check",
311:       "weka.core.CheckOptionHandler",
312:       "weka.core.neighboursearch.CoverTree",
313:       "weka.classifiers.rules.PART",
314:       "weka.filters.Filter",
315:       "weka.filters.SimpleFilter",
316:       "weka.filters.SimpleStreamFilter",
317:       "weka.filters.MultiFilter",
318:       "weka.filters.AllFilter",
319:       "weka.classifiers.meta.RegressionByDiscretization",
320:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
321:       "weka.filters.unsupervised.attribute.Discretize",
322:       "weka.classifiers.trees.J48",
323:       "weka.core.SelectedTag",
324:       "weka.classifiers.bayes.NaiveBayes",
325:       "weka.filters.supervised.attribute.Discretize",
326:       "weka.core.neighboursearch.BallTree",
327:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
328:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
329:       "weka.core.neighboursearch.balltrees.BallSplitter",
330:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
331:       "weka.classifiers.functions.GaussianProcesses",
332:       "weka.classifiers.functions.supportVector.Kernel",
333:       "weka.classifiers.functions.supportVector.CachedKernel",
334:       "weka.classifiers.functions.supportVector.PolyKernel",
335:       "weka.core.WekaException",
336:       "weka.core.UnsupportedAttributeTypeException",
337:       "weka.classifiers.bayes.net.BIFReader",
338:       "weka.classifiers.lazy.IBk",
339:       "weka.core.converters.ArffLoader$ArffReader",
340:       "weka.core.Stopwords",
341:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
342:       "weka.classifiers.trees.LMT",
343:       "weka.core.FindWithCapabilities",
344:       "weka.core.SingleIndex",
345:       "weka.core.MinkowskiDistance",
346:       "weka.attributeSelection.CorrelationAttributeEval",
347:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
348:       "weka.classifiers.IteratedSingleClassifierEnhancer",
349:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.LogitBoost",
351:       "weka.classifiers.trees.DecisionStump",
352:       "weka.attributeSelection.ReliefFAttributeEval",
353:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
354:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
355:       "weka.classifiers.rules.part.MakeDecList",
356:       "weka.classifiers.bayes.NaiveBayesMultinomial",
357:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
358:       "weka.core.stemmers.IteratedLovinsStemmer",
359:       "weka.classifiers.functions.LinearRegression",
360:       "weka.classifiers.functions.SMOreg",
361:       "weka.classifiers.functions.supportVector.RegOptimizer",
362:       "weka.classifiers.functions.supportVector.RegSMO",
363:       "weka.classifiers.functions.supportVector.RegSMOImproved",
364:       "weka.classifiers.trees.j48.ClassifierTree",
365:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
366:       "weka.classifiers.functions.SGDText$Count",
367:       "weka.classifiers.meta.AdaBoostM1",
368:       "weka.attributeSelection.InfoGainAttributeEval",
369:       "weka.estimators.PoissonEstimator",
370:       "weka.estimators.KernelEstimator",
371:       "weka.attributeSelection.WrapperSubsetEval",
372:       "weka.classifiers.functions.supportVector.RBFKernel",
373:       "weka.classifiers.functions.supportVector.Puk",
374:       "weka.classifiers.lazy.KStar",
375:       "weka.classifiers.meta.AdditiveRegression",
376:       "weka.classifiers.meta.AttributeSelectedClassifier",
377:       "weka.attributeSelection.CfsSubsetEval",
378:       "weka.attributeSelection.ASSearch",
379:       "weka.attributeSelection.BestFirst",
380:       "weka.classifiers.MultipleClassifiersCombiner",
381:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
382:       "weka.classifiers.meta.MultiScheme",
383:       "weka.classifiers.rules.JRip",
384:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
385:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
386:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
387:       "weka.classifiers.meta.RandomSubSpace",
388:       "weka.classifiers.trees.REPTree",
389:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
390:       "weka.attributeSelection.OneRAttributeEval",
391:       "weka.classifiers.functions.MultilayerPerceptron",
392:       "weka.core.FastVector",
393:       "weka.filters.unsupervised.attribute.NominalToBinary",
394:       "weka.classifiers.functions.neural.SigmoidUnit",
395:       "weka.classifiers.functions.neural.LinearUnit",
396:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
397:       "weka.classifiers.meta.Bagging",
398:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
399:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
400:       "weka.classifiers.meta.Stacking",
401:       "weka.classifiers.functions.SimpleLinearRegression",
402:       "weka.classifiers.meta.CVParameterSelection",
403:       "weka.classifiers.lazy.LWL",
404:       "weka.classifiers.functions.Logistic",
405:       "weka.core.matrix.Matrix",
406:       "weka.classifiers.functions.neural.NeuralConnection",
407:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
408:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
409:       "weka.classifiers.meta.FilteredClassifier",
410:       "weka.filters.supervised.attribute.AttributeSelection",
411:       "weka.attributeSelection.GreedyStepwise",
412:       "weka.classifiers.functions.SMO",
413:       "weka.classifiers.rules.OneR",
414:       "weka.estimators.NormalEstimator",
415:       "weka.classifiers.trees.RandomTree",
416:       "weka.classifiers.functions.VotedPerceptron",
417:       "weka.core.AttributeStats",
418:       "weka.experiment.Stats",
419:       "weka.core.CheckGOE",
420:       "weka.classifiers.meta.MultiClassClassifier",
421:       "weka.classifiers.functions.SimpleLogistic",
422:       "weka.classifiers.meta.RandomCommittee",
423:       "weka.classifiers.trees.RandomForest",
424:       "weka.classifiers.functions.supportVector.StringKernel",
425:       "weka.classifiers.meta.Vote",
426:       "weka.classifiers.trees.m5.M5Base",
427:       "weka.classifiers.rules.M5Rules",
428:       "weka.classifiers.functions.SGD",
429:       "weka.classifiers.meta.ClassificationViaRegression",
430:       "weka.classifiers.trees.M5P"
431:     );
432:   }
433: }

[MASTER] 18:05:39.250 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.m_inputVector = null;
naiveBayesMultinomialText0.stemmerTipText();
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());

naiveBayesMultinomialText0.m_wordFrequencies = true;
naiveBayesMultinomialText0.setLNorm(0);
naiveBayesMultinomialText0.setPeriodicPruning(0);
NullStemmer nullStemmer0 = new NullStemmer();
naiveBayesMultinomialText0.setStemmer(nullStemmer0);
nullStemmer0.stem("The stemming algorithm to use on the words.");
naiveBayesMultinomialText0.getNormalizeDocLength();
naiveBayesMultinomialText0.getStopwords();
naiveBayesMultinomialText0.setStemmer(nullStemmer0);
String[] stringArray0 = new String[5];
stringArray0[0] = "The stemming algorithm to use on the words.";
stringArray0[1] = "The stemming algorithm to use on the words.";
stringArray0[2] = "The stemming algorithm to use on the words.";
stringArray0[3] = "The stemming algorithm to use on the words.";
stringArray0[4] = "The stemming algorithm to use on the words.";
NaiveBayesMultinomialText.main(stringArray0);
double double0 = naiveBayesMultinomialText0.getLNorm();
assertEquals(0.0, double0, 0.01);


[MASTER] 18:06:33.180 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1002/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2243
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 18:06:47.581 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:06:47.594 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:06:47.595 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 18:06:47.683 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1002
* Starting evolution
* Search finished after 133s and 7 generations, 5289 statements, best individual has fitness: 5568.0
[MASTER] 18:09:05.151 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 15 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 647
* Number of covered goals: 564
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 80%
* Total number of goals: 441
* Number of covered goals: 352
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 76%
* Total number of goals: 678
* Number of covered goals: 518
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 28%
* Total number of goals: 244
* Number of covered goals: 69
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 74%
* Total number of goals: 124
* Number of covered goals: 92
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 74%
* Total number of goals: 124
* Number of covered goals: 92
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 73%
* Total number of goals: 441
* Number of covered goals: 322
* Generated 98 tests with total length 1565
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 18:14:47.176 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6787354166666667% of time used, but only 47/98 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
[MASTER] 18:15:25.461 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ArrayIndexOutOfBoundsException: 0
[MASTER] 18:15:25.461 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
resultMatrixHTML0.getDefaultPrintColNames();
resultMatrixHTML0.getOptions();
ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 2127);
ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
resultMatrixLatex0.toArray();

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1002/107_weka/evosuite-tests
* Done!

* Computation finished
