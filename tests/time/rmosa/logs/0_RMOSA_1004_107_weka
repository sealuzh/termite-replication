* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10004
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10007
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10006
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1004
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 19:00:21.251 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 19:00:21.273 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 19:00:21.289 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 19:00:21.365 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 19:00:21.856 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 19:00:21.861 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 19:00:21.871 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 19:00:21.980 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 19:00:22.027 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 19:00:22.028 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1004
* Starting evolution
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1004
* Starting evolution
[MASTER] 19:00:33.742 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V: Line 657
[MASTER] 19:00:33.743 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V: Line 658
[MASTER] 19:00:33.743 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.stopwordsTipText()Ljava/lang/String;: Line 853
[MASTER] 19:00:33.743 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.stopwordsTipText()Ljava/lang/String;: root-Branch
[MASTER] 19:00:33.743 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V: root-Branch
[MASTER] 19:00:33.746 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 270: weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V:657 - InsertUnaryOp Negation of p
[MASTER] 19:00:33.746 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 271: weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V:657 - InsertUnaryOp IINC 1 p
[MASTER] 19:00:33.746 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 272: weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V:657 - InsertUnaryOp IINC -1 p
[MASTER] 19:00:33.746 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 345: weka.classifiers.bayes.NaiveBayesMultinomialText.stopwordsTipText()Ljava/lang/String;:853 - ReplaceConstant - The file containing the stopwords (if this is a directory then the default ones are used). -> 
[MASTER] 19:00:33.747 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.stopwordsTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 19:00:33.747 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V
[MASTER] 19:00:33.747 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.stopwordsTipText()Ljava/lang/String;
[MASTER] 19:00:33.748 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V
[MASTER] 19:00:33.748 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.stopwordsTipText()Ljava/lang/String;
[MASTER] 19:00:33.748 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.stopwordsTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:stopwordsTipText()Ljava/lang/String;
[MASTER] 19:00:33.748 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setPeriodicPruning(I)V
[MASTER] 19:00:38.188 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I3 Branch 48 IFNONNULL L828 - true
[MASTER] 19:00:38.189 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getStopwords()Ljava/io/File;:NonNull:java.io.File:length()J:Zero
[MASTER] 19:00:38.189 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getStopwords()Ljava/io/File;:NonNull:java.io.File:isAbsolute()Z:True
[MASTER] 19:00:38.189 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getStopwords()Ljava/io/File;:NonNull:java.io.File:canRead()Z:True
[MASTER] 19:00:38.189 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getStopwords()Ljava/io/File;:NonNull:java.io.File:canWrite()Z:True
[MASTER] 19:00:38.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getStopwords()Ljava/io/File;:NonNull:java.io.File:exists()Z:True
[MASTER] 19:00:38.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getStopwords()Ljava/io/File;:NonNull:java.io.File:isDirectory()Z:True
[MASTER] 19:00:38.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getStopwords()Ljava/io/File;:NonNull:java.io.File:isFile()Z:False
[MASTER] 19:00:38.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getStopwords()Ljava/io/File;:NonNull:java.io.File:isHidden()Z:False
[MASTER] 19:00:38.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getStopwords()Ljava/io/File;:NonNull:java.io.File:lastModified()J:Positive
[MASTER] 19:00:38.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getStopwords()Ljava/io/File;:NonNull:java.io.File:canExecute()Z:True
[MASTER] 19:00:38.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getStopwords()Ljava/io/File;:NonNull:java.io.File:getTotalSpace()J:Zero
[MASTER] 19:00:38.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getStopwords()Ljava/io/File;:NonNull:java.io.File:getFreeSpace()J:Zero
[MASTER] 19:00:38.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getStopwords()Ljava/io/File;:NonNull:java.io.File:getUsableSpace()J:Zero
[MASTER] 19:00:38.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V
[MASTER] 19:00:38.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getStopwords()Ljava/io/File;
[MASTER] 19:00:38.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V
[MASTER] 19:00:38.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getStopwords()Ljava/io/File;
[MASTER] 19:00:38.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getStopwords()Ljava/io/File;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getStopwords()Ljava/io/File;
[MASTER] 19:00:38.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I34 Branch 49 IFEQ L832 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStopwords(Ljava/io/File;)V
[MASTER] 19:00:38.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I3 Branch 48 IFNONNULL L828 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStopwords(Ljava/io/File;)V
[MASTER] 19:00:38.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I37 Branch 50 IFEQ L832 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStopwords(Ljava/io/File;)V
[MASTER] 19:00:46.832 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 19:00:46.832 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 19:01:39.825 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 125s and 76 generations, 58183 statements, best individual has fitness: 2968.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 85%
* Total number of goals: 217
* Number of covered goals: 184
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 65%
* Total number of goals: 428
* Number of covered goals: 280
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 88%
* Total number of goals: 260
* Number of covered goals: 228
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 65%
* Total number of goals: 428
* Number of covered goals: 280
* Generated 75 tests with total length 341
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 122s and 167 generations, 88508 statements, best individual has fitness: 3456.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 69%
* Total number of goals: 338
* Number of covered goals: 232
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 59%
* Total number of goals: 194
* Number of covered goals: 114
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 77%
* Total number of goals: 476
* Number of covered goals: 368
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 52%
* Total number of goals: 112
* Number of covered goals: 58
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 58%
* Total number of goals: 194
* Number of covered goals: 113
* Search finished after 133s and 14 generations, 13923 statements, best individual has fitness: 3944.0
* Generated 73 tests with total length 679
* Resulting test suite's coverage: 70% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 19:02:40.086 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 17 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 91%
* Total number of goals: 647
* Number of covered goals: 589
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 86%
* Total number of goals: 441
* Number of covered goals: 378
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 84%
* Total number of goals: 678
* Number of covered goals: 571
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 37%
* Total number of goals: 244
* Number of covered goals: 91
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 92%
* Total number of goals: 124
* Number of covered goals: 114
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 90%
* Total number of goals: 124
* Number of covered goals: 112
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 81%
* Total number of goals: 441
* Number of covered goals: 357
* Generated 146 tests with total length 3139
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 75%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1004/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 42%
* Compiling and checking tests
[MASTER] 19:05:27.161 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_50_1575572727125/weka/classifiers/bayes/NaiveBayesMultinomialText_50_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_50_1575572727125/weka/classifiers/bayes/NaiveBayesMultinomialText_50_tmp__ESTest_scaffolding.java]]
[MASTER] 19:05:27.161 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 19:05:27.161 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 19:05:27.166 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 19:05:27.166 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 19:05:27.167 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 19:05:27.171 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 19:05:27.171 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 19:05:27.173 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_50_1575572727125/weka/classifiers/bayes/NaiveBayesMultinomialText_50_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 19:05:27 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_50_tmp__ESTest extends NaiveBayesMultinomialText_50_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=1.830738805564335
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       naiveBayesMultinomialText0.setNorm((-1597.86));
28:       naiveBayesMultinomialText0.setNormalizeDocLength(false);
29:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
30:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
31:       Integer integer0 = new Integer(2046);
32:       Integer.remainderUnsigned(638, 638);
33:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = naiveBayesMultinomialText0.m_inputVector;
34:       linkedHashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
35:       double double0 = naiveBayesMultinomialText0.m_lnorm;
36:       double double1 = naiveBayesMultinomialText0.getNorm();
37:       assertEquals((-1597.86), double1, 0.01);
38:   }
39: }
RegularFileObject[/tmp/EvoSuite_50_1575572727125/weka/classifiers/bayes/NaiveBayesMultinomialText_50_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 19:05:27 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_50_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_50_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.estimators.IncrementalEstimator",
105:       "weka.estimators.Estimator$Builder",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.core.EnvironmentHandler",
108:       "weka.classifiers.functions.SGDText",
109:       "weka.core.Utils",
110:       "weka.core.CustomDisplayStringProvider",
111:       "weka.core.tokenizers.Tokenizer",
112:       "weka.core.NormalizableDistance",
113:       "weka.core.NoSupportForMissingValuesException",
114:       "weka.classifiers.UpdateableClassifier",
115:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
116:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
117:       "weka.core.MultiInstanceCapabilitiesHandler",
118:       "weka.core.Copyable",
119:       "weka.core.Capabilities",
120:       "weka.core.BinarySparseInstance",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
122:       "weka.core.SerializedObject",
123:       "weka.clusterers.UpdateableClusterer",
124:       "weka.core.Summarizable",
125:       "weka.core.neighboursearch.balltrees.BallNode",
126:       "weka.core.AdditionalMeasureProducer",
127:       "org.pentaho.packageManagement.PackageManager$1",
128:       "weka.core.Drawable",
129:       "weka.core.matrix.Matrix",
130:       "weka.core.CapabilitiesHandler",
131:       "weka.attributeSelection.ASEvaluation",
132:       "weka.core.AbstractInstance",
133:       "weka.core.SelectedTag",
134:       "org.pentaho.packageManagement.DefaultPackage",
135:       "weka.classifiers.misc.InputMappedClassifier",
136:       "weka.core.Version",
137:       "weka.core.Tag",
138:       "weka.classifiers.AbstractClassifier",
139:       "weka.filters.unsupervised.attribute.Center",
140:       "weka.classifiers.meta.Stacking",
141:       "weka.core.OptionHandler",
142:       "weka.core.WekaException",
143:       "weka.filters.StreamableFilter",
144:       "weka.core.Range",
145:       "weka.classifiers.Classifier",
146:       "weka.core.Capabilities$Capability",
147:       "weka.core.SparseInstance",
148:       "org.pentaho.packageManagement.PackageManager",
149:       "weka.estimators.PoissonEstimator",
150:       "weka.attributeSelection.AttributeTransformer",
151:       "weka.core.tokenizers.WordTokenizer",
152:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
153:       "weka.attributeSelection.PrincipalComponents",
154:       "weka.core.stemmers.SnowballStemmer",
155:       "weka.core.stemmers.LovinsStemmer",
156:       "weka.classifiers.Evaluation",
157:       "weka.classifiers.functions.supportVector.Kernel",
158:       "weka.core.WekaPackageManager",
159:       "weka.core.TechnicalInformationHandler",
160:       "weka.core.neighboursearch.LinearNNSearch",
161:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
162:       "weka.core.Option",
163:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
164:       "weka.filters.Sourcable",
165:       "weka.core.Attribute",
166:       "weka.core.Stopwords",
167:       "weka.core.tokenizers.AlphabeticTokenizer",
168:       "weka.core.FastVector",
169:       "weka.classifiers.MultipleClassifiersCombiner",
170:       "weka.core.UnassignedDatasetException",
171:       "weka.classifiers.RandomizableClassifier",
172:       "weka.classifiers.SingleClassifierEnhancer",
173:       "weka.core.RevisionUtils",
174:       "weka.core.Instance",
175:       "weka.core.ProtectedProperties",
176:       "weka.estimators.Estimator",
177:       "weka.core.AttributeStats",
178:       "weka.core.WeightedInstancesHandler",
179:       "weka.core.neighboursearch.NearestNeighbourSearch",
180:       "weka.filters.unsupervised.attribute.Remove",
181:       "weka.core.Randomizable",
182:       "weka.core.EuclideanDistance",
183:       "weka.core.Instances",
184:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
185:       "weka.classifiers.rules.OneR",
186:       "weka.core.UnassignedClassException",
187:       "weka.classifiers.rules.ZeroR",
188:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
189:       "weka.filters.unsupervised.attribute.Standardize",
190:       "weka.core.stemmers.IteratedLovinsStemmer",
191:       "weka.core.UnsupportedAttributeTypeException",
192:       "weka.core.TechnicalInformation",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.classifiers.rules.OneR$OneRRule",
197:       "weka.core.xml.XMLSerialization",
198:       "weka.classifiers.xml.XMLClassifier",
199:       "weka.filters.Filter",
200:       "weka.classifiers.lazy.IBk"
201:     );
202:   } 
203: 
204:   private static void resetClasses() {
205:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_50_tmp__ESTest_scaffolding.class.getClassLoader()); 
206: 
207:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
208:       "weka.classifiers.AbstractClassifier",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
210:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
211:       "weka.core.Capabilities$Capability",
212:       "weka.core.tokenizers.Tokenizer",
213:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
214:       "weka.core.tokenizers.WordTokenizer",
215:       "weka.core.stemmers.NullStemmer",
216:       "weka.core.RevisionUtils",
217:       "weka.core.Option",
218:       "weka.core.Utils",
219:       "weka.classifiers.Evaluation",
220:       "weka.classifiers.bayes.NaiveBayes",
221:       "weka.core.Tag",
222:       "weka.classifiers.lazy.IBk",
223:       "weka.core.neighboursearch.NearestNeighbourSearch",
224:       "weka.core.neighboursearch.LinearNNSearch",
225:       "weka.core.NormalizableDistance",
226:       "weka.core.EuclideanDistance",
227:       "weka.core.Range",
228:       "weka.attributeSelection.ASEvaluation",
229:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
230:       "weka.attributeSelection.PrincipalComponents",
231:       "weka.core.stemmers.LovinsStemmer",
232:       "weka.core.stemmers.IteratedLovinsStemmer",
233:       "weka.core.TechnicalInformation",
234:       "weka.core.TechnicalInformation$Type",
235:       "weka.core.TechnicalInformation$Field",
236:       "weka.core.SerializedObject",
237:       "weka.core.Capabilities",
238:       "org.pentaho.packageManagement.PackageManager",
239:       "org.pentaho.packageManagement.DefaultPackageManager",
240:       "weka.core.Version",
241:       "weka.core.Environment",
242:       "weka.core.WekaPackageManager",
243:       "weka.classifiers.misc.SerializedClassifier",
244:       "weka.core.AbstractInstance",
245:       "weka.core.DenseInstance",
246:       "weka.core.neighboursearch.KDTree",
247:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
248:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
249:       "weka.core.SparseInstance",
250:       "weka.core.BinarySparseInstance",
251:       "weka.core.UnassignedDatasetException",
252:       "weka.core.tokenizers.NGramTokenizer",
253:       "weka.core.neighboursearch.CoverTree",
254:       "weka.core.Instances",
255:       "weka.core.neighboursearch.balltrees.BallNode",
256:       "weka.core.Stopwords",
257:       "weka.classifiers.functions.VotedPerceptron",
258:       "weka.core.neighboursearch.BallTree",
259:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
260:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
261:       "weka.core.neighboursearch.balltrees.BallSplitter",
262:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
263:       "weka.filters.Filter",
264:       "weka.filters.supervised.attribute.Discretize",
265:       "weka.core.TestInstances",
266:       "weka.classifiers.RandomizableClassifier",
267:       "weka.classifiers.functions.SGDText",
268:       "weka.classifiers.SingleClassifierEnhancer",
269:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
270:       "weka.classifiers.meta.CostSensitiveClassifier",
271:       "weka.classifiers.rules.ZeroR",
272:       "weka.classifiers.CostMatrix",
273:       "weka.classifiers.bayes.BayesNet",
274:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
275:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
276:       "weka.classifiers.bayes.net.search.local.K2",
277:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
278:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
279:       "weka.classifiers.misc.InputMappedClassifier",
280:       "weka.estimators.Estimator",
281:       "weka.estimators.KernelEstimator",
282:       "weka.core.Attribute",
283:       "weka.core.ProtectedProperties",
284:       "weka.classifiers.meta.FilteredClassifier",
285:       "weka.filters.supervised.attribute.AttributeSelection",
286:       "weka.attributeSelection.AttributeSelection",
287:       "weka.attributeSelection.CfsSubsetEval",
288:       "weka.attributeSelection.ASSearch",
289:       "weka.attributeSelection.GreedyStepwise",
290:       "weka.attributeSelection.BestFirst",
291:       "weka.classifiers.trees.J48",
292:       "weka.classifiers.bayes.NaiveBayesUpdateable",
293:       "weka.core.converters.ArffLoader$ArffReader",
294:       "weka.classifiers.meta.AttributeSelectedClassifier",
295:       "weka.core.SerializationHelper",
296:       "weka.classifiers.rules.OneR",
297:       "weka.core.tokenizers.AlphabeticTokenizer",
298:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
299:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
300:       "weka.classifiers.functions.LinearRegression",
301:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
302:       "weka.core.stemmers.Stemming",
303:       "weka.classifiers.bayes.NaiveBayesMultinomial",
304:       "weka.core.FindWithCapabilities",
305:       "weka.core.SingleIndex",
306:       "weka.core.ClassDiscovery",
307:       "weka.core.stemmers.SnowballStemmer",
308:       "weka.core.WekaException",
309:       "weka.classifiers.functions.SMO",
310:       "weka.classifiers.functions.supportVector.Kernel",
311:       "weka.classifiers.functions.supportVector.CachedKernel",
312:       "weka.classifiers.functions.supportVector.PolyKernel",
313:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
314:       "weka.classifiers.IteratedSingleClassifierEnhancer",
315:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
316:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
317:       "weka.classifiers.meta.RandomCommittee",
318:       "weka.classifiers.trees.RandomTree",
319:       "weka.classifiers.trees.REPTree",
320:       "weka.classifiers.lazy.LWL",
321:       "weka.classifiers.trees.DecisionStump",
322:       "weka.classifiers.bayes.net.BIFReader",
323:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
324:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
325:       "weka.classifiers.functions.GaussianProcesses",
326:       "weka.classifiers.meta.AdditiveRegression",
327:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
328:       "weka.classifiers.meta.LogitBoost",
329:       "weka.filters.SimpleFilter",
330:       "weka.filters.SimpleStreamFilter",
331:       "weka.filters.MultiFilter",
332:       "weka.filters.AllFilter",
333:       "weka.classifiers.rules.PART",
334:       "weka.classifiers.rules.part.MakeDecList",
335:       "weka.classifiers.trees.LMT",
336:       "weka.classifiers.trees.RandomForest",
337:       "weka.classifiers.meta.ClassificationViaRegression",
338:       "weka.classifiers.trees.m5.M5Base",
339:       "weka.classifiers.trees.M5P",
340:       "weka.attributeSelection.InfoGainAttributeEval",
341:       "weka.classifiers.functions.SimpleLinearRegression",
342:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
343:       "weka.core.Check",
344:       "weka.core.CheckOptionHandler",
345:       "weka.core.SelectedTag",
346:       "weka.core.WekaEnumeration",
347:       "weka.core.Attribute$1",
348:       "weka.classifiers.meta.MultiClassClassifier",
349:       "weka.classifiers.functions.Logistic",
350:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
351:       "weka.core.MinkowskiDistance",
352:       "weka.classifiers.meta.Bagging",
353:       "weka.core.AttributeStats",
354:       "weka.core.UnsupportedAttributeTypeException",
355:       "weka.attributeSelection.OneRAttributeEval",
356:       "weka.classifiers.MultipleClassifiersCombiner",
357:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
358:       "weka.classifiers.meta.Vote",
359:       "weka.core.neighboursearch.PerformanceStats",
360:       "weka.classifiers.functions.SMOreg",
361:       "weka.classifiers.functions.supportVector.RegOptimizer",
362:       "weka.classifiers.functions.supportVector.RegSMO",
363:       "weka.classifiers.functions.supportVector.RegSMOImproved",
364:       "weka.classifiers.lazy.KStar",
365:       "weka.classifiers.functions.supportVector.RBFKernel",
366:       "weka.estimators.PoissonEstimator",
367:       "weka.core.UnassignedClassException",
368:       "weka.classifiers.meta.RegressionByDiscretization",
369:       "weka.filters.unsupervised.attribute.Discretize",
370:       "weka.classifiers.trees.j48.ClassifierTree",
371:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
372:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
373:       "weka.classifiers.meta.CVParameterSelection",
374:       "weka.core.FastVector",
375:       "weka.classifiers.rules.M5Rules",
376:       "weka.classifiers.functions.MultilayerPerceptron",
377:       "weka.filters.unsupervised.attribute.NominalToBinary",
378:       "weka.classifiers.functions.neural.SigmoidUnit",
379:       "weka.classifiers.functions.neural.LinearUnit",
380:       "weka.classifiers.functions.neural.NeuralConnection",
381:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
382:       "weka.classifiers.meta.MultiScheme",
383:       "weka.classifiers.rules.DecisionTable",
384:       "weka.classifiers.functions.SimpleLogistic",
385:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
386:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
387:       "weka.classifiers.meta.Stacking"
388:     );
389:   }
390: }

[MASTER] 19:05:27.174 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setNorm((-1597.86));
naiveBayesMultinomialText0.setNormalizeDocLength(false);
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
Integer integer0 = new Integer(2046);
Integer.remainderUnsigned(638, 638);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = naiveBayesMultinomialText0.m_inputVector;
linkedHashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
double double0 = naiveBayesMultinomialText0.m_lnorm;
double double1 = naiveBayesMultinomialText0.getNorm();
assertEquals((-1597.86), double1, 0.01);


[MASTER] 19:05:27.288 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_53_1575572727255/weka/classifiers/bayes/NaiveBayesMultinomialText_53_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_53_1575572727255/weka/classifiers/bayes/NaiveBayesMultinomialText_53_tmp__ESTest_scaffolding.java]]
[MASTER] 19:05:27.289 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 19:05:27.289 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 19:05:27.289 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 19:05:27.289 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 19:05:27.291 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_53_1575572727255/weka/classifiers/bayes/NaiveBayesMultinomialText_53_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 19:05:27 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.testdata.EvoSuiteFile;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.core.BinarySparseInstance;
19: import weka.core.Instance;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_53_tmp__ESTest extends NaiveBayesMultinomialText_53_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=1.5531577432135641
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
32:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
33:       naiveBayesMultinomialText0.setUseStopList(true);
34:       FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
35:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-719.5576487039391), (int[]) null, (-3));
36:       // Undeclared exception!
37:       try { 
38:         naiveBayesMultinomialText0.tokenizeInstance(binarySparseInstance0, true);
39:         fail("Expecting exception: RuntimeException");
40:       
41:       } catch(RuntimeException e) {
42:          //
43:          // DenseInstance doesn't have access to a dataset!
44:          //
45:          verifyException("weka.core.AbstractInstance", e);
46:       }
47:   }
48: }
RegularFileObject[/tmp/EvoSuite_53_1575572727255/weka/classifiers/bayes/NaiveBayesMultinomialText_53_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 19:05:27 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_53_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_53_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.estimators.IncrementalEstimator",
105:       "weka.estimators.Estimator$Builder",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.core.EnvironmentHandler",
108:       "weka.classifiers.functions.SGDText",
109:       "weka.core.Utils",
110:       "weka.core.CustomDisplayStringProvider",
111:       "weka.core.tokenizers.Tokenizer",
112:       "weka.core.NormalizableDistance",
113:       "weka.core.NoSupportForMissingValuesException",
114:       "weka.classifiers.UpdateableClassifier",
115:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
116:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
117:       "weka.core.MultiInstanceCapabilitiesHandler",
118:       "weka.core.Copyable",
119:       "weka.core.Capabilities",
120:       "weka.core.BinarySparseInstance",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
122:       "weka.core.SerializedObject",
123:       "weka.clusterers.UpdateableClusterer",
124:       "weka.core.Summarizable",
125:       "weka.core.neighboursearch.balltrees.BallNode",
126:       "weka.core.AdditionalMeasureProducer",
127:       "org.pentaho.packageManagement.PackageManager$1",
128:       "weka.core.Drawable",
129:       "weka.core.matrix.Matrix",
130:       "weka.core.CapabilitiesHandler",
131:       "weka.attributeSelection.ASEvaluation",
132:       "weka.core.AbstractInstance",
133:       "weka.core.SelectedTag",
134:       "org.pentaho.packageManagement.DefaultPackage",
135:       "weka.classifiers.misc.InputMappedClassifier",
136:       "weka.core.Version",
137:       "weka.core.Tag",
138:       "weka.classifiers.AbstractClassifier",
139:       "weka.filters.unsupervised.attribute.Center",
140:       "weka.classifiers.meta.Stacking",
141:       "weka.core.OptionHandler",
142:       "weka.core.WekaException",
143:       "weka.filters.StreamableFilter",
144:       "weka.core.Range",
145:       "weka.classifiers.Classifier",
146:       "weka.core.Capabilities$Capability",
147:       "weka.core.SparseInstance",
148:       "org.pentaho.packageManagement.PackageManager",
149:       "weka.estimators.PoissonEstimator",
150:       "weka.attributeSelection.AttributeTransformer",
151:       "weka.core.tokenizers.WordTokenizer",
152:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
153:       "weka.attributeSelection.PrincipalComponents",
154:       "weka.core.stemmers.SnowballStemmer",
155:       "weka.core.stemmers.LovinsStemmer",
156:       "weka.classifiers.Evaluation",
157:       "weka.classifiers.functions.supportVector.Kernel",
158:       "weka.core.WekaPackageManager",
159:       "weka.core.TechnicalInformationHandler",
160:       "weka.core.neighboursearch.LinearNNSearch",
161:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
162:       "weka.core.Option",
163:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
164:       "weka.filters.Sourcable",
165:       "weka.core.Attribute",
166:       "weka.core.Stopwords",
167:       "weka.core.tokenizers.AlphabeticTokenizer",
168:       "weka.core.FastVector",
169:       "weka.classifiers.MultipleClassifiersCombiner",
170:       "weka.core.UnassignedDatasetException",
171:       "weka.classifiers.RandomizableClassifier",
172:       "weka.classifiers.SingleClassifierEnhancer",
173:       "weka.core.RevisionUtils",
174:       "weka.core.Instance",
175:       "weka.core.ProtectedProperties",
176:       "weka.estimators.Estimator",
177:       "weka.core.AttributeStats",
178:       "weka.core.WeightedInstancesHandler",
179:       "weka.core.neighboursearch.NearestNeighbourSearch",
180:       "weka.filters.unsupervised.attribute.Remove",
181:       "weka.core.Randomizable",
182:       "weka.core.EuclideanDistance",
183:       "weka.core.Instances",
184:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
185:       "weka.classifiers.rules.OneR",
186:       "weka.core.UnassignedClassException",
187:       "weka.classifiers.rules.ZeroR",
188:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
189:       "weka.filters.unsupervised.attribute.Standardize",
190:       "weka.core.stemmers.IteratedLovinsStemmer",
191:       "weka.core.UnsupportedAttributeTypeException",
192:       "weka.core.TechnicalInformation",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.classifiers.rules.OneR$OneRRule",
197:       "weka.core.xml.XMLSerialization",
198:       "weka.classifiers.xml.XMLClassifier",
199:       "weka.filters.Filter",
200:       "weka.classifiers.lazy.IBk"
201:     );
202:   } 
203: 
204:   private static void resetClasses() {
205:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_53_tmp__ESTest_scaffolding.class.getClassLoader()); 
206: 
207:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
208:       "weka.classifiers.AbstractClassifier",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
210:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
211:       "weka.core.Capabilities$Capability",
212:       "weka.core.tokenizers.Tokenizer",
213:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
214:       "weka.core.tokenizers.WordTokenizer",
215:       "weka.core.stemmers.NullStemmer",
216:       "weka.core.RevisionUtils",
217:       "weka.core.Option",
218:       "weka.core.Utils",
219:       "weka.classifiers.Evaluation",
220:       "weka.classifiers.bayes.NaiveBayes",
221:       "weka.core.Tag",
222:       "weka.classifiers.lazy.IBk",
223:       "weka.core.neighboursearch.NearestNeighbourSearch",
224:       "weka.core.neighboursearch.LinearNNSearch",
225:       "weka.core.NormalizableDistance",
226:       "weka.core.EuclideanDistance",
227:       "weka.core.Range",
228:       "weka.attributeSelection.ASEvaluation",
229:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
230:       "weka.attributeSelection.PrincipalComponents",
231:       "weka.core.stemmers.LovinsStemmer",
232:       "weka.core.stemmers.IteratedLovinsStemmer",
233:       "weka.core.TechnicalInformation",
234:       "weka.core.TechnicalInformation$Type",
235:       "weka.core.TechnicalInformation$Field",
236:       "weka.core.SerializedObject",
237:       "weka.core.Capabilities",
238:       "org.pentaho.packageManagement.PackageManager",
239:       "org.pentaho.packageManagement.DefaultPackageManager",
240:       "weka.core.Version",
241:       "weka.core.Environment",
242:       "weka.core.WekaPackageManager",
243:       "weka.classifiers.misc.SerializedClassifier",
244:       "weka.core.AbstractInstance",
245:       "weka.core.DenseInstance",
246:       "weka.core.neighboursearch.KDTree",
247:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
248:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
249:       "weka.core.SparseInstance",
250:       "weka.core.BinarySparseInstance",
251:       "weka.core.UnassignedDatasetException",
252:       "weka.core.tokenizers.NGramTokenizer",
253:       "weka.core.neighboursearch.CoverTree",
254:       "weka.core.Instances",
255:       "weka.core.neighboursearch.balltrees.BallNode",
256:       "weka.core.Stopwords",
257:       "weka.classifiers.functions.VotedPerceptron",
258:       "weka.core.neighboursearch.BallTree",
259:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
260:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
261:       "weka.core.neighboursearch.balltrees.BallSplitter",
262:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
263:       "weka.filters.Filter",
264:       "weka.filters.supervised.attribute.Discretize",
265:       "weka.core.TestInstances",
266:       "weka.classifiers.RandomizableClassifier",
267:       "weka.classifiers.functions.SGDText",
268:       "weka.classifiers.SingleClassifierEnhancer",
269:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
270:       "weka.classifiers.meta.CostSensitiveClassifier",
271:       "weka.classifiers.rules.ZeroR",
272:       "weka.classifiers.CostMatrix",
273:       "weka.classifiers.bayes.BayesNet",
274:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
275:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
276:       "weka.classifiers.bayes.net.search.local.K2",
277:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
278:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
279:       "weka.classifiers.misc.InputMappedClassifier",
280:       "weka.estimators.Estimator",
281:       "weka.estimators.KernelEstimator",
282:       "weka.core.Attribute",
283:       "weka.core.ProtectedProperties",
284:       "weka.classifiers.meta.FilteredClassifier",
285:       "weka.filters.supervised.attribute.AttributeSelection",
286:       "weka.attributeSelection.AttributeSelection",
287:       "weka.attributeSelection.CfsSubsetEval",
288:       "weka.attributeSelection.ASSearch",
289:       "weka.attributeSelection.GreedyStepwise",
290:       "weka.attributeSelection.BestFirst",
291:       "weka.classifiers.trees.J48",
292:       "weka.classifiers.bayes.NaiveBayesUpdateable",
293:       "weka.core.converters.ArffLoader$ArffReader",
294:       "weka.classifiers.meta.AttributeSelectedClassifier",
295:       "weka.core.SerializationHelper",
296:       "weka.classifiers.rules.OneR",
297:       "weka.core.tokenizers.AlphabeticTokenizer",
298:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
299:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
300:       "weka.classifiers.functions.LinearRegression",
301:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
302:       "weka.core.stemmers.Stemming",
303:       "weka.classifiers.bayes.NaiveBayesMultinomial",
304:       "weka.core.FindWithCapabilities",
305:       "weka.core.SingleIndex",
306:       "weka.core.ClassDiscovery",
307:       "weka.core.stemmers.SnowballStemmer",
308:       "weka.core.WekaException",
309:       "weka.classifiers.functions.SMO",
310:       "weka.classifiers.functions.supportVector.Kernel",
311:       "weka.classifiers.functions.supportVector.CachedKernel",
312:       "weka.classifiers.functions.supportVector.PolyKernel",
313:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
314:       "weka.classifiers.IteratedSingleClassifierEnhancer",
315:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
316:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
317:       "weka.classifiers.meta.RandomCommittee",
318:       "weka.classifiers.trees.RandomTree",
319:       "weka.classifiers.trees.REPTree",
320:       "weka.classifiers.lazy.LWL",
321:       "weka.classifiers.trees.DecisionStump",
322:       "weka.classifiers.bayes.net.BIFReader",
323:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
324:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
325:       "weka.classifiers.functions.GaussianProcesses",
326:       "weka.classifiers.meta.AdditiveRegression",
327:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
328:       "weka.classifiers.meta.LogitBoost",
329:       "weka.filters.SimpleFilter",
330:       "weka.filters.SimpleStreamFilter",
331:       "weka.filters.MultiFilter",
332:       "weka.filters.AllFilter",
333:       "weka.classifiers.rules.PART",
334:       "weka.classifiers.rules.part.MakeDecList",
335:       "weka.classifiers.trees.LMT",
336:       "weka.classifiers.trees.RandomForest",
337:       "weka.classifiers.meta.ClassificationViaRegression",
338:       "weka.classifiers.trees.m5.M5Base",
339:       "weka.classifiers.trees.M5P",
340:       "weka.attributeSelection.InfoGainAttributeEval",
341:       "weka.classifiers.functions.SimpleLinearRegression",
342:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
343:       "weka.core.Check",
344:       "weka.core.CheckOptionHandler",
345:       "weka.core.SelectedTag",
346:       "weka.core.WekaEnumeration",
347:       "weka.core.Attribute$1",
348:       "weka.classifiers.meta.MultiClassClassifier",
349:       "weka.classifiers.functions.Logistic",
350:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
351:       "weka.core.MinkowskiDistance",
352:       "weka.classifiers.meta.Bagging",
353:       "weka.core.AttributeStats",
354:       "weka.core.UnsupportedAttributeTypeException",
355:       "weka.attributeSelection.OneRAttributeEval",
356:       "weka.classifiers.MultipleClassifiersCombiner",
357:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
358:       "weka.classifiers.meta.Vote",
359:       "weka.core.neighboursearch.PerformanceStats",
360:       "weka.classifiers.functions.SMOreg",
361:       "weka.classifiers.functions.supportVector.RegOptimizer",
362:       "weka.classifiers.functions.supportVector.RegSMO",
363:       "weka.classifiers.functions.supportVector.RegSMOImproved",
364:       "weka.classifiers.lazy.KStar",
365:       "weka.classifiers.functions.supportVector.RBFKernel",
366:       "weka.estimators.PoissonEstimator",
367:       "weka.core.UnassignedClassException",
368:       "weka.classifiers.meta.RegressionByDiscretization",
369:       "weka.filters.unsupervised.attribute.Discretize",
370:       "weka.classifiers.trees.j48.ClassifierTree",
371:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
372:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
373:       "weka.classifiers.meta.CVParameterSelection",
374:       "weka.core.FastVector",
375:       "weka.classifiers.rules.M5Rules",
376:       "weka.classifiers.functions.MultilayerPerceptron",
377:       "weka.filters.unsupervised.attribute.NominalToBinary",
378:       "weka.classifiers.functions.neural.SigmoidUnit",
379:       "weka.classifiers.functions.neural.LinearUnit",
380:       "weka.classifiers.functions.neural.NeuralConnection",
381:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
382:       "weka.classifiers.meta.MultiScheme",
383:       "weka.classifiers.rules.DecisionTable",
384:       "weka.classifiers.functions.SimpleLogistic",
385:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
386:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
387:       "weka.classifiers.meta.Stacking"
388:     );
389:   }
390: }

[MASTER] 19:05:27.291 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.setUseStopList(true);
FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-719.5576487039391), (int[]) null, (-3));
naiveBayesMultinomialText0.tokenizeInstance(binarySparseInstance0, true);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1004/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 19:08:19.185 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6701916666666666% of time used, but only 51/146 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 14%
* Compiling and checking tests
[MASTER] 19:09:13.056 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_40_1575572953020/weka/experiment/ResultMatrix_40_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_40_1575572953020/weka/experiment/ResultMatrix_40_tmp__ESTest_scaffolding.java]]
[MASTER] 19:09:13.056 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 19:09:13.056 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 19:09:13.060 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   variable int2
  location: class weka.experiment.ResultMatrix_40_tmp__ESTest: 40
[MASTER] 19:09:13.061 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_40_1575572953020/weka/experiment/ResultMatrix_40_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 19:09:13 GMT 2019
4:  */
5: 
6: package weka.experiment;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import org.evosuite.runtime.EvoRunner;
11: import org.evosuite.runtime.EvoRunnerParameters;
12: import org.junit.runner.RunWith;
13: import weka.experiment.ResultMatrix;
14: import weka.experiment.ResultMatrixCSV;
15: import weka.experiment.ResultMatrixGnuPlot;
16: import weka.experiment.ResultMatrixHTML;
17: import weka.experiment.ResultMatrixPlainText;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class ResultMatrix_40_tmp__ESTest extends ResultMatrix_40_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=3.632761975491991
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
29:       ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
30:       resultMatrixGnuPlot0.getDefaultRowNameWidth();
31:       resultMatrixGnuPlot0.setStdDevPrec((-143));
32:       ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
33:       resultMatrixHTML0.trimString("[", 2);
34:       resultMatrixHTML0.getRemoveFilterName();
35:       resultMatrixCSV0.getRevision();
36:       ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
37:       ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
38:       int int0 = ResultMatrix.SIGNIFICANCE_WIN;
39:       int int1 = ResultMatrix.SIGNIFICANCE_LOSS;
40:       assertFalse(int1 == int2);
41:   }
42: }
RegularFileObject[/tmp/EvoSuite_40_1575572953020/weka/experiment/ResultMatrix_40_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 19:09:13 GMT 2019
5:  */
6: 
7: package weka.experiment;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class ResultMatrix_40_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.experiment.ResultMatrix"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ResultMatrix_40_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.experiment.ResultMatrixCSV",
89:       "weka.core.OptionHandler",
90:       "weka.experiment.ResultMatrixPlainText",
91:       "weka.experiment.ResultMatrixLatex",
92:       "weka.experiment.ResultMatrixSignificance",
93:       "weka.experiment.ResultMatrix",
94:       "weka.experiment.ResultMatrixHTML",
95:       "weka.core.RevisionUtils",
96:       "weka.core.Option",
97:       "weka.core.Version",
98:       "weka.experiment.ResultMatrixGnuPlot",
99:       "weka.core.Utils",
100:       "weka.core.RevisionHandler"
101:     );
102:   } 
103: 
104:   private static void resetClasses() {
105:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ResultMatrix_40_tmp__ESTest_scaffolding.class.getClassLoader()); 
106: 
107:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
108:       "weka.experiment.ResultMatrix",
109:       "weka.experiment.ResultMatrixPlainText",
110:       "weka.experiment.ResultMatrixHTML",
111:       "weka.experiment.ResultMatrixCSV",
112:       "weka.experiment.ResultMatrixSignificance",
113:       "weka.experiment.ResultMatrixGnuPlot",
114:       "weka.experiment.ResultMatrixLatex",
115:       "weka.core.Utils",
116:       "weka.core.Version",
117:       "weka.core.RevisionUtils",
118:       "weka.core.Option"
119:     );
120:   }
121: }

[MASTER] 19:09:13.061 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
resultMatrixGnuPlot0.getDefaultRowNameWidth();
resultMatrixGnuPlot0.setStdDevPrec((-143));
ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
resultMatrixHTML0.trimString("[", 2);
resultMatrixHTML0.getRemoveFilterName();
resultMatrixCSV0.getRevision();
ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
int int0 = ResultMatrix.SIGNIFICANCE_WIN;
int int1 = ResultMatrix.SIGNIFICANCE_LOSS;
assertFalse(int1 == int2);


[MASTER] 19:10:06.234 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1004/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10003
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 19:15:46.072 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 19:15:46.080 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 19:15:46.081 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 19:15:47.071 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 19:15:48.278 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 19:15:48.280 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 19:15:50.666 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 19:15:50.705 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 19:15:50.706 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 19:15:50.706 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 19:15:50.707 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 19:15:50.707 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 19:15:50.707 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 19:15:50.715 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 19:15:50.716 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 19:15:50.791 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 19:15:50.810 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1004
* Starting evolution
[MASTER] 19:15:55.031 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 19:16:54.131 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.crossValidateModel(Lweka/classifiers/Classifier;Lweka/core/Instances;ILjava/util/Random;[Ljava/lang/Object;)V
[MASTER] 19:16:54.132 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.updateStatsForClassifier([DLweka/core/Instance;)V
[MASTER] 19:17:11.432 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 126s and 42 generations, 27419 statements, best individual has fitness: 17320.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 52%
* Total number of goals: 1378
* Number of covered goals: 719
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 36%
* Total number of goals: 809
* Number of covered goals: 291
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 51
* Number of covered goals: 51
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 52%
* Total number of goals: 424
* Number of covered goals: 220
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 19%
* Total number of goals: 278
* Number of covered goals: 52
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 96%
* Total number of goals: 103
* Number of covered goals: 99
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 94%
* Total number of goals: 103
* Number of covered goals: 97
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 34%
* Total number of goals: 809
* Number of covered goals: 277
* Generated 129 tests with total length 1683
* Resulting test suite's coverage: 45% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 7%
* Compiling and checking tests
[MASTER] 19:24:58.461 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 19:24:58.611 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 19:24:58.838 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 19:24:58.838 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 19:25:00.709 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 19:25:00.868 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 11
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1004/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10003
* Connecting to master process on port 10006
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 19:26:24.897 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 19:26:24.953 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 19:26:24.955 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 19:26:25.199 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 19:26:25.268 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 19:26:25.270 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1004
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 19:26:35.911 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 19:26:35.915 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 19:26:35.916 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 19:26:35.941 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1004
* Starting evolution
[MASTER] 19:26:40.133 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 122s and 134 generations, 69139 statements, best individual has fitness: 8160.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 45%
* Total number of goals: 370
* Number of covered goals: 165
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 79
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 38%
* Total number of goals: 713
* Number of covered goals: 271
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 46%
* Total number of goals: 72
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 45
* Number of covered goals: 44
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 79
* Generated 54 tests with total length 495
* Resulting test suite's coverage: 42% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 123s and 58 generations, 36686 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 15 tests with total length 124
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1004/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
[MASTER] 19:30:25.772 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 19:30:26.697 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1004/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10008
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 19:35:53.631 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 19:35:53.645 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 19:35:53.655 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 19:35:56.782 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 19:35:57.988 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 19:35:58.008 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1004
* Starting evolution
[MASTER] 19:36:06.472 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 376
[MASTER] 19:36:06.472 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 377
[MASTER] 19:36:06.472 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 380
[MASTER] 19:36:06.472 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 382
[MASTER] 19:36:06.472 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 383
[MASTER] 19:36:06.473 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 386
[MASTER] 19:36:06.473 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 388
[MASTER] 19:36:06.473 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 389
[MASTER] 19:36:06.473 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 392
[MASTER] 19:36:06.473 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 394
[MASTER] 19:36:06.473 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 395
[MASTER] 19:36:06.473 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 398
[MASTER] 19:36:06.473 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 400
[MASTER] 19:36:06.473 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 401
[MASTER] 19:36:06.473 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 402
[MASTER] 19:36:06.473 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 403
[MASTER] 19:36:06.477 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I10 Branch 1 IFEQ L377 - true
[MASTER] 19:36:06.477 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I33 Branch 2 IFEQ L383 - true
[MASTER] 19:36:06.477 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I56 Branch 3 IFEQ L389 - true
[MASTER] 19:36:06.477 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I79 Branch 4 IFEQ L395 - true
[MASTER] 19:36:06.477 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I105 Branch 5 IFNE L401 - false
[MASTER] 19:36:06.477 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I118 Branch 6 IFNE L402 - false
[MASTER] 19:36:06.493 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 47: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:376 - ReplaceConstant - 70 -> 0
[MASTER] 19:36:06.494 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 48: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:376 - ReplaceConstant - 70 -> 1
[MASTER] 19:36:06.494 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 49: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:376 - ReplaceConstant - 70 -> -1
[MASTER] 19:36:06.494 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 50: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:376 - ReplaceConstant - 70 -> 69
[MASTER] 19:36:06.494 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 51: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:376 - ReplaceConstant - 70 -> 71
[MASTER] 19:36:06.494 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 52: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:377 - ReplaceComparisonOperator == -> -2
[MASTER] 19:36:06.494 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 55: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:380 - ReplaceConstant - 3 -> 0
[MASTER] 19:36:06.494 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 56: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:380 - ReplaceConstant - 3 -> 1
[MASTER] 19:36:06.494 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 57: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:380 - ReplaceConstant - 3 -> -1
[MASTER] 19:36:06.494 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 58: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:380 - ReplaceConstant - 3 -> 2
[MASTER] 19:36:06.494 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 59: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:380 - ReplaceConstant - 3 -> 4
[MASTER] 19:36:06.494 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 60: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:382 - ReplaceConstant - 78 -> 0
[MASTER] 19:36:06.494 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 61: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:382 - ReplaceConstant - 78 -> 1
[MASTER] 19:36:06.494 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 62: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:382 - ReplaceConstant - 78 -> -1
[MASTER] 19:36:06.494 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 63: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:382 - ReplaceConstant - 78 -> 77
[MASTER] 19:36:06.494 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 64: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:382 - ReplaceConstant - 78 -> 79
[MASTER] 19:36:06.494 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 66: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:383 - ReplaceComparisonOperator == -> -2
[MASTER] 19:36:06.494 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 70: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:386 - ReplaceConstant - 2.0 -> 0.0
[MASTER] 19:36:06.494 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 71: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:386 - ReplaceConstant - 2.0 -> 1.0
[MASTER] 19:36:06.494 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 72: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:386 - ReplaceConstant - 2.0 -> -1.0
[MASTER] 19:36:06.494 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 73: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:386 - ReplaceConstant - 2.0 -> 3.0
[MASTER] 19:36:06.494 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 74: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:388 - ReplaceConstant - 83 -> 0
[MASTER] 19:36:06.494 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 75: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:388 - ReplaceConstant - 83 -> 1
[MASTER] 19:36:06.494 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 76: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:388 - ReplaceConstant - 83 -> -1
[MASTER] 19:36:06.495 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 77: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:388 - ReplaceConstant - 83 -> 82
[MASTER] 19:36:06.495 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 78: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:388 - ReplaceConstant - 83 -> 84
[MASTER] 19:36:06.495 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 81: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:389 - ReplaceComparisonOperator == -> -2
[MASTER] 19:36:06.495 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 86: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:392 - ReplaceConstant - 1 -> 0
[MASTER] 19:36:06.495 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 87: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:392 - ReplaceConstant - 1 -> -1
[MASTER] 19:36:06.495 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 88: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:392 - ReplaceConstant - 1 -> 2
[MASTER] 19:36:06.495 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 89: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:394 - ReplaceConstant - 79 -> 0
[MASTER] 19:36:06.495 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 90: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:394 - ReplaceConstant - 79 -> 1
[MASTER] 19:36:06.495 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 91: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:394 - ReplaceConstant - 79 -> -1
[MASTER] 19:36:06.495 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 92: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:394 - ReplaceConstant - 79 -> 78
[MASTER] 19:36:06.495 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 93: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:394 - ReplaceConstant - 79 -> 80
[MASTER] 19:36:06.495 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 97: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:395 - ReplaceComparisonOperator == -> -2
[MASTER] 19:36:06.496 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 103: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:398 - ReplaceConstant - 2 -> 0
[MASTER] 19:36:06.496 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 104: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:398 - ReplaceConstant - 2 -> 1
[MASTER] 19:36:06.496 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 105: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:398 - ReplaceConstant - 2 -> -1
[MASTER] 19:36:06.496 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 106: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:398 - ReplaceConstant - 2 -> 3
[MASTER] 19:36:06.496 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 107: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:400 - ReplaceConstant - 68 -> 0
[MASTER] 19:36:06.496 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 108: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:400 - ReplaceConstant - 68 -> 1
[MASTER] 19:36:06.496 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 109: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:400 - ReplaceConstant - 68 -> -1
[MASTER] 19:36:06.496 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 110: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:400 - ReplaceConstant - 68 -> 67
[MASTER] 19:36:06.496 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 111: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:400 - ReplaceConstant - 68 -> 69
[MASTER] 19:36:06.496 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 112: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:401 - ReplaceConstant - 69 -> 0
[MASTER] 19:36:06.496 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 113: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:401 - ReplaceConstant - 69 -> 1
[MASTER] 19:36:06.496 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 114: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:401 - ReplaceConstant - 69 -> -1
[MASTER] 19:36:06.496 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 115: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:401 - ReplaceConstant - 69 -> 68
[MASTER] 19:36:06.496 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 116: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:401 - ReplaceConstant - 69 -> 70
[MASTER] 19:36:06.496 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 117: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:401 - ReplaceComparisonOperator != -> ==
[MASTER] 19:36:06.496 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 118: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:401 - ReplaceConstant - 1 -> 0
[MASTER] 19:36:06.496 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 120: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:402 - ReplaceConstant - 80 -> 0
[MASTER] 19:36:06.496 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 121: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:402 - ReplaceConstant - 80 -> 1
[MASTER] 19:36:06.496 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 122: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:402 - ReplaceConstant - 80 -> -1
[MASTER] 19:36:06.496 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 123: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:402 - ReplaceConstant - 80 -> 79
[MASTER] 19:36:06.496 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 124: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:402 - ReplaceConstant - 80 -> 81
[MASTER] 19:36:06.500 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V
[MASTER] 19:36:06.500 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V
[MASTER] 19:36:06.501 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I79 Branch 4 IFEQ L395 - true in context: weka.classifiers.rules.JRip:setOptions([Ljava/lang/String;)V
[MASTER] 19:36:06.501 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I33 Branch 2 IFEQ L383 - true in context: weka.classifiers.rules.JRip:setOptions([Ljava/lang/String;)V
[MASTER] 19:36:06.501 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I118 Branch 6 IFNE L402 - false in context: weka.classifiers.rules.JRip:setOptions([Ljava/lang/String;)V
[MASTER] 19:36:06.501 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I56 Branch 3 IFEQ L389 - true in context: weka.classifiers.rules.JRip:setOptions([Ljava/lang/String;)V
[MASTER] 19:36:06.501 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I10 Branch 1 IFEQ L377 - true in context: weka.classifiers.rules.JRip:setOptions([Ljava/lang/String;)V
[MASTER] 19:36:06.501 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I105 Branch 5 IFNE L401 - false in context: weka.classifiers.rules.JRip:setOptions([Ljava/lang/String;)V
[MASTER] 19:37:04.857 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 19:37:07.604 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 124s and 107 generations, 51511 statements, best individual has fitness: 13616.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 32%
* Total number of goals: 705
* Number of covered goals: 224
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 23%
* Total number of goals: 416
* Number of covered goals: 96
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 49%
* Total number of goals: 993
* Number of covered goals: 486
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 28%
* Total number of goals: 93
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 23%
* Total number of goals: 416
* Number of covered goals: 96
* Generated 66 tests with total length 517
* Resulting test suite's coverage: 39% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
[MASTER] 19:39:08.893 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: unable to create new native thread
[MASTER] 19:39:09.022 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 19:39:09.192 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 19:39:09.193 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 19:39:09.891 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 19:39:10.143 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:10.143 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
jRip0.listOptions();
InputMappedClassifier inputMappedClassifier0 = new InputMappedClassifier();
inputMappedClassifier0.getModelHeader((Instances) null);

[MASTER] 19:39:14.266 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:14.267 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
JRip.RipperRule jRip_RipperRule0 = jRip0.new RipperRule();
double[] doubleArray0 = new double[7];
doubleArray0[0] = 3392.9;
doubleArray0[1] = 3392.9;
doubleArray0[2] = 3392.9;
doubleArray0[3] = 3392.9;
jRip_RipperRule0.setConsequent((-911.1193916793586));
doubleArray0[4] = 3392.9;
doubleArray0[5] = 3392.9;
doubleArray0[6] = 3392.9;
SparseInstance sparseInstance0 = new SparseInstance(3392.9, doubleArray0);
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((Instance) sparseInstance0);
binarySparseInstance0.toString((Attribute) null);

[MASTER] 19:39:15.052 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:15.052 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
jRip0.getTechnicalInformation();
AbstractClassifier.makeCopies(jRip0, 88);
JRip.RipperRule jRip_RipperRule0 = jRip0.new RipperRule();
double double0 = jRip_RipperRule0.getConsequent();
assertEquals((-1.0), double0, 0.01);

int int0 = jRip0.getFolds();
assertTrue(jRip0.getUsePruning());
assertTrue(jRip0.getCheckErrorRate());
assertEquals(2, jRip0.getOptimizations());
assertEquals(2.0, jRip0.getMinNo(), 0.01);
assertEquals(3, int0);
assertEquals(1L, jRip0.getSeed());
assertFalse(jRip0.getDebug());


[MASTER] 19:39:16.681 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:16.681 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
JRip.RipperRule jRip_RipperRule0 = jRip0.new RipperRule();
boolean boolean0 = jRip_RipperRule0.hasAntds();
assertTrue(jRip0.getCheckErrorRate());
assertEquals(1L, jRip0.getSeed());
assertTrue(jRip0.getUsePruning());
assertEquals(2.0, jRip0.getMinNo(), 0.01);
assertFalse(jRip0.getDebug());
assertEquals(3, jRip0.getFolds());
assertEquals((-1.0), jRip_RipperRule0.getConsequent(), 0.01);
assertFalse(boolean0);
assertEquals(2, jRip0.getOptimizations());


[MASTER] 19:39:17.440 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:17.441 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
String string0 = jRip0.seedTipText();
assertEquals(2.0, jRip0.getMinNo(), 0.01);
assertEquals(1L, jRip0.getSeed());
assertEquals(2, jRip0.getOptimizations());
assertTrue(jRip0.getCheckErrorRate());
assertTrue(jRip0.getUsePruning());
assertEquals("The seed used for randomizing the data.", string0);
assertEquals(3, jRip0.getFolds());
assertFalse(jRip0.getDebug());


[MASTER] 19:39:19.299 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:19.300 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
Attribute attribute0 = new Attribute("3u=TDBp>`>l6T7(%f5i", 79);
JRip.NominalAntd jRip_NominalAntd0 = jRip0.new NominalAntd(attribute0);
String string0 = jRip_NominalAntd0.toString();
assertEquals(2, jRip0.getOptimizations());
assertEquals(Double.NaN, jRip_NominalAntd0.getAccuRate(), 0.01);
assertTrue(jRip0.getCheckErrorRate());
assertEquals(3, jRip0.getFolds());
assertTrue(jRip0.getUsePruning());
assertEquals(2.0, jRip0.getMinNo(), 0.01);
assertEquals(Double.NaN, jRip_NominalAntd0.getAccu(), 0.01);
assertEquals(1L, jRip0.getSeed());
assertEquals(Double.NaN, jRip_NominalAntd0.getAttrValue(), 0.01);
assertEquals("3u=TDBp>`>l6T7(%f5i = ", string0);
assertEquals(Double.NaN, jRip_NominalAntd0.getCover(), 0.01);
assertFalse(jRip0.getDebug());
assertEquals(0.0, jRip_NominalAntd0.getMaxInfoGain(), 0.01);


[MASTER] 19:39:20.089 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:20.090 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(83);
Attribute attribute0 = new Attribute((String) null, (String) null, 83);
JRip.NominalAntd jRip_NominalAntd0 = jRip0.new NominalAntd(attribute0);
String string0 = jRip_NominalAntd0.toString();
assertEquals("null = ", string0);

boolean boolean0 = jRip_NominalAntd0.covers(binarySparseInstance0);
assertEquals(2.0, jRip0.getMinNo(), 0.01);
assertEquals(0.0, jRip_NominalAntd0.getMaxInfoGain(), 0.01);
assertEquals(1L, jRip0.getSeed());
assertEquals(Double.NaN, jRip_NominalAntd0.getAttrValue(), 0.01);
assertTrue(jRip0.getUsePruning());
assertEquals(2, jRip0.getOptimizations());
assertTrue(jRip0.getCheckErrorRate());
assertEquals(Double.NaN, jRip_NominalAntd0.getAccu(), 0.01);
assertEquals(Double.NaN, jRip_NominalAntd0.getAccuRate(), 0.01);
assertEquals(Double.NaN, jRip_NominalAntd0.getCover(), 0.01);
assertFalse(jRip0.getDebug());
assertTrue(boolean0);
assertEquals(3, jRip0.getFolds());


[MASTER] 19:39:20.882 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:20.882 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
int int0 = jRip0.getOptimizations();
assertEquals(1L, jRip0.getSeed());
assertTrue(jRip0.getUsePruning());
assertTrue(jRip0.getCheckErrorRate());
assertEquals(2, int0);
assertFalse(jRip0.getDebug());
assertEquals(3, jRip0.getFolds());
assertEquals(2.0, jRip0.getMinNo(), 0.01);


[MASTER] 19:39:24.113 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:24.114 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
String string0 = jRip0.foldsTipText();
assertEquals(2, jRip0.getOptimizations());
assertEquals(2.0, jRip0.getMinNo(), 0.01);
assertTrue(jRip0.getCheckErrorRate());
assertEquals("Determines the amount of data used for pruning. One fold is used for pruning, the rest for growing the rules.", string0);
assertEquals(1L, jRip0.getSeed());
assertTrue(jRip0.getUsePruning());
assertFalse(jRip0.getDebug());
assertEquals(3, jRip0.getFolds());


[MASTER] 19:39:24.886 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:24.887 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
double double0 = jRip0.getMinNo();
assertTrue(jRip0.getUsePruning());
assertTrue(jRip0.getCheckErrorRate());
assertEquals(1L, jRip0.getSeed());
assertEquals(3, jRip0.getFolds());
assertEquals(2.0, double0, 0.01);
assertEquals(2, jRip0.getOptimizations());
assertFalse(jRip0.getDebug());


[MASTER] 19:39:25.615 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:25.615 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
JRip.RipperRule jRip_RipperRule0 = jRip0.new RipperRule();
jRip_RipperRule0.size();
Attribute attribute0 = new Attribute((String) null, (Instances) null);

[MASTER] 19:39:27.971 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:27.971 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
long long0 = jRip0.getSeed();
assertFalse(jRip0.getDebug());
assertEquals(3, jRip0.getFolds());
assertEquals(1L, long0);
assertEquals(2, jRip0.getOptimizations());
assertEquals(2.0, jRip0.getMinNo(), 0.01);
assertTrue(jRip0.getCheckErrorRate());
assertTrue(jRip0.getUsePruning());


[MASTER] 19:39:29.434 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:29.434 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
String string0 = jRip0.checkErrorRateTipText();
assertEquals("Whether check for error rate >= 1/2 is included in stopping criterion.", string0);
assertFalse(jRip0.getDebug());
assertEquals(2, jRip0.getOptimizations());
assertEquals(3, jRip0.getFolds());
assertTrue(jRip0.getCheckErrorRate());
assertEquals(1L, jRip0.getSeed());
assertEquals(2.0, jRip0.getMinNo(), 0.01);
assertTrue(jRip0.getUsePruning());


[MASTER] 19:39:30.198 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:30.199 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
JRip.NumericAntd jRip_NumericAntd0 = jRip0.new NumericAntd((Attribute) null);
String string0 = jRip_NumericAntd0.getRevision();
assertEquals(Double.NaN, jRip_NumericAntd0.getSplitPoint(), 0.01);
assertFalse(jRip0.getDebug());
assertEquals("8118", string0);
assertEquals(2.0, jRip0.getMinNo(), 0.01);
assertEquals(0.0, jRip_NumericAntd0.getMaxInfoGain(), 0.01);
assertEquals(Double.NaN, jRip_NumericAntd0.getAccu(), 0.01);
assertEquals(3, jRip0.getFolds());
assertEquals(Double.NaN, jRip_NumericAntd0.getAccuRate(), 0.01);
assertEquals(Double.NaN, jRip_NumericAntd0.getCover(), 0.01);
assertEquals(Double.NaN, jRip_NumericAntd0.getAttrValue(), 0.01);
assertEquals(2, jRip0.getOptimizations());
assertTrue(jRip0.getUsePruning());
assertTrue(jRip0.getCheckErrorRate());
assertEquals(1L, jRip0.getSeed());


[MASTER] 19:39:30.994 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:30.995 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Properties properties0 = new Properties();
ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-1.0), (int[]) null, (-1055));
binarySparseInstance0.dataset();
Attribute attribute0 = new Attribute("ROH<};uj", protectedProperties0);
binarySparseInstance0.setDataset((Instances) null);
JRip jRip0 = new JRip();
JRip.NominalAntd jRip_NominalAntd0 = jRip0.new NominalAntd(attribute0);
jRip_NominalAntd0.copy();
jRip_NominalAntd0.covers(binarySparseInstance0);

[MASTER] 19:39:32.571 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:32.573 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Properties properties0 = new Properties();
ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
ClassOrder classOrder0 = new ClassOrder();
UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
doReturn((Object) null, (Object) null).when(function0).apply(any());
Function<Object, Object> function1 = unaryOperator0.compose((Function<? super Object, ?>) function0);
function1.apply(classOrder0);
protectedProperties0.computeIfAbsent(classOrder0, function1);
Attribute attribute0 = new Attribute("ROH<};uj", protectedProperties0);
JRip jRip0 = new JRip();
Attribute attribute1 = new Attribute((String) null, 80);
JRip.NominalAntd jRip_NominalAntd0 = jRip0.new NominalAntd(attribute1);
String string0 = jRip_NominalAntd0.getRevision();
assertEquals("8118", string0);
assertEquals(Double.NaN, jRip_NominalAntd0.getCover(), 0.01);
assertEquals(Double.NaN, jRip_NominalAntd0.getAccuRate(), 0.01);
assertEquals(Double.NaN, jRip_NominalAntd0.getAccu(), 0.01);
assertEquals(0.0, jRip_NominalAntd0.getMaxInfoGain(), 0.01);
assertEquals(Double.NaN, jRip_NominalAntd0.getAttrValue(), 0.01);

JRip jRip1 = new JRip();
assertEquals(2.0, jRip1.getMinNo(), 0.01);
assertEquals(3, jRip1.getFolds());
assertTrue(jRip1.getUsePruning());
assertTrue(jRip1.getCheckErrorRate());
assertEquals(2, jRip1.getOptimizations());
assertEquals(1L, jRip1.getSeed());
assertFalse(jRip1.getDebug());


[MASTER] 19:39:33.381 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:33.381 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
ArrayList<String> arrayList0 = new ArrayList<String>();
LinkedList<String> linkedList0 = new LinkedList<String>();
Attribute attribute0 = new Attribute(",Ga", linkedList0, (-1590));
LinkedList<String> linkedList1 = new LinkedList<String>();
Attribute attribute1 = new Attribute("URL", linkedList0);
JRip.NominalAntd jRip_NominalAntd0 = jRip0.new NominalAntd(attribute0);
jRip_NominalAntd0.getRevision();
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(2);
String[] stringArray0 = new String[6];
stringArray0[0] = "relational";
stringArray0[1] = "integer";
stringArray0[2] = "@attribute";
stringArray0[3] = "@end";
stringArray0[4] = "integer";
jRip0.setOptions(stringArray0);

[MASTER] 19:39:34.185 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:34.186 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
Properties properties0 = new Properties();
Attribute attribute0 = new Attribute("");
byte[] byteArray0 = new byte[0];
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
jRip0.getOptions();
JRip.NumericAntd jRip_NumericAntd0 = jRip0.new NumericAntd(attribute0);
assertEquals(Double.NaN, jRip_NumericAntd0.getCover(), 0.01);

jRip_NumericAntd0.cover = (-68.3916);
String string0 = jRip_NumericAntd0.getRevision();
assertEquals("8118", string0);


[MASTER] 19:39:36.037 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:36.038 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
jRip0.getMeasure("One rule found after pruning:");

[MASTER] 19:39:36.810 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<121> but was:<120>
[MASTER] 19:39:36.812 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
Environment environment0 = new Environment();
Set<String> set0 = environment0.getVariableNames();
List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) set0);
Properties properties0 = new Properties();
ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
ProtectedProperties protectedProperties1 = new ProtectedProperties(protectedProperties0);
Attribute attribute0 = new Attribute("R~d1", list0, protectedProperties1);
JRip.NumericAntd jRip_NumericAntd0 = jRip0.new NumericAntd(attribute0);
double double0 = jRip_NumericAntd0.getMaxInfoGain();
assertEquals(121, set0.size());
assertEquals(0.0, double0, 0.01);


[MASTER] 19:39:37.637 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:37.637 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
Properties properties0 = new Properties();
ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
String string0 = "";
JRip.NumericAntd jRip_NumericAntd0 = jRip0.new NumericAntd((Attribute) null);
Object object0 = jRip_NumericAntd0.copy();
properties0.put((Object) null, object0);

[MASTER] 19:39:38.389 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:38.390 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
jRip0.getMeasure((String) null);

[MASTER] 19:39:39.081 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:39.082 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Properties properties0 = new Properties();
ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-1.0), (int[]) null, (-1055));
binarySparseInstance0.dataset();
Attribute attribute0 = new Attribute("ROH<};uj", protectedProperties0);
JRip jRip0 = new JRip();
JRip.NominalAntd jRip_NominalAntd0 = jRip0.new NominalAntd(attribute0);
jRip_NominalAntd0.splitData((Instances) null, 0, 0);

[MASTER] 19:39:40.592 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:40.592 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
Properties properties0 = new Properties();
String string0 = "";
Attribute attribute0 = new Attribute("", "");
JRip.NumericAntd jRip_NumericAntd0 = jRip0.new NumericAntd(attribute0);
jRip_NumericAntd0.getAttrValue();
jRip_NumericAntd0.getAccuRate();
DecisionTable decisionTable0 = new DecisionTable();
CoverTree coverTree0 = new CoverTree();
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(16);
DenseInstance denseInstance0 = new DenseInstance(binarySparseInstance0);
coverTree0.kNearestNeighbours(denseInstance0, 0);

[MASTER] 19:39:44.195 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:44.195 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
String string0 = jRip0.debugTipText();
assertEquals("Whether debug information is output to the console.", string0);
assertEquals(3, jRip0.getFolds());
assertEquals(1L, jRip0.getSeed());
assertFalse(jRip0.getDebug());
assertEquals(2.0, jRip0.getMinNo(), 0.01);
assertTrue(jRip0.getCheckErrorRate());
assertTrue(jRip0.getUsePruning());
assertEquals(2, jRip0.getOptimizations());


[MASTER] 19:39:46.409 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:46.410 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("lnro`i=#S@'.`j)=D", arrayList0, 35);
jRip0.buildClassifier(instances0);

[MASTER] 19:39:47.159 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:47.159 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
JRip.RipperRule jRip_RipperRule0 = jRip0.new RipperRule();
jRip_RipperRule0.grow((Instances) null);

[MASTER] 19:39:47.901 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:47.901 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
InputMappedClassifier inputMappedClassifier0 = new InputMappedClassifier();
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("\nRuleset so far: ", arrayList0, 67);
Instances instances1 = inputMappedClassifier0.getModelHeader(instances0);
jRip0.rulesetForOneClass(526.2325164369, instances1, 67, 67);

[MASTER] 19:39:49.415 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:49.416 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
Attribute attribute0 = new Attribute((String) null);
attribute0.setWeight(64.0);
JRip.NumericAntd jRip_NumericAntd0 = jRip0.new NumericAntd(attribute0);
double double0 = jRip_NumericAntd0.getCover();
assertEquals(1L, jRip0.getSeed());
assertTrue(jRip0.getCheckErrorRate());
assertTrue(jRip0.getUsePruning());
assertEquals(2, jRip0.getOptimizations());
assertEquals(3, jRip0.getFolds());
assertEquals(Double.NaN, jRip_NumericAntd0.getAttrValue(), 0.01);
assertEquals(2.0, jRip0.getMinNo(), 0.01);
assertEquals(0.0, jRip_NumericAntd0.getMaxInfoGain(), 0.01);
assertEquals(Double.NaN, jRip_NumericAntd0.getAccuRate(), 0.01);
assertEquals(Double.NaN, double0, 0.01);
assertEquals(Double.NaN, jRip_NumericAntd0.getSplitPoint(), 0.01);
assertEquals(Double.NaN, jRip_NumericAntd0.getAccu(), 0.01);
assertFalse(jRip0.getDebug());


[MASTER] 19:39:50.945 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:50.946 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Properties properties0 = new Properties();
ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-1.0), (int[]) null, (-1055));
binarySparseInstance0.dataset();
Attribute attribute0 = new Attribute("ROH<};uj", protectedProperties0);
JRip jRip0 = new JRip();
JRip.NominalAntd jRip_NominalAntd0 = jRip0.new NominalAntd(attribute0);
jRip_NominalAntd0.splitData((Instances) null, (-3973), 0);

[MASTER] 19:39:52.357 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:52.358 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
ArrayList<String> arrayList1 = new ArrayList<String>();
List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) arrayList1);
Properties properties0 = new Properties();
ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
Attribute attribute0 = new Attribute("qjkB1'VnSDb&", list0, protectedProperties0);
JRip.NumericAntd jRip_NumericAntd0 = jRip0.new NumericAntd(attribute0);
assertEquals(Double.NaN, jRip_NumericAntd0.getAttrValue(), 0.01);

ArrayList<Attribute> arrayList2 = new ArrayList<Attribute>();
Instances instances0 = new Instances("relational", arrayList2, 6291);
jRip_NumericAntd0.splitData(instances0, (-1.0), 0);
assertEquals(0.0, jRip_NumericAntd0.getAttrValue(), 0.01);


[MASTER] 19:39:53.778 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:53.778 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
Attribute attribute0 = new Attribute((String) null, 10);
JRip.NominalAntd jRip_NominalAntd0 = jRip0.new NominalAntd(attribute0);
SparseInstance sparseInstance0 = new SparseInstance(1504);
boolean boolean0 = jRip_NominalAntd0.covers(sparseInstance0);
assertEquals(Double.NaN, jRip_NominalAntd0.getAttrValue(), 0.01);
assertEquals(Double.NaN, jRip_NominalAntd0.getCover(), 0.01);
assertFalse(boolean0);
assertEquals(1L, jRip0.getSeed());
assertFalse(jRip0.getDebug());
assertEquals(2.0, jRip0.getMinNo(), 0.01);
assertEquals(Double.NaN, jRip_NominalAntd0.getAccuRate(), 0.01);
assertEquals(Double.NaN, jRip_NominalAntd0.getAccu(), 0.01);
assertEquals(3, jRip0.getFolds());
assertEquals(0.0, jRip_NominalAntd0.getMaxInfoGain(), 0.01);
assertTrue(jRip0.getCheckErrorRate());
assertTrue(jRip0.getUsePruning());
assertEquals(2, jRip0.getOptimizations());


[MASTER] 19:39:55.212 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:55.213 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
Properties properties0 = new Properties();
Attribute attribute0 = new Attribute("");
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(2);
JRip.NumericAntd jRip_NumericAntd0 = jRip0.new NumericAntd(attribute0);
assertEquals(Double.NaN, jRip_NumericAntd0.getAttrValue(), 0.01);

jRip_NumericAntd0.value = (double) 1;
boolean boolean0 = jRip_NumericAntd0.covers(binarySparseInstance0);
assertTrue(boolean0);


[MASTER] 19:39:55.960 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:55.960 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
Properties properties0 = new Properties();
Attribute attribute0 = new Attribute("");
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(2);
JRip.NumericAntd jRip_NumericAntd0 = jRip0.new NumericAntd(attribute0);
assertEquals(Double.NaN, jRip_NumericAntd0.getAttrValue(), 0.01);

jRip_NumericAntd0.value = (double) 1;
String string0 = jRip_NumericAntd0.toString();
assertEquals(" >= NaN", string0);


[MASTER] 19:39:56.717 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 19:39:56.717 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
String[] stringArray0 = new String[7];
stringArray0[0] = "weka.core.matrix.CholeskyDecomposition";
stringArray0[1] = "(this);\n";
jRip0.setDebug(true);
stringArray0[2] = "uLBCG.!hH\"+X'I";
stringArray0[3] = " instances";
stringArray0[4] = "X$O=<c";
stringArray0[5] = "d6628]";
stringArray0[6] = "tJ3WdY";
JRip.main(stringArray0);
jRip0.getOptions();
JRip.NumericAntd jRip_NumericAntd0 = jRip0.new NumericAntd((Attribute) null);
jRip_NumericAntd0.toString();

* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1004/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 19:39:59.273 [Thread-3] ERROR ExternalProcessHandler - Exception while reading output of client process. Stream closed
