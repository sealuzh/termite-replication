* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2399
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1008
* Starting evolution
* Search finished after 125s and 57 generations, 38254 statements, best individual has fitness: 3336.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 217
* Number of covered goals: 182
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 62%
* Total number of goals: 428
* Number of covered goals: 265
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 83%
* Total number of goals: 260
* Number of covered goals: 216
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 61%
* Total number of goals: 428
* Number of covered goals: 263
* Generated 70 tests with total length 320
* Resulting test suite's coverage: 70% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 72%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1008/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2402
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:16:46.785 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:16:46.793 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:16:46.794 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:16:46.823 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1008
* Starting evolution
[MASTER] 22:16:51.113 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 22:17:18.711 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: Line 1133
[MASTER] 22:17:18.711 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I31 Branch 180 IF_ICMPGE L1117 - true
[MASTER] 22:17:18.711 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I46 Branch 182 IF_ICMPGE L1119 - true
[MASTER] 22:17:18.712 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 363: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1117 - ReplaceComparisonOperator >= -> >
[MASTER] 22:17:18.712 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 387: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1119 - ReplaceComparisonOperator >= -> >
[MASTER] 22:17:18.715 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I31 Branch 180 IF_ICMPGE L1117 - true in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
[MASTER] 22:17:18.715 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I46 Branch 182 IF_ICMPGE L1119 - true in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
[MASTER] 22:17:20.928 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I35 Branch 181 IFEQ L1117 - false
[MASTER] 22:17:20.929 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 370: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1117 - ReplaceVariable result -> b
[MASTER] 22:17:20.929 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 371: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1117 - ReplaceVariable j -> n
[MASTER] 22:17:20.929 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 372: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1117 - InsertUnaryOp Negation of j
[MASTER] 22:17:20.929 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 373: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1117 - InsertUnaryOp IINC 1 j
[MASTER] 22:17:20.929 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 374: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1117 - InsertUnaryOp IINC -1 j
[MASTER] 22:17:20.929 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 375: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1117 - ReplaceConstant - 0.0 -> 1.0
[MASTER] 22:17:20.929 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 376: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1117 - ReplaceConstant - 0.0 -> -1.0
[MASTER] 22:17:20.929 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 377: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1117 - ReplaceVariable j -> n
[MASTER] 22:17:20.932 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I35 Branch 181 IFEQ L1117 - false in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
* Search finished after 123s and 68 generations, 39321 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 19 tests with total length 146
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1008/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2402
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:20:54.258 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:20:54.271 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:20:54.277 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:20:54.442 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 22:20:54.493 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 22:20:54.565 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1008
* Starting evolution
* Search finished after 122s and 126 generations, 51778 statements, best individual has fitness: 5888.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 64%
* Total number of goals: 370
* Number of covered goals: 237
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 47%
* Total number of goals: 242
* Number of covered goals: 113
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 58%
* Total number of goals: 713
* Number of covered goals: 411
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 72
* Number of covered goals: 32
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 47%
* Total number of goals: 242
* Number of covered goals: 113
* Generated 64 tests with total length 454
* Resulting test suite's coverage: 58% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
[MASTER] 22:25:11.804 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 22:25:12.703 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1008/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2399
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:33:36.062 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:33:36.092 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:33:36.129 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:33:40.091 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 22:33:41.101 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 22:33:41.122 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1008
* Starting evolution
* Search finished after 125s and 106 generations, 50090 statements, best individual has fitness: 13280.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 34%
* Total number of goals: 705
* Number of covered goals: 241
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 25%
* Total number of goals: 416
* Number of covered goals: 104
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 50%
* Total number of goals: 993
* Number of covered goals: 493
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 30%
* Total number of goals: 93
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 25%
* Total number of goals: 416
* Number of covered goals: 103
* Generated 69 tests with total length 628
* Resulting test suite's coverage: 40% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1008/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2397
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2404
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:38:07.745 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:38:07.749 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:38:07.749 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:38:07.856 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 22:38:08.102 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 22:38:08.104 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 22:38:08.106 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 22:38:08.199 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:38:08.226 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:38:08.239 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1008
* Starting evolution
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1008
* Starting evolution
[MASTER] 22:38:19.042 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;: Line 1144
[MASTER] 22:38:19.043 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;: root-Branch
[MASTER] 22:38:19.046 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 473: weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;:1144 - ReplaceConstant - $Revision: 9122 $ -> 
[MASTER] 22:38:19.046 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;:NonEmptyString
[MASTER] 22:38:19.047 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;
[MASTER] 22:38:19.047 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;
[MASTER] 22:38:19.047 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getRevision()Ljava/lang/String;
[MASTER] 22:39:00.137 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 22:39:00.137 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Search finished after 124s and 75 generations, 41780 statements, best individual has fitness: 1984.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 89%
* Total number of goals: 338
* Number of covered goals: 300
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 76%
* Total number of goals: 194
* Number of covered goals: 148
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 88%
* Total number of goals: 476
* Number of covered goals: 418
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 47%
* Total number of goals: 112
* Number of covered goals: 53
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 76%
* Total number of goals: 194
* Number of covered goals: 147
* Generated 62 tests with total length 668
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 140s and 15 generations, 15079 statements, best individual has fitness: 3368.0
[MASTER] 22:40:33.457 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 24 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 96%
* Total number of goals: 647
* Number of covered goals: 621
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 89%
* Total number of goals: 441
* Number of covered goals: 393
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 87%
* Total number of goals: 678
* Number of covered goals: 593
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 38%
* Total number of goals: 244
* Number of covered goals: 92
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 89%
* Total number of goals: 124
* Number of covered goals: 110
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 88%
* Total number of goals: 124
* Number of covered goals: 109
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 441
* Number of covered goals: 363
* Generated 157 tests with total length 2993
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 51%
* Compiling and checking tests
[MASTER] 22:45:10.637 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_44_1575585909974/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_44_1575585909974/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding.java]]
[MASTER] 22:45:10.637 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:45:10.637 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:45:10.644 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 22:45:10.644 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 22:45:10.644 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 22:45:10.644 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 22:45:10.645 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 22:45:10.647 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_44_1575585909974/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 22:45:10 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import java.util.Map;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.classifiers.meta.LogitBoost;
19: import weka.core.DenseInstance;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_44_tmp__ESTest extends NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=1.543056733112554
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       naiveBayesMultinomialText0.m_periodicP = 2449;
32:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
33:       Integer integer0 = new Integer(2449);
34:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
35:       hashMap0.put(integer0, linkedHashMap0);
36:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
37:       naiveBayesMultinomialText0.pruneDictionary();
38:       LogitBoost logitBoost0 = new LogitBoost();
39:       logitBoost0.setClassifier(naiveBayesMultinomialText0);
40:       logitBoost0.getCapabilities();
41:       naiveBayesMultinomialText0.getPeriodicPruning();
42:       DenseInstance denseInstance0 = new DenseInstance(2054114793);
43:   }
44: }
RegularFileObject[/tmp/EvoSuite_44_1575585909974/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 22:45:10 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.classifiers.rules.part.C45PruneableDecList",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.attributeSelection.SubsetEvaluator",
98:       "weka.classifiers.bayes.net.search.local.K2",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.core.neighboursearch.CoverTree$DistanceNode",
102:       "weka.classifiers.rules.PART",
103:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
104:       "weka.attributeSelection.CfsSubsetEval",
105:       "weka.core.DenseInstance",
106:       "weka.classifiers.trees.J48",
107:       "weka.core.stemmers.Stemmer",
108:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
109:       "org.pentaho.packageManagement.DefaultPackageManager",
110:       "weka.classifiers.meta.LogitBoost",
111:       "org.bounce.net.DefaultAuthenticator",
112:       "weka.core.neighboursearch.CoverTree$MyHeap",
113:       "weka.estimators.IncrementalEstimator",
114:       "weka.estimators.Estimator$Builder",
115:       "weka.core.stemmers.NullStemmer",
116:       "weka.core.EnvironmentHandler",
117:       "weka.classifiers.trees.j48.C45ModelSelection",
118:       "weka.classifiers.functions.SGDText",
119:       "weka.core.RelationalLocator",
120:       "weka.core.Utils",
121:       "weka.core.CustomDisplayStringProvider",
122:       "weka.core.tokenizers.Tokenizer",
123:       "weka.core.NormalizableDistance",
124:       "weka.core.NoSupportForMissingValuesException",
125:       "weka.classifiers.UpdateableClassifier",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
127:       "weka.core.MultiInstanceCapabilitiesHandler",
128:       "weka.core.Copyable",
129:       "weka.core.Capabilities",
130:       "weka.core.BinarySparseInstance",
131:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
132:       "weka.core.AttributeLocator",
133:       "weka.core.SerializedObject",
134:       "weka.clusterers.UpdateableClusterer",
135:       "weka.core.Summarizable",
136:       "weka.classifiers.trees.j48.ModelSelection",
137:       "weka.attributeSelection.BestFirst",
138:       "weka.core.AdditionalMeasureProducer",
139:       "org.pentaho.packageManagement.PackageManager$1",
140:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
141:       "weka.attributeSelection.GreedyStepwise",
142:       "weka.core.Drawable",
143:       "weka.core.matrix.Matrix",
144:       "weka.core.CapabilitiesHandler",
145:       "weka.classifiers.rules.part.ClassifierDecList",
146:       "weka.attributeSelection.ASEvaluation",
147:       "weka.core.AbstractInstance",
148:       "weka.core.scripting.JythonObject",
149:       "weka.core.SelectedTag",
150:       "weka.classifiers.meta.FilteredClassifier",
151:       "org.pentaho.packageManagement.DefaultPackage",
152:       "weka.estimators.DiscreteEstimator",
153:       "weka.classifiers.misc.InputMappedClassifier",
154:       "weka.classifiers.bayes.BayesNet",
155:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
156:       "weka.core.Version",
157:       "weka.attributeSelection.AttributeSelection",
158:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
159:       "weka.core.Tag",
160:       "weka.classifiers.IteratedSingleClassifierEnhancer",
161:       "weka.classifiers.trees.j48.BinC45ModelSelection",
162:       "weka.core.neighboursearch.CoverTree",
163:       "weka.classifiers.AbstractClassifier",
164:       "weka.filters.unsupervised.attribute.Center",
165:       "weka.core.OptionHandler",
166:       "weka.core.WekaException",
167:       "weka.filters.supervised.attribute.AttributeSelection",
168:       "weka.filters.StreamableFilter",
169:       "weka.core.Range",
170:       "weka.core.PartitionGenerator",
171:       "weka.core.scripting.JythonSerializableObject",
172:       "weka.classifiers.Classifier",
173:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
174:       "weka.core.Capabilities$Capability",
175:       "weka.core.SparseInstance",
176:       "org.pentaho.packageManagement.PackageManager",
177:       "weka.attributeSelection.AttributeTransformer",
178:       "weka.core.tokenizers.WordTokenizer",
179:       "weka.classifiers.misc.SerializedClassifier",
180:       "weka.classifiers.trees.j48.ClassifierTree",
181:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
182:       "weka.attributeSelection.PrincipalComponents",
183:       "weka.core.stemmers.SnowballStemmer",
184:       "weka.classifiers.trees.j48.PruneableClassifierTree",
185:       "weka.classifiers.Evaluation",
186:       "weka.classifiers.functions.supportVector.Kernel",
187:       "weka.core.WekaPackageManager",
188:       "weka.attributeSelection.ASSearch",
189:       "weka.filters.SupervisedFilter",
190:       "weka.core.TechnicalInformationHandler",
191:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
192:       "weka.attributeSelection.StartSetHandler",
193:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
194:       "weka.core.Option",
195:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
196:       "weka.core.neighboursearch.PerformanceStats",
197:       "weka.filters.Sourcable",
198:       "weka.core.Attribute",
199:       "weka.core.Stopwords",
200:       "weka.core.FastVector",
201:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
202:       "weka.core.UnassignedDatasetException",
203:       "weka.classifiers.RandomizableClassifier",
204:       "weka.attributeSelection.RankedOutputSearch",
205:       "weka.classifiers.SingleClassifierEnhancer",
206:       "weka.core.RevisionUtils",
207:       "weka.core.Instance",
208:       "weka.classifiers.rules.part.MakeDecList",
209:       "weka.estimators.Estimator",
210:       "weka.core.ProtectedProperties",
211:       "weka.core.StringLocator",
212:       "weka.classifiers.bayes.net.ADNode",
213:       "weka.core.Matchable",
214:       "weka.core.AttributeStats",
215:       "weka.core.WeightedInstancesHandler",
216:       "weka.core.neighboursearch.NearestNeighbourSearch",
217:       "weka.classifiers.trees.DecisionStump",
218:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
219:       "weka.core.neighboursearch.covertrees.Stack",
220:       "weka.filters.unsupervised.attribute.Remove",
221:       "weka.core.Randomizable",
222:       "weka.classifiers.functions.SGD",
223:       "weka.core.EuclideanDistance",
224:       "weka.core.Instances",
225:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
226:       "weka.classifiers.rules.part.PruneableDecList",
227:       "weka.core.UnassignedClassException",
228:       "weka.classifiers.bayes.net.ParentSet",
229:       "weka.classifiers.rules.ZeroR",
230:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
231:       "weka.filters.unsupervised.attribute.Standardize",
232:       "weka.attributeSelection.Ranker",
233:       "weka.core.TechnicalInformation",
234:       "weka.core.UnsupportedAttributeTypeException",
235:       "weka.classifiers.Sourcable",
236:       "weka.core.RevisionHandler",
237:       "weka.classifiers.evaluation.output.prediction.PlainText",
238:       "weka.core.neighboursearch.TreePerformanceStats",
239:       "weka.core.xml.XMLSerialization",
240:       "weka.classifiers.xml.XMLClassifier",
241:       "weka.filters.Filter",
242:       "weka.filters.supervised.attribute.Discretize"
243:     );
244:   } 
245: 
246:   private static void resetClasses() {
247:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding.class.getClassLoader()); 
248: 
249:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
250:       "weka.classifiers.AbstractClassifier",
251:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
252:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
253:       "weka.core.Capabilities$Capability",
254:       "weka.core.tokenizers.Tokenizer",
255:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
256:       "weka.core.tokenizers.WordTokenizer",
257:       "weka.core.stemmers.NullStemmer",
258:       "weka.core.SerializedObject",
259:       "weka.classifiers.SingleClassifierEnhancer",
260:       "weka.classifiers.misc.InputMappedClassifier",
261:       "weka.classifiers.rules.ZeroR",
262:       "weka.classifiers.functions.SimpleLogistic",
263:       "weka.core.Utils",
264:       "weka.core.AbstractInstance",
265:       "weka.core.SparseInstance",
266:       "weka.classifiers.Evaluation",
267:       "weka.core.Option",
268:       "weka.classifiers.meta.FilteredClassifier",
269:       "weka.filters.Filter",
270:       "weka.filters.supervised.attribute.AttributeSelection",
271:       "weka.attributeSelection.AttributeSelection",
272:       "weka.attributeSelection.ASEvaluation",
273:       "weka.attributeSelection.CfsSubsetEval",
274:       "weka.attributeSelection.ASSearch",
275:       "weka.attributeSelection.GreedyStepwise",
276:       "weka.core.Range",
277:       "weka.core.Tag",
278:       "weka.attributeSelection.BestFirst",
279:       "weka.classifiers.trees.J48",
280:       "weka.filters.supervised.attribute.Discretize",
281:       "weka.core.Capabilities",
282:       "org.pentaho.packageManagement.PackageManager",
283:       "org.pentaho.packageManagement.DefaultPackageManager",
284:       "weka.core.Version",
285:       "weka.core.Environment",
286:       "weka.core.WekaPackageManager",
287:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
288:       "weka.classifiers.meta.CostSensitiveClassifier",
289:       "weka.classifiers.CostMatrix",
290:       "weka.core.SelectedTag",
291:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
292:       "weka.attributeSelection.PrincipalComponents",
293:       "weka.core.BinarySparseInstance",
294:       "weka.core.DenseInstance",
295:       "weka.classifiers.lazy.IBk",
296:       "weka.core.neighboursearch.NearestNeighbourSearch",
297:       "weka.core.neighboursearch.LinearNNSearch",
298:       "weka.core.NormalizableDistance",
299:       "weka.core.EuclideanDistance",
300:       "weka.core.Instances",
301:       "weka.core.stemmers.SnowballStemmer",
302:       "weka.core.RevisionUtils",
303:       "weka.core.tokenizers.AlphabeticTokenizer",
304:       "weka.core.tokenizers.NGramTokenizer",
305:       "weka.core.neighboursearch.CoverTree",
306:       "weka.core.Stopwords",
307:       "weka.core.stemmers.LovinsStemmer",
308:       "weka.core.stemmers.IteratedLovinsStemmer",
309:       "weka.core.UnassignedDatasetException",
310:       "weka.core.neighboursearch.BallTree",
311:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
312:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
313:       "weka.core.neighboursearch.balltrees.BallSplitter",
314:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
315:       "weka.core.neighboursearch.balltrees.BallNode",
316:       "weka.classifiers.trees.LMT",
317:       "weka.classifiers.bayes.NaiveBayes",
318:       "weka.classifiers.RandomizableClassifier",
319:       "weka.classifiers.functions.SGDText",
320:       "weka.core.TestInstances",
321:       "weka.core.Attribute",
322:       "weka.core.ProtectedProperties",
323:       "weka.core.FindWithCapabilities",
324:       "weka.core.SingleIndex",
325:       "weka.classifiers.trees.REPTree",
326:       "weka.filters.SimpleFilter",
327:       "weka.filters.SimpleStreamFilter",
328:       "weka.filters.MultiFilter",
329:       "weka.filters.AllFilter",
330:       "weka.classifiers.trees.m5.M5Base",
331:       "weka.classifiers.rules.M5Rules",
332:       "weka.classifiers.functions.LinearRegression",
333:       "weka.classifiers.lazy.KStar",
334:       "weka.classifiers.MultipleClassifiersCombiner",
335:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
336:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
337:       "weka.classifiers.meta.Stacking",
338:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
339:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
340:       "weka.classifiers.bayes.BayesNet",
341:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
342:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
343:       "weka.classifiers.bayes.net.search.local.K2",
344:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
345:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
346:       "weka.classifiers.bayes.NaiveBayesMultinomial",
347:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
348:       "weka.estimators.Estimator",
349:       "weka.estimators.NormalEstimator",
350:       "weka.core.neighboursearch.KDTree",
351:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
352:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
353:       "weka.classifiers.functions.supportVector.Kernel",
354:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
355:       "weka.classifiers.misc.SerializedClassifier",
356:       "weka.estimators.DiscreteEstimator",
357:       "weka.core.UnassignedClassException",
358:       "weka.core.converters.ArffLoader$ArffReader",
359:       "weka.core.WekaException",
360:       "weka.classifiers.rules.OneR",
361:       "weka.classifiers.functions.VotedPerceptron",
362:       "weka.classifiers.IteratedSingleClassifierEnhancer",
363:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
364:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
365:       "weka.classifiers.meta.Bagging",
366:       "weka.attributeSelection.OneRAttributeEval",
367:       "weka.core.UnsupportedAttributeTypeException",
368:       "weka.classifiers.trees.DecisionStump",
369:       "weka.core.ListOptions",
370:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
371:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
372:       "weka.classifiers.functions.SGD",
373:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
374:       "weka.core.ClassDiscovery",
375:       "weka.classifiers.meta.RegressionByDiscretization",
376:       "weka.filters.unsupervised.attribute.Discretize",
377:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
378:       "weka.classifiers.meta.MultiScheme",
379:       "weka.classifiers.bayes.NaiveBayesUpdateable",
380:       "weka.classifiers.meta.ClassificationViaRegression",
381:       "weka.classifiers.trees.M5P",
382:       "weka.classifiers.trees.j48.ClassifierTree",
383:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
384:       "weka.classifiers.bayes.net.BIFReader",
385:       "weka.classifiers.lazy.LWL",
386:       "weka.estimators.PoissonEstimator",
387:       "weka.attributeSelection.CorrelationAttributeEval",
388:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
389:       "weka.classifiers.meta.LogitBoost",
390:       "weka.core.TechnicalInformation",
391:       "weka.core.TechnicalInformation$Type",
392:       "weka.core.TechnicalInformation$Field",
393:       "weka.classifiers.rules.JRip",
394:       "weka.attributeSelection.InfoGainAttributeEval",
395:       "weka.classifiers.functions.supportVector.CachedKernel",
396:       "weka.classifiers.functions.supportVector.Puk",
397:       "weka.classifiers.meta.RandomCommittee",
398:       "weka.classifiers.trees.RandomTree",
399:       "weka.core.WekaEnumeration",
400:       "weka.core.Attribute$1",
401:       "weka.attributeSelection.ReliefFAttributeEval",
402:       "weka.classifiers.functions.SimpleLinearRegression",
403:       "weka.classifiers.meta.AdditiveRegression",
404:       "weka.classifiers.functions.Logistic",
405:       "weka.classifiers.functions.supportVector.PolyKernel",
406:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
407:       "weka.classifiers.rules.PART",
408:       "weka.classifiers.rules.part.MakeDecList",
409:       "weka.classifiers.functions.supportVector.StringKernel",
410:       "weka.classifiers.meta.AttributeSelectedClassifier",
411:       "weka.classifiers.meta.CVParameterSelection",
412:       "weka.core.FastVector",
413:       "weka.classifiers.functions.supportVector.RBFKernel",
414:       "weka.classifiers.functions.GaussianProcesses",
415:       "weka.estimators.KernelEstimator",
416:       "weka.attributeSelection.GainRatioAttributeEval",
417:       "weka.attributeSelection.WrapperSubsetEval",
418:       "weka.classifiers.meta.AdaBoostM1",
419:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
420:       "weka.classifiers.functions.SMO",
421:       "weka.classifiers.rules.DecisionTable",
422:       "weka.classifiers.functions.SMOreg",
423:       "weka.classifiers.functions.supportVector.RegOptimizer",
424:       "weka.classifiers.functions.supportVector.RegSMO",
425:       "weka.classifiers.functions.supportVector.RegSMOImproved",
426:       "weka.classifiers.functions.SGDText$Count",
427:       "weka.core.matrix.Matrix",
428:       "weka.classifiers.meta.MultiClassClassifier",
429:       "weka.classifiers.trees.RandomForest",
430:       "weka.core.AttributeStats",
431:       "weka.core.ChebyshevDistance"
432:     );
433:   }
434: }

[MASTER] 22:45:10.648 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_periodicP = 2449;
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = new Integer(2449);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
hashMap0.put(integer0, linkedHashMap0);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
naiveBayesMultinomialText0.pruneDictionary();
LogitBoost logitBoost0 = new LogitBoost();
logitBoost0.setClassifier(naiveBayesMultinomialText0);
logitBoost0.getCapabilities();
naiveBayesMultinomialText0.getPeriodicPruning();
DenseInstance denseInstance0 = new DenseInstance(2054114793);

[MASTER] 22:45:10.899 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_50_1575585910857/weka/classifiers/bayes/NaiveBayesMultinomialText_50_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_50_1575585910857/weka/classifiers/bayes/NaiveBayesMultinomialText_50_tmp__ESTest_scaffolding.java]]
[MASTER] 22:45:10.899 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:45:10.899 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:45:10.900 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 22:45:10.900 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 22:45:10.900 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 22:45:10.900 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 49
[MASTER] 22:45:10.900 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 49
[MASTER] 22:45:10.901 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_50_1575585910857/weka/classifiers/bayes/NaiveBayesMultinomialText_50_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 22:45:10 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.testdata.EvoSuiteFile;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.attributeSelection.PrincipalComponents;
19: import weka.classifiers.bayes.NaiveBayesMultinomialText;
20: import weka.core.Instance;
21: import weka.core.SparseInstance;
22: import weka.core.neighboursearch.CoverTree;
23: 
24: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
25: public class NaiveBayesMultinomialText_50_tmp__ESTest extends NaiveBayesMultinomialText_50_tmp__ESTest_scaffolding {
26: 
27:   /**
28:   //Test case number: 0
29:   /*Coverage entropy=3.3844894049549885
30:   */
31:   @Test(timeout = 4000)
32:   public void test0()  throws Throwable  {
33:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
34:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
35:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
36:       boolean boolean0 = true;
37:       naiveBayesMultinomialText0.setLowercaseTokens(true);
38:       naiveBayesMultinomialText0.setDebug(true);
39:       FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{M8Hp$");
40:       naiveBayesMultinomialText0.m_norm = (-3491.0);
41:       naiveBayesMultinomialText0.getStemmer();
42:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
43:       naiveBayesMultinomialText0.getOptions();
44:       naiveBayesMultinomialText0.getOptions();
45:       naiveBayesMultinomialText0.getMinWordFrequency();
46:       naiveBayesMultinomialText0.getCapabilities();
47:       naiveBayesMultinomialText0.stemmerTipText();
48:       Integer integer0 = new Integer((-84));
49:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
50:       linkedHashMap0.put(integer0, linkedHashMap1);
51:       naiveBayesMultinomialText0.periodicPruningTipText();
52:       naiveBayesMultinomialText0.LNormTipText();
53:       naiveBayesMultinomialText0.getTokenizer();
54:       PrincipalComponents principalComponents0 = new PrincipalComponents();
55:       CoverTree coverTree0 = new CoverTree();
56:       double[] doubleArray0 = new double[9];
57:       doubleArray0[0] = (-3491.0);
58:       doubleArray0[1] = 3.0;
59:       doubleArray0[2] = (double) (-84);
60:       doubleArray0[3] = 3.0;
61:       doubleArray0[4] = (-3491.0);
62:       doubleArray0[5] = 3.0;
63:       doubleArray0[6] = 6.0;
64:       doubleArray0[7] = 3.0;
65:       doubleArray0[8] = (double) (-84);
66:       SparseInstance sparseInstance0 = new SparseInstance((-3491.0), doubleArray0);
67:       try { 
68:         coverTree0.nearestNeighbour(sparseInstance0);
69:         fail("Expecting exception: NullPointerException");
70:       
71:       } catch(NullPointerException e) {
72:          //
73:          // no message in exception (getMessage() returned null)
74:          //
75:          verifyException("weka.core.Instances", e);
76:       }
77:   }
78: }
RegularFileObject[/tmp/EvoSuite_50_1575585910857/weka/classifiers/bayes/NaiveBayesMultinomialText_50_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 22:45:10 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_50_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_50_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.classifiers.rules.part.C45PruneableDecList",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.attributeSelection.SubsetEvaluator",
98:       "weka.classifiers.bayes.net.search.local.K2",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.core.neighboursearch.CoverTree$DistanceNode",
102:       "weka.classifiers.rules.PART",
103:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
104:       "weka.attributeSelection.CfsSubsetEval",
105:       "weka.core.DenseInstance",
106:       "weka.classifiers.trees.J48",
107:       "weka.core.stemmers.Stemmer",
108:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
109:       "org.pentaho.packageManagement.DefaultPackageManager",
110:       "weka.classifiers.meta.LogitBoost",
111:       "org.bounce.net.DefaultAuthenticator",
112:       "weka.core.neighboursearch.CoverTree$MyHeap",
113:       "weka.estimators.IncrementalEstimator",
114:       "weka.estimators.Estimator$Builder",
115:       "weka.core.stemmers.NullStemmer",
116:       "weka.core.EnvironmentHandler",
117:       "weka.classifiers.trees.j48.C45ModelSelection",
118:       "weka.classifiers.functions.SGDText",
119:       "weka.core.RelationalLocator",
120:       "weka.core.Utils",
121:       "weka.core.CustomDisplayStringProvider",
122:       "weka.core.tokenizers.Tokenizer",
123:       "weka.core.NormalizableDistance",
124:       "weka.core.NoSupportForMissingValuesException",
125:       "weka.classifiers.UpdateableClassifier",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
127:       "weka.core.MultiInstanceCapabilitiesHandler",
128:       "weka.core.Copyable",
129:       "weka.core.Capabilities",
130:       "weka.core.BinarySparseInstance",
131:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
132:       "weka.core.AttributeLocator",
133:       "weka.core.SerializedObject",
134:       "weka.clusterers.UpdateableClusterer",
135:       "weka.core.Summarizable",
136:       "weka.classifiers.trees.j48.ModelSelection",
137:       "weka.attributeSelection.BestFirst",
138:       "weka.core.AdditionalMeasureProducer",
139:       "org.pentaho.packageManagement.PackageManager$1",
140:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
141:       "weka.attributeSelection.GreedyStepwise",
142:       "weka.core.Drawable",
143:       "weka.core.matrix.Matrix",
144:       "weka.core.CapabilitiesHandler",
145:       "weka.classifiers.rules.part.ClassifierDecList",
146:       "weka.attributeSelection.ASEvaluation",
147:       "weka.core.AbstractInstance",
148:       "weka.core.scripting.JythonObject",
149:       "weka.core.SelectedTag",
150:       "weka.classifiers.meta.FilteredClassifier",
151:       "org.pentaho.packageManagement.DefaultPackage",
152:       "weka.estimators.DiscreteEstimator",
153:       "weka.classifiers.misc.InputMappedClassifier",
154:       "weka.classifiers.bayes.BayesNet",
155:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
156:       "weka.core.Version",
157:       "weka.attributeSelection.AttributeSelection",
158:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
159:       "weka.core.Tag",
160:       "weka.classifiers.IteratedSingleClassifierEnhancer",
161:       "weka.classifiers.trees.j48.BinC45ModelSelection",
162:       "weka.core.neighboursearch.CoverTree",
163:       "weka.classifiers.AbstractClassifier",
164:       "weka.filters.unsupervised.attribute.Center",
165:       "weka.core.OptionHandler",
166:       "weka.core.WekaException",
167:       "weka.filters.supervised.attribute.AttributeSelection",
168:       "weka.filters.StreamableFilter",
169:       "weka.core.Range",
170:       "weka.core.PartitionGenerator",
171:       "weka.core.scripting.JythonSerializableObject",
172:       "weka.classifiers.Classifier",
173:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
174:       "weka.core.Capabilities$Capability",
175:       "weka.core.SparseInstance",
176:       "org.pentaho.packageManagement.PackageManager",
177:       "weka.attributeSelection.AttributeTransformer",
178:       "weka.core.tokenizers.WordTokenizer",
179:       "weka.classifiers.misc.SerializedClassifier",
180:       "weka.classifiers.trees.j48.ClassifierTree",
181:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
182:       "weka.attributeSelection.PrincipalComponents",
183:       "weka.core.stemmers.SnowballStemmer",
184:       "weka.classifiers.trees.j48.PruneableClassifierTree",
185:       "weka.classifiers.Evaluation",
186:       "weka.classifiers.functions.supportVector.Kernel",
187:       "weka.core.WekaPackageManager",
188:       "weka.attributeSelection.ASSearch",
189:       "weka.filters.SupervisedFilter",
190:       "weka.core.TechnicalInformationHandler",
191:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
192:       "weka.attributeSelection.StartSetHandler",
193:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
194:       "weka.core.Option",
195:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
196:       "weka.core.neighboursearch.PerformanceStats",
197:       "weka.filters.Sourcable",
198:       "weka.core.Attribute",
199:       "weka.core.Stopwords",
200:       "weka.core.FastVector",
201:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
202:       "weka.core.UnassignedDatasetException",
203:       "weka.classifiers.RandomizableClassifier",
204:       "weka.attributeSelection.RankedOutputSearch",
205:       "weka.classifiers.SingleClassifierEnhancer",
206:       "weka.core.RevisionUtils",
207:       "weka.core.Instance",
208:       "weka.classifiers.rules.part.MakeDecList",
209:       "weka.estimators.Estimator",
210:       "weka.core.ProtectedProperties",
211:       "weka.core.StringLocator",
212:       "weka.classifiers.bayes.net.ADNode",
213:       "weka.core.Matchable",
214:       "weka.core.AttributeStats",
215:       "weka.core.WeightedInstancesHandler",
216:       "weka.core.neighboursearch.NearestNeighbourSearch",
217:       "weka.classifiers.trees.DecisionStump",
218:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
219:       "weka.core.neighboursearch.covertrees.Stack",
220:       "weka.filters.unsupervised.attribute.Remove",
221:       "weka.core.Randomizable",
222:       "weka.classifiers.functions.SGD",
223:       "weka.core.EuclideanDistance",
224:       "weka.core.Instances",
225:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
226:       "weka.classifiers.rules.part.PruneableDecList",
227:       "weka.core.UnassignedClassException",
228:       "weka.classifiers.bayes.net.ParentSet",
229:       "weka.classifiers.rules.ZeroR",
230:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
231:       "weka.filters.unsupervised.attribute.Standardize",
232:       "weka.attributeSelection.Ranker",
233:       "weka.core.TechnicalInformation",
234:       "weka.core.UnsupportedAttributeTypeException",
235:       "weka.classifiers.Sourcable",
236:       "weka.core.RevisionHandler",
237:       "weka.classifiers.evaluation.output.prediction.PlainText",
238:       "weka.core.neighboursearch.TreePerformanceStats",
239:       "weka.core.xml.XMLSerialization",
240:       "weka.classifiers.xml.XMLClassifier",
241:       "weka.filters.Filter",
242:       "weka.filters.supervised.attribute.Discretize"
243:     );
244:   } 
245: 
246:   private static void resetClasses() {
247:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_50_tmp__ESTest_scaffolding.class.getClassLoader()); 
248: 
249:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
250:       "weka.classifiers.AbstractClassifier",
251:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
252:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
253:       "weka.core.Capabilities$Capability",
254:       "weka.core.tokenizers.Tokenizer",
255:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
256:       "weka.core.tokenizers.WordTokenizer",
257:       "weka.core.stemmers.NullStemmer",
258:       "weka.core.SerializedObject",
259:       "weka.classifiers.SingleClassifierEnhancer",
260:       "weka.classifiers.misc.InputMappedClassifier",
261:       "weka.classifiers.rules.ZeroR",
262:       "weka.classifiers.functions.SimpleLogistic",
263:       "weka.core.Utils",
264:       "weka.core.AbstractInstance",
265:       "weka.core.SparseInstance",
266:       "weka.classifiers.Evaluation",
267:       "weka.core.Option",
268:       "weka.classifiers.meta.FilteredClassifier",
269:       "weka.filters.Filter",
270:       "weka.filters.supervised.attribute.AttributeSelection",
271:       "weka.attributeSelection.AttributeSelection",
272:       "weka.attributeSelection.ASEvaluation",
273:       "weka.attributeSelection.CfsSubsetEval",
274:       "weka.attributeSelection.ASSearch",
275:       "weka.attributeSelection.GreedyStepwise",
276:       "weka.core.Range",
277:       "weka.core.Tag",
278:       "weka.attributeSelection.BestFirst",
279:       "weka.classifiers.trees.J48",
280:       "weka.filters.supervised.attribute.Discretize",
281:       "weka.core.Capabilities",
282:       "org.pentaho.packageManagement.PackageManager",
283:       "org.pentaho.packageManagement.DefaultPackageManager",
284:       "weka.core.Version",
285:       "weka.core.Environment",
286:       "weka.core.WekaPackageManager",
287:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
288:       "weka.classifiers.meta.CostSensitiveClassifier",
289:       "weka.classifiers.CostMatrix",
290:       "weka.core.SelectedTag",
291:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
292:       "weka.attributeSelection.PrincipalComponents",
293:       "weka.core.BinarySparseInstance",
294:       "weka.core.DenseInstance",
295:       "weka.classifiers.lazy.IBk",
296:       "weka.core.neighboursearch.NearestNeighbourSearch",
297:       "weka.core.neighboursearch.LinearNNSearch",
298:       "weka.core.NormalizableDistance",
299:       "weka.core.EuclideanDistance",
300:       "weka.core.Instances",
301:       "weka.core.stemmers.SnowballStemmer",
302:       "weka.core.RevisionUtils",
303:       "weka.core.tokenizers.AlphabeticTokenizer",
304:       "weka.core.tokenizers.NGramTokenizer",
305:       "weka.core.neighboursearch.CoverTree",
306:       "weka.core.Stopwords",
307:       "weka.core.stemmers.LovinsStemmer",
308:       "weka.core.stemmers.IteratedLovinsStemmer",
309:       "weka.core.UnassignedDatasetException",
310:       "weka.core.neighboursearch.BallTree",
311:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
312:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
313:       "weka.core.neighboursearch.balltrees.BallSplitter",
314:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
315:       "weka.core.neighboursearch.balltrees.BallNode",
316:       "weka.classifiers.trees.LMT",
317:       "weka.classifiers.bayes.NaiveBayes",
318:       "weka.classifiers.RandomizableClassifier",
319:       "weka.classifiers.functions.SGDText",
320:       "weka.core.TestInstances",
321:       "weka.core.Attribute",
322:       "weka.core.ProtectedProperties",
323:       "weka.core.FindWithCapabilities",
324:       "weka.core.SingleIndex",
325:       "weka.classifiers.trees.REPTree",
326:       "weka.filters.SimpleFilter",
327:       "weka.filters.SimpleStreamFilter",
328:       "weka.filters.MultiFilter",
329:       "weka.filters.AllFilter",
330:       "weka.classifiers.trees.m5.M5Base",
331:       "weka.classifiers.rules.M5Rules",
332:       "weka.classifiers.functions.LinearRegression",
333:       "weka.classifiers.lazy.KStar",
334:       "weka.classifiers.MultipleClassifiersCombiner",
335:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
336:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
337:       "weka.classifiers.meta.Stacking",
338:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
339:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
340:       "weka.classifiers.bayes.BayesNet",
341:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
342:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
343:       "weka.classifiers.bayes.net.search.local.K2",
344:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
345:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
346:       "weka.classifiers.bayes.NaiveBayesMultinomial",
347:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
348:       "weka.estimators.Estimator",
349:       "weka.estimators.NormalEstimator",
350:       "weka.core.neighboursearch.KDTree",
351:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
352:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
353:       "weka.classifiers.functions.supportVector.Kernel",
354:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
355:       "weka.classifiers.misc.SerializedClassifier",
356:       "weka.estimators.DiscreteEstimator",
357:       "weka.core.UnassignedClassException",
358:       "weka.core.converters.ArffLoader$ArffReader",
359:       "weka.core.WekaException",
360:       "weka.classifiers.rules.OneR",
361:       "weka.classifiers.functions.VotedPerceptron",
362:       "weka.classifiers.IteratedSingleClassifierEnhancer",
363:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
364:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
365:       "weka.classifiers.meta.Bagging",
366:       "weka.attributeSelection.OneRAttributeEval",
367:       "weka.core.UnsupportedAttributeTypeException",
368:       "weka.classifiers.trees.DecisionStump",
369:       "weka.core.ListOptions",
370:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
371:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
372:       "weka.classifiers.functions.SGD",
373:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
374:       "weka.core.ClassDiscovery",
375:       "weka.classifiers.meta.RegressionByDiscretization",
376:       "weka.filters.unsupervised.attribute.Discretize",
377:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
378:       "weka.classifiers.meta.MultiScheme",
379:       "weka.classifiers.bayes.NaiveBayesUpdateable",
380:       "weka.classifiers.meta.ClassificationViaRegression",
381:       "weka.classifiers.trees.M5P",
382:       "weka.classifiers.trees.j48.ClassifierTree",
383:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
384:       "weka.classifiers.bayes.net.BIFReader",
385:       "weka.classifiers.lazy.LWL",
386:       "weka.estimators.PoissonEstimator",
387:       "weka.attributeSelection.CorrelationAttributeEval",
388:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
389:       "weka.classifiers.meta.LogitBoost",
390:       "weka.core.TechnicalInformation",
391:       "weka.core.TechnicalInformation$Type",
392:       "weka.core.TechnicalInformation$Field",
393:       "weka.classifiers.rules.JRip",
394:       "weka.attributeSelection.InfoGainAttributeEval",
395:       "weka.classifiers.functions.supportVector.CachedKernel",
396:       "weka.classifiers.functions.supportVector.Puk",
397:       "weka.classifiers.meta.RandomCommittee",
398:       "weka.classifiers.trees.RandomTree",
399:       "weka.core.WekaEnumeration",
400:       "weka.core.Attribute$1",
401:       "weka.attributeSelection.ReliefFAttributeEval",
402:       "weka.classifiers.functions.SimpleLinearRegression",
403:       "weka.classifiers.meta.AdditiveRegression",
404:       "weka.classifiers.functions.Logistic",
405:       "weka.classifiers.functions.supportVector.PolyKernel",
406:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
407:       "weka.classifiers.rules.PART",
408:       "weka.classifiers.rules.part.MakeDecList",
409:       "weka.classifiers.functions.supportVector.StringKernel",
410:       "weka.classifiers.meta.AttributeSelectedClassifier",
411:       "weka.classifiers.meta.CVParameterSelection",
412:       "weka.core.FastVector",
413:       "weka.classifiers.functions.supportVector.RBFKernel",
414:       "weka.classifiers.functions.GaussianProcesses",
415:       "weka.estimators.KernelEstimator",
416:       "weka.attributeSelection.GainRatioAttributeEval",
417:       "weka.attributeSelection.WrapperSubsetEval",
418:       "weka.classifiers.meta.AdaBoostM1",
419:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
420:       "weka.classifiers.functions.SMO",
421:       "weka.classifiers.rules.DecisionTable",
422:       "weka.classifiers.functions.SMOreg",
423:       "weka.classifiers.functions.supportVector.RegOptimizer",
424:       "weka.classifiers.functions.supportVector.RegSMO",
425:       "weka.classifiers.functions.supportVector.RegSMOImproved",
426:       "weka.classifiers.functions.SGDText$Count",
427:       "weka.core.matrix.Matrix",
428:       "weka.classifiers.meta.MultiClassClassifier",
429:       "weka.classifiers.trees.RandomForest",
430:       "weka.core.AttributeStats",
431:       "weka.core.ChebyshevDistance"
432:     );
433:   }
434: }

[MASTER] 22:45:10.904 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
boolean boolean0 = true;
naiveBayesMultinomialText0.setLowercaseTokens(true);
naiveBayesMultinomialText0.setDebug(true);
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{M8Hp$");
naiveBayesMultinomialText0.m_norm = (-3491.0);
naiveBayesMultinomialText0.getStemmer();
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.getMinWordFrequency();
naiveBayesMultinomialText0.getCapabilities();
naiveBayesMultinomialText0.stemmerTipText();
Integer integer0 = new Integer((-84));
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.put(integer0, linkedHashMap1);
naiveBayesMultinomialText0.periodicPruningTipText();
naiveBayesMultinomialText0.LNormTipText();
naiveBayesMultinomialText0.getTokenizer();
PrincipalComponents principalComponents0 = new PrincipalComponents();
CoverTree coverTree0 = new CoverTree();
double[] doubleArray0 = new double[9];
doubleArray0[0] = (-3491.0);
doubleArray0[1] = 3.0;
doubleArray0[2] = (double) (-84);
doubleArray0[3] = 3.0;
doubleArray0[4] = (-3491.0);
doubleArray0[5] = 3.0;
doubleArray0[6] = 6.0;
doubleArray0[7] = 3.0;
doubleArray0[8] = (double) (-84);
SparseInstance sparseInstance0 = new SparseInstance((-3491.0), doubleArray0);
coverTree0.nearestNeighbour(sparseInstance0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1008/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 22:46:17.960 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6776854166666667% of time used, but only 51/157 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 14%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1008/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2396
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:49:20.787 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:49:20.792 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:49:20.793 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:49:21.369 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 22:49:21.974 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 22:49:21.976 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 22:49:23.894 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 22:49:23.934 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 22:49:23.935 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 22:49:23.935 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 22:49:23.936 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 22:49:23.936 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 22:49:23.937 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 22:49:23.938 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 22:49:23.938 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 22:49:24.023 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 22:49:24.039 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1008
* Starting evolution
[MASTER] 22:49:28.345 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
* Search finished after 126s and 39 generations, 28273 statements, best individual has fitness: 16160.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 56%
* Total number of goals: 1378
* Number of covered goals: 776
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 41%
* Total number of goals: 809
* Number of covered goals: 329
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 57%
* Total number of goals: 424
* Number of covered goals: 240
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 19%
* Total number of goals: 278
* Number of covered goals: 52
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 93%
* Total number of goals: 103
* Number of covered goals: 96
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 92%
* Total number of goals: 103
* Number of covered goals: 95
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 38%
* Total number of goals: 809
* Number of covered goals: 311
* Generated 107 tests with total length 1412
* Resulting test suite's coverage: 49% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 5%
* Compiling and checking tests
[MASTER] 22:56:47.554 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 22:56:47.933 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 22:56:47.933 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 22:56:48.829 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1008/107_weka/evosuite-tests
* Done!

* Computation finished
