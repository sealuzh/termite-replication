* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.jcvi.jillion.core.Range
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 7358
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:08:51.966 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:08:52.094 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 23:08:52.096 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToDoubleFunction
[MASTER] 23:08:52.096 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToIntFunction
[MASTER] 23:08:52.097 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToLongFunction
[MASTER] 23:08:52.237 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:08:52.238 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.Range
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1009
* Starting evolution
[MASTER] 23:09:22.310 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.parseRange(Ljava/lang/String;Lorg/jcvi/jillion/core/Range$CoordinateSystem;)Lorg/jcvi/jillion/core/Range;
[MASTER] 23:09:27.103 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 569: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:951 - ReplaceComparisonOperator >= -> ==
[MASTER] 23:09:27.103 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 578: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:956 - ReplaceComparisonOperator > -> !=
[MASTER] 23:09:27.103 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 597: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator - -> %
[MASTER] 23:10:44.255 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 954
[MASTER] 23:10:44.255 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 955
[MASTER] 23:10:44.255 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 956
[MASTER] 23:10:44.255 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 957
[MASTER] 23:10:44.255 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 958
[MASTER] 23:10:44.255 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 959
[MASTER] 23:10:44.255 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 960
[MASTER] 23:10:44.259 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 589: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator + -> %
[MASTER] 23:10:44.259 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 590: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator + -> -
[MASTER] 23:10:44.259 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 591: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator + -> *
[MASTER] 23:10:44.259 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 592: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator + -> /
[MASTER] 23:10:44.259 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 596: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator - -> +
[MASTER] 23:10:44.259 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 598: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator - -> *
[MASTER] 23:10:44.259 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 599: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator - -> /
[MASTER] 23:10:44.259 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 616: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:959 - ReplaceArithmeticOperator + -> %
[MASTER] 23:10:44.259 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 617: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:959 - ReplaceArithmeticOperator + -> -
[MASTER] 23:10:44.259 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 618: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:959 - ReplaceArithmeticOperator + -> *
[MASTER] 23:10:44.259 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 619: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:959 - ReplaceArithmeticOperator + -> /
[MASTER] 23:10:44.263 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: I61 Branch 62 IFGT L956 - false in context: org.jcvi.jillion.core.Range:split(J)Ljava/util/List;
[MASTER] 23:10:44.263 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: I38 Branch 61 IFGE L951 - true in context: org.jcvi.jillion.core.Range:split(J)Ljava/util/List;
[MASTER] 23:10:48.714 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 565: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:947 - ReplaceComparisonOperator >= -> >
* Search finished after 134s and 50 generations, 24230 statements, best individual has fitness: 8232.0
[MASTER] 23:11:10.579 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 16 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 67%
* Total number of goals: 632
* Number of covered goals: 423
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 69%
* Total number of goals: 426
* Number of covered goals: 294
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 52%
* Total number of goals: 802
* Number of covered goals: 421
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 77
* Number of covered goals: 39
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 37%
* Total number of goals: 107
* Number of covered goals: 40
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 37%
* Total number of goals: 107
* Number of covered goals: 40
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 68%
* Total number of goals: 426
* Number of covered goals: 291
* Generated 149 tests with total length 1065
* Resulting test suite's coverage: 60% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 27%
* Compiling and checking tests
[MASTER] 23:16:16.559 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.IndexOutOfBoundsException: given length -9223372036854775791 would make range [1481 - ? ] beyond max allowed end offset
[MASTER] 23:16:16.559 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
Range.of(1481L, (-9223372036854775791L));

[MASTER] 23:16:19.828 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 23:16:19.829 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, 9223372036854765811L, 9223372036854765811L);
List<Range> list0 = range0.split(9223372036854765811L);
List<Range> list1 = range0.complementFrom(list0);
assertTrue(list1.contains(range0));
assertFalse(range0.isEmpty());


[MASTER] 23:16:21.420 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 23:16:21.421 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.Builder range_Builder0 = new Range.Builder(622L, 622L);
Range range0 = Range.ofLength(1L);
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
Range range1 = Range.of(range_CoordinateSystem0, (-2153L), 1L);
boolean boolean0 = range0.isSubRangeOf(range1);
assertFalse(boolean0);


[MASTER] 23:16:23.144 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<875> but was:<1>
[MASTER] 23:16:23.144 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.Builder range_Builder0 = new Range.Builder(622L, 622L);
Range range0 = Range.ofLength(1L);
range0.split(2062L);
List<Range> list0 = range0.split(1L);
assertEquals(875, list0.size());
assertTrue(list0.contains(range0));

Range.Comparators.values();
long long0 = range0.getEnd();
assertEquals(874L, long0);


[MASTER] 23:16:23.287 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IndexOutOfBoundsException
[MASTER] 23:16:23.287 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Object object0 = new Object();
Range range0 = Range.ofLength(9223372036854765811L);
range0.split(9223372036854765811L);

[MASTER] 23:16:23.356 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 23:16:23.357 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, 9223372036854765811L, 9223372036854765811L);
range0.split(9223372036854765811L);
Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.SPACE_BASED;
Range range1 = Range.of(range_CoordinateSystem1, 9223372036854765811L, 9223372036854765811L);
boolean boolean0 = range1.endsBefore(range0);
assertFalse(boolean0);

List<Range> list0 = range1.complement(range0);
assertSame(range1, range0);
assertTrue(list0.contains(range1));


[MASTER] 23:16:24.316 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.ComparisonFailure: expected:<...7483647 .. 214748364[7] ]/0B> but was:<...7483647 .. 214748364[6] ]/0B>
[MASTER] 23:16:24.316 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Object object0 = new Object();
Range range0 = Range.of(range_CoordinateSystem0, 2147483647L, 2147483647L);
Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.ZERO_BASED;
range0.getLength();
String string0 = range0.toString(range_CoordinateSystem1);
assertEquals("[ 2147483647 .. 2147483647 ]/0B", string0);

Object object1 = new Object();
range0.equals(object1);
assertFalse(range0.isEmpty());


[MASTER] 23:16:25.793 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 23:16:25.793 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Object object0 = new Object();
Range range0 = Range.ofLength(2147483647L);
boolean boolean0 = range0.equals(object0);
assertFalse(boolean0);
assertTrue(range0.isEmpty());


[MASTER] 23:16:26.378 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 23:16:26.379 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, 9223372036854765811L, 9223372036854765811L);
List<Range> list0 = range0.split(9223372036854765811L);
assertTrue(list0.contains(range0));

List<Range> list1 = range0.complementFrom(list0);
assertFalse(range0.isEmpty());
assertTrue(list1.equals((Object)list0));


[MASTER] 23:16:26.519 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 23:16:26.519 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
Range range0 = Range.of(range_CoordinateSystem0, 9223372036854775625L, 9223372036854775625L);
List<Range> list0 = range0.split(9223372036854775625L);
List<Range> list1 = range0.complementFrom(list0);
assertFalse(list1.isEmpty());
assertFalse(list1.contains(range0));

Range range1 = Range.of(range_CoordinateSystem0, 9223372036854775625L, 9223372036854775625L);
boolean boolean0 = range1.endsBefore(range0);
assertFalse(boolean0);

boolean boolean1 = range0.equals(range1);
assertFalse(boolean1 == boolean0);


[MASTER] 23:16:30.060 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 23:16:30.061 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.ofLength(0L);
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
Range range1 = Range.of(range_CoordinateSystem0, 0L, 2147483647L);
Range.Builder range_Builder0 = new Range.Builder(2147483647L);
range_Builder0.contractEnd(0L);
boolean boolean0 = range0.equals((Object) null);
assertFalse(boolean0);

String string0 = range0.toString(range_CoordinateSystem0);
assertEquals("[ 1 .. 0 ]/RB", string0);

List<Range> list0 = range1.complement(range0);
range0.complementFrom(list0);
assertFalse(range1.isEmpty());

Range range2 = Range.ofLength(2147483647L);
assertTrue(range2.isEmpty());


[MASTER] 23:16:30.929 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 23:16:30.929 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, 9223372036854775625L, 9223372036854775625L);
List<Range> list0 = range0.split(9223372036854775625L);
List<Range> list1 = range0.complementFrom(list0);
assertTrue(list1.contains(range0));

Range range1 = Range.of(9223372036854775625L);
boolean boolean0 = range1.endsBefore(range0);
assertFalse(boolean0);

boolean boolean1 = range0.equals(range1);
assertTrue(boolean1);


[MASTER] 23:16:31.635 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 23:16:31.635 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, 9223372036854775625L, 9223372036854775625L);
List<Range> list0 = range0.split(9223372036854775625L);
List<Range> list1 = range0.complementFrom(list0);
range0.spliterator();
Range range1 = Range.of(9223372036854775625L);
range0.split(5359L);
range1.complementFrom(list1);
assertTrue(list1.contains(range0));

Range range2 = range1.intersection(range0);
assertTrue(range1.equals((Object)range0));
assertNotSame(range2, range1);
assertFalse(range2.isEmpty());


[MASTER] 23:16:31.777 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 23:16:31.777 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, 9223372036854775625L, 9223372036854775625L);
List<Range> list0 = range0.split(9223372036854775625L);
List<Range> list1 = range0.complementFrom(list0);
assertTrue(list1.contains(range0));

Range range1 = Range.of(9223372036854775625L);
boolean boolean0 = range1.endsBefore(range0);
assertFalse(boolean0);

boolean boolean1 = range0.equals(range1);
assertFalse(range0.isEmpty());
assertFalse(boolean1);


[MASTER] 23:16:31.916 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 23:16:31.917 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(39263L);
Range.of((-643L));
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
long long0 = range0.getEnd(range_CoordinateSystem0);
assertEquals(39264L, long0);

Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.ZERO_BASED;
range0.getEnd(range_CoordinateSystem1);
Range.CoordinateSystem range_CoordinateSystem2 = Range.CoordinateSystem.SPACE_BASED;
Range range1 = Range.of(range_CoordinateSystem2, (-9223372036854775808L), (-9223372036854775808L));
Range range2 = Range.of((-9223372036854775808L));
List<Range> list0 = range2.complement(range1);
assertFalse(list0.contains(range1));
assertFalse(list0.isEmpty());


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Range_ESTest' to /home/ubuntu/termite/rmosa/tests/s1009/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 7352
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:17:35.923 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:17:35.938 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:17:35.963 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 23:17:36.065 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1009
* Starting evolution
[MASTER] 23:18:07.367 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 23:18:07.367 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 23:18:09.774 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 23:18:27.841 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 123s and 122 generations, 139496 statements, best individual has fitness: 336.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 131
* Number of covered goals: 130
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 74
* Number of covered goals: 73
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 46
* Number of covered goals: 46
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 99%
* Total number of goals: 469
* Number of covered goals: 466
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 65%
* Total number of goals: 52
* Number of covered goals: 34
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 83%
* Total number of goals: 18
* Number of covered goals: 15
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 83%
* Total number of goals: 18
* Number of covered goals: 15
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 74
* Number of covered goals: 61
* Generated 90 tests with total length 631
* Resulting test suite's coverage: 95% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 68%
* Compiling and checking tests
[MASTER] 23:20:36.560 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 23:20:36.562 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DefaultNucleotideCodec defaultNucleotideCodec0 = DefaultNucleotideCodec.INSTANCE;
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range.of(range_CoordinateSystem0, 2L, (long) (byte)8);
byte[] byteArray0 = new byte[4];
byteArray0[0] = (byte)53;
defaultNucleotideCodec0.toString(byteArray0);

* Writing JUnit test case 'DefaultNucleotideCodec_ESTest' to /home/ubuntu/termite/rmosa/tests/s1009/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.jcvi.jillion.core.util.FileIterator
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.jcvi.jillion.assembly.consed.phd.PhdBuilder
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 7356
* Connecting to master process on port 7351
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:32:06.679 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:32:06.968 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:32:06.994 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 23:32:07.037 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.util.FileIterator
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 23:32:07.379 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 23:32:07.380 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 23:32:07.408 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 23:32:07.490 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:32:07.513 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:32:07.515 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
[MASTER] 23:32:07.756 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 23:32:07.757 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 23:32:07.759 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 23:32:07.759 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 23:32:07.767 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 23:32:07.768 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 23:32:07.774 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 23:32:07.780 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 23:32:07.785 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
* Using seed 1009
* Starting evolution
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.assembly.consed.phd.PhdBuilder
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1009
* Starting evolution
* Search finished after 122s and 380 generations, 167663 statements, best individual has fitness: 608.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 107
* Number of covered goals: 102
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 67
* Number of covered goals: 66
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 98%
* Total number of goals: 53
* Number of covered goals: 52
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 53%
* Total number of goals: 74
* Number of covered goals: 39
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 28
* Number of covered goals: 14
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 28
* Number of covered goals: 14
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 93%
* Total number of goals: 67
* Number of covered goals: 62
* Search finished after 121s and 540 generations, 76904 statements, best individual has fitness: 128.0
* Generated 32 tests with total length 265
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 93
* Number of covered goals: 88
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 27
* Number of covered goals: 26
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 100%
* Total number of goals: 47
* Number of covered goals: 47
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 16
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 27
* Number of covered goals: 26
* Generated 26 tests with total length 118
* Resulting test suite's coverage: 93% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 11%
* Compiling and checking tests
* Resulting test suite's mutation score: 52%
* Compiling and checking tests
* Writing JUnit test case 'FileIterator_ESTest' to /home/ubuntu/termite/rmosa/tests/s1009/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* Writing JUnit test case 'PhdBuilder_ESTest' to /home/ubuntu/termite/rmosa/tests/s1009/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
