* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10116
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10121
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 05:02:56.619 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 05:02:56.633 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 05:02:56.640 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 05:02:56.753 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 05:02:56.757 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 05:02:56.760 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1017
* Starting evolution
[MASTER] 05:03:02.701 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 05:03:02.718 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 05:03:02.724 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 05:03:05.559 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 05:03:06.200 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 05:03:06.205 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1017
* Starting evolution
[MASTER] 05:03:14.604 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 262
[MASTER] 05:03:14.604 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 263
[MASTER] 05:03:14.604 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 264
[MASTER] 05:03:14.604 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 265
[MASTER] 05:03:14.604 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 266
[MASTER] 05:03:14.604 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 267
[MASTER] 05:03:14.604 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 268
[MASTER] 05:03:14.604 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 270
[MASTER] 05:03:14.607 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;: Line 439
[MASTER] 05:03:14.607 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;: Line 440
[MASTER] 05:03:14.607 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;: Line 441
[MASTER] 05:03:14.611 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;: Line 972
[MASTER] 05:03:14.611 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;: Line 973
[MASTER] 05:03:14.611 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;: Line 974
[MASTER] 05:03:14.613 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: root-Branch
[MASTER] 05:03:14.613 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;: root-Branch
[MASTER] 05:03:14.613 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;: root-Branch
[MASTER] 05:03:14.614 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 8: weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;:263 - ReplaceConstant - William W. Cohen -> 
[MASTER] 05:03:14.614 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 9: weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;:264 - ReplaceConstant - Fast Effective Rule Induction -> 
[MASTER] 05:03:14.614 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 10: weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;:265 - ReplaceConstant - Twelfth International Conference on Machine Learning -> 
[MASTER] 05:03:14.614 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 11: weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;:266 - ReplaceConstant - 1995 -> 
[MASTER] 05:03:14.614 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 12: weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;:267 - ReplaceConstant - 115-123 -> 
[MASTER] 05:03:14.614 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 13: weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;:268 - ReplaceConstant - Morgan Kaufmann -> 
[MASTER] 05:03:14.615 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 180: weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;:439 - ReplaceConstant - 1 -> 0
[MASTER] 05:03:14.615 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 181: weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;:440 - ReplaceConstant - measureNumRules -> 
[MASTER] 05:03:14.617 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 891: weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;:973 - ReplaceVariable value -> cover
[MASTER] 05:03:14.617 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 892: weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;:973 - ReplaceVariable value -> accu
[MASTER] 05:03:14.617 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 893: weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;:973 - ReplaceVariable value -> accuRate
[MASTER] 05:03:14.617 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 894: weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;:973 - ReplaceVariable value -> maxInfoGain
[MASTER] 05:03:14.617 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 895: weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;:973 - InsertUnaryOp Negation
[MASTER] 05:03:14.618 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;:NonNull:weka.core.TechnicalInformation:hasAdditional()Z:False
[MASTER] 05:03:14.618 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;:NonNull
[MASTER] 05:03:14.618 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;
[MASTER] 05:03:14.618 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;
[MASTER] 05:03:14.618 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NominalAntd.copy()Ljava/lang/Object;
[MASTER] 05:03:14.619 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;
[MASTER] 05:03:14.619 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;
[MASTER] 05:03:14.620 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.NominalAntd.copy()Ljava/lang/Object;
[MASTER] 05:03:14.620 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: root-Branch in context: weka.classifiers.rules.JRip:getTechnicalInformation()Lweka/core/TechnicalInformation;
[MASTER] 05:03:14.620 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;: root-Branch in context: weka.classifiers.rules.JRip:enumerateMeasures()Ljava/util/Enumeration;
[MASTER] 05:03:14.621 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;: root-Branch in context: 
[MASTER] 05:03:18.103 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getDebug()Z: Line 590
[MASTER] 05:03:18.106 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getDebug()Z: root-Branch
[MASTER] 05:03:18.107 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 213: weka.classifiers.rules.JRip.getDebug()Z:590 - InsertUnaryOp Negation
[MASTER] 05:03:18.109 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.getDebug()Z:False
[MASTER] 05:03:18.109 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.getDebug()Z
[MASTER] 05:03:18.110 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.getDebug()Z
[MASTER] 05:03:18.115 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.getDebug()Z: root-Branch in context: weka.classifiers.rules.JRip:getDebug()Z
[MASTER] 05:04:22.931 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 123s and 135 generations, 79657 statements, best individual has fitness: 5336.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 68%
* Total number of goals: 370
* Number of covered goals: 250
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 54%
* Total number of goals: 242
* Number of covered goals: 131
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 60%
* Total number of goals: 713
* Number of covered goals: 429
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 46%
* Total number of goals: 72
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 54%
* Total number of goals: 242
* Number of covered goals: 130
* Generated 80 tests with total length 813
* Resulting test suite's coverage: 62% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 05:05:09.633 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 125s and 96 generations, 58188 statements, best individual has fitness: 12808.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 35%
* Total number of goals: 705
* Number of covered goals: 246
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 107
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 54%
* Total number of goals: 993
* Number of covered goals: 541
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 28%
* Total number of goals: 93
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 107
* Generated 68 tests with total length 556
* Resulting test suite's coverage: 42% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1017/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
[MASTER] 05:08:22.317 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 05:08:23.158 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 05:08:34.828 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 05:08:34.829 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Attribute attribute0 = new Attribute("");
arrayList0.add(attribute0);
Instances instances0 = new Instances("integer", arrayList0, 3);
Attribute attribute1 = new Attribute("relational", instances0);
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Capabilities.props");
attribute0.equals(evoSuiteFile0);
FileSystemHandling.appendStringToFile(evoSuiteFile0, "wT*ocox<J~`ClY,iN");
arrayList0.add(attribute1);
Discretize discretize0 = new Discretize("#C");
discretize0.setInputFormat(instances0);

[MASTER] 05:08:45.799 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 05:08:45.801 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Attribute attribute0 = new Attribute("&");
arrayList0.add(attribute0);
Instances instances0 = new Instances("WS1GmDP\"}{R(K|", arrayList0, 2);
Properties properties0 = new Properties();
ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
Attribute attribute1 = new Attribute("integer", instances0, protectedProperties0);
arrayList0.add(attribute1);
Instances instances1 = new Instances("numeric", arrayList0, 87);
Discretize discretize0 = new Discretize();
boolean boolean0 = discretize0.m_MakeBinary;
discretize0.setInputFormat(instances0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1017/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10119
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 05:10:48.280 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 05:10:48.284 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 05:10:48.285 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 05:10:48.332 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1017
* Starting evolution
[MASTER] 05:10:51.196 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 122s and 55 generations, 33987 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 17 tests with total length 158
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1017/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10119
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10122
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1017
* Starting evolution
[MASTER] 05:20:15.995 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 05:20:16.010 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 05:20:16.011 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 05:20:16.052 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1017
* Starting evolution
* Search finished after 126s and 80 generations, 55801 statements, best individual has fitness: 2992.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 217
* Number of covered goals: 188
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 65%
* Total number of goals: 428
* Number of covered goals: 278
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 87%
* Total number of goals: 260
* Number of covered goals: 225
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 65%
* Total number of goals: 428
* Number of covered goals: 278
* Generated 74 tests with total length 339
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 136s and 16 generations, 18664 statements, best individual has fitness: 3656.0
[MASTER] 05:22:39.928 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 22 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 93%
* Total number of goals: 647
* Number of covered goals: 601
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 88%
* Total number of goals: 441
* Number of covered goals: 387
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 85%
* Total number of goals: 678
* Number of covered goals: 579
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 38%
* Total number of goals: 244
* Number of covered goals: 92
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 90%
* Total number of goals: 124
* Number of covered goals: 112
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 90%
* Total number of goals: 124
* Number of covered goals: 112
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 441
* Number of covered goals: 361
* Generated 136 tests with total length 2791
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 76%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1017/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 05:28:18.326 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6770645833333333% of time used, but only 54/136 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
[MASTER] 05:29:46.877 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1017/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10121
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 05:30:29.329 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 05:30:29.330 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 05:30:29.332 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 05:30:29.421 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 05:30:29.439 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 05:30:29.469 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1017
* Starting evolution
[MASTER] 05:30:39.132 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 05:30:39.132 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 05:30:40.980 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 05:31:41.974 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 195: weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V:487 - ReplaceComparisonOperator <= -> ==
* Search finished after 124s and 113 generations, 63009 statements, best individual has fitness: 1936.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 338
* Number of covered goals: 291
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 79%
* Total number of goals: 194
* Number of covered goals: 153
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 89%
* Total number of goals: 476
* Number of covered goals: 422
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 52%
* Total number of goals: 112
* Number of covered goals: 58
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 77%
* Total number of goals: 194
* Number of covered goals: 150
* Generated 78 tests with total length 840
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 54%
* Compiling and checking tests
[MASTER] 05:36:50.280 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_14_1575610610240/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_14_1575610610240/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding.java]]
[MASTER] 05:36:50.280 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 05:36:50.280 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 05:36:50.285 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 05:36:50.286 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_14_1575610610240/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 05:36:50 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_14_tmp__ESTest extends NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=1.543056733112554
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
28:       String[] stringArray0 = new String[7];
29:       stringArray0[0] = "-stemmer";
30:       stringArray0[1] = "-stemmer";
31:       stringArray0[2] = "-stemmer";
32:       stringArray0[3] = "-stemmer";
33:       stringArray0[4] = "-stemmer";
34:       stringArray0[5] = "-P";
35:       stringArray0[6] = "-stemmer";
36:       try { 
37:         naiveBayesMultinomialText0.setOptions(stringArray0);
38:         fail("Expecting exception: NumberFormatException");
39:       
40:       } catch(NumberFormatException e) {
41:          //
42:          // For input string: \"-stemmer\"
43:          //
44:          verifyException("java.lang.NumberFormatException", e);
45:       }
46:   }
47: }
RegularFileObject[/tmp/EvoSuite_14_1575610610240/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 05:36:50 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.CostMatrix",
95:       "weka.classifiers.bayes.net.search.local.K2",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.core.neighboursearch.CoverTree$DistanceNode",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.core.neighboursearch.CoverTree$MyHeap",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.EnvironmentHandler",
109:       "weka.classifiers.functions.SGDText",
110:       "weka.core.RelationalLocator",
111:       "weka.core.Utils",
112:       "weka.core.CustomDisplayStringProvider",
113:       "weka.core.tokenizers.Tokenizer",
114:       "weka.core.NormalizableDistance",
115:       "weka.core.NoSupportForMissingValuesException",
116:       "weka.classifiers.UpdateableClassifier",
117:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
118:       "weka.core.TechnicalInformation$Type",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.AdditionalMeasureProducer",
129:       "weka.core.neighboursearch.balltrees.BallNode",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.ListOptions",
133:       "weka.core.matrix.Matrix",
134:       "weka.core.CapabilitiesHandler",
135:       "weka.core.AbstractInstance",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.classifiers.misc.InputMappedClassifier",
139:       "weka.classifiers.bayes.BayesNet",
140:       "weka.core.Version",
141:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
142:       "weka.core.Tag",
143:       "weka.core.neighboursearch.CoverTree",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.core.OptionHandler",
146:       "weka.core.WekaException",
147:       "weka.core.Range",
148:       "weka.classifiers.Classifier",
149:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
150:       "weka.core.Capabilities$Capability",
151:       "weka.core.SparseInstance",
152:       "org.pentaho.packageManagement.PackageManager",
153:       "weka.core.tokenizers.WordTokenizer",
154:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
155:       "weka.core.stemmers.SnowballStemmer",
156:       "weka.core.stemmers.LovinsStemmer",
157:       "weka.classifiers.Evaluation",
158:       "weka.classifiers.functions.supportVector.Kernel",
159:       "weka.core.WekaPackageManager",
160:       "weka.filters.SupervisedFilter",
161:       "weka.core.TechnicalInformationHandler",
162:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
163:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
164:       "weka.classifiers.meta.CostSensitiveClassifier",
165:       "weka.core.Option",
166:       "weka.core.neighboursearch.PerformanceStats",
167:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
168:       "weka.filters.Sourcable",
169:       "weka.core.Attribute",
170:       "weka.core.Stopwords",
171:       "weka.core.FastVector",
172:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
173:       "weka.core.UnassignedDatasetException",
174:       "weka.classifiers.RandomizableClassifier",
175:       "weka.classifiers.SingleClassifierEnhancer",
176:       "weka.core.RevisionUtils",
177:       "weka.core.Instance",
178:       "weka.estimators.Estimator",
179:       "weka.core.ProtectedProperties",
180:       "weka.core.StringLocator",
181:       "weka.classifiers.bayes.net.ADNode",
182:       "weka.core.AttributeStats",
183:       "weka.core.WeightedInstancesHandler",
184:       "weka.core.neighboursearch.NearestNeighbourSearch",
185:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
186:       "weka.core.TechnicalInformation$Field",
187:       "weka.core.neighboursearch.covertrees.Stack",
188:       "weka.core.Randomizable",
189:       "weka.classifiers.functions.SGD",
190:       "weka.core.EuclideanDistance",
191:       "weka.core.Instances",
192:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
193:       "weka.core.UnassignedClassException",
194:       "weka.classifiers.bayes.net.BIFReader",
195:       "weka.classifiers.bayes.net.ParentSet",
196:       "weka.classifiers.rules.ZeroR",
197:       "weka.core.stemmers.Stemming",
198:       "weka.core.TechnicalInformation",
199:       "weka.core.UnsupportedAttributeTypeException",
200:       "weka.classifiers.Sourcable",
201:       "weka.core.RevisionHandler",
202:       "weka.classifiers.evaluation.output.prediction.PlainText",
203:       "weka.core.neighboursearch.TreePerformanceStats",
204:       "weka.core.xml.XMLSerialization",
205:       "weka.classifiers.xml.XMLClassifier",
206:       "weka.filters.Filter",
207:       "weka.filters.supervised.attribute.Discretize"
208:     );
209:   } 
210: 
211:   private static void resetClasses() {
212:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding.class.getClassLoader()); 
213: 
214:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
215:       "weka.classifiers.AbstractClassifier",
216:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
218:       "weka.core.Capabilities$Capability",
219:       "weka.core.tokenizers.Tokenizer",
220:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
221:       "weka.core.tokenizers.WordTokenizer",
222:       "weka.core.stemmers.NullStemmer",
223:       "weka.classifiers.Evaluation",
224:       "weka.core.Utils",
225:       "weka.core.Option",
226:       "weka.core.AbstractInstance",
227:       "weka.core.SparseInstance",
228:       "weka.core.BinarySparseInstance",
229:       "weka.core.UnassignedDatasetException",
230:       "weka.filters.Filter",
231:       "weka.filters.supervised.attribute.Discretize",
232:       "weka.core.Range",
233:       "weka.core.TechnicalInformation",
234:       "weka.core.TechnicalInformation$Type",
235:       "weka.core.TechnicalInformation$Field",
236:       "weka.core.stemmers.SnowballStemmer",
237:       "weka.core.stemmers.Stemming",
238:       "weka.core.RevisionUtils",
239:       "weka.core.stemmers.LovinsStemmer",
240:       "weka.core.DenseInstance",
241:       "weka.classifiers.trees.RandomForest",
242:       "weka.classifiers.SingleClassifierEnhancer",
243:       "weka.classifiers.misc.InputMappedClassifier",
244:       "weka.classifiers.rules.ZeroR",
245:       "weka.classifiers.bayes.NaiveBayesMultinomial",
246:       "weka.core.Instances",
247:       "weka.core.Stopwords",
248:       "weka.attributeSelection.ASEvaluation",
249:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
250:       "weka.attributeSelection.PrincipalComponents",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.CoverTree",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.neighboursearch.KDTree",
256:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
257:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
258:       "weka.core.neighboursearch.balltrees.BallNode",
259:       "weka.core.converters.ArffLoader$ArffReader",
260:       "weka.core.tokenizers.NGramTokenizer",
261:       "weka.classifiers.RandomizableClassifier",
262:       "weka.core.Tag",
263:       "weka.classifiers.functions.SGDText",
264:       "weka.core.SelectedTag",
265:       "weka.core.Capabilities",
266:       "org.pentaho.packageManagement.PackageManager",
267:       "org.pentaho.packageManagement.DefaultPackageManager",
268:       "weka.core.Version",
269:       "weka.core.Environment",
270:       "weka.core.WekaPackageManager",
271:       "weka.classifiers.rules.DecisionTable",
272:       "weka.attributeSelection.ASSearch",
273:       "weka.attributeSelection.BestFirst",
274:       "weka.classifiers.misc.SerializedClassifier",
275:       "weka.core.TestInstances",
276:       "weka.core.SerializedObject",
277:       "weka.classifiers.IteratedSingleClassifierEnhancer",
278:       "weka.classifiers.meta.AdditiveRegression",
279:       "weka.core.stemmers.IteratedLovinsStemmer",
280:       "weka.core.ProtectedProperties",
281:       "weka.core.Attribute",
282:       "weka.core.UnassignedClassException",
283:       "weka.attributeSelection.InfoGainAttributeEval",
284:       "weka.filters.AllFilter",
285:       "weka.core.neighboursearch.LinearNNSearch",
286:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
287:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
288:       "weka.core.neighboursearch.BallTree",
289:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
290:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
291:       "weka.core.neighboursearch.balltrees.BallSplitter",
292:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
293:       "weka.classifiers.trees.RandomTree",
294:       "weka.classifiers.functions.supportVector.Kernel",
295:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
296:       "weka.attributeSelection.OneRAttributeEval",
297:       "weka.core.Javadoc",
298:       "weka.core.ClassDiscovery",
299:       "weka.core.ClassCache",
300:       "weka.core.AllJavadoc",
301:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
302:       "weka.classifiers.meta.CostSensitiveClassifier",
303:       "weka.classifiers.CostMatrix",
304:       "weka.classifiers.functions.SGD",
305:       "weka.classifiers.bayes.BayesNet",
306:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
307:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
308:       "weka.classifiers.bayes.net.search.local.K2",
309:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
310:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
311:       "weka.classifiers.MultipleClassifiersCombiner",
312:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
313:       "weka.classifiers.meta.MultiScheme",
314:       "weka.estimators.Estimator",
315:       "weka.estimators.DiscreteEstimator",
316:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
317:       "weka.classifiers.meta.LogitBoost",
318:       "weka.classifiers.trees.DecisionStump",
319:       "weka.estimators.KernelEstimator",
320:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
321:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
322:       "weka.core.FindWithCapabilities",
323:       "weka.core.SingleIndex",
324:       "weka.classifiers.functions.SimpleLinearRegression",
325:       "weka.classifiers.functions.Logistic",
326:       "weka.core.tokenizers.AlphabeticTokenizer",
327:       "weka.classifiers.meta.MultiClassClassifier",
328:       "weka.core.WekaEnumeration",
329:       "weka.core.Attribute$1",
330:       "weka.classifiers.rules.JRip",
331:       "weka.classifiers.bayes.NaiveBayes",
332:       "weka.attributeSelection.CorrelationAttributeEval",
333:       "weka.core.WekaException",
334:       "weka.core.UnsupportedAttributeTypeException",
335:       "weka.classifiers.functions.GaussianProcesses",
336:       "weka.classifiers.functions.supportVector.CachedKernel",
337:       "weka.classifiers.functions.supportVector.PolyKernel",
338:       "weka.classifiers.functions.SMO",
339:       "weka.classifiers.lazy.IBk",
340:       "weka.classifiers.bayes.net.BIFReader",
341:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
342:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
343:       "weka.classifiers.meta.Stacking",
344:       "weka.filters.SimpleFilter",
345:       "weka.filters.SimpleStreamFilter",
346:       "weka.filters.MultiFilter",
347:       "weka.classifiers.functions.MultilayerPerceptron",
348:       "weka.core.FastVector",
349:       "weka.filters.unsupervised.attribute.NominalToBinary",
350:       "weka.classifiers.functions.neural.SigmoidUnit",
351:       "weka.classifiers.functions.neural.LinearUnit",
352:       "weka.classifiers.meta.RegressionByDiscretization",
353:       "weka.filters.unsupervised.attribute.Discretize",
354:       "weka.classifiers.trees.J48",
355:       "weka.classifiers.trees.j48.ClassifierTree",
356:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
357:       "weka.classifiers.meta.ClassificationViaRegression",
358:       "weka.classifiers.trees.m5.M5Base",
359:       "weka.classifiers.trees.M5P",
360:       "weka.classifiers.functions.LinearRegression",
361:       "weka.attributeSelection.ReliefFAttributeEval",
362:       "weka.classifiers.rules.PART",
363:       "weka.classifiers.rules.part.MakeDecList",
364:       "weka.classifiers.functions.supportVector.Puk",
365:       "weka.core.matrix.Matrix",
366:       "weka.estimators.MahalanobisEstimator",
367:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
368:       "weka.classifiers.meta.FilteredClassifier",
369:       "weka.filters.supervised.attribute.AttributeSelection",
370:       "weka.attributeSelection.AttributeSelection",
371:       "weka.attributeSelection.CfsSubsetEval",
372:       "weka.attributeSelection.GreedyStepwise",
373:       "weka.classifiers.functions.VotedPerceptron",
374:       "weka.classifiers.rules.OneR",
375:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
376:       "weka.estimators.NormalEstimator",
377:       "weka.classifiers.meta.CVParameterSelection",
378:       "weka.core.MinkowskiDistance",
379:       "weka.attributeSelection.GainRatioAttributeEval",
380:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
381:       "weka.classifiers.functions.SimpleLogistic",
382:       "weka.core.neighboursearch.PerformanceStats",
383:       "weka.classifiers.meta.AdaBoostM1",
384:       "weka.attributeSelection.WrapperSubsetEval",
385:       "weka.classifiers.lazy.LWL",
386:       "weka.classifiers.meta.AttributeSelectedClassifier",
387:       "weka.classifiers.trees.REPTree",
388:       "weka.core.ListOptions",
389:       "weka.classifiers.trees.LMT",
390:       "weka.classifiers.meta.Vote",
391:       "weka.core.AttributeStats",
392:       "weka.classifiers.functions.SMOreg",
393:       "weka.classifiers.functions.supportVector.RegOptimizer",
394:       "weka.classifiers.functions.supportVector.RegSMO",
395:       "weka.classifiers.functions.supportVector.RegSMOImproved",
396:       "weka.core.SerializationHelper",
397:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
398:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
399:       "weka.classifiers.rules.M5Rules",
400:       "weka.classifiers.lazy.KStar",
401:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
402:       "weka.classifiers.functions.supportVector.RBFKernel"
403:     );
404:   }
405: }

[MASTER] 05:36:50.287 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
String[] stringArray0 = new String[7];
stringArray0[0] = "-stemmer";
stringArray0[1] = "-stemmer";
stringArray0[2] = "-stemmer";
stringArray0[3] = "-stemmer";
stringArray0[4] = "-stemmer";
stringArray0[5] = "-P";
stringArray0[6] = "-stemmer";
naiveBayesMultinomialText0.setOptions(stringArray0);

[MASTER] 05:36:50.433 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_17_1575610610391/weka/classifiers/bayes/NaiveBayesMultinomialText_17_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_17_1575610610391/weka/classifiers/bayes/NaiveBayesMultinomialText_17_tmp__ESTest_scaffolding.java]]
[MASTER] 05:36:50.433 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 05:36:50.433 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 05:36:50.434 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 05:36:50.435 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_17_1575610610391/weka/classifiers/bayes/NaiveBayesMultinomialText_17_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 05:36:50 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.testdata.EvoSuiteFile;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_17_tmp__ESTest extends NaiveBayesMultinomialText_17_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=2.2567576795645348
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
30:       String[] stringArray0 = new String[2];
31:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
32:       naiveBayesMultinomialText0.m_inputVector = null;
33:       stringArray0[0] = "-stemmer";
34:       stringArray0[1] = "-stemmer";
35:       try { 
36:         naiveBayesMultinomialText0.setOptions(stringArray0);
37:         fail("Expecting exception: ClassNotFoundException");
38:       
39:       } catch(ClassNotFoundException e) {
40:       }
41:   }
42: }
RegularFileObject[/tmp/EvoSuite_17_1575610610391/weka/classifiers/bayes/NaiveBayesMultinomialText_17_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 05:36:50 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_17_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_17_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.CostMatrix",
95:       "weka.classifiers.bayes.net.search.local.K2",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.core.neighboursearch.CoverTree$DistanceNode",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.core.neighboursearch.CoverTree$MyHeap",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.EnvironmentHandler",
109:       "weka.classifiers.functions.SGDText",
110:       "weka.core.RelationalLocator",
111:       "weka.core.Utils",
112:       "weka.core.CustomDisplayStringProvider",
113:       "weka.core.tokenizers.Tokenizer",
114:       "weka.core.NormalizableDistance",
115:       "weka.core.NoSupportForMissingValuesException",
116:       "weka.classifiers.UpdateableClassifier",
117:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
118:       "weka.core.TechnicalInformation$Type",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.AdditionalMeasureProducer",
129:       "weka.core.neighboursearch.balltrees.BallNode",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.ListOptions",
133:       "weka.core.matrix.Matrix",
134:       "weka.core.CapabilitiesHandler",
135:       "weka.core.AbstractInstance",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.classifiers.misc.InputMappedClassifier",
139:       "weka.classifiers.bayes.BayesNet",
140:       "weka.core.Version",
141:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
142:       "weka.core.Tag",
143:       "weka.core.neighboursearch.CoverTree",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.core.OptionHandler",
146:       "weka.core.WekaException",
147:       "weka.core.Range",
148:       "weka.classifiers.Classifier",
149:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
150:       "weka.core.Capabilities$Capability",
151:       "weka.core.SparseInstance",
152:       "org.pentaho.packageManagement.PackageManager",
153:       "weka.core.tokenizers.WordTokenizer",
154:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
155:       "weka.core.stemmers.SnowballStemmer",
156:       "weka.core.stemmers.LovinsStemmer",
157:       "weka.classifiers.Evaluation",
158:       "weka.classifiers.functions.supportVector.Kernel",
159:       "weka.core.WekaPackageManager",
160:       "weka.filters.SupervisedFilter",
161:       "weka.core.TechnicalInformationHandler",
162:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
163:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
164:       "weka.classifiers.meta.CostSensitiveClassifier",
165:       "weka.core.Option",
166:       "weka.core.neighboursearch.PerformanceStats",
167:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
168:       "weka.filters.Sourcable",
169:       "weka.core.Attribute",
170:       "weka.core.Stopwords",
171:       "weka.core.FastVector",
172:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
173:       "weka.core.UnassignedDatasetException",
174:       "weka.classifiers.RandomizableClassifier",
175:       "weka.classifiers.SingleClassifierEnhancer",
176:       "weka.core.RevisionUtils",
177:       "weka.core.Instance",
178:       "weka.estimators.Estimator",
179:       "weka.core.ProtectedProperties",
180:       "weka.core.StringLocator",
181:       "weka.classifiers.bayes.net.ADNode",
182:       "weka.core.AttributeStats",
183:       "weka.core.WeightedInstancesHandler",
184:       "weka.core.neighboursearch.NearestNeighbourSearch",
185:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
186:       "weka.core.TechnicalInformation$Field",
187:       "weka.core.neighboursearch.covertrees.Stack",
188:       "weka.core.Randomizable",
189:       "weka.classifiers.functions.SGD",
190:       "weka.core.EuclideanDistance",
191:       "weka.core.Instances",
192:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
193:       "weka.core.UnassignedClassException",
194:       "weka.classifiers.bayes.net.BIFReader",
195:       "weka.classifiers.bayes.net.ParentSet",
196:       "weka.classifiers.rules.ZeroR",
197:       "weka.core.stemmers.Stemming",
198:       "weka.core.TechnicalInformation",
199:       "weka.core.UnsupportedAttributeTypeException",
200:       "weka.classifiers.Sourcable",
201:       "weka.core.RevisionHandler",
202:       "weka.classifiers.evaluation.output.prediction.PlainText",
203:       "weka.core.neighboursearch.TreePerformanceStats",
204:       "weka.core.xml.XMLSerialization",
205:       "weka.classifiers.xml.XMLClassifier",
206:       "weka.filters.Filter",
207:       "weka.filters.supervised.attribute.Discretize"
208:     );
209:   } 
210: 
211:   private static void resetClasses() {
212:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_17_tmp__ESTest_scaffolding.class.getClassLoader()); 
213: 
214:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
215:       "weka.classifiers.AbstractClassifier",
216:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
218:       "weka.core.Capabilities$Capability",
219:       "weka.core.tokenizers.Tokenizer",
220:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
221:       "weka.core.tokenizers.WordTokenizer",
222:       "weka.core.stemmers.NullStemmer",
223:       "weka.classifiers.Evaluation",
224:       "weka.core.Utils",
225:       "weka.core.Option",
226:       "weka.core.AbstractInstance",
227:       "weka.core.SparseInstance",
228:       "weka.core.BinarySparseInstance",
229:       "weka.core.UnassignedDatasetException",
230:       "weka.filters.Filter",
231:       "weka.filters.supervised.attribute.Discretize",
232:       "weka.core.Range",
233:       "weka.core.TechnicalInformation",
234:       "weka.core.TechnicalInformation$Type",
235:       "weka.core.TechnicalInformation$Field",
236:       "weka.core.stemmers.SnowballStemmer",
237:       "weka.core.stemmers.Stemming",
238:       "weka.core.RevisionUtils",
239:       "weka.core.stemmers.LovinsStemmer",
240:       "weka.core.DenseInstance",
241:       "weka.classifiers.trees.RandomForest",
242:       "weka.classifiers.SingleClassifierEnhancer",
243:       "weka.classifiers.misc.InputMappedClassifier",
244:       "weka.classifiers.rules.ZeroR",
245:       "weka.classifiers.bayes.NaiveBayesMultinomial",
246:       "weka.core.Instances",
247:       "weka.core.Stopwords",
248:       "weka.attributeSelection.ASEvaluation",
249:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
250:       "weka.attributeSelection.PrincipalComponents",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.CoverTree",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.neighboursearch.KDTree",
256:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
257:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
258:       "weka.core.neighboursearch.balltrees.BallNode",
259:       "weka.core.converters.ArffLoader$ArffReader",
260:       "weka.core.tokenizers.NGramTokenizer",
261:       "weka.classifiers.RandomizableClassifier",
262:       "weka.core.Tag",
263:       "weka.classifiers.functions.SGDText",
264:       "weka.core.SelectedTag",
265:       "weka.core.Capabilities",
266:       "org.pentaho.packageManagement.PackageManager",
267:       "org.pentaho.packageManagement.DefaultPackageManager",
268:       "weka.core.Version",
269:       "weka.core.Environment",
270:       "weka.core.WekaPackageManager",
271:       "weka.classifiers.rules.DecisionTable",
272:       "weka.attributeSelection.ASSearch",
273:       "weka.attributeSelection.BestFirst",
274:       "weka.classifiers.misc.SerializedClassifier",
275:       "weka.core.TestInstances",
276:       "weka.core.SerializedObject",
277:       "weka.classifiers.IteratedSingleClassifierEnhancer",
278:       "weka.classifiers.meta.AdditiveRegression",
279:       "weka.core.stemmers.IteratedLovinsStemmer",
280:       "weka.core.ProtectedProperties",
281:       "weka.core.Attribute",
282:       "weka.core.UnassignedClassException",
283:       "weka.attributeSelection.InfoGainAttributeEval",
284:       "weka.filters.AllFilter",
285:       "weka.core.neighboursearch.LinearNNSearch",
286:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
287:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
288:       "weka.core.neighboursearch.BallTree",
289:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
290:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
291:       "weka.core.neighboursearch.balltrees.BallSplitter",
292:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
293:       "weka.classifiers.trees.RandomTree",
294:       "weka.classifiers.functions.supportVector.Kernel",
295:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
296:       "weka.attributeSelection.OneRAttributeEval",
297:       "weka.core.Javadoc",
298:       "weka.core.ClassDiscovery",
299:       "weka.core.ClassCache",
300:       "weka.core.AllJavadoc",
301:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
302:       "weka.classifiers.meta.CostSensitiveClassifier",
303:       "weka.classifiers.CostMatrix",
304:       "weka.classifiers.functions.SGD",
305:       "weka.classifiers.bayes.BayesNet",
306:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
307:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
308:       "weka.classifiers.bayes.net.search.local.K2",
309:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
310:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
311:       "weka.classifiers.MultipleClassifiersCombiner",
312:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
313:       "weka.classifiers.meta.MultiScheme",
314:       "weka.estimators.Estimator",
315:       "weka.estimators.DiscreteEstimator",
316:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
317:       "weka.classifiers.meta.LogitBoost",
318:       "weka.classifiers.trees.DecisionStump",
319:       "weka.estimators.KernelEstimator",
320:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
321:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
322:       "weka.core.FindWithCapabilities",
323:       "weka.core.SingleIndex",
324:       "weka.classifiers.functions.SimpleLinearRegression",
325:       "weka.classifiers.functions.Logistic",
326:       "weka.core.tokenizers.AlphabeticTokenizer",
327:       "weka.classifiers.meta.MultiClassClassifier",
328:       "weka.core.WekaEnumeration",
329:       "weka.core.Attribute$1",
330:       "weka.classifiers.rules.JRip",
331:       "weka.classifiers.bayes.NaiveBayes",
332:       "weka.attributeSelection.CorrelationAttributeEval",
333:       "weka.core.WekaException",
334:       "weka.core.UnsupportedAttributeTypeException",
335:       "weka.classifiers.functions.GaussianProcesses",
336:       "weka.classifiers.functions.supportVector.CachedKernel",
337:       "weka.classifiers.functions.supportVector.PolyKernel",
338:       "weka.classifiers.functions.SMO",
339:       "weka.classifiers.lazy.IBk",
340:       "weka.classifiers.bayes.net.BIFReader",
341:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
342:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
343:       "weka.classifiers.meta.Stacking",
344:       "weka.filters.SimpleFilter",
345:       "weka.filters.SimpleStreamFilter",
346:       "weka.filters.MultiFilter",
347:       "weka.classifiers.functions.MultilayerPerceptron",
348:       "weka.core.FastVector",
349:       "weka.filters.unsupervised.attribute.NominalToBinary",
350:       "weka.classifiers.functions.neural.SigmoidUnit",
351:       "weka.classifiers.functions.neural.LinearUnit",
352:       "weka.classifiers.meta.RegressionByDiscretization",
353:       "weka.filters.unsupervised.attribute.Discretize",
354:       "weka.classifiers.trees.J48",
355:       "weka.classifiers.trees.j48.ClassifierTree",
356:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
357:       "weka.classifiers.meta.ClassificationViaRegression",
358:       "weka.classifiers.trees.m5.M5Base",
359:       "weka.classifiers.trees.M5P",
360:       "weka.classifiers.functions.LinearRegression",
361:       "weka.attributeSelection.ReliefFAttributeEval",
362:       "weka.classifiers.rules.PART",
363:       "weka.classifiers.rules.part.MakeDecList",
364:       "weka.classifiers.functions.supportVector.Puk",
365:       "weka.core.matrix.Matrix",
366:       "weka.estimators.MahalanobisEstimator",
367:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
368:       "weka.classifiers.meta.FilteredClassifier",
369:       "weka.filters.supervised.attribute.AttributeSelection",
370:       "weka.attributeSelection.AttributeSelection",
371:       "weka.attributeSelection.CfsSubsetEval",
372:       "weka.attributeSelection.GreedyStepwise",
373:       "weka.classifiers.functions.VotedPerceptron",
374:       "weka.classifiers.rules.OneR",
375:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
376:       "weka.estimators.NormalEstimator",
377:       "weka.classifiers.meta.CVParameterSelection",
378:       "weka.core.MinkowskiDistance",
379:       "weka.attributeSelection.GainRatioAttributeEval",
380:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
381:       "weka.classifiers.functions.SimpleLogistic",
382:       "weka.core.neighboursearch.PerformanceStats",
383:       "weka.classifiers.meta.AdaBoostM1",
384:       "weka.attributeSelection.WrapperSubsetEval",
385:       "weka.classifiers.lazy.LWL",
386:       "weka.classifiers.meta.AttributeSelectedClassifier",
387:       "weka.classifiers.trees.REPTree",
388:       "weka.core.ListOptions",
389:       "weka.classifiers.trees.LMT",
390:       "weka.classifiers.meta.Vote",
391:       "weka.core.AttributeStats",
392:       "weka.classifiers.functions.SMOreg",
393:       "weka.classifiers.functions.supportVector.RegOptimizer",
394:       "weka.classifiers.functions.supportVector.RegSMO",
395:       "weka.classifiers.functions.supportVector.RegSMOImproved",
396:       "weka.core.SerializationHelper",
397:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
398:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
399:       "weka.classifiers.rules.M5Rules",
400:       "weka.classifiers.lazy.KStar",
401:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
402:       "weka.classifiers.functions.supportVector.RBFKernel"
403:     );
404:   }
405: }

[MASTER] 05:36:50.435 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
String[] stringArray0 = new String[2];
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.m_inputVector = null;
stringArray0[0] = "-stemmer";
stringArray0[1] = "-stemmer";
naiveBayesMultinomialText0.setOptions(stringArray0);

[MASTER] 05:36:51.419 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_41_1575610611370/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_41_1575610611370/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding.java]]
[MASTER] 05:36:51.419 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 05:36:51.419 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 05:36:51.419 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 05:36:51.419 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 05:36:51.419 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 05:36:51.420 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_41_1575610611370/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 05:36:51 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.testdata.EvoSuiteFile;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.DenseInstance;
20: import weka.core.Instance;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class NaiveBayesMultinomialText_41_tmp__ESTest extends NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding {
24: 
25:   /**
26:   //Test case number: 0
27:   /*Coverage entropy=2.6709087878625355
28:   */
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
33:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
34:       naiveBayesMultinomialText0.LNormTipText();
35:       FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
36:       naiveBayesMultinomialText0.m_lowercaseTokens = true;
37:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
38:       naiveBayesMultinomialText0.minWordFrequencyTipText();
39:       naiveBayesMultinomialText0.getTokenizer();
40:       naiveBayesMultinomialText0.getStemmer();
41:       naiveBayesMultinomialText0.getRevision();
42:       naiveBayesMultinomialText0.stopwordsTipText();
43:       naiveBayesMultinomialText0.getLowercaseTokens();
44:       double[] doubleArray0 = new double[5];
45:       doubleArray0[0] = 7.0;
46:       doubleArray0[1] = 7.0;
47:       doubleArray0[2] = 7.0;
48:       doubleArray0[3] = 7.0;
49:       doubleArray0[4] = 7.0;
50:       DenseInstance denseInstance0 = new DenseInstance(7.0, doubleArray0);
51:       DenseInstance denseInstance1 = new DenseInstance(denseInstance0);
52:       // Undeclared exception!
53:       try { 
54:         denseInstance0.equalHeaders(denseInstance1);
55:         fail("Expecting exception: RuntimeException");
56:       
57:       } catch(RuntimeException e) {
58:          //
59:          // DenseInstance doesn't have access to a dataset!
60:          //
61:          verifyException("weka.core.AbstractInstance", e);
62:       }
63:   }
64: }
RegularFileObject[/tmp/EvoSuite_41_1575610611370/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 05:36:51 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.CostMatrix",
95:       "weka.classifiers.bayes.net.search.local.K2",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.core.neighboursearch.CoverTree$DistanceNode",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.core.neighboursearch.CoverTree$MyHeap",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.EnvironmentHandler",
109:       "weka.classifiers.functions.SGDText",
110:       "weka.core.RelationalLocator",
111:       "weka.core.Utils",
112:       "weka.core.CustomDisplayStringProvider",
113:       "weka.core.tokenizers.Tokenizer",
114:       "weka.core.NormalizableDistance",
115:       "weka.core.NoSupportForMissingValuesException",
116:       "weka.classifiers.UpdateableClassifier",
117:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
118:       "weka.core.TechnicalInformation$Type",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.AdditionalMeasureProducer",
129:       "weka.core.neighboursearch.balltrees.BallNode",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.ListOptions",
133:       "weka.core.matrix.Matrix",
134:       "weka.core.CapabilitiesHandler",
135:       "weka.core.AbstractInstance",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.classifiers.misc.InputMappedClassifier",
139:       "weka.classifiers.bayes.BayesNet",
140:       "weka.core.Version",
141:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
142:       "weka.core.Tag",
143:       "weka.core.neighboursearch.CoverTree",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.core.OptionHandler",
146:       "weka.core.WekaException",
147:       "weka.core.Range",
148:       "weka.classifiers.Classifier",
149:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
150:       "weka.core.Capabilities$Capability",
151:       "weka.core.SparseInstance",
152:       "org.pentaho.packageManagement.PackageManager",
153:       "weka.core.tokenizers.WordTokenizer",
154:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
155:       "weka.core.stemmers.SnowballStemmer",
156:       "weka.core.stemmers.LovinsStemmer",
157:       "weka.classifiers.Evaluation",
158:       "weka.classifiers.functions.supportVector.Kernel",
159:       "weka.core.WekaPackageManager",
160:       "weka.filters.SupervisedFilter",
161:       "weka.core.TechnicalInformationHandler",
162:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
163:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
164:       "weka.classifiers.meta.CostSensitiveClassifier",
165:       "weka.core.Option",
166:       "weka.core.neighboursearch.PerformanceStats",
167:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
168:       "weka.filters.Sourcable",
169:       "weka.core.Attribute",
170:       "weka.core.Stopwords",
171:       "weka.core.FastVector",
172:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
173:       "weka.core.UnassignedDatasetException",
174:       "weka.classifiers.RandomizableClassifier",
175:       "weka.classifiers.SingleClassifierEnhancer",
176:       "weka.core.RevisionUtils",
177:       "weka.core.Instance",
178:       "weka.estimators.Estimator",
179:       "weka.core.ProtectedProperties",
180:       "weka.core.StringLocator",
181:       "weka.classifiers.bayes.net.ADNode",
182:       "weka.core.AttributeStats",
183:       "weka.core.WeightedInstancesHandler",
184:       "weka.core.neighboursearch.NearestNeighbourSearch",
185:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
186:       "weka.core.TechnicalInformation$Field",
187:       "weka.core.neighboursearch.covertrees.Stack",
188:       "weka.core.Randomizable",
189:       "weka.classifiers.functions.SGD",
190:       "weka.core.EuclideanDistance",
191:       "weka.core.Instances",
192:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
193:       "weka.core.UnassignedClassException",
194:       "weka.classifiers.bayes.net.BIFReader",
195:       "weka.classifiers.bayes.net.ParentSet",
196:       "weka.classifiers.rules.ZeroR",
197:       "weka.core.stemmers.Stemming",
198:       "weka.core.TechnicalInformation",
199:       "weka.core.UnsupportedAttributeTypeException",
200:       "weka.classifiers.Sourcable",
201:       "weka.core.RevisionHandler",
202:       "weka.classifiers.evaluation.output.prediction.PlainText",
203:       "weka.core.neighboursearch.TreePerformanceStats",
204:       "weka.core.xml.XMLSerialization",
205:       "weka.classifiers.xml.XMLClassifier",
206:       "weka.filters.Filter",
207:       "weka.filters.supervised.attribute.Discretize"
208:     );
209:   } 
210: 
211:   private static void resetClasses() {
212:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding.class.getClassLoader()); 
213: 
214:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
215:       "weka.classifiers.AbstractClassifier",
216:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
218:       "weka.core.Capabilities$Capability",
219:       "weka.core.tokenizers.Tokenizer",
220:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
221:       "weka.core.tokenizers.WordTokenizer",
222:       "weka.core.stemmers.NullStemmer",
223:       "weka.classifiers.Evaluation",
224:       "weka.core.Utils",
225:       "weka.core.Option",
226:       "weka.core.AbstractInstance",
227:       "weka.core.SparseInstance",
228:       "weka.core.BinarySparseInstance",
229:       "weka.core.UnassignedDatasetException",
230:       "weka.filters.Filter",
231:       "weka.filters.supervised.attribute.Discretize",
232:       "weka.core.Range",
233:       "weka.core.TechnicalInformation",
234:       "weka.core.TechnicalInformation$Type",
235:       "weka.core.TechnicalInformation$Field",
236:       "weka.core.stemmers.SnowballStemmer",
237:       "weka.core.stemmers.Stemming",
238:       "weka.core.RevisionUtils",
239:       "weka.core.stemmers.LovinsStemmer",
240:       "weka.core.DenseInstance",
241:       "weka.classifiers.trees.RandomForest",
242:       "weka.classifiers.SingleClassifierEnhancer",
243:       "weka.classifiers.misc.InputMappedClassifier",
244:       "weka.classifiers.rules.ZeroR",
245:       "weka.classifiers.bayes.NaiveBayesMultinomial",
246:       "weka.core.Instances",
247:       "weka.core.Stopwords",
248:       "weka.attributeSelection.ASEvaluation",
249:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
250:       "weka.attributeSelection.PrincipalComponents",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.CoverTree",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.neighboursearch.KDTree",
256:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
257:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
258:       "weka.core.neighboursearch.balltrees.BallNode",
259:       "weka.core.converters.ArffLoader$ArffReader",
260:       "weka.core.tokenizers.NGramTokenizer",
261:       "weka.classifiers.RandomizableClassifier",
262:       "weka.core.Tag",
263:       "weka.classifiers.functions.SGDText",
264:       "weka.core.SelectedTag",
265:       "weka.core.Capabilities",
266:       "org.pentaho.packageManagement.PackageManager",
267:       "org.pentaho.packageManagement.DefaultPackageManager",
268:       "weka.core.Version",
269:       "weka.core.Environment",
270:       "weka.core.WekaPackageManager",
271:       "weka.classifiers.rules.DecisionTable",
272:       "weka.attributeSelection.ASSearch",
273:       "weka.attributeSelection.BestFirst",
274:       "weka.classifiers.misc.SerializedClassifier",
275:       "weka.core.TestInstances",
276:       "weka.core.SerializedObject",
277:       "weka.classifiers.IteratedSingleClassifierEnhancer",
278:       "weka.classifiers.meta.AdditiveRegression",
279:       "weka.core.stemmers.IteratedLovinsStemmer",
280:       "weka.core.ProtectedProperties",
281:       "weka.core.Attribute",
282:       "weka.core.UnassignedClassException",
283:       "weka.attributeSelection.InfoGainAttributeEval",
284:       "weka.filters.AllFilter",
285:       "weka.core.neighboursearch.LinearNNSearch",
286:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
287:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
288:       "weka.core.neighboursearch.BallTree",
289:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
290:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
291:       "weka.core.neighboursearch.balltrees.BallSplitter",
292:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
293:       "weka.classifiers.trees.RandomTree",
294:       "weka.classifiers.functions.supportVector.Kernel",
295:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
296:       "weka.attributeSelection.OneRAttributeEval",
297:       "weka.core.Javadoc",
298:       "weka.core.ClassDiscovery",
299:       "weka.core.ClassCache",
300:       "weka.core.AllJavadoc",
301:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
302:       "weka.classifiers.meta.CostSensitiveClassifier",
303:       "weka.classifiers.CostMatrix",
304:       "weka.classifiers.functions.SGD",
305:       "weka.classifiers.bayes.BayesNet",
306:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
307:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
308:       "weka.classifiers.bayes.net.search.local.K2",
309:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
310:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
311:       "weka.classifiers.MultipleClassifiersCombiner",
312:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
313:       "weka.classifiers.meta.MultiScheme",
314:       "weka.estimators.Estimator",
315:       "weka.estimators.DiscreteEstimator",
316:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
317:       "weka.classifiers.meta.LogitBoost",
318:       "weka.classifiers.trees.DecisionStump",
319:       "weka.estimators.KernelEstimator",
320:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
321:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
322:       "weka.core.FindWithCapabilities",
323:       "weka.core.SingleIndex",
324:       "weka.classifiers.functions.SimpleLinearRegression",
325:       "weka.classifiers.functions.Logistic",
326:       "weka.core.tokenizers.AlphabeticTokenizer",
327:       "weka.classifiers.meta.MultiClassClassifier",
328:       "weka.core.WekaEnumeration",
329:       "weka.core.Attribute$1",
330:       "weka.classifiers.rules.JRip",
331:       "weka.classifiers.bayes.NaiveBayes",
332:       "weka.attributeSelection.CorrelationAttributeEval",
333:       "weka.core.WekaException",
334:       "weka.core.UnsupportedAttributeTypeException",
335:       "weka.classifiers.functions.GaussianProcesses",
336:       "weka.classifiers.functions.supportVector.CachedKernel",
337:       "weka.classifiers.functions.supportVector.PolyKernel",
338:       "weka.classifiers.functions.SMO",
339:       "weka.classifiers.lazy.IBk",
340:       "weka.classifiers.bayes.net.BIFReader",
341:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
342:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
343:       "weka.classifiers.meta.Stacking",
344:       "weka.filters.SimpleFilter",
345:       "weka.filters.SimpleStreamFilter",
346:       "weka.filters.MultiFilter",
347:       "weka.classifiers.functions.MultilayerPerceptron",
348:       "weka.core.FastVector",
349:       "weka.filters.unsupervised.attribute.NominalToBinary",
350:       "weka.classifiers.functions.neural.SigmoidUnit",
351:       "weka.classifiers.functions.neural.LinearUnit",
352:       "weka.classifiers.meta.RegressionByDiscretization",
353:       "weka.filters.unsupervised.attribute.Discretize",
354:       "weka.classifiers.trees.J48",
355:       "weka.classifiers.trees.j48.ClassifierTree",
356:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
357:       "weka.classifiers.meta.ClassificationViaRegression",
358:       "weka.classifiers.trees.m5.M5Base",
359:       "weka.classifiers.trees.M5P",
360:       "weka.classifiers.functions.LinearRegression",
361:       "weka.attributeSelection.ReliefFAttributeEval",
362:       "weka.classifiers.rules.PART",
363:       "weka.classifiers.rules.part.MakeDecList",
364:       "weka.classifiers.functions.supportVector.Puk",
365:       "weka.core.matrix.Matrix",
366:       "weka.estimators.MahalanobisEstimator",
367:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
368:       "weka.classifiers.meta.FilteredClassifier",
369:       "weka.filters.supervised.attribute.AttributeSelection",
370:       "weka.attributeSelection.AttributeSelection",
371:       "weka.attributeSelection.CfsSubsetEval",
372:       "weka.attributeSelection.GreedyStepwise",
373:       "weka.classifiers.functions.VotedPerceptron",
374:       "weka.classifiers.rules.OneR",
375:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
376:       "weka.estimators.NormalEstimator",
377:       "weka.classifiers.meta.CVParameterSelection",
378:       "weka.core.MinkowskiDistance",
379:       "weka.attributeSelection.GainRatioAttributeEval",
380:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
381:       "weka.classifiers.functions.SimpleLogistic",
382:       "weka.core.neighboursearch.PerformanceStats",
383:       "weka.classifiers.meta.AdaBoostM1",
384:       "weka.attributeSelection.WrapperSubsetEval",
385:       "weka.classifiers.lazy.LWL",
386:       "weka.classifiers.meta.AttributeSelectedClassifier",
387:       "weka.classifiers.trees.REPTree",
388:       "weka.core.ListOptions",
389:       "weka.classifiers.trees.LMT",
390:       "weka.classifiers.meta.Vote",
391:       "weka.core.AttributeStats",
392:       "weka.classifiers.functions.SMOreg",
393:       "weka.classifiers.functions.supportVector.RegOptimizer",
394:       "weka.classifiers.functions.supportVector.RegSMO",
395:       "weka.classifiers.functions.supportVector.RegSMOImproved",
396:       "weka.core.SerializationHelper",
397:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
398:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
399:       "weka.classifiers.rules.M5Rules",
400:       "weka.classifiers.lazy.KStar",
401:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
402:       "weka.classifiers.functions.supportVector.RBFKernel"
403:     );
404:   }
405: }

[MASTER] 05:36:51.421 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
naiveBayesMultinomialText0.LNormTipText();
FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
naiveBayesMultinomialText0.m_lowercaseTokens = true;
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText0.minWordFrequencyTipText();
naiveBayesMultinomialText0.getTokenizer();
naiveBayesMultinomialText0.getStemmer();
naiveBayesMultinomialText0.getRevision();
naiveBayesMultinomialText0.stopwordsTipText();
naiveBayesMultinomialText0.getLowercaseTokens();
double[] doubleArray0 = new double[5];
doubleArray0[0] = 7.0;
doubleArray0[1] = 7.0;
doubleArray0[2] = 7.0;
doubleArray0[3] = 7.0;
doubleArray0[4] = 7.0;
DenseInstance denseInstance0 = new DenseInstance(7.0, doubleArray0);
DenseInstance denseInstance1 = new DenseInstance(denseInstance0);
denseInstance0.equalHeaders(denseInstance1);

[MASTER] 05:36:51.469 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_42_1575610611422/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_42_1575610611422/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding.java]]
[MASTER] 05:36:51.469 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 05:36:51.469 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 05:36:51.470 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 05:36:51.470 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 05:36:51.470 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 05:36:51.471 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_42_1575610611422/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 05:36:51 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.io.File;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import java.util.Map;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.mock.java.io.MockFile;
17: import org.evosuite.runtime.testdata.EvoSuiteFile;
18: import org.evosuite.runtime.testdata.FileSystemHandling;
19: import org.junit.runner.RunWith;
20: import weka.classifiers.bayes.NaiveBayesMultinomialText;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class NaiveBayesMultinomialText_42_tmp__ESTest extends NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding {
24: 
25:   /**
26:   //Test case number: 0
27:   /*Coverage entropy=2.2623477045221723
28:   */
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
33:       FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
34:       MockFile mockFile0 = new MockFile("j|0tO p[D%esi&9+#\"", "j|0tO p[D%esi&9+#\"");
35:       File file0 = MockFile.createTempFile("j|0tO p[D%esi&9+#\"", "j|0tO p[D%esi&9+#\"", (File) mockFile0);
36:       naiveBayesMultinomialText0.setStopwords(file0);
37:       naiveBayesMultinomialText0.minWordFrequencyTipText();
38:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
39:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
40:       naiveBayesMultinomialText0.globalInfo();
41:       FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
42:       naiveBayesMultinomialText0.globalInfo();
43:       naiveBayesMultinomialText0.getUseStopList();
44:       naiveBayesMultinomialText0.getMinWordFrequency();
45:       assertTrue(naiveBayesMultinomialText0.getUseStopList());
46:       
47:       double double0 = naiveBayesMultinomialText0.m_leplace;
48:       assertEquals(1.0, double0, 0.01);
49:   }
50: }
RegularFileObject[/tmp/EvoSuite_42_1575610611422/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 05:36:51 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.CostMatrix",
95:       "weka.classifiers.bayes.net.search.local.K2",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.core.neighboursearch.CoverTree$DistanceNode",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.core.neighboursearch.CoverTree$MyHeap",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.EnvironmentHandler",
109:       "weka.classifiers.functions.SGDText",
110:       "weka.core.RelationalLocator",
111:       "weka.core.Utils",
112:       "weka.core.CustomDisplayStringProvider",
113:       "weka.core.tokenizers.Tokenizer",
114:       "weka.core.NormalizableDistance",
115:       "weka.core.NoSupportForMissingValuesException",
116:       "weka.classifiers.UpdateableClassifier",
117:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
118:       "weka.core.TechnicalInformation$Type",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.AdditionalMeasureProducer",
129:       "weka.core.neighboursearch.balltrees.BallNode",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.ListOptions",
133:       "weka.core.matrix.Matrix",
134:       "weka.core.CapabilitiesHandler",
135:       "weka.core.AbstractInstance",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.classifiers.misc.InputMappedClassifier",
139:       "weka.classifiers.bayes.BayesNet",
140:       "weka.core.Version",
141:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
142:       "weka.core.Tag",
143:       "weka.core.neighboursearch.CoverTree",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.core.OptionHandler",
146:       "weka.core.WekaException",
147:       "weka.core.Range",
148:       "weka.classifiers.Classifier",
149:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
150:       "weka.core.Capabilities$Capability",
151:       "weka.core.SparseInstance",
152:       "org.pentaho.packageManagement.PackageManager",
153:       "weka.core.tokenizers.WordTokenizer",
154:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
155:       "weka.core.stemmers.SnowballStemmer",
156:       "weka.core.stemmers.LovinsStemmer",
157:       "weka.classifiers.Evaluation",
158:       "weka.classifiers.functions.supportVector.Kernel",
159:       "weka.core.WekaPackageManager",
160:       "weka.filters.SupervisedFilter",
161:       "weka.core.TechnicalInformationHandler",
162:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
163:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
164:       "weka.classifiers.meta.CostSensitiveClassifier",
165:       "weka.core.Option",
166:       "weka.core.neighboursearch.PerformanceStats",
167:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
168:       "weka.filters.Sourcable",
169:       "weka.core.Attribute",
170:       "weka.core.Stopwords",
171:       "weka.core.FastVector",
172:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
173:       "weka.core.UnassignedDatasetException",
174:       "weka.classifiers.RandomizableClassifier",
175:       "weka.classifiers.SingleClassifierEnhancer",
176:       "weka.core.RevisionUtils",
177:       "weka.core.Instance",
178:       "weka.estimators.Estimator",
179:       "weka.core.ProtectedProperties",
180:       "weka.core.StringLocator",
181:       "weka.classifiers.bayes.net.ADNode",
182:       "weka.core.AttributeStats",
183:       "weka.core.WeightedInstancesHandler",
184:       "weka.core.neighboursearch.NearestNeighbourSearch",
185:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
186:       "weka.core.TechnicalInformation$Field",
187:       "weka.core.neighboursearch.covertrees.Stack",
188:       "weka.core.Randomizable",
189:       "weka.classifiers.functions.SGD",
190:       "weka.core.EuclideanDistance",
191:       "weka.core.Instances",
192:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
193:       "weka.core.UnassignedClassException",
194:       "weka.classifiers.bayes.net.BIFReader",
195:       "weka.classifiers.bayes.net.ParentSet",
196:       "weka.classifiers.rules.ZeroR",
197:       "weka.core.stemmers.Stemming",
198:       "weka.core.TechnicalInformation",
199:       "weka.core.UnsupportedAttributeTypeException",
200:       "weka.classifiers.Sourcable",
201:       "weka.core.RevisionHandler",
202:       "weka.classifiers.evaluation.output.prediction.PlainText",
203:       "weka.core.neighboursearch.TreePerformanceStats",
204:       "weka.core.xml.XMLSerialization",
205:       "weka.classifiers.xml.XMLClassifier",
206:       "weka.filters.Filter",
207:       "weka.filters.supervised.attribute.Discretize"
208:     );
209:   } 
210: 
211:   private static void resetClasses() {
212:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding.class.getClassLoader()); 
213: 
214:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
215:       "weka.classifiers.AbstractClassifier",
216:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
218:       "weka.core.Capabilities$Capability",
219:       "weka.core.tokenizers.Tokenizer",
220:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
221:       "weka.core.tokenizers.WordTokenizer",
222:       "weka.core.stemmers.NullStemmer",
223:       "weka.classifiers.Evaluation",
224:       "weka.core.Utils",
225:       "weka.core.Option",
226:       "weka.core.AbstractInstance",
227:       "weka.core.SparseInstance",
228:       "weka.core.BinarySparseInstance",
229:       "weka.core.UnassignedDatasetException",
230:       "weka.filters.Filter",
231:       "weka.filters.supervised.attribute.Discretize",
232:       "weka.core.Range",
233:       "weka.core.TechnicalInformation",
234:       "weka.core.TechnicalInformation$Type",
235:       "weka.core.TechnicalInformation$Field",
236:       "weka.core.stemmers.SnowballStemmer",
237:       "weka.core.stemmers.Stemming",
238:       "weka.core.RevisionUtils",
239:       "weka.core.stemmers.LovinsStemmer",
240:       "weka.core.DenseInstance",
241:       "weka.classifiers.trees.RandomForest",
242:       "weka.classifiers.SingleClassifierEnhancer",
243:       "weka.classifiers.misc.InputMappedClassifier",
244:       "weka.classifiers.rules.ZeroR",
245:       "weka.classifiers.bayes.NaiveBayesMultinomial",
246:       "weka.core.Instances",
247:       "weka.core.Stopwords",
248:       "weka.attributeSelection.ASEvaluation",
249:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
250:       "weka.attributeSelection.PrincipalComponents",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.CoverTree",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.neighboursearch.KDTree",
256:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
257:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
258:       "weka.core.neighboursearch.balltrees.BallNode",
259:       "weka.core.converters.ArffLoader$ArffReader",
260:       "weka.core.tokenizers.NGramTokenizer",
261:       "weka.classifiers.RandomizableClassifier",
262:       "weka.core.Tag",
263:       "weka.classifiers.functions.SGDText",
264:       "weka.core.SelectedTag",
265:       "weka.core.Capabilities",
266:       "org.pentaho.packageManagement.PackageManager",
267:       "org.pentaho.packageManagement.DefaultPackageManager",
268:       "weka.core.Version",
269:       "weka.core.Environment",
270:       "weka.core.WekaPackageManager",
271:       "weka.classifiers.rules.DecisionTable",
272:       "weka.attributeSelection.ASSearch",
273:       "weka.attributeSelection.BestFirst",
274:       "weka.classifiers.misc.SerializedClassifier",
275:       "weka.core.TestInstances",
276:       "weka.core.SerializedObject",
277:       "weka.classifiers.IteratedSingleClassifierEnhancer",
278:       "weka.classifiers.meta.AdditiveRegression",
279:       "weka.core.stemmers.IteratedLovinsStemmer",
280:       "weka.core.ProtectedProperties",
281:       "weka.core.Attribute",
282:       "weka.core.UnassignedClassException",
283:       "weka.attributeSelection.InfoGainAttributeEval",
284:       "weka.filters.AllFilter",
285:       "weka.core.neighboursearch.LinearNNSearch",
286:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
287:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
288:       "weka.core.neighboursearch.BallTree",
289:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
290:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
291:       "weka.core.neighboursearch.balltrees.BallSplitter",
292:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
293:       "weka.classifiers.trees.RandomTree",
294:       "weka.classifiers.functions.supportVector.Kernel",
295:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
296:       "weka.attributeSelection.OneRAttributeEval",
297:       "weka.core.Javadoc",
298:       "weka.core.ClassDiscovery",
299:       "weka.core.ClassCache",
300:       "weka.core.AllJavadoc",
301:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
302:       "weka.classifiers.meta.CostSensitiveClassifier",
303:       "weka.classifiers.CostMatrix",
304:       "weka.classifiers.functions.SGD",
305:       "weka.classifiers.bayes.BayesNet",
306:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
307:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
308:       "weka.classifiers.bayes.net.search.local.K2",
309:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
310:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
311:       "weka.classifiers.MultipleClassifiersCombiner",
312:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
313:       "weka.classifiers.meta.MultiScheme",
314:       "weka.estimators.Estimator",
315:       "weka.estimators.DiscreteEstimator",
316:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
317:       "weka.classifiers.meta.LogitBoost",
318:       "weka.classifiers.trees.DecisionStump",
319:       "weka.estimators.KernelEstimator",
320:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
321:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
322:       "weka.core.FindWithCapabilities",
323:       "weka.core.SingleIndex",
324:       "weka.classifiers.functions.SimpleLinearRegression",
325:       "weka.classifiers.functions.Logistic",
326:       "weka.core.tokenizers.AlphabeticTokenizer",
327:       "weka.classifiers.meta.MultiClassClassifier",
328:       "weka.core.WekaEnumeration",
329:       "weka.core.Attribute$1",
330:       "weka.classifiers.rules.JRip",
331:       "weka.classifiers.bayes.NaiveBayes",
332:       "weka.attributeSelection.CorrelationAttributeEval",
333:       "weka.core.WekaException",
334:       "weka.core.UnsupportedAttributeTypeException",
335:       "weka.classifiers.functions.GaussianProcesses",
336:       "weka.classifiers.functions.supportVector.CachedKernel",
337:       "weka.classifiers.functions.supportVector.PolyKernel",
338:       "weka.classifiers.functions.SMO",
339:       "weka.classifiers.lazy.IBk",
340:       "weka.classifiers.bayes.net.BIFReader",
341:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
342:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
343:       "weka.classifiers.meta.Stacking",
344:       "weka.filters.SimpleFilter",
345:       "weka.filters.SimpleStreamFilter",
346:       "weka.filters.MultiFilter",
347:       "weka.classifiers.functions.MultilayerPerceptron",
348:       "weka.core.FastVector",
349:       "weka.filters.unsupervised.attribute.NominalToBinary",
350:       "weka.classifiers.functions.neural.SigmoidUnit",
351:       "weka.classifiers.functions.neural.LinearUnit",
352:       "weka.classifiers.meta.RegressionByDiscretization",
353:       "weka.filters.unsupervised.attribute.Discretize",
354:       "weka.classifiers.trees.J48",
355:       "weka.classifiers.trees.j48.ClassifierTree",
356:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
357:       "weka.classifiers.meta.ClassificationViaRegression",
358:       "weka.classifiers.trees.m5.M5Base",
359:       "weka.classifiers.trees.M5P",
360:       "weka.classifiers.functions.LinearRegression",
361:       "weka.attributeSelection.ReliefFAttributeEval",
362:       "weka.classifiers.rules.PART",
363:       "weka.classifiers.rules.part.MakeDecList",
364:       "weka.classifiers.functions.supportVector.Puk",
365:       "weka.core.matrix.Matrix",
366:       "weka.estimators.MahalanobisEstimator",
367:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
368:       "weka.classifiers.meta.FilteredClassifier",
369:       "weka.filters.supervised.attribute.AttributeSelection",
370:       "weka.attributeSelection.AttributeSelection",
371:       "weka.attributeSelection.CfsSubsetEval",
372:       "weka.attributeSelection.GreedyStepwise",
373:       "weka.classifiers.functions.VotedPerceptron",
374:       "weka.classifiers.rules.OneR",
375:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
376:       "weka.estimators.NormalEstimator",
377:       "weka.classifiers.meta.CVParameterSelection",
378:       "weka.core.MinkowskiDistance",
379:       "weka.attributeSelection.GainRatioAttributeEval",
380:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
381:       "weka.classifiers.functions.SimpleLogistic",
382:       "weka.core.neighboursearch.PerformanceStats",
383:       "weka.classifiers.meta.AdaBoostM1",
384:       "weka.attributeSelection.WrapperSubsetEval",
385:       "weka.classifiers.lazy.LWL",
386:       "weka.classifiers.meta.AttributeSelectedClassifier",
387:       "weka.classifiers.trees.REPTree",
388:       "weka.core.ListOptions",
389:       "weka.classifiers.trees.LMT",
390:       "weka.classifiers.meta.Vote",
391:       "weka.core.AttributeStats",
392:       "weka.classifiers.functions.SMOreg",
393:       "weka.classifiers.functions.supportVector.RegOptimizer",
394:       "weka.classifiers.functions.supportVector.RegSMO",
395:       "weka.classifiers.functions.supportVector.RegSMOImproved",
396:       "weka.core.SerializationHelper",
397:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
398:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
399:       "weka.classifiers.rules.M5Rules",
400:       "weka.classifiers.lazy.KStar",
401:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
402:       "weka.classifiers.functions.supportVector.RBFKernel"
403:     );
404:   }
405: }

[MASTER] 05:36:51.472 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
MockFile mockFile0 = new MockFile("j|0tO p[D%esi&9+#\"", "j|0tO p[D%esi&9+#\"");
File file0 = MockFile.createTempFile("j|0tO p[D%esi&9+#\"", "j|0tO p[D%esi&9+#\"", (File) mockFile0);
naiveBayesMultinomialText0.setStopwords(file0);
naiveBayesMultinomialText0.minWordFrequencyTipText();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
naiveBayesMultinomialText0.globalInfo();
FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
naiveBayesMultinomialText0.globalInfo();
naiveBayesMultinomialText0.getUseStopList();
naiveBayesMultinomialText0.getMinWordFrequency();
assertTrue(naiveBayesMultinomialText0.getUseStopList());

double double0 = naiveBayesMultinomialText0.m_leplace;
assertEquals(1.0, double0, 0.01);


[MASTER] 05:36:51.994 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_56_1575610611965/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_56_1575610611965/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding.java]]
[MASTER] 05:36:51.994 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 05:36:51.994 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 05:36:51.994 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 05:36:51.994 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 05:36:51.994 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 05:36:51.994 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 05:36:51.994 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 05:36:51.995 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_56_1575610611965/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 05:36:51 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.TestInstances;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_56_tmp__ESTest extends NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=1.543056733112554
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
29:       
30:       naiveBayesMultinomialText0.m_normalize = true;
31:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
32:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
33:       TestInstances testInstances0 = new TestInstances();
34:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
35:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = naiveBayesMultinomialText1.m_inputVector;
36:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = naiveBayesMultinomialText0.m_inputVector;
37:       naiveBayesMultinomialText0.globalInfo();
38:       boolean boolean0 = naiveBayesMultinomialText0.getUseStopList();
39:       assertFalse(boolean0);
40:   }
41: }
RegularFileObject[/tmp/EvoSuite_56_1575610611965/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 05:36:51 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.CostMatrix",
95:       "weka.classifiers.bayes.net.search.local.K2",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.core.neighboursearch.CoverTree$DistanceNode",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.core.neighboursearch.CoverTree$MyHeap",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.EnvironmentHandler",
109:       "weka.classifiers.functions.SGDText",
110:       "weka.core.RelationalLocator",
111:       "weka.core.Utils",
112:       "weka.core.CustomDisplayStringProvider",
113:       "weka.core.tokenizers.Tokenizer",
114:       "weka.core.NormalizableDistance",
115:       "weka.core.NoSupportForMissingValuesException",
116:       "weka.classifiers.UpdateableClassifier",
117:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
118:       "weka.core.TechnicalInformation$Type",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.AdditionalMeasureProducer",
129:       "weka.core.neighboursearch.balltrees.BallNode",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.ListOptions",
133:       "weka.core.matrix.Matrix",
134:       "weka.core.CapabilitiesHandler",
135:       "weka.core.AbstractInstance",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.classifiers.misc.InputMappedClassifier",
139:       "weka.classifiers.bayes.BayesNet",
140:       "weka.core.Version",
141:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
142:       "weka.core.Tag",
143:       "weka.core.neighboursearch.CoverTree",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.core.OptionHandler",
146:       "weka.core.WekaException",
147:       "weka.core.Range",
148:       "weka.classifiers.Classifier",
149:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
150:       "weka.core.Capabilities$Capability",
151:       "weka.core.SparseInstance",
152:       "org.pentaho.packageManagement.PackageManager",
153:       "weka.core.tokenizers.WordTokenizer",
154:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
155:       "weka.core.stemmers.SnowballStemmer",
156:       "weka.core.stemmers.LovinsStemmer",
157:       "weka.classifiers.Evaluation",
158:       "weka.classifiers.functions.supportVector.Kernel",
159:       "weka.core.WekaPackageManager",
160:       "weka.filters.SupervisedFilter",
161:       "weka.core.TechnicalInformationHandler",
162:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
163:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
164:       "weka.classifiers.meta.CostSensitiveClassifier",
165:       "weka.core.Option",
166:       "weka.core.neighboursearch.PerformanceStats",
167:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
168:       "weka.filters.Sourcable",
169:       "weka.core.Attribute",
170:       "weka.core.Stopwords",
171:       "weka.core.FastVector",
172:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
173:       "weka.core.UnassignedDatasetException",
174:       "weka.classifiers.RandomizableClassifier",
175:       "weka.classifiers.SingleClassifierEnhancer",
176:       "weka.core.RevisionUtils",
177:       "weka.core.Instance",
178:       "weka.estimators.Estimator",
179:       "weka.core.ProtectedProperties",
180:       "weka.core.StringLocator",
181:       "weka.classifiers.bayes.net.ADNode",
182:       "weka.core.AttributeStats",
183:       "weka.core.WeightedInstancesHandler",
184:       "weka.core.neighboursearch.NearestNeighbourSearch",
185:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
186:       "weka.core.TechnicalInformation$Field",
187:       "weka.core.neighboursearch.covertrees.Stack",
188:       "weka.core.Randomizable",
189:       "weka.classifiers.functions.SGD",
190:       "weka.core.EuclideanDistance",
191:       "weka.core.Instances",
192:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
193:       "weka.core.UnassignedClassException",
194:       "weka.classifiers.bayes.net.BIFReader",
195:       "weka.classifiers.bayes.net.ParentSet",
196:       "weka.classifiers.rules.ZeroR",
197:       "weka.core.stemmers.Stemming",
198:       "weka.core.TechnicalInformation",
199:       "weka.core.UnsupportedAttributeTypeException",
200:       "weka.classifiers.Sourcable",
201:       "weka.core.RevisionHandler",
202:       "weka.classifiers.evaluation.output.prediction.PlainText",
203:       "weka.core.neighboursearch.TreePerformanceStats",
204:       "weka.core.xml.XMLSerialization",
205:       "weka.classifiers.xml.XMLClassifier",
206:       "weka.filters.Filter",
207:       "weka.filters.supervised.attribute.Discretize"
208:     );
209:   } 
210: 
211:   private static void resetClasses() {
212:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding.class.getClassLoader()); 
213: 
214:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
215:       "weka.classifiers.AbstractClassifier",
216:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
218:       "weka.core.Capabilities$Capability",
219:       "weka.core.tokenizers.Tokenizer",
220:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
221:       "weka.core.tokenizers.WordTokenizer",
222:       "weka.core.stemmers.NullStemmer",
223:       "weka.classifiers.Evaluation",
224:       "weka.core.Utils",
225:       "weka.core.Option",
226:       "weka.core.AbstractInstance",
227:       "weka.core.SparseInstance",
228:       "weka.core.BinarySparseInstance",
229:       "weka.core.UnassignedDatasetException",
230:       "weka.filters.Filter",
231:       "weka.filters.supervised.attribute.Discretize",
232:       "weka.core.Range",
233:       "weka.core.TechnicalInformation",
234:       "weka.core.TechnicalInformation$Type",
235:       "weka.core.TechnicalInformation$Field",
236:       "weka.core.stemmers.SnowballStemmer",
237:       "weka.core.stemmers.Stemming",
238:       "weka.core.RevisionUtils",
239:       "weka.core.stemmers.LovinsStemmer",
240:       "weka.core.DenseInstance",
241:       "weka.classifiers.trees.RandomForest",
242:       "weka.classifiers.SingleClassifierEnhancer",
243:       "weka.classifiers.misc.InputMappedClassifier",
244:       "weka.classifiers.rules.ZeroR",
245:       "weka.classifiers.bayes.NaiveBayesMultinomial",
246:       "weka.core.Instances",
247:       "weka.core.Stopwords",
248:       "weka.attributeSelection.ASEvaluation",
249:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
250:       "weka.attributeSelection.PrincipalComponents",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.CoverTree",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.neighboursearch.KDTree",
256:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
257:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
258:       "weka.core.neighboursearch.balltrees.BallNode",
259:       "weka.core.converters.ArffLoader$ArffReader",
260:       "weka.core.tokenizers.NGramTokenizer",
261:       "weka.classifiers.RandomizableClassifier",
262:       "weka.core.Tag",
263:       "weka.classifiers.functions.SGDText",
264:       "weka.core.SelectedTag",
265:       "weka.core.Capabilities",
266:       "org.pentaho.packageManagement.PackageManager",
267:       "org.pentaho.packageManagement.DefaultPackageManager",
268:       "weka.core.Version",
269:       "weka.core.Environment",
270:       "weka.core.WekaPackageManager",
271:       "weka.classifiers.rules.DecisionTable",
272:       "weka.attributeSelection.ASSearch",
273:       "weka.attributeSelection.BestFirst",
274:       "weka.classifiers.misc.SerializedClassifier",
275:       "weka.core.TestInstances",
276:       "weka.core.SerializedObject",
277:       "weka.classifiers.IteratedSingleClassifierEnhancer",
278:       "weka.classifiers.meta.AdditiveRegression",
279:       "weka.core.stemmers.IteratedLovinsStemmer",
280:       "weka.core.ProtectedProperties",
281:       "weka.core.Attribute",
282:       "weka.core.UnassignedClassException",
283:       "weka.attributeSelection.InfoGainAttributeEval",
284:       "weka.filters.AllFilter",
285:       "weka.core.neighboursearch.LinearNNSearch",
286:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
287:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
288:       "weka.core.neighboursearch.BallTree",
289:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
290:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
291:       "weka.core.neighboursearch.balltrees.BallSplitter",
292:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
293:       "weka.classifiers.trees.RandomTree",
294:       "weka.classifiers.functions.supportVector.Kernel",
295:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
296:       "weka.attributeSelection.OneRAttributeEval",
297:       "weka.core.Javadoc",
298:       "weka.core.ClassDiscovery",
299:       "weka.core.ClassCache",
300:       "weka.core.AllJavadoc",
301:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
302:       "weka.classifiers.meta.CostSensitiveClassifier",
303:       "weka.classifiers.CostMatrix",
304:       "weka.classifiers.functions.SGD",
305:       "weka.classifiers.bayes.BayesNet",
306:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
307:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
308:       "weka.classifiers.bayes.net.search.local.K2",
309:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
310:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
311:       "weka.classifiers.MultipleClassifiersCombiner",
312:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
313:       "weka.classifiers.meta.MultiScheme",
314:       "weka.estimators.Estimator",
315:       "weka.estimators.DiscreteEstimator",
316:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
317:       "weka.classifiers.meta.LogitBoost",
318:       "weka.classifiers.trees.DecisionStump",
319:       "weka.estimators.KernelEstimator",
320:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
321:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
322:       "weka.core.FindWithCapabilities",
323:       "weka.core.SingleIndex",
324:       "weka.classifiers.functions.SimpleLinearRegression",
325:       "weka.classifiers.functions.Logistic",
326:       "weka.core.tokenizers.AlphabeticTokenizer",
327:       "weka.classifiers.meta.MultiClassClassifier",
328:       "weka.core.WekaEnumeration",
329:       "weka.core.Attribute$1",
330:       "weka.classifiers.rules.JRip",
331:       "weka.classifiers.bayes.NaiveBayes",
332:       "weka.attributeSelection.CorrelationAttributeEval",
333:       "weka.core.WekaException",
334:       "weka.core.UnsupportedAttributeTypeException",
335:       "weka.classifiers.functions.GaussianProcesses",
336:       "weka.classifiers.functions.supportVector.CachedKernel",
337:       "weka.classifiers.functions.supportVector.PolyKernel",
338:       "weka.classifiers.functions.SMO",
339:       "weka.classifiers.lazy.IBk",
340:       "weka.classifiers.bayes.net.BIFReader",
341:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
342:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
343:       "weka.classifiers.meta.Stacking",
344:       "weka.filters.SimpleFilter",
345:       "weka.filters.SimpleStreamFilter",
346:       "weka.filters.MultiFilter",
347:       "weka.classifiers.functions.MultilayerPerceptron",
348:       "weka.core.FastVector",
349:       "weka.filters.unsupervised.attribute.NominalToBinary",
350:       "weka.classifiers.functions.neural.SigmoidUnit",
351:       "weka.classifiers.functions.neural.LinearUnit",
352:       "weka.classifiers.meta.RegressionByDiscretization",
353:       "weka.filters.unsupervised.attribute.Discretize",
354:       "weka.classifiers.trees.J48",
355:       "weka.classifiers.trees.j48.ClassifierTree",
356:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
357:       "weka.classifiers.meta.ClassificationViaRegression",
358:       "weka.classifiers.trees.m5.M5Base",
359:       "weka.classifiers.trees.M5P",
360:       "weka.classifiers.functions.LinearRegression",
361:       "weka.attributeSelection.ReliefFAttributeEval",
362:       "weka.classifiers.rules.PART",
363:       "weka.classifiers.rules.part.MakeDecList",
364:       "weka.classifiers.functions.supportVector.Puk",
365:       "weka.core.matrix.Matrix",
366:       "weka.estimators.MahalanobisEstimator",
367:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
368:       "weka.classifiers.meta.FilteredClassifier",
369:       "weka.filters.supervised.attribute.AttributeSelection",
370:       "weka.attributeSelection.AttributeSelection",
371:       "weka.attributeSelection.CfsSubsetEval",
372:       "weka.attributeSelection.GreedyStepwise",
373:       "weka.classifiers.functions.VotedPerceptron",
374:       "weka.classifiers.rules.OneR",
375:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
376:       "weka.estimators.NormalEstimator",
377:       "weka.classifiers.meta.CVParameterSelection",
378:       "weka.core.MinkowskiDistance",
379:       "weka.attributeSelection.GainRatioAttributeEval",
380:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
381:       "weka.classifiers.functions.SimpleLogistic",
382:       "weka.core.neighboursearch.PerformanceStats",
383:       "weka.classifiers.meta.AdaBoostM1",
384:       "weka.attributeSelection.WrapperSubsetEval",
385:       "weka.classifiers.lazy.LWL",
386:       "weka.classifiers.meta.AttributeSelectedClassifier",
387:       "weka.classifiers.trees.REPTree",
388:       "weka.core.ListOptions",
389:       "weka.classifiers.trees.LMT",
390:       "weka.classifiers.meta.Vote",
391:       "weka.core.AttributeStats",
392:       "weka.classifiers.functions.SMOreg",
393:       "weka.classifiers.functions.supportVector.RegOptimizer",
394:       "weka.classifiers.functions.supportVector.RegSMO",
395:       "weka.classifiers.functions.supportVector.RegSMOImproved",
396:       "weka.core.SerializationHelper",
397:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
398:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
399:       "weka.classifiers.rules.M5Rules",
400:       "weka.classifiers.lazy.KStar",
401:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
402:       "weka.classifiers.functions.supportVector.RBFKernel"
403:     );
404:   }
405: }

[MASTER] 05:36:51.995 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());

naiveBayesMultinomialText0.m_normalize = true;
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
TestInstances testInstances0 = new TestInstances();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = naiveBayesMultinomialText1.m_inputVector;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.globalInfo();
boolean boolean0 = naiveBayesMultinomialText0.getUseStopList();
assertFalse(boolean0);


[MASTER] 05:36:55.476 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 05:36:55.569 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1017/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10116
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 05:38:24.454 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 05:38:24.458 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 05:38:24.460 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 05:38:25.428 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 05:38:26.619 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 05:38:26.629 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 05:38:30.221 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 05:38:30.256 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 05:38:30.256 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 05:38:30.256 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 05:38:30.257 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 05:38:30.258 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 05:38:30.258 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 05:38:30.259 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 05:38:30.261 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 05:38:30.404 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 05:38:30.434 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1017
* Starting evolution
[MASTER] 05:39:10.101 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 05:40:18.869 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 127s and 42 generations, 25782 statements, best individual has fitness: 16192.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 55%
* Total number of goals: 1378
* Number of covered goals: 763
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 41%
* Total number of goals: 809
* Number of covered goals: 331
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 40
* Number of covered goals: 40
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 57%
* Total number of goals: 424
* Number of covered goals: 242
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 19%
* Total number of goals: 278
* Number of covered goals: 53
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 94%
* Total number of goals: 103
* Number of covered goals: 97
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 92%
* Total number of goals: 103
* Number of covered goals: 95
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 39%
* Total number of goals: 809
* Number of covered goals: 313
* Generated 119 tests with total length 1467
* Resulting test suite's coverage: 49% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 7%
* Compiling and checking tests
[MASTER] 05:46:38.822 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 05:46:39.824 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 05:46:39.824 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 05:46:40.776 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1017/107_weka/evosuite-tests
* Done!

* Computation finished
