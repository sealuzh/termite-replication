* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 20774
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:52:23.112 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:52:23.119 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:52:23.120 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:52:23.144 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1028
* Starting evolution
* Search finished after 143s and 30 generations, 23667 statements, best individual has fitness: 16968.0
[MASTER] 13:54:52.599 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 27 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 53%
* Total number of goals: 981
* Number of covered goals: 521
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 58%
* Total number of goals: 1707
* Number of covered goals: 995
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 47%
* Total number of goals: 434
* Number of covered goals: 205
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 4
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 58%
* Total number of goals: 1707
* Number of covered goals: 989
* Generated 140 tests with total length 1280
* Resulting test suite's coverage: 56% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
[MASTER] 13:56:34.082 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1627> but was:<1626>
[MASTER] 13:56:34.083 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("\"fas!7e");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1621, 1621);
javaCharStream0.readChar();
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.getNextToken();
assertEquals(1626, javaCharStream0.getBeginColumn());
assertEquals(1627, javaCharStream0.getEndColumn());


[MASTER] 13:56:34.484 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<0>
[MASTER] 13:56:34.485 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("8M");
StringReader stringReader1 = new StringReader("8M");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 44, 0);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
Token token0 = javaParserTokenManager0.getNextToken();
assertEquals(1, javaCharStream0.bufpos);
assertEquals("8M", token0.toString());


[MASTER] 13:56:34.765 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<0>
[MASTER] 13:56:34.766 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader(".ox$V");
StringReader stringReader1 = new StringReader("2UVw:h_#,t9t6{");
StringReader stringReader2 = new StringReader("~!F");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 84, 84);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
Token token0 = javaParserTokenManager0.getNextToken();
assertEquals(3, javaCharStream0.bufpos);
assertEquals("2UVw", token0.toString());


[MASTER] 13:56:34.816 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<0>
[MASTER] 13:56:34.817 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("\"fas!7e");
StringReader stringReader1 = new StringReader("");
StringReader stringReader2 = new StringReader("5i/p");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, Integer.MAX_VALUE, 103);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager0.MoreLexicalActions();
javaParserTokenManager0.getNextToken();
assertEquals(1, javaCharStream0.bufpos);
assertEquals(104, javaCharStream0.getColumn());


[MASTER] 13:56:37.464 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<2> but was:<1>
[MASTER] 13:56:37.464 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("+h ");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4, 18);
byte[] byteArray0 = new byte[5];
byteArray0[0] = (byte)48;
byteArray0[1] = (byte)48;
byteArray0[2] = (byte)86;
byteArray0[3] = (byte) (-119);
byteArray0[4] = (byte)113;
ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
Token token0 = javaParserTokenManager1.getNextToken();
assertEquals(2, javaCharStream1.bufpos);
assertEquals(74, token0.kind);


[MASTER] 13:56:38.487 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<0>
[MASTER] 13:56:38.487 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[1];
byteArray0[0] = (byte)18;
StringReader stringReader0 = new StringReader("k)0b<OzXz_");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2090, (byte)18);
JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
stringReader0.read();
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
Token token0 = javaParserTokenManager0.getNextToken();
Token token1 = Token.newToken(122);
token1.specialToken = token0;
javaParserTokenManager0.SkipLexicalActions(token1);
javaParserTokenManager0.getNextToken();
assertEquals(1, javaCharStream1.bufpos);
assertEquals(3, javaCharStream1.getColumn());


[MASTER] 13:56:38.850 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<4> but was:<0>
[MASTER] 13:56:38.850 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("40Ue@-M9pd");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 21, 39);
JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 76, 21);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
stringReader0.reset();
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.getNextToken();
Token token0 = javaParserTokenManager0.jjFillToken();
assertEquals(4, javaCharStream1.bufpos);
assertEquals(74, token0.kind);


[MASTER] 13:56:38.962 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager but in org.junit.Assert.fail(Assert.java:88): java.lang.AssertionError: Expecting exception: Error
[MASTER] 13:56:38.963 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("\"fas!7e");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1621, 22);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
javaCharStream0.readChar();
javaCharStream0.readChar();
JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
stringReader0.reset();
JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager2.getNextToken();
javaParserTokenManager2.getNextToken();
javaParserTokenManager0.getNextToken();

[MASTER] 13:56:39.356 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<4> but was:<3>
[MASTER] 13:56:39.357 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[1];
byteArray0[0] = (byte)18;
StringReader stringReader0 = new StringReader("k)0b<OzXz_");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2090, (byte)18);
JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
stringReader0.read();
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
Token token0 = javaParserTokenManager0.getNextToken();
Token token1 = Token.newToken(122);
token1.image = "k)0b<OzXz_";
token1.specialToken = token0;
javaParserTokenManager0.SkipLexicalActions(token1);
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.TokenLexicalActions(token1);
assertEquals(4, javaCharStream1.getBeginColumn());
assertEquals(1, javaCharStream1.getEndLine());


* Writing JUnit test case 'JavaParserTokenManager_ESTest' to /home/ubuntu/termite/rmosa/tests/s1028/19_jmca/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.SimpleNode
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 20774
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:58:39.362 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:58:39.409 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:58:39.410 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:58:39.956 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.SimpleNode
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1028
* Starting evolution
[MASTER] 13:58:48.576 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.soops.CEN4010.JMCA.JParser.SimpleNode.dump(Ljava/lang/String;Ljava/io/Writer;)V: Line 148
[MASTER] 13:58:48.576 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.soops.CEN4010.JMCA.JParser.SimpleNode.dump(Ljava/lang/String;Ljava/io/Writer;)V: Line 152
[MASTER] 13:58:48.576 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.soops.CEN4010.JMCA.JParser.SimpleNode.dump(Ljava/lang/String;Ljava/io/Writer;)V: Line 153
[MASTER] 13:58:48.576 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.soops.CEN4010.JMCA.JParser.SimpleNode.dump(Ljava/lang/String;Ljava/io/Writer;)V: Line 154
[MASTER] 13:58:48.576 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.soops.CEN4010.JMCA.JParser.SimpleNode.dump(Ljava/lang/String;Ljava/io/Writer;)V: Line 155
[MASTER] 13:58:48.580 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch com.soops.CEN4010.JMCA.JParser.SimpleNode.dump(Ljava/lang/String;Ljava/io/Writer;)V: I231 Branch 26 IFNULL L154 - false in context: com.soops.CEN4010.JMCA.JParser.SimpleNode:dump(Ljava/lang/String;Ljava/io/Writer;)V
[MASTER] 13:58:48.580 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch com.soops.CEN4010.JMCA.JParser.SimpleNode.dump(Ljava/lang/String;Ljava/io/Writer;)V: I219 Branch 25 IF_ICMPGE L152 - false in context: com.soops.CEN4010.JMCA.JParser.SimpleNode:dump(Ljava/lang/String;Ljava/io/Writer;)V
[MASTER] 13:58:48.580 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch com.soops.CEN4010.JMCA.JParser.SimpleNode.dump(Ljava/lang/String;Ljava/io/Writer;)V: I187 Branch 23 IFLE L147 - false in context: com.soops.CEN4010.JMCA.JParser.SimpleNode:dump(Ljava/lang/String;Ljava/io/Writer;)V
[MASTER] 13:58:48.580 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch com.soops.CEN4010.JMCA.JParser.SimpleNode.dump(Ljava/lang/String;Ljava/io/Writer;)V: I183 Branch 22 IFNULL L147 - false in context: com.soops.CEN4010.JMCA.JParser.SimpleNode:dump(Ljava/lang/String;Ljava/io/Writer;)V
[MASTER] 13:58:48.580 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch com.soops.CEN4010.JMCA.JParser.SimpleNode.dump(Ljava/lang/String;Ljava/io/Writer;)V: I209 Branch 24 IFNULL L151 - false in context: com.soops.CEN4010.JMCA.JParser.SimpleNode:dump(Ljava/lang/String;Ljava/io/Writer;)V
* Search finished after 126s and 120 generations, 128657 statements, best individual has fitness: 184.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 62
* Number of covered goals: 62
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 67
* Number of covered goals: 66
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 121
* Number of covered goals: 109
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 47%
* Total number of goals: 17
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 99%
* Total number of goals: 67
* Number of covered goals: 66
* Generated 40 tests with total length 372
* Resulting test suite's coverage: 94% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 82%
* Compiling and checking tests
[MASTER] 14:01:33.241 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test22 -> class java.lang.StackOverflowError: null
[MASTER] 14:01:33.243 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 0;
SimpleNode simpleNode0 = new SimpleNode(0);
simpleNode0.jjtAddChild(simpleNode0, 0);
String string0 = "";
simpleNode0.jjtGetParent();
StringWriter stringWriter0 = new StringWriter();
StringWriter stringWriter1 = new StringWriter();
simpleNode0.dump("c=nn]`qwiWzc", stringWriter1);

* Writing JUnit test case 'SimpleNode_ESTest' to /home/ubuntu/termite/rmosa/tests/s1028/19_jmca/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaCharStream
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 20772
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaCharStream
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1028
* Starting evolution
[MASTER] 14:07:16.254 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] com.soops.CEN4010.JMCA.JParser.JavaCharStream.getColumn()I
[MASTER] 14:07:16.254 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] com.soops.CEN4010.JMCA.JParser.JavaCharStream.getBeginLine()I
[MASTER] 14:07:24.523 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] com.soops.CEN4010.JMCA.JParser.JavaCharStream.UpdateLineColumn(C)V
* Search finished after 130s and 42 generations, 25154 statements, best individual has fitness: 1816.0
[MASTER] 14:09:12.422 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 13 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 82%
* Total number of goals: 239
* Number of covered goals: 196
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 86%
* Total number of goals: 216
* Number of covered goals: 186
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 38
* Number of covered goals: 38
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 88%
* Total number of goals: 974
* Number of covered goals: 857
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 81%
* Total number of goals: 36
* Number of covered goals: 29
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 86%
* Total number of goals: 216
* Number of covered goals: 186
* Generated 146 tests with total length 838
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 37%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'JavaCharStream_ESTest' to /home/ubuntu/termite/rmosa/tests/s1028/19_jmca/evosuite-tests
* Done!

* Computation finished
