* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18042
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18044
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 12:06:44.049 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 12:06:44.055 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 12:06:44.056 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 12:06:44.062 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1026
* Starting evolution
[MASTER] 12:06:48.254 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 12:06:55.755 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 12:06:55.759 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 12:06:55.760 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 12:06:56.522 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 12:06:57.363 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 12:06:57.366 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 12:07:00.808 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 12:07:00.909 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 12:07:00.910 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 12:07:00.910 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 12:07:00.911 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 12:07:00.911 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 12:07:00.911 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 12:07:00.912 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 12:07:00.913 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 12:07:01.091 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 12:07:01.151 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1026
* Starting evolution
[MASTER] 12:07:07.839 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I142 Branch 187 IFEQ L1136 - false
[MASTER] 12:07:07.842 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I142 Branch 187 IFEQ L1136 - false in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
[MASTER] 12:07:09.070 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 12:07:59.043 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 12:08:19.024 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.evaluateModelOnce(DLweka/core/Instance;)V
* Search finished after 122s and 66 generations, 38937 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 14 tests with total length 150
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1026/107_weka/evosuite-tests
* Done!

* Computation finished
* Search finished after 127s and 50 generations, 29663 statements, best individual has fitness: 17576.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 47%
* Total number of goals: 1378
* Number of covered goals: 647
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 39%
* Total number of goals: 809
* Number of covered goals: 312
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 53
* Number of covered goals: 53
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 56%
* Total number of goals: 424
* Number of covered goals: 236
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 19%
* Total number of goals: 278
* Number of covered goals: 53
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 97%
* Total number of goals: 103
* Number of covered goals: 100
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 97%
* Total number of goals: 103
* Number of covered goals: 100
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 34%
* Total number of goals: 809
* Number of covered goals: 276
* Generated 125 tests with total length 1469
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 6%
* Compiling and checking tests
[MASTER] 12:14:57.188 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 12:14:57.499 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 12:14:57.500 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 12:14:58.895 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1026/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18041
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 12:16:03.634 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 12:16:03.642 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 12:16:03.644 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 12:16:03.728 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 12:16:03.782 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 12:16:03.783 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1026
* Starting evolution
[MASTER] 12:16:14.039 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 208
[MASTER] 12:16:14.039 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 209
[MASTER] 12:16:14.039 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 212
[MASTER] 12:16:14.039 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 213
[MASTER] 12:16:14.039 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 214
[MASTER] 12:16:14.039 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 215
[MASTER] 12:16:14.039 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 216
[MASTER] 12:16:14.039 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 218
[MASTER] 12:16:14.039 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 219
[MASTER] 12:16:14.039 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 222
[MASTER] 12:16:14.039 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 224
[MASTER] 12:16:14.042 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: root-Branch
[MASTER] 12:16:14.047 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1: weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;:222 - ReplaceConstant - 0 -> 1
[MASTER] 12:16:14.054 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;:NonNull:weka.core.Capabilities:getMinimumNumberInstances()I:Zero
[MASTER] 12:16:14.073 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;:NonNull:weka.core.Capabilities:hasDependencies()Z:False
[MASTER] 12:16:14.075 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;
[MASTER] 12:16:14.080 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;
[MASTER] 12:16:14.080 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getCapabilities()Lweka/core/Capabilities;
[MASTER] 12:16:46.004 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:Zero
[MASTER] 12:16:49.566 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 12:16:49.566 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 12:17:41.356 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 124s and 162 generations, 88372 statements, best individual has fitness: 2056.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 85%
* Total number of goals: 338
* Number of covered goals: 288
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 76%
* Total number of goals: 194
* Number of covered goals: 147
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 88%
* Total number of goals: 476
* Number of covered goals: 418
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 49%
* Total number of goals: 112
* Number of covered goals: 55
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 96%
* Total number of goals: 49
* Number of covered goals: 47
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 49
* Number of covered goals: 47
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 74%
* Total number of goals: 194
* Number of covered goals: 143
* Generated 80 tests with total length 775
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 52%
* Compiling and checking tests
[MASTER] 12:21:36.570 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_21_1575634896518/weka/classifiers/bayes/NaiveBayesMultinomialText_21_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_21_1575634896518/weka/classifiers/bayes/NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding.java]]
[MASTER] 12:21:36.570 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 12:21:36.570 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 12:21:36.574 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 12:21:36.574 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 12:21:36.574 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 12:21:36.574 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 12:21:36.574 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 12:21:36.574 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 12:21:36.575 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_21_1575634896518/weka/classifiers/bayes/NaiveBayesMultinomialText_21_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 12:21:36 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.classifiers.misc.InputMappedClassifier;
18: import weka.core.Instances;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_21_tmp__ESTest extends NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=1.5271837172395382
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
31:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
32:       naiveBayesMultinomialText0.setNormalizeDocLength(true);
33:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
34:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap1;
35:       naiveBayesMultinomialText0.getStemmer();
36:       InputMappedClassifier inputMappedClassifier0 = new InputMappedClassifier();
37:       try { 
38:         inputMappedClassifier0.getModelHeader((Instances) null);
39:         fail("Expecting exception: NullPointerException");
40:       
41:       } catch(NullPointerException e) {
42:          //
43:          // no message in exception (getMessage() returned null)
44:          //
45:          verifyException("weka.core.Instances", e);
46:       }
47:   }
48: }
RegularFileObject[/tmp/EvoSuite_21_1575634896518/weka/classifiers/bayes/NaiveBayesMultinomialText_21_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 12:21:36 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:     org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); 
60:   } 
61: 
62:   @After 
63:   public void doneWithTestCase(){ 
64:     threadStopper.killAndJoinClientThreads();
65:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
66:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
67:     resetClasses(); 
68:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
69:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
70:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
71:   } 
72: 
73:   public static void setSystemProperties() {
74:  
75:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
76:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
77:     java.lang.System.setProperty("java.awt.headless", "true"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:     java.lang.System.setProperty("user.country", "US"); 
80:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
81:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
82:     java.lang.System.setProperty("user.language", "en"); 
83:     java.lang.System.setProperty("user.name", "ubuntu"); 
84:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
85:   }
86: 
87:   private static void initializeClasses() {
88:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding.class.getClassLoader() ,
89:       "weka.core.Environment",
90:       "weka.core.TestInstances",
91:       "weka.filters.unsupervised.attribute.NominalToBinary",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.attributeSelection.SubsetEvaluator",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.attributeSelection.CfsSubsetEval",
102:       "weka.core.DenseInstance",
103:       "weka.classifiers.trees.J48",
104:       "weka.core.stemmers.Stemmer",
105:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.neighboursearch.CoverTree$MyHeap",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.trees.j48.C45ModelSelection",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.BinarySparseInstance",
124:       "weka.core.AttributeLocator",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.classifiers.functions.supportVector.CachedKernel",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.attributeSelection.BestFirst",
131:       "weka.classifiers.trees.j48.ModelSelection",
132:       "weka.core.AdditionalMeasureProducer",
133:       "org.pentaho.packageManagement.PackageManager$1",
134:       "weka.attributeSelection.GreedyStepwise",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.classifiers.ConditionalDensityEstimator",
138:       "weka.core.CapabilitiesHandler",
139:       "weka.attributeSelection.ASEvaluation",
140:       "weka.core.AbstractInstance",
141:       "weka.classifiers.meta.FilteredClassifier",
142:       "weka.core.SelectedTag",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.classifiers.misc.InputMappedClassifier",
145:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
146:       "weka.core.Version",
147:       "weka.attributeSelection.AttributeSelection",
148:       "weka.core.Tag",
149:       "weka.classifiers.trees.j48.BinC45ModelSelection",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.OptionHandler",
153:       "weka.core.WekaException",
154:       "weka.filters.supervised.attribute.AttributeSelection",
155:       "weka.filters.StreamableFilter",
156:       "weka.core.Range",
157:       "weka.core.PartitionGenerator",
158:       "weka.classifiers.Classifier",
159:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
160:       "weka.core.Capabilities$Capability",
161:       "weka.core.SparseInstance",
162:       "org.pentaho.packageManagement.PackageManager",
163:       "weka.core.tokenizers.WordTokenizer",
164:       "weka.classifiers.misc.SerializedClassifier",
165:       "weka.classifiers.trees.j48.ClassifierTree",
166:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
167:       "weka.core.stemmers.SnowballStemmer",
168:       "weka.classifiers.trees.j48.PruneableClassifierTree",
169:       "weka.classifiers.Evaluation",
170:       "weka.classifiers.functions.supportVector.Kernel",
171:       "weka.core.WekaPackageManager",
172:       "weka.attributeSelection.ASSearch",
173:       "weka.filters.SupervisedFilter",
174:       "weka.core.TechnicalInformationHandler",
175:       "weka.core.neighboursearch.LinearNNSearch",
176:       "weka.attributeSelection.StartSetHandler",
177:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
178:       "weka.core.Option",
179:       "weka.core.neighboursearch.PerformanceStats",
180:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
181:       "weka.filters.Sourcable",
182:       "weka.core.Attribute",
183:       "weka.core.Stopwords",
184:       "weka.core.tokenizers.AlphabeticTokenizer",
185:       "weka.core.FastVector",
186:       "weka.core.UnassignedDatasetException",
187:       "weka.attributeSelection.RankedOutputSearch",
188:       "weka.classifiers.SingleClassifierEnhancer",
189:       "weka.core.RevisionUtils",
190:       "weka.core.Instance",
191:       "weka.classifiers.functions.supportVector.PolyKernel",
192:       "weka.core.ProtectedProperties",
193:       "weka.classifiers.IntervalEstimator",
194:       "weka.core.StringLocator",
195:       "weka.core.Matchable",
196:       "weka.core.AttributeStats",
197:       "weka.core.WeightedInstancesHandler",
198:       "weka.core.neighboursearch.NearestNeighbourSearch",
199:       "weka.classifiers.functions.GaussianProcesses",
200:       "weka.core.neighboursearch.covertrees.Stack",
201:       "weka.filters.unsupervised.attribute.Remove",
202:       "weka.core.EuclideanDistance",
203:       "weka.core.Instances",
204:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
205:       "weka.classifiers.bayes.NaiveBayesMultinomial",
206:       "weka.filters.unsupervised.attribute.Normalize",
207:       "weka.core.UnassignedClassException",
208:       "weka.classifiers.rules.ZeroR",
209:       "weka.filters.unsupervised.attribute.Standardize",
210:       "weka.attributeSelection.Ranker",
211:       "weka.core.UnsupportedAttributeTypeException",
212:       "weka.core.TechnicalInformation",
213:       "weka.classifiers.Sourcable",
214:       "weka.core.RevisionHandler",
215:       "weka.classifiers.evaluation.output.prediction.PlainText",
216:       "weka.core.neighboursearch.TreePerformanceStats",
217:       "weka.core.xml.XMLSerialization",
218:       "weka.classifiers.xml.XMLClassifier",
219:       "weka.filters.Filter",
220:       "weka.classifiers.lazy.IBk",
221:       "weka.filters.supervised.attribute.Discretize"
222:     );
223:   } 
224: 
225:   private static void resetClasses() {
226:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding.class.getClassLoader()); 
227: 
228:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
229:       "weka.classifiers.AbstractClassifier",
230:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
231:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
232:       "weka.core.Capabilities$Capability",
233:       "weka.core.tokenizers.Tokenizer",
234:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
235:       "weka.core.tokenizers.WordTokenizer",
236:       "weka.core.stemmers.NullStemmer",
237:       "weka.core.AbstractInstance",
238:       "weka.core.SparseInstance",
239:       "weka.core.BinarySparseInstance",
240:       "weka.core.UnassignedDatasetException",
241:       "weka.classifiers.Evaluation",
242:       "weka.core.Utils",
243:       "weka.core.Option",
244:       "weka.core.RevisionUtils",
245:       "weka.core.Tag",
246:       "weka.classifiers.lazy.IBk",
247:       "weka.core.neighboursearch.NearestNeighbourSearch",
248:       "weka.core.neighboursearch.LinearNNSearch",
249:       "weka.core.NormalizableDistance",
250:       "weka.core.EuclideanDistance",
251:       "weka.core.Range",
252:       "weka.core.Capabilities",
253:       "org.pentaho.packageManagement.PackageManager",
254:       "org.pentaho.packageManagement.DefaultPackageManager",
255:       "weka.core.Version",
256:       "weka.core.Environment",
257:       "weka.core.WekaPackageManager",
258:       "weka.core.TestInstances",
259:       "weka.classifiers.RandomizableClassifier",
260:       "weka.classifiers.functions.SGDText",
261:       "weka.classifiers.CostMatrix",
262:       "weka.classifiers.bayes.NaiveBayes",
263:       "weka.core.neighboursearch.balltrees.BallNode",
264:       "weka.core.stemmers.Stemming",
265:       "weka.core.SerializedObject",
266:       "weka.core.stemmers.SnowballStemmer",
267:       "weka.core.Instances",
268:       "weka.core.neighboursearch.BallTree",
269:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
270:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
271:       "weka.core.neighboursearch.balltrees.BallSplitter",
272:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
273:       "weka.classifiers.SingleClassifierEnhancer",
274:       "weka.classifiers.misc.InputMappedClassifier",
275:       "weka.classifiers.rules.ZeroR",
276:       "weka.filters.Filter",
277:       "weka.filters.supervised.attribute.Discretize",
278:       "weka.attributeSelection.ASEvaluation",
279:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
280:       "weka.attributeSelection.PrincipalComponents",
281:       "weka.classifiers.bayes.BayesNet",
282:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
283:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
284:       "weka.classifiers.bayes.net.search.local.K2",
285:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
286:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
287:       "weka.classifiers.bayes.net.BIFReader",
288:       "weka.core.tokenizers.AlphabeticTokenizer",
289:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
290:       "weka.classifiers.meta.CostSensitiveClassifier",
291:       "weka.core.SelectedTag",
292:       "weka.core.stemmers.LovinsStemmer",
293:       "weka.core.TechnicalInformation",
294:       "weka.core.TechnicalInformation$Type",
295:       "weka.core.TechnicalInformation$Field",
296:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
297:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
298:       "weka.core.neighboursearch.KDTree",
299:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
300:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
301:       "weka.core.stemmers.IteratedLovinsStemmer",
302:       "weka.classifiers.bayes.NaiveBayesMultinomial",
303:       "weka.core.neighboursearch.CoverTree",
304:       "weka.core.ChebyshevDistance",
305:       "weka.core.DenseInstance",
306:       "weka.core.Stopwords",
307:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
308:       "weka.classifiers.trees.m5.M5Base",
309:       "weka.classifiers.trees.M5P",
310:       "weka.core.converters.ConverterUtils$DataSource",
311:       "weka.core.converters.AbstractLoader",
312:       "weka.core.converters.AbstractFileLoader",
313:       "weka.core.converters.ArffLoader",
314:       "weka.core.converters.ArffLoader$ArffReader",
315:       "weka.classifiers.IteratedSingleClassifierEnhancer",
316:       "weka.classifiers.meta.AdditiveRegression",
317:       "weka.core.Attribute",
318:       "weka.core.ProtectedProperties",
319:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.meta.LogitBoost",
321:       "weka.classifiers.trees.DecisionStump",
322:       "weka.classifiers.meta.FilteredClassifier",
323:       "weka.filters.supervised.attribute.AttributeSelection",
324:       "weka.attributeSelection.AttributeSelection",
325:       "weka.attributeSelection.CfsSubsetEval",
326:       "weka.attributeSelection.ASSearch",
327:       "weka.attributeSelection.GreedyStepwise",
328:       "weka.attributeSelection.BestFirst",
329:       "weka.classifiers.trees.J48",
330:       "weka.classifiers.functions.SGD",
331:       "weka.classifiers.rules.JRip",
332:       "weka.classifiers.functions.supportVector.Kernel",
333:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
334:       "weka.core.tokenizers.NGramTokenizer",
335:       "weka.classifiers.functions.SimpleLinearRegression",
336:       "weka.classifiers.meta.AttributeSelectedClassifier",
337:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
338:       "weka.classifiers.misc.SerializedClassifier",
339:       "weka.classifiers.meta.MultiClassClassifier",
340:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
341:       "weka.classifiers.functions.Logistic",
342:       "weka.core.WekaEnumeration",
343:       "weka.classifiers.trees.LMT",
344:       "weka.filters.SimpleFilter",
345:       "weka.filters.SimpleStreamFilter",
346:       "weka.filters.MultiFilter",
347:       "weka.filters.AllFilter",
348:       "weka.attributeSelection.WrapperSubsetEval",
349:       "weka.core.WekaException",
350:       "weka.core.UnsupportedAttributeTypeException",
351:       "weka.classifiers.meta.ClassificationViaRegression",
352:       "weka.classifiers.functions.LinearRegression",
353:       "weka.classifiers.lazy.LWL",
354:       "weka.core.FindWithCapabilities",
355:       "weka.core.SingleIndex",
356:       "weka.classifiers.functions.GaussianProcesses",
357:       "weka.classifiers.functions.supportVector.CachedKernel",
358:       "weka.classifiers.functions.supportVector.PolyKernel",
359:       "weka.classifiers.lazy.KStar",
360:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
361:       "weka.attributeSelection.OneRAttributeEval",
362:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
363:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
364:       "weka.classifiers.functions.VotedPerceptron",
365:       "weka.classifiers.functions.SimpleLogistic",
366:       "weka.classifiers.meta.CVParameterSelection",
367:       "weka.core.FastVector",
368:       "weka.core.Javadoc",
369:       "weka.core.TechnicalInformationHandlerJavadoc",
370:       "weka.core.UnassignedClassException",
371:       "weka.classifiers.meta.RegressionByDiscretization",
372:       "weka.filters.unsupervised.attribute.Discretize",
373:       "weka.classifiers.trees.j48.ClassifierTree",
374:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
375:       "weka.attributeSelection.CorrelationAttributeEval",
376:       "weka.classifiers.rules.DecisionTable",
377:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
378:       "weka.core.Attribute$1",
379:       "weka.classifiers.functions.supportVector.RBFKernel",
380:       "weka.core.neighboursearch.kdtrees.MedianOfWidestDimension",
381:       "weka.attributeSelection.InfoGainAttributeEval",
382:       "weka.classifiers.meta.AdaBoostM1",
383:       "weka.attributeSelection.ReliefFAttributeEval",
384:       "weka.estimators.Estimator",
385:       "weka.estimators.PoissonEstimator",
386:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
387:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
388:       "weka.classifiers.meta.RandomCommittee",
389:       "weka.classifiers.trees.RandomTree",
390:       "weka.classifiers.functions.SMO",
391:       "weka.classifiers.functions.SMOreg",
392:       "weka.classifiers.functions.supportVector.RegOptimizer",
393:       "weka.classifiers.functions.supportVector.RegSMO",
394:       "weka.classifiers.functions.supportVector.RegSMOImproved",
395:       "weka.classifiers.functions.supportVector.StringKernel",
396:       "weka.classifiers.functions.MultilayerPerceptron",
397:       "weka.filters.unsupervised.attribute.NominalToBinary",
398:       "weka.classifiers.functions.neural.SigmoidUnit",
399:       "weka.classifiers.functions.neural.LinearUnit",
400:       "weka.classifiers.meta.Bagging",
401:       "weka.classifiers.trees.REPTree",
402:       "weka.core.ClassDiscovery",
403:       "weka.estimators.KernelEstimator",
404:       "weka.classifiers.MultipleClassifiersCombiner",
405:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
406:       "weka.classifiers.meta.MultiScheme",
407:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
408:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
409:       "weka.classifiers.meta.Stacking",
410:       "weka.core.matrix.Matrix",
411:       "weka.classifiers.rules.OneR",
412:       "weka.classifiers.trees.RandomForest",
413:       "weka.classifiers.bayes.NaiveBayesUpdateable",
414:       "weka.core.MinkowskiDistance",
415:       "weka.classifiers.meta.Vote",
416:       "weka.estimators.NormalEstimator",
417:       "weka.classifiers.functions.supportVector.Puk",
418:       "weka.core.AttributeStats",
419:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
420:       "weka.estimators.MahalanobisEstimator",
421:       "weka.attributeSelection.GainRatioAttributeEval"
422:     );
423:   }
424: }

[MASTER] 12:21:36.576 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
naiveBayesMultinomialText0.setNormalizeDocLength(true);
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap1;
naiveBayesMultinomialText0.getStemmer();
InputMappedClassifier inputMappedClassifier0 = new InputMappedClassifier();
inputMappedClassifier0.getModelHeader((Instances) null);

[MASTER] 12:21:36.765 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_26_1575634896733/weka/classifiers/bayes/NaiveBayesMultinomialText_26_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_26_1575634896733/weka/classifiers/bayes/NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding.java]]
[MASTER] 12:21:36.765 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 12:21:36.765 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 12:21:36.766 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 12:21:36.766 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 12:21:36.767 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_26_1575634896733/weka/classifiers/bayes/NaiveBayesMultinomialText_26_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 12:21:36 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: 
16: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
17: public class NaiveBayesMultinomialText_26_tmp__ESTest extends NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding {
18: 
19:   /**
20:   //Test case number: 0
21:   /*Coverage entropy=2.2654436797543704
22:   */
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
26:       naiveBayesMultinomialText0.setLowercaseTokens(true);
27:       naiveBayesMultinomialText0.m_probOfClass = null;
28:       naiveBayesMultinomialText0.m_lnorm = (-454.113413127378);
29:       naiveBayesMultinomialText0.m_t = (-454.113413127378);
30:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
31:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
32:       naiveBayesMultinomialText0.m_tokenizer = null;
33:       naiveBayesMultinomialText0.toString();
34:       naiveBayesMultinomialText0.m_leplace = (-2824.0879682549985);
35:       naiveBayesMultinomialText0.getUseWordFrequencies();
36:       naiveBayesMultinomialText0.getCapabilities();
37:       naiveBayesMultinomialText0.useStopListTipText();
38:       naiveBayesMultinomialText0.periodicPruningTipText();
39:       naiveBayesMultinomialText0.getUseWordFrequencies();
40:       naiveBayesMultinomialText0.periodicPruningTipText();
41:       assertTrue(naiveBayesMultinomialText0.getLowercaseTokens());
42:   }
43: }
RegularFileObject[/tmp/EvoSuite_26_1575634896733/weka/classifiers/bayes/NaiveBayesMultinomialText_26_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 12:21:36 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:     org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); 
60:   } 
61: 
62:   @After 
63:   public void doneWithTestCase(){ 
64:     threadStopper.killAndJoinClientThreads();
65:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
66:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
67:     resetClasses(); 
68:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
69:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
70:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
71:   } 
72: 
73:   public static void setSystemProperties() {
74:  
75:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
76:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
77:     java.lang.System.setProperty("java.awt.headless", "true"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:     java.lang.System.setProperty("user.country", "US"); 
80:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
81:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
82:     java.lang.System.setProperty("user.language", "en"); 
83:     java.lang.System.setProperty("user.name", "ubuntu"); 
84:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
85:   }
86: 
87:   private static void initializeClasses() {
88:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding.class.getClassLoader() ,
89:       "weka.core.Environment",
90:       "weka.core.TestInstances",
91:       "weka.filters.unsupervised.attribute.NominalToBinary",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.attributeSelection.SubsetEvaluator",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.attributeSelection.CfsSubsetEval",
102:       "weka.core.DenseInstance",
103:       "weka.classifiers.trees.J48",
104:       "weka.core.stemmers.Stemmer",
105:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.neighboursearch.CoverTree$MyHeap",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.trees.j48.C45ModelSelection",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.BinarySparseInstance",
124:       "weka.core.AttributeLocator",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.classifiers.functions.supportVector.CachedKernel",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.attributeSelection.BestFirst",
131:       "weka.classifiers.trees.j48.ModelSelection",
132:       "weka.core.AdditionalMeasureProducer",
133:       "org.pentaho.packageManagement.PackageManager$1",
134:       "weka.attributeSelection.GreedyStepwise",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.classifiers.ConditionalDensityEstimator",
138:       "weka.core.CapabilitiesHandler",
139:       "weka.attributeSelection.ASEvaluation",
140:       "weka.core.AbstractInstance",
141:       "weka.classifiers.meta.FilteredClassifier",
142:       "weka.core.SelectedTag",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.classifiers.misc.InputMappedClassifier",
145:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
146:       "weka.core.Version",
147:       "weka.attributeSelection.AttributeSelection",
148:       "weka.core.Tag",
149:       "weka.classifiers.trees.j48.BinC45ModelSelection",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.OptionHandler",
153:       "weka.core.WekaException",
154:       "weka.filters.supervised.attribute.AttributeSelection",
155:       "weka.filters.StreamableFilter",
156:       "weka.core.Range",
157:       "weka.core.PartitionGenerator",
158:       "weka.classifiers.Classifier",
159:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
160:       "weka.core.Capabilities$Capability",
161:       "weka.core.SparseInstance",
162:       "org.pentaho.packageManagement.PackageManager",
163:       "weka.core.tokenizers.WordTokenizer",
164:       "weka.classifiers.misc.SerializedClassifier",
165:       "weka.classifiers.trees.j48.ClassifierTree",
166:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
167:       "weka.core.stemmers.SnowballStemmer",
168:       "weka.classifiers.trees.j48.PruneableClassifierTree",
169:       "weka.classifiers.Evaluation",
170:       "weka.classifiers.functions.supportVector.Kernel",
171:       "weka.core.WekaPackageManager",
172:       "weka.attributeSelection.ASSearch",
173:       "weka.filters.SupervisedFilter",
174:       "weka.core.TechnicalInformationHandler",
175:       "weka.core.neighboursearch.LinearNNSearch",
176:       "weka.attributeSelection.StartSetHandler",
177:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
178:       "weka.core.Option",
179:       "weka.core.neighboursearch.PerformanceStats",
180:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
181:       "weka.filters.Sourcable",
182:       "weka.core.Attribute",
183:       "weka.core.Stopwords",
184:       "weka.core.tokenizers.AlphabeticTokenizer",
185:       "weka.core.FastVector",
186:       "weka.core.UnassignedDatasetException",
187:       "weka.attributeSelection.RankedOutputSearch",
188:       "weka.classifiers.SingleClassifierEnhancer",
189:       "weka.core.RevisionUtils",
190:       "weka.core.Instance",
191:       "weka.classifiers.functions.supportVector.PolyKernel",
192:       "weka.core.ProtectedProperties",
193:       "weka.classifiers.IntervalEstimator",
194:       "weka.core.StringLocator",
195:       "weka.core.Matchable",
196:       "weka.core.AttributeStats",
197:       "weka.core.WeightedInstancesHandler",
198:       "weka.core.neighboursearch.NearestNeighbourSearch",
199:       "weka.classifiers.functions.GaussianProcesses",
200:       "weka.core.neighboursearch.covertrees.Stack",
201:       "weka.filters.unsupervised.attribute.Remove",
202:       "weka.core.EuclideanDistance",
203:       "weka.core.Instances",
204:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
205:       "weka.classifiers.bayes.NaiveBayesMultinomial",
206:       "weka.filters.unsupervised.attribute.Normalize",
207:       "weka.core.UnassignedClassException",
208:       "weka.classifiers.rules.ZeroR",
209:       "weka.filters.unsupervised.attribute.Standardize",
210:       "weka.attributeSelection.Ranker",
211:       "weka.core.UnsupportedAttributeTypeException",
212:       "weka.core.TechnicalInformation",
213:       "weka.classifiers.Sourcable",
214:       "weka.core.RevisionHandler",
215:       "weka.classifiers.evaluation.output.prediction.PlainText",
216:       "weka.core.neighboursearch.TreePerformanceStats",
217:       "weka.core.xml.XMLSerialization",
218:       "weka.classifiers.xml.XMLClassifier",
219:       "weka.filters.Filter",
220:       "weka.classifiers.lazy.IBk",
221:       "weka.filters.supervised.attribute.Discretize"
222:     );
223:   } 
224: 
225:   private static void resetClasses() {
226:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding.class.getClassLoader()); 
227: 
228:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
229:       "weka.classifiers.AbstractClassifier",
230:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
231:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
232:       "weka.core.Capabilities$Capability",
233:       "weka.core.tokenizers.Tokenizer",
234:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
235:       "weka.core.tokenizers.WordTokenizer",
236:       "weka.core.stemmers.NullStemmer",
237:       "weka.core.AbstractInstance",
238:       "weka.core.SparseInstance",
239:       "weka.core.BinarySparseInstance",
240:       "weka.core.UnassignedDatasetException",
241:       "weka.classifiers.Evaluation",
242:       "weka.core.Utils",
243:       "weka.core.Option",
244:       "weka.core.RevisionUtils",
245:       "weka.core.Tag",
246:       "weka.classifiers.lazy.IBk",
247:       "weka.core.neighboursearch.NearestNeighbourSearch",
248:       "weka.core.neighboursearch.LinearNNSearch",
249:       "weka.core.NormalizableDistance",
250:       "weka.core.EuclideanDistance",
251:       "weka.core.Range",
252:       "weka.core.Capabilities",
253:       "org.pentaho.packageManagement.PackageManager",
254:       "org.pentaho.packageManagement.DefaultPackageManager",
255:       "weka.core.Version",
256:       "weka.core.Environment",
257:       "weka.core.WekaPackageManager",
258:       "weka.core.TestInstances",
259:       "weka.classifiers.RandomizableClassifier",
260:       "weka.classifiers.functions.SGDText",
261:       "weka.classifiers.CostMatrix",
262:       "weka.classifiers.bayes.NaiveBayes",
263:       "weka.core.neighboursearch.balltrees.BallNode",
264:       "weka.core.stemmers.Stemming",
265:       "weka.core.SerializedObject",
266:       "weka.core.stemmers.SnowballStemmer",
267:       "weka.core.Instances",
268:       "weka.core.neighboursearch.BallTree",
269:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
270:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
271:       "weka.core.neighboursearch.balltrees.BallSplitter",
272:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
273:       "weka.classifiers.SingleClassifierEnhancer",
274:       "weka.classifiers.misc.InputMappedClassifier",
275:       "weka.classifiers.rules.ZeroR",
276:       "weka.filters.Filter",
277:       "weka.filters.supervised.attribute.Discretize",
278:       "weka.attributeSelection.ASEvaluation",
279:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
280:       "weka.attributeSelection.PrincipalComponents",
281:       "weka.classifiers.bayes.BayesNet",
282:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
283:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
284:       "weka.classifiers.bayes.net.search.local.K2",
285:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
286:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
287:       "weka.classifiers.bayes.net.BIFReader",
288:       "weka.core.tokenizers.AlphabeticTokenizer",
289:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
290:       "weka.classifiers.meta.CostSensitiveClassifier",
291:       "weka.core.SelectedTag",
292:       "weka.core.stemmers.LovinsStemmer",
293:       "weka.core.TechnicalInformation",
294:       "weka.core.TechnicalInformation$Type",
295:       "weka.core.TechnicalInformation$Field",
296:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
297:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
298:       "weka.core.neighboursearch.KDTree",
299:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
300:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
301:       "weka.core.stemmers.IteratedLovinsStemmer",
302:       "weka.classifiers.bayes.NaiveBayesMultinomial",
303:       "weka.core.neighboursearch.CoverTree",
304:       "weka.core.ChebyshevDistance",
305:       "weka.core.DenseInstance",
306:       "weka.core.Stopwords",
307:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
308:       "weka.classifiers.trees.m5.M5Base",
309:       "weka.classifiers.trees.M5P",
310:       "weka.core.converters.ConverterUtils$DataSource",
311:       "weka.core.converters.AbstractLoader",
312:       "weka.core.converters.AbstractFileLoader",
313:       "weka.core.converters.ArffLoader",
314:       "weka.core.converters.ArffLoader$ArffReader",
315:       "weka.classifiers.IteratedSingleClassifierEnhancer",
316:       "weka.classifiers.meta.AdditiveRegression",
317:       "weka.core.Attribute",
318:       "weka.core.ProtectedProperties",
319:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.meta.LogitBoost",
321:       "weka.classifiers.trees.DecisionStump",
322:       "weka.classifiers.meta.FilteredClassifier",
323:       "weka.filters.supervised.attribute.AttributeSelection",
324:       "weka.attributeSelection.AttributeSelection",
325:       "weka.attributeSelection.CfsSubsetEval",
326:       "weka.attributeSelection.ASSearch",
327:       "weka.attributeSelection.GreedyStepwise",
328:       "weka.attributeSelection.BestFirst",
329:       "weka.classifiers.trees.J48",
330:       "weka.classifiers.functions.SGD",
331:       "weka.classifiers.rules.JRip",
332:       "weka.classifiers.functions.supportVector.Kernel",
333:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
334:       "weka.core.tokenizers.NGramTokenizer",
335:       "weka.classifiers.functions.SimpleLinearRegression",
336:       "weka.classifiers.meta.AttributeSelectedClassifier",
337:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
338:       "weka.classifiers.misc.SerializedClassifier",
339:       "weka.classifiers.meta.MultiClassClassifier",
340:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
341:       "weka.classifiers.functions.Logistic",
342:       "weka.core.WekaEnumeration",
343:       "weka.classifiers.trees.LMT",
344:       "weka.filters.SimpleFilter",
345:       "weka.filters.SimpleStreamFilter",
346:       "weka.filters.MultiFilter",
347:       "weka.filters.AllFilter",
348:       "weka.attributeSelection.WrapperSubsetEval",
349:       "weka.core.WekaException",
350:       "weka.core.UnsupportedAttributeTypeException",
351:       "weka.classifiers.meta.ClassificationViaRegression",
352:       "weka.classifiers.functions.LinearRegression",
353:       "weka.classifiers.lazy.LWL",
354:       "weka.core.FindWithCapabilities",
355:       "weka.core.SingleIndex",
356:       "weka.classifiers.functions.GaussianProcesses",
357:       "weka.classifiers.functions.supportVector.CachedKernel",
358:       "weka.classifiers.functions.supportVector.PolyKernel",
359:       "weka.classifiers.lazy.KStar",
360:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
361:       "weka.attributeSelection.OneRAttributeEval",
362:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
363:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
364:       "weka.classifiers.functions.VotedPerceptron",
365:       "weka.classifiers.functions.SimpleLogistic",
366:       "weka.classifiers.meta.CVParameterSelection",
367:       "weka.core.FastVector",
368:       "weka.core.Javadoc",
369:       "weka.core.TechnicalInformationHandlerJavadoc",
370:       "weka.core.UnassignedClassException",
371:       "weka.classifiers.meta.RegressionByDiscretization",
372:       "weka.filters.unsupervised.attribute.Discretize",
373:       "weka.classifiers.trees.j48.ClassifierTree",
374:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
375:       "weka.attributeSelection.CorrelationAttributeEval",
376:       "weka.classifiers.rules.DecisionTable",
377:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
378:       "weka.core.Attribute$1",
379:       "weka.classifiers.functions.supportVector.RBFKernel",
380:       "weka.core.neighboursearch.kdtrees.MedianOfWidestDimension",
381:       "weka.attributeSelection.InfoGainAttributeEval",
382:       "weka.classifiers.meta.AdaBoostM1",
383:       "weka.attributeSelection.ReliefFAttributeEval",
384:       "weka.estimators.Estimator",
385:       "weka.estimators.PoissonEstimator",
386:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
387:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
388:       "weka.classifiers.meta.RandomCommittee",
389:       "weka.classifiers.trees.RandomTree",
390:       "weka.classifiers.functions.SMO",
391:       "weka.classifiers.functions.SMOreg",
392:       "weka.classifiers.functions.supportVector.RegOptimizer",
393:       "weka.classifiers.functions.supportVector.RegSMO",
394:       "weka.classifiers.functions.supportVector.RegSMOImproved",
395:       "weka.classifiers.functions.supportVector.StringKernel",
396:       "weka.classifiers.functions.MultilayerPerceptron",
397:       "weka.filters.unsupervised.attribute.NominalToBinary",
398:       "weka.classifiers.functions.neural.SigmoidUnit",
399:       "weka.classifiers.functions.neural.LinearUnit",
400:       "weka.classifiers.meta.Bagging",
401:       "weka.classifiers.trees.REPTree",
402:       "weka.core.ClassDiscovery",
403:       "weka.estimators.KernelEstimator",
404:       "weka.classifiers.MultipleClassifiersCombiner",
405:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
406:       "weka.classifiers.meta.MultiScheme",
407:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
408:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
409:       "weka.classifiers.meta.Stacking",
410:       "weka.core.matrix.Matrix",
411:       "weka.classifiers.rules.OneR",
412:       "weka.classifiers.trees.RandomForest",
413:       "weka.classifiers.bayes.NaiveBayesUpdateable",
414:       "weka.core.MinkowskiDistance",
415:       "weka.classifiers.meta.Vote",
416:       "weka.estimators.NormalEstimator",
417:       "weka.classifiers.functions.supportVector.Puk",
418:       "weka.core.AttributeStats",
419:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
420:       "weka.estimators.MahalanobisEstimator",
421:       "weka.attributeSelection.GainRatioAttributeEval"
422:     );
423:   }
424: }

[MASTER] 12:21:36.767 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setLowercaseTokens(true);
naiveBayesMultinomialText0.m_probOfClass = null;
naiveBayesMultinomialText0.m_lnorm = (-454.113413127378);
naiveBayesMultinomialText0.m_t = (-454.113413127378);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.m_tokenizer = null;
naiveBayesMultinomialText0.toString();
naiveBayesMultinomialText0.m_leplace = (-2824.0879682549985);
naiveBayesMultinomialText0.getUseWordFrequencies();
naiveBayesMultinomialText0.getCapabilities();
naiveBayesMultinomialText0.useStopListTipText();
naiveBayesMultinomialText0.periodicPruningTipText();
naiveBayesMultinomialText0.getUseWordFrequencies();
naiveBayesMultinomialText0.periodicPruningTipText();
assertTrue(naiveBayesMultinomialText0.getLowercaseTokens());


[MASTER] 12:21:37.521 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_45_1575634897486/weka/classifiers/bayes/NaiveBayesMultinomialText_45_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_45_1575634897486/weka/classifiers/bayes/NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding.java]]
[MASTER] 12:21:37.521 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 12:21:37.521 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 12:21:37.522 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 12:21:37.522 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 12:21:37.522 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_45_1575634897486/weka/classifiers/bayes/NaiveBayesMultinomialText_45_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 12:21:37 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.core.stemmers.SnowballStemmer;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_45_tmp__ESTest extends NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=3.6280315293619854
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
28:       SnowballStemmer snowballStemmer0 = new SnowballStemmer("\tSet minimum number of instances at which a node can be split (default 15)");
29:       naiveBayesMultinomialText0.setStemmer(snowballStemmer0);
30:       naiveBayesMultinomialText0.normTipText();
31:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
32:       naiveBayesMultinomialText0.setOptions(stringArray0);
33:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
34:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
35:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
36:       assertFalse(naiveBayesMultinomialText0.getUseStopList());
37:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
38:       assertFalse(naiveBayesMultinomialText0.getLowercaseTokens());
39:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
40:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
41:   }
42: }
RegularFileObject[/tmp/EvoSuite_45_1575634897486/weka/classifiers/bayes/NaiveBayesMultinomialText_45_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 12:21:37 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:     org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); 
60:   } 
61: 
62:   @After 
63:   public void doneWithTestCase(){ 
64:     threadStopper.killAndJoinClientThreads();
65:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
66:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
67:     resetClasses(); 
68:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
69:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
70:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
71:   } 
72: 
73:   public static void setSystemProperties() {
74:  
75:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
76:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
77:     java.lang.System.setProperty("java.awt.headless", "true"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:     java.lang.System.setProperty("user.country", "US"); 
80:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
81:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
82:     java.lang.System.setProperty("user.language", "en"); 
83:     java.lang.System.setProperty("user.name", "ubuntu"); 
84:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
85:   }
86: 
87:   private static void initializeClasses() {
88:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding.class.getClassLoader() ,
89:       "weka.core.Environment",
90:       "weka.core.TestInstances",
91:       "weka.filters.unsupervised.attribute.NominalToBinary",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.attributeSelection.SubsetEvaluator",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.attributeSelection.CfsSubsetEval",
102:       "weka.core.DenseInstance",
103:       "weka.classifiers.trees.J48",
104:       "weka.core.stemmers.Stemmer",
105:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.neighboursearch.CoverTree$MyHeap",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.trees.j48.C45ModelSelection",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.BinarySparseInstance",
124:       "weka.core.AttributeLocator",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.classifiers.functions.supportVector.CachedKernel",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.attributeSelection.BestFirst",
131:       "weka.classifiers.trees.j48.ModelSelection",
132:       "weka.core.AdditionalMeasureProducer",
133:       "org.pentaho.packageManagement.PackageManager$1",
134:       "weka.attributeSelection.GreedyStepwise",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.classifiers.ConditionalDensityEstimator",
138:       "weka.core.CapabilitiesHandler",
139:       "weka.attributeSelection.ASEvaluation",
140:       "weka.core.AbstractInstance",
141:       "weka.classifiers.meta.FilteredClassifier",
142:       "weka.core.SelectedTag",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.classifiers.misc.InputMappedClassifier",
145:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
146:       "weka.core.Version",
147:       "weka.attributeSelection.AttributeSelection",
148:       "weka.core.Tag",
149:       "weka.classifiers.trees.j48.BinC45ModelSelection",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.OptionHandler",
153:       "weka.core.WekaException",
154:       "weka.filters.supervised.attribute.AttributeSelection",
155:       "weka.filters.StreamableFilter",
156:       "weka.core.Range",
157:       "weka.core.PartitionGenerator",
158:       "weka.classifiers.Classifier",
159:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
160:       "weka.core.Capabilities$Capability",
161:       "weka.core.SparseInstance",
162:       "org.pentaho.packageManagement.PackageManager",
163:       "weka.core.tokenizers.WordTokenizer",
164:       "weka.classifiers.misc.SerializedClassifier",
165:       "weka.classifiers.trees.j48.ClassifierTree",
166:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
167:       "weka.core.stemmers.SnowballStemmer",
168:       "weka.classifiers.trees.j48.PruneableClassifierTree",
169:       "weka.classifiers.Evaluation",
170:       "weka.classifiers.functions.supportVector.Kernel",
171:       "weka.core.WekaPackageManager",
172:       "weka.attributeSelection.ASSearch",
173:       "weka.filters.SupervisedFilter",
174:       "weka.core.TechnicalInformationHandler",
175:       "weka.core.neighboursearch.LinearNNSearch",
176:       "weka.attributeSelection.StartSetHandler",
177:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
178:       "weka.core.Option",
179:       "weka.core.neighboursearch.PerformanceStats",
180:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
181:       "weka.filters.Sourcable",
182:       "weka.core.Attribute",
183:       "weka.core.Stopwords",
184:       "weka.core.tokenizers.AlphabeticTokenizer",
185:       "weka.core.FastVector",
186:       "weka.core.UnassignedDatasetException",
187:       "weka.attributeSelection.RankedOutputSearch",
188:       "weka.classifiers.SingleClassifierEnhancer",
189:       "weka.core.RevisionUtils",
190:       "weka.core.Instance",
191:       "weka.classifiers.functions.supportVector.PolyKernel",
192:       "weka.core.ProtectedProperties",
193:       "weka.classifiers.IntervalEstimator",
194:       "weka.core.StringLocator",
195:       "weka.core.Matchable",
196:       "weka.core.AttributeStats",
197:       "weka.core.WeightedInstancesHandler",
198:       "weka.core.neighboursearch.NearestNeighbourSearch",
199:       "weka.classifiers.functions.GaussianProcesses",
200:       "weka.core.neighboursearch.covertrees.Stack",
201:       "weka.filters.unsupervised.attribute.Remove",
202:       "weka.core.EuclideanDistance",
203:       "weka.core.Instances",
204:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
205:       "weka.classifiers.bayes.NaiveBayesMultinomial",
206:       "weka.filters.unsupervised.attribute.Normalize",
207:       "weka.core.UnassignedClassException",
208:       "weka.classifiers.rules.ZeroR",
209:       "weka.filters.unsupervised.attribute.Standardize",
210:       "weka.attributeSelection.Ranker",
211:       "weka.core.UnsupportedAttributeTypeException",
212:       "weka.core.TechnicalInformation",
213:       "weka.classifiers.Sourcable",
214:       "weka.core.RevisionHandler",
215:       "weka.classifiers.evaluation.output.prediction.PlainText",
216:       "weka.core.neighboursearch.TreePerformanceStats",
217:       "weka.core.xml.XMLSerialization",
218:       "weka.classifiers.xml.XMLClassifier",
219:       "weka.filters.Filter",
220:       "weka.classifiers.lazy.IBk",
221:       "weka.filters.supervised.attribute.Discretize"
222:     );
223:   } 
224: 
225:   private static void resetClasses() {
226:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding.class.getClassLoader()); 
227: 
228:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
229:       "weka.classifiers.AbstractClassifier",
230:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
231:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
232:       "weka.core.Capabilities$Capability",
233:       "weka.core.tokenizers.Tokenizer",
234:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
235:       "weka.core.tokenizers.WordTokenizer",
236:       "weka.core.stemmers.NullStemmer",
237:       "weka.core.AbstractInstance",
238:       "weka.core.SparseInstance",
239:       "weka.core.BinarySparseInstance",
240:       "weka.core.UnassignedDatasetException",
241:       "weka.classifiers.Evaluation",
242:       "weka.core.Utils",
243:       "weka.core.Option",
244:       "weka.core.RevisionUtils",
245:       "weka.core.Tag",
246:       "weka.classifiers.lazy.IBk",
247:       "weka.core.neighboursearch.NearestNeighbourSearch",
248:       "weka.core.neighboursearch.LinearNNSearch",
249:       "weka.core.NormalizableDistance",
250:       "weka.core.EuclideanDistance",
251:       "weka.core.Range",
252:       "weka.core.Capabilities",
253:       "org.pentaho.packageManagement.PackageManager",
254:       "org.pentaho.packageManagement.DefaultPackageManager",
255:       "weka.core.Version",
256:       "weka.core.Environment",
257:       "weka.core.WekaPackageManager",
258:       "weka.core.TestInstances",
259:       "weka.classifiers.RandomizableClassifier",
260:       "weka.classifiers.functions.SGDText",
261:       "weka.classifiers.CostMatrix",
262:       "weka.classifiers.bayes.NaiveBayes",
263:       "weka.core.neighboursearch.balltrees.BallNode",
264:       "weka.core.stemmers.Stemming",
265:       "weka.core.SerializedObject",
266:       "weka.core.stemmers.SnowballStemmer",
267:       "weka.core.Instances",
268:       "weka.core.neighboursearch.BallTree",
269:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
270:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
271:       "weka.core.neighboursearch.balltrees.BallSplitter",
272:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
273:       "weka.classifiers.SingleClassifierEnhancer",
274:       "weka.classifiers.misc.InputMappedClassifier",
275:       "weka.classifiers.rules.ZeroR",
276:       "weka.filters.Filter",
277:       "weka.filters.supervised.attribute.Discretize",
278:       "weka.attributeSelection.ASEvaluation",
279:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
280:       "weka.attributeSelection.PrincipalComponents",
281:       "weka.classifiers.bayes.BayesNet",
282:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
283:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
284:       "weka.classifiers.bayes.net.search.local.K2",
285:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
286:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
287:       "weka.classifiers.bayes.net.BIFReader",
288:       "weka.core.tokenizers.AlphabeticTokenizer",
289:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
290:       "weka.classifiers.meta.CostSensitiveClassifier",
291:       "weka.core.SelectedTag",
292:       "weka.core.stemmers.LovinsStemmer",
293:       "weka.core.TechnicalInformation",
294:       "weka.core.TechnicalInformation$Type",
295:       "weka.core.TechnicalInformation$Field",
296:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
297:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
298:       "weka.core.neighboursearch.KDTree",
299:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
300:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
301:       "weka.core.stemmers.IteratedLovinsStemmer",
302:       "weka.classifiers.bayes.NaiveBayesMultinomial",
303:       "weka.core.neighboursearch.CoverTree",
304:       "weka.core.ChebyshevDistance",
305:       "weka.core.DenseInstance",
306:       "weka.core.Stopwords",
307:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
308:       "weka.classifiers.trees.m5.M5Base",
309:       "weka.classifiers.trees.M5P",
310:       "weka.core.converters.ConverterUtils$DataSource",
311:       "weka.core.converters.AbstractLoader",
312:       "weka.core.converters.AbstractFileLoader",
313:       "weka.core.converters.ArffLoader",
314:       "weka.core.converters.ArffLoader$ArffReader",
315:       "weka.classifiers.IteratedSingleClassifierEnhancer",
316:       "weka.classifiers.meta.AdditiveRegression",
317:       "weka.core.Attribute",
318:       "weka.core.ProtectedProperties",
319:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.meta.LogitBoost",
321:       "weka.classifiers.trees.DecisionStump",
322:       "weka.classifiers.meta.FilteredClassifier",
323:       "weka.filters.supervised.attribute.AttributeSelection",
324:       "weka.attributeSelection.AttributeSelection",
325:       "weka.attributeSelection.CfsSubsetEval",
326:       "weka.attributeSelection.ASSearch",
327:       "weka.attributeSelection.GreedyStepwise",
328:       "weka.attributeSelection.BestFirst",
329:       "weka.classifiers.trees.J48",
330:       "weka.classifiers.functions.SGD",
331:       "weka.classifiers.rules.JRip",
332:       "weka.classifiers.functions.supportVector.Kernel",
333:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
334:       "weka.core.tokenizers.NGramTokenizer",
335:       "weka.classifiers.functions.SimpleLinearRegression",
336:       "weka.classifiers.meta.AttributeSelectedClassifier",
337:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
338:       "weka.classifiers.misc.SerializedClassifier",
339:       "weka.classifiers.meta.MultiClassClassifier",
340:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
341:       "weka.classifiers.functions.Logistic",
342:       "weka.core.WekaEnumeration",
343:       "weka.classifiers.trees.LMT",
344:       "weka.filters.SimpleFilter",
345:       "weka.filters.SimpleStreamFilter",
346:       "weka.filters.MultiFilter",
347:       "weka.filters.AllFilter",
348:       "weka.attributeSelection.WrapperSubsetEval",
349:       "weka.core.WekaException",
350:       "weka.core.UnsupportedAttributeTypeException",
351:       "weka.classifiers.meta.ClassificationViaRegression",
352:       "weka.classifiers.functions.LinearRegression",
353:       "weka.classifiers.lazy.LWL",
354:       "weka.core.FindWithCapabilities",
355:       "weka.core.SingleIndex",
356:       "weka.classifiers.functions.GaussianProcesses",
357:       "weka.classifiers.functions.supportVector.CachedKernel",
358:       "weka.classifiers.functions.supportVector.PolyKernel",
359:       "weka.classifiers.lazy.KStar",
360:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
361:       "weka.attributeSelection.OneRAttributeEval",
362:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
363:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
364:       "weka.classifiers.functions.VotedPerceptron",
365:       "weka.classifiers.functions.SimpleLogistic",
366:       "weka.classifiers.meta.CVParameterSelection",
367:       "weka.core.FastVector",
368:       "weka.core.Javadoc",
369:       "weka.core.TechnicalInformationHandlerJavadoc",
370:       "weka.core.UnassignedClassException",
371:       "weka.classifiers.meta.RegressionByDiscretization",
372:       "weka.filters.unsupervised.attribute.Discretize",
373:       "weka.classifiers.trees.j48.ClassifierTree",
374:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
375:       "weka.attributeSelection.CorrelationAttributeEval",
376:       "weka.classifiers.rules.DecisionTable",
377:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
378:       "weka.core.Attribute$1",
379:       "weka.classifiers.functions.supportVector.RBFKernel",
380:       "weka.core.neighboursearch.kdtrees.MedianOfWidestDimension",
381:       "weka.attributeSelection.InfoGainAttributeEval",
382:       "weka.classifiers.meta.AdaBoostM1",
383:       "weka.attributeSelection.ReliefFAttributeEval",
384:       "weka.estimators.Estimator",
385:       "weka.estimators.PoissonEstimator",
386:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
387:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
388:       "weka.classifiers.meta.RandomCommittee",
389:       "weka.classifiers.trees.RandomTree",
390:       "weka.classifiers.functions.SMO",
391:       "weka.classifiers.functions.SMOreg",
392:       "weka.classifiers.functions.supportVector.RegOptimizer",
393:       "weka.classifiers.functions.supportVector.RegSMO",
394:       "weka.classifiers.functions.supportVector.RegSMOImproved",
395:       "weka.classifiers.functions.supportVector.StringKernel",
396:       "weka.classifiers.functions.MultilayerPerceptron",
397:       "weka.filters.unsupervised.attribute.NominalToBinary",
398:       "weka.classifiers.functions.neural.SigmoidUnit",
399:       "weka.classifiers.functions.neural.LinearUnit",
400:       "weka.classifiers.meta.Bagging",
401:       "weka.classifiers.trees.REPTree",
402:       "weka.core.ClassDiscovery",
403:       "weka.estimators.KernelEstimator",
404:       "weka.classifiers.MultipleClassifiersCombiner",
405:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
406:       "weka.classifiers.meta.MultiScheme",
407:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
408:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
409:       "weka.classifiers.meta.Stacking",
410:       "weka.core.matrix.Matrix",
411:       "weka.classifiers.rules.OneR",
412:       "weka.classifiers.trees.RandomForest",
413:       "weka.classifiers.bayes.NaiveBayesUpdateable",
414:       "weka.core.MinkowskiDistance",
415:       "weka.classifiers.meta.Vote",
416:       "weka.estimators.NormalEstimator",
417:       "weka.classifiers.functions.supportVector.Puk",
418:       "weka.core.AttributeStats",
419:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
420:       "weka.estimators.MahalanobisEstimator",
421:       "weka.attributeSelection.GainRatioAttributeEval"
422:     );
423:   }
424: }

[MASTER] 12:21:37.523 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
SnowballStemmer snowballStemmer0 = new SnowballStemmer("\tSet minimum number of instances at which a node can be split (default 15)");
naiveBayesMultinomialText0.setStemmer(snowballStemmer0);
naiveBayesMultinomialText0.normTipText();
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.setOptions(stringArray0);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertFalse(naiveBayesMultinomialText0.getUseStopList());
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getLowercaseTokens());
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);


[MASTER] 12:21:37.748 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_52_1575634897717/weka/classifiers/bayes/NaiveBayesMultinomialText_52_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_52_1575634897717/weka/classifiers/bayes/NaiveBayesMultinomialText_52_tmp__ESTest_scaffolding.java]]
[MASTER] 12:21:37.748 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 12:21:37.748 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 12:21:37.749 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 43
[MASTER] 12:21:37.749 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 43
[MASTER] 12:21:37.749 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_52_1575634897717/weka/classifiers/bayes/NaiveBayesMultinomialText_52_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 12:21:37 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.classifiers.misc.InputMappedClassifier;
17: import weka.core.BinarySparseInstance;
18: import weka.core.Capabilities;
19: import weka.core.TestInstances;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_52_tmp__ESTest extends NaiveBayesMultinomialText_52_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=0.42857142857142855
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       InputMappedClassifier inputMappedClassifier0 = new InputMappedClassifier();
31:       Capabilities capabilities0 = inputMappedClassifier0.getCapabilities();
32:       TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
33:       testInstances0.toString();
34:       testInstances0.generate();
35:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
36:       int[] intArray0 = new int[7];
37:       intArray0[0] = 1;
38:       intArray0[1] = (-1);
39:       intArray0[2] = (-1);
40:       intArray0[3] = (-1);
41:       intArray0[4] = (-2);
42:       intArray0[5] = (-2);
43:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
44:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
45:       intArray0[6] = (-2);
46:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0.0, intArray0, 1);
47:       try { 
48:         naiveBayesMultinomialText0.distributionForInstance(binarySparseInstance0);
49:         fail("Expecting exception: RuntimeException");
50:       
51:       } catch(RuntimeException e) {
52:          //
53:          // DenseInstance doesn't have access to a dataset!
54:          //
55:          verifyException("weka.core.AbstractInstance", e);
56:       }
57:   }
58: }
RegularFileObject[/tmp/EvoSuite_52_1575634897717/weka/classifiers/bayes/NaiveBayesMultinomialText_52_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 12:21:37 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_52_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:     org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); 
60:   } 
61: 
62:   @After 
63:   public void doneWithTestCase(){ 
64:     threadStopper.killAndJoinClientThreads();
65:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
66:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
67:     resetClasses(); 
68:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
69:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
70:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
71:   } 
72: 
73:   public static void setSystemProperties() {
74:  
75:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
76:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
77:     java.lang.System.setProperty("java.awt.headless", "true"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:     java.lang.System.setProperty("user.country", "US"); 
80:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
81:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
82:     java.lang.System.setProperty("user.language", "en"); 
83:     java.lang.System.setProperty("user.name", "ubuntu"); 
84:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
85:   }
86: 
87:   private static void initializeClasses() {
88:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_52_tmp__ESTest_scaffolding.class.getClassLoader() ,
89:       "weka.core.Environment",
90:       "weka.core.TestInstances",
91:       "weka.filters.unsupervised.attribute.NominalToBinary",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.attributeSelection.SubsetEvaluator",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.attributeSelection.CfsSubsetEval",
102:       "weka.core.DenseInstance",
103:       "weka.classifiers.trees.J48",
104:       "weka.core.stemmers.Stemmer",
105:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.neighboursearch.CoverTree$MyHeap",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.trees.j48.C45ModelSelection",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.BinarySparseInstance",
124:       "weka.core.AttributeLocator",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.classifiers.functions.supportVector.CachedKernel",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.attributeSelection.BestFirst",
131:       "weka.classifiers.trees.j48.ModelSelection",
132:       "weka.core.AdditionalMeasureProducer",
133:       "org.pentaho.packageManagement.PackageManager$1",
134:       "weka.attributeSelection.GreedyStepwise",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.classifiers.ConditionalDensityEstimator",
138:       "weka.core.CapabilitiesHandler",
139:       "weka.attributeSelection.ASEvaluation",
140:       "weka.core.AbstractInstance",
141:       "weka.classifiers.meta.FilteredClassifier",
142:       "weka.core.SelectedTag",
143:       "org.pentaho.packageManagement.DefaultPackage",
144:       "weka.classifiers.misc.InputMappedClassifier",
145:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
146:       "weka.core.Version",
147:       "weka.attributeSelection.AttributeSelection",
148:       "weka.core.Tag",
149:       "weka.classifiers.trees.j48.BinC45ModelSelection",
150:       "weka.core.neighboursearch.CoverTree",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.OptionHandler",
153:       "weka.core.WekaException",
154:       "weka.filters.supervised.attribute.AttributeSelection",
155:       "weka.filters.StreamableFilter",
156:       "weka.core.Range",
157:       "weka.core.PartitionGenerator",
158:       "weka.classifiers.Classifier",
159:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
160:       "weka.core.Capabilities$Capability",
161:       "weka.core.SparseInstance",
162:       "org.pentaho.packageManagement.PackageManager",
163:       "weka.core.tokenizers.WordTokenizer",
164:       "weka.classifiers.misc.SerializedClassifier",
165:       "weka.classifiers.trees.j48.ClassifierTree",
166:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
167:       "weka.core.stemmers.SnowballStemmer",
168:       "weka.classifiers.trees.j48.PruneableClassifierTree",
169:       "weka.classifiers.Evaluation",
170:       "weka.classifiers.functions.supportVector.Kernel",
171:       "weka.core.WekaPackageManager",
172:       "weka.attributeSelection.ASSearch",
173:       "weka.filters.SupervisedFilter",
174:       "weka.core.TechnicalInformationHandler",
175:       "weka.core.neighboursearch.LinearNNSearch",
176:       "weka.attributeSelection.StartSetHandler",
177:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
178:       "weka.core.Option",
179:       "weka.core.neighboursearch.PerformanceStats",
180:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
181:       "weka.filters.Sourcable",
182:       "weka.core.Attribute",
183:       "weka.core.Stopwords",
184:       "weka.core.tokenizers.AlphabeticTokenizer",
185:       "weka.core.FastVector",
186:       "weka.core.UnassignedDatasetException",
187:       "weka.attributeSelection.RankedOutputSearch",
188:       "weka.classifiers.SingleClassifierEnhancer",
189:       "weka.core.RevisionUtils",
190:       "weka.core.Instance",
191:       "weka.classifiers.functions.supportVector.PolyKernel",
192:       "weka.core.ProtectedProperties",
193:       "weka.classifiers.IntervalEstimator",
194:       "weka.core.StringLocator",
195:       "weka.core.Matchable",
196:       "weka.core.AttributeStats",
197:       "weka.core.WeightedInstancesHandler",
198:       "weka.core.neighboursearch.NearestNeighbourSearch",
199:       "weka.classifiers.functions.GaussianProcesses",
200:       "weka.core.neighboursearch.covertrees.Stack",
201:       "weka.filters.unsupervised.attribute.Remove",
202:       "weka.core.EuclideanDistance",
203:       "weka.core.Instances",
204:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
205:       "weka.classifiers.bayes.NaiveBayesMultinomial",
206:       "weka.filters.unsupervised.attribute.Normalize",
207:       "weka.core.UnassignedClassException",
208:       "weka.classifiers.rules.ZeroR",
209:       "weka.filters.unsupervised.attribute.Standardize",
210:       "weka.attributeSelection.Ranker",
211:       "weka.core.UnsupportedAttributeTypeException",
212:       "weka.core.TechnicalInformation",
213:       "weka.classifiers.Sourcable",
214:       "weka.core.RevisionHandler",
215:       "weka.classifiers.evaluation.output.prediction.PlainText",
216:       "weka.core.neighboursearch.TreePerformanceStats",
217:       "weka.core.xml.XMLSerialization",
218:       "weka.classifiers.xml.XMLClassifier",
219:       "weka.filters.Filter",
220:       "weka.classifiers.lazy.IBk",
221:       "weka.filters.supervised.attribute.Discretize"
222:     );
223:   } 
224: 
225:   private static void resetClasses() {
226:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_52_tmp__ESTest_scaffolding.class.getClassLoader()); 
227: 
228:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
229:       "weka.classifiers.AbstractClassifier",
230:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
231:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
232:       "weka.core.Capabilities$Capability",
233:       "weka.core.tokenizers.Tokenizer",
234:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
235:       "weka.core.tokenizers.WordTokenizer",
236:       "weka.core.stemmers.NullStemmer",
237:       "weka.core.AbstractInstance",
238:       "weka.core.SparseInstance",
239:       "weka.core.BinarySparseInstance",
240:       "weka.core.UnassignedDatasetException",
241:       "weka.classifiers.Evaluation",
242:       "weka.core.Utils",
243:       "weka.core.Option",
244:       "weka.core.RevisionUtils",
245:       "weka.core.Tag",
246:       "weka.classifiers.lazy.IBk",
247:       "weka.core.neighboursearch.NearestNeighbourSearch",
248:       "weka.core.neighboursearch.LinearNNSearch",
249:       "weka.core.NormalizableDistance",
250:       "weka.core.EuclideanDistance",
251:       "weka.core.Range",
252:       "weka.core.Capabilities",
253:       "org.pentaho.packageManagement.PackageManager",
254:       "org.pentaho.packageManagement.DefaultPackageManager",
255:       "weka.core.Version",
256:       "weka.core.Environment",
257:       "weka.core.WekaPackageManager",
258:       "weka.core.TestInstances",
259:       "weka.classifiers.RandomizableClassifier",
260:       "weka.classifiers.functions.SGDText",
261:       "weka.classifiers.CostMatrix",
262:       "weka.classifiers.bayes.NaiveBayes",
263:       "weka.core.neighboursearch.balltrees.BallNode",
264:       "weka.core.stemmers.Stemming",
265:       "weka.core.SerializedObject",
266:       "weka.core.stemmers.SnowballStemmer",
267:       "weka.core.Instances",
268:       "weka.core.neighboursearch.BallTree",
269:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
270:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
271:       "weka.core.neighboursearch.balltrees.BallSplitter",
272:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
273:       "weka.classifiers.SingleClassifierEnhancer",
274:       "weka.classifiers.misc.InputMappedClassifier",
275:       "weka.classifiers.rules.ZeroR",
276:       "weka.filters.Filter",
277:       "weka.filters.supervised.attribute.Discretize",
278:       "weka.attributeSelection.ASEvaluation",
279:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
280:       "weka.attributeSelection.PrincipalComponents",
281:       "weka.classifiers.bayes.BayesNet",
282:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
283:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
284:       "weka.classifiers.bayes.net.search.local.K2",
285:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
286:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
287:       "weka.classifiers.bayes.net.BIFReader",
288:       "weka.core.tokenizers.AlphabeticTokenizer",
289:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
290:       "weka.classifiers.meta.CostSensitiveClassifier",
291:       "weka.core.SelectedTag",
292:       "weka.core.stemmers.LovinsStemmer",
293:       "weka.core.TechnicalInformation",
294:       "weka.core.TechnicalInformation$Type",
295:       "weka.core.TechnicalInformation$Field",
296:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
297:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
298:       "weka.core.neighboursearch.KDTree",
299:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
300:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
301:       "weka.core.stemmers.IteratedLovinsStemmer",
302:       "weka.classifiers.bayes.NaiveBayesMultinomial",
303:       "weka.core.neighboursearch.CoverTree",
304:       "weka.core.ChebyshevDistance",
305:       "weka.core.DenseInstance",
306:       "weka.core.Stopwords",
307:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
308:       "weka.classifiers.trees.m5.M5Base",
309:       "weka.classifiers.trees.M5P",
310:       "weka.core.converters.ConverterUtils$DataSource",
311:       "weka.core.converters.AbstractLoader",
312:       "weka.core.converters.AbstractFileLoader",
313:       "weka.core.converters.ArffLoader",
314:       "weka.core.converters.ArffLoader$ArffReader",
315:       "weka.classifiers.IteratedSingleClassifierEnhancer",
316:       "weka.classifiers.meta.AdditiveRegression",
317:       "weka.core.Attribute",
318:       "weka.core.ProtectedProperties",
319:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.meta.LogitBoost",
321:       "weka.classifiers.trees.DecisionStump",
322:       "weka.classifiers.meta.FilteredClassifier",
323:       "weka.filters.supervised.attribute.AttributeSelection",
324:       "weka.attributeSelection.AttributeSelection",
325:       "weka.attributeSelection.CfsSubsetEval",
326:       "weka.attributeSelection.ASSearch",
327:       "weka.attributeSelection.GreedyStepwise",
328:       "weka.attributeSelection.BestFirst",
329:       "weka.classifiers.trees.J48",
330:       "weka.classifiers.functions.SGD",
331:       "weka.classifiers.rules.JRip",
332:       "weka.classifiers.functions.supportVector.Kernel",
333:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
334:       "weka.core.tokenizers.NGramTokenizer",
335:       "weka.classifiers.functions.SimpleLinearRegression",
336:       "weka.classifiers.meta.AttributeSelectedClassifier",
337:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
338:       "weka.classifiers.misc.SerializedClassifier",
339:       "weka.classifiers.meta.MultiClassClassifier",
340:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
341:       "weka.classifiers.functions.Logistic",
342:       "weka.core.WekaEnumeration",
343:       "weka.classifiers.trees.LMT",
344:       "weka.filters.SimpleFilter",
345:       "weka.filters.SimpleStreamFilter",
346:       "weka.filters.MultiFilter",
347:       "weka.filters.AllFilter",
348:       "weka.attributeSelection.WrapperSubsetEval",
349:       "weka.core.WekaException",
350:       "weka.core.UnsupportedAttributeTypeException",
351:       "weka.classifiers.meta.ClassificationViaRegression",
352:       "weka.classifiers.functions.LinearRegression",
353:       "weka.classifiers.lazy.LWL",
354:       "weka.core.FindWithCapabilities",
355:       "weka.core.SingleIndex",
356:       "weka.classifiers.functions.GaussianProcesses",
357:       "weka.classifiers.functions.supportVector.CachedKernel",
358:       "weka.classifiers.functions.supportVector.PolyKernel",
359:       "weka.classifiers.lazy.KStar",
360:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
361:       "weka.attributeSelection.OneRAttributeEval",
362:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
363:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
364:       "weka.classifiers.functions.VotedPerceptron",
365:       "weka.classifiers.functions.SimpleLogistic",
366:       "weka.classifiers.meta.CVParameterSelection",
367:       "weka.core.FastVector",
368:       "weka.core.Javadoc",
369:       "weka.core.TechnicalInformationHandlerJavadoc",
370:       "weka.core.UnassignedClassException",
371:       "weka.classifiers.meta.RegressionByDiscretization",
372:       "weka.filters.unsupervised.attribute.Discretize",
373:       "weka.classifiers.trees.j48.ClassifierTree",
374:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
375:       "weka.attributeSelection.CorrelationAttributeEval",
376:       "weka.classifiers.rules.DecisionTable",
377:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
378:       "weka.core.Attribute$1",
379:       "weka.classifiers.functions.supportVector.RBFKernel",
380:       "weka.core.neighboursearch.kdtrees.MedianOfWidestDimension",
381:       "weka.attributeSelection.InfoGainAttributeEval",
382:       "weka.classifiers.meta.AdaBoostM1",
383:       "weka.attributeSelection.ReliefFAttributeEval",
384:       "weka.estimators.Estimator",
385:       "weka.estimators.PoissonEstimator",
386:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
387:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
388:       "weka.classifiers.meta.RandomCommittee",
389:       "weka.classifiers.trees.RandomTree",
390:       "weka.classifiers.functions.SMO",
391:       "weka.classifiers.functions.SMOreg",
392:       "weka.classifiers.functions.supportVector.RegOptimizer",
393:       "weka.classifiers.functions.supportVector.RegSMO",
394:       "weka.classifiers.functions.supportVector.RegSMOImproved",
395:       "weka.classifiers.functions.supportVector.StringKernel",
396:       "weka.classifiers.functions.MultilayerPerceptron",
397:       "weka.filters.unsupervised.attribute.NominalToBinary",
398:       "weka.classifiers.functions.neural.SigmoidUnit",
399:       "weka.classifiers.functions.neural.LinearUnit",
400:       "weka.classifiers.meta.Bagging",
401:       "weka.classifiers.trees.REPTree",
402:       "weka.core.ClassDiscovery",
403:       "weka.estimators.KernelEstimator",
404:       "weka.classifiers.MultipleClassifiersCombiner",
405:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
406:       "weka.classifiers.meta.MultiScheme",
407:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
408:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
409:       "weka.classifiers.meta.Stacking",
410:       "weka.core.matrix.Matrix",
411:       "weka.classifiers.rules.OneR",
412:       "weka.classifiers.trees.RandomForest",
413:       "weka.classifiers.bayes.NaiveBayesUpdateable",
414:       "weka.core.MinkowskiDistance",
415:       "weka.classifiers.meta.Vote",
416:       "weka.estimators.NormalEstimator",
417:       "weka.classifiers.functions.supportVector.Puk",
418:       "weka.core.AttributeStats",
419:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
420:       "weka.estimators.MahalanobisEstimator",
421:       "weka.attributeSelection.GainRatioAttributeEval"
422:     );
423:   }
424: }

[MASTER] 12:21:37.750 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
InputMappedClassifier inputMappedClassifier0 = new InputMappedClassifier();
Capabilities capabilities0 = inputMappedClassifier0.getCapabilities();
TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
testInstances0.toString();
testInstances0.generate();
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
int[] intArray0 = new int[7];
intArray0[0] = 1;
intArray0[1] = (-1);
intArray0[2] = (-1);
intArray0[3] = (-1);
intArray0[4] = (-2);
intArray0[5] = (-2);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
intArray0[6] = (-2);
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0.0, intArray0, 1);
naiveBayesMultinomialText0.distributionForInstance(binarySparseInstance0);

[MASTER] 12:21:41.107 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 12:21:42.169 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1026/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18044
* Connecting to master process on port 18045
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1026
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 12:35:54.081 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 12:35:54.132 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 12:35:54.133 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 12:35:56.737 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 12:35:57.181 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 12:35:57.183 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1026
* Starting evolution
[MASTER] 12:36:13.127 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptimizations()I: Line 563
[MASTER] 12:36:13.129 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptimizations()I: root-Branch
[MASTER] 12:36:13.129 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 206: weka.classifiers.rules.JRip.getOptimizations()I:563 - InsertUnaryOp Negation
[MASTER] 12:36:13.129 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 207: weka.classifiers.rules.JRip.getOptimizations()I:563 - InsertUnaryOp +1
[MASTER] 12:36:13.129 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 208: weka.classifiers.rules.JRip.getOptimizations()I:563 - InsertUnaryOp -1
[MASTER] 12:36:13.131 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.getOptimizations()I:Positive
[MASTER] 12:36:13.131 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.getOptimizations()I
[MASTER] 12:36:13.132 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.getOptimizations()I
[MASTER] 12:36:13.132 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.getOptimizations()I: root-Branch in context: weka.classifiers.rules.JRip:getOptimizations()I
[MASTER] 12:37:31.997 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 126s and 78 generations, 55962 statements, best individual has fitness: 3080.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 85%
* Total number of goals: 217
* Number of covered goals: 184
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 64%
* Total number of goals: 428
* Number of covered goals: 273
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 88%
* Total number of goals: 260
* Number of covered goals: 228
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 64%
* Total number of goals: 428
* Number of covered goals: 273
* Generated 80 tests with total length 236
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 124s and 100 generations, 54620 statements, best individual has fitness: 12512.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 37%
* Total number of goals: 705
* Number of covered goals: 263
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 27%
* Total number of goals: 416
* Number of covered goals: 114
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 55%
* Total number of goals: 993
* Number of covered goals: 551
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 27%
* Total number of goals: 93
* Number of covered goals: 25
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 27%
* Total number of goals: 416
* Number of covered goals: 112
* Generated 73 tests with total length 801
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 75%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1026/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 23%
* Compiling and checking tests
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1026/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18048
* Connecting to master process on port 18047
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 12:46:43.652 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 12:46:43.712 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 12:46:43.713 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 12:46:44.067 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 12:46:44.102 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 12:46:44.132 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1026
* Starting evolution
[MASTER] 12:46:46.046 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 12:46:46.077 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 12:46:46.081 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 12:46:46.210 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1026
* Starting evolution
* Search finished after 122s and 178 generations, 62627 statements, best individual has fitness: 9088.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 41%
* Total number of goals: 370
* Number of covered goals: 153
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 28%
* Total number of goals: 242
* Number of covered goals: 67
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 27%
* Total number of goals: 713
* Number of covered goals: 194
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 42%
* Total number of goals: 72
* Number of covered goals: 30
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 45
* Number of covered goals: 43
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 28%
* Total number of goals: 242
* Number of covered goals: 67
* Generated 60 tests with total length 273
* Resulting test suite's coverage: 35% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 136s and 13 generations, 10920 statements, best individual has fitness: 4080.0
[MASTER] 12:49:07.370 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 19 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 93%
* Total number of goals: 647
* Number of covered goals: 600
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 86%
* Total number of goals: 441
* Number of covered goals: 378
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 84%
* Total number of goals: 678
* Number of covered goals: 569
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 244
* Number of covered goals: 81
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 88%
* Total number of goals: 124
* Number of covered goals: 109
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 86%
* Total number of goals: 124
* Number of covered goals: 107
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 79%
* Total number of goals: 441
* Number of covered goals: 350
* Generated 137 tests with total length 2657
* Resulting test suite's coverage: 81% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 11%
* Compiling and checking tests
[MASTER] 12:50:14.556 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 12:50:15.068 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1026/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 12:54:52.913 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6868666666666666% of time used, but only 38/137 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 11%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1026/107_weka/evosuite-tests
* Done!

* Computation finished
