* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18388
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18387
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 05:52:17.098 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 05:52:17.128 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 05:52:17.145 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 05:52:17.277 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 05:52:17.281 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 05:52:17.295 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1018
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 05:52:38.332 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 05:52:38.348 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 05:52:38.349 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 05:52:39.123 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 05:52:39.850 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 05:52:39.853 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 05:52:41.846 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 05:52:41.880 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 05:52:41.881 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 05:52:41.881 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 05:52:41.882 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 05:52:41.882 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 05:52:41.882 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 05:52:41.883 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 05:52:41.884 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 05:52:41.939 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 05:52:41.951 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1018
* Starting evolution
[MASTER] 05:52:46.657 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 05:53:18.831 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: Line 1614
[MASTER] 05:53:18.832 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: I3 Branch 165 IFNULL L1574 - true
[MASTER] 05:53:18.833 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;:Null
[MASTER] 05:53:18.834 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;
[MASTER] 05:53:18.835 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: I3 Branch 165 IFNULL L1574 - true in context: 
[MASTER] 05:53:40.765 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 05:53:46.438 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 122s and 147 generations, 74406 statements, best individual has fitness: 8000.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 45%
* Total number of goals: 370
* Number of covered goals: 165
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 32%
* Total number of goals: 242
* Number of covered goals: 78
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 18
* Number of covered goals: 18
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 41%
* Total number of goals: 713
* Number of covered goals: 295
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 72
* Number of covered goals: 31
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 45
* Number of covered goals: 43
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 32%
* Total number of goals: 242
* Number of covered goals: 78
* Generated 58 tests with total length 484
* Resulting test suite's coverage: 43% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 128s and 51 generations, 30177 statements, best individual has fitness: 16096.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 56%
* Total number of goals: 1378
* Number of covered goals: 778
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 41%
* Total number of goals: 809
* Number of covered goals: 328
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 50
* Number of covered goals: 50
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 59%
* Total number of goals: 424
* Number of covered goals: 252
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 17%
* Total number of goals: 278
* Number of covered goals: 46
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 95%
* Total number of goals: 103
* Number of covered goals: 98
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 95%
* Total number of goals: 103
* Number of covered goals: 98
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 38%
* Total number of goals: 809
* Number of covered goals: 307
* Generated 125 tests with total length 1411
* Resulting test suite's coverage: 49% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
[MASTER] 05:56:07.410 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 05:56:07.881 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 7%
* Compiling and checking tests
[MASTER] 05:58:00.788 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 05:58:01.126 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 05:58:01.126 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 05:58:02.686 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18381
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 06:02:38.552 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:02:38.596 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:02:38.598 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 06:02:41.100 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 06:02:42.018 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 06:02:42.020 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1018
* Starting evolution
[MASTER] 06:02:46.542 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.<init>(Lweka/classifiers/rules/JRip;)V
[MASTER] 06:02:46.834 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NominalAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 06:02:50.241 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setFolds(I)V: Line 473
[MASTER] 06:02:50.241 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setFolds(I)V: Line 474
[MASTER] 06:02:50.241 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;: Line 572
[MASTER] 06:02:50.245 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setFolds(I)V: root-Branch
[MASTER] 06:02:50.245 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;: root-Branch
[MASTER] 06:02:50.247 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 188: weka.classifiers.rules.JRip.setFolds(I)V:473 - InsertUnaryOp Negation of fold
[MASTER] 06:02:50.247 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 189: weka.classifiers.rules.JRip.setFolds(I)V:473 - InsertUnaryOp IINC 1 fold
[MASTER] 06:02:50.247 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 190: weka.classifiers.rules.JRip.setFolds(I)V:473 - InsertUnaryOp IINC -1 fold
[MASTER] 06:02:50.247 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 209: weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;:572 - ReplaceConstant - Whether debug information is output to the console. -> 
[MASTER] 06:02:50.249 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 06:02:50.249 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setFolds(I)V
[MASTER] 06:02:50.249 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;
[MASTER] 06:02:50.249 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setFolds(I)V
[MASTER] 06:02:50.250 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;
[MASTER] 06:02:50.250 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setFolds(I)V: root-Branch in context: weka.classifiers.rules.JRip:setFolds(I)V
[MASTER] 06:02:50.263 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.rules.JRip:debugTipText()Ljava/lang/String;
[MASTER] 06:04:04.145 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 123s and 122 generations, 60109 statements, best individual has fitness: 13320.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 33%
* Total number of goals: 705
* Number of covered goals: 234
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 24%
* Total number of goals: 416
* Number of covered goals: 99
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 51%
* Total number of goals: 993
* Number of covered goals: 506
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 28%
* Total number of goals: 93
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 24%
* Total number of goals: 416
* Number of covered goals: 99
* Generated 61 tests with total length 494
* Resulting test suite's coverage: 40% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18386
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 06:13:29.920 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:13:29.929 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:13:29.934 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 06:13:29.955 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1018
* Starting evolution
[MASTER] 06:13:33.724 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 06:15:16.425 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 06:15:16.426 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Search finished after 123s and 74 generations, 42591 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 22 tests with total length 124
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18384
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18385
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1018
* Starting evolution
[MASTER] 06:19:50.768 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 06:19:50.769 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 06:19:50.771 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 06:19:50.841 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:19:50.855 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:19:50.856 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1018
* Starting evolution
[MASTER] 06:19:59.869 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 06:19:59.869 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 06:20:04.314 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getStemmer()Lweka/core/stemmers/Stemmer;
[MASTER] 06:20:04.315 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.reset()V
[MASTER] 06:20:04.315 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getStemmer()Lweka/core/stemmers/Stemmer;
[MASTER] 06:20:04.320 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.reset()V
[MASTER] 06:20:04.320 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.reset()V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:reset()V
[MASTER] 06:20:04.579 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I3 Branch 48 IFNONNULL L828 - true
[MASTER] 06:20:04.581 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z:False
[MASTER] 06:20:04.581 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z
[MASTER] 06:20:04.582 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z
[MASTER] 06:20:04.582 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getUseWordFrequencies()Z
[MASTER] 06:20:04.582 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I3 Branch 48 IFNONNULL L828 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStopwords(Ljava/io/File;)V
[MASTER] 06:20:06.711 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z: Line 605
[MASTER] 06:20:06.712 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z: root-Branch
[MASTER] 06:20:06.713 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 255: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z:605 - InsertUnaryOp Negation
[MASTER] 06:20:06.713 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V
[MASTER] 06:20:06.728 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V
[MASTER] 06:20:06.728 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I34 Branch 49 IFEQ L832 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStopwords(Ljava/io/File;)V
[MASTER] 06:20:06.728 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I37 Branch 50 IFEQ L832 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStopwords(Ljava/io/File;)V
[MASTER] 06:20:13.462 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: Line 828
[MASTER] 06:20:13.462 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: Line 831
[MASTER] 06:20:13.462 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: Line 832
[MASTER] 06:20:13.462 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: Line 834
[MASTER] 06:20:13.463 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I34 Branch 49 IFEQ L832 - false
[MASTER] 06:20:13.463 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I37 Branch 50 IFEQ L832 - true
[MASTER] 06:20:13.464 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 337: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:828 - ReplaceComparisonOperator != null -> = null
[MASTER] 06:20:13.464 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 341: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:832 - ReplaceComparisonOperator == -> !=
[MASTER] 06:20:13.464 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 343: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:832 - ReplaceComparisonOperator == -> !=
* Search finished after 124s and 68 generations, 54400 statements, best individual has fitness: 3304.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 217
* Number of covered goals: 182
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 61%
* Total number of goals: 428
* Number of covered goals: 261
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 87%
* Total number of goals: 260
* Number of covered goals: 227
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 61%
* Total number of goals: 428
* Number of covered goals: 260
* Generated 78 tests with total length 332
* Resulting test suite's coverage: 70% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 124s and 107 generations, 60550 statements, best individual has fitness: 1608.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 89%
* Total number of goals: 338
* Number of covered goals: 302
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 82%
* Total number of goals: 194
* Number of covered goals: 159
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 18
* Number of covered goals: 18
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 476
* Number of covered goals: 440
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 112
* Number of covered goals: 57
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 81%
* Total number of goals: 194
* Number of covered goals: 157
* Generated 79 tests with total length 805
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 75%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 57%
* Compiling and checking tests
[MASTER] 06:26:14.457 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_54_1575613574415/weka/classifiers/bayes/NaiveBayesMultinomialText_54_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_54_1575613574415/weka/classifiers/bayes/NaiveBayesMultinomialText_54_tmp__ESTest_scaffolding.java]]
[MASTER] 06:26:14.457 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:26:14.457 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:26:14.461 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   variable boolean1
  location: class weka.classifiers.bayes.NaiveBayesMultinomialText_54_tmp__ESTest: 40
[MASTER] 06:26:14.462 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_54_1575613574415/weka/classifiers/bayes/NaiveBayesMultinomialText_54_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 06:26:14 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import org.evosuite.runtime.EvoRunner;
11: import org.evosuite.runtime.EvoRunnerParameters;
12: import org.evosuite.runtime.testdata.EvoSuiteFile;
13: import org.evosuite.runtime.testdata.FileSystemHandling;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.Capabilities;
17: import weka.core.Instances;
18: import weka.core.TestInstances;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_54_tmp__ESTest extends NaiveBayesMultinomialText_54_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=2.4439646237634842
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       byte[] byteArray0 = new byte[0];
30:       FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       naiveBayesMultinomialText0.reset();
33:       naiveBayesMultinomialText0.setUseStopList(true);
34:       Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
35:       naiveBayesMultinomialText0.pruneDictionary();
36:       TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
37:       Instances instances0 = testInstances0.generate("weka/core/Capabilities.props");
38:       naiveBayesMultinomialText0.buildClassifier(instances0);
39:       boolean boolean0 = naiveBayesMultinomialText0.m_lowercaseTokens;
40:       assertTrue(boolean0 == boolean1);
41:   }
42: }
RegularFileObject[/tmp/EvoSuite_54_1575613574415/weka/classifiers/bayes/NaiveBayesMultinomialText_54_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 06:26:14 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_54_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_54_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.attributeSelection.SubsetEvaluator",
98:       "weka.classifiers.CostMatrix",
99:       "weka.classifiers.bayes.net.search.local.K2",
100:       "weka.filters.UnsupervisedFilter",
101:       "weka.core.logging.Logger$Level",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.attributeSelection.CfsSubsetEval",
104:       "weka.core.DenseInstance",
105:       "weka.classifiers.trees.J48",
106:       "weka.core.ConjugateGradientOptimization",
107:       "weka.core.stemmers.Stemmer",
108:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
109:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
110:       "org.pentaho.packageManagement.DefaultPackageManager",
111:       "org.bounce.net.DefaultAuthenticator",
112:       "weka.classifiers.meta.MultiClassClassifier$RandomCode",
113:       "weka.core.stemmers.NullStemmer",
114:       "weka.core.EnvironmentHandler",
115:       "weka.classifiers.trees.j48.C45ModelSelection",
116:       "weka.classifiers.functions.SGDText",
117:       "weka.classifiers.functions.Logistic",
118:       "weka.core.RelationalLocator",
119:       "weka.core.Utils",
120:       "weka.core.CustomDisplayStringProvider",
121:       "weka.core.tokenizers.Tokenizer",
122:       "weka.filters.unsupervised.instance.RemoveWithValues",
123:       "weka.core.NoSupportForMissingValuesException",
124:       "weka.classifiers.UpdateableClassifier",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
126:       "weka.core.MultiInstanceCapabilitiesHandler",
127:       "weka.classifiers.meta.MultiClassClassifier$ExhaustiveCode",
128:       "weka.core.Copyable",
129:       "weka.core.Capabilities",
130:       "weka.core.BinarySparseInstance",
131:       "weka.core.AttributeLocator",
132:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
133:       "weka.core.SerializedObject",
134:       "weka.classifiers.meta.RegressionByDiscretization",
135:       "weka.clusterers.UpdateableClusterer",
136:       "weka.attributeSelection.BestFirst",
137:       "weka.core.Summarizable",
138:       "weka.classifiers.trees.j48.ModelSelection",
139:       "weka.core.AdditionalMeasureProducer",
140:       "weka.core.neighboursearch.balltrees.BallNode",
141:       "org.pentaho.packageManagement.PackageManager$1",
142:       "weka.classifiers.meta.MultiClassClassifier",
143:       "weka.core.Drawable",
144:       "weka.core.Optimization",
145:       "weka.core.matrix.Matrix",
146:       "weka.classifiers.ConditionalDensityEstimator",
147:       "weka.core.CapabilitiesHandler",
148:       "weka.attributeSelection.ASEvaluation",
149:       "weka.core.AbstractInstance",
150:       "weka.core.scripting.JythonObject",
151:       "weka.core.SelectedTag",
152:       "org.pentaho.packageManagement.DefaultPackage",
153:       "weka.classifiers.bayes.BayesNet",
154:       "weka.classifiers.misc.InputMappedClassifier",
155:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
156:       "weka.core.Version",
157:       "weka.classifiers.meta.MultiClassClassifier$Code",
158:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
159:       "weka.filters.unsupervised.attribute.RemoveUseless",
160:       "weka.core.Tag",
161:       "weka.classifiers.trees.j48.BinC45ModelSelection",
162:       "weka.classifiers.AbstractClassifier",
163:       "weka.estimators.UnivariateDensityEstimator",
164:       "weka.filters.unsupervised.attribute.Center",
165:       "weka.core.OptionHandler",
166:       "weka.core.WekaException",
167:       "weka.filters.StreamableFilter",
168:       "weka.core.Range",
169:       "weka.core.PartitionGenerator",
170:       "weka.core.scripting.JythonSerializableObject",
171:       "weka.classifiers.Classifier",
172:       "weka.core.Capabilities$Capability",
173:       "weka.core.SparseInstance",
174:       "org.pentaho.packageManagement.PackageManager",
175:       "weka.classifiers.trees.j48.ClassifierSplitModel",
176:       "weka.attributeSelection.AttributeTransformer",
177:       "weka.core.tokenizers.WordTokenizer",
178:       "weka.classifiers.misc.SerializedClassifier",
179:       "weka.classifiers.trees.j48.ClassifierTree",
180:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
181:       "weka.attributeSelection.PrincipalComponents",
182:       "weka.core.stemmers.SnowballStemmer",
183:       "weka.classifiers.trees.j48.PruneableClassifierTree",
184:       "weka.classifiers.Evaluation",
185:       "weka.classifiers.functions.supportVector.Kernel",
186:       "weka.attributeSelection.ASSearch",
187:       "weka.core.WekaPackageManager",
188:       "weka.filters.SupervisedFilter",
189:       "weka.core.TechnicalInformationHandler",
190:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
191:       "weka.attributeSelection.StartSetHandler",
192:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
193:       "weka.classifiers.meta.CostSensitiveClassifier",
194:       "weka.core.Option",
195:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
196:       "weka.filters.Sourcable",
197:       "weka.classifiers.meta.MultiClassClassifier$StandardCode",
198:       "weka.core.Attribute",
199:       "weka.core.Stopwords",
200:       "weka.core.FastVector",
201:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
202:       "weka.core.UnassignedDatasetException",
203:       "weka.core.tokenizers.NGramTokenizer",
204:       "weka.classifiers.RandomizableClassifier",
205:       "weka.classifiers.SingleClassifierEnhancer",
206:       "weka.core.RevisionUtils",
207:       "weka.core.Instance",
208:       "weka.estimators.Estimator",
209:       "weka.core.ProtectedProperties",
210:       "weka.classifiers.IntervalEstimator",
211:       "weka.core.StringLocator",
212:       "weka.classifiers.bayes.net.ADNode",
213:       "weka.core.Matchable",
214:       "weka.core.AttributeStats",
215:       "weka.core.WeightedInstancesHandler",
216:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
217:       "weka.filters.unsupervised.attribute.Discretize",
218:       "weka.filters.unsupervised.attribute.Remove",
219:       "weka.core.Randomizable",
220:       "weka.classifiers.trees.j48.NoSplit",
221:       "weka.classifiers.meta.AttributeSelectedClassifier",
222:       "weka.core.Instances",
223:       "weka.classifiers.bayes.NaiveBayesMultinomial",
224:       "weka.core.UnassignedClassException",
225:       "weka.classifiers.bayes.net.BIFReader",
226:       "weka.classifiers.bayes.net.ParentSet",
227:       "weka.classifiers.rules.ZeroR",
228:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
229:       "weka.filters.unsupervised.attribute.Standardize",
230:       "weka.core.UnsupportedAttributeTypeException",
231:       "weka.core.TechnicalInformation",
232:       "weka.classifiers.Sourcable",
233:       "weka.classifiers.functions.Logistic$OptEngCG",
234:       "weka.classifiers.functions.Logistic$OptEng",
235:       "weka.core.RevisionHandler",
236:       "weka.classifiers.evaluation.output.prediction.PlainText",
237:       "weka.core.xml.XMLSerialization",
238:       "weka.filters.unsupervised.attribute.MakeIndicator",
239:       "weka.classifiers.xml.XMLClassifier",
240:       "weka.filters.Filter",
241:       "weka.filters.supervised.attribute.Discretize"
242:     );
243:   } 
244: 
245:   private static void resetClasses() {
246:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_54_tmp__ESTest_scaffolding.class.getClassLoader()); 
247: 
248:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
249:       "weka.classifiers.AbstractClassifier",
250:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
251:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
252:       "weka.core.Capabilities$Capability",
253:       "weka.core.tokenizers.Tokenizer",
254:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
255:       "weka.core.tokenizers.WordTokenizer",
256:       "weka.core.stemmers.NullStemmer",
257:       "weka.classifiers.Evaluation",
258:       "weka.core.Utils",
259:       "weka.core.Option",
260:       "weka.core.Instances",
261:       "weka.core.converters.ArffLoader$ArffReader",
262:       "weka.core.AbstractInstance",
263:       "weka.core.SparseInstance",
264:       "weka.core.BinarySparseInstance",
265:       "weka.core.UnassignedDatasetException",
266:       "weka.classifiers.bayes.NaiveBayes",
267:       "weka.core.TechnicalInformation",
268:       "weka.core.TechnicalInformation$Type",
269:       "weka.core.TechnicalInformation$Field",
270:       "weka.core.Tag",
271:       "weka.classifiers.functions.SMO",
272:       "weka.classifiers.functions.supportVector.Kernel",
273:       "weka.classifiers.functions.supportVector.CachedKernel",
274:       "weka.classifiers.functions.supportVector.PolyKernel",
275:       "weka.core.SerializedObject",
276:       "weka.core.Capabilities",
277:       "org.pentaho.packageManagement.PackageManager",
278:       "org.pentaho.packageManagement.DefaultPackageManager",
279:       "weka.core.Version",
280:       "weka.core.Environment",
281:       "weka.core.WekaPackageManager",
282:       "weka.core.neighboursearch.NearestNeighbourSearch",
283:       "weka.core.neighboursearch.CoverTree",
284:       "weka.core.NormalizableDistance",
285:       "weka.core.EuclideanDistance",
286:       "weka.core.Range",
287:       "weka.classifiers.bayes.BayesNet",
288:       "weka.classifiers.bayes.net.BIFReader",
289:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
290:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
291:       "weka.classifiers.bayes.net.search.local.K2",
292:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
293:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
294:       "weka.core.RevisionUtils",
295:       "weka.core.TestInstances",
296:       "weka.core.tokenizers.NGramTokenizer",
297:       "weka.classifiers.RandomizableClassifier",
298:       "weka.classifiers.functions.SGDText",
299:       "weka.core.Attribute",
300:       "weka.core.ProtectedProperties",
301:       "weka.core.DenseInstance",
302:       "weka.core.neighboursearch.balltrees.BallNode",
303:       "weka.classifiers.lazy.IBk",
304:       "weka.core.neighboursearch.LinearNNSearch",
305:       "weka.core.neighboursearch.BallTree",
306:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
307:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
308:       "weka.core.neighboursearch.balltrees.BallSplitter",
309:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
310:       "weka.classifiers.SingleClassifierEnhancer",
311:       "weka.classifiers.misc.InputMappedClassifier",
312:       "weka.classifiers.rules.ZeroR",
313:       "weka.core.FindWithCapabilities",
314:       "weka.core.SingleIndex",
315:       "weka.core.stemmers.SnowballStemmer",
316:       "weka.classifiers.misc.SerializedClassifier",
317:       "weka.attributeSelection.ASEvaluation",
318:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
319:       "weka.attributeSelection.PrincipalComponents",
320:       "weka.filters.Filter",
321:       "weka.filters.supervised.attribute.Discretize",
322:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
323:       "weka.classifiers.meta.CostSensitiveClassifier",
324:       "weka.classifiers.CostMatrix",
325:       "weka.core.stemmers.LovinsStemmer",
326:       "weka.core.stemmers.IteratedLovinsStemmer",
327:       "weka.classifiers.bayes.NaiveBayesMultinomial",
328:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
329:       "weka.core.WekaEnumeration",
330:       "weka.core.Attribute$1",
331:       "weka.core.SerializationHelper",
332:       "weka.classifiers.meta.MultiClassClassifier",
333:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
334:       "weka.classifiers.functions.Logistic",
335:       "weka.core.Stopwords",
336:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
337:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
338:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
339:       "weka.core.WekaException",
340:       "weka.core.UnsupportedAttributeTypeException",
341:       "weka.core.MinkowskiDistance",
342:       "weka.estimators.Estimator",
343:       "weka.estimators.DiscreteEstimator",
344:       "weka.classifiers.meta.RegressionByDiscretization",
345:       "weka.filters.unsupervised.attribute.Discretize",
346:       "weka.classifiers.trees.J48",
347:       "weka.classifiers.functions.LinearRegression",
348:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
349:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
350:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
351:       "weka.classifiers.meta.ClassificationViaRegression",
352:       "weka.classifiers.trees.m5.M5Base",
353:       "weka.classifiers.trees.M5P",
354:       "weka.classifiers.functions.SMOreg",
355:       "weka.classifiers.functions.supportVector.RegOptimizer",
356:       "weka.classifiers.functions.supportVector.RegSMO",
357:       "weka.classifiers.functions.supportVector.RegSMOImproved",
358:       "weka.classifiers.functions.supportVector.RBFKernel",
359:       "weka.classifiers.trees.j48.ClassifierTree",
360:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
361:       "weka.core.tokenizers.AlphabeticTokenizer",
362:       "weka.classifiers.functions.SGD",
363:       "weka.core.UnassignedClassException",
364:       "weka.classifiers.rules.M5Rules",
365:       "weka.classifiers.trees.LMT",
366:       "weka.classifiers.lazy.LWL",
367:       "weka.classifiers.trees.DecisionStump",
368:       "weka.classifiers.meta.AttributeSelectedClassifier",
369:       "weka.attributeSelection.CfsSubsetEval",
370:       "weka.attributeSelection.ASSearch",
371:       "weka.attributeSelection.BestFirst",
372:       "weka.attributeSelection.CorrelationAttributeEval",
373:       "weka.attributeSelection.ReliefFAttributeEval",
374:       "weka.core.matrix.Matrix",
375:       "weka.filters.AllFilter",
376:       "weka.classifiers.rules.PART",
377:       "weka.classifiers.rules.part.MakeDecList",
378:       "weka.core.neighboursearch.KDTree",
379:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
380:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
381:       "weka.attributeSelection.WrapperSubsetEval",
382:       "weka.estimators.PoissonEstimator",
383:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
384:       "weka.classifiers.rules.JRip",
385:       "weka.attributeSelection.AttributeSelection",
386:       "weka.classifiers.MultipleClassifiersCombiner",
387:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
388:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
389:       "weka.classifiers.meta.Stacking",
390:       "weka.classifiers.trees.RandomForest",
391:       "weka.classifiers.trees.RandomTree",
392:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
393:       "weka.classifiers.meta.MultiScheme",
394:       "weka.classifiers.functions.VotedPerceptron",
395:       "weka.attributeSelection.OneRAttributeEval",
396:       "weka.estimators.NormalEstimator",
397:       "weka.classifiers.functions.MultilayerPerceptron",
398:       "weka.core.FastVector",
399:       "weka.filters.unsupervised.attribute.NominalToBinary",
400:       "weka.classifiers.functions.neural.SigmoidUnit",
401:       "weka.classifiers.functions.neural.LinearUnit",
402:       "weka.classifiers.lazy.KStar",
403:       "weka.filters.SimpleFilter",
404:       "weka.filters.SimpleStreamFilter",
405:       "weka.filters.MultiFilter",
406:       "weka.classifiers.rules.OneR",
407:       "weka.classifiers.meta.FilteredClassifier",
408:       "weka.filters.supervised.attribute.AttributeSelection",
409:       "weka.attributeSelection.GreedyStepwise",
410:       "weka.attributeSelection.InfoGainAttributeEval",
411:       "weka.core.ManhattanDistance",
412:       "weka.classifiers.functions.SimpleLogistic",
413:       "weka.classifiers.rules.DecisionTable",
414:       "weka.classifiers.IteratedSingleClassifierEnhancer",
415:       "weka.classifiers.meta.AdditiveRegression",
416:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
417:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
418:       "weka.classifiers.meta.Bagging",
419:       "weka.classifiers.trees.REPTree",
420:       "weka.estimators.MahalanobisEstimator",
421:       "weka.core.ClassDiscovery",
422:       "weka.classifiers.meta.CVParameterSelection",
423:       "weka.attributeSelection.GainRatioAttributeEval",
424:       "weka.classifiers.functions.GaussianProcesses",
425:       "weka.classifiers.functions.supportVector.StringKernel",
426:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
427:       "weka.core.stemmers.Stemming",
428:       "weka.core.Check",
429:       "weka.core.CheckOptionHandler",
430:       "weka.core.converters.ConverterUtils$DataSource",
431:       "weka.core.converters.AbstractLoader",
432:       "weka.core.converters.AbstractFileLoader",
433:       "weka.core.converters.ArffLoader",
434:       "weka.core.SelectedTag",
435:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
436:       "weka.classifiers.meta.LogitBoost",
437:       "weka.core.AttributeStats",
438:       "weka.classifiers.meta.RandomCommittee",
439:       "weka.classifiers.functions.supportVector.Puk",
440:       "weka.classifiers.meta.AdaBoostM1",
441:       "weka.classifiers.meta.Vote",
442:       "weka.core.Javadoc",
443:       "weka.core.TechnicalInformationHandlerJavadoc",
444:       "weka.classifiers.functions.SimpleLinearRegression",
445:       "weka.estimators.KernelEstimator",
446:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
447:       "weka.core.GlobalInfoJavadoc"
448:     );
449:   }
450: }

[MASTER] 06:26:14.463 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
byte[] byteArray0 = new byte[0];
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.reset();
naiveBayesMultinomialText0.setUseStopList(true);
Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
naiveBayesMultinomialText0.pruneDictionary();
TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
Instances instances0 = testInstances0.generate("weka/core/Capabilities.props");
naiveBayesMultinomialText0.buildClassifier(instances0);
boolean boolean0 = naiveBayesMultinomialText0.m_lowercaseTokens;
assertTrue(boolean0 == boolean1);


[MASTER] 06:26:15.001 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_68_1575613574968/weka/classifiers/bayes/NaiveBayesMultinomialText_68_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_68_1575613574968/weka/classifiers/bayes/NaiveBayesMultinomialText_68_tmp__ESTest_scaffolding.java]]
[MASTER] 06:26:15.001 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:26:15.001 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:26:15.002 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 06:26:15.002 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 06:26:15.002 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 06:26:15.002 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 06:26:15.002 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 06:26:15.003 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_68_1575613574968/weka/classifiers/bayes/NaiveBayesMultinomialText_68_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 06:26:14 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.AbstractClassifier;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.classifiers.meta.MultiClassClassifierUpdateable;
18: import weka.core.TestInstances;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_68_tmp__ESTest extends NaiveBayesMultinomialText_68_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=1.847832822658352
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       MultiClassClassifierUpdateable multiClassClassifierUpdateable0 = new MultiClassClassifierUpdateable();
31:       AbstractClassifier.makeCopies(naiveBayesMultinomialText0, 25);
32:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>(25, 1, true);
33:       Integer integer0 = new Integer(1);
34:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
35:       linkedHashMap0.put(integer0, linkedHashMap1);
36:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
37:       naiveBayesMultinomialText0.getCapabilities();
38:       naiveBayesMultinomialText0.setPeriodicPruning(3);
39:       naiveBayesMultinomialText0.pruneDictionary();
40:       assertEquals(3, naiveBayesMultinomialText0.getPeriodicPruning());
41:       
42:       TestInstances testInstances0 = new TestInstances();
43:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
44:       String string0 = naiveBayesMultinomialText1.minWordFrequencyTipText();
45:       assertEquals("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value", string0);
46:   }
47: }
RegularFileObject[/tmp/EvoSuite_68_1575613574968/weka/classifiers/bayes/NaiveBayesMultinomialText_68_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 06:26:14 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_68_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_68_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.attributeSelection.SubsetEvaluator",
98:       "weka.classifiers.CostMatrix",
99:       "weka.classifiers.bayes.net.search.local.K2",
100:       "weka.filters.UnsupervisedFilter",
101:       "weka.core.logging.Logger$Level",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.attributeSelection.CfsSubsetEval",
104:       "weka.core.DenseInstance",
105:       "weka.classifiers.trees.J48",
106:       "weka.core.ConjugateGradientOptimization",
107:       "weka.core.stemmers.Stemmer",
108:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
109:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
110:       "org.pentaho.packageManagement.DefaultPackageManager",
111:       "org.bounce.net.DefaultAuthenticator",
112:       "weka.classifiers.meta.MultiClassClassifier$RandomCode",
113:       "weka.core.stemmers.NullStemmer",
114:       "weka.core.EnvironmentHandler",
115:       "weka.classifiers.trees.j48.C45ModelSelection",
116:       "weka.classifiers.functions.SGDText",
117:       "weka.classifiers.functions.Logistic",
118:       "weka.core.RelationalLocator",
119:       "weka.core.Utils",
120:       "weka.core.CustomDisplayStringProvider",
121:       "weka.core.tokenizers.Tokenizer",
122:       "weka.filters.unsupervised.instance.RemoveWithValues",
123:       "weka.core.NoSupportForMissingValuesException",
124:       "weka.classifiers.UpdateableClassifier",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
126:       "weka.core.MultiInstanceCapabilitiesHandler",
127:       "weka.classifiers.meta.MultiClassClassifier$ExhaustiveCode",
128:       "weka.core.Copyable",
129:       "weka.core.Capabilities",
130:       "weka.core.BinarySparseInstance",
131:       "weka.core.AttributeLocator",
132:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
133:       "weka.core.SerializedObject",
134:       "weka.classifiers.meta.RegressionByDiscretization",
135:       "weka.clusterers.UpdateableClusterer",
136:       "weka.attributeSelection.BestFirst",
137:       "weka.core.Summarizable",
138:       "weka.classifiers.trees.j48.ModelSelection",
139:       "weka.core.AdditionalMeasureProducer",
140:       "weka.core.neighboursearch.balltrees.BallNode",
141:       "org.pentaho.packageManagement.PackageManager$1",
142:       "weka.classifiers.meta.MultiClassClassifier",
143:       "weka.core.Drawable",
144:       "weka.core.Optimization",
145:       "weka.core.matrix.Matrix",
146:       "weka.classifiers.ConditionalDensityEstimator",
147:       "weka.core.CapabilitiesHandler",
148:       "weka.attributeSelection.ASEvaluation",
149:       "weka.core.AbstractInstance",
150:       "weka.core.scripting.JythonObject",
151:       "weka.core.SelectedTag",
152:       "org.pentaho.packageManagement.DefaultPackage",
153:       "weka.classifiers.bayes.BayesNet",
154:       "weka.classifiers.misc.InputMappedClassifier",
155:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
156:       "weka.core.Version",
157:       "weka.classifiers.meta.MultiClassClassifier$Code",
158:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
159:       "weka.filters.unsupervised.attribute.RemoveUseless",
160:       "weka.core.Tag",
161:       "weka.classifiers.trees.j48.BinC45ModelSelection",
162:       "weka.classifiers.AbstractClassifier",
163:       "weka.estimators.UnivariateDensityEstimator",
164:       "weka.filters.unsupervised.attribute.Center",
165:       "weka.core.OptionHandler",
166:       "weka.core.WekaException",
167:       "weka.filters.StreamableFilter",
168:       "weka.core.Range",
169:       "weka.core.PartitionGenerator",
170:       "weka.core.scripting.JythonSerializableObject",
171:       "weka.classifiers.Classifier",
172:       "weka.core.Capabilities$Capability",
173:       "weka.core.SparseInstance",
174:       "org.pentaho.packageManagement.PackageManager",
175:       "weka.classifiers.trees.j48.ClassifierSplitModel",
176:       "weka.attributeSelection.AttributeTransformer",
177:       "weka.core.tokenizers.WordTokenizer",
178:       "weka.classifiers.misc.SerializedClassifier",
179:       "weka.classifiers.trees.j48.ClassifierTree",
180:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
181:       "weka.attributeSelection.PrincipalComponents",
182:       "weka.core.stemmers.SnowballStemmer",
183:       "weka.classifiers.trees.j48.PruneableClassifierTree",
184:       "weka.classifiers.Evaluation",
185:       "weka.classifiers.functions.supportVector.Kernel",
186:       "weka.attributeSelection.ASSearch",
187:       "weka.core.WekaPackageManager",
188:       "weka.filters.SupervisedFilter",
189:       "weka.core.TechnicalInformationHandler",
190:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
191:       "weka.attributeSelection.StartSetHandler",
192:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
193:       "weka.classifiers.meta.CostSensitiveClassifier",
194:       "weka.core.Option",
195:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
196:       "weka.filters.Sourcable",
197:       "weka.classifiers.meta.MultiClassClassifier$StandardCode",
198:       "weka.core.Attribute",
199:       "weka.core.Stopwords",
200:       "weka.core.FastVector",
201:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
202:       "weka.core.UnassignedDatasetException",
203:       "weka.core.tokenizers.NGramTokenizer",
204:       "weka.classifiers.RandomizableClassifier",
205:       "weka.classifiers.SingleClassifierEnhancer",
206:       "weka.core.RevisionUtils",
207:       "weka.core.Instance",
208:       "weka.estimators.Estimator",
209:       "weka.core.ProtectedProperties",
210:       "weka.classifiers.IntervalEstimator",
211:       "weka.core.StringLocator",
212:       "weka.classifiers.bayes.net.ADNode",
213:       "weka.core.Matchable",
214:       "weka.core.AttributeStats",
215:       "weka.core.WeightedInstancesHandler",
216:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
217:       "weka.filters.unsupervised.attribute.Discretize",
218:       "weka.filters.unsupervised.attribute.Remove",
219:       "weka.core.Randomizable",
220:       "weka.classifiers.trees.j48.NoSplit",
221:       "weka.classifiers.meta.AttributeSelectedClassifier",
222:       "weka.core.Instances",
223:       "weka.classifiers.bayes.NaiveBayesMultinomial",
224:       "weka.core.UnassignedClassException",
225:       "weka.classifiers.bayes.net.BIFReader",
226:       "weka.classifiers.bayes.net.ParentSet",
227:       "weka.classifiers.rules.ZeroR",
228:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
229:       "weka.filters.unsupervised.attribute.Standardize",
230:       "weka.core.UnsupportedAttributeTypeException",
231:       "weka.core.TechnicalInformation",
232:       "weka.classifiers.Sourcable",
233:       "weka.classifiers.functions.Logistic$OptEngCG",
234:       "weka.classifiers.functions.Logistic$OptEng",
235:       "weka.core.RevisionHandler",
236:       "weka.classifiers.evaluation.output.prediction.PlainText",
237:       "weka.core.xml.XMLSerialization",
238:       "weka.filters.unsupervised.attribute.MakeIndicator",
239:       "weka.classifiers.xml.XMLClassifier",
240:       "weka.filters.Filter",
241:       "weka.filters.supervised.attribute.Discretize"
242:     );
243:   } 
244: 
245:   private static void resetClasses() {
246:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_68_tmp__ESTest_scaffolding.class.getClassLoader()); 
247: 
248:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
249:       "weka.classifiers.AbstractClassifier",
250:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
251:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
252:       "weka.core.Capabilities$Capability",
253:       "weka.core.tokenizers.Tokenizer",
254:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
255:       "weka.core.tokenizers.WordTokenizer",
256:       "weka.core.stemmers.NullStemmer",
257:       "weka.classifiers.Evaluation",
258:       "weka.core.Utils",
259:       "weka.core.Option",
260:       "weka.core.Instances",
261:       "weka.core.converters.ArffLoader$ArffReader",
262:       "weka.core.AbstractInstance",
263:       "weka.core.SparseInstance",
264:       "weka.core.BinarySparseInstance",
265:       "weka.core.UnassignedDatasetException",
266:       "weka.classifiers.bayes.NaiveBayes",
267:       "weka.core.TechnicalInformation",
268:       "weka.core.TechnicalInformation$Type",
269:       "weka.core.TechnicalInformation$Field",
270:       "weka.core.Tag",
271:       "weka.classifiers.functions.SMO",
272:       "weka.classifiers.functions.supportVector.Kernel",
273:       "weka.classifiers.functions.supportVector.CachedKernel",
274:       "weka.classifiers.functions.supportVector.PolyKernel",
275:       "weka.core.SerializedObject",
276:       "weka.core.Capabilities",
277:       "org.pentaho.packageManagement.PackageManager",
278:       "org.pentaho.packageManagement.DefaultPackageManager",
279:       "weka.core.Version",
280:       "weka.core.Environment",
281:       "weka.core.WekaPackageManager",
282:       "weka.core.neighboursearch.NearestNeighbourSearch",
283:       "weka.core.neighboursearch.CoverTree",
284:       "weka.core.NormalizableDistance",
285:       "weka.core.EuclideanDistance",
286:       "weka.core.Range",
287:       "weka.classifiers.bayes.BayesNet",
288:       "weka.classifiers.bayes.net.BIFReader",
289:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
290:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
291:       "weka.classifiers.bayes.net.search.local.K2",
292:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
293:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
294:       "weka.core.RevisionUtils",
295:       "weka.core.TestInstances",
296:       "weka.core.tokenizers.NGramTokenizer",
297:       "weka.classifiers.RandomizableClassifier",
298:       "weka.classifiers.functions.SGDText",
299:       "weka.core.Attribute",
300:       "weka.core.ProtectedProperties",
301:       "weka.core.DenseInstance",
302:       "weka.core.neighboursearch.balltrees.BallNode",
303:       "weka.classifiers.lazy.IBk",
304:       "weka.core.neighboursearch.LinearNNSearch",
305:       "weka.core.neighboursearch.BallTree",
306:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
307:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
308:       "weka.core.neighboursearch.balltrees.BallSplitter",
309:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
310:       "weka.classifiers.SingleClassifierEnhancer",
311:       "weka.classifiers.misc.InputMappedClassifier",
312:       "weka.classifiers.rules.ZeroR",
313:       "weka.core.FindWithCapabilities",
314:       "weka.core.SingleIndex",
315:       "weka.core.stemmers.SnowballStemmer",
316:       "weka.classifiers.misc.SerializedClassifier",
317:       "weka.attributeSelection.ASEvaluation",
318:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
319:       "weka.attributeSelection.PrincipalComponents",
320:       "weka.filters.Filter",
321:       "weka.filters.supervised.attribute.Discretize",
322:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
323:       "weka.classifiers.meta.CostSensitiveClassifier",
324:       "weka.classifiers.CostMatrix",
325:       "weka.core.stemmers.LovinsStemmer",
326:       "weka.core.stemmers.IteratedLovinsStemmer",
327:       "weka.classifiers.bayes.NaiveBayesMultinomial",
328:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
329:       "weka.core.WekaEnumeration",
330:       "weka.core.Attribute$1",
331:       "weka.core.SerializationHelper",
332:       "weka.classifiers.meta.MultiClassClassifier",
333:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
334:       "weka.classifiers.functions.Logistic",
335:       "weka.core.Stopwords",
336:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
337:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
338:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
339:       "weka.core.WekaException",
340:       "weka.core.UnsupportedAttributeTypeException",
341:       "weka.core.MinkowskiDistance",
342:       "weka.estimators.Estimator",
343:       "weka.estimators.DiscreteEstimator",
344:       "weka.classifiers.meta.RegressionByDiscretization",
345:       "weka.filters.unsupervised.attribute.Discretize",
346:       "weka.classifiers.trees.J48",
347:       "weka.classifiers.functions.LinearRegression",
348:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
349:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
350:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
351:       "weka.classifiers.meta.ClassificationViaRegression",
352:       "weka.classifiers.trees.m5.M5Base",
353:       "weka.classifiers.trees.M5P",
354:       "weka.classifiers.functions.SMOreg",
355:       "weka.classifiers.functions.supportVector.RegOptimizer",
356:       "weka.classifiers.functions.supportVector.RegSMO",
357:       "weka.classifiers.functions.supportVector.RegSMOImproved",
358:       "weka.classifiers.functions.supportVector.RBFKernel",
359:       "weka.classifiers.trees.j48.ClassifierTree",
360:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
361:       "weka.core.tokenizers.AlphabeticTokenizer",
362:       "weka.classifiers.functions.SGD",
363:       "weka.core.UnassignedClassException",
364:       "weka.classifiers.rules.M5Rules",
365:       "weka.classifiers.trees.LMT",
366:       "weka.classifiers.lazy.LWL",
367:       "weka.classifiers.trees.DecisionStump",
368:       "weka.classifiers.meta.AttributeSelectedClassifier",
369:       "weka.attributeSelection.CfsSubsetEval",
370:       "weka.attributeSelection.ASSearch",
371:       "weka.attributeSelection.BestFirst",
372:       "weka.attributeSelection.CorrelationAttributeEval",
373:       "weka.attributeSelection.ReliefFAttributeEval",
374:       "weka.core.matrix.Matrix",
375:       "weka.filters.AllFilter",
376:       "weka.classifiers.rules.PART",
377:       "weka.classifiers.rules.part.MakeDecList",
378:       "weka.core.neighboursearch.KDTree",
379:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
380:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
381:       "weka.attributeSelection.WrapperSubsetEval",
382:       "weka.estimators.PoissonEstimator",
383:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
384:       "weka.classifiers.rules.JRip",
385:       "weka.attributeSelection.AttributeSelection",
386:       "weka.classifiers.MultipleClassifiersCombiner",
387:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
388:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
389:       "weka.classifiers.meta.Stacking",
390:       "weka.classifiers.trees.RandomForest",
391:       "weka.classifiers.trees.RandomTree",
392:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
393:       "weka.classifiers.meta.MultiScheme",
394:       "weka.classifiers.functions.VotedPerceptron",
395:       "weka.attributeSelection.OneRAttributeEval",
396:       "weka.estimators.NormalEstimator",
397:       "weka.classifiers.functions.MultilayerPerceptron",
398:       "weka.core.FastVector",
399:       "weka.filters.unsupervised.attribute.NominalToBinary",
400:       "weka.classifiers.functions.neural.SigmoidUnit",
401:       "weka.classifiers.functions.neural.LinearUnit",
402:       "weka.classifiers.lazy.KStar",
403:       "weka.filters.SimpleFilter",
404:       "weka.filters.SimpleStreamFilter",
405:       "weka.filters.MultiFilter",
406:       "weka.classifiers.rules.OneR",
407:       "weka.classifiers.meta.FilteredClassifier",
408:       "weka.filters.supervised.attribute.AttributeSelection",
409:       "weka.attributeSelection.GreedyStepwise",
410:       "weka.attributeSelection.InfoGainAttributeEval",
411:       "weka.core.ManhattanDistance",
412:       "weka.classifiers.functions.SimpleLogistic",
413:       "weka.classifiers.rules.DecisionTable",
414:       "weka.classifiers.IteratedSingleClassifierEnhancer",
415:       "weka.classifiers.meta.AdditiveRegression",
416:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
417:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
418:       "weka.classifiers.meta.Bagging",
419:       "weka.classifiers.trees.REPTree",
420:       "weka.estimators.MahalanobisEstimator",
421:       "weka.core.ClassDiscovery",
422:       "weka.classifiers.meta.CVParameterSelection",
423:       "weka.attributeSelection.GainRatioAttributeEval",
424:       "weka.classifiers.functions.GaussianProcesses",
425:       "weka.classifiers.functions.supportVector.StringKernel",
426:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
427:       "weka.core.stemmers.Stemming",
428:       "weka.core.Check",
429:       "weka.core.CheckOptionHandler",
430:       "weka.core.converters.ConverterUtils$DataSource",
431:       "weka.core.converters.AbstractLoader",
432:       "weka.core.converters.AbstractFileLoader",
433:       "weka.core.converters.ArffLoader",
434:       "weka.core.SelectedTag",
435:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
436:       "weka.classifiers.meta.LogitBoost",
437:       "weka.core.AttributeStats",
438:       "weka.classifiers.meta.RandomCommittee",
439:       "weka.classifiers.functions.supportVector.Puk",
440:       "weka.classifiers.meta.AdaBoostM1",
441:       "weka.classifiers.meta.Vote",
442:       "weka.core.Javadoc",
443:       "weka.core.TechnicalInformationHandlerJavadoc",
444:       "weka.classifiers.functions.SimpleLinearRegression",
445:       "weka.estimators.KernelEstimator",
446:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
447:       "weka.core.GlobalInfoJavadoc"
448:     );
449:   }
450: }

[MASTER] 06:26:15.003 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
MultiClassClassifierUpdateable multiClassClassifierUpdateable0 = new MultiClassClassifierUpdateable();
AbstractClassifier.makeCopies(naiveBayesMultinomialText0, 25);
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>(25, 1, true);
Integer integer0 = new Integer(1);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.put(integer0, linkedHashMap1);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
naiveBayesMultinomialText0.getCapabilities();
naiveBayesMultinomialText0.setPeriodicPruning(3);
naiveBayesMultinomialText0.pruneDictionary();
assertEquals(3, naiveBayesMultinomialText0.getPeriodicPruning());

TestInstances testInstances0 = new TestInstances();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
String string0 = naiveBayesMultinomialText1.minWordFrequencyTipText();
assertEquals("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value", string0);


[MASTER] 06:26:17.938 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 06:26:19.069 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18382
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 06:27:22.944 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:27:22.970 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:27:22.996 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 06:27:23.086 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1018
* Starting evolution
* Search finished after 133s and 17 generations, 16433 statements, best individual has fitness: 3224.0
[MASTER] 06:29:42.201 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 17 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 96%
* Total number of goals: 647
* Number of covered goals: 621
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 90%
* Total number of goals: 441
* Number of covered goals: 397
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 26
* Number of covered goals: 26
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 88%
* Total number of goals: 678
* Number of covered goals: 598
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 37%
* Total number of goals: 244
* Number of covered goals: 90
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 93%
* Total number of goals: 124
* Number of covered goals: 115
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 93%
* Total number of goals: 124
* Number of covered goals: 115
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 83%
* Total number of goals: 441
* Number of covered goals: 366
* Generated 161 tests with total length 3030
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 06:36:57.231 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.8738875% of time used, but only 57/161 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 14%
* Compiling and checking tests
* Permissions denied during test execution: 
[MASTER] 06:38:32.671 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
