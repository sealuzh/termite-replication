* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: com.lts.application.international.MessageFormatter
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: com.lts.io.ArchiveScanner
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/78_caloriecount/evosuite-files/evosuite.properties
* Connecting to master process on port 11927
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/78_caloriecount/evosuite-files/evosuite.properties
* Connecting to master process on port 11925
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 09:47:21.531 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:47:21.541 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:47:21.543 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 09:47:22.102 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 09:47:22.195 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:47:22.207 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:47:22.212 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 09:47:22.712 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 09:47:22.718 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 09:47:22.727 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.lts.io.ArchiveScanner
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 09:47:23.472 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 09:47:23.473 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1023
* Starting evolution
* Finished analyzing classpath
* Generating tests for class com.lts.application.international.MessageFormatter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1023
* Starting evolution
[MASTER] 09:47:26.644 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 09:47:42.834 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 09:47:58.839 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 09:47:58.914 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
* Search finished after 121s and 398 generations, 182518 statements, best individual has fitness: 328.0
* Search finished after 121s and 347 generations, 82162 statements, best individual has fitness: 608.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 85%
* Total number of goals: 67
* Number of covered goals: 57
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 87%
* Total number of goals: 45
* Number of covered goals: 39
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 202
* Number of covered goals: 185
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 80%
* Total number of goals: 5
* Number of covered goals: 4
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 87%
* Total number of goals: 45
* Number of covered goals: 39
* Generated 42 tests with total length 376
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 91%
* Total number of goals: 130
* Number of covered goals: 118
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 88%
* Total number of goals: 52
* Number of covered goals: 46
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 26
* Number of covered goals: 26
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 94%
* Total number of goals: 150
* Number of covered goals: 141
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 34%
* Total number of goals: 50
* Number of covered goals: 17
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 88%
* Total number of goals: 24
* Number of covered goals: 21
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 52
* Number of covered goals: 46
* Generated 49 tests with total length 230
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
* Resulting test suite's mutation score: 55%
* Compiling and checking tests
[MASTER] 09:49:39.080 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 09:49:39.080 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ImprovedFile improvedFile0 = new ImprovedFile("dir0");
ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
assertTrue(boolean0);


[MASTER] 09:49:39.739 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<2> but was:<0>
[MASTER] 09:49:39.739 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ImprovedFile improvedFile0 = new ImprovedFile("17");
ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
int int0 = archiveScanner0.toFileType(improvedFile0);
assertEquals(2, int0);


* Writing JUnit test case 'MessageFormatter_ESTest' to /home/ubuntu/termite/rmosa/tests/s1023/78_caloriecount/evosuite-tests
* Done!

* Computation finished
[MASTER] 09:49:43.850 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<2> but was:<0>
[MASTER] 09:49:43.851 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileSystemHandling.shouldAllThrowIOExceptions();
ImprovedFile improvedFile0 = new ImprovedFile("u$L", "u$L");
ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
String[] stringArray0 = new String[1];
archiveScanner0.excludes = stringArray0;
Vector<InputStream> vector0 = new Vector<InputStream>();
archiveScanner0.filesExcluded = vector0;
improvedFile0.toPath();
stringArray0[0] = "u$L";
archiveScanner0.setIncludes(stringArray0);
archiveScanner0.processFile("u$L");
int int0 = archiveScanner0.toFileType(improvedFile0);
assertEquals(2, int0);


* Writing JUnit test case 'ArchiveScanner_ESTest' to /home/ubuntu/termite/rmosa/tests/s1023/78_caloriecount/evosuite-tests
* Done!

* Computation finished
