* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.jcvi.jillion.core.util.FileIterator
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 18382
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 06:02:27.336 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:02:27.635 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:02:27.643 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 06:02:27.677 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.util.FileIterator
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1018
* Starting evolution
[MASTER] 06:02:32.622 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 121s and 434 generations, 156436 statements, best individual has fitness: 600.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 107
* Number of covered goals: 102
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 67
* Number of covered goals: 66
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 98%
* Total number of goals: 53
* Number of covered goals: 52
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 74
* Number of covered goals: 40
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 28
* Number of covered goals: 14
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 28
* Number of covered goals: 14
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 93%
* Total number of goals: 67
* Number of covered goals: 62
* Generated 33 tests with total length 284
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 66%
* Compiling and checking tests
* Writing JUnit test case 'FileIterator_ESTest' to /home/ubuntu/termite/rmosa/tests/s1018/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.jcvi.jillion.core.Range
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 18383
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 06:13:17.240 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:13:17.349 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 06:13:17.351 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToDoubleFunction
[MASTER] 06:13:17.363 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToIntFunction
[MASTER] 06:13:17.365 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToLongFunction
[MASTER] 06:13:17.690 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:13:17.691 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.Range
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1018
* Starting evolution
[MASTER] 06:13:25.803 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$RangeIterator.hasNext()Z: Line 1000
[MASTER] 06:13:25.803 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$RangeIterator.hasNext()Z: Line 1009
[MASTER] 06:13:25.803 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$RangeIterator.next()Ljava/lang/Long;: Line 1015
[MASTER] 06:13:25.807 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 139: org.jcvi.jillion.core.Range.canFitInSignedShort(JJ)Z:497 - ReplaceComparisonOperator < -> <=
[MASTER] 06:13:25.811 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2207: org.jcvi.jillion.core.Range$RangeIterator.hasNext()Z:1000 - ReplaceComparisonOperator != -> >
[MASTER] 06:13:25.811 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2218: org.jcvi.jillion.core.Range$RangeIterator.hasNext()Z:1009 - ReplaceComparisonOperator > -> !=
[MASTER] 06:13:25.811 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2226: org.jcvi.jillion.core.Range$RangeIterator.next()Ljava/lang/Long;:1015 - ReplaceArithmeticOperator + -> %
[MASTER] 06:13:25.811 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2227: org.jcvi.jillion.core.Range$RangeIterator.next()Ljava/lang/Long;:1015 - ReplaceArithmeticOperator + -> -
[MASTER] 06:13:25.811 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2228: org.jcvi.jillion.core.Range$RangeIterator.next()Ljava/lang/Long;:1015 - ReplaceArithmeticOperator + -> *
[MASTER] 06:13:25.812 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2229: org.jcvi.jillion.core.Range$RangeIterator.next()Ljava/lang/Long;:1015 - ReplaceArithmeticOperator + -> /
[MASTER] 06:13:25.812 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.Range.asRange()Lorg/jcvi/jillion/core/Range;
[MASTER] 06:13:25.812 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.Range.toString()Ljava/lang/String;
[MASTER] 06:13:25.813 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.Range.getLength()J
[MASTER] 06:13:25.813 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.Range.intersects(Lorg/jcvi/jillion/core/Range;)Z
[MASTER] 06:13:25.813 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.Range.Builder.<init>(Lorg/jcvi/jillion/core/Range;)V
[MASTER] 06:13:25.813 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.Range.Builder.contractBegin(J)Lorg/jcvi/jillion/core/Range$Builder;
[MASTER] 06:13:25.837 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.parseRange(Ljava/lang/String;Lorg/jcvi/jillion/core/Range$CoordinateSystem;)Lorg/jcvi/jillion/core/Range;
[MASTER] 06:13:25.844 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.asRange()Lorg/jcvi/jillion/core/Range;
[MASTER] 06:13:25.848 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.toString()Ljava/lang/String;
[MASTER] 06:13:25.848 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.getLength()J
[MASTER] 06:13:25.849 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.intersects(Lorg/jcvi/jillion/core/Range;)Z
[MASTER] 06:13:25.849 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.Builder.<init>(Lorg/jcvi/jillion/core/Range;)V
[MASTER] 06:13:25.855 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.Builder.contractBegin(J)Lorg/jcvi/jillion/core/Range$Builder;
[MASTER] 06:13:25.865 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$RangeIterator.hasNext()Z: I28 Branch 155 IFGT L1009 - false in context: 
[MASTER] 06:13:25.881 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$RangeIterator.hasNext()Z: I6 Branch 153 IFNE L1000 - true in context: 
[MASTER] 06:13:25.890 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$RangeIterator.next()Ljava/lang/Long;: root-Branch in context: 
[MASTER] 06:13:55.875 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: Line 528
[MASTER] 06:13:55.876 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 839
[MASTER] 06:13:55.881 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.<init>(SJ)V: Line 1541
[MASTER] 06:13:55.881 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.<init>(SJ)V: Line 1542
[MASTER] 06:13:55.881 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.<init>(SJ)V: Line 1543
[MASTER] 06:13:55.881 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.<init>(SJ)V: Line 1545
[MASTER] 06:13:55.881 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getBegin()J: Line 1557
[MASTER] 06:13:55.881 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getLength()J: Line 1562
[MASTER] 06:13:55.881 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J: Line 1567
[MASTER] 06:13:55.883 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 240: org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;:525 - ReplaceComparisonOperator > -> -2
[MASTER] 06:13:55.883 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1113: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator + -> %
[MASTER] 06:13:55.883 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1114: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator + -> -
[MASTER] 06:13:55.883 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1115: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator + -> *
[MASTER] 06:13:55.883 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1116: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator + -> /
[MASTER] 06:13:55.883 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1120: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator - -> +
[MASTER] 06:13:55.883 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1121: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator - -> %
[MASTER] 06:13:55.883 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1122: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator - -> *
[MASTER] 06:13:55.883 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1123: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator - -> /
[MASTER] 06:13:55.887 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getBegin()J: root-Branch in context: 
[MASTER] 06:13:55.888 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getLength()J: root-Branch in context: 
[MASTER] 06:13:55.888 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I29 Branch 19 IFGT L525 - true in context: 
[MASTER] 06:13:55.888 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: I48 Branch 51 IFNE L838 - false in context: org.jcvi.jillion.core.Range:complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;
[MASTER] 06:13:55.888 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J: root-Branch in context: 
[MASTER] 06:15:04.143 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 954
[MASTER] 06:15:04.143 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 955
[MASTER] 06:15:04.144 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 956
[MASTER] 06:15:04.144 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 957
[MASTER] 06:15:04.144 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 958
[MASTER] 06:15:04.144 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 959
[MASTER] 06:15:04.144 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 960
[MASTER] 06:15:04.148 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 569: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:951 - ReplaceComparisonOperator >= -> ==
[MASTER] 06:15:04.149 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 578: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:956 - ReplaceComparisonOperator > -> !=
[MASTER] 06:15:04.149 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 589: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator + -> %
[MASTER] 06:15:04.149 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 590: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator + -> -
[MASTER] 06:15:04.149 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 591: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator + -> *
[MASTER] 06:15:04.149 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 592: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator + -> /
[MASTER] 06:15:04.149 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 596: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator - -> +
[MASTER] 06:15:04.149 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 597: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator - -> %
[MASTER] 06:15:04.149 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 598: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator - -> *
[MASTER] 06:15:04.149 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 599: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator - -> /
[MASTER] 06:15:04.149 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 616: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:959 - ReplaceArithmeticOperator + -> %
[MASTER] 06:15:04.149 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 617: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:959 - ReplaceArithmeticOperator + -> -
[MASTER] 06:15:04.149 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 618: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:959 - ReplaceArithmeticOperator + -> *
[MASTER] 06:15:04.149 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 619: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:959 - ReplaceArithmeticOperator + -> /
[MASTER] 06:15:04.150 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: I61 Branch 62 IFGT L956 - false in context: org.jcvi.jillion.core.Range:split(J)Ljava/util/List;
[MASTER] 06:15:04.150 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: I38 Branch 61 IFGE L951 - true in context: org.jcvi.jillion.core.Range:split(J)Ljava/util/List;
* Search finished after 132s and 44 generations, 23333 statements, best individual has fitness: 8080.0
[MASTER] 06:15:33.267 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 14 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 68%
* Total number of goals: 632
* Number of covered goals: 430
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 70%
* Total number of goals: 426
* Number of covered goals: 300
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 52%
* Total number of goals: 802
* Number of covered goals: 419
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 77
* Number of covered goals: 39
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 37%
* Total number of goals: 107
* Number of covered goals: 40
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 37%
* Total number of goals: 107
* Number of covered goals: 40
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 70%
* Total number of goals: 426
* Number of covered goals: 299
* Generated 165 tests with total length 1180
* Resulting test suite's coverage: 61% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 27%
* Compiling and checking tests
[MASTER] 06:19:12.418 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.IndexOutOfBoundsException: given length -9223372036854775808 would make range [32767 - ? ] beyond max allowed end offset
[MASTER] 06:19:12.419 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.ZERO_BASED;
long long0 = (-9223372036854775808L);
Range.Builder range_Builder0 = new Range.Builder(range_CoordinateSystem1, 32767L, (-9223372036854775808L));
range_Builder0.build();

[MASTER] 06:19:12.588 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 06:19:12.588 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.Builder range_Builder0 = new Range.Builder(0L);
Range range0 = range_Builder0.build();
assertFalse(range0.isEmpty());


[MASTER] 06:19:13.721 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 06:19:13.722 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of((-9223372036854775808L));
List<Range> list0 = range0.complement(range0);
assertTrue(list0.contains(range0));
assertFalse(range0.isEmpty());


[MASTER] 06:19:13.889 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 06:19:13.889 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem.values();
Range range0 = Range.of((-9223372036854775779L));
List<Range> list0 = range0.complement(range0);
range0.equals(list0);
List<Range> list1 = range0.complementFrom(list0);
assertTrue(list1.contains(range0));


[MASTER] 06:19:14.493 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 06:19:14.493 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(4294967294L);
boolean boolean0 = range0.isEmpty();
assertTrue(boolean0);


[MASTER] 06:19:18.061 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 06:19:18.062 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(9223372036854774406L);
Long long0 = new Long(9223372036854774406L);
Range range1 = Range.of(9223372036854774406L, 9223372036854774406L);
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
String string0 = range1.toString(range_CoordinateSystem0);
assertEquals("[ 9223372036854774406 .. 9223372036854774406 ]/0B", string0);

Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.SPACE_BASED;
range1.getBegin(range_CoordinateSystem1);
List<Range> list0 = range0.complement(range1);
assertSame(range1, range0);
assertTrue(list0.contains(range0));


[MASTER] 06:19:18.129 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 06:19:18.129 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, (-2733L), (-2733L));
Object object0 = new Object();
range0.equals((Object) null);
Object object1 = new Object();
boolean boolean0 = range0.intersects(range0);
assertFalse(boolean0);
assertFalse(range0.isEmpty());


[MASTER] 06:19:18.821 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 06:19:18.822 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of((-2147483644L));
Object object0 = new Object();
Object object1 = new Object();
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range1 = Range.of(range_CoordinateSystem0, (-2147483644L), (-2147483644L));
Object object2 = new Object();
boolean boolean0 = range1.equals(object2);
assertFalse(boolean0);

Range range2 = range1.intersection(range0);
assertFalse(range2.isEmpty());
assertSame(range2, range1);
assertNotSame(range1, range0);


[MASTER] 06:19:20.091 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 06:19:20.092 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(2147483637L);
Range range1 = Range.ofLength(2147483637L);
Range range2 = range1.intersection(range0);
assertFalse(range2.isEmpty());
assertNotSame(range2, range0);
assertFalse(range2.equals((Object)range0));


[MASTER] 06:19:21.092 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 06:19:21.092 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(9223372036854774389L);
range0.isEmpty();
Range range1 = Range.ofLength(9223372036854774389L);
boolean boolean0 = range0.intersects(range1);
assertTrue(boolean0);

long long0 = range0.getLength();
assertEquals(1L, long0);

List<Range> list0 = range0.complement(range1);
assertEquals(1, list0.size());
assertTrue(list0.contains(range0));
assertFalse(range0.equals((Object)range1));


[MASTER] 06:19:22.921 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 06:19:22.922 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(9223372036854774389L);
Range range1 = Range.of(9223372036854774389L);
range1.isEmpty();
Range range2 = Range.ofLength(9223372036854774389L);
boolean boolean0 = range2.equals(range1);
long long0 = range1.getLength();
assertEquals(1L, long0);

range2.isEmpty();
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
Range range3 = Range.of(range_CoordinateSystem0, 9223372036854774389L, 9223372036854774389L);
boolean boolean1 = range2.endsBefore(range3);
assertTrue(boolean1 == boolean0);

range3.endsBefore(range2);
List<Range> list0 = range2.complement(range0);
assertTrue(list0.contains(range2));
assertFalse(range0.equals((Object)range2));
assertEquals(1, list0.size());


[MASTER] 06:19:23.619 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<0>
[MASTER] 06:19:23.620 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(2058L, 9223372036854775807L);
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
Range range1 = Range.of(range_CoordinateSystem0, 4294967295L, 9223372036854775807L);
Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.RESIDUE_BASED;
long long0 = range0.getBegin(range_CoordinateSystem1);
assertEquals(2059L, long0);

List<Range> list0 = range1.complement(range0);
assertEquals(1, list0.size());
assertFalse(list0.contains(range1));


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing JUnit test case 'Range_ESTest' to /home/ubuntu/termite/rmosa/tests/s1018/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 18381
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 06:19:46.452 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:19:46.484 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:19:46.485 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 06:19:46.549 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1018
* Starting evolution
[MASTER] 06:20:00.755 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec.encode(ILjava/util/Iterator;)[B
[MASTER] 06:20:00.755 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec.iterator([BLorg/jcvi/jillion/core/Range;)Ljava/util/Iterator;
[MASTER] 06:20:00.755 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec.toString([B)Ljava/lang/String;
[MASTER] 06:20:00.755 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec.encode(ILjava/util/Iterator;)[B
[MASTER] 06:20:00.755 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec.iterator([BLorg/jcvi/jillion/core/Range;)Ljava/util/Iterator;
[MASTER] 06:20:09.240 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 299: org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec.getGappedOffsetFor([BI)I:302 - ReplaceVariable ungappedOffset -> currentGappedOffset
[MASTER] 06:20:09.240 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 300: org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec.getGappedOffsetFor([BI)I:302 - ReplaceVariable ungappedOffset -> currentUngappedOffset
[MASTER] 06:20:09.240 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 305: org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec.getGappedOffsetFor([BI)I:302 - ReplaceVariable currentUngappedOffset -> ungappedOffset
[MASTER] 06:20:09.240 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 311: org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec.getGappedOffsetFor([BI)I:302 - ReplaceComparisonOperator >= -> ==
[MASTER] 06:20:17.287 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 06:20:17.288 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 06:21:02.007 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 122s and 102 generations, 71334 statements, best individual has fitness: 336.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 131
* Number of covered goals: 130
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 74
* Number of covered goals: 73
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 99%
* Total number of goals: 469
* Number of covered goals: 466
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 65%
* Total number of goals: 52
* Number of covered goals: 34
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 83%
* Total number of goals: 18
* Number of covered goals: 15
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 83%
* Total number of goals: 18
* Number of covered goals: 15
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 74
* Number of covered goals: 61
* Generated 86 tests with total length 552
* Resulting test suite's coverage: 95% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 63%
* Compiling and checking tests
[MASTER] 06:22:37.084 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 06:22:37.084 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DefaultNucleotideCodec defaultNucleotideCodec0 = DefaultNucleotideCodec.INSTANCE;
byte[] byteArray0 = new byte[6];
byteArray0[0] = (byte)92;
byteArray0[2] = (byte) (-45);
DefaultNucleotideCodec defaultNucleotideCodec1 = DefaultNucleotideCodec.INSTANCE;
defaultNucleotideCodec1.toString(byteArray0);

* Writing JUnit test case 'DefaultNucleotideCodec_ESTest' to /home/ubuntu/termite/rmosa/tests/s1018/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.jcvi.jillion.assembly.consed.phd.PhdBuilder
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 18381
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 06:27:17.891 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 06:27:17.892 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 06:27:17.908 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 06:27:17.990 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:27:18.014 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:27:18.015 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 06:27:18.260 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 06:27:18.261 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 06:27:18.262 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 06:27:18.263 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 06:27:18.270 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 06:27:18.271 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 06:27:18.272 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 06:27:18.290 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 06:27:18.310 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.assembly.consed.phd.PhdBuilder
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1018
* Starting evolution
* Search finished after 121s and 197 generations, 289875 statements, best individual has fitness: 64.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 93
* Number of covered goals: 93
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 100%
* Total number of goals: 47
* Number of covered goals: 47
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 16
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Generated 23 tests with total length 191
* Resulting test suite's coverage: 97% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 7%
* Compiling and checking tests
[MASTER] 06:29:36.006 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Requested array size exceeds VM limit
[MASTER] 06:29:36.008 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NucleotideSequence nucleotideSequence0 = mock(NucleotideSequence.class, new ViolatedAssumptionAnswer());
doReturn(957L).when(nucleotideSequence0).getLength();
QualitySequence qualitySequence0 = mock(QualitySequence.class, new ViolatedAssumptionAnswer());
doReturn(957L).when(qualitySequence0).getLength();
PhdBuilder phdBuilder0 = new PhdBuilder("[%eozO?54e}JXfX(Y", nucleotideSequence0, qualitySequence0);
PhdBuilder phdBuilder1 = phdBuilder0.copy();
PhdBuilder phdBuilder2 = phdBuilder1.fakePeaks();
PositionSequence positionSequence0 = null;
phdBuilder2.peaks((PositionSequence) null);
NucleotideSequence nucleotideSequence1 = mock(NucleotideSequence.class, new ViolatedAssumptionAnswer());
doReturn(2114L).when(nucleotideSequence1).getLength();
QualitySequence qualitySequence1 = mock(QualitySequence.class, new ViolatedAssumptionAnswer());
ArtificialPhd artificialPhd0 = new ArtificialPhd("[%eozO?54e}JXfX(Y", nucleotideSequence1, qualitySequence1, 8);
NucleotideSequence nucleotideSequence2 = mock(NucleotideSequence.class, new ViolatedAssumptionAnswer());
doReturn(2147483647L).when(nucleotideSequence2).getLength();
QualitySequence qualitySequence2 = mock(QualitySequence.class, new ViolatedAssumptionAnswer());
HashMap<String, String> hashMap0 = new HashMap<String, String>();
LinkedList<PhdWholeReadItem> linkedList0 = new LinkedList<PhdWholeReadItem>();
DefaultPhd defaultPhd0 = new DefaultPhd("fz<YN.lV7", nucleotideSequence2, qualitySequence2, (PositionSequence) null);
List<PhdReadTag> list0 = defaultPhd0.getReadTags();
phdBuilder2.copy();
ArtificialPhd artificialPhd1 = new ArtificialPhd("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", nucleotideSequence2, qualitySequence2, hashMap0, linkedList0, list0, 8);
artificialPhd0.equals(artificialPhd1);
PhdBuilder phdBuilder3 = new PhdBuilder(artificialPhd1);

* Writing JUnit test case 'PhdBuilder_ESTest' to /home/ubuntu/termite/rmosa/tests/s1018/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
