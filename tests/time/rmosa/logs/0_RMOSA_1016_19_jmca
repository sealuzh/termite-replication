* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.SimpleNode
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 19150
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 19152
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 04:17:01.924 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:17:01.942 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:17:01.943 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 04:17:02.414 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.SimpleNode
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1016
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 04:17:12.041 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:17:12.083 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:17:12.084 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 04:17:12.111 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1016
* Starting evolution
[MASTER] 04:18:51.468 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 04:18:51.470 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Search finished after 124s and 125 generations, 116250 statements, best individual has fitness: 176.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 62
* Number of covered goals: 62
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 67
* Number of covered goals: 66
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 121
* Number of covered goals: 109
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 53%
* Total number of goals: 17
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 99%
* Total number of goals: 67
* Number of covered goals: 66
* Generated 40 tests with total length 329
* Resulting test suite's coverage: 94% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 70%
* Compiling and checking tests
* Search finished after 141s and 38 generations, 27835 statements, best individual has fitness: 17432.0
[MASTER] 04:19:38.300 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:19:38.325 [logback-1] WARN  JUnitAnalyzer - Failing test:
 SimpleNode simpleNode0 = new SimpleNode(80);
Node[] nodeArray0 = new Node[9];
nodeArray0[0] = (Node) simpleNode0;
nodeArray0[1] = (Node) simpleNode0;
nodeArray0[2] = (Node) simpleNode0;
nodeArray0[3] = (Node) simpleNode0;
nodeArray0[4] = (Node) simpleNode0;
nodeArray0[5] = (Node) simpleNode0;
nodeArray0[6] = (Node) simpleNode0;
nodeArray0[7] = (Node) simpleNode0;
nodeArray0[8] = (Node) simpleNode0;
simpleNode0.children = nodeArray0;
simpleNode0.jjtAddChild((Node) null, 0);
StringWriter stringWriter0 = new StringWriter();
StringWriter stringWriter1 = new StringWriter();
String string0 = null;
simpleNode0.dump(string0, stringWriter1);

[MASTER] 04:19:40.078 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 25 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Writing JUnit test case 'SimpleNode_ESTest' to /home/ubuntu/termite/rmosa/tests/s1016/19_jmca/evosuite-tests
* Done!

* Computation finished
* Coverage of criterion LINE: 50%
* Total number of goals: 981
* Number of covered goals: 490
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 58%
* Total number of goals: 1707
* Number of covered goals: 990
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 43%
* Total number of goals: 434
* Number of covered goals: 186
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 4
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 58%
* Total number of goals: 1707
* Number of covered goals: 986
* Generated 158 tests with total length 1439
* Resulting test suite's coverage: 55% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
[MASTER] 04:21:25.801 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<4> but was:<3>
[MASTER] 04:21:25.801 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("0GAM*yn f EJ");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 576, 576);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.getNextToken();
assertEquals(4, javaCharStream0.bufpos);
assertEquals(580, javaCharStream0.getBeginColumn());


[MASTER] 04:21:26.350 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager but in org.junit.Assert.fail(Assert.java:88): java.lang.AssertionError: Expecting exception: Error
[MASTER] 04:21:26.350 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("5{");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, Integer.MIN_VALUE, 768);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager0.getNextToken();

[MASTER] 04:21:26.405 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager but in org.junit.Assert.fail(Assert.java:88): java.lang.AssertionError: Expecting exception: Error
[MASTER] 04:21:26.406 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[4];
byteArray0[0] = (byte)15;
byteArray0[1] = (byte)15;
byteArray0[2] = (byte)15;
ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
StringReader stringReader0 = new StringReader("5 Qg]q KH<u)nrZeC");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1966, 76, 5);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
StringReader stringReader1 = new StringReader("");
stringReader1.read();
javaParserTokenManager0.getNextToken();

[MASTER] 04:21:26.492 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager but in org.junit.Assert.fail(Assert.java:88): java.lang.AssertionError: Expecting exception: Error
[MASTER] 04:21:26.492 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("0\":DJq0`cCXh9T0Cl");
char[] charArray0 = new char[9];
charArray0[0] = '=';
charArray0[1] = 'f';
charArray0[2] = '=';
charArray0[3] = 'C';
charArray0[4] = '*';
charArray0[5] = '=';
charArray0[6] = 'f';
charArray0[7] = 'f';
charArray0[8] = 'C';
stringReader0.read(charArray0);
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)15, 61);
StringReader stringReader1 = new StringReader("YY*8OK!+B");
StringReader stringReader2 = new StringReader("0\":DJq0`cCXh9T0Cl");
JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
javaParserTokenManager0.getNextToken();

[MASTER] 04:21:26.546 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<2> but was:<0>
[MASTER] 04:21:26.546 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("PJ3kbu9XD<%");
char[] charArray0 = new char[2];
charArray0[0] = '~';
charArray0[1] = '~';
stringReader0.read(charArray0);
StringReader stringReader1 = new StringReader("L");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1867), (-1867), 3818);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager0.getNextToken();
assertEquals(2, javaCharStream0.bufpos);
assertEquals((-1865), javaCharStream0.getColumn());


[MASTER] 04:21:27.165 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager but in org.junit.Assert.fail(Assert.java:88): java.lang.AssertionError: Expecting exception: Error
[MASTER] 04:21:27.165 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("<DECIMAL_LITERAL>");
StringReader stringReader1 = new StringReader("");
StringReader stringReader2 = new StringReader("5HG \\KhF/d");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (-2168), 3);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.getNextToken();

[MASTER] 04:21:28.464 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<4> but was:<1>
[MASTER] 04:21:28.465 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("0F56%D_vMG");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 441, 122);
JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 3, 441, 92);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
javaParserTokenManager0.getNextToken();
Token token0 = javaParserTokenManager0.getNextToken();
assertEquals(4, javaCharStream1.bufpos);
assertEquals(108, token0.kind);


[MASTER] 04:21:28.839 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager but in org.junit.Assert.fail(Assert.java:88): java.lang.AssertionError: Expecting exception: Error
[MASTER] 04:21:28.840 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader(".D^iia=(# :L2=");
byte[] byteArray0 = new byte[9];
byteArray0[0] = (byte)18;
byteArray0[1] = (byte)121;
byteArray0[2] = (byte)121;
byteArray0[3] = (byte) (-6);
byteArray0[4] = (byte)18;
byteArray0[5] = (byte)18;
byteArray0[6] = (byte)18;
byteArray0[7] = (byte)121;
byteArray0[8] = (byte)18;
ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream1);
ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (byte) (-6), (byte) (-6));
byteArrayInputStream2.close();
DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream1);
dataInputStream1.close();
DataInputStream dataInputStream2 = new DataInputStream(dataInputStream0);
StringReader stringReader1 = new StringReader("2:> C_C(>}G");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (byte)121, (byte)18);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager0.getNextToken();

[MASTER] 04:21:28.979 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager but in org.junit.Assert.fail(Assert.java:88): java.lang.AssertionError: Expecting exception: Error
[MASTER] 04:21:28.980 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("4p)8n");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 60, (-681), 60);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager0.getNextToken();

[MASTER] 04:21:30.953 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager but in org.junit.Assert.fail(Assert.java:88): java.lang.AssertionError: Expecting exception: Error
[MASTER] 04:21:30.953 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("w%}ytHN7}Ty-n)IY.80");
StringReader stringReader1 = new StringReader("w%}ytHN7}Ty-n)IY.80");
char[] charArray0 = new char[7];
charArray0[1] = '5';
charArray0[2] = 'h';
charArray0[3] = ',';
charArray0[4] = 'h';
charArray0[5] = '5';
charArray0[6] = 'T';
stringReader1.read(charArray0);
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 19, 29);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager0.jjround = 123;
JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager1.getNextToken();

[MASTER] 04:21:31.294 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager but in org.junit.Assert.fail(Assert.java:88): java.lang.AssertionError: Expecting exception: Error
[MASTER] 04:21:31.294 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[4];
ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
StringReader stringReader0 = new StringReader("&4<,Q!q&B4(q8D");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)15, (byte)15);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.getNextToken();

[MASTER] 04:21:31.789 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<4> but was:<3>
[MASTER] 04:21:31.789 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader(">>>");
StringReader stringReader1 = new StringReader("void");
FileSystemHandling.createFolder((EvoSuiteFile) null);
char[] charArray0 = new char[7];
charArray0[0] = 'B';
charArray0[1] = 'z';
charArray0[2] = 'u';
charArray0[3] = ' ';
charArray0[4] = 'E';
charArray0[5] = 'a';
charArray0[6] = '\"';
stringReader1.read(charArray0);
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 84, 56);
StringReader stringReader2 = new StringReader("~}3/)");
StringReader stringReader3 = new StringReader("6wKd<gX*ZIe3qZMH");
JavaCharStream javaCharStream1 = new JavaCharStream(stringReader3);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
javaParserTokenManager0.getNextToken();
Token token0 = javaParserTokenManager0.getNextToken();
assertEquals(4, javaCharStream1.bufpos);
assertEquals("<", token0.toString());


[MASTER] 04:21:32.056 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<16>
[MASTER] 04:21:32.058 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("~!YU");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 456, (-567));
StringReader stringReader1 = new StringReader("");
StringReader stringReader2 = new StringReader("03EDGdP8XcPvmO33W");
JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.getNextToken();
assertEquals(0, javaCharStream1.bufpos);
assertEquals(17, javaCharStream1.getEndColumn());


* Writing JUnit test case 'JavaParserTokenManager_ESTest' to /home/ubuntu/termite/rmosa/tests/s1016/19_jmca/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaCharStream
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 19148
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaCharStream
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1016
* Starting evolution
[MASTER] 04:51:45.682 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.soops.CEN4010.JMCA.JParser.JavaCharStream.ReInit(Ljava/io/InputStream;II)V: Line 463
[MASTER] 04:51:45.701 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] com.soops.CEN4010.JMCA.JParser.JavaCharStream.ReInit(Ljava/io/InputStream;II)V
[MASTER] 04:52:31.377 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] com.soops.CEN4010.JMCA.JParser.JavaCharStream.getEndColumn()I
* Search finished after 126s and 21 generations, 15708 statements, best individual has fitness: 2536.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 78%
* Total number of goals: 239
* Number of covered goals: 186
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 81%
* Total number of goals: 216
* Number of covered goals: 174
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 32
* Number of covered goals: 32
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 82%
* Total number of goals: 974
* Number of covered goals: 801
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 83%
* Total number of goals: 36
* Number of covered goals: 30
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 80%
* Total number of goals: 216
* Number of covered goals: 173
* Generated 115 tests with total length 1332
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 36%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'JavaCharStream_ESTest' to /home/ubuntu/termite/rmosa/tests/s1016/19_jmca/evosuite-tests
* Done!

* Computation finished
