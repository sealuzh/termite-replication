* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5239
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 09:02:51.423 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:02:51.453 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:02:51.455 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 09:02:54.912 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 09:02:55.903 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 09:02:55.910 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1022
* Starting evolution
[MASTER] 09:02:59.778 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.<init>(Lweka/classifiers/rules/JRip;)V
[MASTER] 09:03:38.314 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 09:03:58.285 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.NominalAntd.covers(Lweka/core/Instance;)Z
[MASTER] 09:04:34.463 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 124s and 105 generations, 56296 statements, best individual has fitness: 13216.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 35%
* Total number of goals: 705
* Number of covered goals: 245
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 24%
* Total number of goals: 416
* Number of covered goals: 101
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 50%
* Total number of goals: 993
* Number of covered goals: 494
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 28%
* Total number of goals: 93
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 24%
* Total number of goals: 416
* Number of covered goals: 101
* Generated 57 tests with total length 455
* Resulting test suite's coverage: 41% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
[MASTER] 09:05:53.427 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 09:05:54.354 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1022/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5239
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5241
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 09:06:42.554 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:06:42.581 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:06:42.582 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 09:06:42.816 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 09:06:42.845 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 09:06:42.851 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 09:06:43.469 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:06:43.495 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:06:43.496 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 09:06:43.626 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1022
* Starting evolution
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1022
* Starting evolution
[MASTER] 09:06:53.579 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColNameWidth()I: Line 685
[MASTER] 09:06:53.580 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getRowNameWidth()I: Line 723
[MASTER] 09:06:53.580 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getShowStdDev()Z: Line 912
[MASTER] 09:06:53.580 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getShowAverage()Z: Line 949
[MASTER] 09:06:53.581 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getRemoveFilterName()Z: Line 986
[MASTER] 09:06:53.581 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getPrintColNames()Z: Line 1028
[MASTER] 09:06:53.582 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getEnumerateColNames()Z: Line 1107
[MASTER] 09:06:53.582 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getVisibleColCount()I: Line 1184
[MASTER] 09:06:53.583 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getVisibleColCount()I: Line 1185
[MASTER] 09:06:53.583 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getVisibleColCount()I: Line 1186
[MASTER] 09:06:53.583 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getVisibleColCount()I: Line 1187
[MASTER] 09:06:53.583 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getVisibleColCount()I: Line 1190
[MASTER] 09:06:53.583 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getVisibleRowCount()I: Line 1211
[MASTER] 09:06:53.583 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getVisibleRowCount()I: Line 1212
[MASTER] 09:06:53.583 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getVisibleRowCount()I: Line 1213
[MASTER] 09:06:53.583 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getVisibleRowCount()I: Line 1214
[MASTER] 09:06:53.583 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getVisibleRowCount()I: Line 1217
[MASTER] 09:06:53.583 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;: Line 1247
[MASTER] 09:06:53.583 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;: Line 1249
[MASTER] 09:06:53.583 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;: Line 1250
[MASTER] 09:06:53.583 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;: Line 1253
[MASTER] 09:06:53.583 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;: Line 1255
[MASTER] 09:06:53.584 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;: Line 1256
[MASTER] 09:06:53.584 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;: Line 1260
[MASTER] 09:06:53.584 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;: Line 1264
[MASTER] 09:06:53.584 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColHidden(I)Z: Line 1333
[MASTER] 09:06:53.584 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColHidden(I)Z: Line 1334
[MASTER] 09:06:53.584 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getRowHidden(I)Z: Line 1358
[MASTER] 09:06:53.584 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getRowHidden(I)Z: Line 1359
[MASTER] 09:06:53.588 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getDisplayCol(I)I: Line 1631
[MASTER] 09:06:53.588 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getDisplayCol(I)I: Line 1632
[MASTER] 09:06:53.588 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getDisplayCol(I)I: Line 1633
[MASTER] 09:06:53.588 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.trimString(Ljava/lang/String;I)Ljava/lang/String;: Line 1679
[MASTER] 09:06:53.589 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.trimString(Ljava/lang/String;I)Ljava/lang/String;: Line 1682
[MASTER] 09:06:53.714 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.removeFilterName(Ljava/lang/String;)Ljava/lang/String;: Line 1781
[MASTER] 09:06:53.714 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.removeFilterName(Ljava/lang/String;)Ljava/lang/String;: Line 1786
[MASTER] 09:06:53.714 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1812
[MASTER] 09:06:53.714 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1813
[MASTER] 09:06:53.714 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1815
[MASTER] 09:06:53.714 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1816
[MASTER] 09:06:53.714 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1819
[MASTER] 09:06:53.714 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1821
[MASTER] 09:06:53.714 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1824
[MASTER] 09:06:53.714 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1825
[MASTER] 09:06:53.714 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1826
[MASTER] 09:06:53.714 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1827
[MASTER] 09:06:53.714 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1828
[MASTER] 09:06:53.714 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1831
[MASTER] 09:06:53.715 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1833
[MASTER] 09:06:53.715 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1835
[MASTER] 09:06:53.715 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1840
[MASTER] 09:06:53.715 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1841
[MASTER] 09:06:53.723 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 880: weka.experiment.ResultMatrix.setStdDevWidth(I)V:789 - ReplaceComparisonOperator < -> <=
[MASTER] 09:06:53.723 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1156: weka.experiment.ResultMatrix.getVisibleColCount()I:1184 - ReplaceConstant - 0 -> 1
[MASTER] 09:06:53.723 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1157: weka.experiment.ResultMatrix.getVisibleColCount()I:1185 - ReplaceConstant - 0 -> 1
[MASTER] 09:06:53.723 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1173: weka.experiment.ResultMatrix.getVisibleColCount()I:1185 - ReplaceComparisonOperator >= -> -1
[MASTER] 09:06:53.723 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1174: weka.experiment.ResultMatrix.getVisibleColCount()I:1185 - ReplaceComparisonOperator >= -> >
[MASTER] 09:06:53.723 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1191: weka.experiment.ResultMatrix.getVisibleColCount()I:1186 - ReplaceComparisonOperator != -> ==
[MASTER] 09:06:53.723 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1210: weka.experiment.ResultMatrix.getVisibleRowCount()I:1211 - ReplaceConstant - 0 -> 1
[MASTER] 09:06:53.723 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1211: weka.experiment.ResultMatrix.getVisibleRowCount()I:1212 - ReplaceConstant - 0 -> 1
[MASTER] 09:06:53.723 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1227: weka.experiment.ResultMatrix.getVisibleRowCount()I:1212 - ReplaceComparisonOperator >= -> -1
[MASTER] 09:06:53.723 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1228: weka.experiment.ResultMatrix.getVisibleRowCount()I:1212 - ReplaceComparisonOperator >= -> >
[MASTER] 09:06:53.724 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1245: weka.experiment.ResultMatrix.getVisibleRowCount()I:1213 - ReplaceComparisonOperator != -> ==
[MASTER] 09:06:53.724 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1332: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1249 - ReplaceComparisonOperator < -> !=
[MASTER] 09:06:53.724 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1333: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1249 - ReplaceComparisonOperator < -> <=
[MASTER] 09:06:53.724 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1348: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1249 - ReplaceComparisonOperator >= -> -1
[MASTER] 09:06:53.724 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1350: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1249 - ReplaceComparisonOperator >= -> ==
[MASTER] 09:06:53.724 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1351: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1250 - ReplaceComparisonOperator == -> !=
[MASTER] 09:06:53.724 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1367: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1255 - ReplaceComparisonOperator == -> !=
[MASTER] 09:06:53.724 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1386: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1256 - ReplaceConstant - 1 -> 0
[MASTER] 09:06:53.724 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1387: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1256 - ReplaceArithmeticOperator + -> %
[MASTER] 09:06:53.724 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1388: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1256 - ReplaceArithmeticOperator + -> -
[MASTER] 09:06:53.724 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1389: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1256 - ReplaceArithmeticOperator + -> *
[MASTER] 09:06:53.724 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1390: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1256 - ReplaceArithmeticOperator + -> /
[MASTER] 09:06:53.724 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1395: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1256 - ReplaceConstant -   -> 
[MASTER] 09:06:53.724 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1627: weka.experiment.ResultMatrix.getColHidden(I)Z:1333 - ReplaceComparisonOperator < -> !=
[MASTER] 09:06:53.724 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1628: weka.experiment.ResultMatrix.getColHidden(I)Z:1333 - ReplaceComparisonOperator < -> <=
[MASTER] 09:06:53.724 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1643: weka.experiment.ResultMatrix.getColHidden(I)Z:1333 - ReplaceComparisonOperator >= -> -1
[MASTER] 09:06:53.724 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1729: weka.experiment.ResultMatrix.getRowHidden(I)Z:1358 - ReplaceComparisonOperator < -> <=
[MASTER] 09:06:53.728 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1744: weka.experiment.ResultMatrix.getRowHidden(I)Z:1358 - ReplaceComparisonOperator >= -> -1
[MASTER] 09:06:53.729 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3115: weka.experiment.ResultMatrix.getDisplayCol(I)I:1631 - ReplaceComparisonOperator < -> !=
[MASTER] 09:06:53.729 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3116: weka.experiment.ResultMatrix.getDisplayCol(I)I:1631 - ReplaceComparisonOperator < -> <=
[MASTER] 09:06:53.729 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3131: weka.experiment.ResultMatrix.getDisplayCol(I)I:1631 - ReplaceComparisonOperator >= -> -1
[MASTER] 09:06:53.729 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3134: weka.experiment.ResultMatrix.getDisplayCol(I)I:1632 - ReplaceComparisonOperator != null -> = null
[MASTER] 09:06:53.729 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3296: weka.experiment.ResultMatrix.trimString(Ljava/lang/String;I)Ljava/lang/String;:1679 - ReplaceComparisonOperator <= -> -1
[MASTER] 09:06:53.729 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3298: weka.experiment.ResultMatrix.trimString(Ljava/lang/String;I)Ljava/lang/String;:1679 - ReplaceComparisonOperator <= -> <
[MASTER] 09:06:53.729 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3320: weka.experiment.ResultMatrix.trimString(Ljava/lang/String;I)Ljava/lang/String;:1679 - ReplaceComparisonOperator <= -> ==
[MASTER] 09:06:53.729 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3743: weka.experiment.ResultMatrix.removeFilterName(Ljava/lang/String;)Ljava/lang/String;:1781 - ReplaceComparisonOperator == -> !=
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3757: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1813 - ReplaceComparisonOperator == -> !=
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3758: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1816 - ReplaceComparisonOperator == -> !=
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3798: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1819 - ReplaceConstant - 2 -> 0
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3799: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1819 - ReplaceConstant - 2 -> 1
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3800: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1819 - ReplaceConstant - 2 -> -1
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3801: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1819 - ReplaceConstant - 2 -> 3
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3802: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1819 - ReplaceArithmeticOperator * -> +
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3803: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1819 - ReplaceArithmeticOperator * -> %
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3804: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1819 - ReplaceArithmeticOperator * -> -
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3805: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1819 - ReplaceArithmeticOperator * -> /
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3821: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1821 - ReplaceConstant - 2 -> 0
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3822: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1821 - ReplaceConstant - 2 -> 1
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3823: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1821 - ReplaceConstant - 2 -> -1
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3824: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1821 - ReplaceConstant - 2 -> 3
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3825: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1821 - ReplaceArithmeticOperator + -> %
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3826: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1821 - ReplaceArithmeticOperator + -> -
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3827: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1821 - ReplaceArithmeticOperator + -> *
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3828: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1821 - ReplaceArithmeticOperator + -> /
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3844: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1821 - ReplaceConstant - 1 -> 0
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3845: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1821 - ReplaceArithmeticOperator + -> %
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3846: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1821 - ReplaceArithmeticOperator + -> -
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3847: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1821 - ReplaceArithmeticOperator + -> *
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3848: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1821 - ReplaceArithmeticOperator + -> /
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3849: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1824 - ReplaceConstant - 0 -> 1
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3850: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1824 - ReplaceConstant - 0 -> 1
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3851: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1824 - ReplaceConstant - Dataset -> 
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3852: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1825 - ReplaceConstant - 1 -> 0
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3853: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1826 - ReplaceConstant - 0 -> 1
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3871: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1826 - ReplaceComparisonOperator >= -> -1
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3909: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1828 - ReplaceComparisonOperator == -> !=
[MASTER] 09:06:53.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3910: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1831 - ReplaceConstant - 0 -> 1
[MASTER] 09:06:53.731 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3951: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1835 - ReplaceComparisonOperator == -> !=
[MASTER] 09:06:53.732 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;
[MASTER] 09:06:53.735 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;
[MASTER] 09:06:53.736 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.clear()V: root-Branch in context: weka.experiment.ResultMatrix:clear()V
[MASTER] 09:06:53.736 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.trimString(Ljava/lang/String;I)Ljava/lang/String;: I3 Branch 116 IFLE L1679 - false in context: 
[MASTER] 09:06:53.736 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.trimString(Ljava/lang/String;I)Ljava/lang/String;: I7 Branch 117 IF_ICMPLE L1679 - true in context: 
[MASTER] 09:06:53.736 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.trimString(Ljava/lang/String;I)Ljava/lang/String;: I3 Branch 116 IFLE L1679 - true in context: 
[MASTER] 09:06:53.741 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I109 Branch 135 IFEQ L1835 - true in context: 
[MASTER] 09:06:53.741 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;: I7 Branch 46 IFLT L1249 - false in context: weka.experiment.ResultMatrix:getColName(I)Ljava/lang/String;
[MASTER] 09:06:53.741 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I82 Branch 134 IFEQ L1828 - true in context: 
[MASTER] 09:06:53.741 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.removeFilterName(Ljava/lang/String;)Ljava/lang/String;: I4 Branch 130 IFEQ L1781 - true in context: 
[MASTER] 09:06:53.741 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I70 Branch 133 IF_ICMPGE L1826 - false in context: 
[MASTER] 09:06:53.741 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I9 Branch 131 IFEQ L1813 - true in context: 
[MASTER] 09:06:53.741 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;: I11 Branch 47 IF_ICMPGE L1249 - true in context: weka.experiment.ResultMatrix:getColName(I)Ljava/lang/String;
[MASTER] 09:06:53.741 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I22 Branch 132 IFEQ L1816 - true in context: 
[MASTER] 09:07:53.950 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 123s and 140 generations, 93654 statements, best individual has fitness: 3896.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 73%
* Total number of goals: 370
* Number of covered goals: 270
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 60%
* Total number of goals: 242
* Number of covered goals: 146
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 29
* Number of covered goals: 29
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 78%
* Total number of goals: 713
* Number of covered goals: 555
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 72
* Number of covered goals: 39
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 60%
* Total number of goals: 242
* Number of covered goals: 146
* Generated 75 tests with total length 973
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 135s and 17 generations, 13743 statements, best individual has fitness: 3048.0
[MASTER] 09:09:04.342 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 19 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 647
* Number of covered goals: 625
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 93%
* Total number of goals: 441
* Number of covered goals: 409
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 89%
* Total number of goals: 678
* Number of covered goals: 606
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 244
* Number of covered goals: 81
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 90%
* Total number of goals: 124
* Number of covered goals: 111
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 90%
* Total number of goals: 124
* Number of covered goals: 111
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 87%
* Total number of goals: 441
* Number of covered goals: 382
* Generated 168 tests with total length 3011
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 30%
* Compiling and checking tests
[MASTER] 09:12:02.443 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 09:12:02.971 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 09:12:16.839 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 09:12:16.840 [logback-1] WARN  JUnitAnalyzer - Failing test:
 double[][] doubleArray0 = new double[21][2];
double[] doubleArray1 = new double[4];
doubleArray1[2] = 1.0;
doubleArray1[3] = (-1780.18094);
doubleArray0[1] = doubleArray1;
double[] doubleArray2 = new double[1];
double[] doubleArray3 = new double[4];
doubleArray3[0] = 1.0;
doubleArray0[3] = doubleArray3;
FileSystemHandling.shouldAllThrowIOExceptions();
double[] doubleArray4 = new double[8];
doubleArray4[0] = (-1780.18094);
doubleArray4[3] = 1.0;
doubleArray4[5] = 0.0;
doubleArray0[4] = doubleArray4;
double[] doubleArray5 = new double[6];
SystemInUtil.addInputLine("\tInvert matching sense of column indexes.");
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("\tInvert matching sense of column indexes.", arrayList0, 77);
Discretize discretize0 = new Discretize();
Attribute attribute0 = new Attribute(".arff", instances0);
arrayList0.add(attribute0);
SystemInUtil.addInputLine("\tInvert matching sense of column indexes.");
discretize0.setInputFormat(instances0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1022/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 09:14:48.302 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.68494375% of time used, but only 49/168 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1022/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5240
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 09:17:03.929 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 09:17:03.930 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 09:17:03.932 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 09:17:04.070 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:17:04.079 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:17:04.080 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1022
* Starting evolution
[MASTER] 09:17:13.023 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 108
[MASTER] 09:17:13.034 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 148
[MASTER] 09:17:13.034 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 151
[MASTER] 09:17:13.034 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 157
[MASTER] 09:17:13.034 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 166
[MASTER] 09:17:13.034 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 169
[MASTER] 09:17:13.034 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 172
[MASTER] 09:17:13.034 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 175
[MASTER] 09:17:13.035 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 178
[MASTER] 09:17:13.035 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 181
[MASTER] 09:17:13.035 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 184
[MASTER] 09:17:13.064 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: root-Branch
[MASTER] 09:17:13.068 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V
[MASTER] 09:17:13.069 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V
[MASTER] 09:17:13.070 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:<init>()V
[MASTER] 09:17:14.162 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V: Line 724
[MASTER] 09:17:14.162 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V: Line 725
[MASTER] 09:17:14.163 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V: root-Branch
[MASTER] 09:17:14.179 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 289: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_normalize
[MASTER] 09:17:14.179 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 290: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_wordFrequencies
[MASTER] 09:17:14.179 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 291: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_useStopList
[MASTER] 09:17:14.179 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 292: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_lowercaseTokens
[MASTER] 09:17:14.179 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 293: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - InsertUnaryOp Negation of norm
[MASTER] 09:17:14.179 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 294: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - InsertUnaryOp IINC 1 norm
[MASTER] 09:17:14.179 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 295: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - InsertUnaryOp IINC -1 norm
[MASTER] 09:17:14.180 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V
[MASTER] 09:17:14.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V
[MASTER] 09:17:14.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setNormalizeDocLength(Z)V
[MASTER] 09:17:58.690 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 09:17:58.691 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 09:19:05.476 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 124s and 121 generations, 78170 statements, best individual has fitness: 1848.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 338
* Number of covered goals: 295
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 78%
* Total number of goals: 194
* Number of covered goals: 152
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 476
* Number of covered goals: 427
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 61
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 77%
* Total number of goals: 194
* Number of covered goals: 150
* Generated 76 tests with total length 866
* Resulting test suite's coverage: 84% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 53%
* Compiling and checking tests
[MASTER] 09:23:25.678 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_24_1575624205639/weka/classifiers/bayes/NaiveBayesMultinomialText_24_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_24_1575624205639/weka/classifiers/bayes/NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding.java]]
[MASTER] 09:23:25.678 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 09:23:25.678 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 09:23:25.682 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 09:23:25.683 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_24_1575624205639/weka/classifiers/bayes/NaiveBayesMultinomialText_24_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 09:23:25 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: 
16: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
17: public class NaiveBayesMultinomialText_24_tmp__ESTest extends NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding {
18: 
19:   /**
20:   //Test case number: 0
21:   /*Coverage entropy=3.31400451463465
22:   */
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
26:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
27:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
28:       naiveBayesMultinomialText0.m_inputVector = null;
29:       naiveBayesMultinomialText0.setOptions(stringArray0);
30:       assertEquals(12, stringArray0.length);
31:       
32:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
33:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
34:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
35:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
36:       assertFalse(naiveBayesMultinomialText0.getUseStopList());
37:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
38:       assertFalse(naiveBayesMultinomialText0.getLowercaseTokens());
39:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
40:   }
41: }
RegularFileObject[/tmp/EvoSuite_24_1575624205639/weka/classifiers/bayes/NaiveBayesMultinomialText_24_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 09:23:25 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.core.neighboursearch.CoverTree$DistanceNode",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.classifiers.bayes.NaiveBayes",
105:       "weka.core.neighboursearch.CoverTree$MyHeap",
106:       "weka.estimators.IncrementalEstimator",
107:       "weka.estimators.Estimator$Builder",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.EnvironmentHandler",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.AdditionalMeasureProducer",
129:       "weka.core.neighboursearch.balltrees.BallNode",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.attributeSelection.ASEvaluation",
134:       "weka.core.AbstractInstance",
135:       "weka.core.scripting.JythonObject",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.estimators.DiscreteEstimator",
139:       "weka.classifiers.misc.InputMappedClassifier",
140:       "weka.core.Version",
141:       "weka.core.Tag",
142:       "weka.core.neighboursearch.CoverTree",
143:       "weka.classifiers.AbstractClassifier",
144:       "weka.filters.unsupervised.attribute.Center",
145:       "weka.core.OptionHandler",
146:       "weka.core.WekaException",
147:       "weka.filters.StreamableFilter",
148:       "weka.core.Range",
149:       "weka.core.PartitionGenerator",
150:       "weka.core.scripting.JythonSerializableObject",
151:       "weka.classifiers.Classifier",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
153:       "weka.attributeSelection.InfoGainAttributeEval",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.attributeSelection.AttributeTransformer",
158:       "weka.core.tokenizers.WordTokenizer",
159:       "weka.classifiers.misc.SerializedClassifier",
160:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
161:       "weka.attributeSelection.PrincipalComponents",
162:       "weka.core.stemmers.SnowballStemmer",
163:       "weka.classifiers.Evaluation",
164:       "weka.core.WekaPackageManager",
165:       "weka.filters.SupervisedFilter",
166:       "weka.core.TechnicalInformationHandler",
167:       "weka.classifiers.functions.SimpleLogistic",
168:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
169:       "weka.core.Option",
170:       "weka.core.neighboursearch.PerformanceStats",
171:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
172:       "weka.filters.unsupervised.attribute.NumericToBinary",
173:       "weka.estimators.KernelEstimator",
174:       "weka.filters.Sourcable",
175:       "weka.core.Attribute",
176:       "weka.core.Stopwords",
177:       "weka.core.tokenizers.AlphabeticTokenizer",
178:       "weka.core.FastVector",
179:       "weka.core.UnassignedDatasetException",
180:       "weka.classifiers.RandomizableClassifier",
181:       "weka.classifiers.trees.RandomTree",
182:       "weka.classifiers.SingleClassifierEnhancer",
183:       "weka.core.RevisionUtils",
184:       "weka.core.Instance",
185:       "weka.estimators.Estimator",
186:       "weka.core.ProtectedProperties",
187:       "weka.core.StringLocator",
188:       "weka.core.AttributeStats",
189:       "weka.core.WeightedInstancesHandler",
190:       "weka.core.neighboursearch.NearestNeighbourSearch",
191:       "weka.core.neighboursearch.covertrees.Stack",
192:       "weka.filters.unsupervised.attribute.Remove",
193:       "weka.core.Randomizable",
194:       "weka.core.EuclideanDistance",
195:       "weka.core.Instances",
196:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
197:       "weka.core.UnassignedClassException",
198:       "weka.classifiers.rules.ZeroR",
199:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
200:       "weka.filters.unsupervised.attribute.Standardize",
201:       "weka.core.TechnicalInformation",
202:       "weka.core.UnsupportedAttributeTypeException",
203:       "weka.classifiers.Sourcable",
204:       "weka.core.RevisionHandler",
205:       "weka.classifiers.evaluation.output.prediction.PlainText",
206:       "weka.core.neighboursearch.TreePerformanceStats",
207:       "weka.core.xml.XMLSerialization",
208:       "weka.classifiers.xml.XMLClassifier",
209:       "weka.filters.Filter",
210:       "weka.filters.supervised.attribute.Discretize"
211:     );
212:   } 
213: 
214:   private static void resetClasses() {
215:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding.class.getClassLoader()); 
216: 
217:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
218:       "weka.classifiers.AbstractClassifier",
219:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
220:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
221:       "weka.core.Capabilities$Capability",
222:       "weka.core.tokenizers.Tokenizer",
223:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
224:       "weka.core.tokenizers.WordTokenizer",
225:       "weka.core.stemmers.NullStemmer",
226:       "weka.core.Utils",
227:       "weka.core.AbstractInstance",
228:       "weka.core.SparseInstance",
229:       "weka.classifiers.bayes.NaiveBayes",
230:       "weka.classifiers.Evaluation",
231:       "weka.core.Option",
232:       "weka.core.Capabilities",
233:       "org.pentaho.packageManagement.PackageManager",
234:       "org.pentaho.packageManagement.DefaultPackageManager",
235:       "weka.core.Version",
236:       "weka.core.Environment",
237:       "weka.core.WekaPackageManager",
238:       "weka.core.BinarySparseInstance",
239:       "weka.core.UnassignedDatasetException",
240:       "weka.core.stemmers.SnowballStemmer",
241:       "weka.core.Tag",
242:       "weka.classifiers.lazy.IBk",
243:       "weka.core.neighboursearch.NearestNeighbourSearch",
244:       "weka.core.neighboursearch.LinearNNSearch",
245:       "weka.core.NormalizableDistance",
246:       "weka.core.EuclideanDistance",
247:       "weka.core.Range",
248:       "weka.core.neighboursearch.CoverTree",
249:       "weka.core.Instances",
250:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
251:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
252:       "weka.attributeSelection.ASEvaluation",
253:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
254:       "weka.attributeSelection.PrincipalComponents",
255:       "weka.core.TestInstances",
256:       "weka.core.Attribute",
257:       "weka.core.ProtectedProperties",
258:       "weka.core.DenseInstance",
259:       "weka.core.tokenizers.NGramTokenizer",
260:       "weka.classifiers.bayes.BayesNet",
261:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
262:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.K2",
264:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
265:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
266:       "weka.classifiers.functions.SimpleLogistic",
267:       "weka.core.RevisionUtils",
268:       "weka.core.TechnicalInformation",
269:       "weka.core.TechnicalInformation$Type",
270:       "weka.core.TechnicalInformation$Field",
271:       "weka.core.tokenizers.AlphabeticTokenizer",
272:       "weka.core.SerializedObject",
273:       "weka.classifiers.RandomizableClassifier",
274:       "weka.classifiers.functions.SGDText",
275:       "weka.core.neighboursearch.BallTree",
276:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
277:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
278:       "weka.core.neighboursearch.balltrees.BallSplitter",
279:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
280:       "weka.core.stemmers.LovinsStemmer",
281:       "weka.core.stemmers.IteratedLovinsStemmer",
282:       "weka.classifiers.SingleClassifierEnhancer",
283:       "weka.classifiers.misc.InputMappedClassifier",
284:       "weka.classifiers.rules.ZeroR",
285:       "weka.filters.Filter",
286:       "weka.filters.supervised.attribute.Discretize",
287:       "weka.core.Stopwords",
288:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
289:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
290:       "weka.core.neighboursearch.balltrees.BallNode",
291:       "weka.core.neighboursearch.KDTree",
292:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
293:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
294:       "weka.classifiers.functions.VotedPerceptron",
295:       "weka.classifiers.misc.SerializedClassifier",
296:       "weka.classifiers.trees.DecisionStump",
297:       "weka.classifiers.bayes.net.BIFReader",
298:       "weka.classifiers.IteratedSingleClassifierEnhancer",
299:       "weka.classifiers.meta.AdditiveRegression",
300:       "weka.core.converters.ArffLoader$ArffReader",
301:       "weka.classifiers.bayes.NaiveBayesMultinomial",
302:       "weka.attributeSelection.CorrelationAttributeEval",
303:       "weka.core.WekaEnumeration",
304:       "weka.classifiers.functions.LinearRegression",
305:       "weka.core.WekaException",
306:       "weka.core.UnsupportedAttributeTypeException",
307:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
308:       "weka.classifiers.meta.CostSensitiveClassifier",
309:       "weka.classifiers.CostMatrix",
310:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
311:       "weka.classifiers.meta.LogitBoost",
312:       "weka.classifiers.meta.CVParameterSelection",
313:       "weka.core.FastVector",
314:       "weka.core.matrix.Matrix",
315:       "weka.estimators.Estimator",
316:       "weka.estimators.MahalanobisEstimator",
317:       "weka.core.UnassignedClassException",
318:       "weka.classifiers.trees.RandomTree",
319:       "weka.classifiers.functions.supportVector.Kernel",
320:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
321:       "weka.classifiers.meta.AttributeSelectedClassifier",
322:       "weka.attributeSelection.CfsSubsetEval",
323:       "weka.attributeSelection.ASSearch",
324:       "weka.attributeSelection.BestFirst",
325:       "weka.classifiers.trees.J48",
326:       "weka.core.SerializationHelper",
327:       "weka.classifiers.functions.supportVector.CachedKernel",
328:       "weka.classifiers.functions.supportVector.PolyKernel",
329:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
330:       "weka.classifiers.meta.ClassificationViaRegression",
331:       "weka.classifiers.trees.m5.M5Base",
332:       "weka.classifiers.trees.M5P",
333:       "weka.attributeSelection.OneRAttributeEval",
334:       "weka.core.AttributeStats",
335:       "weka.classifiers.rules.OneR",
336:       "weka.core.Attribute$1",
337:       "weka.classifiers.MultipleClassifiersCombiner",
338:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
339:       "weka.classifiers.meta.Vote",
340:       "weka.classifiers.meta.FilteredClassifier",
341:       "weka.filters.supervised.attribute.AttributeSelection",
342:       "weka.attributeSelection.AttributeSelection",
343:       "weka.attributeSelection.GreedyStepwise",
344:       "weka.classifiers.functions.supportVector.StringKernel",
345:       "weka.core.FindWithCapabilities",
346:       "weka.core.SingleIndex",
347:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
348:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
349:       "weka.estimators.NormalEstimator",
350:       "weka.classifiers.rules.PART",
351:       "weka.classifiers.rules.part.MakeDecList",
352:       "weka.classifiers.functions.MultilayerPerceptron",
353:       "weka.filters.unsupervised.attribute.NominalToBinary",
354:       "weka.classifiers.functions.neural.SigmoidUnit",
355:       "weka.classifiers.functions.neural.LinearUnit",
356:       "weka.classifiers.trees.RandomForest",
357:       "weka.attributeSelection.WrapperSubsetEval",
358:       "weka.classifiers.functions.SGD",
359:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
360:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
361:       "weka.classifiers.meta.RandomCommittee",
362:       "weka.attributeSelection.ReliefFAttributeEval",
363:       "weka.core.stemmers.Stemming",
364:       "weka.classifiers.rules.JRip",
365:       "weka.attributeSelection.InfoGainAttributeEval",
366:       "weka.estimators.DiscreteEstimator",
367:       "weka.classifiers.functions.SimpleLinearRegression",
368:       "weka.classifiers.meta.Bagging",
369:       "weka.classifiers.trees.REPTree",
370:       "weka.filters.SimpleFilter",
371:       "weka.filters.SimpleStreamFilter",
372:       "weka.filters.MultiFilter",
373:       "weka.filters.AllFilter",
374:       "weka.classifiers.meta.MultiClassClassifier",
375:       "weka.classifiers.functions.Logistic",
376:       "weka.classifiers.meta.MultiScheme",
377:       "weka.classifiers.trees.LMT",
378:       "weka.classifiers.bayes.NaiveBayesUpdateable",
379:       "weka.classifiers.meta.AdaBoostM1",
380:       "weka.classifiers.meta.RegressionByDiscretization",
381:       "weka.filters.unsupervised.attribute.Discretize",
382:       "weka.classifiers.trees.j48.ClassifierTree",
383:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
384:       "weka.estimators.KernelEstimator",
385:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
386:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
387:       "weka.classifiers.functions.SMOreg",
388:       "weka.classifiers.functions.supportVector.RegOptimizer",
389:       "weka.classifiers.functions.supportVector.RegSMO",
390:       "weka.classifiers.functions.supportVector.RegSMOImproved",
391:       "weka.classifiers.functions.supportVector.Puk",
392:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
393:       "weka.classifiers.functions.GaussianProcesses",
394:       "weka.classifiers.functions.SMO",
395:       "weka.core.SelectedTag",
396:       "weka.core.converters.ConverterUtils$DataSource",
397:       "weka.core.converters.AbstractLoader",
398:       "weka.core.converters.AbstractFileLoader",
399:       "weka.core.converters.ArffLoader",
400:       "weka.attributeSelection.GainRatioAttributeEval",
401:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
402:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
403:       "weka.classifiers.meta.Stacking",
404:       "weka.classifiers.rules.DecisionTable",
405:       "weka.classifiers.functions.supportVector.RBFKernel",
406:       "weka.classifiers.lazy.LWL",
407:       "weka.core.ClassDiscovery",
408:       "weka.estimators.PoissonEstimator",
409:       "weka.classifiers.rules.M5Rules",
410:       "weka.core.neighboursearch.PerformanceStats",
411:       "weka.core.Queue",
412:       "weka.core.AttributeLocator",
413:       "weka.core.StringLocator",
414:       "weka.core.RelationalLocator",
415:       "weka.core.ContingencyTables",
416:       "weka.core.Queue$QueueNode",
417:       "weka.core.Javadoc",
418:       "weka.core.OptionHandlerJavadoc"
419:     );
420:   }
421: }

[MASTER] 09:23:25.683 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.m_inputVector = null;
naiveBayesMultinomialText0.setOptions(stringArray0);
assertEquals(12, stringArray0.length);

naiveBayesMultinomialText0.useWordFrequenciesTipText();
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
assertFalse(naiveBayesMultinomialText0.getUseStopList());
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertFalse(naiveBayesMultinomialText0.getLowercaseTokens());
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);


[MASTER] 09:23:25.805 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_27_1575624205764/weka/classifiers/bayes/NaiveBayesMultinomialText_27_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_27_1575624205764/weka/classifiers/bayes/NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding.java]]
[MASTER] 09:23:25.805 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 09:23:25.805 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 09:23:25.805 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 26
[MASTER] 09:23:25.806 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_27_1575624205764/weka/classifiers/bayes/NaiveBayesMultinomialText_27_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 09:23:25 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: 
16: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
17: public class NaiveBayesMultinomialText_27_tmp__ESTest extends NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding {
18: 
19:   /**
20:   //Test case number: 0
21:   /*Coverage entropy=2.557702411245053
22:   */
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
26:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
27:       String[] stringArray0 = new String[6];
28:       stringArray0[0] = "-lnorm";
29:       stringArray0[1] = "";
30:       stringArray0[2] = "M\\YD";
31:       stringArray0[3] = "\tThe tokenizing algorihtm (classname plus parameters) to use.\n\t(default: ";
32:       stringArray0[4] = "";
33:       stringArray0[5] = "Q!Q";
34:       naiveBayesMultinomialText0.setOptions(stringArray0);
35:       String string0 = naiveBayesMultinomialText0.useWordFrequenciesTipText();
36:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
37:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
38:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
39:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
40:       assertFalse(naiveBayesMultinomialText0.getLowercaseTokens());
41:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
42:       assertEquals("Use word frequencies rather than binary bag of words representation", string0);
43:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
44:       assertFalse(naiveBayesMultinomialText0.getUseStopList());
45:   }
46: }
RegularFileObject[/tmp/EvoSuite_27_1575624205764/weka/classifiers/bayes/NaiveBayesMultinomialText_27_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 09:23:25 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.core.neighboursearch.CoverTree$DistanceNode",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.classifiers.bayes.NaiveBayes",
105:       "weka.core.neighboursearch.CoverTree$MyHeap",
106:       "weka.estimators.IncrementalEstimator",
107:       "weka.estimators.Estimator$Builder",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.EnvironmentHandler",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.AdditionalMeasureProducer",
129:       "weka.core.neighboursearch.balltrees.BallNode",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.attributeSelection.ASEvaluation",
134:       "weka.core.AbstractInstance",
135:       "weka.core.scripting.JythonObject",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.estimators.DiscreteEstimator",
139:       "weka.classifiers.misc.InputMappedClassifier",
140:       "weka.core.Version",
141:       "weka.core.Tag",
142:       "weka.core.neighboursearch.CoverTree",
143:       "weka.classifiers.AbstractClassifier",
144:       "weka.filters.unsupervised.attribute.Center",
145:       "weka.core.OptionHandler",
146:       "weka.core.WekaException",
147:       "weka.filters.StreamableFilter",
148:       "weka.core.Range",
149:       "weka.core.PartitionGenerator",
150:       "weka.core.scripting.JythonSerializableObject",
151:       "weka.classifiers.Classifier",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
153:       "weka.attributeSelection.InfoGainAttributeEval",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.attributeSelection.AttributeTransformer",
158:       "weka.core.tokenizers.WordTokenizer",
159:       "weka.classifiers.misc.SerializedClassifier",
160:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
161:       "weka.attributeSelection.PrincipalComponents",
162:       "weka.core.stemmers.SnowballStemmer",
163:       "weka.classifiers.Evaluation",
164:       "weka.core.WekaPackageManager",
165:       "weka.filters.SupervisedFilter",
166:       "weka.core.TechnicalInformationHandler",
167:       "weka.classifiers.functions.SimpleLogistic",
168:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
169:       "weka.core.Option",
170:       "weka.core.neighboursearch.PerformanceStats",
171:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
172:       "weka.filters.unsupervised.attribute.NumericToBinary",
173:       "weka.estimators.KernelEstimator",
174:       "weka.filters.Sourcable",
175:       "weka.core.Attribute",
176:       "weka.core.Stopwords",
177:       "weka.core.tokenizers.AlphabeticTokenizer",
178:       "weka.core.FastVector",
179:       "weka.core.UnassignedDatasetException",
180:       "weka.classifiers.RandomizableClassifier",
181:       "weka.classifiers.trees.RandomTree",
182:       "weka.classifiers.SingleClassifierEnhancer",
183:       "weka.core.RevisionUtils",
184:       "weka.core.Instance",
185:       "weka.estimators.Estimator",
186:       "weka.core.ProtectedProperties",
187:       "weka.core.StringLocator",
188:       "weka.core.AttributeStats",
189:       "weka.core.WeightedInstancesHandler",
190:       "weka.core.neighboursearch.NearestNeighbourSearch",
191:       "weka.core.neighboursearch.covertrees.Stack",
192:       "weka.filters.unsupervised.attribute.Remove",
193:       "weka.core.Randomizable",
194:       "weka.core.EuclideanDistance",
195:       "weka.core.Instances",
196:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
197:       "weka.core.UnassignedClassException",
198:       "weka.classifiers.rules.ZeroR",
199:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
200:       "weka.filters.unsupervised.attribute.Standardize",
201:       "weka.core.TechnicalInformation",
202:       "weka.core.UnsupportedAttributeTypeException",
203:       "weka.classifiers.Sourcable",
204:       "weka.core.RevisionHandler",
205:       "weka.classifiers.evaluation.output.prediction.PlainText",
206:       "weka.core.neighboursearch.TreePerformanceStats",
207:       "weka.core.xml.XMLSerialization",
208:       "weka.classifiers.xml.XMLClassifier",
209:       "weka.filters.Filter",
210:       "weka.filters.supervised.attribute.Discretize"
211:     );
212:   } 
213: 
214:   private static void resetClasses() {
215:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding.class.getClassLoader()); 
216: 
217:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
218:       "weka.classifiers.AbstractClassifier",
219:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
220:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
221:       "weka.core.Capabilities$Capability",
222:       "weka.core.tokenizers.Tokenizer",
223:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
224:       "weka.core.tokenizers.WordTokenizer",
225:       "weka.core.stemmers.NullStemmer",
226:       "weka.core.Utils",
227:       "weka.core.AbstractInstance",
228:       "weka.core.SparseInstance",
229:       "weka.classifiers.bayes.NaiveBayes",
230:       "weka.classifiers.Evaluation",
231:       "weka.core.Option",
232:       "weka.core.Capabilities",
233:       "org.pentaho.packageManagement.PackageManager",
234:       "org.pentaho.packageManagement.DefaultPackageManager",
235:       "weka.core.Version",
236:       "weka.core.Environment",
237:       "weka.core.WekaPackageManager",
238:       "weka.core.BinarySparseInstance",
239:       "weka.core.UnassignedDatasetException",
240:       "weka.core.stemmers.SnowballStemmer",
241:       "weka.core.Tag",
242:       "weka.classifiers.lazy.IBk",
243:       "weka.core.neighboursearch.NearestNeighbourSearch",
244:       "weka.core.neighboursearch.LinearNNSearch",
245:       "weka.core.NormalizableDistance",
246:       "weka.core.EuclideanDistance",
247:       "weka.core.Range",
248:       "weka.core.neighboursearch.CoverTree",
249:       "weka.core.Instances",
250:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
251:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
252:       "weka.attributeSelection.ASEvaluation",
253:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
254:       "weka.attributeSelection.PrincipalComponents",
255:       "weka.core.TestInstances",
256:       "weka.core.Attribute",
257:       "weka.core.ProtectedProperties",
258:       "weka.core.DenseInstance",
259:       "weka.core.tokenizers.NGramTokenizer",
260:       "weka.classifiers.bayes.BayesNet",
261:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
262:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.K2",
264:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
265:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
266:       "weka.classifiers.functions.SimpleLogistic",
267:       "weka.core.RevisionUtils",
268:       "weka.core.TechnicalInformation",
269:       "weka.core.TechnicalInformation$Type",
270:       "weka.core.TechnicalInformation$Field",
271:       "weka.core.tokenizers.AlphabeticTokenizer",
272:       "weka.core.SerializedObject",
273:       "weka.classifiers.RandomizableClassifier",
274:       "weka.classifiers.functions.SGDText",
275:       "weka.core.neighboursearch.BallTree",
276:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
277:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
278:       "weka.core.neighboursearch.balltrees.BallSplitter",
279:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
280:       "weka.core.stemmers.LovinsStemmer",
281:       "weka.core.stemmers.IteratedLovinsStemmer",
282:       "weka.classifiers.SingleClassifierEnhancer",
283:       "weka.classifiers.misc.InputMappedClassifier",
284:       "weka.classifiers.rules.ZeroR",
285:       "weka.filters.Filter",
286:       "weka.filters.supervised.attribute.Discretize",
287:       "weka.core.Stopwords",
288:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
289:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
290:       "weka.core.neighboursearch.balltrees.BallNode",
291:       "weka.core.neighboursearch.KDTree",
292:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
293:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
294:       "weka.classifiers.functions.VotedPerceptron",
295:       "weka.classifiers.misc.SerializedClassifier",
296:       "weka.classifiers.trees.DecisionStump",
297:       "weka.classifiers.bayes.net.BIFReader",
298:       "weka.classifiers.IteratedSingleClassifierEnhancer",
299:       "weka.classifiers.meta.AdditiveRegression",
300:       "weka.core.converters.ArffLoader$ArffReader",
301:       "weka.classifiers.bayes.NaiveBayesMultinomial",
302:       "weka.attributeSelection.CorrelationAttributeEval",
303:       "weka.core.WekaEnumeration",
304:       "weka.classifiers.functions.LinearRegression",
305:       "weka.core.WekaException",
306:       "weka.core.UnsupportedAttributeTypeException",
307:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
308:       "weka.classifiers.meta.CostSensitiveClassifier",
309:       "weka.classifiers.CostMatrix",
310:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
311:       "weka.classifiers.meta.LogitBoost",
312:       "weka.classifiers.meta.CVParameterSelection",
313:       "weka.core.FastVector",
314:       "weka.core.matrix.Matrix",
315:       "weka.estimators.Estimator",
316:       "weka.estimators.MahalanobisEstimator",
317:       "weka.core.UnassignedClassException",
318:       "weka.classifiers.trees.RandomTree",
319:       "weka.classifiers.functions.supportVector.Kernel",
320:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
321:       "weka.classifiers.meta.AttributeSelectedClassifier",
322:       "weka.attributeSelection.CfsSubsetEval",
323:       "weka.attributeSelection.ASSearch",
324:       "weka.attributeSelection.BestFirst",
325:       "weka.classifiers.trees.J48",
326:       "weka.core.SerializationHelper",
327:       "weka.classifiers.functions.supportVector.CachedKernel",
328:       "weka.classifiers.functions.supportVector.PolyKernel",
329:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
330:       "weka.classifiers.meta.ClassificationViaRegression",
331:       "weka.classifiers.trees.m5.M5Base",
332:       "weka.classifiers.trees.M5P",
333:       "weka.attributeSelection.OneRAttributeEval",
334:       "weka.core.AttributeStats",
335:       "weka.classifiers.rules.OneR",
336:       "weka.core.Attribute$1",
337:       "weka.classifiers.MultipleClassifiersCombiner",
338:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
339:       "weka.classifiers.meta.Vote",
340:       "weka.classifiers.meta.FilteredClassifier",
341:       "weka.filters.supervised.attribute.AttributeSelection",
342:       "weka.attributeSelection.AttributeSelection",
343:       "weka.attributeSelection.GreedyStepwise",
344:       "weka.classifiers.functions.supportVector.StringKernel",
345:       "weka.core.FindWithCapabilities",
346:       "weka.core.SingleIndex",
347:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
348:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
349:       "weka.estimators.NormalEstimator",
350:       "weka.classifiers.rules.PART",
351:       "weka.classifiers.rules.part.MakeDecList",
352:       "weka.classifiers.functions.MultilayerPerceptron",
353:       "weka.filters.unsupervised.attribute.NominalToBinary",
354:       "weka.classifiers.functions.neural.SigmoidUnit",
355:       "weka.classifiers.functions.neural.LinearUnit",
356:       "weka.classifiers.trees.RandomForest",
357:       "weka.attributeSelection.WrapperSubsetEval",
358:       "weka.classifiers.functions.SGD",
359:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
360:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
361:       "weka.classifiers.meta.RandomCommittee",
362:       "weka.attributeSelection.ReliefFAttributeEval",
363:       "weka.core.stemmers.Stemming",
364:       "weka.classifiers.rules.JRip",
365:       "weka.attributeSelection.InfoGainAttributeEval",
366:       "weka.estimators.DiscreteEstimator",
367:       "weka.classifiers.functions.SimpleLinearRegression",
368:       "weka.classifiers.meta.Bagging",
369:       "weka.classifiers.trees.REPTree",
370:       "weka.filters.SimpleFilter",
371:       "weka.filters.SimpleStreamFilter",
372:       "weka.filters.MultiFilter",
373:       "weka.filters.AllFilter",
374:       "weka.classifiers.meta.MultiClassClassifier",
375:       "weka.classifiers.functions.Logistic",
376:       "weka.classifiers.meta.MultiScheme",
377:       "weka.classifiers.trees.LMT",
378:       "weka.classifiers.bayes.NaiveBayesUpdateable",
379:       "weka.classifiers.meta.AdaBoostM1",
380:       "weka.classifiers.meta.RegressionByDiscretization",
381:       "weka.filters.unsupervised.attribute.Discretize",
382:       "weka.classifiers.trees.j48.ClassifierTree",
383:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
384:       "weka.estimators.KernelEstimator",
385:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
386:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
387:       "weka.classifiers.functions.SMOreg",
388:       "weka.classifiers.functions.supportVector.RegOptimizer",
389:       "weka.classifiers.functions.supportVector.RegSMO",
390:       "weka.classifiers.functions.supportVector.RegSMOImproved",
391:       "weka.classifiers.functions.supportVector.Puk",
392:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
393:       "weka.classifiers.functions.GaussianProcesses",
394:       "weka.classifiers.functions.SMO",
395:       "weka.core.SelectedTag",
396:       "weka.core.converters.ConverterUtils$DataSource",
397:       "weka.core.converters.AbstractLoader",
398:       "weka.core.converters.AbstractFileLoader",
399:       "weka.core.converters.ArffLoader",
400:       "weka.attributeSelection.GainRatioAttributeEval",
401:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
402:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
403:       "weka.classifiers.meta.Stacking",
404:       "weka.classifiers.rules.DecisionTable",
405:       "weka.classifiers.functions.supportVector.RBFKernel",
406:       "weka.classifiers.lazy.LWL",
407:       "weka.core.ClassDiscovery",
408:       "weka.estimators.PoissonEstimator",
409:       "weka.classifiers.rules.M5Rules",
410:       "weka.core.neighboursearch.PerformanceStats",
411:       "weka.core.Queue",
412:       "weka.core.AttributeLocator",
413:       "weka.core.StringLocator",
414:       "weka.core.RelationalLocator",
415:       "weka.core.ContingencyTables",
416:       "weka.core.Queue$QueueNode",
417:       "weka.core.Javadoc",
418:       "weka.core.OptionHandlerJavadoc"
419:     );
420:   }
421: }

[MASTER] 09:23:25.806 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
String[] stringArray0 = new String[6];
stringArray0[0] = "-lnorm";
stringArray0[1] = "";
stringArray0[2] = "M\\YD";
stringArray0[3] = "\tThe tokenizing algorihtm (classname plus parameters) to use.\n\t(default: ";
stringArray0[4] = "";
stringArray0[5] = "Q!Q";
naiveBayesMultinomialText0.setOptions(stringArray0);
String string0 = naiveBayesMultinomialText0.useWordFrequenciesTipText();
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertFalse(naiveBayesMultinomialText0.getLowercaseTokens());
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals("Use word frequencies rather than binary bag of words representation", string0);
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertFalse(naiveBayesMultinomialText0.getUseStopList());


[MASTER] 09:23:25.983 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_32_1575624205947/weka/classifiers/bayes/NaiveBayesMultinomialText_32_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_32_1575624205947/weka/classifiers/bayes/NaiveBayesMultinomialText_32_tmp__ESTest_scaffolding.java]]
[MASTER] 09:23:25.984 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 09:23:25.984 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 09:23:25.984 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 09:23:25.984 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_32_1575624205947/weka/classifiers/bayes/NaiveBayesMultinomialText_32_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 09:23:25 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.classifiers.functions.SGDText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_32_tmp__ESTest extends NaiveBayesMultinomialText_32_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=3.26147761112867
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       naiveBayesMultinomialText0.periodicPruningTipText();
28:       String[] stringArray0 = new String[5];
29:       stringArray0[0] = "How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances";
30:       stringArray0[1] = "How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances";
31:       naiveBayesMultinomialText0.m_stopwordsFile = null;
32:       stringArray0[2] = "How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances";
33:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
34:       naiveBayesMultinomialText0.m_inputVector = null;
35:       stringArray0[3] = "norm";
36:       stringArray0[4] = "How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances";
37:       NaiveBayesMultinomialText.main(stringArray0);
38:       naiveBayesMultinomialText0.getCapabilities();
39:       SGDText sGDText0 = new SGDText();
40:       sGDText0.setDebug(true);
41:       naiveBayesMultinomialText0.getStopwords();
42:       naiveBayesMultinomialText0.getUseWordFrequencies();
43:       naiveBayesMultinomialText0.setOptions(stringArray0);
44:       naiveBayesMultinomialText0.setNorm(0.0);
45:       naiveBayesMultinomialText0.getCapabilities();
46:       naiveBayesMultinomialText0.stemmerTipText();
47:       naiveBayesMultinomialText0.setUseStopList(true);
48:       naiveBayesMultinomialText0.getRevision();
49:       assertTrue(naiveBayesMultinomialText0.getUseStopList());
50:   }
51: }
RegularFileObject[/tmp/EvoSuite_32_1575624205947/weka/classifiers/bayes/NaiveBayesMultinomialText_32_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 09:23:25 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_32_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_32_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.core.neighboursearch.CoverTree$DistanceNode",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.classifiers.bayes.NaiveBayes",
105:       "weka.core.neighboursearch.CoverTree$MyHeap",
106:       "weka.estimators.IncrementalEstimator",
107:       "weka.estimators.Estimator$Builder",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.EnvironmentHandler",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.AdditionalMeasureProducer",
129:       "weka.core.neighboursearch.balltrees.BallNode",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.attributeSelection.ASEvaluation",
134:       "weka.core.AbstractInstance",
135:       "weka.core.scripting.JythonObject",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.estimators.DiscreteEstimator",
139:       "weka.classifiers.misc.InputMappedClassifier",
140:       "weka.core.Version",
141:       "weka.core.Tag",
142:       "weka.core.neighboursearch.CoverTree",
143:       "weka.classifiers.AbstractClassifier",
144:       "weka.filters.unsupervised.attribute.Center",
145:       "weka.core.OptionHandler",
146:       "weka.core.WekaException",
147:       "weka.filters.StreamableFilter",
148:       "weka.core.Range",
149:       "weka.core.PartitionGenerator",
150:       "weka.core.scripting.JythonSerializableObject",
151:       "weka.classifiers.Classifier",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
153:       "weka.attributeSelection.InfoGainAttributeEval",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.attributeSelection.AttributeTransformer",
158:       "weka.core.tokenizers.WordTokenizer",
159:       "weka.classifiers.misc.SerializedClassifier",
160:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
161:       "weka.attributeSelection.PrincipalComponents",
162:       "weka.core.stemmers.SnowballStemmer",
163:       "weka.classifiers.Evaluation",
164:       "weka.core.WekaPackageManager",
165:       "weka.filters.SupervisedFilter",
166:       "weka.core.TechnicalInformationHandler",
167:       "weka.classifiers.functions.SimpleLogistic",
168:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
169:       "weka.core.Option",
170:       "weka.core.neighboursearch.PerformanceStats",
171:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
172:       "weka.filters.unsupervised.attribute.NumericToBinary",
173:       "weka.estimators.KernelEstimator",
174:       "weka.filters.Sourcable",
175:       "weka.core.Attribute",
176:       "weka.core.Stopwords",
177:       "weka.core.tokenizers.AlphabeticTokenizer",
178:       "weka.core.FastVector",
179:       "weka.core.UnassignedDatasetException",
180:       "weka.classifiers.RandomizableClassifier",
181:       "weka.classifiers.trees.RandomTree",
182:       "weka.classifiers.SingleClassifierEnhancer",
183:       "weka.core.RevisionUtils",
184:       "weka.core.Instance",
185:       "weka.estimators.Estimator",
186:       "weka.core.ProtectedProperties",
187:       "weka.core.StringLocator",
188:       "weka.core.AttributeStats",
189:       "weka.core.WeightedInstancesHandler",
190:       "weka.core.neighboursearch.NearestNeighbourSearch",
191:       "weka.core.neighboursearch.covertrees.Stack",
192:       "weka.filters.unsupervised.attribute.Remove",
193:       "weka.core.Randomizable",
194:       "weka.core.EuclideanDistance",
195:       "weka.core.Instances",
196:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
197:       "weka.core.UnassignedClassException",
198:       "weka.classifiers.rules.ZeroR",
199:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
200:       "weka.filters.unsupervised.attribute.Standardize",
201:       "weka.core.TechnicalInformation",
202:       "weka.core.UnsupportedAttributeTypeException",
203:       "weka.classifiers.Sourcable",
204:       "weka.core.RevisionHandler",
205:       "weka.classifiers.evaluation.output.prediction.PlainText",
206:       "weka.core.neighboursearch.TreePerformanceStats",
207:       "weka.core.xml.XMLSerialization",
208:       "weka.classifiers.xml.XMLClassifier",
209:       "weka.filters.Filter",
210:       "weka.filters.supervised.attribute.Discretize"
211:     );
212:   } 
213: 
214:   private static void resetClasses() {
215:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_32_tmp__ESTest_scaffolding.class.getClassLoader()); 
216: 
217:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
218:       "weka.classifiers.AbstractClassifier",
219:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
220:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
221:       "weka.core.Capabilities$Capability",
222:       "weka.core.tokenizers.Tokenizer",
223:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
224:       "weka.core.tokenizers.WordTokenizer",
225:       "weka.core.stemmers.NullStemmer",
226:       "weka.core.Utils",
227:       "weka.core.AbstractInstance",
228:       "weka.core.SparseInstance",
229:       "weka.classifiers.bayes.NaiveBayes",
230:       "weka.classifiers.Evaluation",
231:       "weka.core.Option",
232:       "weka.core.Capabilities",
233:       "org.pentaho.packageManagement.PackageManager",
234:       "org.pentaho.packageManagement.DefaultPackageManager",
235:       "weka.core.Version",
236:       "weka.core.Environment",
237:       "weka.core.WekaPackageManager",
238:       "weka.core.BinarySparseInstance",
239:       "weka.core.UnassignedDatasetException",
240:       "weka.core.stemmers.SnowballStemmer",
241:       "weka.core.Tag",
242:       "weka.classifiers.lazy.IBk",
243:       "weka.core.neighboursearch.NearestNeighbourSearch",
244:       "weka.core.neighboursearch.LinearNNSearch",
245:       "weka.core.NormalizableDistance",
246:       "weka.core.EuclideanDistance",
247:       "weka.core.Range",
248:       "weka.core.neighboursearch.CoverTree",
249:       "weka.core.Instances",
250:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
251:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
252:       "weka.attributeSelection.ASEvaluation",
253:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
254:       "weka.attributeSelection.PrincipalComponents",
255:       "weka.core.TestInstances",
256:       "weka.core.Attribute",
257:       "weka.core.ProtectedProperties",
258:       "weka.core.DenseInstance",
259:       "weka.core.tokenizers.NGramTokenizer",
260:       "weka.classifiers.bayes.BayesNet",
261:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
262:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.K2",
264:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
265:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
266:       "weka.classifiers.functions.SimpleLogistic",
267:       "weka.core.RevisionUtils",
268:       "weka.core.TechnicalInformation",
269:       "weka.core.TechnicalInformation$Type",
270:       "weka.core.TechnicalInformation$Field",
271:       "weka.core.tokenizers.AlphabeticTokenizer",
272:       "weka.core.SerializedObject",
273:       "weka.classifiers.RandomizableClassifier",
274:       "weka.classifiers.functions.SGDText",
275:       "weka.core.neighboursearch.BallTree",
276:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
277:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
278:       "weka.core.neighboursearch.balltrees.BallSplitter",
279:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
280:       "weka.core.stemmers.LovinsStemmer",
281:       "weka.core.stemmers.IteratedLovinsStemmer",
282:       "weka.classifiers.SingleClassifierEnhancer",
283:       "weka.classifiers.misc.InputMappedClassifier",
284:       "weka.classifiers.rules.ZeroR",
285:       "weka.filters.Filter",
286:       "weka.filters.supervised.attribute.Discretize",
287:       "weka.core.Stopwords",
288:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
289:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
290:       "weka.core.neighboursearch.balltrees.BallNode",
291:       "weka.core.neighboursearch.KDTree",
292:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
293:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
294:       "weka.classifiers.functions.VotedPerceptron",
295:       "weka.classifiers.misc.SerializedClassifier",
296:       "weka.classifiers.trees.DecisionStump",
297:       "weka.classifiers.bayes.net.BIFReader",
298:       "weka.classifiers.IteratedSingleClassifierEnhancer",
299:       "weka.classifiers.meta.AdditiveRegression",
300:       "weka.core.converters.ArffLoader$ArffReader",
301:       "weka.classifiers.bayes.NaiveBayesMultinomial",
302:       "weka.attributeSelection.CorrelationAttributeEval",
303:       "weka.core.WekaEnumeration",
304:       "weka.classifiers.functions.LinearRegression",
305:       "weka.core.WekaException",
306:       "weka.core.UnsupportedAttributeTypeException",
307:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
308:       "weka.classifiers.meta.CostSensitiveClassifier",
309:       "weka.classifiers.CostMatrix",
310:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
311:       "weka.classifiers.meta.LogitBoost",
312:       "weka.classifiers.meta.CVParameterSelection",
313:       "weka.core.FastVector",
314:       "weka.core.matrix.Matrix",
315:       "weka.estimators.Estimator",
316:       "weka.estimators.MahalanobisEstimator",
317:       "weka.core.UnassignedClassException",
318:       "weka.classifiers.trees.RandomTree",
319:       "weka.classifiers.functions.supportVector.Kernel",
320:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
321:       "weka.classifiers.meta.AttributeSelectedClassifier",
322:       "weka.attributeSelection.CfsSubsetEval",
323:       "weka.attributeSelection.ASSearch",
324:       "weka.attributeSelection.BestFirst",
325:       "weka.classifiers.trees.J48",
326:       "weka.core.SerializationHelper",
327:       "weka.classifiers.functions.supportVector.CachedKernel",
328:       "weka.classifiers.functions.supportVector.PolyKernel",
329:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
330:       "weka.classifiers.meta.ClassificationViaRegression",
331:       "weka.classifiers.trees.m5.M5Base",
332:       "weka.classifiers.trees.M5P",
333:       "weka.attributeSelection.OneRAttributeEval",
334:       "weka.core.AttributeStats",
335:       "weka.classifiers.rules.OneR",
336:       "weka.core.Attribute$1",
337:       "weka.classifiers.MultipleClassifiersCombiner",
338:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
339:       "weka.classifiers.meta.Vote",
340:       "weka.classifiers.meta.FilteredClassifier",
341:       "weka.filters.supervised.attribute.AttributeSelection",
342:       "weka.attributeSelection.AttributeSelection",
343:       "weka.attributeSelection.GreedyStepwise",
344:       "weka.classifiers.functions.supportVector.StringKernel",
345:       "weka.core.FindWithCapabilities",
346:       "weka.core.SingleIndex",
347:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
348:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
349:       "weka.estimators.NormalEstimator",
350:       "weka.classifiers.rules.PART",
351:       "weka.classifiers.rules.part.MakeDecList",
352:       "weka.classifiers.functions.MultilayerPerceptron",
353:       "weka.filters.unsupervised.attribute.NominalToBinary",
354:       "weka.classifiers.functions.neural.SigmoidUnit",
355:       "weka.classifiers.functions.neural.LinearUnit",
356:       "weka.classifiers.trees.RandomForest",
357:       "weka.attributeSelection.WrapperSubsetEval",
358:       "weka.classifiers.functions.SGD",
359:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
360:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
361:       "weka.classifiers.meta.RandomCommittee",
362:       "weka.attributeSelection.ReliefFAttributeEval",
363:       "weka.core.stemmers.Stemming",
364:       "weka.classifiers.rules.JRip",
365:       "weka.attributeSelection.InfoGainAttributeEval",
366:       "weka.estimators.DiscreteEstimator",
367:       "weka.classifiers.functions.SimpleLinearRegression",
368:       "weka.classifiers.meta.Bagging",
369:       "weka.classifiers.trees.REPTree",
370:       "weka.filters.SimpleFilter",
371:       "weka.filters.SimpleStreamFilter",
372:       "weka.filters.MultiFilter",
373:       "weka.filters.AllFilter",
374:       "weka.classifiers.meta.MultiClassClassifier",
375:       "weka.classifiers.functions.Logistic",
376:       "weka.classifiers.meta.MultiScheme",
377:       "weka.classifiers.trees.LMT",
378:       "weka.classifiers.bayes.NaiveBayesUpdateable",
379:       "weka.classifiers.meta.AdaBoostM1",
380:       "weka.classifiers.meta.RegressionByDiscretization",
381:       "weka.filters.unsupervised.attribute.Discretize",
382:       "weka.classifiers.trees.j48.ClassifierTree",
383:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
384:       "weka.estimators.KernelEstimator",
385:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
386:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
387:       "weka.classifiers.functions.SMOreg",
388:       "weka.classifiers.functions.supportVector.RegOptimizer",
389:       "weka.classifiers.functions.supportVector.RegSMO",
390:       "weka.classifiers.functions.supportVector.RegSMOImproved",
391:       "weka.classifiers.functions.supportVector.Puk",
392:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
393:       "weka.classifiers.functions.GaussianProcesses",
394:       "weka.classifiers.functions.SMO",
395:       "weka.core.SelectedTag",
396:       "weka.core.converters.ConverterUtils$DataSource",
397:       "weka.core.converters.AbstractLoader",
398:       "weka.core.converters.AbstractFileLoader",
399:       "weka.core.converters.ArffLoader",
400:       "weka.attributeSelection.GainRatioAttributeEval",
401:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
402:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
403:       "weka.classifiers.meta.Stacking",
404:       "weka.classifiers.rules.DecisionTable",
405:       "weka.classifiers.functions.supportVector.RBFKernel",
406:       "weka.classifiers.lazy.LWL",
407:       "weka.core.ClassDiscovery",
408:       "weka.estimators.PoissonEstimator",
409:       "weka.classifiers.rules.M5Rules",
410:       "weka.core.neighboursearch.PerformanceStats",
411:       "weka.core.Queue",
412:       "weka.core.AttributeLocator",
413:       "weka.core.StringLocator",
414:       "weka.core.RelationalLocator",
415:       "weka.core.ContingencyTables",
416:       "weka.core.Queue$QueueNode",
417:       "weka.core.Javadoc",
418:       "weka.core.OptionHandlerJavadoc"
419:     );
420:   }
421: }

[MASTER] 09:23:25.985 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.periodicPruningTipText();
String[] stringArray0 = new String[5];
stringArray0[0] = "How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances";
stringArray0[1] = "How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances";
naiveBayesMultinomialText0.m_stopwordsFile = null;
stringArray0[2] = "How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances";
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.m_inputVector = null;
stringArray0[3] = "norm";
stringArray0[4] = "How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances";
NaiveBayesMultinomialText.main(stringArray0);
naiveBayesMultinomialText0.getCapabilities();
SGDText sGDText0 = new SGDText();
sGDText0.setDebug(true);
naiveBayesMultinomialText0.getStopwords();
naiveBayesMultinomialText0.getUseWordFrequencies();
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.setNorm(0.0);
naiveBayesMultinomialText0.getCapabilities();
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.setUseStopList(true);
naiveBayesMultinomialText0.getRevision();
assertTrue(naiveBayesMultinomialText0.getUseStopList());


[MASTER] 09:23:27.013 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_58_1575624206977/weka/classifiers/bayes/NaiveBayesMultinomialText_58_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_58_1575624206977/weka/classifiers/bayes/NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding.java]]
[MASTER] 09:23:27.013 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 09:23:27.013 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 09:23:27.013 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 09:23:27.013 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 09:23:27.013 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 09:23:27.013 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 43
[MASTER] 09:23:27.014 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 09:23:27.014 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 49
[MASTER] 09:23:27.014 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 49
[MASTER] 09:23:27.015 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_58_1575624206977/weka/classifiers/bayes/NaiveBayesMultinomialText_58_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Dec 06 09:23:26 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.testdata.EvoSuiteFile;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_58_tmp__ESTest extends NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=3.490469115659254
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
29:       FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       naiveBayesMultinomialText0.getOptions();
32:       naiveBayesMultinomialText0.tokenizerTipText();
33:       naiveBayesMultinomialText0.setMinWordFrequency(9.0);
34:       naiveBayesMultinomialText0.getLowercaseTokens();
35:       naiveBayesMultinomialText0.m_norm = 9.0;
36:       naiveBayesMultinomialText0.getCapabilities();
37:       naiveBayesMultinomialText0.setUseWordFrequencies(true);
38:       naiveBayesMultinomialText0.getLowercaseTokens();
39:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
40:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
41:       linkedHashMap0.keySet();
42:       Integer integer0 = new Integer((-2225));
43:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = naiveBayesMultinomialText0.m_inputVector;
44:       linkedHashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
45:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
46:       linkedHashMap0.values();
47:       naiveBayesMultinomialText0.useStopListTipText();
48:       Integer integer1 = new Integer((-105));
49:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
50:       linkedHashMap0.put(integer1, linkedHashMap2);
51:       naiveBayesMultinomialText0.getTokenizer();
52:       naiveBayesMultinomialText0.getCapabilities();
53:       naiveBayesMultinomialText0.tokenizerTipText();
54:       naiveBayesMultinomialText0.getStopwords();
55:       naiveBayesMultinomialText0.stemmerTipText();
56:       naiveBayesMultinomialText0.getOptions();
57:       naiveBayesMultinomialText0.LNormTipText();
58:       assertEquals(9.0, naiveBayesMultinomialText0.getNorm(), 0.01);
59:   }
60: }
RegularFileObject[/tmp/EvoSuite_58_1575624206977/weka/classifiers/bayes/NaiveBayesMultinomialText_58_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Dec 06 09:23:26 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.core.neighboursearch.CoverTree$DistanceNode",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.classifiers.bayes.NaiveBayes",
105:       "weka.core.neighboursearch.CoverTree$MyHeap",
106:       "weka.estimators.IncrementalEstimator",
107:       "weka.estimators.Estimator$Builder",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.EnvironmentHandler",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.AdditionalMeasureProducer",
129:       "weka.core.neighboursearch.balltrees.BallNode",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.attributeSelection.ASEvaluation",
134:       "weka.core.AbstractInstance",
135:       "weka.core.scripting.JythonObject",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.estimators.DiscreteEstimator",
139:       "weka.classifiers.misc.InputMappedClassifier",
140:       "weka.core.Version",
141:       "weka.core.Tag",
142:       "weka.core.neighboursearch.CoverTree",
143:       "weka.classifiers.AbstractClassifier",
144:       "weka.filters.unsupervised.attribute.Center",
145:       "weka.core.OptionHandler",
146:       "weka.core.WekaException",
147:       "weka.filters.StreamableFilter",
148:       "weka.core.Range",
149:       "weka.core.PartitionGenerator",
150:       "weka.core.scripting.JythonSerializableObject",
151:       "weka.classifiers.Classifier",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
153:       "weka.attributeSelection.InfoGainAttributeEval",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.attributeSelection.AttributeTransformer",
158:       "weka.core.tokenizers.WordTokenizer",
159:       "weka.classifiers.misc.SerializedClassifier",
160:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
161:       "weka.attributeSelection.PrincipalComponents",
162:       "weka.core.stemmers.SnowballStemmer",
163:       "weka.classifiers.Evaluation",
164:       "weka.core.WekaPackageManager",
165:       "weka.filters.SupervisedFilter",
166:       "weka.core.TechnicalInformationHandler",
167:       "weka.classifiers.functions.SimpleLogistic",
168:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
169:       "weka.core.Option",
170:       "weka.core.neighboursearch.PerformanceStats",
171:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
172:       "weka.filters.unsupervised.attribute.NumericToBinary",
173:       "weka.estimators.KernelEstimator",
174:       "weka.filters.Sourcable",
175:       "weka.core.Attribute",
176:       "weka.core.Stopwords",
177:       "weka.core.tokenizers.AlphabeticTokenizer",
178:       "weka.core.FastVector",
179:       "weka.core.UnassignedDatasetException",
180:       "weka.classifiers.RandomizableClassifier",
181:       "weka.classifiers.trees.RandomTree",
182:       "weka.classifiers.SingleClassifierEnhancer",
183:       "weka.core.RevisionUtils",
184:       "weka.core.Instance",
185:       "weka.estimators.Estimator",
186:       "weka.core.ProtectedProperties",
187:       "weka.core.StringLocator",
188:       "weka.core.AttributeStats",
189:       "weka.core.WeightedInstancesHandler",
190:       "weka.core.neighboursearch.NearestNeighbourSearch",
191:       "weka.core.neighboursearch.covertrees.Stack",
192:       "weka.filters.unsupervised.attribute.Remove",
193:       "weka.core.Randomizable",
194:       "weka.core.EuclideanDistance",
195:       "weka.core.Instances",
196:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
197:       "weka.core.UnassignedClassException",
198:       "weka.classifiers.rules.ZeroR",
199:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
200:       "weka.filters.unsupervised.attribute.Standardize",
201:       "weka.core.TechnicalInformation",
202:       "weka.core.UnsupportedAttributeTypeException",
203:       "weka.classifiers.Sourcable",
204:       "weka.core.RevisionHandler",
205:       "weka.classifiers.evaluation.output.prediction.PlainText",
206:       "weka.core.neighboursearch.TreePerformanceStats",
207:       "weka.core.xml.XMLSerialization",
208:       "weka.classifiers.xml.XMLClassifier",
209:       "weka.filters.Filter",
210:       "weka.filters.supervised.attribute.Discretize"
211:     );
212:   } 
213: 
214:   private static void resetClasses() {
215:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding.class.getClassLoader()); 
216: 
217:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
218:       "weka.classifiers.AbstractClassifier",
219:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
220:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
221:       "weka.core.Capabilities$Capability",
222:       "weka.core.tokenizers.Tokenizer",
223:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
224:       "weka.core.tokenizers.WordTokenizer",
225:       "weka.core.stemmers.NullStemmer",
226:       "weka.core.Utils",
227:       "weka.core.AbstractInstance",
228:       "weka.core.SparseInstance",
229:       "weka.classifiers.bayes.NaiveBayes",
230:       "weka.classifiers.Evaluation",
231:       "weka.core.Option",
232:       "weka.core.Capabilities",
233:       "org.pentaho.packageManagement.PackageManager",
234:       "org.pentaho.packageManagement.DefaultPackageManager",
235:       "weka.core.Version",
236:       "weka.core.Environment",
237:       "weka.core.WekaPackageManager",
238:       "weka.core.BinarySparseInstance",
239:       "weka.core.UnassignedDatasetException",
240:       "weka.core.stemmers.SnowballStemmer",
241:       "weka.core.Tag",
242:       "weka.classifiers.lazy.IBk",
243:       "weka.core.neighboursearch.NearestNeighbourSearch",
244:       "weka.core.neighboursearch.LinearNNSearch",
245:       "weka.core.NormalizableDistance",
246:       "weka.core.EuclideanDistance",
247:       "weka.core.Range",
248:       "weka.core.neighboursearch.CoverTree",
249:       "weka.core.Instances",
250:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
251:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
252:       "weka.attributeSelection.ASEvaluation",
253:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
254:       "weka.attributeSelection.PrincipalComponents",
255:       "weka.core.TestInstances",
256:       "weka.core.Attribute",
257:       "weka.core.ProtectedProperties",
258:       "weka.core.DenseInstance",
259:       "weka.core.tokenizers.NGramTokenizer",
260:       "weka.classifiers.bayes.BayesNet",
261:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
262:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.K2",
264:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
265:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
266:       "weka.classifiers.functions.SimpleLogistic",
267:       "weka.core.RevisionUtils",
268:       "weka.core.TechnicalInformation",
269:       "weka.core.TechnicalInformation$Type",
270:       "weka.core.TechnicalInformation$Field",
271:       "weka.core.tokenizers.AlphabeticTokenizer",
272:       "weka.core.SerializedObject",
273:       "weka.classifiers.RandomizableClassifier",
274:       "weka.classifiers.functions.SGDText",
275:       "weka.core.neighboursearch.BallTree",
276:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
277:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
278:       "weka.core.neighboursearch.balltrees.BallSplitter",
279:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
280:       "weka.core.stemmers.LovinsStemmer",
281:       "weka.core.stemmers.IteratedLovinsStemmer",
282:       "weka.classifiers.SingleClassifierEnhancer",
283:       "weka.classifiers.misc.InputMappedClassifier",
284:       "weka.classifiers.rules.ZeroR",
285:       "weka.filters.Filter",
286:       "weka.filters.supervised.attribute.Discretize",
287:       "weka.core.Stopwords",
288:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
289:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
290:       "weka.core.neighboursearch.balltrees.BallNode",
291:       "weka.core.neighboursearch.KDTree",
292:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
293:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
294:       "weka.classifiers.functions.VotedPerceptron",
295:       "weka.classifiers.misc.SerializedClassifier",
296:       "weka.classifiers.trees.DecisionStump",
297:       "weka.classifiers.bayes.net.BIFReader",
298:       "weka.classifiers.IteratedSingleClassifierEnhancer",
299:       "weka.classifiers.meta.AdditiveRegression",
300:       "weka.core.converters.ArffLoader$ArffReader",
301:       "weka.classifiers.bayes.NaiveBayesMultinomial",
302:       "weka.attributeSelection.CorrelationAttributeEval",
303:       "weka.core.WekaEnumeration",
304:       "weka.classifiers.functions.LinearRegression",
305:       "weka.core.WekaException",
306:       "weka.core.UnsupportedAttributeTypeException",
307:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
308:       "weka.classifiers.meta.CostSensitiveClassifier",
309:       "weka.classifiers.CostMatrix",
310:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
311:       "weka.classifiers.meta.LogitBoost",
312:       "weka.classifiers.meta.CVParameterSelection",
313:       "weka.core.FastVector",
314:       "weka.core.matrix.Matrix",
315:       "weka.estimators.Estimator",
316:       "weka.estimators.MahalanobisEstimator",
317:       "weka.core.UnassignedClassException",
318:       "weka.classifiers.trees.RandomTree",
319:       "weka.classifiers.functions.supportVector.Kernel",
320:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
321:       "weka.classifiers.meta.AttributeSelectedClassifier",
322:       "weka.attributeSelection.CfsSubsetEval",
323:       "weka.attributeSelection.ASSearch",
324:       "weka.attributeSelection.BestFirst",
325:       "weka.classifiers.trees.J48",
326:       "weka.core.SerializationHelper",
327:       "weka.classifiers.functions.supportVector.CachedKernel",
328:       "weka.classifiers.functions.supportVector.PolyKernel",
329:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
330:       "weka.classifiers.meta.ClassificationViaRegression",
331:       "weka.classifiers.trees.m5.M5Base",
332:       "weka.classifiers.trees.M5P",
333:       "weka.attributeSelection.OneRAttributeEval",
334:       "weka.core.AttributeStats",
335:       "weka.classifiers.rules.OneR",
336:       "weka.core.Attribute$1",
337:       "weka.classifiers.MultipleClassifiersCombiner",
338:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
339:       "weka.classifiers.meta.Vote",
340:       "weka.classifiers.meta.FilteredClassifier",
341:       "weka.filters.supervised.attribute.AttributeSelection",
342:       "weka.attributeSelection.AttributeSelection",
343:       "weka.attributeSelection.GreedyStepwise",
344:       "weka.classifiers.functions.supportVector.StringKernel",
345:       "weka.core.FindWithCapabilities",
346:       "weka.core.SingleIndex",
347:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
348:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
349:       "weka.estimators.NormalEstimator",
350:       "weka.classifiers.rules.PART",
351:       "weka.classifiers.rules.part.MakeDecList",
352:       "weka.classifiers.functions.MultilayerPerceptron",
353:       "weka.filters.unsupervised.attribute.NominalToBinary",
354:       "weka.classifiers.functions.neural.SigmoidUnit",
355:       "weka.classifiers.functions.neural.LinearUnit",
356:       "weka.classifiers.trees.RandomForest",
357:       "weka.attributeSelection.WrapperSubsetEval",
358:       "weka.classifiers.functions.SGD",
359:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
360:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
361:       "weka.classifiers.meta.RandomCommittee",
362:       "weka.attributeSelection.ReliefFAttributeEval",
363:       "weka.core.stemmers.Stemming",
364:       "weka.classifiers.rules.JRip",
365:       "weka.attributeSelection.InfoGainAttributeEval",
366:       "weka.estimators.DiscreteEstimator",
367:       "weka.classifiers.functions.SimpleLinearRegression",
368:       "weka.classifiers.meta.Bagging",
369:       "weka.classifiers.trees.REPTree",
370:       "weka.filters.SimpleFilter",
371:       "weka.filters.SimpleStreamFilter",
372:       "weka.filters.MultiFilter",
373:       "weka.filters.AllFilter",
374:       "weka.classifiers.meta.MultiClassClassifier",
375:       "weka.classifiers.functions.Logistic",
376:       "weka.classifiers.meta.MultiScheme",
377:       "weka.classifiers.trees.LMT",
378:       "weka.classifiers.bayes.NaiveBayesUpdateable",
379:       "weka.classifiers.meta.AdaBoostM1",
380:       "weka.classifiers.meta.RegressionByDiscretization",
381:       "weka.filters.unsupervised.attribute.Discretize",
382:       "weka.classifiers.trees.j48.ClassifierTree",
383:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
384:       "weka.estimators.KernelEstimator",
385:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
386:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
387:       "weka.classifiers.functions.SMOreg",
388:       "weka.classifiers.functions.supportVector.RegOptimizer",
389:       "weka.classifiers.functions.supportVector.RegSMO",
390:       "weka.classifiers.functions.supportVector.RegSMOImproved",
391:       "weka.classifiers.functions.supportVector.Puk",
392:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
393:       "weka.classifiers.functions.GaussianProcesses",
394:       "weka.classifiers.functions.SMO",
395:       "weka.core.SelectedTag",
396:       "weka.core.converters.ConverterUtils$DataSource",
397:       "weka.core.converters.AbstractLoader",
398:       "weka.core.converters.AbstractFileLoader",
399:       "weka.core.converters.ArffLoader",
400:       "weka.attributeSelection.GainRatioAttributeEval",
401:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
402:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
403:       "weka.classifiers.meta.Stacking",
404:       "weka.classifiers.rules.DecisionTable",
405:       "weka.classifiers.functions.supportVector.RBFKernel",
406:       "weka.classifiers.lazy.LWL",
407:       "weka.core.ClassDiscovery",
408:       "weka.estimators.PoissonEstimator",
409:       "weka.classifiers.rules.M5Rules",
410:       "weka.core.neighboursearch.PerformanceStats",
411:       "weka.core.Queue",
412:       "weka.core.AttributeLocator",
413:       "weka.core.StringLocator",
414:       "weka.core.RelationalLocator",
415:       "weka.core.ContingencyTables",
416:       "weka.core.Queue$QueueNode",
417:       "weka.core.Javadoc",
418:       "weka.core.OptionHandlerJavadoc"
419:     );
420:   }
421: }

[MASTER] 09:23:27.022 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.tokenizerTipText();
naiveBayesMultinomialText0.setMinWordFrequency(9.0);
naiveBayesMultinomialText0.getLowercaseTokens();
naiveBayesMultinomialText0.m_norm = 9.0;
naiveBayesMultinomialText0.getCapabilities();
naiveBayesMultinomialText0.setUseWordFrequencies(true);
naiveBayesMultinomialText0.getLowercaseTokens();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
linkedHashMap0.keySet();
Integer integer0 = new Integer((-2225));
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = naiveBayesMultinomialText0.m_inputVector;
linkedHashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
naiveBayesMultinomialText0.useWordFrequenciesTipText();
linkedHashMap0.values();
naiveBayesMultinomialText0.useStopListTipText();
Integer integer1 = new Integer((-105));
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.put(integer1, linkedHashMap2);
naiveBayesMultinomialText0.getTokenizer();
naiveBayesMultinomialText0.getCapabilities();
naiveBayesMultinomialText0.tokenizerTipText();
naiveBayesMultinomialText0.getStopwords();
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.LNormTipText();
assertEquals(9.0, naiveBayesMultinomialText0.getNorm(), 0.01);


[MASTER] 09:23:30.233 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 09:23:31.370 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1022/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5245
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1022
* Starting evolution
* Search finished after 125s and 102 generations, 57712 statements, best individual has fitness: 3120.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 217
* Number of covered goals: 183
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 64%
* Total number of goals: 428
* Number of covered goals: 272
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 87%
* Total number of goals: 260
* Number of covered goals: 226
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 64%
* Total number of goals: 428
* Number of covered goals: 272
* Generated 78 tests with total length 214
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 75%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1022/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5244
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 09:30:52.053 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:30:52.058 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:30:52.059 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 09:30:52.995 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 09:30:53.619 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 09:30:53.620 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 09:30:55.978 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 09:30:56.017 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 09:30:56.017 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 09:30:56.017 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 09:30:56.018 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 09:30:56.018 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 09:30:56.019 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 09:30:56.020 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 09:30:56.020 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 09:30:56.083 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 09:30:56.095 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1022
* Starting evolution
[MASTER] 09:31:03.699 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 09:31:43.298 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 09:32:41.518 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.precision(I)D
* Search finished after 126s and 47 generations, 28386 statements, best individual has fitness: 16608.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 55%
* Total number of goals: 1378
* Number of covered goals: 757
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 39%
* Total number of goals: 809
* Number of covered goals: 316
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 40
* Number of covered goals: 40
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 57%
* Total number of goals: 424
* Number of covered goals: 242
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 20%
* Total number of goals: 278
* Number of covered goals: 55
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 93%
* Total number of goals: 103
* Number of covered goals: 96
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 92%
* Total number of goals: 103
* Number of covered goals: 95
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 35%
* Total number of goals: 809
* Number of covered goals: 280
* Generated 112 tests with total length 1279
* Resulting test suite's coverage: 47% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 6%
[MASTER] 09:41:12.209 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
[MASTER] 09:41:19.419 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 09:41:19.754 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 09:41:19.754 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 09:41:20.963 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1022/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5246
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 09:42:33.965 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:42:33.985 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:42:33.990 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 09:42:34.003 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1022
* Starting evolution
[MASTER] 09:42:38.272 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 09:42:52.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: Line 1133
[MASTER] 09:42:52.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: Line 1154
[MASTER] 09:42:52.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I31 Branch 180 IF_ICMPGE L1117 - true
[MASTER] 09:42:52.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I46 Branch 182 IF_ICMPGE L1119 - true
[MASTER] 09:42:52.731 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 363: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1117 - ReplaceComparisonOperator >= -> >
[MASTER] 09:42:52.735 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 387: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1119 - ReplaceComparisonOperator >= -> >
[MASTER] 09:42:52.736 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:EmptyArray
[MASTER] 09:42:52.736 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
[MASTER] 09:42:52.737 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I31 Branch 180 IF_ICMPGE L1117 - true in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
[MASTER] 09:42:52.737 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I46 Branch 182 IF_ICMPGE L1119 - true in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
* Search finished after 123s and 60 generations, 40025 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 20 tests with total length 145
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1022/107_weka/evosuite-tests
* Done!

* Computation finished
