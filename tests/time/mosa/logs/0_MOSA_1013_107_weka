* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13268
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 00:07:05.786 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 00:07:05.789 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 00:07:05.789 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 00:07:07.586 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 00:07:08.167 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 00:07:08.186 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2767
* Using seed 1013
* Starting evolution
[MASTER] 00:07:13.328 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setMinNo(D)V: Line 500
[MASTER] 00:07:13.328 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setMinNo(D)V: Line 501
[MASTER] 00:07:13.328 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setSeed(J)V: Line 527
[MASTER] 00:07:13.328 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setSeed(J)V: Line 528
[MASTER] 00:07:13.328 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getSeed()J: Line 536
[MASTER] 00:07:13.328 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptimizations(I)V: Line 554
[MASTER] 00:07:13.328 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptimizations(I)V: Line 555
[MASTER] 00:07:13.328 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setDebug(Z)V: Line 581
[MASTER] 00:07:13.328 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setDebug(Z)V: Line 582
[MASTER] 00:07:13.330 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setDebug(Z)V: root-Branch
[MASTER] 00:07:13.330 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptimizations(I)V: root-Branch
[MASTER] 00:07:13.330 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setSeed(J)V: root-Branch
[MASTER] 00:07:13.330 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getSeed()J: root-Branch
[MASTER] 00:07:13.330 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setMinNo(D)V: root-Branch
[MASTER] 00:07:13.331 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 195: weka.classifiers.rules.JRip.setMinNo(D)V:500 - InsertUnaryOp Negation of m
[MASTER] 00:07:13.331 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 198: weka.classifiers.rules.JRip.setSeed(J)V:527 - ReplaceVariable s -> serialVersionUID
[MASTER] 00:07:13.331 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 199: weka.classifiers.rules.JRip.setSeed(J)V:527 - InsertUnaryOp Negation of s
[MASTER] 00:07:13.331 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 200: weka.classifiers.rules.JRip.getSeed()J:536 - ReplaceVariable m_Seed -> serialVersionUID
[MASTER] 00:07:13.331 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 201: weka.classifiers.rules.JRip.getSeed()J:536 - InsertUnaryOp Negation
[MASTER] 00:07:13.331 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 203: weka.classifiers.rules.JRip.setOptimizations(I)V:554 - InsertUnaryOp Negation of run
[MASTER] 00:07:13.331 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 204: weka.classifiers.rules.JRip.setOptimizations(I)V:554 - InsertUnaryOp IINC 1 run
[MASTER] 00:07:13.331 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 205: weka.classifiers.rules.JRip.setOptimizations(I)V:554 - InsertUnaryOp IINC -1 run
[MASTER] 00:07:13.331 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 210: weka.classifiers.rules.JRip.setDebug(Z)V:581 - InsertUnaryOp Negation of d
[MASTER] 00:07:13.331 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 211: weka.classifiers.rules.JRip.setDebug(Z)V:581 - InsertUnaryOp IINC 1 d
[MASTER] 00:07:13.331 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 212: weka.classifiers.rules.JRip.setDebug(Z)V:581 - InsertUnaryOp IINC -1 d
[MASTER] 00:07:13.339 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.getSeed()J:Zero
[MASTER] 00:07:13.340 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setMinNo(D)V
[MASTER] 00:07:13.340 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setOptimizations(I)V
[MASTER] 00:07:13.340 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setDebug(Z)V
[MASTER] 00:07:13.340 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setSeed(J)V
[MASTER] 00:07:13.340 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.getSeed()J
[MASTER] 00:07:13.340 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setMinNo(D)V
[MASTER] 00:07:13.341 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setOptimizations(I)V
[MASTER] 00:07:13.341 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setDebug(Z)V
[MASTER] 00:07:13.341 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setSeed(J)V
[MASTER] 00:07:13.341 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.getSeed()J
[MASTER] 00:07:13.341 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setSeed(J)V: root-Branch in context: weka.classifiers.rules.JRip:setSeed(J)V
[MASTER] 00:07:13.341 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setMinNo(D)V: root-Branch in context: weka.classifiers.rules.JRip:setMinNo(D)V
[MASTER] 00:07:13.341 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptimizations(I)V: root-Branch in context: weka.classifiers.rules.JRip:setOptimizations(I)V
[MASTER] 00:07:13.342 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setDebug(Z)V: root-Branch in context: weka.classifiers.rules.JRip:setDebug(Z)V
[MASTER] 00:07:13.342 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.getSeed()J: root-Branch in context: weka.classifiers.rules.JRip:getSeed()J
[MASTER] 00:07:14.205 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.getAttrValue()D: Line 723
[MASTER] 00:07:14.206 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;: Line 572
[MASTER] 00:07:14.208 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.getAttrValue()D: root-Branch
[MASTER] 00:07:14.208 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;: root-Branch
[MASTER] 00:07:14.218 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 209: weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;:572 - ReplaceConstant - Whether debug information is output to the console. -> 
[MASTER] 00:07:14.246 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 665: weka.classifiers.rules.JRip$Antd.getAttrValue()D:723 - ReplaceVariable value -> cover
[MASTER] 00:07:14.246 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 666: weka.classifiers.rules.JRip$Antd.getAttrValue()D:723 - ReplaceVariable value -> accu
[MASTER] 00:07:14.246 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 667: weka.classifiers.rules.JRip$Antd.getAttrValue()D:723 - ReplaceVariable value -> accuRate
[MASTER] 00:07:14.246 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 668: weka.classifiers.rules.JRip$Antd.getAttrValue()D:723 - ReplaceVariable value -> maxInfoGain
[MASTER] 00:07:14.246 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 669: weka.classifiers.rules.JRip$Antd.getAttrValue()D:723 - InsertUnaryOp Negation
[MASTER] 00:07:14.247 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 00:07:14.247 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;
[MASTER] 00:07:14.247 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.Antd.getAttrValue()D
[MASTER] 00:07:14.248 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;
[MASTER] 00:07:14.248 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.Antd.getAttrValue()D
[MASTER] 00:07:14.249 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$Antd.getAttrValue()D: root-Branch in context: weka.classifiers.rules.JRip$Antd:getAttrValue()D
[MASTER] 00:07:14.249 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.rules.JRip:debugTipText()Ljava/lang/String;
[MASTER] 00:08:33.789 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 123s and 225 generations, 81692 statements, best individual has fitness: 13312.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 33%
* Total number of goals: 705
* Number of covered goals: 232
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 24%
* Total number of goals: 416
* Number of covered goals: 101
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 50%
* Total number of goals: 993
* Number of covered goals: 494
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 30%
* Total number of goals: 93
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 24%
* Total number of goals: 416
* Number of covered goals: 101
* Generated 68 tests with total length 478
* Resulting test suite's coverage: 40% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 23%
* Compiling and checking tests
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/mosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13271
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13275
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 00:13:09.989 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 00:13:09.990 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 00:13:09.996 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 00:13:10.055 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 00:13:10.081 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 00:13:10.084 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1412
* Using seed 1013
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 00:13:15.511 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 00:13:15.516 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 00:13:15.517 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 00:13:15.521 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2499
* Using seed 1013
* Starting evolution
[MASTER] 00:13:19.201 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 00:13:25.689 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 00:13:58.866 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 00:13:58.866 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Search finished after 123s and 223 generations, 90636 statements, best individual has fitness: 1192.0
* Search finished after 122s and 100 generations, 67573 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 338
* Number of covered goals: 320
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 89%
* Total number of goals: 194
* Number of covered goals: 172
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 476
* Number of covered goals: 445
* Coverage analysis for criterion OUTPUT
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 61
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 87%
* Total number of goals: 194
* Number of covered goals: 169
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 18 tests with total length 139
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Generated 77 tests with total length 550
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/mosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 57%
* Compiling and checking tests
[MASTER] 00:18:08.335 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_20_1575505087696/weka/classifiers/bayes/NaiveBayesMultinomialText_20_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_20_1575505087696/weka/classifiers/bayes/NaiveBayesMultinomialText_20_tmp__ESTest_scaffolding.java]]
[MASTER] 00:18:08.335 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 00:18:08.335 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 00:18:08.338 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 41
[MASTER] 00:18:08.339 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_20_1575505087696/weka/classifiers/bayes/NaiveBayesMultinomialText_20_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 00:18:08 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.mock.java.io.MockFile;
15: import org.evosuite.runtime.testdata.EvoSuiteFile;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.DenseInstance;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_20_tmp__ESTest extends NaiveBayesMultinomialText_20_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=2.748058988887039
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
32:       FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
33:       naiveBayesMultinomialText0.getRevision();
34:       MockFile mockFile0 = new MockFile("9122", "9122");
35:       naiveBayesMultinomialText0.setStopwords(mockFile0);
36:       naiveBayesMultinomialText0.getUseWordFrequencies();
37:       naiveBayesMultinomialText0.toString();
38:       naiveBayesMultinomialText0.getNorm();
39:       naiveBayesMultinomialText0.normTipText();
40:       FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
41:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
42:       naiveBayesMultinomialText0.m_inputVector = null;
43:       naiveBayesMultinomialText0.getStopwords();
44:       naiveBayesMultinomialText0.getPeriodicPruning();
45:       naiveBayesMultinomialText0.getStemmer();
46:       DenseInstance denseInstance0 = new DenseInstance(1952257861);
47:   }
48: }
RegularFileObject[/tmp/EvoSuite_20_1575505087696/weka/classifiers/bayes/NaiveBayesMultinomialText_20_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 00:18:08 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_20_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_20_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.classifiers.IteratedSingleClassifierEnhancer",
89:       "weka.core.Environment",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "weka.classifiers.AbstractClassifier",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "weka.attributeSelection.ReliefFAttributeEval",
96:       "org.pentaho.packageManagement.Package",
97:       "weka.core.OptionHandler",
98:       "weka.core.xml.XMLBasicSerialization",
99:       "weka.core.WekaException",
100:       "weka.core.Range",
101:       "weka.core.logging.Logger$Level",
102:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
103:       "weka.core.scripting.JythonSerializableObject",
104:       "weka.classifiers.Classifier",
105:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
106:       "weka.core.Capabilities$Capability",
107:       "weka.core.DenseInstance",
108:       "weka.core.SparseInstance",
109:       "org.pentaho.packageManagement.PackageManager",
110:       "weka.core.stemmers.Stemmer",
111:       "weka.core.tokenizers.WordTokenizer",
112:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
113:       "org.pentaho.packageManagement.DefaultPackageManager",
114:       "weka.core.stemmers.SnowballStemmer",
115:       "weka.classifiers.Evaluation",
116:       "weka.classifiers.functions.supportVector.Kernel",
117:       "weka.core.WekaPackageManager",
118:       "org.bounce.net.DefaultAuthenticator",
119:       "weka.core.TechnicalInformationHandler",
120:       "weka.core.neighboursearch.LinearNNSearch",
121:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
122:       "weka.core.Option",
123:       "weka.core.stemmers.NullStemmer",
124:       "weka.core.neighboursearch.PerformanceStats",
125:       "weka.core.Utils",
126:       "weka.core.CustomDisplayStringProvider",
127:       "weka.core.tokenizers.Tokenizer",
128:       "weka.core.NormalizableDistance",
129:       "weka.core.Attribute",
130:       "weka.core.NoSupportForMissingValuesException",
131:       "weka.core.Stopwords",
132:       "weka.classifiers.UpdateableClassifier",
133:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
134:       "weka.core.MultiInstanceCapabilitiesHandler",
135:       "weka.core.Copyable",
136:       "weka.core.Capabilities",
137:       "weka.core.BinarySparseInstance",
138:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
139:       "weka.core.UnassignedDatasetException",
140:       "weka.core.tokenizers.NGramTokenizer",
141:       "weka.core.SerializedObject",
142:       "weka.clusterers.UpdateableClusterer",
143:       "weka.core.Summarizable",
144:       "weka.classifiers.SingleClassifierEnhancer",
145:       "weka.core.RevisionUtils",
146:       "weka.core.AdditionalMeasureProducer",
147:       "org.pentaho.packageManagement.PackageManager$1",
148:       "weka.core.Instance",
149:       "weka.core.ProtectedProperties",
150:       "weka.core.Drawable",
151:       "weka.core.matrix.Matrix",
152:       "weka.core.AttributeStats",
153:       "weka.core.WeightedInstancesHandler",
154:       "weka.core.neighboursearch.NearestNeighbourSearch",
155:       "weka.core.CapabilitiesHandler",
156:       "weka.classifiers.trees.DecisionStump",
157:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
158:       "weka.attributeSelection.ASEvaluation",
159:       "weka.core.EuclideanDistance",
160:       "weka.core.AbstractInstance",
161:       "weka.core.Instances",
162:       "weka.core.scripting.JythonObject",
163:       "org.pentaho.packageManagement.DefaultPackage",
164:       "weka.core.UnassignedClassException",
165:       "weka.classifiers.meta.AdditiveRegression",
166:       "weka.classifiers.rules.ZeroR",
167:       "weka.core.Version",
168:       "weka.core.TechnicalInformation",
169:       "weka.core.UnsupportedAttributeTypeException",
170:       "weka.classifiers.Sourcable",
171:       "weka.core.RevisionHandler",
172:       "weka.classifiers.evaluation.output.prediction.PlainText",
173:       "weka.core.xml.XMLSerialization",
174:       "weka.classifiers.xml.XMLClassifier"
175:     );
176:   } 
177: 
178:   private static void resetClasses() {
179:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_20_tmp__ESTest_scaffolding.class.getClassLoader()); 
180: 
181:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
182:       "weka.classifiers.AbstractClassifier",
183:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
184:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
185:       "weka.core.Capabilities$Capability",
186:       "weka.core.tokenizers.Tokenizer",
187:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
188:       "weka.core.tokenizers.WordTokenizer",
189:       "weka.core.stemmers.NullStemmer",
190:       "weka.classifiers.Evaluation",
191:       "weka.core.Utils",
192:       "weka.core.Option",
193:       "weka.core.stemmers.LovinsStemmer",
194:       "weka.core.stemmers.IteratedLovinsStemmer",
195:       "weka.core.SerializedObject",
196:       "weka.core.TechnicalInformation",
197:       "weka.core.TechnicalInformation$Type",
198:       "weka.core.TechnicalInformation$Field",
199:       "weka.core.RevisionUtils",
200:       "weka.core.Capabilities",
201:       "org.pentaho.packageManagement.PackageManager",
202:       "org.pentaho.packageManagement.DefaultPackageManager",
203:       "weka.core.Version",
204:       "weka.core.Environment",
205:       "weka.core.WekaPackageManager",
206:       "weka.attributeSelection.ASEvaluation",
207:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
208:       "weka.attributeSelection.PrincipalComponents",
209:       "weka.classifiers.misc.SerializedClassifier",
210:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
211:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
212:       "weka.core.Tag",
213:       "weka.classifiers.lazy.IBk",
214:       "weka.core.neighboursearch.NearestNeighbourSearch",
215:       "weka.core.neighboursearch.LinearNNSearch",
216:       "weka.core.NormalizableDistance",
217:       "weka.core.EuclideanDistance",
218:       "weka.core.Range",
219:       "weka.classifiers.CostMatrix",
220:       "weka.core.TestInstances",
221:       "weka.core.stemmers.SnowballStemmer",
222:       "weka.core.stemmers.Stemming",
223:       "weka.core.neighboursearch.CoverTree",
224:       "weka.core.AbstractInstance",
225:       "weka.core.SparseInstance",
226:       "weka.core.BinarySparseInstance",
227:       "weka.core.Instances",
228:       "weka.core.UnassignedDatasetException",
229:       "weka.core.Attribute",
230:       "weka.core.ProtectedProperties",
231:       "weka.core.neighboursearch.balltrees.BallNode",
232:       "weka.core.DenseInstance",
233:       "weka.attributeSelection.CorrelationAttributeEval",
234:       "weka.core.tokenizers.NGramTokenizer",
235:       "weka.classifiers.bayes.NaiveBayesMultinomial",
236:       "weka.core.tokenizers.AlphabeticTokenizer",
237:       "weka.classifiers.functions.supportVector.Kernel",
238:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
239:       "weka.classifiers.bayes.BayesNet",
240:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
241:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
242:       "weka.classifiers.bayes.net.search.local.K2",
243:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
244:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
245:       "weka.classifiers.SingleClassifierEnhancer",
246:       "weka.classifiers.misc.InputMappedClassifier",
247:       "weka.classifiers.rules.ZeroR",
248:       "weka.classifiers.RandomizableClassifier",
249:       "weka.classifiers.functions.SGDText",
250:       "weka.filters.Filter",
251:       "weka.filters.supervised.attribute.Discretize",
252:       "weka.core.neighboursearch.KDTree",
253:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
254:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
255:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
257:       "weka.core.FindWithCapabilities",
258:       "weka.core.SingleIndex",
259:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
260:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
261:       "weka.classifiers.trees.m5.M5Base",
262:       "weka.classifiers.rules.M5Rules",
263:       "weka.classifiers.functions.LinearRegression",
264:       "weka.classifiers.bayes.net.BIFReader",
265:       "weka.core.neighboursearch.BallTree",
266:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
267:       "weka.core.neighboursearch.balltrees.BallSplitter",
268:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
269:       "weka.classifiers.bayes.NaiveBayes",
270:       "weka.core.converters.ArffLoader$ArffReader",
271:       "weka.attributeSelection.AttributeSelection",
272:       "weka.classifiers.rules.PART",
273:       "weka.core.WekaException",
274:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
275:       "weka.classifiers.meta.CostSensitiveClassifier",
276:       "weka.estimators.Estimator",
277:       "weka.estimators.KernelEstimator",
278:       "weka.core.UnassignedClassException",
279:       "weka.core.Stopwords",
280:       "weka.core.matrix.Matrix",
281:       "weka.attributeSelection.OneRAttributeEval",
282:       "weka.classifiers.lazy.LWL",
283:       "weka.classifiers.trees.DecisionStump",
284:       "weka.classifiers.bayes.NaiveBayesUpdateable",
285:       "weka.core.SelectedTag",
286:       "weka.filters.AllFilter",
287:       "weka.classifiers.MultipleClassifiersCombiner",
288:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
289:       "weka.classifiers.meta.Vote",
290:       "weka.classifiers.trees.RandomForest",
291:       "weka.classifiers.trees.RandomTree",
292:       "weka.core.SerializationHelper",
293:       "weka.core.UnsupportedAttributeTypeException",
294:       "weka.classifiers.functions.SimpleLogistic",
295:       "weka.attributeSelection.ReliefFAttributeEval",
296:       "weka.classifiers.IteratedSingleClassifierEnhancer",
297:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
298:       "weka.classifiers.meta.LogitBoost",
299:       "weka.classifiers.meta.RegressionByDiscretization",
300:       "weka.filters.unsupervised.attribute.Discretize",
301:       "weka.classifiers.trees.J48",
302:       "weka.classifiers.trees.j48.ClassifierTree",
303:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
304:       "weka.classifiers.meta.AdditiveRegression",
305:       "weka.core.WekaEnumeration",
306:       "weka.core.Attribute$1",
307:       "weka.classifiers.functions.VotedPerceptron",
308:       "weka.filters.SimpleFilter",
309:       "weka.filters.SimpleStreamFilter",
310:       "weka.filters.MultiFilter",
311:       "weka.classifiers.meta.MultiClassClassifier",
312:       "weka.classifiers.functions.Logistic",
313:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
314:       "weka.classifiers.lazy.KStar",
315:       "weka.attributeSelection.GainRatioAttributeEval",
316:       "weka.classifiers.functions.MultilayerPerceptron",
317:       "weka.core.FastVector",
318:       "weka.filters.unsupervised.attribute.NominalToBinary",
319:       "weka.classifiers.functions.neural.SigmoidUnit",
320:       "weka.classifiers.functions.neural.LinearUnit",
321:       "weka.classifiers.functions.SMO",
322:       "weka.classifiers.functions.supportVector.CachedKernel",
323:       "weka.classifiers.functions.supportVector.PolyKernel",
324:       "weka.classifiers.functions.supportVector.Puk",
325:       "weka.classifiers.functions.supportVector.RBFKernel",
326:       "weka.classifiers.trees.LMT",
327:       "weka.attributeSelection.InfoGainAttributeEval",
328:       "weka.core.Queue",
329:       "weka.core.AttributeLocator",
330:       "weka.core.StringLocator",
331:       "weka.core.RelationalLocator",
332:       "weka.core.ContingencyTables",
333:       "weka.core.Queue$QueueNode",
334:       "weka.estimators.DiscreteEstimator",
335:       "weka.classifiers.functions.SimpleLinearRegression",
336:       "weka.attributeSelection.WrapperSubsetEval",
337:       "weka.classifiers.rules.JRip",
338:       "weka.classifiers.meta.AttributeSelectedClassifier",
339:       "weka.attributeSelection.CfsSubsetEval",
340:       "weka.attributeSelection.ASSearch",
341:       "weka.attributeSelection.BestFirst",
342:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
343:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
344:       "weka.classifiers.meta.Stacking",
345:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
346:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
347:       "weka.classifiers.meta.RandomCommittee",
348:       "weka.classifiers.meta.FilteredClassifier",
349:       "weka.filters.supervised.attribute.AttributeSelection",
350:       "weka.attributeSelection.GreedyStepwise",
351:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
352:       "weka.classifiers.rules.part.MakeDecList",
353:       "weka.classifiers.rules.DecisionTable",
354:       "weka.estimators.NormalEstimator",
355:       "weka.classifiers.functions.GaussianProcesses",
356:       "weka.classifiers.trees.REPTree",
357:       "weka.classifiers.meta.ClassificationViaRegression",
358:       "weka.classifiers.trees.M5P",
359:       "weka.core.ClassDiscovery",
360:       "weka.classifiers.meta.CVParameterSelection",
361:       "weka.classifiers.functions.SMOreg",
362:       "weka.classifiers.functions.supportVector.RegOptimizer",
363:       "weka.classifiers.functions.supportVector.RegSMO",
364:       "weka.classifiers.functions.supportVector.RegSMOImproved",
365:       "weka.classifiers.functions.SGD",
366:       "weka.classifiers.meta.MultiScheme",
367:       "weka.classifiers.meta.AdaBoostM1",
368:       "weka.classifiers.functions.supportVector.StringKernel",
369:       "weka.classifiers.meta.Bagging",
370:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
371:       "weka.core.AttributeStats",
372:       "weka.experiment.Stats",
373:       "weka.core.neighboursearch.kdtrees.KMeansInpiredMethod",
374:       "weka.core.Javadoc",
375:       "weka.core.OptionHandlerJavadoc",
376:       "weka.classifiers.rules.OneR",
377:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
378:       "weka.core.Check",
379:       "weka.core.CheckGOE",
380:       "weka.estimators.PoissonEstimator",
381:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor"
382:     );
383:   }
384: }

[MASTER] 00:18:08.339 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
naiveBayesMultinomialText0.getRevision();
MockFile mockFile0 = new MockFile("9122", "9122");
naiveBayesMultinomialText0.setStopwords(mockFile0);
naiveBayesMultinomialText0.getUseWordFrequencies();
naiveBayesMultinomialText0.toString();
naiveBayesMultinomialText0.getNorm();
naiveBayesMultinomialText0.normTipText();
FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.m_inputVector = null;
naiveBayesMultinomialText0.getStopwords();
naiveBayesMultinomialText0.getPeriodicPruning();
naiveBayesMultinomialText0.getStemmer();
DenseInstance denseInstance0 = new DenseInstance(1952257861);

[MASTER] 00:18:09.378 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_67_1575505089361/weka/classifiers/bayes/NaiveBayesMultinomialText_67_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_67_1575505089361/weka/classifiers/bayes/NaiveBayesMultinomialText_67_tmp__ESTest_scaffolding.java]]
[MASTER] 00:18:09.378 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 00:18:09.378 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 00:18:09.378 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 00:18:09.379 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 00:18:09.379 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 00:18:09.379 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 00:18:09.379 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 00:18:09.379 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_67_1575505089361/weka/classifiers/bayes/NaiveBayesMultinomialText_67_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 00:18:09 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.Random;
16: import org.evosuite.runtime.System;
17: import org.evosuite.runtime.testdata.FileSystemHandling;
18: import org.junit.runner.RunWith;
19: import weka.classifiers.bayes.NaiveBayesMultinomialText;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_67_tmp__ESTest extends NaiveBayesMultinomialText_67_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=2.063983366979555
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       Random.setNextRandom(0);
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
33:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
34:       FileSystemHandling.shouldAllThrowIOExceptions();
35:       naiveBayesMultinomialText0.m_stopwords = null;
36:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
37:       
38:       Integer integer0 = new Integer(0);
39:       Integer.compareUnsigned(523, (-1188));
40:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
41:       hashMap0.put(integer0, linkedHashMap0);
42:       naiveBayesMultinomialText0.setNorm(0);
43:       hashMap0.clone();
44:       naiveBayesMultinomialText0.pruneDictionary();
45:       naiveBayesMultinomialText0.getStopwords();
46:       System.setCurrentTimeMillis(0);
47:       double double0 = naiveBayesMultinomialText0.getNorm();
48:       assertEquals(0.0, double0, 0.01);
49:   }
50: }
RegularFileObject[/tmp/EvoSuite_67_1575505089361/weka/classifiers/bayes/NaiveBayesMultinomialText_67_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 00:18:09 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_67_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_67_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.classifiers.IteratedSingleClassifierEnhancer",
89:       "weka.core.Environment",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "weka.classifiers.AbstractClassifier",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "weka.attributeSelection.ReliefFAttributeEval",
96:       "org.pentaho.packageManagement.Package",
97:       "weka.core.OptionHandler",
98:       "weka.core.xml.XMLBasicSerialization",
99:       "weka.core.WekaException",
100:       "weka.core.Range",
101:       "weka.core.logging.Logger$Level",
102:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
103:       "weka.core.scripting.JythonSerializableObject",
104:       "weka.classifiers.Classifier",
105:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
106:       "weka.core.Capabilities$Capability",
107:       "weka.core.DenseInstance",
108:       "weka.core.SparseInstance",
109:       "org.pentaho.packageManagement.PackageManager",
110:       "weka.core.stemmers.Stemmer",
111:       "weka.core.tokenizers.WordTokenizer",
112:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
113:       "org.pentaho.packageManagement.DefaultPackageManager",
114:       "weka.core.stemmers.SnowballStemmer",
115:       "weka.classifiers.Evaluation",
116:       "weka.classifiers.functions.supportVector.Kernel",
117:       "weka.core.WekaPackageManager",
118:       "org.bounce.net.DefaultAuthenticator",
119:       "weka.core.TechnicalInformationHandler",
120:       "weka.core.neighboursearch.LinearNNSearch",
121:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
122:       "weka.core.Option",
123:       "weka.core.stemmers.NullStemmer",
124:       "weka.core.neighboursearch.PerformanceStats",
125:       "weka.core.Utils",
126:       "weka.core.CustomDisplayStringProvider",
127:       "weka.core.tokenizers.Tokenizer",
128:       "weka.core.NormalizableDistance",
129:       "weka.core.Attribute",
130:       "weka.core.NoSupportForMissingValuesException",
131:       "weka.core.Stopwords",
132:       "weka.classifiers.UpdateableClassifier",
133:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
134:       "weka.core.MultiInstanceCapabilitiesHandler",
135:       "weka.core.Copyable",
136:       "weka.core.Capabilities",
137:       "weka.core.BinarySparseInstance",
138:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
139:       "weka.core.UnassignedDatasetException",
140:       "weka.core.tokenizers.NGramTokenizer",
141:       "weka.core.SerializedObject",
142:       "weka.clusterers.UpdateableClusterer",
143:       "weka.core.Summarizable",
144:       "weka.classifiers.SingleClassifierEnhancer",
145:       "weka.core.RevisionUtils",
146:       "weka.core.AdditionalMeasureProducer",
147:       "org.pentaho.packageManagement.PackageManager$1",
148:       "weka.core.Instance",
149:       "weka.core.ProtectedProperties",
150:       "weka.core.Drawable",
151:       "weka.core.matrix.Matrix",
152:       "weka.core.AttributeStats",
153:       "weka.core.WeightedInstancesHandler",
154:       "weka.core.neighboursearch.NearestNeighbourSearch",
155:       "weka.core.CapabilitiesHandler",
156:       "weka.classifiers.trees.DecisionStump",
157:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
158:       "weka.attributeSelection.ASEvaluation",
159:       "weka.core.EuclideanDistance",
160:       "weka.core.AbstractInstance",
161:       "weka.core.Instances",
162:       "weka.core.scripting.JythonObject",
163:       "org.pentaho.packageManagement.DefaultPackage",
164:       "weka.core.UnassignedClassException",
165:       "weka.classifiers.meta.AdditiveRegression",
166:       "weka.classifiers.rules.ZeroR",
167:       "weka.core.Version",
168:       "weka.core.TechnicalInformation",
169:       "weka.core.UnsupportedAttributeTypeException",
170:       "weka.classifiers.Sourcable",
171:       "weka.core.RevisionHandler",
172:       "weka.classifiers.evaluation.output.prediction.PlainText",
173:       "weka.core.xml.XMLSerialization",
174:       "weka.classifiers.xml.XMLClassifier"
175:     );
176:   } 
177: 
178:   private static void resetClasses() {
179:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_67_tmp__ESTest_scaffolding.class.getClassLoader()); 
180: 
181:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
182:       "weka.classifiers.AbstractClassifier",
183:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
184:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
185:       "weka.core.Capabilities$Capability",
186:       "weka.core.tokenizers.Tokenizer",
187:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
188:       "weka.core.tokenizers.WordTokenizer",
189:       "weka.core.stemmers.NullStemmer",
190:       "weka.classifiers.Evaluation",
191:       "weka.core.Utils",
192:       "weka.core.Option",
193:       "weka.core.stemmers.LovinsStemmer",
194:       "weka.core.stemmers.IteratedLovinsStemmer",
195:       "weka.core.SerializedObject",
196:       "weka.core.TechnicalInformation",
197:       "weka.core.TechnicalInformation$Type",
198:       "weka.core.TechnicalInformation$Field",
199:       "weka.core.RevisionUtils",
200:       "weka.core.Capabilities",
201:       "org.pentaho.packageManagement.PackageManager",
202:       "org.pentaho.packageManagement.DefaultPackageManager",
203:       "weka.core.Version",
204:       "weka.core.Environment",
205:       "weka.core.WekaPackageManager",
206:       "weka.attributeSelection.ASEvaluation",
207:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
208:       "weka.attributeSelection.PrincipalComponents",
209:       "weka.classifiers.misc.SerializedClassifier",
210:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
211:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
212:       "weka.core.Tag",
213:       "weka.classifiers.lazy.IBk",
214:       "weka.core.neighboursearch.NearestNeighbourSearch",
215:       "weka.core.neighboursearch.LinearNNSearch",
216:       "weka.core.NormalizableDistance",
217:       "weka.core.EuclideanDistance",
218:       "weka.core.Range",
219:       "weka.classifiers.CostMatrix",
220:       "weka.core.TestInstances",
221:       "weka.core.stemmers.SnowballStemmer",
222:       "weka.core.stemmers.Stemming",
223:       "weka.core.neighboursearch.CoverTree",
224:       "weka.core.AbstractInstance",
225:       "weka.core.SparseInstance",
226:       "weka.core.BinarySparseInstance",
227:       "weka.core.Instances",
228:       "weka.core.UnassignedDatasetException",
229:       "weka.core.Attribute",
230:       "weka.core.ProtectedProperties",
231:       "weka.core.neighboursearch.balltrees.BallNode",
232:       "weka.core.DenseInstance",
233:       "weka.attributeSelection.CorrelationAttributeEval",
234:       "weka.core.tokenizers.NGramTokenizer",
235:       "weka.classifiers.bayes.NaiveBayesMultinomial",
236:       "weka.core.tokenizers.AlphabeticTokenizer",
237:       "weka.classifiers.functions.supportVector.Kernel",
238:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
239:       "weka.classifiers.bayes.BayesNet",
240:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
241:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
242:       "weka.classifiers.bayes.net.search.local.K2",
243:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
244:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
245:       "weka.classifiers.SingleClassifierEnhancer",
246:       "weka.classifiers.misc.InputMappedClassifier",
247:       "weka.classifiers.rules.ZeroR",
248:       "weka.classifiers.RandomizableClassifier",
249:       "weka.classifiers.functions.SGDText",
250:       "weka.filters.Filter",
251:       "weka.filters.supervised.attribute.Discretize",
252:       "weka.core.neighboursearch.KDTree",
253:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
254:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
255:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
257:       "weka.core.FindWithCapabilities",
258:       "weka.core.SingleIndex",
259:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
260:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
261:       "weka.classifiers.trees.m5.M5Base",
262:       "weka.classifiers.rules.M5Rules",
263:       "weka.classifiers.functions.LinearRegression",
264:       "weka.classifiers.bayes.net.BIFReader",
265:       "weka.core.neighboursearch.BallTree",
266:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
267:       "weka.core.neighboursearch.balltrees.BallSplitter",
268:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
269:       "weka.classifiers.bayes.NaiveBayes",
270:       "weka.core.converters.ArffLoader$ArffReader",
271:       "weka.attributeSelection.AttributeSelection",
272:       "weka.classifiers.rules.PART",
273:       "weka.core.WekaException",
274:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
275:       "weka.classifiers.meta.CostSensitiveClassifier",
276:       "weka.estimators.Estimator",
277:       "weka.estimators.KernelEstimator",
278:       "weka.core.UnassignedClassException",
279:       "weka.core.Stopwords",
280:       "weka.core.matrix.Matrix",
281:       "weka.attributeSelection.OneRAttributeEval",
282:       "weka.classifiers.lazy.LWL",
283:       "weka.classifiers.trees.DecisionStump",
284:       "weka.classifiers.bayes.NaiveBayesUpdateable",
285:       "weka.core.SelectedTag",
286:       "weka.filters.AllFilter",
287:       "weka.classifiers.MultipleClassifiersCombiner",
288:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
289:       "weka.classifiers.meta.Vote",
290:       "weka.classifiers.trees.RandomForest",
291:       "weka.classifiers.trees.RandomTree",
292:       "weka.core.SerializationHelper",
293:       "weka.core.UnsupportedAttributeTypeException",
294:       "weka.classifiers.functions.SimpleLogistic",
295:       "weka.attributeSelection.ReliefFAttributeEval",
296:       "weka.classifiers.IteratedSingleClassifierEnhancer",
297:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
298:       "weka.classifiers.meta.LogitBoost",
299:       "weka.classifiers.meta.RegressionByDiscretization",
300:       "weka.filters.unsupervised.attribute.Discretize",
301:       "weka.classifiers.trees.J48",
302:       "weka.classifiers.trees.j48.ClassifierTree",
303:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
304:       "weka.classifiers.meta.AdditiveRegression",
305:       "weka.core.WekaEnumeration",
306:       "weka.core.Attribute$1",
307:       "weka.classifiers.functions.VotedPerceptron",
308:       "weka.filters.SimpleFilter",
309:       "weka.filters.SimpleStreamFilter",
310:       "weka.filters.MultiFilter",
311:       "weka.classifiers.meta.MultiClassClassifier",
312:       "weka.classifiers.functions.Logistic",
313:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
314:       "weka.classifiers.lazy.KStar",
315:       "weka.attributeSelection.GainRatioAttributeEval",
316:       "weka.classifiers.functions.MultilayerPerceptron",
317:       "weka.core.FastVector",
318:       "weka.filters.unsupervised.attribute.NominalToBinary",
319:       "weka.classifiers.functions.neural.SigmoidUnit",
320:       "weka.classifiers.functions.neural.LinearUnit",
321:       "weka.classifiers.functions.SMO",
322:       "weka.classifiers.functions.supportVector.CachedKernel",
323:       "weka.classifiers.functions.supportVector.PolyKernel",
324:       "weka.classifiers.functions.supportVector.Puk",
325:       "weka.classifiers.functions.supportVector.RBFKernel",
326:       "weka.classifiers.trees.LMT",
327:       "weka.attributeSelection.InfoGainAttributeEval",
328:       "weka.core.Queue",
329:       "weka.core.AttributeLocator",
330:       "weka.core.StringLocator",
331:       "weka.core.RelationalLocator",
332:       "weka.core.ContingencyTables",
333:       "weka.core.Queue$QueueNode",
334:       "weka.estimators.DiscreteEstimator",
335:       "weka.classifiers.functions.SimpleLinearRegression",
336:       "weka.attributeSelection.WrapperSubsetEval",
337:       "weka.classifiers.rules.JRip",
338:       "weka.classifiers.meta.AttributeSelectedClassifier",
339:       "weka.attributeSelection.CfsSubsetEval",
340:       "weka.attributeSelection.ASSearch",
341:       "weka.attributeSelection.BestFirst",
342:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
343:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
344:       "weka.classifiers.meta.Stacking",
345:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
346:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
347:       "weka.classifiers.meta.RandomCommittee",
348:       "weka.classifiers.meta.FilteredClassifier",
349:       "weka.filters.supervised.attribute.AttributeSelection",
350:       "weka.attributeSelection.GreedyStepwise",
351:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
352:       "weka.classifiers.rules.part.MakeDecList",
353:       "weka.classifiers.rules.DecisionTable",
354:       "weka.estimators.NormalEstimator",
355:       "weka.classifiers.functions.GaussianProcesses",
356:       "weka.classifiers.trees.REPTree",
357:       "weka.classifiers.meta.ClassificationViaRegression",
358:       "weka.classifiers.trees.M5P",
359:       "weka.core.ClassDiscovery",
360:       "weka.classifiers.meta.CVParameterSelection",
361:       "weka.classifiers.functions.SMOreg",
362:       "weka.classifiers.functions.supportVector.RegOptimizer",
363:       "weka.classifiers.functions.supportVector.RegSMO",
364:       "weka.classifiers.functions.supportVector.RegSMOImproved",
365:       "weka.classifiers.functions.SGD",
366:       "weka.classifiers.meta.MultiScheme",
367:       "weka.classifiers.meta.AdaBoostM1",
368:       "weka.classifiers.functions.supportVector.StringKernel",
369:       "weka.classifiers.meta.Bagging",
370:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
371:       "weka.core.AttributeStats",
372:       "weka.experiment.Stats",
373:       "weka.core.neighboursearch.kdtrees.KMeansInpiredMethod",
374:       "weka.core.Javadoc",
375:       "weka.core.OptionHandlerJavadoc",
376:       "weka.classifiers.rules.OneR",
377:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
378:       "weka.core.Check",
379:       "weka.core.CheckGOE",
380:       "weka.estimators.PoissonEstimator",
381:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor"
382:     );
383:   }
384: }

[MASTER] 00:18:09.380 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Random.setNextRandom(0);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
FileSystemHandling.shouldAllThrowIOExceptions();
naiveBayesMultinomialText0.m_stopwords = null;
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);

Integer integer0 = new Integer(0);
Integer.compareUnsigned(523, (-1188));
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
hashMap0.put(integer0, linkedHashMap0);
naiveBayesMultinomialText0.setNorm(0);
hashMap0.clone();
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.getStopwords();
System.setCurrentTimeMillis(0);
double double0 = naiveBayesMultinomialText0.getNorm();
assertEquals(0.0, double0, 0.01);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/mosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13274
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 00:29:36.056 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 00:29:36.081 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 00:29:36.082 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 00:29:36.187 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 00:29:36.204 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 00:29:36.206 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1729
* Using seed 1013
* Starting evolution
[MASTER] 00:31:28.916 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 123s and 305 generations, 117996 statements, best individual has fitness: 4112.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 72%
* Total number of goals: 370
* Number of covered goals: 265
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 60%
* Total number of goals: 242
* Number of covered goals: 145
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 32
* Number of covered goals: 32
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 75%
* Total number of goals: 713
* Number of covered goals: 532
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 72
* Number of covered goals: 39
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 60%
* Total number of goals: 242
* Number of covered goals: 145
* Generated 82 tests with total length 511
* Resulting test suite's coverage: 71% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 27%
* Compiling and checking tests
[MASTER] 00:33:24.484 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 00:33:25.043 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 00:33:37.487 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 00:33:37.488 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances(";HI%}B6xCB_Fq", arrayList0, 89);
Instances instances1 = new Instances(instances0);
MockRandom mockRandom0 = new MockRandom();
Attribute attribute0 = new Attribute("@data", instances0, 89);
arrayList0.add(attribute0);
instances0.enumerateAttributes();
discretize0.setInputFormat(instances0);

[MASTER] 00:33:38.431 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 00:33:38.432 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances(";HI%}B6xCB_Fq", arrayList0, 2004);
Attribute attribute0 = new Attribute("@relation", instances0, 2004);
arrayList0.add(attribute0);
discretize0.setInputFormat(instances0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/mosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13271
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13274
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13276
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1367
* Using seed 1013
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 00:35:00.021 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 00:35:00.024 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 00:35:00.025 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 00:35:00.160 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2699
* Using seed 1013
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 00:35:12.711 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 00:35:12.713 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 00:35:12.714 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 00:35:13.174 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 00:35:13.646 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 00:35:13.656 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 00:35:15.652 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 00:35:15.677 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 00:35:15.678 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 00:35:15.678 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 00:35:15.678 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 00:35:15.678 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 00:35:15.678 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 00:35:15.679 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 00:35:15.679 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 00:35:15.716 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 00:35:15.726 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 3904
* Using seed 1013
* Starting evolution
[MASTER] 00:35:19.151 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 00:35:58.128 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 00:37:02.036 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 124s and 163 generations, 71141 statements, best individual has fitness: 2888.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 217
* Number of covered goals: 187
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 284
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 87%
* Total number of goals: 260
* Number of covered goals: 227
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 284
* Generated 78 tests with total length 218
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 136s and 38 generations, 25234 statements, best individual has fitness: 2272.0
[MASTER] 00:37:20.205 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 18 seconds more than allowed.
* Search finished after 127s and 58 generations, 42452 statements, best individual has fitness: 13232.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 647
* Number of covered goals: 631
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 95%
* Total number of goals: 441
* Number of covered goals: 417
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 678
* Number of covered goals: 616
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 42%
* Total number of goals: 244
* Number of covered goals: 103
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 92%
* Total number of goals: 441
* Number of covered goals: 404
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Generated 201 tests with total length 1932
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
* Coverage of criterion LINE: 66%
* Total number of goals: 1378
* Number of covered goals: 914
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 50%
* Total number of goals: 809
* Number of covered goals: 406
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 58
* Number of covered goals: 58
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 67%
* Total number of goals: 424
* Number of covered goals: 284
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 23%
* Total number of goals: 278
* Number of covered goals: 64
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 97%
* Total number of goals: 103
* Number of covered goals: 100
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 49%
* Total number of goals: 809
* Number of covered goals: 393
* Generated 150 tests with total length 2209
* Resulting test suite's coverage: 58% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 76%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/mosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 11%
* Compiling and checking tests
[MASTER] 00:44:33.353 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 00:44:33.630 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 00:44:33.631 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 00:44:34.374 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/mosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 33%
[MASTER] 00:45:28.595 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/mosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
