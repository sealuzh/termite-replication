* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10121
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1367
* Using seed 1017
* Starting evolution
* Search finished after 124s and 169 generations, 88619 statements, best individual has fitness: 2816.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 217
* Number of covered goals: 188
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 283
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 238
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 282
* Generated 79 tests with total length 268
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 79%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/mosa/tests/s1017/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10118
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10121
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 03:03:56.788 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 03:03:56.791 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 03:03:56.792 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 03:03:56.916 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:03:56.931 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:03:56.931 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 03:04:00.238 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:04:00.256 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:04:00.275 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1412
* Using seed 1017
* Starting evolution
[MASTER] 03:04:02.240 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 03:04:02.622 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 03:04:02.622 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 03:04:02.785 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 03:04:02.786 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 03:04:03.528 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Total number of test goals for MOSA: 2767
* Using seed 1017
* Starting evolution
[MASTER] 03:04:06.339 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 262
[MASTER] 03:04:06.339 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 263
[MASTER] 03:04:06.339 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 264
[MASTER] 03:04:06.339 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 265
[MASTER] 03:04:06.339 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 266
[MASTER] 03:04:06.339 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 267
[MASTER] 03:04:06.339 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 268
[MASTER] 03:04:06.339 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 270
[MASTER] 03:04:06.339 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;: Line 439
[MASTER] 03:04:06.339 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;: Line 440
[MASTER] 03:04:06.339 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;: Line 441
[MASTER] 03:04:06.346 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;: Line 972
[MASTER] 03:04:06.349 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;: Line 973
[MASTER] 03:04:06.350 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;: Line 974
[MASTER] 03:04:06.351 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: root-Branch
[MASTER] 03:04:06.353 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;: root-Branch
[MASTER] 03:04:06.353 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;: root-Branch
[MASTER] 03:04:06.354 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 8: weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;:263 - ReplaceConstant - William W. Cohen -> 
[MASTER] 03:04:06.355 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 9: weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;:264 - ReplaceConstant - Fast Effective Rule Induction -> 
[MASTER] 03:04:06.355 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 10: weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;:265 - ReplaceConstant - Twelfth International Conference on Machine Learning -> 
[MASTER] 03:04:06.355 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 11: weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;:266 - ReplaceConstant - 1995 -> 
[MASTER] 03:04:06.356 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 12: weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;:267 - ReplaceConstant - 115-123 -> 
[MASTER] 03:04:06.356 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 13: weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;:268 - ReplaceConstant - Morgan Kaufmann -> 
[MASTER] 03:04:06.357 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 180: weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;:439 - ReplaceConstant - 1 -> 0
[MASTER] 03:04:06.358 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 181: weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;:440 - ReplaceConstant - measureNumRules -> 
[MASTER] 03:04:06.359 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 891: weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;:973 - ReplaceVariable value -> cover
[MASTER] 03:04:06.362 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 892: weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;:973 - ReplaceVariable value -> accu
[MASTER] 03:04:06.362 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 893: weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;:973 - ReplaceVariable value -> accuRate
[MASTER] 03:04:06.362 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 894: weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;:973 - ReplaceVariable value -> maxInfoGain
[MASTER] 03:04:06.363 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 895: weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;:973 - InsertUnaryOp Negation
[MASTER] 03:04:06.364 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;:NonNull:weka.core.TechnicalInformation:hasAdditional()Z:False
[MASTER] 03:04:06.364 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;:NonNull
[MASTER] 03:04:06.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;
[MASTER] 03:04:06.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;
[MASTER] 03:04:06.367 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NominalAntd.copy()Ljava/lang/Object;
[MASTER] 03:04:06.368 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;
[MASTER] 03:04:06.368 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;
[MASTER] 03:04:06.370 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.NominalAntd.copy()Ljava/lang/Object;
[MASTER] 03:04:06.372 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: root-Branch in context: weka.classifiers.rules.JRip:getTechnicalInformation()Lweka/core/TechnicalInformation;
[MASTER] 03:04:06.372 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.enumerateMeasures()Ljava/util/Enumeration;: root-Branch in context: weka.classifiers.rules.JRip:enumerateMeasures()Ljava/util/Enumeration;
[MASTER] 03:04:06.373 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$NominalAntd.copy()Ljava/lang/Object;: root-Branch in context: 
* Search finished after 122s and 226 generations, 91996 statements, best individual has fitness: 1456.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 91%
* Total number of goals: 338
* Number of covered goals: 306
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 85%
* Total number of goals: 194
* Number of covered goals: 164
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 476
* Number of covered goals: 442
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 61
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 83%
* Total number of goals: 194
* Number of covered goals: 161
* Generated 80 tests with total length 644
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 123s and 212 generations, 73854 statements, best individual has fitness: 13184.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 34%
* Total number of goals: 705
* Number of covered goals: 237
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 25%
* Total number of goals: 416
* Number of covered goals: 103
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 51%
* Total number of goals: 993
* Number of covered goals: 510
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 30%
* Total number of goals: 93
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 25%
* Total number of goals: 416
* Number of covered goals: 103
* Generated 71 tests with total length 380
* Resulting test suite's coverage: 41% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/mosa/tests/s1017/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 58%
* Compiling and checking tests
[MASTER] 03:09:07.881 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_34_1575515347860/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_34_1575515347860/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding.java]]
[MASTER] 03:09:07.881 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 03:09:07.881 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 03:09:07.883 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 03:09:07.883 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 03:09:07.884 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_34_1575515347860/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 03:09:07 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.Instances;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_34_tmp__ESTest extends NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=1.543056733112554
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
29:       try { 
30:         naiveBayesMultinomialText0.buildClassifier((Instances) null);
31:         fail("Expecting exception: NullPointerException");
32:       
33:       } catch(NullPointerException e) {
34:          //
35:          // no message in exception (getMessage() returned null)
36:          //
37:          verifyException("weka.core.Capabilities", e);
38:       }
39:   }
40: }
RegularFileObject[/tmp/EvoSuite_34_1575515347860/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 03:09:07 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.classifiers.AbstractClassifier",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.OptionHandler",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.core.WekaException",
96:       "weka.attributeSelection.SubsetEvaluator",
97:       "weka.filters.StreamableFilter",
98:       "weka.core.Range",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.attributeSelection.WrapperSubsetEval",
102:       "weka.classifiers.Classifier",
103:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
104:       "weka.core.Capabilities$Capability",
105:       "weka.core.SparseInstance",
106:       "weka.core.DenseInstance",
107:       "org.pentaho.packageManagement.PackageManager",
108:       "weka.estimators.PoissonEstimator",
109:       "weka.core.stemmers.Stemmer",
110:       "weka.core.tokenizers.WordTokenizer",
111:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
112:       "org.pentaho.packageManagement.DefaultPackageManager",
113:       "weka.core.stemmers.SnowballStemmer",
114:       "weka.core.stemmers.LovinsStemmer",
115:       "weka.classifiers.Evaluation",
116:       "weka.classifiers.functions.supportVector.Kernel",
117:       "weka.core.WekaPackageManager",
118:       "org.bounce.net.DefaultAuthenticator",
119:       "weka.filters.SupervisedFilter",
120:       "weka.core.TechnicalInformationHandler",
121:       "weka.estimators.IncrementalEstimator",
122:       "weka.estimators.Estimator$Builder",
123:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
124:       "weka.core.Option",
125:       "weka.core.stemmers.NullStemmer",
126:       "weka.classifiers.functions.SGDText",
127:       "weka.core.RelationalLocator",
128:       "weka.filters.Sourcable",
129:       "weka.core.Utils",
130:       "weka.core.CustomDisplayStringProvider",
131:       "weka.core.tokenizers.Tokenizer",
132:       "weka.core.Attribute",
133:       "weka.core.NoSupportForMissingValuesException",
134:       "weka.core.Stopwords",
135:       "weka.classifiers.UpdateableClassifier",
136:       "weka.core.tokenizers.AlphabeticTokenizer",
137:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
138:       "weka.core.FastVector",
139:       "weka.core.MultiInstanceCapabilitiesHandler",
140:       "weka.core.Copyable",
141:       "weka.core.Capabilities",
142:       "weka.core.BinarySparseInstance",
143:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
144:       "weka.core.AttributeLocator",
145:       "weka.core.UnassignedDatasetException",
146:       "weka.classifiers.RandomizableClassifier",
147:       "weka.core.SerializedObject",
148:       "weka.clusterers.UpdateableClusterer",
149:       "weka.core.Summarizable",
150:       "weka.core.RevisionUtils",
151:       "org.pentaho.packageManagement.PackageManager$1",
152:       "weka.core.Instance",
153:       "weka.estimators.Estimator",
154:       "weka.core.Drawable",
155:       "weka.core.ProtectedProperties",
156:       "weka.core.matrix.Matrix",
157:       "weka.core.StringLocator",
158:       "weka.core.AttributeStats",
159:       "weka.core.WeightedInstancesHandler",
160:       "weka.core.CapabilitiesHandler",
161:       "weka.filters.unsupervised.attribute.Remove",
162:       "weka.core.Randomizable",
163:       "weka.attributeSelection.ASEvaluation",
164:       "weka.core.AbstractInstance",
165:       "weka.core.Instances",
166:       "weka.core.SelectedTag",
167:       "org.pentaho.packageManagement.DefaultPackage",
168:       "weka.core.UnassignedClassException",
169:       "weka.classifiers.rules.ZeroR",
170:       "weka.core.Version",
171:       "weka.core.stemmers.IteratedLovinsStemmer",
172:       "weka.core.stemmers.Stemming",
173:       "weka.core.TechnicalInformation",
174:       "weka.core.UnsupportedAttributeTypeException",
175:       "weka.classifiers.Sourcable",
176:       "weka.core.RevisionHandler",
177:       "weka.classifiers.evaluation.output.prediction.PlainText",
178:       "weka.core.xml.XMLSerialization",
179:       "weka.classifiers.xml.XMLClassifier",
180:       "weka.filters.Filter",
181:       "weka.filters.supervised.attribute.Discretize",
182:       "weka.core.Tag"
183:     );
184:   } 
185: 
186:   private static void resetClasses() {
187:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding.class.getClassLoader()); 
188: 
189:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
190:       "weka.classifiers.AbstractClassifier",
191:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
192:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
193:       "weka.core.Capabilities$Capability",
194:       "weka.core.tokenizers.Tokenizer",
195:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
196:       "weka.core.tokenizers.WordTokenizer",
197:       "weka.core.stemmers.NullStemmer",
198:       "weka.classifiers.Evaluation",
199:       "weka.core.Utils",
200:       "weka.core.Option",
201:       "weka.core.AbstractInstance",
202:       "weka.core.SparseInstance",
203:       "weka.core.BinarySparseInstance",
204:       "weka.core.UnassignedDatasetException",
205:       "weka.filters.Filter",
206:       "weka.filters.supervised.attribute.Discretize",
207:       "weka.core.Range",
208:       "weka.core.TechnicalInformation",
209:       "weka.core.TechnicalInformation$Type",
210:       "weka.core.TechnicalInformation$Field",
211:       "weka.core.stemmers.SnowballStemmer",
212:       "weka.core.stemmers.Stemming",
213:       "weka.core.RevisionUtils",
214:       "weka.core.stemmers.LovinsStemmer",
215:       "weka.core.DenseInstance",
216:       "weka.classifiers.trees.RandomForest",
217:       "weka.classifiers.SingleClassifierEnhancer",
218:       "weka.classifiers.misc.InputMappedClassifier",
219:       "weka.classifiers.rules.ZeroR",
220:       "weka.classifiers.bayes.NaiveBayesMultinomial",
221:       "weka.core.Instances",
222:       "weka.core.Stopwords",
223:       "weka.attributeSelection.ASEvaluation",
224:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
225:       "weka.attributeSelection.PrincipalComponents",
226:       "weka.core.neighboursearch.NearestNeighbourSearch",
227:       "weka.core.neighboursearch.CoverTree",
228:       "weka.core.NormalizableDistance",
229:       "weka.core.EuclideanDistance",
230:       "weka.core.neighboursearch.KDTree",
231:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
232:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
233:       "weka.core.neighboursearch.balltrees.BallNode",
234:       "weka.core.converters.ArffLoader$ArffReader",
235:       "weka.core.tokenizers.NGramTokenizer",
236:       "weka.classifiers.RandomizableClassifier",
237:       "weka.core.Tag",
238:       "weka.classifiers.functions.SGDText",
239:       "weka.core.SelectedTag",
240:       "weka.core.Capabilities",
241:       "org.pentaho.packageManagement.PackageManager",
242:       "org.pentaho.packageManagement.DefaultPackageManager",
243:       "weka.core.Version",
244:       "weka.core.Environment",
245:       "weka.core.WekaPackageManager",
246:       "weka.classifiers.rules.DecisionTable",
247:       "weka.attributeSelection.ASSearch",
248:       "weka.attributeSelection.BestFirst",
249:       "weka.classifiers.misc.SerializedClassifier",
250:       "weka.core.TestInstances",
251:       "weka.core.neighboursearch.BallTree",
252:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
253:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
254:       "weka.core.neighboursearch.balltrees.BallSplitter",
255:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
258:       "weka.core.ProtectedProperties",
259:       "weka.core.Attribute",
260:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
261:       "weka.classifiers.meta.CostSensitiveClassifier",
262:       "weka.classifiers.CostMatrix",
263:       "weka.core.stemmers.IteratedLovinsStemmer",
264:       "weka.filters.AllFilter",
265:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
266:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
267:       "weka.core.SerializedObject",
268:       "weka.core.WekaException",
269:       "weka.classifiers.meta.AttributeSelectedClassifier",
270:       "weka.attributeSelection.CfsSubsetEval",
271:       "weka.classifiers.trees.J48",
272:       "weka.classifiers.functions.SimpleLinearRegression",
273:       "weka.core.tokenizers.AlphabeticTokenizer",
274:       "weka.classifiers.functions.supportVector.Kernel",
275:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
276:       "weka.core.neighboursearch.LinearNNSearch",
277:       "weka.classifiers.bayes.BayesNet",
278:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
279:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
280:       "weka.classifiers.bayes.net.search.local.K2",
281:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
282:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
283:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
284:       "weka.classifiers.lazy.IBk",
285:       "weka.classifiers.bayes.NaiveBayes",
286:       "weka.estimators.Estimator",
287:       "weka.estimators.KernelEstimator",
288:       "weka.core.UnassignedClassException",
289:       "weka.core.FindWithCapabilities",
290:       "weka.core.SingleIndex",
291:       "weka.classifiers.bayes.net.BIFReader",
292:       "weka.attributeSelection.OneRAttributeEval",
293:       "weka.attributeSelection.ReliefFAttributeEval",
294:       "weka.classifiers.trees.DecisionStump",
295:       "weka.estimators.DiscreteEstimator",
296:       "weka.classifiers.IteratedSingleClassifierEnhancer",
297:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
298:       "weka.classifiers.meta.LogitBoost",
299:       "weka.core.UnsupportedAttributeTypeException",
300:       "weka.core.WekaEnumeration",
301:       "weka.core.Attribute$1",
302:       "weka.classifiers.functions.supportVector.CachedKernel",
303:       "weka.classifiers.functions.supportVector.RBFKernel",
304:       "weka.classifiers.meta.AdaBoostM1",
305:       "weka.core.ClassDiscovery",
306:       "weka.attributeSelection.CorrelationAttributeEval",
307:       "weka.estimators.PoissonEstimator",
308:       "weka.classifiers.trees.j48.ClassifierTree",
309:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
310:       "weka.classifiers.functions.GaussianProcesses",
311:       "weka.classifiers.functions.supportVector.PolyKernel",
312:       "weka.classifiers.functions.supportVector.StringKernel",
313:       "weka.classifiers.rules.JRip",
314:       "weka.attributeSelection.InfoGainAttributeEval",
315:       "weka.classifiers.trees.RandomTree",
316:       "weka.classifiers.lazy.KStar",
317:       "weka.filters.SimpleFilter",
318:       "weka.filters.SimpleStreamFilter",
319:       "weka.filters.MultiFilter",
320:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
321:       "weka.classifiers.bayes.NaiveBayesUpdateable",
322:       "weka.classifiers.meta.FilteredClassifier",
323:       "weka.filters.supervised.attribute.AttributeSelection",
324:       "weka.attributeSelection.AttributeSelection",
325:       "weka.attributeSelection.GreedyStepwise",
326:       "weka.classifiers.meta.AdditiveRegression",
327:       "weka.classifiers.trees.m5.M5Base",
328:       "weka.classifiers.rules.M5Rules",
329:       "weka.classifiers.functions.LinearRegression",
330:       "weka.classifiers.functions.SimpleLogistic",
331:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
333:       "weka.classifiers.meta.RandomCommittee",
334:       "weka.classifiers.functions.Logistic",
335:       "weka.classifiers.meta.RegressionByDiscretization",
336:       "weka.filters.unsupervised.attribute.Discretize",
337:       "weka.attributeSelection.WrapperSubsetEval",
338:       "weka.core.AttributeStats",
339:       "weka.experiment.Stats",
340:       "weka.classifiers.functions.MultilayerPerceptron",
341:       "weka.core.FastVector",
342:       "weka.filters.unsupervised.attribute.NominalToBinary",
343:       "weka.classifiers.functions.neural.SigmoidUnit",
344:       "weka.classifiers.functions.neural.LinearUnit",
345:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
346:       "weka.classifiers.meta.ClassificationViaRegression",
347:       "weka.classifiers.trees.M5P",
348:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
349:       "weka.classifiers.trees.LMT",
350:       "weka.classifiers.meta.Bagging",
351:       "weka.classifiers.trees.REPTree",
352:       "weka.classifiers.rules.OneR",
353:       "weka.classifiers.rules.PART",
354:       "weka.classifiers.rules.part.MakeDecList",
355:       "weka.estimators.NormalEstimator",
356:       "weka.classifiers.functions.VotedPerceptron",
357:       "weka.attributeSelection.GainRatioAttributeEval",
358:       "weka.estimators.MahalanobisEstimator",
359:       "weka.classifiers.meta.CVParameterSelection",
360:       "weka.classifiers.MultipleClassifiersCombiner",
361:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
362:       "weka.classifiers.meta.MultiScheme",
363:       "weka.classifiers.functions.SGD",
364:       "weka.classifiers.lazy.LWL",
365:       "weka.classifiers.functions.SMO",
366:       "weka.core.matrix.Matrix",
367:       "weka.classifiers.functions.supportVector.Puk",
368:       "weka.classifiers.meta.Vote",
369:       "weka.classifiers.meta.MultiClassClassifier",
370:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
371:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
372:       "weka.classifiers.meta.Stacking",
373:       "weka.core.ListOptions",
374:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
375:       "weka.classifiers.trees.lmt.LogisticBase",
376:       "weka.classifiers.trees.lmt.LMTNode",
377:       "weka.core.Queue",
378:       "weka.core.AttributeLocator",
379:       "weka.core.StringLocator",
380:       "weka.core.RelationalLocator",
381:       "weka.core.ManhattanDistance",
382:       "weka.core.ChebyshevDistance",
383:       "weka.classifiers.functions.SMOreg",
384:       "weka.classifiers.functions.supportVector.RegOptimizer",
385:       "weka.classifiers.functions.supportVector.RegSMO",
386:       "weka.classifiers.functions.supportVector.RegSMOImproved"
387:     );
388:   }
389: }

[MASTER] 03:09:07.884 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.buildClassifier((Instances) null);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/mosa/tests/s1017/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10116
* Connecting to master process on port 10122
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 03:13:48.386 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:13:48.389 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:13:48.389 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 03:13:48.592 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 03:13:48.595 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 03:13:48.595 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1729
* Using seed 1017
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 03:13:56.794 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:13:56.799 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:13:56.800 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 03:13:56.806 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2499
* Using seed 1017
* Starting evolution
[MASTER] 03:13:59.513 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 122s and 315 generations, 96621 statements, best individual has fitness: 7904.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 45%
* Total number of goals: 370
* Number of covered goals: 166
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 42%
* Total number of goals: 713
* Number of covered goals: 298
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 46%
* Total number of goals: 72
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 45
* Number of covered goals: 44
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Generated 58 tests with total length 221
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 122s and 99 generations, 56761 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 17 tests with total length 102
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/mosa/tests/s1017/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 14%
* Compiling and checking tests
[MASTER] 03:16:42.598 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 03:16:43.193 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/mosa/tests/s1017/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10115
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 03:19:59.470 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:19:59.474 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:19:59.475 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 03:20:00.117 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 03:20:00.692 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 03:20:00.693 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 03:20:02.095 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 03:20:02.116 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 03:20:02.117 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 03:20:02.117 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 03:20:02.117 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 03:20:02.117 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 03:20:02.117 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 03:20:02.118 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 03:20:02.118 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 03:20:02.155 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 03:20:02.163 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 3904
* Using seed 1017
* Starting evolution
[MASTER] 03:20:07.554 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
* Search finished after 126s and 52 generations, 28078 statements, best individual has fitness: 16312.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 55%
* Total number of goals: 1378
* Number of covered goals: 757
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 41%
* Total number of goals: 809
* Number of covered goals: 328
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 54
* Number of covered goals: 54
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 59%
* Total number of goals: 424
* Number of covered goals: 251
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 19%
* Total number of goals: 278
* Number of covered goals: 52
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 103
* Number of covered goals: 102
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 103
* Number of covered goals: 102
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 36%
* Total number of goals: 809
* Number of covered goals: 290
* Generated 140 tests with total length 1362
* Resulting test suite's coverage: 48% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 6%
* Compiling and checking tests
[MASTER] 03:27:56.847 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 03:27:57.488 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 03:27:57.488 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 03:27:58.195 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 03:27:58.210 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 03:27:58.331 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/mosa/tests/s1017/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10116
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 03:28:59.573 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:28:59.599 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:28:59.600 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 03:28:59.680 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2699
* Using seed 1017
* Starting evolution
* Search finished after 137s and 19 generations, 20120 statements, best individual has fitness: 3032.0
[MASTER] 03:31:20.208 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 19 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 96%
* Total number of goals: 647
* Number of covered goals: 621
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 441
* Number of covered goals: 402
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 87%
* Total number of goals: 678
* Number of covered goals: 589
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 41%
* Total number of goals: 244
* Number of covered goals: 100
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 93%
* Total number of goals: 124
* Number of covered goals: 115
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 93%
* Total number of goals: 124
* Number of covered goals: 115
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 86%
* Total number of goals: 441
* Number of covered goals: 380
* Generated 153 tests with total length 2350
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 03:36:59.292 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6802% of time used, but only 57/153 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
[MASTER] 03:38:26.099 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/mosa/tests/s1017/107_weka/evosuite-tests
* Done!

* Computation finished
