* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: org.jcvi.jillion.core.util.FileIterator
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: org.jcvi.jillion.assembly.consed.phd.PhdBuilder
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 5243
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 5239
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 06:31:13.956 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:31:14.154 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:31:14.155 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 06:31:14.182 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 06:31:14.193 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 06:31:14.194 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 06:31:14.224 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.util.FileIterator
[MASTER] 06:31:14.280 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:31:14.283 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:31:14.284 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 06:31:14.452 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 06:31:14.453 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 06:31:14.454 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 06:31:14.454 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 06:31:14.454 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 06:31:14.455 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 06:31:14.455 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 06:31:14.465 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 06:31:14.466 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
* Total number of test goals for MOSA: 424
* Using seed 1022
* Starting evolution
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.assembly.consed.phd.PhdBuilder
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 232
* Using seed 1022
* Starting evolution
[MASTER] 06:33:14.595 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 121s and 545 generations, 212224 statements, best individual has fitness: 640.0
* Search finished after 122s and 1207 generations, 166508 statements, best individual has fitness: 128.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 107
* Number of covered goals: 102
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 97%
* Total number of goals: 67
* Number of covered goals: 65
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 96%
* Total number of goals: 53
* Number of covered goals: 51
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 74
* Number of covered goals: 40
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 28
* Number of covered goals: 14
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 28
* Number of covered goals: 14
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 67
* Number of covered goals: 59
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 93
* Number of covered goals: 88
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 27
* Number of covered goals: 26
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 100%
* Total number of goals: 47
* Number of covered goals: 47
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 16
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 27
* Number of covered goals: 26
* Generated 31 tests with total length 163
* Resulting test suite's coverage: 81% (average coverage for all fitness functions)
* Generating assertions
* Generated 25 tests with total length 105
* Resulting test suite's coverage: 93% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
* Resulting test suite's mutation score: 49%
* Compiling and checking tests
* Writing JUnit test case 'FileIterator_ESTest' to /home/ubuntu/termite/mosa/tests/s1022/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
[MASTER] 06:33:28.201 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Requested array size exceeds VM limit
[MASTER] 06:33:28.201 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NucleotideSequence nucleotideSequence0 = mock(NucleotideSequence.class, new ViolatedAssumptionAnswer());
doReturn(2147483647L).when(nucleotideSequence0).getLength();
ArtificialPhd artificialPhd0 = ArtificialPhd.createNewbler454Phd("(e!Ky5d2iAUgY1sR", nucleotideSequence0, (QualitySequence) null);
PhdBuilder phdBuilder0 = new PhdBuilder(artificialPhd0);

* Writing JUnit test case 'PhdBuilder_ESTest' to /home/ubuntu/termite/mosa/tests/s1022/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 5244
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 06:55:53.063 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:55:53.101 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:55:53.102 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 06:55:53.188 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 836
* Using seed 1022
* Starting evolution
[MASTER] 06:55:54.428 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 06:55:54.428 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 06:56:43.207 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 122s and 364 generations, 189646 statements, best individual has fitness: 376.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 131
* Number of covered goals: 130
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 97%
* Total number of goals: 74
* Number of covered goals: 72
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 47
* Number of covered goals: 47
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 99%
* Total number of goals: 469
* Number of covered goals: 464
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 63%
* Total number of goals: 52
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 83%
* Total number of goals: 18
* Number of covered goals: 15
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 83%
* Total number of goals: 18
* Number of covered goals: 15
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 81%
* Total number of goals: 74
* Number of covered goals: 60
* Generated 91 tests with total length 420
* Resulting test suite's coverage: 95% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 70%
* Compiling and checking tests
[MASTER] 06:58:30.659 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 06:58:30.659 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DefaultNucleotideCodec defaultNucleotideCodec0 = DefaultNucleotideCodec.INSTANCE;
DefaultNucleotideCodec.values();
byte[] byteArray0 = new byte[4];
byteArray0[0] = (byte)84;
byteArray0[1] = (byte) (-6);
byteArray0[2] = (byte)99;
byteArray0[3] = (byte)0;
defaultNucleotideCodec0.toString(byteArray0);

* Writing JUnit test case 'DefaultNucleotideCodec_ESTest' to /home/ubuntu/termite/mosa/tests/s1022/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: org.jcvi.jillion.core.Range
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 5238
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 07:01:59.235 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 07:01:59.285 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 07:01:59.293 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToDoubleFunction
[MASTER] 07:01:59.294 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToIntFunction
[MASTER] 07:01:59.294 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToLongFunction
[MASTER] 07:01:59.440 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 07:01:59.440 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.Range
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2577
* Using seed 1022
* Starting evolution
[MASTER] 07:02:14.436 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Comparators$1.compare(Lorg/jcvi/jillion/core/Range;Lorg/jcvi/jillion/core/Range;)I: Line 165
[MASTER] 07:02:14.436 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Comparators$1.compare(Lorg/jcvi/jillion/core/Range;Lorg/jcvi/jillion/core/Range;)I: Line 168
[MASTER] 07:02:14.436 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Comparators$1.compare(Lorg/jcvi/jillion/core/Range;Lorg/jcvi/jillion/core/Range;)I: Line 176
[MASTER] 07:02:14.436 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Comparators$1.compare(Lorg/jcvi/jillion/core/Range;Lorg/jcvi/jillion/core/Range;)I: Line 177
[MASTER] 07:02:14.436 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Comparators$1.compare(Lorg/jcvi/jillion/core/Range;Lorg/jcvi/jillion/core/Range;)I: Line 181
[MASTER] 07:02:14.440 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 97: org.jcvi.jillion.core.Range.canFitInSignedByte(JJ)Z:493 - ReplaceComparisonOperator < -> <=
[MASTER] 07:02:14.440 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 117: org.jcvi.jillion.core.Range.canFitInSignedByte(JJ)Z:493 - ReplaceComparisonOperator < -> <=
[MASTER] 07:02:14.441 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 214: org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;:521 - ReplaceComparisonOperator > -> >=
[MASTER] 07:02:14.441 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 565: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:947 - ReplaceComparisonOperator >= -> >
[MASTER] 07:02:14.441 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 569: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:951 - ReplaceComparisonOperator >= -> ==
[MASTER] 07:02:14.441 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 579: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:956 - ReplaceComparisonOperator > -> >=
[MASTER] 07:02:14.441 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 627: org.jcvi.jillion.core.Range.getLength()J:971 - ReplaceArithmeticOperator + -> %
[MASTER] 07:02:14.442 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2232: org.jcvi.jillion.core.Range$Comparators$1.compare(Lorg/jcvi/jillion/core/Range;Lorg/jcvi/jillion/core/Range;)I:165 - ReplaceComparisonOperator != null -> = null
[MASTER] 07:02:14.442 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2235: org.jcvi.jillion.core.Range$Comparators$1.compare(Lorg/jcvi/jillion/core/Range;Lorg/jcvi/jillion/core/Range;)I:168 - ReplaceComparisonOperator != null -> = null
[MASTER] 07:02:14.442 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2243: org.jcvi.jillion.core.Range$Comparators$1.compare(Lorg/jcvi/jillion/core/Range;Lorg/jcvi/jillion/core/Range;)I:177 - ReplaceComparisonOperator != -> <
[MASTER] 07:02:14.442 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.Range.isEmpty()Z
[MASTER] 07:02:14.445 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.isEmpty()Z
[MASTER] 07:02:14.446 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$Comparators$1.compare(Lorg/jcvi/jillion/core/Range;Lorg/jcvi/jillion/core/Range;)I: I59 Branch 158 IFNE L177 - true in context: 
[MASTER] 07:02:14.446 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$Comparators$1.compare(Lorg/jcvi/jillion/core/Range;Lorg/jcvi/jillion/core/Range;)I: I3 Branch 156 IFNONNULL L165 - true in context: 
[MASTER] 07:02:14.451 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$Comparators$1.compare(Lorg/jcvi/jillion/core/Range;Lorg/jcvi/jillion/core/Range;)I: I27 Branch 157 IFNONNULL L168 - true in context: 
[MASTER] 07:02:24.958 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.intersection(Lorg/jcvi/jillion/core/Range;)Lorg/jcvi/jillion/core/Range;: Line 816
[MASTER] 07:02:24.958 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 835
[MASTER] 07:02:24.958 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 836
[MASTER] 07:02:24.958 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 837
[MASTER] 07:02:24.958 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 838
[MASTER] 07:02:24.959 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 843
[MASTER] 07:02:24.959 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 844
[MASTER] 07:02:24.959 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 845
[MASTER] 07:02:24.959 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 852
[MASTER] 07:02:24.962 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 181: org.jcvi.jillion.core.Range.canFitInSignedInt(JJ)Z:501 - ReplaceComparisonOperator < -> <=
[MASTER] 07:02:24.962 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 201: org.jcvi.jillion.core.Range.canFitInSignedInt(JJ)Z:501 - ReplaceComparisonOperator < -> <=
[MASTER] 07:02:24.962 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 455: org.jcvi.jillion.core.Range.intersection(Lorg/jcvi/jillion/core/Range;)Lorg/jcvi/jillion/core/Range;:810 - ReplaceComparisonOperator > -> -2
[MASTER] 07:02:24.963 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 478: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:836 - ReplaceComparisonOperator == -> >=
[MASTER] 07:02:24.963 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 485: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:837 - ReplaceArithmeticOperator - -> +
[MASTER] 07:02:24.963 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 486: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:837 - ReplaceArithmeticOperator - -> %
[MASTER] 07:02:24.963 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 487: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:837 - ReplaceArithmeticOperator - -> *
[MASTER] 07:02:24.963 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 488: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:837 - ReplaceArithmeticOperator - -> /
[MASTER] 07:02:24.963 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 492: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:838 - ReplaceComparisonOperator != -> ==
[MASTER] 07:02:24.963 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 505: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:843 - ReplaceComparisonOperator == -> <=
[MASTER] 07:02:24.963 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 511: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:844 - ReplaceArithmeticOperator + -> %
[MASTER] 07:02:24.963 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 512: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:844 - ReplaceArithmeticOperator + -> -
[MASTER] 07:02:24.963 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 513: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:844 - ReplaceArithmeticOperator + -> *
[MASTER] 07:02:24.963 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 514: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:844 - ReplaceArithmeticOperator + -> /
[MASTER] 07:02:24.963 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 518: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:845 - ReplaceComparisonOperator != -> ==
[MASTER] 07:02:24.965 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: I33 Branch 50 IFEQ L836 - false in context: org.jcvi.jillion.core.Range:complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;
[MASTER] 07:02:24.965 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: I48 Branch 51 IFNE L838 - true in context: org.jcvi.jillion.core.Range:complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;
[MASTER] 07:02:24.965 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: I10 Branch 49 IFEQ L832 - true in context: org.jcvi.jillion.core.Range:complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;
[MASTER] 07:02:24.965 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: I61 Branch 52 IFEQ L843 - false in context: org.jcvi.jillion.core.Range:complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;
[MASTER] 07:02:24.965 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: I76 Branch 53 IFNE L845 - true in context: org.jcvi.jillion.core.Range:complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;
[MASTER] 07:03:02.673 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.buildNewSignedRange(JJ)Lorg/jcvi/jillion/core/Range;: Line 486
[MASTER] 07:03:02.673 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.buildNewSignedRange(JJ)Lorg/jcvi/jillion/core/Range;: Line 487
[MASTER] 07:03:02.673 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.canFitInSignedInt(JJ)Z: Line 501
[MASTER] 07:03:02.673 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 947
[MASTER] 07:03:02.673 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 950
[MASTER] 07:03:02.673 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 951
[MASTER] 07:03:02.673 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 954
[MASTER] 07:03:02.673 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 955
[MASTER] 07:03:02.673 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 956
[MASTER] 07:03:02.673 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 957
[MASTER] 07:03:02.673 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 958
[MASTER] 07:03:02.673 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 959
[MASTER] 07:03:02.673 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 960
[MASTER] 07:03:02.674 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.getLength()J: Line 971
[MASTER] 07:03:02.676 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$IntRange.<init>(II)V: Line 1123
[MASTER] 07:03:02.676 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$IntRange.<init>(II)V: Line 1124
[MASTER] 07:03:02.676 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$IntRange.<init>(II)V: Line 1125
[MASTER] 07:03:02.676 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$IntRange.<init>(II)V: Line 1126
[MASTER] 07:03:02.676 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$IntRange.getBegin()J: Line 1138
[MASTER] 07:03:02.676 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$IntRange.getEnd()J: Line 1149
[MASTER] 07:03:02.677 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 69: org.jcvi.jillion.core.Range.buildNewSignedRange(JJ)Lorg/jcvi/jillion/core/Range;:486 - ReplaceComparisonOperator == -> !=
[MASTER] 07:03:02.677 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 137: org.jcvi.jillion.core.Range.canFitInSignedShort(JJ)Z:497 - ReplaceComparisonOperator < -> -2
[MASTER] 07:03:02.677 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 170: org.jcvi.jillion.core.Range.canFitInSignedInt(JJ)Z:501 - ReplaceComparisonOperator > -> !=
[MASTER] 07:03:02.677 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 180: org.jcvi.jillion.core.Range.canFitInSignedInt(JJ)Z:501 - ReplaceComparisonOperator < -> !=
[MASTER] 07:03:02.677 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 190: org.jcvi.jillion.core.Range.canFitInSignedInt(JJ)Z:501 - ReplaceComparisonOperator > -> !=
[MASTER] 07:03:02.677 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 200: org.jcvi.jillion.core.Range.canFitInSignedInt(JJ)Z:501 - ReplaceComparisonOperator < -> !=
[MASTER] 07:03:02.678 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 564: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:947 - ReplaceComparisonOperator >= -> ==
[MASTER] 07:03:02.678 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 578: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:956 - ReplaceComparisonOperator > -> !=
[MASTER] 07:03:02.678 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 589: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator + -> %
[MASTER] 07:03:02.678 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 590: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator + -> -
[MASTER] 07:03:02.678 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 591: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator + -> *
[MASTER] 07:03:02.678 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 592: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator + -> /
[MASTER] 07:03:02.678 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 596: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator - -> +
[MASTER] 07:03:02.678 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 597: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator - -> %
[MASTER] 07:03:02.678 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 598: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator - -> *
[MASTER] 07:03:02.678 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 599: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator - -> /
[MASTER] 07:03:02.678 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 616: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:959 - ReplaceArithmeticOperator + -> %
[MASTER] 07:03:02.678 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 617: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:959 - ReplaceArithmeticOperator + -> -
[MASTER] 07:03:02.678 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 618: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:959 - ReplaceArithmeticOperator + -> *
[MASTER] 07:03:02.678 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 619: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:959 - ReplaceArithmeticOperator + -> /
[MASTER] 07:03:02.678 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 620: org.jcvi.jillion.core.Range.getLength()J:971 - ReplaceArithmeticOperator - -> +
[MASTER] 07:03:02.678 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 621: org.jcvi.jillion.core.Range.getLength()J:971 - ReplaceArithmeticOperator - -> %
[MASTER] 07:03:02.678 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 622: org.jcvi.jillion.core.Range.getLength()J:971 - ReplaceArithmeticOperator - -> *
[MASTER] 07:03:02.678 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 623: org.jcvi.jillion.core.Range.getLength()J:971 - ReplaceArithmeticOperator - -> /
[MASTER] 07:03:02.678 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 628: org.jcvi.jillion.core.Range.getLength()J:971 - ReplaceArithmeticOperator + -> -
[MASTER] 07:03:02.678 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 629: org.jcvi.jillion.core.Range.getLength()J:971 - ReplaceArithmeticOperator + -> *
[MASTER] 07:03:02.678 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 630: org.jcvi.jillion.core.Range.getLength()J:971 - ReplaceArithmeticOperator + -> /
[MASTER] 07:03:02.679 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.Range.split(J)Ljava/util/List;
[MASTER] 07:03:02.680 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.split(J)Ljava/util/List;
[MASTER] 07:03:02.680 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.canFitInSignedInt(JJ)Z: I5 Branch 13 IFGT L501 - false in context: 
[MASTER] 07:03:02.680 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: I5 Branch 60 IFGE L947 - true in context: org.jcvi.jillion.core.Range:split(J)Ljava/util/List;
[MASTER] 07:03:02.680 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$IntRange.getEnd()J: root-Branch in context: 
[MASTER] 07:03:02.682 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$IntRange.getBegin()J: root-Branch in context: 
[MASTER] 07:03:02.682 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.canFitInSignedInt(JJ)Z: I17 Branch 16 IFLT L501 - false in context: 
[MASTER] 07:03:02.682 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: I61 Branch 62 IFGT L956 - false in context: org.jcvi.jillion.core.Range:split(J)Ljava/util/List;
[MASTER] 07:03:02.682 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.canFitInSignedInt(JJ)Z: I13 Branch 15 IFGT L501 - false in context: 
[MASTER] 07:03:02.682 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.buildNewSignedRange(JJ)Lorg/jcvi/jillion/core/Range;: I24 Branch 3 IFEQ L484 - true in context: 
[MASTER] 07:03:02.682 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.canFitInSignedInt(JJ)Z: I9 Branch 14 IFLT L501 - false in context: 
[MASTER] 07:03:02.682 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: I38 Branch 61 IFGE L951 - true in context: org.jcvi.jillion.core.Range:split(J)Ljava/util/List;
[MASTER] 07:03:02.682 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.buildNewSignedRange(JJ)Lorg/jcvi/jillion/core/Range;: I43 Branch 4 IFEQ L486 - false in context: 
[MASTER] 07:03:02.682 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.canFitInSignedShort(JJ)Z: I9 Branch 10 IFLT L497 - true in context: 
* Search finished after 127s and 92 generations, 35252 statements, best individual has fitness: 7440.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 72%
* Total number of goals: 632
* Number of covered goals: 455
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 75%
* Total number of goals: 426
* Number of covered goals: 321
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 54%
* Total number of goals: 802
* Number of covered goals: 433
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 77
* Number of covered goals: 39
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 37%
* Total number of goals: 107
* Number of covered goals: 40
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 37%
* Total number of goals: 107
* Number of covered goals: 40
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 75%
* Total number of goals: 426
* Number of covered goals: 318
* Generated 177 tests with total length 713
* Resulting test suite's coverage: 64% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 28%
* Compiling and checking tests
[MASTER] 07:05:17.134 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 07:05:17.135 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Consumer<Long> consumer0 = (Consumer<Long>) mock(Consumer.class, new ViolatedAssumptionAnswer());
Range range0 = Range.of((-674L), (-674L));
boolean boolean0 = range0.equals(consumer0);
assertTrue(range0.isEmpty());
assertFalse(boolean0);


[MASTER] 07:05:17.319 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<0>
[MASTER] 07:05:17.319 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
Range range0 = Range.of(range_CoordinateSystem0, 9223372036854775798L, 9223372036854775798L);
List<Range> list0 = range0.complement(range0);
assertFalse(list0.contains(range0));
assertEquals(1, list0.size());


[MASTER] 07:05:18.362 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<0>
[MASTER] 07:05:18.362 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of((-9223372036854774768L));
Range range1 = Range.of((-9223372036854774768L));
boolean boolean0 = range1.isSubRangeOf(range1);
assertTrue(boolean0);

List<Range> list0 = range0.complement(range1);
assertEquals(1, list0.size());
assertSame(range1, range0);


[MASTER] 07:05:18.539 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IndexOutOfBoundsException
[MASTER] 07:05:18.539 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.ofLength(9223372036854774895L);
range0.split(9223372036854774895L);

[MASTER] 07:05:18.687 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<4066> but was:<0>
[MASTER] 07:05:18.687 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(0L);
long long0 = range0.getEnd();
assertEquals(4066L, long0);

Object object0 = new Object();
boolean boolean0 = range0.equals(object0);
assertFalse(boolean0);

Range range1 = Range.of(0L, 0L);
assertFalse(range1.isEmpty());


[MASTER] 07:05:19.464 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 07:05:19.464 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.ofLength(127L);
Range range1 = Range.of(127L, 127L);
range1.equals(range0);
range1.equals(range0);
Range range2 = range1.intersection(range0);
assertNotSame(range2, range1);
assertFalse(range2.isEmpty());
assertNotSame(range2, range0);


[MASTER] 07:05:19.803 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<2> but was:<1>
[MASTER] 07:05:19.803 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.ofLength(2147483647L);
Range range1 = Range.of(2147483647L);
List<Range> list0 = range1.complement(range0);
assertEquals(2, list0.size());

Object object0 = new Object();
boolean boolean0 = range0.intersects(range1);
assertFalse(boolean0);


[MASTER] 07:05:19.955 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 07:05:19.955 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, 9223372036854775807L, 9223372036854775807L);
List<Range> list0 = range0.complement(range0);
boolean boolean0 = range0.equals(range_CoordinateSystem0);
assertFalse(boolean0);

range0.getLength();
List<Range> list1 = range0.complementFrom(list0);
assertFalse(range0.isEmpty());
assertTrue(list1.contains(range0));
assertEquals(1, list1.size());


[MASTER] 07:05:20.000 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected same:<[ 0 .. -1 ]/0B> was not:<[ 1058 .. 1058 ]/0B>
[MASTER] 07:05:20.000 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(1058L, 1058L);
Range range1 = Range.ofLength(1L);
Range range2 = range0.intersection(range1);
Range range3 = range2.intersection(range0);
assertSame(range3, range0);
assertFalse(range3.isEmpty());


[MASTER] 07:05:20.051 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 07:05:20.051 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, (-9223372036854775770L), (-9223372036854775770L));
range0.complement(range0);
Range range1 = Range.of(255L);
range1.getBegin(range_CoordinateSystem0);
range1.isSubRangeOf(range0);
range1.complement(range0);

[MASTER] 07:05:20.901 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<2> but was:<1>
[MASTER] 07:05:20.901 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of((-128L));
Range range1 = Range.ofLength(9223372036854770799L);
range1.isSubRangeOf(range0);
List<Range> list0 = range1.complement(range0);
assertEquals(2, list0.size());


[MASTER] 07:05:20.945 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<0>
[MASTER] 07:05:20.945 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(4294967295L);
Object object0 = new Object();
range0.equals(object0);
Range range1 = Range.of(4294967295L);
List<Range> list0 = range0.complement(range1);
assertFalse(list0.contains(range0));
assertEquals(1, list0.size());


[MASTER] 07:05:23.086 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IndexOutOfBoundsException
[MASTER] 07:05:23.086 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, (-9223372036854775770L), (-9223372036854775770L));
List<Range> list0 = range0.complement(range0);
Range.of((-329L), (-329L));
Range range1 = Range.of(9223372036854770799L);
Range.of((-528L));
range1.complementFrom(list0);

[MASTER] 07:05:23.548 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 07:05:23.548 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, 9223372036854775798L, 9223372036854775798L);
Range range1 = Range.of(9223372036854775798L);
boolean boolean0 = range0.equals(range1);
assertNotSame(range1, range0);
assertTrue(boolean0);


[MASTER] 07:05:23.593 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 07:05:23.594 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, 9223372036854775798L, 9223372036854775798L);
Range range1 = Range.of(9223372036854775798L);
boolean boolean0 = range0.equals(range1);
assertFalse(range0.isEmpty());
assertFalse(boolean0);
assertFalse(range1.equals((Object)range0));


[MASTER] 07:05:24.208 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 07:05:24.208 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(9223372036854770732L);
Range range1 = Range.of(4294967295L, 9223372036854770732L);
Object object0 = new Object();
List<Range> list0 = range1.complement(range0);
assertEquals(1, list0.size());
assertFalse(list0.contains(range0));
assertTrue(list0.contains(range1));


[MASTER] 07:05:24.455 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 07:05:24.456 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.ofLength(1L);
Range range1 = Range.of(255L);
List<Range> list0 = range0.complement(range1);
assertFalse(list0.contains(range0));
assertEquals(2, list0.size());

boolean boolean0 = range0.equals(range1);
assertFalse(boolean0);


[MASTER] 07:05:24.899 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 07:05:24.899 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of((-1L), 0L);
Range range1 = Range.of((-1L));
boolean boolean0 = range1.equals(range0);
assertTrue(range0.isEmpty());
assertFalse(boolean0);


* Writing JUnit test case 'Range_ESTest' to /home/ubuntu/termite/mosa/tests/s1022/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
