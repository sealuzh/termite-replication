* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14953
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 14:40:32.596 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:40:32.601 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:40:32.602 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 14:40:32.977 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 14:40:33.018 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 14:40:33.021 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1729
* Using seed 1000
* Starting evolution
* Search finished after 122s and 353 generations, 104793 statements, best individual has fitness: 7912.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 45%
* Total number of goals: 370
* Number of covered goals: 166
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 42%
* Total number of goals: 713
* Number of covered goals: 298
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 72
* Number of covered goals: 32
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 45
* Number of covered goals: 44
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Generated 62 tests with total length 221
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
[MASTER] 14:43:22.918 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 14:43:23.498 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/mosa/tests/s1000/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14955
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 14:47:23.641 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:47:23.643 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:47:23.643 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 14:47:23.710 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2699
* Using seed 1000
* Starting evolution
* Search finished after 135s and 21 generations, 15979 statements, best individual has fitness: 3152.0
[MASTER] 14:49:42.045 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 17 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 94%
* Total number of goals: 647
* Number of covered goals: 609
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 90%
* Total number of goals: 441
* Number of covered goals: 398
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 88%
* Total number of goals: 678
* Number of covered goals: 597
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 41%
* Total number of goals: 244
* Number of covered goals: 99
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 94%
* Total number of goals: 124
* Number of covered goals: 116
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 93%
* Total number of goals: 124
* Number of covered goals: 115
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 84%
* Total number of goals: 441
* Number of covered goals: 372
* Generated 186 tests with total length 2067
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 14:55:18.409 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6726479166666667% of time used, but only 86/186 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 26%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/mosa/tests/s1000/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14960
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 14:56:57.633 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 14:56:57.634 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 14:56:57.635 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 14:56:57.691 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:56:57.697 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:56:57.697 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1412
* Using seed 1000
* Starting evolution
[MASTER] 14:57:03.129 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 14:57:14.925 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 14:57:14.925 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Search finished after 123s and 234 generations, 83422 statements, best individual has fitness: 1520.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 90%
* Total number of goals: 338
* Number of covered goals: 303
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 84%
* Total number of goals: 194
* Number of covered goals: 162
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 476
* Number of covered goals: 442
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 60
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 194
* Number of covered goals: 159
* Generated 80 tests with total length 485
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 54%
* Compiling and checking tests
[MASTER] 15:01:24.185 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_49_1575471684164/weka/classifiers/bayes/NaiveBayesMultinomialText_49_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_49_1575471684164/weka/classifiers/bayes/NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding.java]]
[MASTER] 15:01:24.185 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 15:01:24.185 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 15:01:24.188 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 15:01:24.189 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_49_1575471684164/weka/classifiers/bayes/NaiveBayesMultinomialText_49_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 15:01:24 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.io.File;
12: import java.util.LinkedHashMap;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.testdata.EvoSuiteFile;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.attributeSelection.PrincipalComponents;
19: import weka.classifiers.bayes.NaiveBayesMultinomialText;
20: import weka.classifiers.misc.SerializedClassifier;
21: import weka.core.Instance;
22: import weka.core.neighboursearch.CoverTree;
23: import weka.core.tokenizers.Tokenizer;
24: 
25: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
26: public class NaiveBayesMultinomialText_49_tmp__ESTest extends NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding {
27: 
28:   /**
29:   //Test case number: 0
30:   /*Coverage entropy=3.1937561962712993
31:   */
32:   @Test(timeout = 4000)
33:   public void test0()  throws Throwable  {
34:       FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
35:       FileSystemHandling.createFolder((EvoSuiteFile) null);
36:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
37:       naiveBayesMultinomialText0.setLowercaseTokens(false);
38:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
39:       naiveBayesMultinomialText0.m_inputVector = null;
40:       naiveBayesMultinomialText0.setMinWordFrequency(1.0E75);
41:       Tokenizer tokenizer0 = naiveBayesMultinomialText0.getTokenizer();
42:       naiveBayesMultinomialText0.setTokenizer(tokenizer0);
43:       naiveBayesMultinomialText0.setUseWordFrequencies(true);
44:       naiveBayesMultinomialText0.getStopwords();
45:       naiveBayesMultinomialText0.pruneDictionary();
46:       naiveBayesMultinomialText0.stopwordsTipText();
47:       naiveBayesMultinomialText0.getUseWordFrequencies();
48:       naiveBayesMultinomialText0.pruneDictionary();
49:       SerializedClassifier serializedClassifier0 = new SerializedClassifier();
50:       File file0 = serializedClassifier0.getModelFile();
51:       naiveBayesMultinomialText0.setStopwords(file0);
52:       naiveBayesMultinomialText0.stemmerTipText();
53:       naiveBayesMultinomialText0.getTokenizer();
54:       naiveBayesMultinomialText0.getNorm();
55:       naiveBayesMultinomialText0.lowercaseTokensTipText();
56:       naiveBayesMultinomialText0.LNormTipText();
57:       naiveBayesMultinomialText0.toString();
58:       CoverTree coverTree0 = new CoverTree();
59:       PrincipalComponents principalComponents0 = new PrincipalComponents();
60:       try { 
61:         principalComponents0.convertInstance((Instance) null);
62:         fail("Expecting exception: Exception");
63:       
64:       } catch(Exception e) {
65:          //
66:          // convertInstance: Principal components not built yet
67:          //
68:          verifyException("weka.attributeSelection.PrincipalComponents", e);
69:       }
70:   }
71: }
RegularFileObject[/tmp/EvoSuite_49_1575471684164/weka/classifiers/bayes/NaiveBayesMultinomialText_49_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 15:01:24 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.core.neighboursearch.CoverTree$DistanceNode",
99:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.core.neighboursearch.CoverTree$MyHeap",
107:       "weka.core.neighboursearch.KDTree",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.EnvironmentHandler",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.core.AttributeLocator",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.AdditionalMeasureProducer",
129:       "org.pentaho.packageManagement.PackageManager$1",
130:       "weka.core.Drawable",
131:       "weka.core.matrix.Matrix",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
134:       "weka.attributeSelection.ASEvaluation",
135:       "weka.core.AbstractInstance",
136:       "weka.core.scripting.JythonObject",
137:       "weka.core.SelectedTag",
138:       "org.pentaho.packageManagement.DefaultPackage",
139:       "weka.classifiers.misc.InputMappedClassifier",
140:       "weka.core.Version",
141:       "weka.core.Tag",
142:       "weka.core.neighboursearch.CoverTree",
143:       "weka.classifiers.AbstractClassifier",
144:       "weka.filters.unsupervised.attribute.Center",
145:       "weka.core.OptionHandler",
146:       "weka.core.WekaException",
147:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
148:       "weka.filters.StreamableFilter",
149:       "weka.core.Range",
150:       "weka.core.scripting.JythonSerializableObject",
151:       "weka.classifiers.Classifier",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
153:       "weka.core.Capabilities$Capability",
154:       "weka.core.SparseInstance",
155:       "org.pentaho.packageManagement.PackageManager",
156:       "weka.attributeSelection.AttributeTransformer",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.classifiers.misc.SerializedClassifier",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.attributeSelection.PrincipalComponents",
161:       "weka.core.stemmers.SnowballStemmer",
162:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
163:       "weka.classifiers.Evaluation",
164:       "weka.classifiers.functions.supportVector.Kernel",
165:       "weka.core.WekaPackageManager",
166:       "weka.core.TechnicalInformationHandler",
167:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
168:       "weka.core.Option",
169:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
170:       "weka.core.neighboursearch.PerformanceStats",
171:       "weka.filters.Sourcable",
172:       "weka.core.Attribute",
173:       "weka.core.Stopwords",
174:       "weka.core.FastVector",
175:       "weka.core.UnassignedDatasetException",
176:       "weka.classifiers.RandomizableClassifier",
177:       "weka.classifiers.SingleClassifierEnhancer",
178:       "weka.core.RevisionUtils",
179:       "weka.core.Instance",
180:       "weka.core.ProtectedProperties",
181:       "weka.core.StringLocator",
182:       "weka.core.AttributeStats",
183:       "weka.core.WeightedInstancesHandler",
184:       "weka.core.neighboursearch.NearestNeighbourSearch",
185:       "weka.core.neighboursearch.covertrees.Stack",
186:       "weka.filters.unsupervised.attribute.Remove",
187:       "weka.core.Randomizable",
188:       "weka.core.EuclideanDistance",
189:       "weka.core.Instances",
190:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
191:       "weka.core.UnassignedClassException",
192:       "weka.classifiers.rules.ZeroR",
193:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
194:       "weka.filters.unsupervised.attribute.Standardize",
195:       "weka.core.UnsupportedAttributeTypeException",
196:       "weka.core.TechnicalInformation",
197:       "weka.classifiers.Sourcable",
198:       "weka.core.RevisionHandler",
199:       "weka.classifiers.evaluation.output.prediction.PlainText",
200:       "weka.core.neighboursearch.TreePerformanceStats",
201:       "weka.core.xml.XMLSerialization",
202:       "weka.classifiers.xml.XMLClassifier",
203:       "weka.filters.Filter"
204:     );
205:   } 
206: 
207:   private static void resetClasses() {
208:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding.class.getClassLoader()); 
209: 
210:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
211:       "weka.classifiers.AbstractClassifier",
212:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
213:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
214:       "weka.core.Capabilities$Capability",
215:       "weka.core.tokenizers.Tokenizer",
216:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
217:       "weka.core.tokenizers.WordTokenizer",
218:       "weka.core.stemmers.NullStemmer",
219:       "weka.core.tokenizers.NGramTokenizer",
220:       "weka.core.Option",
221:       "weka.core.Utils",
222:       "weka.core.neighboursearch.NearestNeighbourSearch",
223:       "weka.core.neighboursearch.LinearNNSearch",
224:       "weka.core.NormalizableDistance",
225:       "weka.core.EuclideanDistance",
226:       "weka.core.Range",
227:       "weka.core.AbstractInstance",
228:       "weka.core.SparseInstance",
229:       "weka.core.BinarySparseInstance",
230:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
231:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
232:       "weka.core.stemmers.LovinsStemmer",
233:       "weka.core.stemmers.IteratedLovinsStemmer",
234:       "weka.core.TechnicalInformation",
235:       "weka.core.TechnicalInformation$Type",
236:       "weka.core.TechnicalInformation$Field",
237:       "weka.core.neighboursearch.balltrees.BallNode",
238:       "weka.core.SerializedObject",
239:       "weka.core.DenseInstance",
240:       "weka.core.Attribute",
241:       "weka.core.ProtectedProperties",
242:       "weka.classifiers.RandomizableClassifier",
243:       "weka.core.Tag",
244:       "weka.classifiers.functions.SGDText",
245:       "weka.core.Capabilities",
246:       "org.pentaho.packageManagement.PackageManager",
247:       "org.pentaho.packageManagement.DefaultPackageManager",
248:       "weka.core.Version",
249:       "weka.core.Environment",
250:       "weka.core.WekaPackageManager",
251:       "weka.attributeSelection.ASEvaluation",
252:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
253:       "weka.attributeSelection.PrincipalComponents",
254:       "weka.core.tokenizers.AlphabeticTokenizer",
255:       "weka.filters.Filter",
256:       "weka.filters.supervised.attribute.Discretize",
257:       "weka.core.RevisionUtils",
258:       "weka.classifiers.SingleClassifierEnhancer",
259:       "weka.classifiers.misc.InputMappedClassifier",
260:       "weka.classifiers.rules.ZeroR",
261:       "weka.core.TestInstances",
262:       "weka.core.Instances",
263:       "weka.core.UnassignedDatasetException",
264:       "weka.classifiers.bayes.BayesNet",
265:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
266:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
267:       "weka.classifiers.bayes.net.search.local.K2",
268:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
269:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
270:       "weka.core.neighboursearch.CoverTree",
271:       "weka.core.stemmers.SnowballStemmer",
272:       "weka.core.stemmers.Stemming",
273:       "weka.classifiers.Evaluation",
274:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
275:       "weka.classifiers.meta.CostSensitiveClassifier",
276:       "weka.classifiers.CostMatrix",
277:       "weka.core.Stopwords",
278:       "weka.classifiers.lazy.IBk",
279:       "weka.classifiers.meta.FilteredClassifier",
280:       "weka.filters.supervised.attribute.AttributeSelection",
281:       "weka.attributeSelection.AttributeSelection",
282:       "weka.attributeSelection.CfsSubsetEval",
283:       "weka.attributeSelection.ASSearch",
284:       "weka.attributeSelection.GreedyStepwise",
285:       "weka.attributeSelection.BestFirst",
286:       "weka.classifiers.trees.J48",
287:       "weka.core.WekaException",
288:       "weka.core.converters.ArffLoader$ArffReader",
289:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
290:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
291:       "weka.core.neighboursearch.balltrees.BallSplitter",
292:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
293:       "weka.core.WekaEnumeration",
294:       "weka.core.Attribute$1",
295:       "weka.classifiers.bayes.NaiveBayesMultinomial",
296:       "weka.core.FindWithCapabilities",
297:       "weka.core.SingleIndex",
298:       "weka.core.ClassDiscovery",
299:       "weka.core.UnassignedClassException",
300:       "weka.classifiers.trees.LMT",
301:       "weka.classifiers.bayes.NaiveBayes",
302:       "weka.attributeSelection.InfoGainAttributeEval",
303:       "weka.classifiers.bayes.net.BIFReader",
304:       "weka.classifiers.functions.supportVector.Kernel",
305:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
306:       "weka.classifiers.bayes.NaiveBayesUpdateable",
307:       "weka.attributeSelection.ReliefFAttributeEval",
308:       "weka.classifiers.MultipleClassifiersCombiner",
309:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
310:       "weka.classifiers.meta.Vote",
311:       "weka.core.UnsupportedAttributeTypeException",
312:       "weka.estimators.Estimator",
313:       "weka.estimators.DiscreteEstimator",
314:       "weka.classifiers.misc.SerializedClassifier",
315:       "weka.attributeSelection.OneRAttributeEval",
316:       "weka.classifiers.rules.PART",
317:       "weka.classifiers.rules.part.MakeDecList",
318:       "weka.attributeSelection.GainRatioAttributeEval",
319:       "weka.classifiers.IteratedSingleClassifierEnhancer",
320:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
321:       "weka.classifiers.meta.LogitBoost",
322:       "weka.classifiers.trees.DecisionStump",
323:       "weka.classifiers.meta.AttributeSelectedClassifier",
324:       "weka.classifiers.meta.RegressionByDiscretization",
325:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
326:       "weka.filters.unsupervised.attribute.Discretize",
327:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
328:       "weka.core.neighboursearch.KDTree",
329:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
330:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
331:       "weka.classifiers.trees.m5.M5Base",
332:       "weka.classifiers.rules.M5Rules",
333:       "weka.classifiers.functions.LinearRegression",
334:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
335:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
336:       "weka.classifiers.meta.RandomCommittee",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
339:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
340:       "weka.classifiers.meta.Stacking",
341:       "weka.classifiers.functions.supportVector.CachedKernel",
342:       "weka.classifiers.functions.supportVector.PolyKernel",
343:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
344:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
345:       "weka.classifiers.functions.supportVector.StringKernel",
346:       "weka.classifiers.functions.SimpleLinearRegression",
347:       "weka.classifiers.meta.MultiClassClassifier",
348:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
349:       "weka.classifiers.functions.Logistic",
350:       "weka.classifiers.functions.SGD",
351:       "weka.core.neighboursearch.BallTree",
352:       "weka.filters.SimpleFilter",
353:       "weka.filters.SimpleStreamFilter",
354:       "weka.filters.MultiFilter",
355:       "weka.filters.AllFilter",
356:       "weka.classifiers.trees.RandomForest",
357:       "weka.classifiers.rules.OneR",
358:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
359:       "weka.classifiers.trees.j48.ClassifierTree",
360:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
361:       "weka.classifiers.functions.VotedPerceptron",
362:       "weka.estimators.NormalEstimator",
363:       "weka.core.matrix.Matrix",
364:       "weka.estimators.MahalanobisEstimator",
365:       "weka.classifiers.lazy.KStar",
366:       "weka.classifiers.functions.supportVector.RBFKernel",
367:       "weka.classifiers.meta.Bagging",
368:       "weka.classifiers.trees.REPTree",
369:       "weka.classifiers.meta.MultiScheme",
370:       "weka.classifiers.meta.CVParameterSelection",
371:       "weka.core.FastVector",
372:       "weka.classifiers.functions.supportVector.Puk",
373:       "weka.classifiers.functions.SMOreg",
374:       "weka.classifiers.functions.supportVector.RegOptimizer",
375:       "weka.classifiers.functions.supportVector.RegSMO",
376:       "weka.classifiers.functions.supportVector.RegSMOImproved",
377:       "weka.core.AttributeStats",
378:       "weka.classifiers.lazy.LWL",
379:       "weka.classifiers.rules.JRip",
380:       "weka.classifiers.meta.ClassificationViaRegression",
381:       "weka.classifiers.trees.M5P",
382:       "weka.classifiers.meta.AdditiveRegression",
383:       "weka.classifiers.functions.SimpleLogistic",
384:       "weka.classifiers.rules.DecisionTable",
385:       "weka.core.Javadoc",
386:       "weka.core.GlobalInfoJavadoc",
387:       "weka.classifiers.functions.SMO",
388:       "weka.core.converters.ConverterUtils$DataSource",
389:       "weka.core.converters.AbstractLoader",
390:       "weka.core.converters.AbstractFileLoader",
391:       "weka.core.converters.ArffLoader",
392:       "weka.estimators.PoissonEstimator",
393:       "weka.classifiers.functions.MultilayerPerceptron",
394:       "weka.filters.unsupervised.attribute.NominalToBinary",
395:       "weka.classifiers.functions.neural.SigmoidUnit",
396:       "weka.classifiers.functions.neural.LinearUnit",
397:       "weka.estimators.KernelEstimator",
398:       "weka.classifiers.meta.AdaBoostM1",
399:       "weka.attributeSelection.CorrelationAttributeEval",
400:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
401:       "weka.attributeSelection.WrapperSubsetEval",
402:       "weka.core.TechnicalInformationHandlerJavadoc",
403:       "weka.classifiers.functions.GaussianProcesses",
404:       "weka.core.SelectedTag",
405:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
406:       "weka.core.Queue",
407:       "weka.core.AttributeLocator",
408:       "weka.core.StringLocator",
409:       "weka.core.RelationalLocator",
410:       "weka.core.ContingencyTables",
411:       "weka.core.Queue$QueueNode",
412:       "weka.attributeSelection.Ranker",
413:       "weka.classifiers.meta.RandomSubSpace"
414:     );
415:   }
416: }

[MASTER] 15:01:24.189 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
FileSystemHandling.createFolder((EvoSuiteFile) null);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setLowercaseTokens(false);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.m_inputVector = null;
naiveBayesMultinomialText0.setMinWordFrequency(1.0E75);
Tokenizer tokenizer0 = naiveBayesMultinomialText0.getTokenizer();
naiveBayesMultinomialText0.setTokenizer(tokenizer0);
naiveBayesMultinomialText0.setUseWordFrequencies(true);
naiveBayesMultinomialText0.getStopwords();
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.stopwordsTipText();
naiveBayesMultinomialText0.getUseWordFrequencies();
naiveBayesMultinomialText0.pruneDictionary();
SerializedClassifier serializedClassifier0 = new SerializedClassifier();
File file0 = serializedClassifier0.getModelFile();
naiveBayesMultinomialText0.setStopwords(file0);
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.getTokenizer();
naiveBayesMultinomialText0.getNorm();
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.LNormTipText();
naiveBayesMultinomialText0.toString();
CoverTree coverTree0 = new CoverTree();
PrincipalComponents principalComponents0 = new PrincipalComponents();
principalComponents0.convertInstance((Instance) null);

[MASTER] 15:01:26.564 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 15:01:27.409 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/mosa/tests/s1000/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14953
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14957
* Connecting to master process on port 14958
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 15:11:16.628 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 15:11:16.633 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 15:11:16.640 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 15:11:18.160 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 15:11:18.423 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 15:11:18.428 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 15:11:18.781 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 15:11:18.791 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 15:11:18.791 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 15:11:18.813 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2767
* Using seed 1000
* Starting evolution
* Total number of test goals for MOSA: 2499
* Using seed 1000
* Starting evolution
[MASTER] 15:11:21.416 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NominalAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 15:11:22.441 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 15:11:24.470 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 262
[MASTER] 15:11:24.471 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 263
[MASTER] 15:11:24.471 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 264
[MASTER] 15:11:24.471 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 265
[MASTER] 15:11:24.471 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 266
[MASTER] 15:11:24.471 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 267
[MASTER] 15:11:24.471 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 268
[MASTER] 15:11:24.471 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: Line 270
[MASTER] 15:11:24.471 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;: Line 572
[MASTER] 15:11:24.472 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: root-Branch
[MASTER] 15:11:24.472 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;: root-Branch
[MASTER] 15:11:24.472 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 8: weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;:263 - ReplaceConstant - William W. Cohen -> 
[MASTER] 15:11:24.472 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 9: weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;:264 - ReplaceConstant - Fast Effective Rule Induction -> 
[MASTER] 15:11:24.472 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 10: weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;:265 - ReplaceConstant - Twelfth International Conference on Machine Learning -> 
[MASTER] 15:11:24.472 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 11: weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;:266 - ReplaceConstant - 1995 -> 
[MASTER] 15:11:24.472 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 12: weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;:267 - ReplaceConstant - 115-123 -> 
[MASTER] 15:11:24.472 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 13: weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;:268 - ReplaceConstant - Morgan Kaufmann -> 
[MASTER] 15:11:24.472 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 209: weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;:572 - ReplaceConstant - Whether debug information is output to the console. -> 
[MASTER] 15:11:24.480 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;:NonNull:weka.core.TechnicalInformation:hasAdditional()Z:False
[MASTER] 15:11:24.480 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 15:11:24.480 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;
[MASTER] 15:11:24.480 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;
[MASTER] 15:11:24.480 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;
[MASTER] 15:11:24.480 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;
[MASTER] 15:11:24.481 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: root-Branch in context: weka.classifiers.rules.JRip:getTechnicalInformation()Lweka/core/TechnicalInformation;
[MASTER] 15:11:24.481 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.rules.JRip:debugTipText()Ljava/lang/String;
[MASTER] 15:11:28.670 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 15:11:28.672 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 15:11:28.683 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 15:11:29.298 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 15:11:30.064 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 15:11:30.064 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 15:11:30.071 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I138 Branch 186 IFLT L1136 - true
[MASTER] 15:11:30.071 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I142 Branch 187 IFEQ L1136 - false
[MASTER] 15:11:30.071 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I152 Branch 188 IFLT L1138 - true
[MASTER] 15:11:30.073 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I152 Branch 188 IFLT L1138 - true in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
[MASTER] 15:11:30.074 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I142 Branch 187 IFEQ L1136 - false in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
[MASTER] 15:11:30.074 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I138 Branch 186 IFLT L1136 - true in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
[MASTER] 15:11:31.723 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 15:11:31.768 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 15:11:31.768 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 15:11:31.769 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 15:11:31.774 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 15:11:31.774 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 15:11:31.774 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 15:11:31.775 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 15:11:31.775 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 15:11:31.832 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 15:11:31.845 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 3904
* Using seed 1000
* Starting evolution
[MASTER] 15:11:42.386 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 15:11:46.308 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 122s and 87 generations, 64585 statements, best individual has fitness: 16704.0
* Search finished after 122s and 158 generations, 63883 statements, best individual has fitness: 13056.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 16 tests with total length 88
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 34%
* Total number of goals: 705
* Number of covered goals: 240
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 25%
* Total number of goals: 416
* Number of covered goals: 104
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 52%
* Total number of goals: 993
* Number of covered goals: 520
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 30%
* Total number of goals: 93
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 25%
* Total number of goals: 416
* Number of covered goals: 104
* Generated 70 tests with total length 442
* Resulting test suite's coverage: 41% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/mosa/tests/s1000/107_weka/evosuite-tests
* Done!

* Computation finished
* Search finished after 125s and 81 generations, 37110 statements, best individual has fitness: 15216.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 58%
* Total number of goals: 1378
* Number of covered goals: 806
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 44%
* Total number of goals: 809
* Number of covered goals: 354
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 57
* Number of covered goals: 57
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 63%
* Total number of goals: 424
* Number of covered goals: 267
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 20%
* Total number of goals: 278
* Number of covered goals: 56
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 103
* Number of covered goals: 102
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 94%
* Total number of goals: 103
* Number of covered goals: 97
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 41%
* Total number of goals: 809
* Number of covered goals: 334
* Generated 134 tests with total length 1214
* Resulting test suite's coverage: 52% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/mosa/tests/s1000/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
[MASTER] 15:17:12.991 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_118_1575472632974/weka/classifiers/Evaluation_118_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_118_1575472632974/weka/classifiers/Evaluation_118_tmp__ESTest_scaffolding.java]]
[MASTER] 15:17:12.991 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 15:17:12.991 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 15:17:12.994 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   variable double1
  location: class weka.classifiers.Evaluation_118_tmp__ESTest: 32
[MASTER] 15:17:12.994 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_118_1575472632974/weka/classifiers/Evaluation_118_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 15:17:12 GMT 2019
4:  */
5: 
6: package weka.classifiers;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import org.evosuite.runtime.EvoRunner;
11: import org.evosuite.runtime.EvoRunnerParameters;
12: import org.junit.runner.RunWith;
13: import weka.classifiers.Evaluation;
14: import weka.core.Instances;
15: import weka.core.TestInstances;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class Evaluation_118_tmp__ESTest extends Evaluation_118_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=2.0205510251350907
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       TestInstances testInstances0 = new TestInstances();
27:       Instances instances0 = testInstances0.generate(" ");
28:       Evaluation evaluation0 = new Evaluation(instances0);
29:       evaluation0.weightedAreaUnderPRC();
30:       evaluation0.KBInformation();
31:       double double0 = evaluation0.m_MaxTarget;
32:       assertNotEquals(double0, double1, 0.01);
33:   }
34: }
RegularFileObject[/tmp/EvoSuite_118_1575472632974/weka/classifiers/Evaluation_118_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 15:17:12 GMT 2019
5:  */
6: 
7: package weka.classifiers;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class Evaluation_118_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.Evaluation"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Evaluation_118_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.clusterers.AbstractClusterer",
92:       "weka.core.DistanceFunction",
93:       "weka.core.converters.TextDirectoryLoader",
94:       "org.pentaho.packageManagement.PackageConstraint",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.classifiers.trees.m5.M5Base",
98:       "weka.classifiers.rules.RuleStats",
99:       "weka.classifiers.CostMatrix",
100:       "weka.classifiers.evaluation.NumericPrediction",
101:       "weka.filters.UnsupervisedFilter",
102:       "weka.core.logging.Logger$Level",
103:       "weka.classifiers.rules.PART",
104:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
105:       "weka.classifiers.trees.m5.Impurity",
106:       "weka.core.DenseInstance",
107:       "weka.core.converters.DatabaseConverter",
108:       "weka.classifiers.trees.J48",
109:       "weka.classifiers.functions.LinearRegression",
110:       "weka.core.stemmers.Stemmer",
111:       "weka.classifiers.evaluation.output.prediction.HTML",
112:       "weka.classifiers.trees.m5.Rule",
113:       "weka.filters.supervised.attribute.ClassOrder",
114:       "weka.core.converters.IncrementalConverter",
115:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
116:       "org.pentaho.packageManagement.DefaultPackageManager",
117:       "weka.estimators.UnivariateIntervalEstimator",
118:       "org.bounce.net.DefaultAuthenticator",
119:       "weka.classifiers.bayes.NaiveBayes",
120:       "weka.core.converters.JSONLoader",
121:       "weka.estimators.IncrementalEstimator",
122:       "weka.clusterers.NumberOfClustersRequestable",
123:       "weka.estimators.Estimator$Builder",
124:       "weka.core.stemmers.NullStemmer",
125:       "weka.core.EnvironmentHandler",
126:       "weka.classifiers.trees.j48.C45ModelSelection",
127:       "weka.classifiers.trees.m5.RuleNode",
128:       "weka.core.RelationalLocator",
129:       "weka.core.Utils",
130:       "weka.core.CustomDisplayStringProvider",
131:       "weka.classifiers.trees.m5.PreConstructedLinearModel",
132:       "weka.core.tokenizers.Tokenizer",
133:       "weka.core.NormalizableDistance",
134:       "weka.classifiers.rules.Rule",
135:       "weka.core.NoSupportForMissingValuesException",
136:       "weka.clusterers.SimpleKMeans",
137:       "weka.classifiers.UpdateableClassifier",
138:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
139:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
140:       "weka.core.TechnicalInformation$Type",
141:       "weka.core.MultiInstanceCapabilitiesHandler",
142:       "weka.core.Copyable",
143:       "weka.core.Capabilities",
144:       "weka.filters.supervised.attribute.NominalToBinary",
145:       "weka.core.BinarySparseInstance",
146:       "weka.core.AttributeLocator",
147:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
148:       "weka.core.converters.SVMLightLoader",
149:       "weka.classifiers.functions.supportVector.CachedKernel",
150:       "weka.core.SerializedObject",
151:       "weka.core.Matrix",
152:       "weka.classifiers.meta.RegressionByDiscretization",
153:       "weka.clusterers.UpdateableClusterer",
154:       "weka.core.Summarizable",
155:       "weka.classifiers.trees.j48.ModelSelection",
156:       "weka.core.AdditionalMeasureProducer",
157:       "org.pentaho.packageManagement.PackageManager$1",
158:       "weka.core.Drawable",
159:       "weka.core.matrix.Matrix",
160:       "weka.classifiers.ConditionalDensityEstimator",
161:       "weka.core.CapabilitiesHandler",
162:       "weka.classifiers.trees.REPTree",
163:       "weka.core.AbstractInstance",
164:       "weka.core.converters.LibSVMLoader",
165:       "weka.classifiers.lazy.kstar.KStarConstants",
166:       "weka.core.SelectedTag",
167:       "org.pentaho.packageManagement.DefaultPackage",
168:       "weka.estimators.DiscreteEstimator",
169:       "weka.classifiers.bayes.NaiveBayesUpdateable",
170:       "weka.core.matrix.LUDecomposition",
171:       "weka.classifiers.misc.InputMappedClassifier",
172:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
173:       "weka.classifiers.trees.m5.Values",
174:       "weka.experiment.ResultProducer",
175:       "weka.core.Queue",
176:       "weka.clusterers.RandomizableClusterer",
177:       "weka.core.Version",
178:       "weka.classifiers.evaluation.Prediction",
179:       "weka.core.converters.AbstractLoader",
180:       "weka.filters.unsupervised.attribute.RemoveUseless",
181:       "weka.core.converters.BatchConverter",
182:       "weka.core.Tag",
183:       "weka.classifiers.trees.j48.BinC45ModelSelection",
184:       "weka.classifiers.AbstractClassifier",
185:       "weka.estimators.UnivariateDensityEstimator",
186:       "weka.core.converters.ArffLoader",
187:       "weka.classifiers.meta.Stacking",
188:       "weka.core.OptionHandler",
189:       "weka.core.converters.MatlabLoader",
190:       "weka.classifiers.rules.JRip",
191:       "weka.core.WekaException",
192:       "weka.filters.StreamableFilter",
193:       "weka.core.Range",
194:       "weka.core.Attribute$1",
195:       "weka.core.PartitionGenerator",
196:       "weka.classifiers.Classifier",
197:       "weka.core.Capabilities$Capability",
198:       "weka.core.SparseInstance",
199:       "org.pentaho.packageManagement.PackageManager",
200:       "weka.estimators.PoissonEstimator",
201:       "weka.core.WekaEnumeration",
202:       "weka.core.tokenizers.WordTokenizer",
203:       "weka.classifiers.trees.j48.ClassifierTree",
204:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
205:       "weka.classifiers.trees.j48.PruneableClassifierTree",
206:       "weka.classifiers.Evaluation",
207:       "weka.classifiers.functions.supportVector.Kernel",
208:       "weka.core.converters.CSVLoader",
209:       "weka.core.WekaPackageManager",
210:       "weka.filters.SupervisedFilter",
211:       "weka.classifiers.evaluation.ThresholdCurve",
212:       "weka.core.TechnicalInformationHandler",
213:       "weka.experiment.DatabaseUtils",
214:       "weka.classifiers.functions.SimpleLogistic",
215:       "weka.core.converters.URLSourcedLoader",
216:       "weka.core.converters.FileSourcedConverter",
217:       "weka.classifiers.meta.CostSensitiveClassifier",
218:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
219:       "weka.clusterers.Clusterer",
220:       "weka.core.Option",
221:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
222:       "weka.filters.Sourcable",
223:       "weka.core.Attribute",
224:       "weka.classifiers.meta.MultiScheme",
225:       "weka.core.tokenizers.AlphabeticTokenizer",
226:       "weka.core.matrix.LinearRegression",
227:       "weka.core.FastVector",
228:       "weka.classifiers.MultipleClassifiersCombiner",
229:       "weka.estimators.UnivariateKernelEstimator",
230:       "weka.core.UnassignedDatasetException",
231:       "weka.core.tokenizers.NGramTokenizer",
232:       "weka.core.BatchPredictor",
233:       "weka.classifiers.meta.CVParameterSelection",
234:       "weka.core.Queue$QueueNode",
235:       "weka.classifiers.SingleClassifierEnhancer",
236:       "weka.core.RevisionUtils",
237:       "weka.core.Instance",
238:       "weka.core.converters.Loader",
239:       "weka.classifiers.functions.supportVector.PolyKernel",
240:       "weka.classifiers.lazy.KStar",
241:       "weka.estimators.Estimator",
242:       "weka.core.ProtectedProperties",
243:       "weka.classifiers.IntervalEstimator",
244:       "weka.core.StringLocator",
245:       "weka.core.Matchable",
246:       "weka.core.AttributeStats",
247:       "weka.core.WeightedInstancesHandler",
248:       "weka.classifiers.trees.DecisionStump",
249:       "weka.classifiers.functions.GaussianProcesses",
250:       "weka.estimators.UnivariateQuantileEstimator",
251:       "weka.core.TechnicalInformation$Field",
252:       "weka.filters.unsupervised.attribute.Discretize",
253:       "weka.core.converters.DatabaseLoader",
254:       "weka.filters.unsupervised.attribute.Remove",
255:       "weka.core.Randomizable",
256:       "weka.classifiers.rules.M5Rules",
257:       "weka.core.EuclideanDistance",
258:       "weka.core.Instances",
259:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
260:       "weka.core.converters.AbstractFileLoader",
261:       "weka.filters.unsupervised.attribute.Normalize",
262:       "weka.classifiers.trees.m5.YongSplitInfo",
263:       "weka.core.UnassignedClassException",
264:       "weka.classifiers.trees.m5.SplitEvaluate",
265:       "weka.classifiers.rules.ZeroR",
266:       "weka.core.converters.DatabaseConnection",
267:       "weka.filters.unsupervised.attribute.Standardize",
268:       "weka.core.TechnicalInformation",
269:       "weka.core.UnsupportedAttributeTypeException",
270:       "weka.classifiers.Sourcable",
271:       "weka.core.RevisionHandler",
272:       "weka.classifiers.evaluation.output.prediction.PlainText",
273:       "weka.experiment.Stats",
274:       "weka.core.converters.ConverterUtils$DataSource",
275:       "weka.core.xml.XMLSerialization",
276:       "weka.classifiers.xml.XMLClassifier",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.classifiers.rules.JRip$RipperRule"
280:     );
281:   } 
282: 
283:   private static void resetClasses() {
284:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Evaluation_118_tmp__ESTest_scaffolding.class.getClassLoader()); 
285: 
286:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
287:       "weka.classifiers.Evaluation",
288:       "weka.core.pmml.PMMLFactory$ModelType",
289:       "weka.core.pmml.PMMLFactory$1",
290:       "weka.core.xml.KOML",
291:       "weka.core.Version",
292:       "weka.core.Utils",
293:       "weka.classifiers.AbstractClassifier",
294:       "weka.core.Tag",
295:       "weka.classifiers.lazy.IBk",
296:       "weka.core.neighboursearch.NearestNeighbourSearch",
297:       "weka.core.neighboursearch.LinearNNSearch",
298:       "weka.core.NormalizableDistance",
299:       "weka.core.EuclideanDistance",
300:       "weka.core.Range",
301:       "weka.core.converters.AbstractLoader",
302:       "weka.core.converters.AbstractFileLoader",
303:       "weka.core.converters.SerializedInstancesLoader",
304:       "weka.core.converters.C45Loader",
305:       "weka.core.converters.CSVLoader",
306:       "weka.core.AbstractInstance",
307:       "weka.core.SparseInstance",
308:       "weka.core.BinarySparseInstance",
309:       "weka.core.Attribute",
310:       "weka.core.ProtectedProperties",
311:       "weka.core.converters.MatlabLoader",
312:       "weka.core.converters.ArffLoader",
313:       "weka.core.converters.JSONLoader",
314:       "weka.core.Instances",
315:       "weka.core.converters.LibSVMLoader",
316:       "weka.classifiers.bayes.NaiveBayes",
317:       "weka.core.Option",
318:       "weka.core.converters.SVMLightLoader",
319:       "weka.core.converters.ConverterUtils$DataSource",
320:       "weka.core.Capabilities",
321:       "org.pentaho.packageManagement.PackageManager",
322:       "org.pentaho.packageManagement.DefaultPackageManager",
323:       "weka.core.Environment",
324:       "weka.core.WekaPackageManager",
325:       "weka.core.converters.DatabaseLoader",
326:       "weka.experiment.DatabaseUtils",
327:       "weka.core.converters.DatabaseConnection",
328:       "weka.experiment.InstanceQuery",
329:       "weka.core.converters.ArffLoader$ArffReader",
330:       "weka.classifiers.SingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
332:       "weka.classifiers.meta.CostSensitiveClassifier",
333:       "weka.classifiers.rules.ZeroR",
334:       "weka.classifiers.CostMatrix",
335:       "weka.core.TestInstances",
336:       "weka.classifiers.bayes.BayesNet",
337:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
338:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
339:       "weka.classifiers.bayes.net.search.local.K2",
340:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
341:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
342:       "weka.classifiers.trees.RandomTree",
343:       "weka.classifiers.IteratedSingleClassifierEnhancer",
344:       "weka.classifiers.meta.AdditiveRegression",
345:       "weka.classifiers.misc.InputMappedClassifier",
346:       "weka.clusterers.AbstractClusterer",
347:       "weka.clusterers.RandomizableClusterer",
348:       "weka.clusterers.SimpleKMeans",
349:       "weka.core.RevisionUtils",
350:       "weka.core.converters.TextDirectoryLoader",
351:       "weka.core.WekaEnumeration",
352:       "weka.core.Attribute$1",
353:       "weka.classifiers.functions.SimpleLogistic",
354:       "weka.classifiers.RandomizableClassifier",
355:       "weka.classifiers.functions.SGD",
356:       "weka.classifiers.functions.SGDText",
357:       "weka.core.tokenizers.Tokenizer",
358:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
359:       "weka.core.tokenizers.WordTokenizer",
360:       "weka.core.stemmers.NullStemmer",
361:       "weka.core.TechnicalInformation",
362:       "weka.core.TechnicalInformation$Type",
363:       "weka.core.TechnicalInformation$Field",
364:       "weka.core.Capabilities$Capability",
365:       "weka.core.DenseInstance",
366:       "weka.classifiers.functions.supportVector.Kernel",
367:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
368:       "weka.core.neighboursearch.KDTree",
369:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
370:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
371:       "weka.attributeSelection.ASEvaluation",
372:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
373:       "weka.attributeSelection.PrincipalComponents",
374:       "weka.core.xml.XMLDocument",
375:       "weka.core.xml.XMLInstances",
376:       "weka.core.converters.XRFFLoader",
377:       "weka.classifiers.meta.CVParameterSelection",
378:       "weka.core.FastVector",
379:       "weka.classifiers.functions.MultilayerPerceptron",
380:       "weka.filters.Filter",
381:       "weka.filters.unsupervised.attribute.NominalToBinary",
382:       "weka.classifiers.functions.neural.SigmoidUnit",
383:       "weka.classifiers.functions.neural.LinearUnit",
384:       "weka.attributeSelection.CorrelationAttributeEval",
385:       "weka.classifiers.rules.PART",
386:       "weka.classifiers.rules.part.MakeDecList",
387:       "weka.gui.GenericPropertiesCreator",
388:       "weka.gui.GenericObjectEditor",
389:       "weka.core.converters.ConverterUtils",
390:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
391:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
392:       "weka.classifiers.meta.Bagging",
393:       "weka.classifiers.trees.REPTree",
394:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
395:       "weka.classifiers.evaluation.output.prediction.Null",
396:       "weka.filters.SimpleFilter",
397:       "weka.filters.SimpleStreamFilter",
398:       "weka.filters.MultiFilter",
399:       "weka.filters.AllFilter",
400:       "weka.classifiers.functions.supportVector.CachedKernel",
401:       "weka.classifiers.functions.supportVector.PolyKernel",
402:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
403:       "weka.core.SerializedObject",
404:       "weka.core.neighboursearch.balltrees.BallNode",
405:       "weka.classifiers.bayes.NaiveBayesUpdateable",
406:       "weka.classifiers.trees.m5.M5Base",
407:       "weka.classifiers.rules.M5Rules",
408:       "weka.classifiers.functions.LinearRegression",
409:       "weka.estimators.Estimator",
410:       "weka.estimators.KernelEstimator",
411:       "weka.core.ListOptions",
412:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
413:       "weka.classifiers.meta.RegressionByDiscretization",
414:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
415:       "weka.filters.unsupervised.attribute.Discretize",
416:       "weka.classifiers.trees.J48",
417:       "weka.core.matrix.Matrix",
418:       "weka.classifiers.bayes.NaiveBayesMultinomial",
419:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
420:       "weka.attributeSelection.CfsSubsetEval",
421:       "weka.core.UnassignedClassException",
422:       "weka.classifiers.evaluation.output.prediction.CSV",
423:       "weka.classifiers.misc.InputMappedClassifierBeanInfo",
424:       "weka.classifiers.functions.GaussianProcesses",
425:       "weka.classifiers.evaluation.output.prediction.XML",
426:       "weka.core.neighboursearch.CoverTree",
427:       "weka.classifiers.MultipleClassifiersCombiner",
428:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
429:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
430:       "weka.classifiers.meta.Stacking",
431:       "weka.classifiers.functions.Logistic",
432:       "weka.classifiers.meta.RandomSubSpace",
433:       "weka.core.UnassignedDatasetException",
434:       "weka.estimators.UnivariateKernelEstimator",
435:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
436:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
437:       "weka.core.neighboursearch.balltrees.BallSplitter",
438:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
439:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
440:       "weka.classifiers.meta.AdaBoostM1",
441:       "weka.classifiers.trees.DecisionStump",
442:       "weka.classifiers.rules.DecisionTable",
443:       "weka.attributeSelection.ASSearch",
444:       "weka.attributeSelection.BestFirst",
445:       "weka.attributeSelection.WrapperSubsetEval",
446:       "weka.core.AttributeStats",
447:       "weka.classifiers.meta.MultiClassClassifier",
448:       "weka.classifiers.rules.OneR",
449:       "weka.classifiers.rules.OneR$OneRRule",
450:       "weka.classifiers.trees.LMT",
451:       "weka.core.tokenizers.NGramTokenizer",
452:       "weka.classifiers.meta.LogitBoost",
453:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
454:       "weka.classifiers.meta.MultiScheme",
455:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
456:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
457:       "weka.classifiers.rules.JRip",
458:       "weka.classifiers.evaluation.output.prediction.HTML",
459:       "weka.classifiers.functions.supportVector.StringKernel",
460:       "weka.core.neighboursearch.BallTree",
461:       "weka.estimators.PoissonEstimator",
462:       "weka.core.tokenizers.AlphabeticTokenizer",
463:       "weka.classifiers.evaluation.output.prediction.PlainText",
464:       "weka.classifiers.trees.RandomForest",
465:       "weka.classifiers.meta.ClassificationViaRegression",
466:       "weka.classifiers.trees.M5P",
467:       "weka.classifiers.lazy.KStar",
468:       "weka.core.Check",
469:       "weka.core.CheckOptionHandler",
470:       "weka.estimators.UnivariateEqualFrequencyHistogramEstimator",
471:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
472:       "weka.core.FindWithCapabilities",
473:       "weka.core.SingleIndex",
474:       "weka.classifiers.functions.SMO",
475:       "weka.classifiers.meta.Vote",
476:       "weka.classifiers.meta.FilteredClassifier",
477:       "weka.filters.supervised.attribute.AttributeSelection",
478:       "weka.attributeSelection.AttributeSelection",
479:       "weka.attributeSelection.GreedyStepwise",
480:       "weka.filters.supervised.attribute.Discretize",
481:       "weka.classifiers.trees.j48.ClassifierTree",
482:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
483:       "weka.core.WekaException",
484:       "weka.core.UnsupportedAttributeTypeException",
485:       "weka.classifiers.functions.VotedPerceptron",
486:       "weka.experiment.Stats",
487:       "weka.core.SelectedTag",
488:       "weka.classifiers.functions.SMOreg",
489:       "weka.classifiers.functions.supportVector.RegOptimizer",
490:       "weka.classifiers.functions.supportVector.RegSMO",
491:       "weka.classifiers.functions.supportVector.RegSMOImproved",
492:       "weka.classifiers.lazy.LWL",
493:       "weka.classifiers.functions.supportVector.Puk",
494:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
495:       "weka.core.Queue",
496:       "weka.core.AttributeLocator",
497:       "weka.core.StringLocator",
498:       "weka.core.RelationalLocator",
499:       "weka.core.Queue$QueueNode",
500:       "weka.filters.supervised.attribute.NominalToBinary",
501:       "weka.filters.unsupervised.attribute.RemoveUseless",
502:       "weka.filters.unsupervised.attribute.Remove",
503:       "weka.classifiers.trees.m5.Rule",
504:       "weka.classifiers.trees.m5.RuleNode",
505:       "weka.classifiers.trees.m5.YongSplitInfo",
506:       "weka.classifiers.trees.m5.Impurity",
507:       "weka.classifiers.trees.m5.Values",
508:       "weka.classifiers.trees.m5.PreConstructedLinearModel",
509:       "weka.classifiers.evaluation.NumericPrediction",
510:       "weka.classifiers.evaluation.Prediction",
511:       "weka.core.Matrix",
512:       "weka.core.matrix.LinearRegression",
513:       "weka.core.matrix.LUDecomposition",
514:       "weka.clusterers.AbstractDensityBasedClusterer",
515:       "weka.clusterers.MakeDensityBasedClusterer",
516:       "weka.classifiers.functions.SimpleLinearRegression",
517:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
518:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
519:       "weka.estimators.DiscreteEstimator",
520:       "weka.classifiers.meta.AttributeSelectedClassifier",
521:       "weka.classifiers.meta.RandomCommittee",
522:       "weka.attributeSelection.ReliefFAttributeEval",
523:       "weka.classifiers.misc.SerializedClassifier",
524:       "weka.attributeSelection.OneRAttributeEval",
525:       "weka.attributeSelection.InfoGainAttributeEval",
526:       "weka.core.ClassDiscovery",
527:       "weka.classifiers.evaluation.ThresholdCurve"
528:     );
529:   }
530: }

[MASTER] 15:17:12.994 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate(" ");
Evaluation evaluation0 = new Evaluation(instances0);
evaluation0.weightedAreaUnderPRC();
evaluation0.KBInformation();
double double0 = evaluation0.m_MaxTarget;
assertNotEquals(double0, double1, 0.01);


[MASTER] 15:17:14.814 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 15:17:14.944 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 15:17:15.079 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 15:17:15.079 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/mosa/tests/s1000/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14955
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1367
* Using seed 1000
* Starting evolution
* Search finished after 124s and 124 generations, 91407 statements, best individual has fitness: 2816.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 217
* Number of covered goals: 187
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 283
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 239
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 282
* Generated 69 tests with total length 288
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 76%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/mosa/tests/s1000/107_weka/evosuite-tests
* Done!

* Computation finished
