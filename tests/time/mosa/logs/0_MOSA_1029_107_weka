* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14425
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14430
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14428
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Total number of test goals for MOSA: 1367
* Using seed 1029
* Starting evolution
[MASTER] 12:04:59.300 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 12:04:59.303 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 12:04:59.303 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 12:04:59.385 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
[MASTER] 12:04:59.611 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 12:04:59.616 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 12:04:59.617 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 12:04:59.765 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 12:04:59.774 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 12:04:59.775 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2699
* Using seed 1029
* Starting evolution
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1729
* Using seed 1029
* Starting evolution
* Search finished after 125s and 115 generations, 69027 statements, best individual has fitness: 2880.0
* Search finished after 122s and 241 generations, 66795 statements, best individual has fitness: 9080.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 41%
* Total number of goals: 370
* Number of covered goals: 153
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 28%
* Total number of goals: 242
* Number of covered goals: 67
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 27%
* Total number of goals: 713
* Number of covered goals: 194
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 72
* Number of covered goals: 31
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 45
* Number of covered goals: 44
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 28%
* Total number of goals: 242
* Number of covered goals: 67
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 217
* Number of covered goals: 187
* Coverage analysis for criterion BRANCH
* Generated 53 tests with total length 200
* Resulting test suite's coverage: 35% (average coverage for all fitness functions)
* Generating assertions
* Coverage of criterion BRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 285
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 87%
* Total number of goals: 260
* Number of covered goals: 227
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 284
* Generated 72 tests with total length 278
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 132s and 14 generations, 12360 statements, best individual has fitness: 3880.0
[MASTER] 12:07:14.454 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 13 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 93%
* Total number of goals: 647
* Number of covered goals: 604
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 87%
* Total number of goals: 441
* Number of covered goals: 385
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 86%
* Total number of goals: 678
* Number of covered goals: 581
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 32%
* Total number of goals: 244
* Number of covered goals: 78
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 86%
* Total number of goals: 124
* Number of covered goals: 107
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 85%
* Total number of goals: 124
* Number of covered goals: 106
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 81%
* Total number of goals: 441
* Number of covered goals: 356
* Generated 127 tests with total length 1450
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 75%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/mosa/tests/s1029/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 11%
* Compiling and checking tests
[MASTER] 12:07:52.085 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 12:07:52.398 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/mosa/tests/s1029/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 21%
[MASTER] 12:15:27.081 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/mosa/tests/s1029/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14422
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 12:21:02.773 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 12:21:02.774 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 12:21:02.809 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 12:21:02.919 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 12:21:02.931 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 12:21:02.931 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1412
* Using seed 1029
* Starting evolution
[MASTER] 12:21:14.386 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 12:21:14.386 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Search finished after 123s and 213 generations, 78883 statements, best individual has fitness: 1936.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 338
* Number of covered goals: 293
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 81%
* Total number of goals: 194
* Number of covered goals: 157
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 88%
* Total number of goals: 476
* Number of covered goals: 420
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 45%
* Total number of goals: 112
* Number of covered goals: 50
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 79%
* Total number of goals: 194
* Number of covered goals: 154
* Generated 69 tests with total length 463
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 56%
* Compiling and checking tests
[MASTER] 12:26:07.359 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_26_1575548767326/weka/classifiers/bayes/NaiveBayesMultinomialText_26_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_26_1575548767326/weka/classifiers/bayes/NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding.java]]
[MASTER] 12:26:07.359 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 12:26:07.359 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 12:26:07.363 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 12:26:07.364 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 12:26:07.365 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_26_1575548767326/weka/classifiers/bayes/NaiveBayesMultinomialText_26_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 12:26:07 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.attributeSelection.CfsSubsetEval;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.Capabilities;
17: import weka.core.Instances;
18: import weka.core.TestInstances;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_26_tmp__ESTest extends NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=1.9487242604001458
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       naiveBayesMultinomialText0.setNormalizeDocLength(true);
31:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
32:       naiveBayesMultinomialText0.setUseWordFrequencies(true);
33:       TestInstances testInstances0 = new TestInstances();
34:       CfsSubsetEval cfsSubsetEval0 = new CfsSubsetEval();
35:       Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
36:       TestInstances testInstances1 = TestInstances.forCapabilities(capabilities0);
37:       Instances instances0 = testInstances1.generate();
38:       testInstances0.generate();
39:       naiveBayesMultinomialText0.buildClassifier(instances0);
40:       naiveBayesMultinomialText0.setLNorm((-1));
41:       assertTrue(naiveBayesMultinomialText0.getNormalizeDocLength());
42:       assertEquals((-1.0), naiveBayesMultinomialText0.getLNorm(), 0.01);
43:   }
44: }
RegularFileObject[/tmp/EvoSuite_26_1575548767326/weka/classifiers/bayes/NaiveBayesMultinomialText_26_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 12:26:07 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.core.neighboursearch.CoverTree",
92:       "weka.classifiers.AbstractClassifier",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.OptionHandler",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.core.WekaException",
98:       "weka.attributeSelection.SubsetEvaluator",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.core.scripting.JythonSerializableObject",
102:       "weka.classifiers.Classifier",
103:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
104:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
105:       "weka.attributeSelection.CfsSubsetEval",
106:       "weka.core.Capabilities$Capability",
107:       "weka.core.SparseInstance",
108:       "weka.core.DenseInstance",
109:       "org.pentaho.packageManagement.PackageManager",
110:       "weka.estimators.PoissonEstimator",
111:       "weka.core.stemmers.Stemmer",
112:       "weka.core.tokenizers.WordTokenizer",
113:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
114:       "org.pentaho.packageManagement.DefaultPackageManager",
115:       "weka.core.stemmers.SnowballStemmer",
116:       "weka.classifiers.Evaluation",
117:       "weka.classifiers.functions.supportVector.Kernel",
118:       "weka.core.WekaPackageManager",
119:       "org.bounce.net.DefaultAuthenticator",
120:       "weka.filters.SupervisedFilter",
121:       "weka.core.neighboursearch.CoverTree$MyHeap",
122:       "weka.core.TechnicalInformationHandler",
123:       "weka.estimators.IncrementalEstimator",
124:       "weka.estimators.Estimator$Builder",
125:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
126:       "weka.core.Option",
127:       "weka.core.stemmers.NullStemmer",
128:       "weka.core.neighboursearch.PerformanceStats",
129:       "weka.core.Utils",
130:       "weka.core.tokenizers.Tokenizer",
131:       "weka.core.Attribute",
132:       "weka.core.NoSupportForMissingValuesException",
133:       "weka.core.Stopwords",
134:       "weka.classifiers.meta.MultiScheme",
135:       "weka.classifiers.UpdateableClassifier",
136:       "weka.core.tokenizers.AlphabeticTokenizer",
137:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
138:       "weka.core.MultiInstanceCapabilitiesHandler",
139:       "weka.core.Copyable",
140:       "weka.core.Capabilities",
141:       "weka.classifiers.MultipleClassifiersCombiner",
142:       "weka.core.BinarySparseInstance",
143:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
144:       "weka.core.UnassignedDatasetException",
145:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
146:       "weka.core.SerializedObject",
147:       "weka.clusterers.UpdateableClusterer",
148:       "weka.core.Summarizable",
149:       "weka.core.RevisionUtils",
150:       "weka.core.AdditionalMeasureProducer",
151:       "weka.core.neighboursearch.balltrees.BallNode",
152:       "org.pentaho.packageManagement.PackageManager$1",
153:       "weka.core.Instance",
154:       "weka.estimators.Estimator",
155:       "weka.core.Drawable",
156:       "weka.core.ProtectedProperties",
157:       "weka.core.matrix.Matrix",
158:       "weka.core.AttributeStats",
159:       "weka.core.WeightedInstancesHandler",
160:       "weka.core.neighboursearch.NearestNeighbourSearch",
161:       "weka.core.CapabilitiesHandler",
162:       "weka.core.neighboursearch.covertrees.Stack",
163:       "weka.core.Randomizable",
164:       "weka.attributeSelection.ASEvaluation",
165:       "weka.core.AbstractInstance",
166:       "weka.core.Instances",
167:       "weka.core.scripting.JythonObject",
168:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
169:       "org.pentaho.packageManagement.DefaultPackage",
170:       "weka.core.UnassignedClassException",
171:       "weka.classifiers.rules.ZeroR",
172:       "weka.core.Version",
173:       "weka.core.TechnicalInformation",
174:       "weka.core.UnsupportedAttributeTypeException",
175:       "weka.classifiers.Sourcable",
176:       "weka.core.RevisionHandler",
177:       "weka.classifiers.evaluation.output.prediction.PlainText",
178:       "weka.core.neighboursearch.TreePerformanceStats",
179:       "weka.core.xml.XMLSerialization",
180:       "weka.classifiers.xml.XMLClassifier",
181:       "weka.filters.Filter",
182:       "weka.filters.supervised.attribute.Discretize"
183:     );
184:   } 
185: 
186:   private static void resetClasses() {
187:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding.class.getClassLoader()); 
188: 
189:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
190:       "weka.classifiers.AbstractClassifier",
191:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
192:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
193:       "weka.core.Capabilities$Capability",
194:       "weka.core.tokenizers.Tokenizer",
195:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
196:       "weka.core.tokenizers.WordTokenizer",
197:       "weka.core.stemmers.NullStemmer",
198:       "weka.core.Option",
199:       "weka.core.AbstractInstance",
200:       "weka.core.SparseInstance",
201:       "weka.core.Utils",
202:       "weka.core.UnassignedDatasetException",
203:       "weka.core.TestInstances",
204:       "weka.core.Attribute",
205:       "weka.core.ProtectedProperties",
206:       "weka.core.Instances",
207:       "weka.core.DenseInstance",
208:       "weka.classifiers.bayes.BayesNet",
209:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
210:       "weka.core.Tag",
211:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
212:       "weka.classifiers.bayes.net.search.local.K2",
213:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
214:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
215:       "weka.core.neighboursearch.balltrees.BallNode",
216:       "weka.classifiers.RandomizableClassifier",
217:       "weka.classifiers.functions.SGDText",
218:       "weka.classifiers.Evaluation",
219:       "weka.core.BinarySparseInstance",
220:       "weka.core.Capabilities",
221:       "org.pentaho.packageManagement.PackageManager",
222:       "org.pentaho.packageManagement.DefaultPackageManager",
223:       "weka.core.Version",
224:       "weka.core.Environment",
225:       "weka.core.WekaPackageManager",
226:       "weka.core.FindWithCapabilities",
227:       "weka.core.SingleIndex",
228:       "weka.core.ClassDiscovery",
229:       "weka.core.SerializedObject",
230:       "weka.core.stemmers.SnowballStemmer",
231:       "weka.core.tokenizers.AlphabeticTokenizer",
232:       "weka.classifiers.misc.SerializedClassifier",
233:       "weka.attributeSelection.ASEvaluation",
234:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
235:       "weka.attributeSelection.PrincipalComponents",
236:       "weka.filters.Filter",
237:       "weka.filters.supervised.attribute.Discretize",
238:       "weka.core.Range",
239:       "weka.core.stemmers.LovinsStemmer",
240:       "weka.core.stemmers.IteratedLovinsStemmer",
241:       "weka.core.Stopwords",
242:       "weka.core.RevisionUtils",
243:       "weka.core.neighboursearch.NearestNeighbourSearch",
244:       "weka.core.neighboursearch.KDTree",
245:       "weka.core.NormalizableDistance",
246:       "weka.core.EuclideanDistance",
247:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
248:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
249:       "weka.core.neighboursearch.CoverTree",
250:       "weka.core.WekaEnumeration",
251:       "weka.core.Attribute$1",
252:       "weka.classifiers.lazy.IBk",
253:       "weka.core.neighboursearch.LinearNNSearch",
254:       "weka.core.stemmers.Stemming",
255:       "weka.classifiers.MultipleClassifiersCombiner",
256:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
257:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
258:       "weka.classifiers.meta.Stacking",
259:       "weka.classifiers.rules.ZeroR",
260:       "weka.attributeSelection.CfsSubsetEval",
261:       "weka.classifiers.SingleClassifierEnhancer",
262:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
263:       "weka.classifiers.meta.CostSensitiveClassifier",
264:       "weka.classifiers.CostMatrix",
265:       "weka.classifiers.trees.REPTree",
266:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
267:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
268:       "weka.classifiers.misc.InputMappedClassifier",
269:       "weka.core.tokenizers.NGramTokenizer",
270:       "weka.estimators.Estimator",
271:       "weka.estimators.PoissonEstimator",
272:       "weka.core.UnassignedClassException",
273:       "weka.classifiers.functions.supportVector.Kernel",
274:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
275:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
276:       "weka.classifiers.meta.MultiScheme",
277:       "weka.core.Javadoc",
278:       "weka.core.ClassCache",
279:       "weka.core.AllJavadoc",
280:       "weka.filters.AllFilter",
281:       "weka.classifiers.meta.Vote",
282:       "weka.core.WekaException",
283:       "weka.core.UnsupportedAttributeTypeException",
284:       "weka.classifiers.trees.RandomTree",
285:       "weka.classifiers.IteratedSingleClassifierEnhancer",
286:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
287:       "weka.classifiers.meta.LogitBoost",
288:       "weka.classifiers.trees.DecisionStump",
289:       "weka.core.converters.ArffLoader$ArffReader",
290:       "weka.classifiers.trees.RandomForest",
291:       "weka.core.TechnicalInformation",
292:       "weka.core.TechnicalInformation$Type",
293:       "weka.core.TechnicalInformation$Field",
294:       "weka.classifiers.bayes.NaiveBayesMultinomial",
295:       "weka.classifiers.functions.supportVector.CachedKernel",
296:       "weka.classifiers.functions.supportVector.RBFKernel",
297:       "weka.classifiers.functions.SimpleLinearRegression",
298:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
299:       "weka.classifiers.meta.MultiClassClassifier",
300:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
301:       "weka.classifiers.functions.Logistic",
302:       "weka.core.neighboursearch.BallTree",
303:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
304:       "weka.core.neighboursearch.balltrees.BallSplitter",
305:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
306:       "weka.estimators.NormalEstimator",
307:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
308:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
309:       "weka.classifiers.bayes.net.BIFReader",
310:       "weka.classifiers.meta.ClassificationViaRegression",
311:       "weka.classifiers.trees.m5.M5Base",
312:       "weka.classifiers.trees.M5P",
313:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
314:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
315:       "weka.classifiers.functions.SMO",
316:       "weka.classifiers.functions.supportVector.PolyKernel",
317:       "weka.classifiers.trees.LMT",
318:       "weka.classifiers.bayes.NaiveBayes",
319:       "weka.attributeSelection.ReliefFAttributeEval",
320:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
321:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
322:       "weka.classifiers.meta.Bagging",
323:       "weka.attributeSelection.InfoGainAttributeEval",
324:       "weka.classifiers.trees.J48",
325:       "weka.classifiers.trees.j48.ClassifierTree",
326:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
327:       "weka.classifiers.meta.AdditiveRegression",
328:       "weka.classifiers.functions.SGD",
329:       "weka.classifiers.functions.SMOreg",
330:       "weka.classifiers.functions.supportVector.RegOptimizer",
331:       "weka.classifiers.functions.supportVector.RegSMO",
332:       "weka.classifiers.functions.supportVector.RegSMOImproved",
333:       "weka.classifiers.rules.PART",
334:       "weka.classifiers.rules.part.MakeDecList",
335:       "weka.classifiers.functions.supportVector.StringKernel",
336:       "weka.classifiers.meta.AttributeSelectedClassifier",
337:       "weka.attributeSelection.ASSearch",
338:       "weka.attributeSelection.BestFirst",
339:       "weka.estimators.DiscreteEstimator",
340:       "weka.classifiers.rules.M5Rules",
341:       "weka.classifiers.functions.LinearRegression",
342:       "weka.filters.SimpleFilter",
343:       "weka.filters.SimpleStreamFilter",
344:       "weka.filters.MultiFilter",
345:       "weka.classifiers.meta.FilteredClassifier",
346:       "weka.filters.supervised.attribute.AttributeSelection",
347:       "weka.attributeSelection.AttributeSelection",
348:       "weka.attributeSelection.GreedyStepwise",
349:       "weka.classifiers.bayes.NaiveBayesUpdateable",
350:       "weka.core.matrix.Matrix",
351:       "weka.estimators.MahalanobisEstimator",
352:       "weka.classifiers.meta.RegressionByDiscretization",
353:       "weka.filters.unsupervised.attribute.Discretize",
354:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
355:       "weka.classifiers.meta.CVParameterSelection",
356:       "weka.core.FastVector",
357:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
358:       "weka.classifiers.rules.JRip",
359:       "weka.classifiers.meta.AdaBoostM1",
360:       "weka.classifiers.functions.supportVector.Puk",
361:       "weka.attributeSelection.WrapperSubsetEval",
362:       "weka.classifiers.lazy.KStar",
363:       "weka.attributeSelection.OneRAttributeEval",
364:       "weka.classifiers.lazy.LWL",
365:       "weka.estimators.KernelEstimator",
366:       "weka.classifiers.functions.SimpleLogistic",
367:       "weka.classifiers.rules.OneR",
368:       "weka.classifiers.functions.GaussianProcesses",
369:       "weka.core.SelectedTag",
370:       "weka.classifiers.rules.DecisionTable",
371:       "weka.core.Optimization",
372:       "weka.core.ConjugateGradientOptimization",
373:       "weka.core.Check",
374:       "weka.core.CheckGOE",
375:       "weka.core.ManhattanDistance",
376:       "weka.classifiers.functions.VotedPerceptron",
377:       "weka.core.AttributeStats",
378:       "weka.core.CheckOptionHandler",
379:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
380:       "weka.attributeSelection.CorrelationAttributeEval",
381:       "weka.core.MinkowskiDistance",
382:       "weka.classifiers.functions.MultilayerPerceptron",
383:       "weka.filters.unsupervised.attribute.NominalToBinary",
384:       "weka.classifiers.functions.neural.SigmoidUnit",
385:       "weka.classifiers.functions.neural.LinearUnit",
386:       "weka.classifiers.meta.RandomCommittee",
387:       "weka.classifiers.meta.RandomSubSpace",
388:       "weka.attributeSelection.GainRatioAttributeEval",
389:       "weka.experiment.Stats",
390:       "weka.core.ChebyshevDistance"
391:     );
392:   }
393: }

[MASTER] 12:26:07.366 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setNormalizeDocLength(true);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.setUseWordFrequencies(true);
TestInstances testInstances0 = new TestInstances();
CfsSubsetEval cfsSubsetEval0 = new CfsSubsetEval();
Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
TestInstances testInstances1 = TestInstances.forCapabilities(capabilities0);
Instances instances0 = testInstances1.generate();
testInstances0.generate();
naiveBayesMultinomialText0.buildClassifier(instances0);
naiveBayesMultinomialText0.setLNorm((-1));
assertTrue(naiveBayesMultinomialText0.getNormalizeDocLength());
assertEquals((-1.0), naiveBayesMultinomialText0.getLNorm(), 0.01);


[MASTER] 12:26:07.858 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_38_1575548767836/weka/classifiers/bayes/NaiveBayesMultinomialText_38_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_38_1575548767836/weka/classifiers/bayes/NaiveBayesMultinomialText_38_tmp__ESTest_scaffolding.java]]
[MASTER] 12:26:07.858 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 12:26:07.858 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 12:26:07.858 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 12:26:07.859 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 12:26:07.859 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_38_1575548767836/weka/classifiers/bayes/NaiveBayesMultinomialText_38_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 12:26:07 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.attributeSelection.CfsSubsetEval;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.Instances;
17: import weka.core.TestInstances;
18: import weka.core.stemmers.SnowballStemmer;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_38_tmp__ESTest extends NaiveBayesMultinomialText_38_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=2.5732722589521733
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       naiveBayesMultinomialText0.setNormalizeDocLength(true);
31:       SnowballStemmer snowballStemmer0 = new SnowballStemmer(";6gJxj+e1");
32:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
33:       naiveBayesMultinomialText0.setUseWordFrequencies(true);
34:       TestInstances testInstances0 = new TestInstances();
35:       CfsSubsetEval cfsSubsetEval0 = new CfsSubsetEval();
36:       naiveBayesMultinomialText0.getCapabilities();
37:       Instances instances0 = testInstances0.generate();
38:       testInstances0.generate();
39:       naiveBayesMultinomialText0.buildClassifier(instances0);
40:       naiveBayesMultinomialText0.getTokenizer();
41:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
42:       
43:       naiveBayesMultinomialText0.setLNorm(0.0);
44:       boolean boolean0 = naiveBayesMultinomialText0.getNormalizeDocLength();
45:       assertTrue(boolean0);
46:   }
47: }
RegularFileObject[/tmp/EvoSuite_38_1575548767836/weka/classifiers/bayes/NaiveBayesMultinomialText_38_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 12:26:07 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_38_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_38_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.core.neighboursearch.CoverTree",
92:       "weka.classifiers.AbstractClassifier",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.OptionHandler",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.core.WekaException",
98:       "weka.attributeSelection.SubsetEvaluator",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.core.scripting.JythonSerializableObject",
102:       "weka.classifiers.Classifier",
103:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
104:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
105:       "weka.attributeSelection.CfsSubsetEval",
106:       "weka.core.Capabilities$Capability",
107:       "weka.core.SparseInstance",
108:       "weka.core.DenseInstance",
109:       "org.pentaho.packageManagement.PackageManager",
110:       "weka.estimators.PoissonEstimator",
111:       "weka.core.stemmers.Stemmer",
112:       "weka.core.tokenizers.WordTokenizer",
113:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
114:       "org.pentaho.packageManagement.DefaultPackageManager",
115:       "weka.core.stemmers.SnowballStemmer",
116:       "weka.classifiers.Evaluation",
117:       "weka.classifiers.functions.supportVector.Kernel",
118:       "weka.core.WekaPackageManager",
119:       "org.bounce.net.DefaultAuthenticator",
120:       "weka.filters.SupervisedFilter",
121:       "weka.core.neighboursearch.CoverTree$MyHeap",
122:       "weka.core.TechnicalInformationHandler",
123:       "weka.estimators.IncrementalEstimator",
124:       "weka.estimators.Estimator$Builder",
125:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
126:       "weka.core.Option",
127:       "weka.core.stemmers.NullStemmer",
128:       "weka.core.neighboursearch.PerformanceStats",
129:       "weka.core.Utils",
130:       "weka.core.tokenizers.Tokenizer",
131:       "weka.core.Attribute",
132:       "weka.core.NoSupportForMissingValuesException",
133:       "weka.core.Stopwords",
134:       "weka.classifiers.meta.MultiScheme",
135:       "weka.classifiers.UpdateableClassifier",
136:       "weka.core.tokenizers.AlphabeticTokenizer",
137:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
138:       "weka.core.MultiInstanceCapabilitiesHandler",
139:       "weka.core.Copyable",
140:       "weka.core.Capabilities",
141:       "weka.classifiers.MultipleClassifiersCombiner",
142:       "weka.core.BinarySparseInstance",
143:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
144:       "weka.core.UnassignedDatasetException",
145:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
146:       "weka.core.SerializedObject",
147:       "weka.clusterers.UpdateableClusterer",
148:       "weka.core.Summarizable",
149:       "weka.core.RevisionUtils",
150:       "weka.core.AdditionalMeasureProducer",
151:       "weka.core.neighboursearch.balltrees.BallNode",
152:       "org.pentaho.packageManagement.PackageManager$1",
153:       "weka.core.Instance",
154:       "weka.estimators.Estimator",
155:       "weka.core.Drawable",
156:       "weka.core.ProtectedProperties",
157:       "weka.core.matrix.Matrix",
158:       "weka.core.AttributeStats",
159:       "weka.core.WeightedInstancesHandler",
160:       "weka.core.neighboursearch.NearestNeighbourSearch",
161:       "weka.core.CapabilitiesHandler",
162:       "weka.core.neighboursearch.covertrees.Stack",
163:       "weka.core.Randomizable",
164:       "weka.attributeSelection.ASEvaluation",
165:       "weka.core.AbstractInstance",
166:       "weka.core.Instances",
167:       "weka.core.scripting.JythonObject",
168:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
169:       "org.pentaho.packageManagement.DefaultPackage",
170:       "weka.core.UnassignedClassException",
171:       "weka.classifiers.rules.ZeroR",
172:       "weka.core.Version",
173:       "weka.core.TechnicalInformation",
174:       "weka.core.UnsupportedAttributeTypeException",
175:       "weka.classifiers.Sourcable",
176:       "weka.core.RevisionHandler",
177:       "weka.classifiers.evaluation.output.prediction.PlainText",
178:       "weka.core.neighboursearch.TreePerformanceStats",
179:       "weka.core.xml.XMLSerialization",
180:       "weka.classifiers.xml.XMLClassifier",
181:       "weka.filters.Filter",
182:       "weka.filters.supervised.attribute.Discretize"
183:     );
184:   } 
185: 
186:   private static void resetClasses() {
187:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_38_tmp__ESTest_scaffolding.class.getClassLoader()); 
188: 
189:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
190:       "weka.classifiers.AbstractClassifier",
191:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
192:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
193:       "weka.core.Capabilities$Capability",
194:       "weka.core.tokenizers.Tokenizer",
195:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
196:       "weka.core.tokenizers.WordTokenizer",
197:       "weka.core.stemmers.NullStemmer",
198:       "weka.core.Option",
199:       "weka.core.AbstractInstance",
200:       "weka.core.SparseInstance",
201:       "weka.core.Utils",
202:       "weka.core.UnassignedDatasetException",
203:       "weka.core.TestInstances",
204:       "weka.core.Attribute",
205:       "weka.core.ProtectedProperties",
206:       "weka.core.Instances",
207:       "weka.core.DenseInstance",
208:       "weka.classifiers.bayes.BayesNet",
209:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
210:       "weka.core.Tag",
211:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
212:       "weka.classifiers.bayes.net.search.local.K2",
213:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
214:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
215:       "weka.core.neighboursearch.balltrees.BallNode",
216:       "weka.classifiers.RandomizableClassifier",
217:       "weka.classifiers.functions.SGDText",
218:       "weka.classifiers.Evaluation",
219:       "weka.core.BinarySparseInstance",
220:       "weka.core.Capabilities",
221:       "org.pentaho.packageManagement.PackageManager",
222:       "org.pentaho.packageManagement.DefaultPackageManager",
223:       "weka.core.Version",
224:       "weka.core.Environment",
225:       "weka.core.WekaPackageManager",
226:       "weka.core.FindWithCapabilities",
227:       "weka.core.SingleIndex",
228:       "weka.core.ClassDiscovery",
229:       "weka.core.SerializedObject",
230:       "weka.core.stemmers.SnowballStemmer",
231:       "weka.core.tokenizers.AlphabeticTokenizer",
232:       "weka.classifiers.misc.SerializedClassifier",
233:       "weka.attributeSelection.ASEvaluation",
234:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
235:       "weka.attributeSelection.PrincipalComponents",
236:       "weka.filters.Filter",
237:       "weka.filters.supervised.attribute.Discretize",
238:       "weka.core.Range",
239:       "weka.core.stemmers.LovinsStemmer",
240:       "weka.core.stemmers.IteratedLovinsStemmer",
241:       "weka.core.Stopwords",
242:       "weka.core.RevisionUtils",
243:       "weka.core.neighboursearch.NearestNeighbourSearch",
244:       "weka.core.neighboursearch.KDTree",
245:       "weka.core.NormalizableDistance",
246:       "weka.core.EuclideanDistance",
247:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
248:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
249:       "weka.core.neighboursearch.CoverTree",
250:       "weka.core.WekaEnumeration",
251:       "weka.core.Attribute$1",
252:       "weka.classifiers.lazy.IBk",
253:       "weka.core.neighboursearch.LinearNNSearch",
254:       "weka.core.stemmers.Stemming",
255:       "weka.classifiers.MultipleClassifiersCombiner",
256:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
257:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
258:       "weka.classifiers.meta.Stacking",
259:       "weka.classifiers.rules.ZeroR",
260:       "weka.attributeSelection.CfsSubsetEval",
261:       "weka.classifiers.SingleClassifierEnhancer",
262:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
263:       "weka.classifiers.meta.CostSensitiveClassifier",
264:       "weka.classifiers.CostMatrix",
265:       "weka.classifiers.trees.REPTree",
266:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
267:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
268:       "weka.classifiers.misc.InputMappedClassifier",
269:       "weka.core.tokenizers.NGramTokenizer",
270:       "weka.estimators.Estimator",
271:       "weka.estimators.PoissonEstimator",
272:       "weka.core.UnassignedClassException",
273:       "weka.classifiers.functions.supportVector.Kernel",
274:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
275:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
276:       "weka.classifiers.meta.MultiScheme",
277:       "weka.core.Javadoc",
278:       "weka.core.ClassCache",
279:       "weka.core.AllJavadoc",
280:       "weka.filters.AllFilter",
281:       "weka.classifiers.meta.Vote",
282:       "weka.core.WekaException",
283:       "weka.core.UnsupportedAttributeTypeException",
284:       "weka.classifiers.trees.RandomTree",
285:       "weka.classifiers.IteratedSingleClassifierEnhancer",
286:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
287:       "weka.classifiers.meta.LogitBoost",
288:       "weka.classifiers.trees.DecisionStump",
289:       "weka.core.converters.ArffLoader$ArffReader",
290:       "weka.classifiers.trees.RandomForest",
291:       "weka.core.TechnicalInformation",
292:       "weka.core.TechnicalInformation$Type",
293:       "weka.core.TechnicalInformation$Field",
294:       "weka.classifiers.bayes.NaiveBayesMultinomial",
295:       "weka.classifiers.functions.supportVector.CachedKernel",
296:       "weka.classifiers.functions.supportVector.RBFKernel",
297:       "weka.classifiers.functions.SimpleLinearRegression",
298:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
299:       "weka.classifiers.meta.MultiClassClassifier",
300:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
301:       "weka.classifiers.functions.Logistic",
302:       "weka.core.neighboursearch.BallTree",
303:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
304:       "weka.core.neighboursearch.balltrees.BallSplitter",
305:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
306:       "weka.estimators.NormalEstimator",
307:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
308:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
309:       "weka.classifiers.bayes.net.BIFReader",
310:       "weka.classifiers.meta.ClassificationViaRegression",
311:       "weka.classifiers.trees.m5.M5Base",
312:       "weka.classifiers.trees.M5P",
313:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
314:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
315:       "weka.classifiers.functions.SMO",
316:       "weka.classifiers.functions.supportVector.PolyKernel",
317:       "weka.classifiers.trees.LMT",
318:       "weka.classifiers.bayes.NaiveBayes",
319:       "weka.attributeSelection.ReliefFAttributeEval",
320:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
321:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
322:       "weka.classifiers.meta.Bagging",
323:       "weka.attributeSelection.InfoGainAttributeEval",
324:       "weka.classifiers.trees.J48",
325:       "weka.classifiers.trees.j48.ClassifierTree",
326:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
327:       "weka.classifiers.meta.AdditiveRegression",
328:       "weka.classifiers.functions.SGD",
329:       "weka.classifiers.functions.SMOreg",
330:       "weka.classifiers.functions.supportVector.RegOptimizer",
331:       "weka.classifiers.functions.supportVector.RegSMO",
332:       "weka.classifiers.functions.supportVector.RegSMOImproved",
333:       "weka.classifiers.rules.PART",
334:       "weka.classifiers.rules.part.MakeDecList",
335:       "weka.classifiers.functions.supportVector.StringKernel",
336:       "weka.classifiers.meta.AttributeSelectedClassifier",
337:       "weka.attributeSelection.ASSearch",
338:       "weka.attributeSelection.BestFirst",
339:       "weka.estimators.DiscreteEstimator",
340:       "weka.classifiers.rules.M5Rules",
341:       "weka.classifiers.functions.LinearRegression",
342:       "weka.filters.SimpleFilter",
343:       "weka.filters.SimpleStreamFilter",
344:       "weka.filters.MultiFilter",
345:       "weka.classifiers.meta.FilteredClassifier",
346:       "weka.filters.supervised.attribute.AttributeSelection",
347:       "weka.attributeSelection.AttributeSelection",
348:       "weka.attributeSelection.GreedyStepwise",
349:       "weka.classifiers.bayes.NaiveBayesUpdateable",
350:       "weka.core.matrix.Matrix",
351:       "weka.estimators.MahalanobisEstimator",
352:       "weka.classifiers.meta.RegressionByDiscretization",
353:       "weka.filters.unsupervised.attribute.Discretize",
354:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
355:       "weka.classifiers.meta.CVParameterSelection",
356:       "weka.core.FastVector",
357:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
358:       "weka.classifiers.rules.JRip",
359:       "weka.classifiers.meta.AdaBoostM1",
360:       "weka.classifiers.functions.supportVector.Puk",
361:       "weka.attributeSelection.WrapperSubsetEval",
362:       "weka.classifiers.lazy.KStar",
363:       "weka.attributeSelection.OneRAttributeEval",
364:       "weka.classifiers.lazy.LWL",
365:       "weka.estimators.KernelEstimator",
366:       "weka.classifiers.functions.SimpleLogistic",
367:       "weka.classifiers.rules.OneR",
368:       "weka.classifiers.functions.GaussianProcesses",
369:       "weka.core.SelectedTag",
370:       "weka.classifiers.rules.DecisionTable",
371:       "weka.core.Optimization",
372:       "weka.core.ConjugateGradientOptimization",
373:       "weka.core.Check",
374:       "weka.core.CheckGOE",
375:       "weka.core.ManhattanDistance",
376:       "weka.classifiers.functions.VotedPerceptron",
377:       "weka.core.AttributeStats",
378:       "weka.core.CheckOptionHandler",
379:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
380:       "weka.attributeSelection.CorrelationAttributeEval",
381:       "weka.core.MinkowskiDistance",
382:       "weka.classifiers.functions.MultilayerPerceptron",
383:       "weka.filters.unsupervised.attribute.NominalToBinary",
384:       "weka.classifiers.functions.neural.SigmoidUnit",
385:       "weka.classifiers.functions.neural.LinearUnit",
386:       "weka.classifiers.meta.RandomCommittee",
387:       "weka.classifiers.meta.RandomSubSpace",
388:       "weka.attributeSelection.GainRatioAttributeEval",
389:       "weka.experiment.Stats",
390:       "weka.core.ChebyshevDistance"
391:     );
392:   }
393: }

[MASTER] 12:26:07.859 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setNormalizeDocLength(true);
SnowballStemmer snowballStemmer0 = new SnowballStemmer(";6gJxj+e1");
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.setUseWordFrequencies(true);
TestInstances testInstances0 = new TestInstances();
CfsSubsetEval cfsSubsetEval0 = new CfsSubsetEval();
naiveBayesMultinomialText0.getCapabilities();
Instances instances0 = testInstances0.generate();
testInstances0.generate();
naiveBayesMultinomialText0.buildClassifier(instances0);
naiveBayesMultinomialText0.getTokenizer();
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);

naiveBayesMultinomialText0.setLNorm(0.0);
boolean boolean0 = naiveBayesMultinomialText0.getNormalizeDocLength();
assertTrue(boolean0);


[MASTER] 12:26:08.613 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_60_1575548768595/weka/classifiers/bayes/NaiveBayesMultinomialText_60_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_60_1575548768595/weka/classifiers/bayes/NaiveBayesMultinomialText_60_tmp__ESTest_scaffolding.java]]
[MASTER] 12:26:08.613 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 12:26:08.613 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 12:26:08.614 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 12:26:08.614 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 12:26:08.614 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 12:26:08.615 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_60_1575548768595/weka/classifiers/bayes/NaiveBayesMultinomialText_60_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 12:26:08 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.testdata.EvoSuiteFile;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.evosuite.runtime.util.SystemInUtil;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.tokenizers.Tokenizer;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_60_tmp__ESTest extends NaiveBayesMultinomialText_60_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=3.1091774622598547
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
32:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
33:       naiveBayesMultinomialText0.getOptions();
34:       linkedHashMap0.values();
35:       SystemInUtil.addInputLine("");
36:       naiveBayesMultinomialText0.m_norm = 0.0;
37:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
38:       
39:       naiveBayesMultinomialText0.setLNorm(0.0);
40:       naiveBayesMultinomialText0.periodicPruningTipText();
41:       naiveBayesMultinomialText0.setDebug(true);
42:       naiveBayesMultinomialText0.setTokenizer((Tokenizer) null);
43:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
44:       FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
45:       naiveBayesMultinomialText0.stopwordsTipText();
46:       naiveBayesMultinomialText0.globalInfo();
47:       naiveBayesMultinomialText0.getStopwords();
48:       naiveBayesMultinomialText0.stopwordsTipText();
49:       naiveBayesMultinomialText0.getNorm();
50:       naiveBayesMultinomialText0.stopwordsTipText();
51:       assertEquals(0.0, naiveBayesMultinomialText0.getNorm(), 0.01);
52:   }
53: }
RegularFileObject[/tmp/EvoSuite_60_1575548768595/weka/classifiers/bayes/NaiveBayesMultinomialText_60_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 12:26:08 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_60_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_60_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.core.neighboursearch.CoverTree",
92:       "weka.classifiers.AbstractClassifier",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.OptionHandler",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.core.WekaException",
98:       "weka.attributeSelection.SubsetEvaluator",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.core.scripting.JythonSerializableObject",
102:       "weka.classifiers.Classifier",
103:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
104:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
105:       "weka.attributeSelection.CfsSubsetEval",
106:       "weka.core.Capabilities$Capability",
107:       "weka.core.SparseInstance",
108:       "weka.core.DenseInstance",
109:       "org.pentaho.packageManagement.PackageManager",
110:       "weka.estimators.PoissonEstimator",
111:       "weka.core.stemmers.Stemmer",
112:       "weka.core.tokenizers.WordTokenizer",
113:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
114:       "org.pentaho.packageManagement.DefaultPackageManager",
115:       "weka.core.stemmers.SnowballStemmer",
116:       "weka.classifiers.Evaluation",
117:       "weka.classifiers.functions.supportVector.Kernel",
118:       "weka.core.WekaPackageManager",
119:       "org.bounce.net.DefaultAuthenticator",
120:       "weka.filters.SupervisedFilter",
121:       "weka.core.neighboursearch.CoverTree$MyHeap",
122:       "weka.core.TechnicalInformationHandler",
123:       "weka.estimators.IncrementalEstimator",
124:       "weka.estimators.Estimator$Builder",
125:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
126:       "weka.core.Option",
127:       "weka.core.stemmers.NullStemmer",
128:       "weka.core.neighboursearch.PerformanceStats",
129:       "weka.core.Utils",
130:       "weka.core.tokenizers.Tokenizer",
131:       "weka.core.Attribute",
132:       "weka.core.NoSupportForMissingValuesException",
133:       "weka.core.Stopwords",
134:       "weka.classifiers.meta.MultiScheme",
135:       "weka.classifiers.UpdateableClassifier",
136:       "weka.core.tokenizers.AlphabeticTokenizer",
137:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
138:       "weka.core.MultiInstanceCapabilitiesHandler",
139:       "weka.core.Copyable",
140:       "weka.core.Capabilities",
141:       "weka.classifiers.MultipleClassifiersCombiner",
142:       "weka.core.BinarySparseInstance",
143:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
144:       "weka.core.UnassignedDatasetException",
145:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
146:       "weka.core.SerializedObject",
147:       "weka.clusterers.UpdateableClusterer",
148:       "weka.core.Summarizable",
149:       "weka.core.RevisionUtils",
150:       "weka.core.AdditionalMeasureProducer",
151:       "weka.core.neighboursearch.balltrees.BallNode",
152:       "org.pentaho.packageManagement.PackageManager$1",
153:       "weka.core.Instance",
154:       "weka.estimators.Estimator",
155:       "weka.core.Drawable",
156:       "weka.core.ProtectedProperties",
157:       "weka.core.matrix.Matrix",
158:       "weka.core.AttributeStats",
159:       "weka.core.WeightedInstancesHandler",
160:       "weka.core.neighboursearch.NearestNeighbourSearch",
161:       "weka.core.CapabilitiesHandler",
162:       "weka.core.neighboursearch.covertrees.Stack",
163:       "weka.core.Randomizable",
164:       "weka.attributeSelection.ASEvaluation",
165:       "weka.core.AbstractInstance",
166:       "weka.core.Instances",
167:       "weka.core.scripting.JythonObject",
168:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
169:       "org.pentaho.packageManagement.DefaultPackage",
170:       "weka.core.UnassignedClassException",
171:       "weka.classifiers.rules.ZeroR",
172:       "weka.core.Version",
173:       "weka.core.TechnicalInformation",
174:       "weka.core.UnsupportedAttributeTypeException",
175:       "weka.classifiers.Sourcable",
176:       "weka.core.RevisionHandler",
177:       "weka.classifiers.evaluation.output.prediction.PlainText",
178:       "weka.core.neighboursearch.TreePerformanceStats",
179:       "weka.core.xml.XMLSerialization",
180:       "weka.classifiers.xml.XMLClassifier",
181:       "weka.filters.Filter",
182:       "weka.filters.supervised.attribute.Discretize"
183:     );
184:   } 
185: 
186:   private static void resetClasses() {
187:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_60_tmp__ESTest_scaffolding.class.getClassLoader()); 
188: 
189:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
190:       "weka.classifiers.AbstractClassifier",
191:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
192:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
193:       "weka.core.Capabilities$Capability",
194:       "weka.core.tokenizers.Tokenizer",
195:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
196:       "weka.core.tokenizers.WordTokenizer",
197:       "weka.core.stemmers.NullStemmer",
198:       "weka.core.Option",
199:       "weka.core.AbstractInstance",
200:       "weka.core.SparseInstance",
201:       "weka.core.Utils",
202:       "weka.core.UnassignedDatasetException",
203:       "weka.core.TestInstances",
204:       "weka.core.Attribute",
205:       "weka.core.ProtectedProperties",
206:       "weka.core.Instances",
207:       "weka.core.DenseInstance",
208:       "weka.classifiers.bayes.BayesNet",
209:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
210:       "weka.core.Tag",
211:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
212:       "weka.classifiers.bayes.net.search.local.K2",
213:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
214:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
215:       "weka.core.neighboursearch.balltrees.BallNode",
216:       "weka.classifiers.RandomizableClassifier",
217:       "weka.classifiers.functions.SGDText",
218:       "weka.classifiers.Evaluation",
219:       "weka.core.BinarySparseInstance",
220:       "weka.core.Capabilities",
221:       "org.pentaho.packageManagement.PackageManager",
222:       "org.pentaho.packageManagement.DefaultPackageManager",
223:       "weka.core.Version",
224:       "weka.core.Environment",
225:       "weka.core.WekaPackageManager",
226:       "weka.core.FindWithCapabilities",
227:       "weka.core.SingleIndex",
228:       "weka.core.ClassDiscovery",
229:       "weka.core.SerializedObject",
230:       "weka.core.stemmers.SnowballStemmer",
231:       "weka.core.tokenizers.AlphabeticTokenizer",
232:       "weka.classifiers.misc.SerializedClassifier",
233:       "weka.attributeSelection.ASEvaluation",
234:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
235:       "weka.attributeSelection.PrincipalComponents",
236:       "weka.filters.Filter",
237:       "weka.filters.supervised.attribute.Discretize",
238:       "weka.core.Range",
239:       "weka.core.stemmers.LovinsStemmer",
240:       "weka.core.stemmers.IteratedLovinsStemmer",
241:       "weka.core.Stopwords",
242:       "weka.core.RevisionUtils",
243:       "weka.core.neighboursearch.NearestNeighbourSearch",
244:       "weka.core.neighboursearch.KDTree",
245:       "weka.core.NormalizableDistance",
246:       "weka.core.EuclideanDistance",
247:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
248:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
249:       "weka.core.neighboursearch.CoverTree",
250:       "weka.core.WekaEnumeration",
251:       "weka.core.Attribute$1",
252:       "weka.classifiers.lazy.IBk",
253:       "weka.core.neighboursearch.LinearNNSearch",
254:       "weka.core.stemmers.Stemming",
255:       "weka.classifiers.MultipleClassifiersCombiner",
256:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
257:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
258:       "weka.classifiers.meta.Stacking",
259:       "weka.classifiers.rules.ZeroR",
260:       "weka.attributeSelection.CfsSubsetEval",
261:       "weka.classifiers.SingleClassifierEnhancer",
262:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
263:       "weka.classifiers.meta.CostSensitiveClassifier",
264:       "weka.classifiers.CostMatrix",
265:       "weka.classifiers.trees.REPTree",
266:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
267:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
268:       "weka.classifiers.misc.InputMappedClassifier",
269:       "weka.core.tokenizers.NGramTokenizer",
270:       "weka.estimators.Estimator",
271:       "weka.estimators.PoissonEstimator",
272:       "weka.core.UnassignedClassException",
273:       "weka.classifiers.functions.supportVector.Kernel",
274:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
275:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
276:       "weka.classifiers.meta.MultiScheme",
277:       "weka.core.Javadoc",
278:       "weka.core.ClassCache",
279:       "weka.core.AllJavadoc",
280:       "weka.filters.AllFilter",
281:       "weka.classifiers.meta.Vote",
282:       "weka.core.WekaException",
283:       "weka.core.UnsupportedAttributeTypeException",
284:       "weka.classifiers.trees.RandomTree",
285:       "weka.classifiers.IteratedSingleClassifierEnhancer",
286:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
287:       "weka.classifiers.meta.LogitBoost",
288:       "weka.classifiers.trees.DecisionStump",
289:       "weka.core.converters.ArffLoader$ArffReader",
290:       "weka.classifiers.trees.RandomForest",
291:       "weka.core.TechnicalInformation",
292:       "weka.core.TechnicalInformation$Type",
293:       "weka.core.TechnicalInformation$Field",
294:       "weka.classifiers.bayes.NaiveBayesMultinomial",
295:       "weka.classifiers.functions.supportVector.CachedKernel",
296:       "weka.classifiers.functions.supportVector.RBFKernel",
297:       "weka.classifiers.functions.SimpleLinearRegression",
298:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
299:       "weka.classifiers.meta.MultiClassClassifier",
300:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
301:       "weka.classifiers.functions.Logistic",
302:       "weka.core.neighboursearch.BallTree",
303:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
304:       "weka.core.neighboursearch.balltrees.BallSplitter",
305:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
306:       "weka.estimators.NormalEstimator",
307:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
308:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
309:       "weka.classifiers.bayes.net.BIFReader",
310:       "weka.classifiers.meta.ClassificationViaRegression",
311:       "weka.classifiers.trees.m5.M5Base",
312:       "weka.classifiers.trees.M5P",
313:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
314:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
315:       "weka.classifiers.functions.SMO",
316:       "weka.classifiers.functions.supportVector.PolyKernel",
317:       "weka.classifiers.trees.LMT",
318:       "weka.classifiers.bayes.NaiveBayes",
319:       "weka.attributeSelection.ReliefFAttributeEval",
320:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
321:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
322:       "weka.classifiers.meta.Bagging",
323:       "weka.attributeSelection.InfoGainAttributeEval",
324:       "weka.classifiers.trees.J48",
325:       "weka.classifiers.trees.j48.ClassifierTree",
326:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
327:       "weka.classifiers.meta.AdditiveRegression",
328:       "weka.classifiers.functions.SGD",
329:       "weka.classifiers.functions.SMOreg",
330:       "weka.classifiers.functions.supportVector.RegOptimizer",
331:       "weka.classifiers.functions.supportVector.RegSMO",
332:       "weka.classifiers.functions.supportVector.RegSMOImproved",
333:       "weka.classifiers.rules.PART",
334:       "weka.classifiers.rules.part.MakeDecList",
335:       "weka.classifiers.functions.supportVector.StringKernel",
336:       "weka.classifiers.meta.AttributeSelectedClassifier",
337:       "weka.attributeSelection.ASSearch",
338:       "weka.attributeSelection.BestFirst",
339:       "weka.estimators.DiscreteEstimator",
340:       "weka.classifiers.rules.M5Rules",
341:       "weka.classifiers.functions.LinearRegression",
342:       "weka.filters.SimpleFilter",
343:       "weka.filters.SimpleStreamFilter",
344:       "weka.filters.MultiFilter",
345:       "weka.classifiers.meta.FilteredClassifier",
346:       "weka.filters.supervised.attribute.AttributeSelection",
347:       "weka.attributeSelection.AttributeSelection",
348:       "weka.attributeSelection.GreedyStepwise",
349:       "weka.classifiers.bayes.NaiveBayesUpdateable",
350:       "weka.core.matrix.Matrix",
351:       "weka.estimators.MahalanobisEstimator",
352:       "weka.classifiers.meta.RegressionByDiscretization",
353:       "weka.filters.unsupervised.attribute.Discretize",
354:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
355:       "weka.classifiers.meta.CVParameterSelection",
356:       "weka.core.FastVector",
357:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
358:       "weka.classifiers.rules.JRip",
359:       "weka.classifiers.meta.AdaBoostM1",
360:       "weka.classifiers.functions.supportVector.Puk",
361:       "weka.attributeSelection.WrapperSubsetEval",
362:       "weka.classifiers.lazy.KStar",
363:       "weka.attributeSelection.OneRAttributeEval",
364:       "weka.classifiers.lazy.LWL",
365:       "weka.estimators.KernelEstimator",
366:       "weka.classifiers.functions.SimpleLogistic",
367:       "weka.classifiers.rules.OneR",
368:       "weka.classifiers.functions.GaussianProcesses",
369:       "weka.core.SelectedTag",
370:       "weka.classifiers.rules.DecisionTable",
371:       "weka.core.Optimization",
372:       "weka.core.ConjugateGradientOptimization",
373:       "weka.core.Check",
374:       "weka.core.CheckGOE",
375:       "weka.core.ManhattanDistance",
376:       "weka.classifiers.functions.VotedPerceptron",
377:       "weka.core.AttributeStats",
378:       "weka.core.CheckOptionHandler",
379:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
380:       "weka.attributeSelection.CorrelationAttributeEval",
381:       "weka.core.MinkowskiDistance",
382:       "weka.classifiers.functions.MultilayerPerceptron",
383:       "weka.filters.unsupervised.attribute.NominalToBinary",
384:       "weka.classifiers.functions.neural.SigmoidUnit",
385:       "weka.classifiers.functions.neural.LinearUnit",
386:       "weka.classifiers.meta.RandomCommittee",
387:       "weka.classifiers.meta.RandomSubSpace",
388:       "weka.attributeSelection.GainRatioAttributeEval",
389:       "weka.experiment.Stats",
390:       "weka.core.ChebyshevDistance"
391:     );
392:   }
393: }

[MASTER] 12:26:08.616 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
naiveBayesMultinomialText0.getOptions();
linkedHashMap0.values();
SystemInUtil.addInputLine("");
naiveBayesMultinomialText0.m_norm = 0.0;
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);

naiveBayesMultinomialText0.setLNorm(0.0);
naiveBayesMultinomialText0.periodicPruningTipText();
naiveBayesMultinomialText0.setDebug(true);
naiveBayesMultinomialText0.setTokenizer((Tokenizer) null);
naiveBayesMultinomialText0.normalizeDocLengthTipText();
FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
naiveBayesMultinomialText0.stopwordsTipText();
naiveBayesMultinomialText0.globalInfo();
naiveBayesMultinomialText0.getStopwords();
naiveBayesMultinomialText0.stopwordsTipText();
naiveBayesMultinomialText0.getNorm();
naiveBayesMultinomialText0.stopwordsTipText();
assertEquals(0.0, naiveBayesMultinomialText0.getNorm(), 0.01);


[MASTER] 12:26:10.525 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 12:26:10.605 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/mosa/tests/s1029/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14421
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14422
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14427
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 12:27:07.357 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 12:27:07.368 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 12:27:07.369 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 12:27:08.872 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 12:27:08.877 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 12:27:08.878 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 12:27:08.884 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
[MASTER] 12:27:08.999 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 12:27:09.710 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 12:27:09.713 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Total number of test goals for MOSA: 2499
* Using seed 1029
* Starting evolution
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2767
* Using seed 1029
* Starting evolution
[MASTER] 12:27:13.227 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 12:27:15.469 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NominalAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 12:27:20.911 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 12:27:20.913 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 12:27:20.913 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 12:27:21.472 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 12:27:22.170 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 12:27:22.170 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 12:27:23.740 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 12:27:23.763 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 12:27:23.764 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 12:27:23.764 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 12:27:23.765 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 12:27:23.767 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 12:27:23.767 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 12:27:23.768 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 12:27:23.768 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 12:27:23.824 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 12:27:23.835 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 3904
* Using seed 1029
* Starting evolution
[MASTER] 12:27:25.863 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 12:27:26.304 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3618
[MASTER] 12:27:26.305 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3620
[MASTER] 12:27:26.305 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3621
[MASTER] 12:27:26.305 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3622
[MASTER] 12:27:26.305 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3625
[MASTER] 12:27:26.305 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3626
[MASTER] 12:27:26.305 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3627
[MASTER] 12:27:26.305 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3628
[MASTER] 12:27:26.305 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3629
[MASTER] 12:27:26.305 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3630
[MASTER] 12:27:26.305 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3631
[MASTER] 12:27:26.305 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: Line 3635
[MASTER] 12:27:26.306 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: I39 Branch 355 IF_ICMPGE L3625 - false
[MASTER] 12:27:26.306 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: I59 Branch 356 IFLE L3628 - true
[MASTER] 12:27:26.306 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: I59 Branch 356 IFLE L3628 - false
[MASTER] 12:27:26.313 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 10436: weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;:3625 - ReplaceComparisonOperator >= -> -1
[MASTER] 12:27:26.314 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 10449: weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;:3628 - ReplaceComparisonOperator <= -> -1
[MASTER] 12:27:26.314 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 10450: weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;:3628 - ReplaceComparisonOperator <= -> ==
[MASTER] 12:27:26.314 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;:NonEmptyString
[MASTER] 12:27:26.316 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;
[MASTER] 12:27:26.317 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;
[MASTER] 12:27:26.319 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: I39 Branch 355 IF_ICMPGE L3625 - false in context: 
[MASTER] 12:27:26.319 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: I59 Branch 356 IFLE L3628 - true in context: 
[MASTER] 12:27:26.319 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.getGlobalInfo(Lweka/classifiers/Classifier;)Ljava/lang/String;: I59 Branch 356 IFLE L3628 - false in context: 
[MASTER] 12:27:26.599 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 12:28:47.805 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 123s and 93 generations, 58495 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Search finished after 124s and 168 generations, 67734 statements, best individual has fitness: 12672.0
* Generated 16 tests with total length 79
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 35%
* Total number of goals: 705
* Number of covered goals: 250
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 108
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 55%
* Total number of goals: 993
* Number of covered goals: 550
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 31%
* Total number of goals: 93
* Number of covered goals: 29
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 108
* Generated 80 tests with total length 585
* Resulting test suite's coverage: 43% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/mosa/tests/s1029/107_weka/evosuite-tests
* Done!

* Computation finished
* Search finished after 131s and 64 generations, 38929 statements, best individual has fitness: 16464.0
[MASTER] 12:29:38.031 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 13 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 55%
* Total number of goals: 1378
* Number of covered goals: 752
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 39%
* Total number of goals: 809
* Number of covered goals: 317
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 51
* Number of covered goals: 51
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 56%
* Total number of goals: 424
* Number of covered goals: 238
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 21%
* Total number of goals: 278
* Number of covered goals: 58
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 103
* Number of covered goals: 101
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 36%
* Total number of goals: 809
* Number of covered goals: 292
* Generated 128 tests with total length 1457
* Resulting test suite's coverage: 48% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 23%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/mosa/tests/s1029/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 6%
* Compiling and checking tests
[MASTER] 12:34:58.203 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 12:34:58.297 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 12:34:58.309 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 12:34:58.609 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 12:34:58.609 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 12:34:58.611 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/mosa/tests/s1029/107_weka/evosuite-tests
* Done!

* Computation finished
