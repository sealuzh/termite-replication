* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20199
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 16:50:41.602 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 16:50:41.616 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 16:50:41.616 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 16:50:42.440 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 16:50:43.082 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 16:50:43.088 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 16:50:44.372 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 16:50:44.394 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 16:50:44.394 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 16:50:44.395 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 16:50:44.395 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 16:50:44.395 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 16:50:44.395 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 16:50:44.396 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 16:50:44.396 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 16:50:44.430 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 16:50:44.437 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 3904
* Using seed 1003
* Starting evolution
[MASTER] 16:50:47.278 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 16:51:03.935 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 16:51:50.692 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 132s and 76 generations, 38090 statements, best individual has fitness: 14568.0
[MASTER] 16:53:00.433 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 14 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 60%
* Total number of goals: 1378
* Number of covered goals: 827
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 47%
* Total number of goals: 809
* Number of covered goals: 377
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 57
* Number of covered goals: 57
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 67%
* Total number of goals: 424
* Number of covered goals: 284
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 21%
* Total number of goals: 278
* Number of covered goals: 57
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 103
* Number of covered goals: 101
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 95%
* Total number of goals: 103
* Number of covered goals: 98
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 44%
* Total number of goals: 809
* Number of covered goals: 352
* Generated 138 tests with total length 1337
* Resulting test suite's coverage: 54% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
[MASTER] 16:56:38.568 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 16:56:38.659 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 16:56:39.022 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 16:56:39.022 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/mosa/tests/s1003/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20194
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 16:57:40.022 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 16:57:40.025 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 16:57:40.025 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 16:57:40.045 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2699
* Using seed 1003
* Starting evolution
* Search finished after 134s and 33 generations, 26299 statements, best individual has fitness: 2752.0
[MASTER] 16:59:57.203 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 16 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 647
* Number of covered goals: 612
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 441
* Number of covered goals: 403
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 678
* Number of covered goals: 609
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 42%
* Total number of goals: 244
* Number of covered goals: 103
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 124
* Number of covered goals: 122
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 124
* Number of covered goals: 122
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 441
* Number of covered goals: 387
* Generated 194 tests with total length 2048
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 27%
[MASTER] 17:08:05.297 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/mosa/tests/s1003/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20190
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20192
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1367
* Using seed 1003
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:08:50.369 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:08:50.395 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:08:50.396 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:08:50.399 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2499
* Using seed 1003
* Starting evolution
[MASTER] 17:08:53.227 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 123s and 166 generations, 66640 statements, best individual has fitness: 2840.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 217
* Number of covered goals: 189
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 281
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 238
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 65%
* Total number of goals: 428
* Number of covered goals: 280
* Generated 77 tests with total length 232
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 122s and 99 generations, 68194 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 18 tests with total length 115
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/mosa/tests/s1003/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 79%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/mosa/tests/s1003/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20190
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20199
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:14:52.670 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:14:52.687 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:14:52.688 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:14:52.799 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 17:14:52.821 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 17:14:52.842 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1729
* Using seed 1003
* Starting evolution
[MASTER] 17:14:55.098 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:14:55.145 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:14:55.145 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:14:58.005 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 17:14:58.471 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 17:14:58.474 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2767
* Using seed 1003
* Starting evolution
[MASTER] 17:15:04.398 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.getAccuRate()D: Line 725
[MASTER] 17:15:04.409 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.getAccuRate()D: root-Branch
[MASTER] 17:15:04.412 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 675: weka.classifiers.rules.JRip$Antd.getAccuRate()D:725 - ReplaceVariable accuRate -> cover
[MASTER] 17:15:04.412 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 676: weka.classifiers.rules.JRip$Antd.getAccuRate()D:725 - ReplaceVariable accuRate -> accu
[MASTER] 17:15:04.412 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 677: weka.classifiers.rules.JRip$Antd.getAccuRate()D:725 - ReplaceVariable accuRate -> value
[MASTER] 17:15:04.412 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 678: weka.classifiers.rules.JRip$Antd.getAccuRate()D:725 - ReplaceVariable accuRate -> maxInfoGain
[MASTER] 17:15:04.412 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 679: weka.classifiers.rules.JRip$Antd.getAccuRate()D:725 - InsertUnaryOp Negation
[MASTER] 17:15:04.414 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.Antd.getAccuRate()D
[MASTER] 17:15:04.415 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.Antd.getAccuRate()D
[MASTER] 17:15:04.420 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$Antd.getAccuRate()D: root-Branch in context: weka.classifiers.rules.JRip$Antd:getAccuRate()D
[MASTER] 17:15:59.776 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
* Search finished after 123s and 226 generations, 90578 statements, best individual has fitness: 3632.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 74%
* Total number of goals: 370
* Number of covered goals: 274
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 64%
* Total number of goals: 242
* Number of covered goals: 155
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 30
* Number of covered goals: 30
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 79%
* Total number of goals: 713
* Number of covered goals: 564
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 53%
* Total number of goals: 72
* Number of covered goals: 38
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 64%
* Total number of goals: 242
* Number of covered goals: 155
* Generated 89 tests with total length 613
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 123s and 159 generations, 65894 statements, best individual has fitness: 12872.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 36%
* Total number of goals: 705
* Number of covered goals: 257
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 108
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 52%
* Total number of goals: 993
* Number of covered goals: 512
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 30%
* Total number of goals: 93
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 107
* Generated 75 tests with total length 547
* Resulting test suite's coverage: 42% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
[MASTER] 17:17:49.383 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 17:17:49.964 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/mosa/tests/s1003/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 31%
* Compiling and checking tests
[MASTER] 17:19:01.131 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 17:19:01.152 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 17:19:01.246 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 17:19:01.246 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 17:19:15.563 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 17:19:15.564 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
Instances instances0 = new Instances("g03/R82[{+I@t_y-R$", arrayList1, 125);
Attribute attribute0 = new Attribute("g03/R82[{+I@t_y-R$", instances0);
arrayList0.add(attribute0);
arrayList1.add(attribute0);
Instances instances1 = new Instances(")", arrayList1, 122);
discretize0.setInputFormat(instances1);

[MASTER] 17:19:19.634 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 17:19:19.635 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Attribute attribute0 = new Attribute("F");
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("integer", arrayList0, 11);
Discretize discretize0 = new Discretize();
Attribute attribute1 = new Attribute(";Y]RBkt]r!a", instances0, 4);
arrayList0.add(attribute1);
discretize0.setInputFormat(instances0);

[MASTER] 17:19:21.129 [logback-1] WARN  ClassResetter - java.lang.reflect.InvocationTargetException, caused by: java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 17:19:21.129 [logback-1] WARN  ClassResetter - java.lang.reflect.InvocationTargetException, caused by: java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/mosa/tests/s1003/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20195
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:27:50.335 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 17:27:50.341 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 17:27:50.342 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 17:27:50.436 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:27:50.454 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:27:50.454 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1412
* Using seed 1003
* Starting evolution
[MASTER] 17:27:55.746 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 17:27:55.746 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 17:27:56.729 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V: Line 487
[MASTER] 17:27:56.729 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V: Line 488
[MASTER] 17:27:56.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V: I4 Branch 42 IFLE L487 - true
[MASTER] 17:27:56.732 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 191: weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V:487 - InsertUnaryOp Negation
[MASTER] 17:27:56.732 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 192: weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V:487 - InsertUnaryOp +1
[MASTER] 17:27:56.732 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 193: weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V:487 - InsertUnaryOp -1
[MASTER] 17:27:56.732 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 196: weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V:487 - ReplaceComparisonOperator <= -> <
[MASTER] 17:27:56.736 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V
[MASTER] 17:27:56.737 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V
[MASTER] 17:27:56.738 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V: I4 Branch 42 IFLE L487 - true in context: 
[MASTER] 17:28:29.774 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 123s and 210 generations, 81234 statements, best individual has fitness: 1656.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 89%
* Total number of goals: 338
* Number of covered goals: 301
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 83%
* Total number of goals: 194
* Number of covered goals: 161
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 476
* Number of covered goals: 428
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 60
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 194
* Number of covered goals: 159
* Generated 74 tests with total length 467
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 56%
* Compiling and checking tests
[MASTER] 17:32:15.394 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_27_1575480735370/weka/classifiers/bayes/NaiveBayesMultinomialText_27_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_27_1575480735370/weka/classifiers/bayes/NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding.java]]
[MASTER] 17:32:15.394 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 17:32:15.394 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 17:32:15.397 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 17:32:15.397 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_27_1575480735370/weka/classifiers/bayes/NaiveBayesMultinomialText_27_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 17:32:15 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: 
16: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
17: public class NaiveBayesMultinomialText_27_tmp__ESTest extends NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding {
18: 
19:   /**
20:   //Test case number: 0
21:   /*Coverage entropy=3.5176485343902093
22:   */
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
26:       naiveBayesMultinomialText0.getRevision();
27:       naiveBayesMultinomialText0.setUseStopList(true);
28:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
29:       NaiveBayesMultinomialText.main(stringArray0);
30:       naiveBayesMultinomialText0.getRevision();
31:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
32:       naiveBayesMultinomialText0.setOptions(stringArray0);
33:       naiveBayesMultinomialText0.getUseStopList();
34:       naiveBayesMultinomialText0.normTipText();
35:       naiveBayesMultinomialText0.lowercaseTokensTipText();
36:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
37:       assertTrue(naiveBayesMultinomialText0.getUseStopList());
38:   }
39: }
RegularFileObject[/tmp/EvoSuite_27_1575480735370/weka/classifiers/bayes/NaiveBayesMultinomialText_27_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 17:32:15 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.classifiers.functions.LinearRegression",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.classifiers.functions.SGDText",
108:       "weka.core.Utils",
109:       "weka.core.tokenizers.Tokenizer",
110:       "weka.core.NoSupportForMissingValuesException",
111:       "weka.classifiers.UpdateableClassifier",
112:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
113:       "weka.core.MultiInstanceCapabilitiesHandler",
114:       "weka.core.Copyable",
115:       "weka.core.Capabilities",
116:       "weka.core.BinarySparseInstance",
117:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
118:       "weka.filters.supervised.attribute.NominalToBinary",
119:       "weka.core.SerializedObject",
120:       "weka.clusterers.UpdateableClusterer",
121:       "weka.core.Summarizable",
122:       "weka.core.neighboursearch.balltrees.BallNode",
123:       "org.pentaho.packageManagement.PackageManager$1",
124:       "weka.core.Drawable",
125:       "weka.core.CapabilitiesHandler",
126:       "weka.attributeSelection.ASEvaluation",
127:       "weka.core.AbstractInstance",
128:       "weka.core.scripting.JythonObject",
129:       "weka.core.SelectedTag",
130:       "org.pentaho.packageManagement.DefaultPackage",
131:       "weka.core.Version",
132:       "weka.core.Tag",
133:       "weka.classifiers.AbstractClassifier",
134:       "weka.filters.unsupervised.attribute.Center",
135:       "weka.core.OptionHandler",
136:       "weka.core.WekaException",
137:       "weka.filters.StreamableFilter",
138:       "weka.core.scripting.JythonSerializableObject",
139:       "weka.classifiers.Classifier",
140:       "weka.core.Capabilities$Capability",
141:       "weka.core.SparseInstance",
142:       "org.pentaho.packageManagement.PackageManager",
143:       "weka.attributeSelection.AttributeTransformer",
144:       "weka.core.tokenizers.WordTokenizer",
145:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
146:       "weka.attributeSelection.PrincipalComponents",
147:       "weka.core.stemmers.SnowballStemmer",
148:       "weka.core.stemmers.LovinsStemmer",
149:       "weka.classifiers.Evaluation",
150:       "weka.core.WekaPackageManager",
151:       "weka.filters.SupervisedFilter",
152:       "weka.core.TechnicalInformationHandler",
153:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
154:       "weka.core.Option",
155:       "weka.classifiers.meta.CostSensitiveClassifier",
156:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
157:       "weka.filters.Sourcable",
158:       "weka.core.Attribute",
159:       "weka.core.Stopwords",
160:       "weka.core.tokenizers.AlphabeticTokenizer",
161:       "weka.core.FastVector",
162:       "weka.core.UnassignedDatasetException",
163:       "weka.classifiers.RandomizableClassifier",
164:       "weka.classifiers.SingleClassifierEnhancer",
165:       "weka.core.RevisionUtils",
166:       "weka.core.Instance",
167:       "weka.core.ProtectedProperties",
168:       "weka.core.AttributeStats",
169:       "weka.core.WeightedInstancesHandler",
170:       "weka.filters.unsupervised.attribute.Remove",
171:       "weka.core.Randomizable",
172:       "weka.core.Instances",
173:       "weka.core.UnassignedClassException",
174:       "weka.classifiers.rules.ZeroR",
175:       "weka.core.stemmers.IteratedLovinsStemmer",
176:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
177:       "weka.filters.unsupervised.attribute.Standardize",
178:       "weka.core.TechnicalInformation",
179:       "weka.core.UnsupportedAttributeTypeException",
180:       "weka.classifiers.Sourcable",
181:       "weka.core.RevisionHandler",
182:       "weka.classifiers.evaluation.output.prediction.PlainText",
183:       "weka.core.xml.XMLSerialization",
184:       "weka.classifiers.xml.XMLClassifier",
185:       "weka.filters.Filter"
186:     );
187:   } 
188: 
189:   private static void resetClasses() {
190:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding.class.getClassLoader()); 
191: 
192:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
193:       "weka.classifiers.AbstractClassifier",
194:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
195:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
196:       "weka.core.Capabilities$Capability",
197:       "weka.core.tokenizers.Tokenizer",
198:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
199:       "weka.core.tokenizers.WordTokenizer",
200:       "weka.core.stemmers.NullStemmer",
201:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
202:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
203:       "weka.core.neighboursearch.balltrees.BallSplitter",
204:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
205:       "weka.core.neighboursearch.balltrees.BallNode",
206:       "weka.classifiers.misc.SerializedClassifier",
207:       "weka.core.AbstractInstance",
208:       "weka.core.SparseInstance",
209:       "weka.core.BinarySparseInstance",
210:       "weka.core.FindWithCapabilities",
211:       "weka.core.Capabilities",
212:       "weka.core.Utils",
213:       "org.pentaho.packageManagement.PackageManager",
214:       "org.pentaho.packageManagement.DefaultPackageManager",
215:       "weka.core.Version",
216:       "weka.core.Environment",
217:       "weka.core.WekaPackageManager",
218:       "weka.core.SingleIndex",
219:       "weka.core.Attribute",
220:       "weka.core.ProtectedProperties",
221:       "weka.core.neighboursearch.NearestNeighbourSearch",
222:       "weka.core.neighboursearch.CoverTree",
223:       "weka.core.NormalizableDistance",
224:       "weka.core.EuclideanDistance",
225:       "weka.core.Range",
226:       "weka.filters.Filter",
227:       "weka.filters.supervised.attribute.Discretize",
228:       "weka.core.RevisionUtils",
229:       "weka.core.tokenizers.NGramTokenizer",
230:       "weka.classifiers.bayes.NaiveBayes",
231:       "weka.classifiers.bayes.NaiveBayesUpdateable",
232:       "weka.core.UnassignedDatasetException",
233:       "weka.core.stemmers.LovinsStemmer",
234:       "weka.core.stemmers.IteratedLovinsStemmer",
235:       "weka.classifiers.SingleClassifierEnhancer",
236:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
237:       "weka.classifiers.meta.CVParameterSelection",
238:       "weka.classifiers.rules.ZeroR",
239:       "weka.core.FastVector",
240:       "weka.classifiers.Evaluation",
241:       "weka.core.Option",
242:       "weka.core.stemmers.SnowballStemmer",
243:       "weka.core.Tag",
244:       "weka.classifiers.lazy.IBk",
245:       "weka.core.neighboursearch.LinearNNSearch",
246:       "weka.core.TestInstances",
247:       "weka.core.SerializedObject",
248:       "weka.core.TechnicalInformation",
249:       "weka.core.TechnicalInformation$Type",
250:       "weka.core.TechnicalInformation$Field",
251:       "weka.core.Instances",
252:       "weka.core.converters.ArffLoader$ArffReader",
253:       "weka.core.tokenizers.AlphabeticTokenizer",
254:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
255:       "weka.classifiers.functions.supportVector.Kernel",
256:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
257:       "weka.attributeSelection.ASEvaluation",
258:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
259:       "weka.attributeSelection.PrincipalComponents",
260:       "weka.core.DenseInstance",
261:       "weka.core.Stopwords",
262:       "weka.classifiers.RandomizableClassifier",
263:       "weka.classifiers.functions.SGDText",
264:       "weka.core.neighboursearch.KDTree",
265:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
266:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
267:       "weka.classifiers.misc.InputMappedClassifier",
268:       "weka.core.neighboursearch.BallTree",
269:       "weka.classifiers.functions.SGD",
270:       "weka.core.SelectedTag",
271:       "weka.classifiers.rules.PART",
272:       "weka.classifiers.rules.part.MakeDecList",
273:       "weka.classifiers.MultipleClassifiersCombiner",
274:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
275:       "weka.classifiers.meta.MultiScheme",
276:       "weka.classifiers.IteratedSingleClassifierEnhancer",
277:       "weka.classifiers.meta.AdditiveRegression",
278:       "weka.core.WekaException",
279:       "weka.core.UnsupportedAttributeTypeException",
280:       "weka.classifiers.meta.Vote",
281:       "weka.classifiers.bayes.BayesNet",
282:       "weka.classifiers.bayes.net.BIFReader",
283:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
284:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
285:       "weka.classifiers.bayes.net.search.local.K2",
286:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
287:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
288:       "weka.classifiers.trees.DecisionStump",
289:       "weka.attributeSelection.OneRAttributeEval",
290:       "weka.classifiers.CostMatrix",
291:       "weka.classifiers.bayes.NaiveBayesMultinomial",
292:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
293:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
294:       "weka.classifiers.meta.RegressionByDiscretization",
295:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
296:       "weka.filters.unsupervised.attribute.Discretize",
297:       "weka.classifiers.trees.J48",
298:       "weka.classifiers.trees.j48.ClassifierTree",
299:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
300:       "weka.filters.AllFilter",
301:       "weka.core.WekaEnumeration",
302:       "weka.core.Attribute$1",
303:       "weka.classifiers.meta.ClassificationViaRegression",
304:       "weka.classifiers.trees.m5.M5Base",
305:       "weka.classifiers.trees.M5P",
306:       "weka.classifiers.functions.LinearRegression",
307:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
308:       "weka.classifiers.functions.Logistic",
309:       "weka.attributeSelection.GainRatioAttributeEval",
310:       "weka.core.AttributeStats",
311:       "weka.classifiers.meta.FilteredClassifier",
312:       "weka.filters.supervised.attribute.AttributeSelection",
313:       "weka.attributeSelection.AttributeSelection",
314:       "weka.attributeSelection.CfsSubsetEval",
315:       "weka.attributeSelection.ASSearch",
316:       "weka.attributeSelection.GreedyStepwise",
317:       "weka.attributeSelection.BestFirst",
318:       "weka.classifiers.rules.DecisionTable",
319:       "weka.core.ClassDiscovery",
320:       "weka.classifiers.trees.LMT",
321:       "weka.classifiers.trees.RandomTree",
322:       "weka.core.stemmers.Stemming",
323:       "weka.classifiers.functions.supportVector.StringKernel",
324:       "weka.filters.SimpleFilter",
325:       "weka.filters.SimpleStreamFilter",
326:       "weka.filters.MultiFilter",
327:       "weka.classifiers.lazy.LWL",
328:       "weka.classifiers.meta.CostSensitiveClassifier",
329:       "weka.core.UnassignedClassException",
330:       "weka.estimators.Estimator",
331:       "weka.estimators.NormalEstimator",
332:       "weka.estimators.KernelEstimator",
333:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
334:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
335:       "weka.classifiers.meta.Stacking",
336:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
337:       "weka.classifiers.rules.OneR",
338:       "weka.classifiers.functions.SimpleLogistic",
339:       "weka.classifiers.functions.SMOreg",
340:       "weka.classifiers.functions.supportVector.RegOptimizer",
341:       "weka.classifiers.functions.supportVector.RegSMO",
342:       "weka.classifiers.functions.supportVector.RegSMOImproved",
343:       "weka.classifiers.functions.supportVector.CachedKernel",
344:       "weka.classifiers.functions.supportVector.PolyKernel",
345:       "weka.attributeSelection.WrapperSubsetEval",
346:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
347:       "weka.classifiers.meta.LogitBoost",
348:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
349:       "weka.estimators.DiscreteEstimator",
350:       "weka.classifiers.functions.SMO",
351:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
352:       "weka.classifiers.functions.VotedPerceptron",
353:       "weka.classifiers.trees.RandomForest",
354:       "weka.core.matrix.Matrix",
355:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
356:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
357:       "weka.classifiers.meta.Bagging",
358:       "weka.classifiers.trees.REPTree",
359:       "weka.attributeSelection.ReliefFAttributeEval",
360:       "weka.estimators.PoissonEstimator",
361:       "weka.attributeSelection.InfoGainAttributeEval",
362:       "weka.classifiers.functions.supportVector.RBFKernel",
363:       "weka.classifiers.meta.RandomCommittee",
364:       "weka.classifiers.functions.GaussianProcesses",
365:       "weka.classifiers.rules.M5Rules",
366:       "weka.classifiers.meta.AdaBoostM1",
367:       "weka.attributeSelection.CorrelationAttributeEval",
368:       "weka.classifiers.rules.JRip",
369:       "weka.core.Javadoc",
370:       "weka.core.GlobalInfoJavadoc",
371:       "weka.classifiers.meta.MultiClassClassifier",
372:       "weka.classifiers.functions.SimpleLinearRegression",
373:       "weka.classifiers.functions.MultilayerPerceptron",
374:       "weka.filters.unsupervised.attribute.NominalToBinary",
375:       "weka.classifiers.functions.neural.SigmoidUnit",
376:       "weka.classifiers.functions.neural.LinearUnit",
377:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
378:       "weka.classifiers.meta.AttributeSelectedClassifier",
379:       "weka.classifiers.functions.supportVector.Puk",
380:       "weka.classifiers.lazy.KStar",
381:       "weka.attributeSelection.Ranker",
382:       "weka.classifiers.meta.RandomSubSpace",
383:       "weka.core.SerializationHelper",
384:       "weka.core.Check",
385:       "weka.core.CheckGOE",
386:       "weka.core.ClassCache",
387:       "weka.core.AllJavadoc",
388:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
389:       "weka.estimators.MahalanobisEstimator",
390:       "weka.core.ChebyshevDistance"
391:     );
392:   }
393: }

[MASTER] 17:32:15.398 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.getRevision();
naiveBayesMultinomialText0.setUseStopList(true);
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
NaiveBayesMultinomialText.main(stringArray0);
naiveBayesMultinomialText0.getRevision();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.getUseStopList();
naiveBayesMultinomialText0.normTipText();
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.normalizeDocLengthTipText();
assertTrue(naiveBayesMultinomialText0.getUseStopList());


[MASTER] 17:32:18.321 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 17:32:18.395 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/mosa/tests/s1003/107_weka/evosuite-tests
* Done!

* Computation finished
