* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10607
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 15:26:54.509 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 15:26:54.512 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 15:26:54.512 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 15:26:57.058 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 15:26:57.466 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 15:26:57.474 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2767
* Using seed 1001
* Starting evolution
[MASTER] 15:27:02.369 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;: Line 599
[MASTER] 15:27:02.370 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;: root-Branch
[MASTER] 15:27:02.374 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 214: weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;:599 - ReplaceConstant - Whether check for error rate >= 1/2 is included in stopping criterion. -> 
[MASTER] 15:27:02.376 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 15:27:02.376 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;
[MASTER] 15:27:02.376 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;
[MASTER] 15:27:02.380 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.rules.JRip:checkErrorRateTipText()Ljava/lang/String;
[MASTER] 15:27:02.546 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NominalAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 15:27:11.383 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
* Search finished after 123s and 173 generations, 79006 statements, best individual has fitness: 12680.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 36%
* Total number of goals: 705
* Number of covered goals: 252
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 25%
* Total number of goals: 416
* Number of covered goals: 106
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 56%
* Total number of goals: 993
* Number of covered goals: 554
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 27%
* Total number of goals: 93
* Number of covered goals: 25
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 25%
* Total number of goals: 416
* Number of covered goals: 106
* Generated 63 tests with total length 388
* Resulting test suite's coverage: 43% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
[MASTER] 15:29:38.566 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 15:29:39.126 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/mosa/tests/s1001/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10604
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 15:37:02.176 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 15:37:02.178 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 15:37:02.195 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 15:37:02.773 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 15:37:03.288 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 15:37:03.288 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 15:37:04.761 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 15:37:04.784 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 15:37:04.784 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 15:37:04.784 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 15:37:04.784 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 15:37:04.785 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 15:37:04.785 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 15:37:04.785 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 15:37:04.785 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 15:37:04.833 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 15:37:04.842 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 3904
* Using seed 1001
* Starting evolution
[MASTER] 15:37:18.552 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 15:37:21.198 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 126s and 86 generations, 39009 statements, best individual has fitness: 15056.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 58%
* Total number of goals: 1378
* Number of covered goals: 804
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 45%
* Total number of goals: 809
* Number of covered goals: 363
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 60
* Number of covered goals: 60
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 61%
* Total number of goals: 424
* Number of covered goals: 260
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 20%
* Total number of goals: 278
* Number of covered goals: 56
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 103
* Number of covered goals: 102
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 97%
* Total number of goals: 103
* Number of covered goals: 100
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 44%
* Total number of goals: 809
* Number of covered goals: 354
* Generated 143 tests with total length 1321
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
[MASTER] 15:43:37.446 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 15:43:37.537 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 15:43:37.890 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 15:43:37.890 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/mosa/tests/s1001/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10601
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 15:44:58.676 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 15:44:58.678 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 15:44:58.699 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 15:44:58.745 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2699
* Using seed 1001
* Starting evolution
* Search finished after 135s and 38 generations, 24933 statements, best individual has fitness: 2440.0
[MASTER] 15:47:16.748 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 16 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 647
* Number of covered goals: 628
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 441
* Number of covered goals: 413
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 678
* Number of covered goals: 612
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 244
* Number of covered goals: 107
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 124
* Number of covered goals: 122
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 97%
* Total number of goals: 124
* Number of covered goals: 120
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 89%
* Total number of goals: 441
* Number of covered goals: 392
* Generated 204 tests with total length 1930
* Resulting test suite's coverage: 89% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 31%
[MASTER] 15:55:24.616 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/mosa/tests/s1001/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10599
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10603
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 15:56:07.336 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 15:56:07.342 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 15:56:07.344 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 15:56:07.504 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 15:56:07.529 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 15:56:07.535 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 15:56:08.431 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 15:56:08.434 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 15:56:08.435 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 15:56:08.457 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 15:56:08.461 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 15:56:08.462 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Total number of test goals for MOSA: 1729
* Using seed 1001
* Starting evolution
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1412
* Using seed 1001
* Starting evolution
[MASTER] 15:56:14.864 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z: Line 635
[MASTER] 15:56:14.865 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D: Line 704
[MASTER] 15:56:14.865 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;: Line 771
[MASTER] 15:56:14.865 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: Line 817
[MASTER] 15:56:14.866 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D: root-Branch
[MASTER] 15:56:14.866 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;: root-Branch
[MASTER] 15:56:14.866 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: root-Branch
[MASTER] 15:56:14.866 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z: root-Branch
[MASTER] 15:56:14.876 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 267: weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z:635 - InsertUnaryOp Negation
[MASTER] 15:56:14.876 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 283: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - ReplaceVariable m_minWordP -> m_norm
[MASTER] 15:56:14.876 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 284: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - ReplaceVariable m_minWordP -> m_t
[MASTER] 15:56:14.876 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 285: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - ReplaceVariable m_minWordP -> m_leplace
[MASTER] 15:56:14.876 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 286: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - ReplaceVariable m_minWordP -> m_lnorm
[MASTER] 15:56:14.876 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 287: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - InsertUnaryOp Negation
[MASTER] 15:56:14.876 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 312: weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;:771 - ReplaceConstant - The LNorm to use for document length normalization. -> 
[MASTER] 15:56:14.876 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 335: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z:817 - InsertUnaryOp Negation
[MASTER] 15:56:14.877 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z:False
[MASTER] 15:56:14.877 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:Positive
[MASTER] 15:56:14.877 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 15:56:14.877 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z:False
[MASTER] 15:56:14.877 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z
[MASTER] 15:56:14.878 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D
[MASTER] 15:56:14.878 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;
[MASTER] 15:56:14.878 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z
[MASTER] 15:56:14.887 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z
[MASTER] 15:56:14.888 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D
[MASTER] 15:56:14.888 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;
[MASTER] 15:56:14.888 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z
[MASTER] 15:56:14.888 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getLowercaseTokens()Z
[MASTER] 15:56:14.888 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getUseStopList()Z
[MASTER] 15:56:14.888 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getMinWordFrequency()D
[MASTER] 15:56:14.888 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:LNormTipText()Ljava/lang/String;
[MASTER] 15:56:14.952 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V: Line 789
[MASTER] 15:56:14.952 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V: Line 790
[MASTER] 15:56:14.952 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V: root-Branch
[MASTER] 15:56:14.954 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 318: weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V:789 - ReplaceVariable newLNorm -> m_norm
[MASTER] 15:56:14.954 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 319: weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V:789 - ReplaceVariable newLNorm -> m_minWordP
[MASTER] 15:56:14.954 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 321: weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V:789 - ReplaceVariable newLNorm -> m_leplace
[MASTER] 15:56:14.954 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 322: weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V:789 - ReplaceVariable newLNorm -> m_lnorm
[MASTER] 15:56:14.954 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 323: weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V:789 - InsertUnaryOp Negation of newLNorm
[MASTER] 15:56:14.955 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V
[MASTER] 15:56:14.955 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V
[MASTER] 15:56:14.956 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setLNorm(D)V
[MASTER] 15:56:16.301 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;: Line 574
[MASTER] 15:56:16.313 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;: root-Branch
[MASTER] 15:56:16.314 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 243: weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;:574 - ReplaceConstant - The tokenizing algorithm to use on the strings. -> 
[MASTER] 15:56:16.319 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 15:56:16.320 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;
[MASTER] 15:56:16.324 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;
[MASTER] 15:56:16.325 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:tokenizerTipText()Ljava/lang/String;
[MASTER] 15:56:16.325 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V: I3 Branch 47 IFNULL L524 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStemmer(Lweka/core/stemmers/Stemmer;)V
[MASTER] 15:56:35.294 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 15:56:35.294 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 15:57:04.929 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 15:57:23.472 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 122s and 342 generations, 92087 statements, best individual has fitness: 7896.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 45%
* Total number of goals: 370
* Number of covered goals: 166
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 42%
* Total number of goals: 713
* Number of covered goals: 298
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 47%
* Total number of goals: 72
* Number of covered goals: 34
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Generated 64 tests with total length 232
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 124s and 219 generations, 85726 statements, best individual has fitness: 1608.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 90%
* Total number of goals: 338
* Number of covered goals: 303
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 84%
* Total number of goals: 194
* Number of covered goals: 162
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 26
* Number of covered goals: 26
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 476
* Number of covered goals: 429
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 55%
* Total number of goals: 112
* Number of covered goals: 62
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 194
* Number of covered goals: 159
* Generated 79 tests with total length 614
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
[MASTER] 15:59:04.679 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 15:59:04.975 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/mosa/tests/s1001/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 57%
* Compiling and checking tests
[MASTER] 16:01:18.004 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_64_1575475277987/weka/classifiers/bayes/NaiveBayesMultinomialText_64_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_64_1575475277987/weka/classifiers/bayes/NaiveBayesMultinomialText_64_tmp__ESTest_scaffolding.java]]
[MASTER] 16:01:18.004 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 16:01:18.004 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 16:01:18.006 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 16:01:18.006 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 16:01:18.006 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 16:01:18.006 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 16:01:18.006 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 16:01:18.007 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_64_1575475277987/weka/classifiers/bayes/NaiveBayesMultinomialText_64_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 16:01:17 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_64_tmp__ESTest extends NaiveBayesMultinomialText_64_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=0.4
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
29:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
30:       Integer integer0 = new Integer(121);
31:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = naiveBayesMultinomialText0.m_inputVector;
32:       linkedHashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
33:       naiveBayesMultinomialText0.m_periodicP = 121;
34:       // Undeclared exception!
35:       try { 
36:         naiveBayesMultinomialText0.pruneDictionary();
37:         fail("Expecting exception: NullPointerException");
38:       
39:       } catch(NullPointerException e) {
40:          //
41:          // no message in exception (getMessage() returned null)
42:          //
43:       }
44:   }
45: }
RegularFileObject[/tmp/EvoSuite_64_1575475277987/weka/classifiers/bayes/NaiveBayesMultinomialText_64_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 16:01:17 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_64_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_64_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.core.neighboursearch.BallTree",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
103:       "org.pentaho.packageManagement.DefaultPackageManager",
104:       "org.bounce.net.DefaultAuthenticator",
105:       "weka.estimators.IncrementalEstimator",
106:       "weka.estimators.Estimator$Builder",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.EnvironmentHandler",
109:       "weka.classifiers.functions.SGDText",
110:       "weka.core.RelationalLocator",
111:       "weka.core.Utils",
112:       "weka.core.CustomDisplayStringProvider",
113:       "weka.core.tokenizers.Tokenizer",
114:       "weka.core.NormalizableDistance",
115:       "weka.core.NoSupportForMissingValuesException",
116:       "weka.classifiers.UpdateableClassifier",
117:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
118:       "weka.core.MultiInstanceCapabilitiesHandler",
119:       "weka.core.Copyable",
120:       "weka.core.Capabilities",
121:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.AdditionalMeasureProducer",
129:       "weka.core.neighboursearch.balltrees.BallNode",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
134:       "weka.classifiers.functions.supportVector.StringKernel",
135:       "weka.attributeSelection.ASEvaluation",
136:       "weka.core.AbstractInstance",
137:       "weka.core.scripting.JythonObject",
138:       "weka.core.SelectedTag",
139:       "org.pentaho.packageManagement.DefaultPackage",
140:       "weka.core.neighboursearch.balltrees.BallSplitter",
141:       "weka.classifiers.misc.InputMappedClassifier",
142:       "weka.attributeSelection.CorrelationAttributeEval",
143:       "weka.core.Version",
144:       "weka.core.Tag",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.filters.unsupervised.attribute.Center",
147:       "weka.core.OptionHandler",
148:       "weka.core.WekaException",
149:       "weka.filters.StreamableFilter",
150:       "weka.core.Range",
151:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
152:       "weka.core.scripting.JythonSerializableObject",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.estimators.PoissonEstimator",
158:       "weka.attributeSelection.AttributeTransformer",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.classifiers.misc.SerializedClassifier",
161:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
162:       "weka.attributeSelection.PrincipalComponents",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.classifiers.Evaluation",
165:       "weka.classifiers.functions.supportVector.Kernel",
166:       "weka.core.WekaPackageManager",
167:       "weka.filters.SupervisedFilter",
168:       "weka.core.TechnicalInformationHandler",
169:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
170:       "weka.core.Option",
171:       "weka.core.neighboursearch.PerformanceStats",
172:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
173:       "weka.filters.Sourcable",
174:       "weka.core.Attribute",
175:       "weka.core.Stopwords",
176:       "weka.core.tokenizers.AlphabeticTokenizer",
177:       "weka.core.FastVector",
178:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
179:       "weka.core.UnassignedDatasetException",
180:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
181:       "weka.classifiers.meta.CVParameterSelection",
182:       "weka.classifiers.RandomizableClassifier",
183:       "weka.classifiers.SingleClassifierEnhancer",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.estimators.Estimator",
187:       "weka.core.ProtectedProperties",
188:       "weka.core.StringLocator",
189:       "weka.core.AttributeStats",
190:       "weka.core.WeightedInstancesHandler",
191:       "weka.core.neighboursearch.NearestNeighbourSearch",
192:       "weka.filters.unsupervised.attribute.Remove",
193:       "weka.core.Randomizable",
194:       "weka.classifiers.functions.SGD",
195:       "weka.core.EuclideanDistance",
196:       "weka.core.Instances",
197:       "weka.core.UnassignedClassException",
198:       "weka.classifiers.rules.ZeroR",
199:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
200:       "weka.filters.unsupervised.attribute.Standardize",
201:       "weka.core.TechnicalInformation",
202:       "weka.core.UnsupportedAttributeTypeException",
203:       "weka.classifiers.Sourcable",
204:       "weka.core.RevisionHandler",
205:       "weka.classifiers.evaluation.output.prediction.PlainText",
206:       "weka.core.neighboursearch.TreePerformanceStats",
207:       "weka.core.xml.XMLSerialization",
208:       "weka.classifiers.xml.XMLClassifier",
209:       "weka.filters.Filter",
210:       "weka.filters.supervised.attribute.Discretize"
211:     );
212:   } 
213: 
214:   private static void resetClasses() {
215:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_64_tmp__ESTest_scaffolding.class.getClassLoader()); 
216: 
217:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
218:       "weka.classifiers.AbstractClassifier",
219:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
220:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
221:       "weka.core.Capabilities$Capability",
222:       "weka.core.tokenizers.Tokenizer",
223:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
224:       "weka.core.tokenizers.WordTokenizer",
225:       "weka.core.stemmers.NullStemmer",
226:       "weka.core.Instances",
227:       "weka.core.Utils",
228:       "weka.filters.Filter",
229:       "weka.filters.supervised.attribute.Discretize",
230:       "weka.core.Range",
231:       "weka.core.AbstractInstance",
232:       "weka.core.SparseInstance",
233:       "weka.core.BinarySparseInstance",
234:       "weka.core.Capabilities",
235:       "org.pentaho.packageManagement.PackageManager",
236:       "org.pentaho.packageManagement.DefaultPackageManager",
237:       "weka.core.Version",
238:       "weka.core.Environment",
239:       "weka.core.WekaPackageManager",
240:       "weka.core.UnassignedDatasetException",
241:       "weka.classifiers.Evaluation",
242:       "weka.core.Option",
243:       "weka.core.tokenizers.AlphabeticTokenizer",
244:       "weka.core.SerializedObject",
245:       "weka.core.FindWithCapabilities",
246:       "weka.core.SingleIndex",
247:       "weka.core.ClassDiscovery",
248:       "weka.core.Attribute",
249:       "weka.core.ProtectedProperties",
250:       "weka.core.neighboursearch.NearestNeighbourSearch",
251:       "weka.core.neighboursearch.KDTree",
252:       "weka.core.NormalizableDistance",
253:       "weka.core.EuclideanDistance",
254:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
255:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
256:       "weka.classifiers.bayes.NaiveBayesMultinomial",
257:       "weka.classifiers.bayes.NaiveBayes",
258:       "weka.core.TechnicalInformation",
259:       "weka.core.TechnicalInformation$Type",
260:       "weka.core.TechnicalInformation$Field",
261:       "weka.classifiers.bayes.BayesNet",
262:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
263:       "weka.core.Tag",
264:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
265:       "weka.classifiers.bayes.net.search.local.K2",
266:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
267:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
268:       "weka.classifiers.RandomizableClassifier",
269:       "weka.classifiers.functions.SGDText",
270:       "weka.core.RevisionUtils",
271:       "weka.core.neighboursearch.BallTree",
272:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
273:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
274:       "weka.core.neighboursearch.balltrees.BallSplitter",
275:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
276:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
277:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
278:       "weka.classifiers.functions.neural.NeuralConnection",
279:       "weka.classifiers.functions.neural.NeuralNode",
280:       "weka.core.stemmers.SnowballStemmer",
281:       "weka.core.neighboursearch.balltrees.BallNode",
282:       "weka.core.DenseInstance",
283:       "weka.core.stemmers.Stemming",
284:       "weka.classifiers.CostMatrix",
285:       "weka.core.TestInstances",
286:       "weka.core.Stopwords",
287:       "weka.core.neighboursearch.LinearNNSearch",
288:       "weka.core.stemmers.LovinsStemmer",
289:       "weka.core.stemmers.IteratedLovinsStemmer",
290:       "weka.classifiers.SingleClassifierEnhancer",
291:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
292:       "weka.classifiers.meta.CostSensitiveClassifier",
293:       "weka.classifiers.rules.ZeroR",
294:       "weka.classifiers.lazy.IBk",
295:       "weka.classifiers.functions.supportVector.Kernel",
296:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
297:       "weka.classifiers.trees.LMT",
298:       "weka.classifiers.misc.SerializedClassifier",
299:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
300:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
301:       "weka.classifiers.misc.InputMappedClassifier",
302:       "weka.classifiers.trees.J48",
303:       "weka.classifiers.trees.j48.ClassifierTree",
304:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
305:       "weka.attributeSelection.ASEvaluation",
306:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
307:       "weka.attributeSelection.PrincipalComponents",
308:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
309:       "weka.classifiers.bayes.net.BIFReader",
310:       "weka.classifiers.meta.CVParameterSelection",
311:       "weka.core.FastVector",
312:       "weka.classifiers.functions.SimpleLogistic",
313:       "weka.classifiers.rules.PART",
314:       "weka.classifiers.rules.part.MakeDecList",
315:       "weka.classifiers.trees.m5.M5Base",
316:       "weka.classifiers.rules.M5Rules",
317:       "weka.classifiers.functions.LinearRegression",
318:       "weka.estimators.Estimator",
319:       "weka.estimators.NormalEstimator",
320:       "weka.core.matrix.Matrix",
321:       "weka.estimators.MahalanobisEstimator",
322:       "weka.core.UnassignedClassException",
323:       "weka.classifiers.meta.FilteredClassifier",
324:       "weka.filters.supervised.attribute.AttributeSelection",
325:       "weka.attributeSelection.AttributeSelection",
326:       "weka.attributeSelection.CfsSubsetEval",
327:       "weka.attributeSelection.ASSearch",
328:       "weka.attributeSelection.GreedyStepwise",
329:       "weka.attributeSelection.BestFirst",
330:       "weka.core.WekaException",
331:       "weka.core.UnsupportedAttributeTypeException",
332:       "weka.attributeSelection.InfoGainAttributeEval",
333:       "weka.classifiers.meta.AttributeSelectedClassifier",
334:       "weka.core.SerializationHelper",
335:       "weka.attributeSelection.GainRatioAttributeEval",
336:       "weka.classifiers.functions.SMO",
337:       "weka.classifiers.functions.supportVector.CachedKernel",
338:       "weka.classifiers.functions.supportVector.PolyKernel",
339:       "weka.classifiers.functions.supportVector.RBFKernel",
340:       "weka.filters.SimpleFilter",
341:       "weka.filters.SimpleStreamFilter",
342:       "weka.filters.MultiFilter",
343:       "weka.filters.AllFilter",
344:       "weka.classifiers.rules.DecisionTable",
345:       "weka.classifiers.MultipleClassifiersCombiner",
346:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
347:       "weka.classifiers.meta.MultiScheme",
348:       "weka.classifiers.lazy.KStar",
349:       "weka.classifiers.trees.RandomTree",
350:       "weka.classifiers.functions.SimpleLinearRegression",
351:       "weka.classifiers.meta.ClassificationViaRegression",
352:       "weka.classifiers.trees.M5P",
353:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
354:       "weka.classifiers.functions.supportVector.StringKernel",
355:       "weka.core.WekaEnumeration",
356:       "weka.core.Attribute$1",
357:       "weka.attributeSelection.CorrelationAttributeEval",
358:       "weka.classifiers.IteratedSingleClassifierEnhancer",
359:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
360:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
361:       "weka.classifiers.meta.RandomCommittee",
362:       "weka.classifiers.functions.SGD",
363:       "weka.core.neighboursearch.CoverTree",
364:       "weka.classifiers.meta.Bagging",
365:       "weka.classifiers.trees.REPTree",
366:       "weka.classifiers.functions.Logistic",
367:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
368:       "weka.core.converters.ArffLoader$ArffReader",
369:       "weka.attributeSelection.WrapperSubsetEval",
370:       "weka.classifiers.trees.DecisionStump",
371:       "weka.estimators.KernelEstimator",
372:       "weka.estimators.PoissonEstimator",
373:       "weka.core.SelectedTag",
374:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
375:       "weka.classifiers.rules.JRip",
376:       "weka.core.tokenizers.NGramTokenizer",
377:       "weka.classifiers.rules.OneR",
378:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.meta.AdaBoostM1",
380:       "weka.classifiers.functions.MultilayerPerceptron",
381:       "weka.filters.unsupervised.attribute.NominalToBinary",
382:       "weka.classifiers.functions.neural.SigmoidUnit",
383:       "weka.classifiers.functions.neural.LinearUnit",
384:       "weka.core.Javadoc",
385:       "weka.core.OptionHandlerJavadoc",
386:       "weka.classifiers.functions.supportVector.Puk",
387:       "weka.classifiers.meta.AdditiveRegression",
388:       "weka.core.Check",
389:       "weka.core.CheckGOE",
390:       "weka.attributeSelection.ReliefFAttributeEval",
391:       "weka.classifiers.functions.SMOreg",
392:       "weka.classifiers.functions.supportVector.RegOptimizer",
393:       "weka.classifiers.functions.supportVector.RegSMO",
394:       "weka.classifiers.functions.supportVector.RegSMOImproved",
395:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
396:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
397:       "weka.classifiers.meta.Stacking",
398:       "weka.classifiers.functions.GaussianProcesses",
399:       "weka.estimators.DiscreteEstimator",
400:       "weka.classifiers.lazy.LWL",
401:       "weka.core.ListOptions",
402:       "weka.classifiers.functions.VotedPerceptron",
403:       "weka.classifiers.meta.LogitBoost",
404:       "weka.classifiers.meta.Vote",
405:       "weka.classifiers.bayes.NaiveBayesUpdateable",
406:       "weka.classifiers.trees.RandomForest",
407:       "weka.attributeSelection.OneRAttributeEval",
408:       "weka.core.GlobalInfoJavadoc",
409:       "weka.core.Queue",
410:       "weka.core.AttributeLocator",
411:       "weka.core.StringLocator",
412:       "weka.core.RelationalLocator",
413:       "weka.core.ContingencyTables",
414:       "weka.core.Queue$QueueNode",
415:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
416:       "weka.classifiers.meta.RegressionByDiscretization",
417:       "weka.filters.unsupervised.attribute.Discretize",
418:       "weka.core.AttributeStats",
419:       "weka.experiment.Stats",
420:       "weka.classifiers.meta.MultiClassClassifier",
421:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
422:       "weka.core.ClassCache",
423:       "weka.core.AllJavadoc",
424:       "weka.core.neighboursearch.kdtrees.KDTreeNode"
425:     );
426:   }
427: }

[MASTER] 16:01:18.007 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
Integer integer0 = new Integer(121);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = naiveBayesMultinomialText0.m_inputVector;
linkedHashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
naiveBayesMultinomialText0.m_periodicP = 121;
naiveBayesMultinomialText0.pruneDictionary();

[MASTER] 16:01:18.104 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_69_1575475278089/weka/classifiers/bayes/NaiveBayesMultinomialText_69_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_69_1575475278089/weka/classifiers/bayes/NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding.java]]
[MASTER] 16:01:18.104 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 16:01:18.104 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 16:01:18.104 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 16:01:18.105 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 16:01:18.105 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 16:01:18.105 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 16:01:18.105 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 16:01:18.105 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_69_1575475278089/weka/classifiers/bayes/NaiveBayesMultinomialText_69_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 16:01:18 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_69_tmp__ESTest extends NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=0.4
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
28:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
29:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
30:       Integer integer0 = new Integer(121);
31:       linkedHashMap0.put(integer0, linkedHashMap1);
32:       naiveBayesMultinomialText0.m_periodicP = 121;
33:       naiveBayesMultinomialText0.pruneDictionary();
34:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
35:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
36:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
37:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
38:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
39:   }
40: }
RegularFileObject[/tmp/EvoSuite_69_1575475278089/weka/classifiers/bayes/NaiveBayesMultinomialText_69_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 16:01:18 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.core.neighboursearch.BallTree",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
103:       "org.pentaho.packageManagement.DefaultPackageManager",
104:       "org.bounce.net.DefaultAuthenticator",
105:       "weka.estimators.IncrementalEstimator",
106:       "weka.estimators.Estimator$Builder",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.EnvironmentHandler",
109:       "weka.classifiers.functions.SGDText",
110:       "weka.core.RelationalLocator",
111:       "weka.core.Utils",
112:       "weka.core.CustomDisplayStringProvider",
113:       "weka.core.tokenizers.Tokenizer",
114:       "weka.core.NormalizableDistance",
115:       "weka.core.NoSupportForMissingValuesException",
116:       "weka.classifiers.UpdateableClassifier",
117:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
118:       "weka.core.MultiInstanceCapabilitiesHandler",
119:       "weka.core.Copyable",
120:       "weka.core.Capabilities",
121:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.AdditionalMeasureProducer",
129:       "weka.core.neighboursearch.balltrees.BallNode",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
134:       "weka.classifiers.functions.supportVector.StringKernel",
135:       "weka.attributeSelection.ASEvaluation",
136:       "weka.core.AbstractInstance",
137:       "weka.core.scripting.JythonObject",
138:       "weka.core.SelectedTag",
139:       "org.pentaho.packageManagement.DefaultPackage",
140:       "weka.core.neighboursearch.balltrees.BallSplitter",
141:       "weka.classifiers.misc.InputMappedClassifier",
142:       "weka.attributeSelection.CorrelationAttributeEval",
143:       "weka.core.Version",
144:       "weka.core.Tag",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.filters.unsupervised.attribute.Center",
147:       "weka.core.OptionHandler",
148:       "weka.core.WekaException",
149:       "weka.filters.StreamableFilter",
150:       "weka.core.Range",
151:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
152:       "weka.core.scripting.JythonSerializableObject",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.estimators.PoissonEstimator",
158:       "weka.attributeSelection.AttributeTransformer",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.classifiers.misc.SerializedClassifier",
161:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
162:       "weka.attributeSelection.PrincipalComponents",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.classifiers.Evaluation",
165:       "weka.classifiers.functions.supportVector.Kernel",
166:       "weka.core.WekaPackageManager",
167:       "weka.filters.SupervisedFilter",
168:       "weka.core.TechnicalInformationHandler",
169:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
170:       "weka.core.Option",
171:       "weka.core.neighboursearch.PerformanceStats",
172:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
173:       "weka.filters.Sourcable",
174:       "weka.core.Attribute",
175:       "weka.core.Stopwords",
176:       "weka.core.tokenizers.AlphabeticTokenizer",
177:       "weka.core.FastVector",
178:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
179:       "weka.core.UnassignedDatasetException",
180:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
181:       "weka.classifiers.meta.CVParameterSelection",
182:       "weka.classifiers.RandomizableClassifier",
183:       "weka.classifiers.SingleClassifierEnhancer",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.estimators.Estimator",
187:       "weka.core.ProtectedProperties",
188:       "weka.core.StringLocator",
189:       "weka.core.AttributeStats",
190:       "weka.core.WeightedInstancesHandler",
191:       "weka.core.neighboursearch.NearestNeighbourSearch",
192:       "weka.filters.unsupervised.attribute.Remove",
193:       "weka.core.Randomizable",
194:       "weka.classifiers.functions.SGD",
195:       "weka.core.EuclideanDistance",
196:       "weka.core.Instances",
197:       "weka.core.UnassignedClassException",
198:       "weka.classifiers.rules.ZeroR",
199:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
200:       "weka.filters.unsupervised.attribute.Standardize",
201:       "weka.core.TechnicalInformation",
202:       "weka.core.UnsupportedAttributeTypeException",
203:       "weka.classifiers.Sourcable",
204:       "weka.core.RevisionHandler",
205:       "weka.classifiers.evaluation.output.prediction.PlainText",
206:       "weka.core.neighboursearch.TreePerformanceStats",
207:       "weka.core.xml.XMLSerialization",
208:       "weka.classifiers.xml.XMLClassifier",
209:       "weka.filters.Filter",
210:       "weka.filters.supervised.attribute.Discretize"
211:     );
212:   } 
213: 
214:   private static void resetClasses() {
215:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding.class.getClassLoader()); 
216: 
217:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
218:       "weka.classifiers.AbstractClassifier",
219:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
220:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
221:       "weka.core.Capabilities$Capability",
222:       "weka.core.tokenizers.Tokenizer",
223:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
224:       "weka.core.tokenizers.WordTokenizer",
225:       "weka.core.stemmers.NullStemmer",
226:       "weka.core.Instances",
227:       "weka.core.Utils",
228:       "weka.filters.Filter",
229:       "weka.filters.supervised.attribute.Discretize",
230:       "weka.core.Range",
231:       "weka.core.AbstractInstance",
232:       "weka.core.SparseInstance",
233:       "weka.core.BinarySparseInstance",
234:       "weka.core.Capabilities",
235:       "org.pentaho.packageManagement.PackageManager",
236:       "org.pentaho.packageManagement.DefaultPackageManager",
237:       "weka.core.Version",
238:       "weka.core.Environment",
239:       "weka.core.WekaPackageManager",
240:       "weka.core.UnassignedDatasetException",
241:       "weka.classifiers.Evaluation",
242:       "weka.core.Option",
243:       "weka.core.tokenizers.AlphabeticTokenizer",
244:       "weka.core.SerializedObject",
245:       "weka.core.FindWithCapabilities",
246:       "weka.core.SingleIndex",
247:       "weka.core.ClassDiscovery",
248:       "weka.core.Attribute",
249:       "weka.core.ProtectedProperties",
250:       "weka.core.neighboursearch.NearestNeighbourSearch",
251:       "weka.core.neighboursearch.KDTree",
252:       "weka.core.NormalizableDistance",
253:       "weka.core.EuclideanDistance",
254:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
255:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
256:       "weka.classifiers.bayes.NaiveBayesMultinomial",
257:       "weka.classifiers.bayes.NaiveBayes",
258:       "weka.core.TechnicalInformation",
259:       "weka.core.TechnicalInformation$Type",
260:       "weka.core.TechnicalInformation$Field",
261:       "weka.classifiers.bayes.BayesNet",
262:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
263:       "weka.core.Tag",
264:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
265:       "weka.classifiers.bayes.net.search.local.K2",
266:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
267:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
268:       "weka.classifiers.RandomizableClassifier",
269:       "weka.classifiers.functions.SGDText",
270:       "weka.core.RevisionUtils",
271:       "weka.core.neighboursearch.BallTree",
272:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
273:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
274:       "weka.core.neighboursearch.balltrees.BallSplitter",
275:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
276:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
277:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
278:       "weka.classifiers.functions.neural.NeuralConnection",
279:       "weka.classifiers.functions.neural.NeuralNode",
280:       "weka.core.stemmers.SnowballStemmer",
281:       "weka.core.neighboursearch.balltrees.BallNode",
282:       "weka.core.DenseInstance",
283:       "weka.core.stemmers.Stemming",
284:       "weka.classifiers.CostMatrix",
285:       "weka.core.TestInstances",
286:       "weka.core.Stopwords",
287:       "weka.core.neighboursearch.LinearNNSearch",
288:       "weka.core.stemmers.LovinsStemmer",
289:       "weka.core.stemmers.IteratedLovinsStemmer",
290:       "weka.classifiers.SingleClassifierEnhancer",
291:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
292:       "weka.classifiers.meta.CostSensitiveClassifier",
293:       "weka.classifiers.rules.ZeroR",
294:       "weka.classifiers.lazy.IBk",
295:       "weka.classifiers.functions.supportVector.Kernel",
296:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
297:       "weka.classifiers.trees.LMT",
298:       "weka.classifiers.misc.SerializedClassifier",
299:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
300:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
301:       "weka.classifiers.misc.InputMappedClassifier",
302:       "weka.classifiers.trees.J48",
303:       "weka.classifiers.trees.j48.ClassifierTree",
304:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
305:       "weka.attributeSelection.ASEvaluation",
306:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
307:       "weka.attributeSelection.PrincipalComponents",
308:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
309:       "weka.classifiers.bayes.net.BIFReader",
310:       "weka.classifiers.meta.CVParameterSelection",
311:       "weka.core.FastVector",
312:       "weka.classifiers.functions.SimpleLogistic",
313:       "weka.classifiers.rules.PART",
314:       "weka.classifiers.rules.part.MakeDecList",
315:       "weka.classifiers.trees.m5.M5Base",
316:       "weka.classifiers.rules.M5Rules",
317:       "weka.classifiers.functions.LinearRegression",
318:       "weka.estimators.Estimator",
319:       "weka.estimators.NormalEstimator",
320:       "weka.core.matrix.Matrix",
321:       "weka.estimators.MahalanobisEstimator",
322:       "weka.core.UnassignedClassException",
323:       "weka.classifiers.meta.FilteredClassifier",
324:       "weka.filters.supervised.attribute.AttributeSelection",
325:       "weka.attributeSelection.AttributeSelection",
326:       "weka.attributeSelection.CfsSubsetEval",
327:       "weka.attributeSelection.ASSearch",
328:       "weka.attributeSelection.GreedyStepwise",
329:       "weka.attributeSelection.BestFirst",
330:       "weka.core.WekaException",
331:       "weka.core.UnsupportedAttributeTypeException",
332:       "weka.attributeSelection.InfoGainAttributeEval",
333:       "weka.classifiers.meta.AttributeSelectedClassifier",
334:       "weka.core.SerializationHelper",
335:       "weka.attributeSelection.GainRatioAttributeEval",
336:       "weka.classifiers.functions.SMO",
337:       "weka.classifiers.functions.supportVector.CachedKernel",
338:       "weka.classifiers.functions.supportVector.PolyKernel",
339:       "weka.classifiers.functions.supportVector.RBFKernel",
340:       "weka.filters.SimpleFilter",
341:       "weka.filters.SimpleStreamFilter",
342:       "weka.filters.MultiFilter",
343:       "weka.filters.AllFilter",
344:       "weka.classifiers.rules.DecisionTable",
345:       "weka.classifiers.MultipleClassifiersCombiner",
346:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
347:       "weka.classifiers.meta.MultiScheme",
348:       "weka.classifiers.lazy.KStar",
349:       "weka.classifiers.trees.RandomTree",
350:       "weka.classifiers.functions.SimpleLinearRegression",
351:       "weka.classifiers.meta.ClassificationViaRegression",
352:       "weka.classifiers.trees.M5P",
353:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
354:       "weka.classifiers.functions.supportVector.StringKernel",
355:       "weka.core.WekaEnumeration",
356:       "weka.core.Attribute$1",
357:       "weka.attributeSelection.CorrelationAttributeEval",
358:       "weka.classifiers.IteratedSingleClassifierEnhancer",
359:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
360:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
361:       "weka.classifiers.meta.RandomCommittee",
362:       "weka.classifiers.functions.SGD",
363:       "weka.core.neighboursearch.CoverTree",
364:       "weka.classifiers.meta.Bagging",
365:       "weka.classifiers.trees.REPTree",
366:       "weka.classifiers.functions.Logistic",
367:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
368:       "weka.core.converters.ArffLoader$ArffReader",
369:       "weka.attributeSelection.WrapperSubsetEval",
370:       "weka.classifiers.trees.DecisionStump",
371:       "weka.estimators.KernelEstimator",
372:       "weka.estimators.PoissonEstimator",
373:       "weka.core.SelectedTag",
374:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
375:       "weka.classifiers.rules.JRip",
376:       "weka.core.tokenizers.NGramTokenizer",
377:       "weka.classifiers.rules.OneR",
378:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.meta.AdaBoostM1",
380:       "weka.classifiers.functions.MultilayerPerceptron",
381:       "weka.filters.unsupervised.attribute.NominalToBinary",
382:       "weka.classifiers.functions.neural.SigmoidUnit",
383:       "weka.classifiers.functions.neural.LinearUnit",
384:       "weka.core.Javadoc",
385:       "weka.core.OptionHandlerJavadoc",
386:       "weka.classifiers.functions.supportVector.Puk",
387:       "weka.classifiers.meta.AdditiveRegression",
388:       "weka.core.Check",
389:       "weka.core.CheckGOE",
390:       "weka.attributeSelection.ReliefFAttributeEval",
391:       "weka.classifiers.functions.SMOreg",
392:       "weka.classifiers.functions.supportVector.RegOptimizer",
393:       "weka.classifiers.functions.supportVector.RegSMO",
394:       "weka.classifiers.functions.supportVector.RegSMOImproved",
395:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
396:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
397:       "weka.classifiers.meta.Stacking",
398:       "weka.classifiers.functions.GaussianProcesses",
399:       "weka.estimators.DiscreteEstimator",
400:       "weka.classifiers.lazy.LWL",
401:       "weka.core.ListOptions",
402:       "weka.classifiers.functions.VotedPerceptron",
403:       "weka.classifiers.meta.LogitBoost",
404:       "weka.classifiers.meta.Vote",
405:       "weka.classifiers.bayes.NaiveBayesUpdateable",
406:       "weka.classifiers.trees.RandomForest",
407:       "weka.attributeSelection.OneRAttributeEval",
408:       "weka.core.GlobalInfoJavadoc",
409:       "weka.core.Queue",
410:       "weka.core.AttributeLocator",
411:       "weka.core.StringLocator",
412:       "weka.core.RelationalLocator",
413:       "weka.core.ContingencyTables",
414:       "weka.core.Queue$QueueNode",
415:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
416:       "weka.classifiers.meta.RegressionByDiscretization",
417:       "weka.filters.unsupervised.attribute.Discretize",
418:       "weka.core.AttributeStats",
419:       "weka.experiment.Stats",
420:       "weka.classifiers.meta.MultiClassClassifier",
421:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
422:       "weka.core.ClassCache",
423:       "weka.core.AllJavadoc",
424:       "weka.core.neighboursearch.kdtrees.KDTreeNode"
425:     );
426:   }
427: }

[MASTER] 16:01:18.105 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
Integer integer0 = new Integer(121);
linkedHashMap0.put(integer0, linkedHashMap1);
naiveBayesMultinomialText0.m_periodicP = 121;
naiveBayesMultinomialText0.pruneDictionary();
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());


[MASTER] 16:01:20.152 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 16:01:20.237 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/mosa/tests/s1001/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10600
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10602
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1367
* Using seed 1001
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 16:02:22.268 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 16:02:22.280 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 16:02:22.283 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 16:02:22.295 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2499
* Using seed 1001
* Starting evolution
[MASTER] 16:02:23.657 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 123s and 157 generations, 87314 statements, best individual has fitness: 2704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 217
* Number of covered goals: 191
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 287
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 240
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 287
* Generated 73 tests with total length 239
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 122s and 98 generations, 65156 statements, best individual has fitness: 16712.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 18 tests with total length 90
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/mosa/tests/s1001/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 76%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/mosa/tests/s1001/107_weka/evosuite-tests
* Done!

* Computation finished
