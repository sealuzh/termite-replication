* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14217
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 18:17:21.054 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:17:21.060 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:17:21.060 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 18:17:21.783 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 18:17:22.274 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 18:17:22.275 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 18:17:24.650 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 18:17:24.671 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 18:17:24.672 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 18:17:24.672 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 18:17:24.672 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 18:17:24.672 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 18:17:24.672 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 18:17:24.674 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 18:17:24.674 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 18:17:24.713 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 18:17:24.723 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 3904
* Using seed 1005
* Starting evolution
[MASTER] 18:17:28.520 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 18:19:03.651 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 126s and 68 generations, 31769 statements, best individual has fitness: 14872.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 59%
* Total number of goals: 1378
* Number of covered goals: 817
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 45%
* Total number of goals: 809
* Number of covered goals: 363
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 65
* Number of covered goals: 65
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 64%
* Total number of goals: 424
* Number of covered goals: 271
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 21%
* Total number of goals: 278
* Number of covered goals: 57
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 103
* Number of covered goals: 102
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 94%
* Total number of goals: 103
* Number of covered goals: 97
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 44%
* Total number of goals: 809
* Number of covered goals: 352
* Generated 139 tests with total length 1382
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 10%
* Compiling and checking tests
[MASTER] 18:24:29.876 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_122_1575483869856/weka/classifiers/Evaluation_122_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_122_1575483869856/weka/classifiers/Evaluation_122_tmp__ESTest_scaffolding.java]]
[MASTER] 18:24:29.876 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:24:29.876 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:24:29.879 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   variable double1
  location: class weka.classifiers.Evaluation_122_tmp__ESTest: 41
[MASTER] 18:24:29.880 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_122_1575483869856/weka/classifiers/Evaluation_122_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 18:24:29 GMT 2019
4:  */
5: 
6: package weka.classifiers;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import org.evosuite.runtime.EvoRunner;
11: import org.evosuite.runtime.EvoRunnerParameters;
12: import org.junit.runner.RunWith;
13: import weka.classifiers.Evaluation;
14: import weka.classifiers.meta.AdditiveRegression;
15: import weka.classifiers.meta.RegressionByDiscretization;
16: import weka.core.Capabilities;
17: import weka.core.Instances;
18: import weka.core.TestInstances;
19: import weka.core.converters.TextDirectoryLoader;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class Evaluation_122_tmp__ESTest extends Evaluation_122_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=0.4948453608247423
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       TextDirectoryLoader textDirectoryLoader0 = new TextDirectoryLoader();
31:       AdditiveRegression additiveRegression0 = new AdditiveRegression();
32:       Capabilities capabilities0 = additiveRegression0.getCapabilities();
33:       TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
34:       Instances instances0 = testInstances0.generate();
35:       Evaluation evaluation0 = new Evaluation(instances0);
36:       Evaluation evaluation1 = new Evaluation(instances0);
37:       RegressionByDiscretization regressionByDiscretization0 = new RegressionByDiscretization();
38:       evaluation1.areaUnderROC(2);
39:       evaluation1.setNumericPriorsFromBuffer();
40:       double double0 = evaluation1.m_SumPredicted;
41:       assertNotEquals(double0, double1, 0.01);
42:   }
43: }
RegularFileObject[/tmp/EvoSuite_122_1575483869856/weka/classifiers/Evaluation_122_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 18:24:29 GMT 2019
5:  */
6: 
7: package weka.classifiers;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class Evaluation_122_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.Evaluation"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Evaluation_122_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.converters.TextDirectoryLoader",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "weka.core.xml.XMLBasicSerialization",
93:       "weka.filters.UnsupervisedFilter",
94:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
95:       "weka.core.DenseInstance",
96:       "weka.classifiers.trees.J48",
97:       "weka.classifiers.rules.DecisionTable$DummySubsetEvaluator",
98:       "weka.classifiers.functions.SimpleLinearRegression",
99:       "org.pentaho.packageManagement.DefaultPackageManager",
100:       "weka.estimators.UnivariateIntervalEstimator",
101:       "org.bounce.net.DefaultAuthenticator",
102:       "weka.estimators.IncrementalEstimator",
103:       "weka.core.CustomDisplayStringProvider",
104:       "weka.core.NormalizableDistance",
105:       "weka.core.TechnicalInformation$Type",
106:       "weka.core.Copyable",
107:       "weka.core.BinarySparseInstance",
108:       "weka.filters.supervised.attribute.NominalToBinary",
109:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
110:       "weka.core.SerializedObject",
111:       "weka.clusterers.UpdateableClusterer",
112:       "weka.core.AdditionalMeasureProducer",
113:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
114:       "weka.core.Optimization",
115:       "weka.classifiers.lazy.kstar.KStarConstants",
116:       "weka.classifiers.meta.FilteredClassifier",
117:       "weka.classifiers.misc.InputMappedClassifier",
118:       "weka.core.Version",
119:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
120:       "weka.classifiers.evaluation.NominalPrediction",
121:       "weka.classifiers.AbstractClassifier",
122:       "weka.core.converters.ArffLoader",
123:       "weka.classifiers.meta.Stacking",
124:       "weka.attributeSelection.GainRatioAttributeEval",
125:       "weka.core.WekaException",
126:       "weka.classifiers.trees.RandomForest",
127:       "weka.filters.StreamableFilter",
128:       "weka.core.Attribute$1",
129:       "weka.core.PartitionGenerator",
130:       "weka.core.SparseInstance",
131:       "weka.core.tokenizers.WordTokenizer",
132:       "weka.classifiers.trees.j48.ClassifierTree",
133:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
134:       "weka.classifiers.trees.j48.PruneableClassifierTree",
135:       "weka.classifiers.Evaluation",
136:       "weka.classifiers.functions.supportVector.Kernel",
137:       "weka.classifiers.evaluation.ThresholdCurve",
138:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
139:       "weka.core.converters.URLSourcedLoader",
140:       "weka.core.converters.FileSourcedConverter",
141:       "weka.core.neighboursearch.LinearNNSearch",
142:       "weka.core.neighboursearch.PerformanceStats",
143:       "weka.estimators.UnivariateKernelEstimator",
144:       "weka.core.UnassignedDatasetException",
145:       "weka.classifiers.RandomizableClassifier",
146:       "weka.core.Queue$QueueNode",
147:       "weka.core.RevisionUtils",
148:       "weka.core.converters.Loader",
149:       "weka.estimators.Estimator",
150:       "weka.core.ProtectedProperties",
151:       "weka.core.StringLocator",
152:       "weka.core.AttributeStats",
153:       "weka.classifiers.trees.DecisionStump",
154:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
155:       "weka.estimators.UnivariateQuantileEstimator",
156:       "weka.filters.unsupervised.attribute.Remove",
157:       "weka.core.Randomizable",
158:       "weka.core.EuclideanDistance",
159:       "weka.core.Instances",
160:       "weka.core.converters.AbstractFileLoader",
161:       "weka.classifiers.bayes.NaiveBayesMultinomial",
162:       "weka.core.converters.ConverterUtils$DataSink",
163:       "weka.classifiers.bayes.net.BIFReader",
164:       "weka.classifiers.bayes.net.ParentSet",
165:       "weka.core.TechnicalInformation",
166:       "weka.core.UnsupportedAttributeTypeException",
167:       "weka.classifiers.functions.Logistic$OptEngCG",
168:       "weka.core.RevisionHandler",
169:       "weka.experiment.Stats",
170:       "weka.core.converters.ConverterUtils$DataSource",
171:       "weka.classifiers.xml.XMLClassifier",
172:       "weka.filters.Filter",
173:       "weka.filters.supervised.attribute.Discretize",
174:       "weka.core.TestInstances",
175:       "weka.core.converters.ConverterUtils",
176:       "weka.core.DistanceFunction",
177:       "weka.attributeSelection.AttributeEvaluator",
178:       "org.pentaho.packageManagement.Package",
179:       "weka.classifiers.rules.part.C45PruneableDecList",
180:       "weka.attributeSelection.SubsetEvaluator",
181:       "weka.classifiers.CostMatrix",
182:       "weka.classifiers.bayes.net.search.local.K2",
183:       "weka.core.logging.Logger$Level",
184:       "weka.classifiers.rules.PART",
185:       "weka.core.ConjugateGradientOptimization",
186:       "weka.core.stemmers.Stemmer",
187:       "weka.core.converters.IncrementalConverter",
188:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
189:       "weka.classifiers.meta.LogitBoost",
190:       "weka.classifiers.bayes.NaiveBayes",
191:       "weka.core.EnvironmentHandler",
192:       "weka.classifiers.trees.j48.C45ModelSelection",
193:       "weka.classifiers.functions.Logistic",
194:       "weka.core.RelationalLocator",
195:       "weka.core.Utils",
196:       "weka.core.tokenizers.Tokenizer",
197:       "weka.core.NoSupportForMissingValuesException",
198:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
199:       "weka.classifiers.UpdateableClassifier",
200:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
201:       "weka.core.MultiInstanceCapabilitiesHandler",
202:       "weka.core.Capabilities",
203:       "weka.core.AttributeLocator",
204:       "weka.core.converters.SVMLightLoader",
205:       "weka.classifiers.functions.supportVector.CachedKernel",
206:       "weka.classifiers.meta.RegressionByDiscretization",
207:       "weka.core.Summarizable",
208:       "weka.attributeSelection.BestFirst",
209:       "weka.classifiers.trees.j48.ModelSelection",
210:       "org.pentaho.packageManagement.PackageManager$1",
211:       "weka.core.Drawable",
212:       "weka.classifiers.ConditionalDensityEstimator",
213:       "weka.core.CapabilitiesHandler",
214:       "weka.classifiers.rules.part.ClassifierDecList",
215:       "weka.attributeSelection.ASEvaluation",
216:       "weka.core.AbstractInstance",
217:       "weka.core.scripting.JythonObject",
218:       "weka.core.SelectedTag",
219:       "org.pentaho.packageManagement.DefaultPackage",
220:       "weka.estimators.DiscreteEstimator",
221:       "weka.classifiers.bayes.BayesNet",
222:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
223:       "weka.classifiers.meta.AdditiveRegression",
224:       "weka.core.Queue",
225:       "weka.classifiers.evaluation.Prediction",
226:       "weka.core.converters.AbstractLoader",
227:       "weka.filters.unsupervised.attribute.RemoveUseless",
228:       "weka.core.converters.BatchConverter",
229:       "weka.core.converters.ArffLoader$ArffReader",
230:       "weka.core.Tag",
231:       "weka.classifiers.IteratedSingleClassifierEnhancer",
232:       "weka.classifiers.trees.j48.BinC45ModelSelection",
233:       "weka.estimators.UnivariateDensityEstimator",
234:       "weka.core.OptionHandler",
235:       "weka.filters.supervised.attribute.AttributeSelection",
236:       "weka.core.Range",
237:       "weka.core.scripting.JythonSerializableObject",
238:       "weka.classifiers.Classifier",
239:       "weka.core.Capabilities$Capability",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "weka.core.WekaEnumeration",
242:       "weka.attributeSelection.ASSearch",
243:       "weka.core.WekaPackageManager",
244:       "weka.filters.SupervisedFilter",
245:       "weka.core.TechnicalInformationHandler",
246:       "weka.classifiers.lazy.LWL",
247:       "weka.attributeSelection.StartSetHandler",
248:       "weka.classifiers.meta.CostSensitiveClassifier",
249:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
250:       "weka.core.Option",
251:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
252:       "weka.filters.Sourcable",
253:       "weka.core.Attribute",
254:       "weka.classifiers.rules.DecisionTable",
255:       "weka.classifiers.meta.MultiScheme",
256:       "weka.core.FastVector",
257:       "weka.classifiers.MultipleClassifiersCombiner",
258:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
259:       "weka.core.BatchPredictor",
260:       "weka.classifiers.SingleClassifierEnhancer",
261:       "weka.core.Instance",
262:       "weka.classifiers.rules.part.MakeDecList",
263:       "weka.classifiers.functions.supportVector.PolyKernel",
264:       "weka.classifiers.lazy.KStar",
265:       "weka.classifiers.IntervalEstimator",
266:       "weka.classifiers.bayes.net.ADNode",
267:       "weka.core.Matchable",
268:       "weka.core.WeightedInstancesHandler",
269:       "weka.core.neighboursearch.NearestNeighbourSearch",
270:       "weka.classifiers.functions.GaussianProcesses",
271:       "weka.core.TechnicalInformation$Field",
272:       "weka.filters.unsupervised.attribute.Discretize",
273:       "weka.classifiers.functions.SGD",
274:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
275:       "weka.classifiers.rules.part.PruneableDecList",
276:       "weka.filters.unsupervised.attribute.Normalize",
277:       "weka.core.UnassignedClassException",
278:       "weka.classifiers.rules.ZeroR",
279:       "weka.filters.unsupervised.attribute.Standardize",
280:       "weka.classifiers.Sourcable",
281:       "weka.classifiers.functions.Logistic$OptEng",
282:       "weka.classifiers.evaluation.output.prediction.PlainText",
283:       "weka.core.xml.XMLSerialization"
284:     );
285:   } 
286: 
287:   private static void resetClasses() {
288:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Evaluation_122_tmp__ESTest_scaffolding.class.getClassLoader()); 
289: 
290:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
291:       "weka.classifiers.Evaluation",
292:       "weka.core.pmml.PMMLFactory$ModelType",
293:       "weka.core.pmml.PMMLFactory$1",
294:       "weka.core.xml.KOML",
295:       "weka.core.Version",
296:       "weka.core.Utils",
297:       "weka.core.converters.AbstractLoader",
298:       "weka.core.converters.AbstractFileLoader",
299:       "weka.core.converters.JSONLoader",
300:       "weka.core.converters.ConverterUtils$DataSource",
301:       "weka.core.AbstractInstance",
302:       "weka.core.SparseInstance",
303:       "weka.core.BinarySparseInstance",
304:       "weka.clusterers.AbstractClusterer",
305:       "weka.clusterers.RandomizableClusterer",
306:       "weka.clusterers.SimpleKMeans",
307:       "weka.core.NormalizableDistance",
308:       "weka.core.EuclideanDistance",
309:       "weka.core.Range",
310:       "weka.classifiers.CostMatrix",
311:       "weka.core.converters.SerializedInstancesLoader",
312:       "weka.classifiers.AbstractClassifier",
313:       "weka.core.Tag",
314:       "weka.classifiers.lazy.IBk",
315:       "weka.core.neighboursearch.NearestNeighbourSearch",
316:       "weka.core.neighboursearch.LinearNNSearch",
317:       "weka.core.converters.C45Loader",
318:       "weka.core.converters.CSVLoader",
319:       "weka.core.converters.DatabaseLoader",
320:       "weka.core.Environment",
321:       "weka.experiment.DatabaseUtils",
322:       "weka.core.converters.DatabaseConnection",
323:       "org.pentaho.packageManagement.PackageManager",
324:       "org.pentaho.packageManagement.DefaultPackageManager",
325:       "weka.core.WekaPackageManager",
326:       "weka.experiment.InstanceQuery",
327:       "weka.core.Option",
328:       "weka.core.Instances",
329:       "weka.core.xml.XMLDocument",
330:       "weka.core.xml.XMLInstances",
331:       "weka.core.converters.XRFFLoader",
332:       "weka.core.converters.MatlabLoader",
333:       "weka.classifiers.SingleClassifierEnhancer",
334:       "weka.classifiers.misc.InputMappedClassifier",
335:       "weka.classifiers.rules.ZeroR",
336:       "weka.core.converters.LibSVMLoader",
337:       "weka.classifiers.bayes.BayesNet",
338:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
339:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
340:       "weka.classifiers.bayes.net.search.local.K2",
341:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
342:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
343:       "weka.core.converters.ArffLoader",
344:       "weka.gui.GenericPropertiesCreator",
345:       "weka.gui.GenericObjectEditor",
346:       "weka.core.converters.ConverterUtils",
347:       "weka.core.converters.TextDirectoryLoader",
348:       "weka.core.Attribute",
349:       "weka.core.ProtectedProperties",
350:       "weka.core.WekaEnumeration",
351:       "weka.core.Attribute$1",
352:       "weka.classifiers.lazy.LWL",
353:       "weka.classifiers.trees.DecisionStump",
354:       "weka.core.TestInstances",
355:       "weka.core.DenseInstance",
356:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
357:       "weka.classifiers.meta.CostSensitiveClassifier",
358:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
359:       "weka.classifiers.evaluation.output.prediction.Null",
360:       "weka.core.RevisionUtils",
361:       "weka.core.converters.SVMLightLoader",
362:       "weka.attributeSelection.ASEvaluation",
363:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
364:       "weka.attributeSelection.PrincipalComponents",
365:       "weka.core.neighboursearch.CoverTree",
366:       "weka.classifiers.meta.RegressionByDiscretization",
367:       "weka.filters.Filter",
368:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
369:       "weka.filters.unsupervised.attribute.Discretize",
370:       "weka.classifiers.trees.J48",
371:       "weka.core.converters.ArffLoader$ArffReader",
372:       "weka.core.AttributeStats",
373:       "weka.core.Capabilities",
374:       "weka.core.Capabilities$Capability",
375:       "weka.classifiers.MultipleClassifiersCombiner",
376:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
377:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
378:       "weka.classifiers.meta.Stacking",
379:       "weka.classifiers.rules.PART",
380:       "weka.classifiers.rules.part.MakeDecList",
381:       "weka.filters.AllFilter",
382:       "weka.core.SerializedObject",
383:       "weka.core.matrix.Matrix",
384:       "weka.classifiers.functions.Logistic",
385:       "weka.core.UnassignedDatasetException",
386:       "weka.classifiers.bayes.NaiveBayes",
387:       "weka.classifiers.functions.GaussianProcesses",
388:       "weka.classifiers.functions.supportVector.Kernel",
389:       "weka.classifiers.functions.supportVector.CachedKernel",
390:       "weka.classifiers.functions.supportVector.PolyKernel",
391:       "weka.core.SelectedTag",
392:       "weka.classifiers.functions.SMO",
393:       "weka.classifiers.trees.m5.M5Base",
394:       "weka.classifiers.rules.M5Rules",
395:       "weka.classifiers.evaluation.output.prediction.PlainText",
396:       "weka.classifiers.trees.RandomForest",
397:       "weka.core.TechnicalInformation",
398:       "weka.core.TechnicalInformation$Type",
399:       "weka.core.TechnicalInformation$Field",
400:       "weka.core.neighboursearch.balltrees.BallNode",
401:       "weka.classifiers.trees.REPTree",
402:       "weka.classifiers.bayes.NaiveBayesUpdateable",
403:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
404:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
405:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
406:       "weka.classifiers.RandomizableClassifier",
407:       "weka.classifiers.functions.SGD",
408:       "weka.filters.SimpleFilter",
409:       "weka.filters.SimpleStreamFilter",
410:       "weka.filters.MultiFilter",
411:       "weka.classifiers.IteratedSingleClassifierEnhancer",
412:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
413:       "weka.classifiers.meta.AdaBoostM1",
414:       "weka.classifiers.meta.LogitBoost",
415:       "weka.core.UnassignedClassException",
416:       "weka.classifiers.evaluation.output.prediction.CSV",
417:       "weka.classifiers.rules.DecisionTable",
418:       "weka.attributeSelection.ASSearch",
419:       "weka.attributeSelection.BestFirst",
420:       "weka.classifiers.meta.MultiClassClassifier",
421:       "weka.experiment.Stats",
422:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
423:       "weka.classifiers.evaluation.output.prediction.HTML",
424:       "weka.core.tokenizers.Tokenizer",
425:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
426:       "weka.core.tokenizers.WordTokenizer",
427:       "weka.classifiers.functions.SimpleLogistic",
428:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
429:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
430:       "weka.classifiers.meta.RandomCommittee",
431:       "weka.classifiers.trees.RandomTree",
432:       "weka.attributeSelection.WrapperSubsetEval",
433:       "weka.classifiers.meta.FilteredClassifier",
434:       "weka.filters.supervised.attribute.AttributeSelection",
435:       "weka.attributeSelection.AttributeSelection",
436:       "weka.attributeSelection.CfsSubsetEval",
437:       "weka.attributeSelection.GreedyStepwise",
438:       "weka.filters.supervised.attribute.Discretize",
439:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
440:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
441:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
442:       "weka.core.neighboursearch.balltrees.BallSplitter",
443:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
444:       "weka.classifiers.bayes.NaiveBayesMultinomial",
445:       "weka.classifiers.functions.SMOreg",
446:       "weka.classifiers.functions.supportVector.RegOptimizer",
447:       "weka.classifiers.functions.supportVector.RegSMO",
448:       "weka.classifiers.functions.supportVector.RegSMOImproved",
449:       "weka.classifiers.rules.JRip",
450:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
451:       "weka.classifiers.meta.AdditiveRegression",
452:       "weka.classifiers.functions.LinearRegression",
453:       "weka.classifiers.trees.j48.ClassifierTree",
454:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
455:       "weka.estimators.UnivariateKernelEstimator",
456:       "weka.classifiers.evaluation.output.prediction.XML",
457:       "weka.core.neighboursearch.BallTree",
458:       "weka.classifiers.trees.M5P",
459:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
460:       "weka.classifiers.meta.Vote",
461:       "weka.attributeSelection.InfoGainAttributeEval",
462:       "weka.classifiers.meta.MultiScheme",
463:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
464:       "weka.attributeSelection.ReliefFAttributeEval",
465:       "weka.core.neighboursearch.KDTree",
466:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
467:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
468:       "weka.classifiers.meta.AttributeSelectedClassifier",
469:       "weka.classifiers.meta.CVParameterSelection",
470:       "weka.core.FastVector",
471:       "weka.classifiers.misc.InputMappedClassifierBeanInfo",
472:       "weka.estimators.Estimator",
473:       "weka.estimators.DiscreteEstimator",
474:       "weka.core.MinkowskiDistance",
475:       "weka.classifiers.misc.SerializedClassifier",
476:       "weka.classifiers.functions.MultilayerPerceptron",
477:       "weka.filters.unsupervised.attribute.NominalToBinary",
478:       "weka.classifiers.functions.neural.SigmoidUnit",
479:       "weka.classifiers.functions.neural.LinearUnit",
480:       "weka.clusterers.Cobweb",
481:       "weka.classifiers.functions.SGDText",
482:       "weka.core.stemmers.NullStemmer",
483:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
484:       "weka.attributeSelection.OneRAttributeEval",
485:       "weka.attributeSelection.GainRatioAttributeEval",
486:       "weka.classifiers.trees.LMT",
487:       "weka.estimators.KernelEstimator",
488:       "weka.core.WekaException",
489:       "weka.core.UnsupportedAttributeTypeException",
490:       "weka.clusterers.HierarchicalClusterer",
491:       "weka.classifiers.functions.supportVector.RBFKernel",
492:       "weka.classifiers.meta.Bagging",
493:       "weka.core.tokenizers.AlphabeticTokenizer",
494:       "weka.estimators.UnivariateEqualFrequencyHistogramEstimator",
495:       "weka.core.FindWithCapabilities",
496:       "weka.core.SingleIndex",
497:       "weka.core.ClassDiscovery",
498:       "weka.clusterers.ClusterEvaluation",
499:       "weka.classifiers.functions.SimpleLinearRegression",
500:       "weka.classifiers.evaluation.NominalPrediction",
501:       "weka.classifiers.evaluation.Prediction",
502:       "weka.classifiers.evaluation.ThresholdCurve",
503:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
504:       "weka.core.Queue",
505:       "weka.core.AttributeLocator",
506:       "weka.core.StringLocator",
507:       "weka.core.RelationalLocator",
508:       "weka.core.Queue$QueueNode",
509:       "weka.filters.supervised.attribute.NominalToBinary",
510:       "weka.filters.unsupervised.attribute.Normalize",
511:       "weka.classifiers.lazy.KStar"
512:     );
513:   }
514: }

[MASTER] 18:24:29.880 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
TextDirectoryLoader textDirectoryLoader0 = new TextDirectoryLoader();
AdditiveRegression additiveRegression0 = new AdditiveRegression();
Capabilities capabilities0 = additiveRegression0.getCapabilities();
TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
Instances instances0 = testInstances0.generate();
Evaluation evaluation0 = new Evaluation(instances0);
Evaluation evaluation1 = new Evaluation(instances0);
RegressionByDiscretization regressionByDiscretization0 = new RegressionByDiscretization();
evaluation1.areaUnderROC(2);
evaluation1.setNumericPriorsFromBuffer();
double double0 = evaluation1.m_SumPredicted;
assertNotEquals(double0, double1, 0.01);


[MASTER] 18:24:30.767 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 18:24:31.031 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 18:24:31.031 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 18:24:32.103 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/mosa/tests/s1005/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14215
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14209
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1367
* Using seed 1005
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 18:32:54.906 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:32:54.911 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:32:54.915 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 18:32:54.939 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2699
* Using seed 1005
* Starting evolution
* Search finished after 124s and 129 generations, 77447 statements, best individual has fitness: 2680.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 217
* Number of covered goals: 191
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 68%
* Total number of goals: 428
* Number of covered goals: 290
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 239
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 288
* Generated 66 tests with total length 265
* Resulting test suite's coverage: 76% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 139s and 30 generations, 21825 statements, best individual has fitness: 2232.0
[MASTER] 18:35:17.741 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 21 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 647
* Number of covered goals: 635
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 441
* Number of covered goals: 422
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 678
* Number of covered goals: 618
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 42%
* Total number of goals: 244
* Number of covered goals: 103
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 124
* Number of covered goals: 122
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 124
* Number of covered goals: 122
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 91%
* Total number of goals: 441
* Number of covered goals: 402
* Generated 194 tests with total length 2019
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 74%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/mosa/tests/s1005/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 18:40:57.927 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6910895833333334% of time used, but only 93/194 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 25%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/mosa/tests/s1005/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14216
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 18:42:39.600 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:42:39.609 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:42:39.617 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 18:42:39.634 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2499
* Using seed 1005
* Starting evolution
[MASTER] 18:42:41.194 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 122s and 102 generations, 66708 statements, best individual has fitness: 16712.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 19 tests with total length 93
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/mosa/tests/s1005/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14213
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 18:46:18.804 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:46:18.823 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:46:18.844 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 18:46:18.985 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 18:46:18.996 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 18:46:19.002 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1729
* Using seed 1005
* Starting evolution
[MASTER] 18:47:32.426 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 18:48:08.696 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
* Search finished after 123s and 289 generations, 105217 statements, best individual has fitness: 4160.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 71%
* Total number of goals: 370
* Number of covered goals: 263
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 60%
* Total number of goals: 242
* Number of covered goals: 144
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 34
* Number of covered goals: 34
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 74%
* Total number of goals: 713
* Number of covered goals: 531
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 53%
* Total number of goals: 72
* Number of covered goals: 38
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 60%
* Total number of goals: 242
* Number of covered goals: 144
* Generated 84 tests with total length 518
* Resulting test suite's coverage: 71% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 25%
* Compiling and checking tests
[MASTER] 18:50:24.520 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 18:50:24.542 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 18:50:24.643 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 18:50:24.643 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 18:50:40.726 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 18:50:40.727 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
Attribute attribute0 = new Attribute("3_p{");
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("@end", arrayList0, 92);
Properties properties0 = new Properties();
ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
ProtectedProperties protectedProperties1 = new ProtectedProperties(protectedProperties0);
ProtectedProperties protectedProperties2 = new ProtectedProperties(protectedProperties1);
Attribute attribute1 = new Attribute("@attribute", instances0, protectedProperties2);
arrayList0.add(attribute1);
Instances instances1 = new Instances("relational", arrayList0, 0);
discretize0.setInputFormat(instances0);

[MASTER] 18:50:43.675 [logback-1] WARN  ClassResetter - java.lang.reflect.InvocationTargetException, caused by: java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 18:50:43.675 [logback-1] WARN  ClassResetter - java.lang.reflect.InvocationTargetException, caused by: java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/mosa/tests/s1005/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14214
* Connecting to master process on port 14210
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 18:50:53.382 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 18:50:53.382 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 18:50:53.383 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 18:50:53.426 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:50:53.428 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:50:53.442 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 18:50:56.152 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:50:56.196 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:50:56.197 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1412
* Using seed 1005
* Starting evolution
[MASTER] 18:50:58.243 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 18:50:58.919 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 18:50:58.920 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2767
* Using seed 1005
* Starting evolution
[MASTER] 18:51:03.795 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: Line 1084
[MASTER] 18:51:03.795 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: Line 1085
[MASTER] 18:51:03.795 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: I4 Branch 70 IFNONNULL L1084 - false
[MASTER] 18:51:03.796 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 252: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z:605 - ReplaceVariable m_wordFrequencies -> m_normalize
[MASTER] 18:51:03.801 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 435: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:1084 - ReplaceComparisonOperator != null -> = null
[MASTER] 18:51:03.801 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 436: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:1085 - ReplaceConstant - NaiveBayesMultinomialText: No model built yet.
 -> 
[MASTER] 18:51:03.802 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:NonEmptyString
[MASTER] 18:51:03.802 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;
[MASTER] 18:51:03.802 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;
[MASTER] 18:51:03.802 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: I4 Branch 70 IFNONNULL L1084 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:toString()Ljava/lang/String;
[MASTER] 18:51:20.713 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1037
[MASTER] 18:51:20.714 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I10 Branch 62 IFEQ L1036 - false
[MASTER] 18:51:20.716 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 424: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1037 - ReplaceConstant - -W -> 
[MASTER] 18:51:20.716 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z:True
[MASTER] 18:51:20.717 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I10 Branch 62 IFEQ L1036 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 18:51:23.567 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 18:51:23.568 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 18:51:33.079 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 18:52:12.021 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 18:52:44.664 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 122s and 199 generations, 74868 statements, best individual has fitness: 1496.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 90%
* Total number of goals: 338
* Number of covered goals: 305
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 83%
* Total number of goals: 194
* Number of covered goals: 161
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 476
* Number of covered goals: 444
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 60
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 81%
* Total number of goals: 194
* Number of covered goals: 158
* Generated 69 tests with total length 460
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 123s and 187 generations, 73329 statements, best individual has fitness: 12568.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 36%
* Total number of goals: 705
* Number of covered goals: 256
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 110
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 56%
* Total number of goals: 993
* Number of covered goals: 557
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 27%
* Total number of goals: 93
* Number of covered goals: 25
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 110
* Generated 77 tests with total length 465
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 24%
* Compiling and checking tests
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/mosa/tests/s1005/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 55%
* Compiling and checking tests
[MASTER] 18:55:47.065 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_26_1575485747044/weka/classifiers/bayes/NaiveBayesMultinomialText_26_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_26_1575485747044/weka/classifiers/bayes/NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding.java]]
[MASTER] 18:55:47.065 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:55:47.065 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:55:47.067 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 18:55:47.067 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 18:55:47.068 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_26_1575485747044/weka/classifiers/bayes/NaiveBayesMultinomialText_26_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 18:55:47 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.Instance;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_26_tmp__ESTest extends NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=2.4164983843494308
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
28:       linkedHashMap0.entrySet();
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       naiveBayesMultinomialText0.setNormalizeDocLength(true);
31:       naiveBayesMultinomialText0.setLowercaseTokens(false);
32:       naiveBayesMultinomialText0.getCapabilities();
33:       naiveBayesMultinomialText0.getLowercaseTokens();
34:       naiveBayesMultinomialText0.getRevision();
35:       try { 
36:         naiveBayesMultinomialText0.updateClassifier((Instance) null);
37:         fail("Expecting exception: NullPointerException");
38:       
39:       } catch(NullPointerException e) {
40:          //
41:          // no message in exception (getMessage() returned null)
42:          //
43:       }
44:   }
45: }
RegularFileObject[/tmp/EvoSuite_26_1575485747044/weka/classifiers/bayes/NaiveBayesMultinomialText_26_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 18:55:47 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.classifiers.AbstractClassifier",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.OptionHandler",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.core.WekaException",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.core.scripting.JythonSerializableObject",
99:       "weka.classifiers.Classifier",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.Capabilities$Capability",
102:       "weka.core.SparseInstance",
103:       "weka.core.DenseInstance",
104:       "org.pentaho.packageManagement.PackageManager",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.core.tokenizers.WordTokenizer",
107:       "weka.classifiers.misc.SerializedClassifier",
108:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
109:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
110:       "org.pentaho.packageManagement.DefaultPackageManager",
111:       "weka.core.stemmers.SnowballStemmer",
112:       "weka.core.stemmers.LovinsStemmer",
113:       "weka.classifiers.Evaluation",
114:       "weka.classifiers.functions.supportVector.Kernel",
115:       "weka.core.WekaPackageManager",
116:       "org.bounce.net.DefaultAuthenticator",
117:       "weka.filters.SupervisedFilter",
118:       "weka.core.TechnicalInformationHandler",
119:       "weka.estimators.IncrementalEstimator",
120:       "weka.estimators.Estimator$Builder",
121:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
122:       "weka.core.Option",
123:       "weka.core.stemmers.NullStemmer",
124:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
125:       "weka.estimators.NormalEstimator",
126:       "weka.classifiers.functions.SGDText",
127:       "weka.core.RelationalLocator",
128:       "weka.filters.Sourcable",
129:       "weka.core.Utils",
130:       "weka.core.tokenizers.Tokenizer",
131:       "weka.core.Attribute",
132:       "weka.core.NoSupportForMissingValuesException",
133:       "weka.core.Stopwords",
134:       "weka.classifiers.UpdateableClassifier",
135:       "weka.core.tokenizers.AlphabeticTokenizer",
136:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
137:       "weka.core.FastVector",
138:       "weka.core.MultiInstanceCapabilitiesHandler",
139:       "weka.core.Copyable",
140:       "weka.core.Capabilities",
141:       "weka.core.BinarySparseInstance",
142:       "weka.core.AttributeLocator",
143:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
144:       "weka.core.UnassignedDatasetException",
145:       "weka.classifiers.RandomizableClassifier",
146:       "weka.core.SerializedObject",
147:       "weka.clusterers.UpdateableClusterer",
148:       "weka.core.Summarizable",
149:       "weka.core.RevisionUtils",
150:       "org.pentaho.packageManagement.PackageManager$1",
151:       "weka.core.Instance",
152:       "weka.estimators.Estimator",
153:       "weka.core.Drawable",
154:       "weka.core.ProtectedProperties",
155:       "weka.core.StringLocator",
156:       "weka.core.AttributeStats",
157:       "weka.core.WeightedInstancesHandler",
158:       "weka.core.CapabilitiesHandler",
159:       "weka.core.Randomizable",
160:       "weka.core.AbstractInstance",
161:       "weka.core.Instances",
162:       "weka.core.scripting.JythonObject",
163:       "weka.core.SelectedTag",
164:       "org.pentaho.packageManagement.DefaultPackage",
165:       "weka.core.UnassignedClassException",
166:       "weka.core.Queue",
167:       "weka.core.Version",
168:       "weka.core.UnsupportedAttributeTypeException",
169:       "weka.core.TechnicalInformation",
170:       "weka.classifiers.Sourcable",
171:       "weka.core.RevisionHandler",
172:       "weka.classifiers.evaluation.output.prediction.PlainText",
173:       "weka.core.xml.XMLSerialization",
174:       "weka.classifiers.xml.XMLClassifier",
175:       "weka.filters.Filter",
176:       "weka.filters.supervised.attribute.Discretize",
177:       "weka.core.Tag"
178:     );
179:   } 
180: 
181:   private static void resetClasses() {
182:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding.class.getClassLoader()); 
183: 
184:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
185:       "weka.classifiers.AbstractClassifier",
186:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
187:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
188:       "weka.core.Capabilities$Capability",
189:       "weka.core.tokenizers.Tokenizer",
190:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
191:       "weka.core.tokenizers.WordTokenizer",
192:       "weka.core.stemmers.NullStemmer",
193:       "weka.core.Stopwords",
194:       "weka.core.Utils",
195:       "weka.core.neighboursearch.NearestNeighbourSearch",
196:       "weka.core.neighboursearch.LinearNNSearch",
197:       "weka.core.NormalizableDistance",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Range",
200:       "weka.core.AbstractInstance",
201:       "weka.core.SparseInstance",
202:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
203:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
204:       "weka.core.SerializedObject",
205:       "weka.core.BinarySparseInstance",
206:       "weka.core.DenseInstance",
207:       "weka.core.UnassignedDatasetException",
208:       "weka.classifiers.RandomizableClassifier",
209:       "weka.core.Tag",
210:       "weka.classifiers.functions.SGDText",
211:       "weka.core.Option",
212:       "weka.core.RevisionUtils",
213:       "weka.classifiers.SingleClassifierEnhancer",
214:       "weka.classifiers.IteratedSingleClassifierEnhancer",
215:       "weka.classifiers.meta.AdditiveRegression",
216:       "weka.classifiers.trees.DecisionStump",
217:       "weka.classifiers.rules.ZeroR",
218:       "weka.core.Capabilities",
219:       "org.pentaho.packageManagement.PackageManager",
220:       "org.pentaho.packageManagement.DefaultPackageManager",
221:       "weka.core.Version",
222:       "weka.core.Environment",
223:       "weka.core.WekaPackageManager",
224:       "weka.core.TestInstances",
225:       "weka.classifiers.Evaluation",
226:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
227:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
228:       "weka.core.neighboursearch.balltrees.BallNode",
229:       "weka.core.stemmers.SnowballStemmer",
230:       "weka.attributeSelection.ASEvaluation",
231:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
232:       "weka.attributeSelection.PrincipalComponents",
233:       "weka.core.stemmers.LovinsStemmer",
234:       "weka.core.stemmers.IteratedLovinsStemmer",
235:       "weka.core.neighboursearch.KDTree",
236:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
237:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
238:       "weka.classifiers.misc.InputMappedClassifier",
239:       "weka.filters.Filter",
240:       "weka.filters.supervised.attribute.Discretize",
241:       "weka.classifiers.bayes.NaiveBayes",
242:       "weka.core.TechnicalInformation",
243:       "weka.core.TechnicalInformation$Type",
244:       "weka.core.TechnicalInformation$Field",
245:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
246:       "weka.classifiers.misc.SerializedClassifier",
247:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
248:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
249:       "weka.core.Attribute",
250:       "weka.core.ProtectedProperties",
251:       "weka.core.Instances",
252:       "weka.core.WekaException",
253:       "weka.core.UnsupportedAttributeTypeException",
254:       "weka.classifiers.bayes.BayesNet",
255:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
256:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
257:       "weka.classifiers.bayes.net.search.local.K2",
258:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
259:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
260:       "weka.estimators.Estimator",
261:       "weka.estimators.NormalEstimator",
262:       "weka.core.tokenizers.AlphabeticTokenizer",
263:       "weka.classifiers.functions.supportVector.Kernel",
264:       "weka.classifiers.functions.supportVector.CachedKernel",
265:       "weka.classifiers.functions.supportVector.PolyKernel",
266:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
267:       "weka.core.neighboursearch.CoverTree",
268:       "weka.core.WekaEnumeration",
269:       "weka.core.Attribute$1",
270:       "weka.attributeSelection.WrapperSubsetEval",
271:       "weka.classifiers.functions.SMOreg",
272:       "weka.classifiers.functions.supportVector.RegOptimizer",
273:       "weka.classifiers.functions.supportVector.RegSMO",
274:       "weka.classifiers.functions.supportVector.RegSMOImproved",
275:       "weka.classifiers.trees.m5.M5Base",
276:       "weka.classifiers.trees.M5P",
277:       "weka.core.tokenizers.NGramTokenizer",
278:       "weka.classifiers.meta.FilteredClassifier",
279:       "weka.filters.supervised.attribute.AttributeSelection",
280:       "weka.attributeSelection.AttributeSelection",
281:       "weka.attributeSelection.CfsSubsetEval",
282:       "weka.attributeSelection.ASSearch",
283:       "weka.attributeSelection.GreedyStepwise",
284:       "weka.attributeSelection.BestFirst",
285:       "weka.classifiers.trees.J48",
286:       "weka.classifiers.bayes.net.BIFReader",
287:       "weka.filters.AllFilter",
288:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
289:       "weka.classifiers.meta.AdaBoostM1",
290:       "weka.classifiers.CostMatrix",
291:       "weka.classifiers.functions.SGD",
292:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
293:       "weka.classifiers.meta.CostSensitiveClassifier",
294:       "weka.classifiers.functions.LinearRegression",
295:       "weka.classifiers.trees.j48.ClassifierTree",
296:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
297:       "weka.classifiers.rules.DecisionTable",
298:       "weka.core.neighboursearch.BallTree",
299:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
300:       "weka.core.neighboursearch.balltrees.BallSplitter",
301:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
302:       "weka.classifiers.lazy.IBk",
303:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
304:       "weka.classifiers.bayes.NaiveBayesUpdateable",
305:       "weka.core.converters.ArffLoader$ArffReader",
306:       "weka.classifiers.meta.ClassificationViaRegression",
307:       "weka.classifiers.functions.supportVector.RBFKernel",
308:       "weka.classifiers.functions.GaussianProcesses",
309:       "weka.classifiers.functions.SimpleLogistic",
310:       "weka.core.FindWithCapabilities",
311:       "weka.core.SingleIndex",
312:       "weka.classifiers.MultipleClassifiersCombiner",
313:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
314:       "weka.classifiers.meta.Vote",
315:       "weka.classifiers.bayes.NaiveBayesMultinomial",
316:       "weka.classifiers.rules.PART",
317:       "weka.classifiers.rules.part.MakeDecList",
318:       "weka.classifiers.rules.OneR",
319:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
321:       "weka.classifiers.meta.RandomCommittee",
322:       "weka.classifiers.trees.RandomTree",
323:       "weka.filters.SimpleFilter",
324:       "weka.filters.SimpleStreamFilter",
325:       "weka.filters.MultiFilter",
326:       "weka.classifiers.lazy.LWL",
327:       "weka.core.ChebyshevDistance",
328:       "weka.estimators.DiscreteEstimator",
329:       "weka.core.UnassignedClassException",
330:       "weka.classifiers.rules.JRip",
331:       "weka.core.MinkowskiDistance",
332:       "weka.classifiers.functions.SMO",
333:       "weka.classifiers.meta.CVParameterSelection",
334:       "weka.core.FastVector",
335:       "weka.classifiers.rules.M5Rules",
336:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
337:       "weka.estimators.KernelEstimator",
338:       "weka.attributeSelection.ReliefFAttributeEval",
339:       "weka.core.SelectedTag",
340:       "weka.attributeSelection.InfoGainAttributeEval",
341:       "weka.classifiers.meta.LogitBoost",
342:       "weka.classifiers.meta.AttributeSelectedClassifier",
343:       "weka.classifiers.functions.SimpleLinearRegression",
344:       "weka.estimators.MahalanobisEstimator",
345:       "weka.attributeSelection.OneRAttributeEval",
346:       "weka.classifiers.meta.Bagging",
347:       "weka.classifiers.trees.REPTree",
348:       "weka.core.AttributeStats",
349:       "weka.classifiers.functions.VotedPerceptron",
350:       "weka.classifiers.meta.MultiScheme",
351:       "weka.core.stemmers.Stemming",
352:       "weka.classifiers.meta.MultiClassClassifier",
353:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
354:       "weka.classifiers.functions.Logistic",
355:       "weka.classifiers.lazy.KStar",
356:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
357:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
358:       "weka.classifiers.meta.Stacking",
359:       "weka.classifiers.functions.MultilayerPerceptron",
360:       "weka.filters.unsupervised.attribute.NominalToBinary",
361:       "weka.classifiers.functions.neural.SigmoidUnit",
362:       "weka.classifiers.functions.neural.LinearUnit",
363:       "weka.classifiers.trees.RandomForest",
364:       "weka.classifiers.meta.RegressionByDiscretization",
365:       "weka.filters.unsupervised.attribute.Discretize",
366:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
367:       "weka.attributeSelection.CorrelationAttributeEval",
368:       "weka.classifiers.trees.LMT",
369:       "weka.classifiers.functions.supportVector.StringKernel",
370:       "weka.core.matrix.Matrix",
371:       "weka.attributeSelection.GainRatioAttributeEval",
372:       "weka.experiment.Stats",
373:       "weka.core.Javadoc",
374:       "weka.core.OptionHandlerJavadoc",
375:       "weka.estimators.PoissonEstimator",
376:       "weka.classifiers.functions.supportVector.Puk",
377:       "weka.core.Queue",
378:       "weka.core.AttributeLocator",
379:       "weka.core.StringLocator",
380:       "weka.core.RelationalLocator",
381:       "weka.core.ContingencyTables",
382:       "weka.core.Queue$QueueNode",
383:       "weka.estimators.Estimator$Builder",
384:       "weka.core.GlobalInfoJavadoc"
385:     );
386:   }
387: }

[MASTER] 18:55:47.068 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.entrySet();
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setNormalizeDocLength(true);
naiveBayesMultinomialText0.setLowercaseTokens(false);
naiveBayesMultinomialText0.getCapabilities();
naiveBayesMultinomialText0.getLowercaseTokens();
naiveBayesMultinomialText0.getRevision();
naiveBayesMultinomialText0.updateClassifier((Instance) null);

[MASTER] 18:55:48.054 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_62_1575485748036/weka/classifiers/bayes/NaiveBayesMultinomialText_62_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_62_1575485748036/weka/classifiers/bayes/NaiveBayesMultinomialText_62_tmp__ESTest_scaffolding.java]]
[MASTER] 18:55:48.054 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:55:48.054 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:55:48.054 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 18:55:48.055 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_62_1575485748036/weka/classifiers/bayes/NaiveBayesMultinomialText_62_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 18:55:48 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.io.File;
12: import java.util.LinkedHashMap;
13: import java.util.Map;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.mock.java.io.MockFile;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.DenseInstance;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_62_tmp__ESTest extends NaiveBayesMultinomialText_62_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=3.5841931382898213
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
32:       naiveBayesMultinomialText0.setOptions(stringArray0);
33:       naiveBayesMultinomialText0.m_lnorm = (-608.5309);
34:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
35:       naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
36:       File file0 = MockFile.createTempFile(".F7PePqb|`[b4>", ".F7PePqb|`[b4>");
37:       naiveBayesMultinomialText0.setStopwords(file0);
38:       DenseInstance denseInstance0 = new DenseInstance(67);
39:       // Undeclared exception!
40:       try { 
41:         naiveBayesMultinomialText0.tokenizeInstance(denseInstance0, false);
42:         fail("Expecting exception: RuntimeException");
43:       
44:       } catch(RuntimeException e) {
45:          //
46:          // DenseInstance doesn't have access to a dataset!
47:          //
48:          verifyException("weka.core.AbstractInstance", e);
49:       }
50:   }
51: }
RegularFileObject[/tmp/EvoSuite_62_1575485748036/weka/classifiers/bayes/NaiveBayesMultinomialText_62_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 18:55:48 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_62_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_62_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.classifiers.AbstractClassifier",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.OptionHandler",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.core.WekaException",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.core.scripting.JythonSerializableObject",
99:       "weka.classifiers.Classifier",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.Capabilities$Capability",
102:       "weka.core.SparseInstance",
103:       "weka.core.DenseInstance",
104:       "org.pentaho.packageManagement.PackageManager",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.core.tokenizers.WordTokenizer",
107:       "weka.classifiers.misc.SerializedClassifier",
108:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
109:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
110:       "org.pentaho.packageManagement.DefaultPackageManager",
111:       "weka.core.stemmers.SnowballStemmer",
112:       "weka.core.stemmers.LovinsStemmer",
113:       "weka.classifiers.Evaluation",
114:       "weka.classifiers.functions.supportVector.Kernel",
115:       "weka.core.WekaPackageManager",
116:       "org.bounce.net.DefaultAuthenticator",
117:       "weka.filters.SupervisedFilter",
118:       "weka.core.TechnicalInformationHandler",
119:       "weka.estimators.IncrementalEstimator",
120:       "weka.estimators.Estimator$Builder",
121:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
122:       "weka.core.Option",
123:       "weka.core.stemmers.NullStemmer",
124:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
125:       "weka.estimators.NormalEstimator",
126:       "weka.classifiers.functions.SGDText",
127:       "weka.core.RelationalLocator",
128:       "weka.filters.Sourcable",
129:       "weka.core.Utils",
130:       "weka.core.tokenizers.Tokenizer",
131:       "weka.core.Attribute",
132:       "weka.core.NoSupportForMissingValuesException",
133:       "weka.core.Stopwords",
134:       "weka.classifiers.UpdateableClassifier",
135:       "weka.core.tokenizers.AlphabeticTokenizer",
136:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
137:       "weka.core.FastVector",
138:       "weka.core.MultiInstanceCapabilitiesHandler",
139:       "weka.core.Copyable",
140:       "weka.core.Capabilities",
141:       "weka.core.BinarySparseInstance",
142:       "weka.core.AttributeLocator",
143:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
144:       "weka.core.UnassignedDatasetException",
145:       "weka.classifiers.RandomizableClassifier",
146:       "weka.core.SerializedObject",
147:       "weka.clusterers.UpdateableClusterer",
148:       "weka.core.Summarizable",
149:       "weka.core.RevisionUtils",
150:       "org.pentaho.packageManagement.PackageManager$1",
151:       "weka.core.Instance",
152:       "weka.estimators.Estimator",
153:       "weka.core.Drawable",
154:       "weka.core.ProtectedProperties",
155:       "weka.core.StringLocator",
156:       "weka.core.AttributeStats",
157:       "weka.core.WeightedInstancesHandler",
158:       "weka.core.CapabilitiesHandler",
159:       "weka.core.Randomizable",
160:       "weka.core.AbstractInstance",
161:       "weka.core.Instances",
162:       "weka.core.scripting.JythonObject",
163:       "weka.core.SelectedTag",
164:       "org.pentaho.packageManagement.DefaultPackage",
165:       "weka.core.UnassignedClassException",
166:       "weka.core.Queue",
167:       "weka.core.Version",
168:       "weka.core.UnsupportedAttributeTypeException",
169:       "weka.core.TechnicalInformation",
170:       "weka.classifiers.Sourcable",
171:       "weka.core.RevisionHandler",
172:       "weka.classifiers.evaluation.output.prediction.PlainText",
173:       "weka.core.xml.XMLSerialization",
174:       "weka.classifiers.xml.XMLClassifier",
175:       "weka.filters.Filter",
176:       "weka.filters.supervised.attribute.Discretize",
177:       "weka.core.Tag"
178:     );
179:   } 
180: 
181:   private static void resetClasses() {
182:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_62_tmp__ESTest_scaffolding.class.getClassLoader()); 
183: 
184:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
185:       "weka.classifiers.AbstractClassifier",
186:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
187:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
188:       "weka.core.Capabilities$Capability",
189:       "weka.core.tokenizers.Tokenizer",
190:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
191:       "weka.core.tokenizers.WordTokenizer",
192:       "weka.core.stemmers.NullStemmer",
193:       "weka.core.Stopwords",
194:       "weka.core.Utils",
195:       "weka.core.neighboursearch.NearestNeighbourSearch",
196:       "weka.core.neighboursearch.LinearNNSearch",
197:       "weka.core.NormalizableDistance",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Range",
200:       "weka.core.AbstractInstance",
201:       "weka.core.SparseInstance",
202:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
203:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
204:       "weka.core.SerializedObject",
205:       "weka.core.BinarySparseInstance",
206:       "weka.core.DenseInstance",
207:       "weka.core.UnassignedDatasetException",
208:       "weka.classifiers.RandomizableClassifier",
209:       "weka.core.Tag",
210:       "weka.classifiers.functions.SGDText",
211:       "weka.core.Option",
212:       "weka.core.RevisionUtils",
213:       "weka.classifiers.SingleClassifierEnhancer",
214:       "weka.classifiers.IteratedSingleClassifierEnhancer",
215:       "weka.classifiers.meta.AdditiveRegression",
216:       "weka.classifiers.trees.DecisionStump",
217:       "weka.classifiers.rules.ZeroR",
218:       "weka.core.Capabilities",
219:       "org.pentaho.packageManagement.PackageManager",
220:       "org.pentaho.packageManagement.DefaultPackageManager",
221:       "weka.core.Version",
222:       "weka.core.Environment",
223:       "weka.core.WekaPackageManager",
224:       "weka.core.TestInstances",
225:       "weka.classifiers.Evaluation",
226:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
227:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
228:       "weka.core.neighboursearch.balltrees.BallNode",
229:       "weka.core.stemmers.SnowballStemmer",
230:       "weka.attributeSelection.ASEvaluation",
231:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
232:       "weka.attributeSelection.PrincipalComponents",
233:       "weka.core.stemmers.LovinsStemmer",
234:       "weka.core.stemmers.IteratedLovinsStemmer",
235:       "weka.core.neighboursearch.KDTree",
236:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
237:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
238:       "weka.classifiers.misc.InputMappedClassifier",
239:       "weka.filters.Filter",
240:       "weka.filters.supervised.attribute.Discretize",
241:       "weka.classifiers.bayes.NaiveBayes",
242:       "weka.core.TechnicalInformation",
243:       "weka.core.TechnicalInformation$Type",
244:       "weka.core.TechnicalInformation$Field",
245:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
246:       "weka.classifiers.misc.SerializedClassifier",
247:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
248:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
249:       "weka.core.Attribute",
250:       "weka.core.ProtectedProperties",
251:       "weka.core.Instances",
252:       "weka.core.WekaException",
253:       "weka.core.UnsupportedAttributeTypeException",
254:       "weka.classifiers.bayes.BayesNet",
255:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
256:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
257:       "weka.classifiers.bayes.net.search.local.K2",
258:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
259:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
260:       "weka.estimators.Estimator",
261:       "weka.estimators.NormalEstimator",
262:       "weka.core.tokenizers.AlphabeticTokenizer",
263:       "weka.classifiers.functions.supportVector.Kernel",
264:       "weka.classifiers.functions.supportVector.CachedKernel",
265:       "weka.classifiers.functions.supportVector.PolyKernel",
266:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
267:       "weka.core.neighboursearch.CoverTree",
268:       "weka.core.WekaEnumeration",
269:       "weka.core.Attribute$1",
270:       "weka.attributeSelection.WrapperSubsetEval",
271:       "weka.classifiers.functions.SMOreg",
272:       "weka.classifiers.functions.supportVector.RegOptimizer",
273:       "weka.classifiers.functions.supportVector.RegSMO",
274:       "weka.classifiers.functions.supportVector.RegSMOImproved",
275:       "weka.classifiers.trees.m5.M5Base",
276:       "weka.classifiers.trees.M5P",
277:       "weka.core.tokenizers.NGramTokenizer",
278:       "weka.classifiers.meta.FilteredClassifier",
279:       "weka.filters.supervised.attribute.AttributeSelection",
280:       "weka.attributeSelection.AttributeSelection",
281:       "weka.attributeSelection.CfsSubsetEval",
282:       "weka.attributeSelection.ASSearch",
283:       "weka.attributeSelection.GreedyStepwise",
284:       "weka.attributeSelection.BestFirst",
285:       "weka.classifiers.trees.J48",
286:       "weka.classifiers.bayes.net.BIFReader",
287:       "weka.filters.AllFilter",
288:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
289:       "weka.classifiers.meta.AdaBoostM1",
290:       "weka.classifiers.CostMatrix",
291:       "weka.classifiers.functions.SGD",
292:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
293:       "weka.classifiers.meta.CostSensitiveClassifier",
294:       "weka.classifiers.functions.LinearRegression",
295:       "weka.classifiers.trees.j48.ClassifierTree",
296:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
297:       "weka.classifiers.rules.DecisionTable",
298:       "weka.core.neighboursearch.BallTree",
299:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
300:       "weka.core.neighboursearch.balltrees.BallSplitter",
301:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
302:       "weka.classifiers.lazy.IBk",
303:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
304:       "weka.classifiers.bayes.NaiveBayesUpdateable",
305:       "weka.core.converters.ArffLoader$ArffReader",
306:       "weka.classifiers.meta.ClassificationViaRegression",
307:       "weka.classifiers.functions.supportVector.RBFKernel",
308:       "weka.classifiers.functions.GaussianProcesses",
309:       "weka.classifiers.functions.SimpleLogistic",
310:       "weka.core.FindWithCapabilities",
311:       "weka.core.SingleIndex",
312:       "weka.classifiers.MultipleClassifiersCombiner",
313:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
314:       "weka.classifiers.meta.Vote",
315:       "weka.classifiers.bayes.NaiveBayesMultinomial",
316:       "weka.classifiers.rules.PART",
317:       "weka.classifiers.rules.part.MakeDecList",
318:       "weka.classifiers.rules.OneR",
319:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
321:       "weka.classifiers.meta.RandomCommittee",
322:       "weka.classifiers.trees.RandomTree",
323:       "weka.filters.SimpleFilter",
324:       "weka.filters.SimpleStreamFilter",
325:       "weka.filters.MultiFilter",
326:       "weka.classifiers.lazy.LWL",
327:       "weka.core.ChebyshevDistance",
328:       "weka.estimators.DiscreteEstimator",
329:       "weka.core.UnassignedClassException",
330:       "weka.classifiers.rules.JRip",
331:       "weka.core.MinkowskiDistance",
332:       "weka.classifiers.functions.SMO",
333:       "weka.classifiers.meta.CVParameterSelection",
334:       "weka.core.FastVector",
335:       "weka.classifiers.rules.M5Rules",
336:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
337:       "weka.estimators.KernelEstimator",
338:       "weka.attributeSelection.ReliefFAttributeEval",
339:       "weka.core.SelectedTag",
340:       "weka.attributeSelection.InfoGainAttributeEval",
341:       "weka.classifiers.meta.LogitBoost",
342:       "weka.classifiers.meta.AttributeSelectedClassifier",
343:       "weka.classifiers.functions.SimpleLinearRegression",
344:       "weka.estimators.MahalanobisEstimator",
345:       "weka.attributeSelection.OneRAttributeEval",
346:       "weka.classifiers.meta.Bagging",
347:       "weka.classifiers.trees.REPTree",
348:       "weka.core.AttributeStats",
349:       "weka.classifiers.functions.VotedPerceptron",
350:       "weka.classifiers.meta.MultiScheme",
351:       "weka.core.stemmers.Stemming",
352:       "weka.classifiers.meta.MultiClassClassifier",
353:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
354:       "weka.classifiers.functions.Logistic",
355:       "weka.classifiers.lazy.KStar",
356:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
357:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
358:       "weka.classifiers.meta.Stacking",
359:       "weka.classifiers.functions.MultilayerPerceptron",
360:       "weka.filters.unsupervised.attribute.NominalToBinary",
361:       "weka.classifiers.functions.neural.SigmoidUnit",
362:       "weka.classifiers.functions.neural.LinearUnit",
363:       "weka.classifiers.trees.RandomForest",
364:       "weka.classifiers.meta.RegressionByDiscretization",
365:       "weka.filters.unsupervised.attribute.Discretize",
366:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
367:       "weka.attributeSelection.CorrelationAttributeEval",
368:       "weka.classifiers.trees.LMT",
369:       "weka.classifiers.functions.supportVector.StringKernel",
370:       "weka.core.matrix.Matrix",
371:       "weka.attributeSelection.GainRatioAttributeEval",
372:       "weka.experiment.Stats",
373:       "weka.core.Javadoc",
374:       "weka.core.OptionHandlerJavadoc",
375:       "weka.estimators.PoissonEstimator",
376:       "weka.classifiers.functions.supportVector.Puk",
377:       "weka.core.Queue",
378:       "weka.core.AttributeLocator",
379:       "weka.core.StringLocator",
380:       "weka.core.RelationalLocator",
381:       "weka.core.ContingencyTables",
382:       "weka.core.Queue$QueueNode",
383:       "weka.estimators.Estimator$Builder",
384:       "weka.core.GlobalInfoJavadoc"
385:     );
386:   }
387: }

[MASTER] 18:55:48.055 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.m_lnorm = (-608.5309);
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
File file0 = MockFile.createTempFile(".F7PePqb|`[b4>", ".F7PePqb|`[b4>");
naiveBayesMultinomialText0.setStopwords(file0);
DenseInstance denseInstance0 = new DenseInstance(67);
naiveBayesMultinomialText0.tokenizeInstance(denseInstance0, false);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/mosa/tests/s1005/107_weka/evosuite-tests
* Done!

* Computation finished
