* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 12624
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 12627
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:32:58.769 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 01:32:58.769 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 01:32:58.783 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 01:32:58.876 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:32:58.878 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:32:58.879 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 01:33:01.570 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:33:01.576 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:33:01.577 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1412
* Using seed 1015
* Starting evolution
[MASTER] 01:33:04.086 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 01:33:04.720 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 01:33:04.722 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2767
* Using seed 1015
* Starting evolution
[MASTER] 01:33:23.499 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 01:33:23.500 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 01:33:25.267 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 122s and 190 generations, 74083 statements, best individual has fitness: 1472.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 91%
* Total number of goals: 338
* Number of covered goals: 306
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 84%
* Total number of goals: 194
* Number of covered goals: 163
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 476
* Number of covered goals: 442
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 61
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 194
* Number of covered goals: 160
* Generated 74 tests with total length 565
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 123s and 167 generations, 81958 statements, best individual has fitness: 12496.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 37%
* Total number of goals: 705
* Number of covered goals: 261
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 27%
* Total number of goals: 416
* Number of covered goals: 113
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 56%
* Total number of goals: 993
* Number of covered goals: 555
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 28%
* Total number of goals: 93
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 27%
* Total number of goals: 416
* Number of covered goals: 112
* Generated 74 tests with total length 482
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
[MASTER] 01:35:53.617 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 01:35:54.244 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/mosa/tests/s1015/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 55%
* Compiling and checking tests
[MASTER] 01:37:47.266 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_44_1575509867235/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_44_1575509867235/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding.java]]
[MASTER] 01:37:47.266 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:37:47.266 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:37:47.268 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 01:37:47.268 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 01:37:47.269 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_44_1575509867235/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 01:37:47 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.testdata.FileSystemHandling;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.Instance;
17: import weka.core.Instances;
18: import weka.core.SparseInstance;
19: import weka.core.TestInstances;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_44_tmp__ESTest extends NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=2.226865198671571
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
32:       FileSystemHandling.shouldAllThrowIOExceptions();
33:       TestInstances testInstances0 = new TestInstances();
34:       Instances instances0 = testInstances0.generate();
35:       SparseInstance sparseInstance0 = new SparseInstance(640);
36:       instances0.add((Instance) sparseInstance0);
37:       naiveBayesMultinomialText0.buildClassifier(instances0);
38:       String string0 = naiveBayesMultinomialText0.globalInfo();
39:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
40:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
41:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
42:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
43:       assertEquals("Multinomial naive bayes for text data. Operates directly (and only) on String attributes. Other types of input attributes are accepted but ignored during training and classification", string0);
44:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
45:   }
46: }
RegularFileObject[/tmp/EvoSuite_44_1575509867235/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 01:37:47 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.classifiers.AbstractClassifier",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.OptionHandler",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.core.WekaException",
97:       "weka.classifiers.CostMatrix",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.scripting.JythonSerializableObject",
101:       "weka.classifiers.Classifier",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.core.Capabilities$Capability",
104:       "weka.core.SparseInstance",
105:       "weka.core.DenseInstance",
106:       "org.pentaho.packageManagement.PackageManager",
107:       "weka.core.stemmers.Stemmer",
108:       "weka.core.tokenizers.WordTokenizer",
109:       "weka.classifiers.misc.SerializedClassifier",
110:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
111:       "org.pentaho.packageManagement.DefaultPackageManager",
112:       "weka.core.stemmers.SnowballStemmer",
113:       "weka.core.stemmers.LovinsStemmer",
114:       "weka.classifiers.Evaluation",
115:       "weka.classifiers.functions.supportVector.Kernel",
116:       "weka.core.WekaPackageManager",
117:       "org.bounce.net.DefaultAuthenticator",
118:       "weka.core.TechnicalInformationHandler",
119:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
120:       "weka.core.Option",
121:       "weka.core.stemmers.NullStemmer",
122:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
123:       "weka.classifiers.functions.SGDText",
124:       "weka.filters.Sourcable",
125:       "weka.core.Utils",
126:       "weka.core.tokenizers.Tokenizer",
127:       "weka.core.Attribute",
128:       "weka.core.NoSupportForMissingValuesException",
129:       "weka.core.Stopwords",
130:       "weka.classifiers.UpdateableClassifier",
131:       "weka.core.tokenizers.AlphabeticTokenizer",
132:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
133:       "weka.core.FastVector",
134:       "weka.core.MultiInstanceCapabilitiesHandler",
135:       "weka.core.Copyable",
136:       "weka.core.Capabilities",
137:       "weka.core.BinarySparseInstance",
138:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
139:       "weka.core.UnassignedDatasetException",
140:       "weka.core.tokenizers.NGramTokenizer",
141:       "weka.classifiers.functions.supportVector.CachedKernel",
142:       "weka.classifiers.RandomizableClassifier",
143:       "weka.core.SerializedObject",
144:       "weka.clusterers.UpdateableClusterer",
145:       "weka.core.Summarizable",
146:       "weka.core.RevisionUtils",
147:       "org.pentaho.packageManagement.PackageManager$1",
148:       "weka.core.Instance",
149:       "weka.classifiers.functions.supportVector.PolyKernel",
150:       "weka.core.Drawable",
151:       "weka.core.ProtectedProperties",
152:       "weka.classifiers.IntervalEstimator",
153:       "weka.core.matrix.Matrix",
154:       "weka.classifiers.ConditionalDensityEstimator",
155:       "weka.core.AttributeStats",
156:       "weka.core.WeightedInstancesHandler",
157:       "weka.core.CapabilitiesHandler",
158:       "weka.classifiers.functions.GaussianProcesses",
159:       "weka.core.Randomizable",
160:       "weka.core.AbstractInstance",
161:       "weka.core.Instances",
162:       "weka.core.scripting.JythonObject",
163:       "weka.core.SelectedTag",
164:       "org.pentaho.packageManagement.DefaultPackage",
165:       "weka.classifiers.rules.OneR",
166:       "weka.filters.unsupervised.attribute.Normalize",
167:       "weka.core.UnassignedClassException",
168:       "weka.core.Version",
169:       "weka.core.stemmers.IteratedLovinsStemmer",
170:       "weka.filters.unsupervised.attribute.Standardize",
171:       "weka.core.TechnicalInformation",
172:       "weka.core.UnsupportedAttributeTypeException",
173:       "weka.classifiers.Sourcable",
174:       "weka.core.RevisionHandler",
175:       "weka.classifiers.evaluation.output.prediction.PlainText",
176:       "weka.classifiers.rules.OneR$OneRRule",
177:       "weka.core.xml.XMLSerialization",
178:       "weka.classifiers.xml.XMLClassifier",
179:       "weka.filters.Filter",
180:       "weka.core.Tag"
181:     );
182:   } 
183: 
184:   private static void resetClasses() {
185:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding.class.getClassLoader()); 
186: 
187:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
188:       "weka.classifiers.AbstractClassifier",
189:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
190:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
191:       "weka.core.Capabilities$Capability",
192:       "weka.core.tokenizers.Tokenizer",
193:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
194:       "weka.core.tokenizers.WordTokenizer",
195:       "weka.core.stemmers.NullStemmer",
196:       "weka.classifiers.Evaluation",
197:       "weka.core.Utils",
198:       "weka.core.Option",
199:       "weka.core.AbstractInstance",
200:       "weka.core.SparseInstance",
201:       "weka.classifiers.functions.supportVector.Kernel",
202:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
203:       "weka.core.BinarySparseInstance",
204:       "weka.core.UnassignedDatasetException",
205:       "weka.core.RevisionUtils",
206:       "weka.core.neighboursearch.NearestNeighbourSearch",
207:       "weka.core.neighboursearch.CoverTree",
208:       "weka.core.NormalizableDistance",
209:       "weka.core.EuclideanDistance",
210:       "weka.core.Range",
211:       "weka.core.Capabilities",
212:       "org.pentaho.packageManagement.PackageManager",
213:       "org.pentaho.packageManagement.DefaultPackageManager",
214:       "weka.core.Version",
215:       "weka.core.Environment",
216:       "weka.core.WekaPackageManager",
217:       "weka.core.neighboursearch.BallTree",
218:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
219:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
220:       "weka.core.neighboursearch.balltrees.BallSplitter",
221:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
222:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
223:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
224:       "weka.attributeSelection.ASEvaluation",
225:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
226:       "weka.attributeSelection.PrincipalComponents",
227:       "weka.classifiers.RandomizableClassifier",
228:       "weka.core.Tag",
229:       "weka.classifiers.functions.SGDText",
230:       "weka.classifiers.misc.SerializedClassifier",
231:       "weka.filters.Filter",
232:       "weka.filters.supervised.attribute.Discretize",
233:       "weka.classifiers.functions.SMO",
234:       "weka.classifiers.functions.supportVector.CachedKernel",
235:       "weka.classifiers.functions.supportVector.PolyKernel",
236:       "weka.core.SerializedObject",
237:       "weka.core.Instances",
238:       "weka.core.tokenizers.NGramTokenizer",
239:       "weka.classifiers.SingleClassifierEnhancer",
240:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
241:       "weka.classifiers.meta.CostSensitiveClassifier",
242:       "weka.classifiers.rules.ZeroR",
243:       "weka.classifiers.CostMatrix",
244:       "weka.core.stemmers.SnowballStemmer",
245:       "weka.core.DenseInstance",
246:       "weka.core.neighboursearch.balltrees.BallNode",
247:       "weka.core.TestInstances",
248:       "weka.core.Attribute",
249:       "weka.core.ProtectedProperties",
250:       "weka.core.tokenizers.AlphabeticTokenizer",
251:       "weka.core.neighboursearch.LinearNNSearch",
252:       "weka.core.stemmers.LovinsStemmer",
253:       "weka.core.stemmers.IteratedLovinsStemmer",
254:       "weka.classifiers.misc.InputMappedClassifier",
255:       "weka.core.converters.ArffLoader$ArffReader",
256:       "weka.core.Stopwords",
257:       "weka.classifiers.bayes.BayesNet",
258:       "weka.classifiers.bayes.net.BIFReader",
259:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
260:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
261:       "weka.classifiers.bayes.net.search.local.K2",
262:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
263:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
264:       "weka.classifiers.bayes.NaiveBayesMultinomial",
265:       "weka.classifiers.lazy.IBk",
266:       "weka.classifiers.functions.SGD",
267:       "weka.core.neighboursearch.KDTree",
268:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
269:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
270:       "weka.core.TechnicalInformation",
271:       "weka.core.TechnicalInformation$Type",
272:       "weka.core.TechnicalInformation$Field",
273:       "weka.core.stemmers.Stemming",
274:       "weka.classifiers.MultipleClassifiersCombiner",
275:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
276:       "weka.classifiers.meta.Vote",
277:       "weka.core.SerializationHelper",
278:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
279:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
280:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
281:       "weka.classifiers.trees.m5.M5Base",
282:       "weka.classifiers.rules.M5Rules",
283:       "weka.classifiers.functions.LinearRegression",
284:       "weka.core.SelectedTag",
285:       "weka.classifiers.meta.AttributeSelectedClassifier",
286:       "weka.attributeSelection.CfsSubsetEval",
287:       "weka.attributeSelection.ASSearch",
288:       "weka.attributeSelection.BestFirst",
289:       "weka.classifiers.trees.J48",
290:       "weka.classifiers.rules.JRip",
291:       "weka.classifiers.bayes.NaiveBayes",
292:       "weka.core.WekaException",
293:       "weka.core.UnsupportedAttributeTypeException",
294:       "weka.classifiers.IteratedSingleClassifierEnhancer",
295:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
296:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
297:       "weka.classifiers.meta.Bagging",
298:       "weka.classifiers.trees.REPTree",
299:       "weka.classifiers.bayes.NaiveBayesUpdateable",
300:       "weka.classifiers.meta.AdditiveRegression",
301:       "weka.classifiers.trees.DecisionStump",
302:       "weka.classifiers.functions.SMOreg",
303:       "weka.classifiers.functions.supportVector.RegOptimizer",
304:       "weka.classifiers.functions.supportVector.RegSMO",
305:       "weka.classifiers.functions.supportVector.RegSMOImproved",
306:       "weka.core.WekaEnumeration",
307:       "weka.core.Attribute$1",
308:       "weka.core.FindWithCapabilities",
309:       "weka.core.SingleIndex",
310:       "weka.classifiers.functions.GaussianProcesses",
311:       "weka.classifiers.trees.RandomTree",
312:       "weka.classifiers.meta.RegressionByDiscretization",
313:       "weka.filters.unsupervised.attribute.Discretize",
314:       "weka.core.AttributeStats",
315:       "weka.classifiers.meta.FilteredClassifier",
316:       "weka.filters.supervised.attribute.AttributeSelection",
317:       "weka.attributeSelection.AttributeSelection",
318:       "weka.attributeSelection.GreedyStepwise",
319:       "weka.classifiers.functions.Logistic",
320:       "weka.classifiers.meta.CVParameterSelection",
321:       "weka.core.FastVector",
322:       "weka.core.UnassignedClassException",
323:       "weka.classifiers.trees.j48.ClassifierTree",
324:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
325:       "weka.filters.AllFilter",
326:       "weka.classifiers.functions.VotedPerceptron",
327:       "weka.attributeSelection.WrapperSubsetEval",
328:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
329:       "weka.attributeSelection.OneRAttributeEval",
330:       "weka.classifiers.lazy.LWL",
331:       "weka.attributeSelection.InfoGainAttributeEval",
332:       "weka.estimators.Estimator",
333:       "weka.estimators.NormalEstimator",
334:       "weka.classifiers.meta.ClassificationViaRegression",
335:       "weka.classifiers.trees.M5P",
336:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
337:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
338:       "weka.classifiers.meta.Stacking",
339:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
340:       "weka.classifiers.functions.SimpleLinearRegression",
341:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
342:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
343:       "weka.classifiers.rules.OneR",
344:       "weka.classifiers.rules.PART",
345:       "weka.classifiers.rules.part.MakeDecList",
346:       "weka.classifiers.lazy.KStar",
347:       "weka.estimators.DiscreteEstimator",
348:       "weka.attributeSelection.ReliefFAttributeEval",
349:       "weka.classifiers.functions.supportVector.Puk",
350:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
351:       "weka.classifiers.meta.LogitBoost",
352:       "weka.classifiers.meta.MultiScheme",
353:       "weka.classifiers.functions.MultilayerPerceptron",
354:       "weka.filters.unsupervised.attribute.NominalToBinary",
355:       "weka.classifiers.functions.neural.SigmoidUnit",
356:       "weka.classifiers.functions.neural.LinearUnit",
357:       "weka.classifiers.meta.MultiClassClassifier",
358:       "weka.core.Javadoc",
359:       "weka.core.GlobalInfoJavadoc",
360:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
361:       "weka.attributeSelection.CorrelationAttributeEval",
362:       "weka.classifiers.trees.LMT",
363:       "weka.classifiers.functions.SimpleLogistic",
364:       "weka.classifiers.functions.supportVector.StringKernel",
365:       "weka.estimators.PoissonEstimator",
366:       "weka.estimators.KernelEstimator",
367:       "weka.core.ClassDiscovery",
368:       "weka.core.ClassCache",
369:       "weka.core.AllJavadoc",
370:       "weka.filters.SimpleFilter",
371:       "weka.filters.SimpleStreamFilter",
372:       "weka.filters.MultiFilter",
373:       "weka.classifiers.meta.RandomCommittee",
374:       "weka.classifiers.rules.DecisionTable",
375:       "weka.attributeSelection.GainRatioAttributeEval",
376:       "weka.classifiers.functions.supportVector.RBFKernel",
377:       "weka.core.MinkowskiDistance",
378:       "weka.classifiers.meta.AdaBoostM1",
379:       "weka.classifiers.functions.neural.NeuralConnection",
380:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
381:       "weka.classifiers.trees.RandomForest",
382:       "weka.core.matrix.Matrix"
383:     );
384:   }
385: }

[MASTER] 01:37:47.269 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
FileSystemHandling.shouldAllThrowIOExceptions();
TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate();
SparseInstance sparseInstance0 = new SparseInstance(640);
instances0.add((Instance) sparseInstance0);
naiveBayesMultinomialText0.buildClassifier(instances0);
String string0 = naiveBayesMultinomialText0.globalInfo();
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertEquals("Multinomial naive bayes for text data. Operates directly (and only) on String attributes. Other types of input attributes are accepted but ignored during training and classification", string0);
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);


[MASTER] 01:37:49.931 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 01:37:50.005 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/mosa/tests/s1015/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 12625
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:40:06.645 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:40:06.647 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:40:06.648 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 01:40:06.656 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2499
* Using seed 1015
* Starting evolution
[MASTER] 01:40:09.282 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 122s and 104 generations, 68121 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 18 tests with total length 110
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/mosa/tests/s1015/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 12627
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:43:37.407 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:43:37.424 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:43:37.425 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 01:43:37.579 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 01:43:37.605 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 01:43:37.608 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1729
* Using seed 1015
* Starting evolution
* Search finished after 122s and 320 generations, 98752 statements, best individual has fitness: 7912.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 45%
* Total number of goals: 370
* Number of covered goals: 166
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 42%
* Total number of goals: 713
* Number of covered goals: 298
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 72
* Number of covered goals: 32
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 45
* Number of covered goals: 44
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Generated 58 tests with total length 227
* Resulting test suite's coverage: 43% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
[MASTER] 01:46:35.752 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 01:46:36.321 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/mosa/tests/s1015/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 12628
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:53:11.232 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:53:11.236 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:53:11.237 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 01:53:11.255 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2699
* Using seed 1015
* Starting evolution
* Search finished after 137s and 31 generations, 21421 statements, best individual has fitness: 2824.0
[MASTER] 01:55:32.791 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 20 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 94%
* Total number of goals: 647
* Number of covered goals: 609
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 441
* Number of covered goals: 402
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 89%
* Total number of goals: 678
* Number of covered goals: 604
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 244
* Number of covered goals: 104
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 87%
* Total number of goals: 441
* Number of covered goals: 382
* Generated 194 tests with total length 2006
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 02:03:42.445 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 30%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/mosa/tests/s1015/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 12626
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1367
* Using seed 1015
* Starting evolution
* Search finished after 124s and 165 generations, 68442 statements, best individual has fitness: 3016.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 217
* Number of covered goals: 186
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 64%
* Total number of goals: 428
* Number of covered goals: 276
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 88%
* Total number of goals: 260
* Number of covered goals: 228
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 64%
* Total number of goals: 428
* Number of covered goals: 276
* Generated 80 tests with total length 228
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 74%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/mosa/tests/s1015/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 12625
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 02:10:43.591 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 02:10:43.593 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 02:10:43.593 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 02:10:43.853 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 02:10:44.369 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 02:10:44.374 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 02:10:46.233 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 02:10:46.255 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 02:10:46.255 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 02:10:46.256 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 02:10:46.256 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 02:10:46.256 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 02:10:46.256 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 02:10:46.257 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 02:10:46.257 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 02:10:46.303 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 02:10:46.317 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 3904
* Using seed 1015
* Starting evolution
[MASTER] 02:10:56.110 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 02:12:01.628 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 126s and 57 generations, 29547 statements, best individual has fitness: 16072.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 56%
* Total number of goals: 1378
* Number of covered goals: 767
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 42%
* Total number of goals: 809
* Number of covered goals: 338
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 58%
* Total number of goals: 424
* Number of covered goals: 246
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 19%
* Total number of goals: 278
* Number of covered goals: 54
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 95%
* Total number of goals: 103
* Number of covered goals: 98
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 92%
* Total number of goals: 103
* Number of covered goals: 95
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 38%
* Total number of goals: 809
* Number of covered goals: 310
* Generated 120 tests with total length 1401
* Resulting test suite's coverage: 49% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
[MASTER] 02:16:49.712 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 02:16:50.227 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 02:16:50.227 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 02:16:51.399 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 02:17:42.864 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/mosa/tests/s1015/107_weka/evosuite-tests
* Done!

* Computation finished
