* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaCharStream
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 20773
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaCharStream
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1743
* Using seed 1028
* Starting evolution
* Search finished after 126s and 40 generations, 18847 statements, best individual has fitness: 1944.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 81%
* Total number of goals: 239
* Number of covered goals: 193
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 85%
* Total number of goals: 216
* Number of covered goals: 184
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 39
* Number of covered goals: 39
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 87%
* Total number of goals: 974
* Number of covered goals: 845
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 89%
* Total number of goals: 36
* Number of covered goals: 32
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 85%
* Total number of goals: 216
* Number of covered goals: 184
* Generated 146 tests with total length 778
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 40%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'JavaCharStream_ESTest' to /home/ubuntu/termite/mosa/tests/s1028/19_jmca/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.SimpleNode
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 20771
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 20772
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 11:34:47.483 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 11:34:47.492 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 11:34:47.493 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 11:34:47.733 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.SimpleNode
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 360
* Using seed 1028
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 11:34:55.958 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 11:34:56.034 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 11:34:56.034 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 11:34:56.057 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 4855
* Using seed 1028
* Starting evolution
[MASTER] 11:35:00.361 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.soops.CEN4010.JMCA.JParser.SimpleNode.dump(Ljava/lang/String;Ljava/io/Writer;)V: Line 155
[MASTER] 11:35:00.362 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch com.soops.CEN4010.JMCA.JParser.SimpleNode.dump(Ljava/lang/String;Ljava/io/Writer;)V: I231 Branch 26 IFNULL L154 - false in context: com.soops.CEN4010.JMCA.JParser.SimpleNode:dump(Ljava/lang/String;Ljava/io/Writer;)V
[MASTER] 11:35:33.489 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager.jjMoveStringLiteralDfa0_0()I: I4 Branch 136 TABLESWITCH L159 Case 120 - true
[MASTER] 11:35:33.500 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager.jjMoveStringLiteralDfa0_0()I: I4 Branch 136 TABLESWITCH L159 Case 120 - true in context: 
* Search finished after 123s and 154 generations, 62613 statements, best individual has fitness: 248.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 62
* Number of covered goals: 62
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 67
* Number of covered goals: 64
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 87%
* Total number of goals: 121
* Number of covered goals: 105
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 47%
* Total number of goals: 17
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 67
* Number of covered goals: 64
* Generated 40 tests with total length 188
* Resulting test suite's coverage: 92% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 132s and 40 generations, 25654 statements, best individual has fitness: 19168.0
[MASTER] 11:37:12.070 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 14 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 44%
* Total number of goals: 981
* Number of covered goals: 432
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 53%
* Total number of goals: 1707
* Number of covered goals: 912
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 41%
* Total number of goals: 434
* Number of covered goals: 177
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 4
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 53%
* Total number of goals: 1707
* Number of covered goals: 912
* Generated 98 tests with total length 823
* Resulting test suite's coverage: 51% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
[MASTER] 11:38:15.669 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<77> but was:<76>
[MASTER] 11:38:15.669 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("\"false\"");
StringReader stringReader1 = new StringReader(".4zKmlO;bqP|PYJPm");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 69, 69);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
javaCharStream0.readChar();
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.getNextToken();
assertEquals(77, javaCharStream0.getBeginColumn());
assertEquals(79, javaCharStream0.getColumn());


[MASTER] 11:38:16.200 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<2> but was:<4>
[MASTER] 11:38:16.201 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("$Z8M/AG L$f");
stringReader0.markSupported();
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1621, 1621);
javaCharStream0.readChar();
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
javaCharStream0.readChar();
javaParserTokenManager0.getNextToken();
JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager1.getNextToken();
javaParserTokenManager1.getNextToken();
javaParserTokenManager0.getNextToken();
assertEquals(2, javaCharStream0.bufpos);
assertEquals(1629, javaCharStream0.getBeginColumn());


[MASTER] 11:38:16.455 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<-2885> but was:<-2886>
[MASTER] 11:38:16.455 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("T,3k%xF");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 90, (-2888));
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager0.getNextToken();
javaParserTokenManager1.getNextToken();
JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager1.getNextToken();
assertEquals((-2886), javaCharStream0.getBeginColumn());
assertEquals((-2885), javaCharStream0.getEndColumn());


[MASTER] 11:38:17.177 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<-2175> but was:<-2176>
[MASTER] 11:38:17.178 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("7y~uvKV iOZuju{");
StringReader stringReader1 = new StringReader("7y~uvKV iOZuju{");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 868, (-2177));
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager0.getNextToken();
Token token0 = javaParserTokenManager0.getNextToken();
assertEquals((-2175), javaCharStream0.getBeginColumn());
assertEquals("~", token0.toString());


[MASTER] 11:38:17.519 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<5>
[MASTER] 11:38:17.519 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("FNgJ>$eW)<3/YFFLq#:");
StringReader stringReader1 = new StringReader("-3XyU[6?");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.MoreLexicalActions();
assertEquals(0, javaCharStream0.bufpos);
assertEquals(7, javaCharStream0.getColumn());


* Writing JUnit test case 'JavaParserTokenManager_ESTest' to /home/ubuntu/termite/mosa/tests/s1028/19_jmca/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 86%
* Compiling and checking tests
* Writing JUnit test case 'SimpleNode_ESTest' to /home/ubuntu/termite/mosa/tests/s1028/19_jmca/evosuite-tests
* Done!

* Computation finished
