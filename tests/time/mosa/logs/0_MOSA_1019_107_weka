* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13431
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 04:23:14.413 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:23:14.446 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:23:14.447 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 04:23:14.465 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2499
* Using seed 1019
* Starting evolution
[MASTER] 04:23:17.722 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 04:23:29.203 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: Line 1149
[MASTER] 04:23:29.204 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I175 Branch 190 IFNE L1142 - true
[MASTER] 04:23:29.207 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I175 Branch 190 IFNE L1142 - true in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
* Search finished after 121s and 100 generations, 63414 statements, best individual has fitness: 16712.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 19 tests with total length 87
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/mosa/tests/s1019/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13434
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13433
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1367
* Using seed 1019
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 04:32:55.825 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:32:55.866 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:32:55.867 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 04:32:58.513 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 04:32:59.286 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 04:32:59.300 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2767
* Using seed 1019
* Starting evolution
[MASTER] 04:33:04.010 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 124s and 157 generations, 79176 statements, best individual has fitness: 3008.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 217
* Number of covered goals: 187
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 283
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 83%
* Total number of goals: 260
* Number of covered goals: 215
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 282
* Generated 67 tests with total length 242
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 124s and 184 generations, 72526 statements, best individual has fitness: 12760.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 36%
* Total number of goals: 705
* Number of covered goals: 251
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 109
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 55%
* Total number of goals: 993
* Number of covered goals: 542
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 25%
* Total number of goals: 93
* Number of covered goals: 23
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 109
* Generated 64 tests with total length 399
* Resulting test suite's coverage: 43% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 69%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/mosa/tests/s1019/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 23%
* Compiling and checking tests
[MASTER] 04:35:47.313 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 04:35:47.916 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/mosa/tests/s1019/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13429
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13426
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13430
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 04:49:21.599 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:49:21.613 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:49:21.614 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 04:49:21.783 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 04:49:21.796 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 04:49:21.805 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 04:49:22.086 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:49:22.089 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:49:22.089 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 04:49:22.176 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1729
* Using seed 1019
* Starting evolution
* Total number of test goals for MOSA: 2699
* Using seed 1019
* Starting evolution
[MASTER] 04:49:24.065 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 04:49:24.065 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 04:49:24.083 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 04:49:24.168 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:49:24.177 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:49:24.177 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1412
* Using seed 1019
* Starting evolution
[MASTER] 04:49:57.736 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 04:50:07.388 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 04:50:07.388 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Search finished after 121s and 312 generations, 92572 statements, best individual has fitness: 9072.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 41%
* Total number of goals: 370
* Number of covered goals: 153
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 28%
* Total number of goals: 242
* Number of covered goals: 67
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 27%
* Total number of goals: 713
* Number of covered goals: 194
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 72
* Number of covered goals: 32
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 45
* Number of covered goals: 43
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 28%
* Total number of goals: 242
* Number of covered goals: 67
* Generated 63 tests with total length 196
* Resulting test suite's coverage: 35% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 122s and 254 generations, 93571 statements, best individual has fitness: 1512.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 91%
* Total number of goals: 338
* Number of covered goals: 308
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 85%
* Total number of goals: 194
* Number of covered goals: 164
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 476
* Number of covered goals: 444
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 46%
* Total number of goals: 112
* Number of covered goals: 51
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 83%
* Total number of goals: 194
* Number of covered goals: 161
* Generated 68 tests with total length 452
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 138s and 26 generations, 23438 statements, best individual has fitness: 2248.0
[MASTER] 04:51:43.966 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 20 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 647
* Number of covered goals: 630
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 95%
* Total number of goals: 441
* Number of covered goals: 420
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 25
* Number of covered goals: 25
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 678
* Number of covered goals: 624
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 41%
* Total number of goals: 244
* Number of covered goals: 99
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 96%
* Total number of goals: 124
* Number of covered goals: 119
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 124
* Number of covered goals: 119
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 93%
* Total number of goals: 441
* Number of covered goals: 409
* Generated 194 tests with total length 2655
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 11%
* Compiling and checking tests
[MASTER] 04:52:05.756 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 04:52:06.227 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/mosa/tests/s1019/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 51%
* Compiling and checking tests
[MASTER] 04:53:58.221 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_28_1575521638199/weka/classifiers/bayes/NaiveBayesMultinomialText_28_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_28_1575521638199/weka/classifiers/bayes/NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding.java]]
[MASTER] 04:53:58.221 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:53:58.221 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:53:58.224 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 04:53:58.224 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_28_1575521638199/weka/classifiers/bayes/NaiveBayesMultinomialText_28_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 04:53:58 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.Random;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_28_tmp__ESTest extends NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=2.964079258365723
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       naiveBayesMultinomialText0.setUseStopList(false);
28:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
29:       naiveBayesMultinomialText0.m_inputVector = null;
30:       naiveBayesMultinomialText0.setNormalizeDocLength(false);
31:       naiveBayesMultinomialText0.getMinWordFrequency();
32:       double[] doubleArray0 = new double[4];
33:       doubleArray0[0] = 3.0;
34:       String[] stringArray0 = new String[8];
35:       stringArray0[0] = "weka.classifiers.bayes.NaiveBayesMultinomialText";
36:       stringArray0[1] = "-stopwords <file>";
37:       stringArray0[2] = "-tokenizer <spec>";
38:       stringArray0[3] = "@{dw>mQ5>>4_bXaP,9";
39:       stringArray0[4] = "";
40:       stringArray0[5] = "`:=<4";
41:       stringArray0[6] = "";
42:       stringArray0[7] = "/M";
43:       naiveBayesMultinomialText0.setOptions(stringArray0);
44:       naiveBayesMultinomialText0.lowercaseTokensTipText();
45:       naiveBayesMultinomialText0.setLNorm(0.0);
46:       naiveBayesMultinomialText0.getPeriodicPruning();
47:       naiveBayesMultinomialText0.listOptions();
48:       naiveBayesMultinomialText0.setOptions(stringArray0);
49:       naiveBayesMultinomialText0.getLNorm();
50:       Random.setNextRandom(0);
51:   }
52: }
RegularFileObject[/tmp/EvoSuite_28_1575521638199/weka/classifiers/bayes/NaiveBayesMultinomialText_28_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 04:53:58 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.classifiers.AbstractClassifier",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.OptionHandler",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.core.WekaException",
96:       "weka.core.logging.Logger$Level",
97:       "weka.classifiers.Classifier",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.Capabilities$Capability",
100:       "weka.core.SparseInstance",
101:       "weka.core.DenseInstance",
102:       "org.pentaho.packageManagement.PackageManager",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.core.tokenizers.WordTokenizer",
105:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "weka.core.stemmers.SnowballStemmer",
108:       "weka.classifiers.Evaluation",
109:       "weka.classifiers.functions.supportVector.Kernel",
110:       "weka.core.WekaPackageManager",
111:       "org.bounce.net.DefaultAuthenticator",
112:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
113:       "weka.core.Option",
114:       "weka.core.stemmers.NullStemmer",
115:       "weka.classifiers.functions.SGDText",
116:       "weka.core.RelationalLocator",
117:       "weka.filters.Sourcable",
118:       "weka.core.Utils",
119:       "weka.core.tokenizers.Tokenizer",
120:       "weka.core.Attribute",
121:       "weka.core.NoSupportForMissingValuesException",
122:       "weka.core.Stopwords",
123:       "weka.classifiers.UpdateableClassifier",
124:       "weka.core.tokenizers.AlphabeticTokenizer",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
126:       "weka.core.FastVector",
127:       "weka.core.MultiInstanceCapabilitiesHandler",
128:       "weka.core.Copyable",
129:       "weka.core.Capabilities",
130:       "weka.core.BinarySparseInstance",
131:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
132:       "weka.core.AttributeLocator",
133:       "weka.core.UnassignedDatasetException",
134:       "weka.classifiers.RandomizableClassifier",
135:       "weka.core.SerializedObject",
136:       "weka.clusterers.UpdateableClusterer",
137:       "weka.core.Summarizable",
138:       "weka.core.RevisionUtils",
139:       "org.pentaho.packageManagement.PackageManager$1",
140:       "weka.core.Instance",
141:       "weka.core.Drawable",
142:       "weka.core.ProtectedProperties",
143:       "weka.core.matrix.Matrix",
144:       "weka.core.StringLocator",
145:       "weka.core.AttributeStats",
146:       "weka.core.WeightedInstancesHandler",
147:       "weka.core.CapabilitiesHandler",
148:       "weka.core.Randomizable",
149:       "weka.core.AbstractInstance",
150:       "weka.core.Instances",
151:       "weka.core.SelectedTag",
152:       "org.pentaho.packageManagement.DefaultPackage",
153:       "weka.core.UnassignedClassException",
154:       "weka.core.Version",
155:       "weka.filters.AllFilter",
156:       "weka.core.UnsupportedAttributeTypeException",
157:       "weka.classifiers.Sourcable",
158:       "weka.core.RevisionHandler",
159:       "weka.classifiers.evaluation.output.prediction.PlainText",
160:       "weka.core.xml.XMLSerialization",
161:       "weka.classifiers.xml.XMLClassifier",
162:       "weka.filters.Filter",
163:       "weka.core.Tag"
164:     );
165:   } 
166: 
167:   private static void resetClasses() {
168:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding.class.getClassLoader()); 
169: 
170:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
171:       "weka.classifiers.AbstractClassifier",
172:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
173:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
174:       "weka.core.Capabilities$Capability",
175:       "weka.core.tokenizers.Tokenizer",
176:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
177:       "weka.core.tokenizers.WordTokenizer",
178:       "weka.core.stemmers.NullStemmer",
179:       "weka.classifiers.RandomizableClassifier",
180:       "weka.core.Tag",
181:       "weka.classifiers.functions.SGDText",
182:       "weka.core.Stopwords",
183:       "weka.core.Utils",
184:       "weka.core.Option",
185:       "weka.classifiers.Evaluation",
186:       "weka.core.stemmers.SnowballStemmer",
187:       "weka.core.AbstractInstance",
188:       "weka.core.SparseInstance",
189:       "weka.attributeSelection.ASEvaluation",
190:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
191:       "weka.attributeSelection.PrincipalComponents",
192:       "weka.classifiers.SingleClassifierEnhancer",
193:       "weka.classifiers.misc.InputMappedClassifier",
194:       "weka.classifiers.rules.ZeroR",
195:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
196:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
197:       "weka.core.neighboursearch.balltrees.BallNode",
198:       "weka.core.RevisionUtils",
199:       "weka.core.neighboursearch.NearestNeighbourSearch",
200:       "weka.core.neighboursearch.CoverTree",
201:       "weka.core.NormalizableDistance",
202:       "weka.core.EuclideanDistance",
203:       "weka.core.Range",
204:       "weka.core.Instances",
205:       "weka.filters.Filter",
206:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
207:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
208:       "weka.classifiers.functions.supportVector.Kernel",
209:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
210:       "weka.core.UnassignedDatasetException",
211:       "weka.core.BinarySparseInstance",
212:       "weka.core.Attribute",
213:       "weka.core.ProtectedProperties",
214:       "weka.core.DenseInstance",
215:       "weka.classifiers.bayes.BayesNet",
216:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
217:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
218:       "weka.classifiers.bayes.net.search.local.K2",
219:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
220:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
221:       "weka.core.Capabilities",
222:       "org.pentaho.packageManagement.PackageManager",
223:       "org.pentaho.packageManagement.DefaultPackageManager",
224:       "weka.core.Version",
225:       "weka.core.Environment",
226:       "weka.core.WekaPackageManager",
227:       "weka.core.neighboursearch.BallTree",
228:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
229:       "weka.core.neighboursearch.balltrees.BallSplitter",
230:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
231:       "weka.core.SerializedObject",
232:       "weka.core.TestInstances",
233:       "weka.classifiers.bayes.net.BIFReader",
234:       "weka.classifiers.lazy.IBk",
235:       "weka.core.neighboursearch.LinearNNSearch",
236:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
237:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
238:       "weka.classifiers.misc.SerializedClassifier",
239:       "weka.core.neighboursearch.KDTree",
240:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
241:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
242:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
243:       "weka.classifiers.meta.CostSensitiveClassifier",
244:       "weka.classifiers.CostMatrix",
245:       "weka.core.stemmers.LovinsStemmer",
246:       "weka.core.tokenizers.AlphabeticTokenizer",
247:       "weka.core.stemmers.IteratedLovinsStemmer",
248:       "weka.filters.supervised.attribute.Discretize",
249:       "weka.core.converters.ArffLoader$ArffReader",
250:       "weka.filters.AllFilter",
251:       "weka.core.WekaException",
252:       "weka.core.UnsupportedAttributeTypeException",
253:       "weka.core.FindWithCapabilities",
254:       "weka.core.SingleIndex",
255:       "weka.core.ClassDiscovery",
256:       "weka.classifiers.trees.RandomTree",
257:       "weka.classifiers.bayes.NaiveBayes",
258:       "weka.estimators.Estimator",
259:       "weka.estimators.NormalEstimator",
260:       "weka.core.UnassignedClassException",
261:       "weka.classifiers.lazy.LWL",
262:       "weka.classifiers.trees.DecisionStump",
263:       "weka.attributeSelection.OneRAttributeEval",
264:       "weka.classifiers.functions.Logistic",
265:       "weka.classifiers.bayes.NaiveBayesMultinomial",
266:       "weka.attributeSelection.InfoGainAttributeEval",
267:       "weka.classifiers.trees.m5.M5Base",
268:       "weka.classifiers.rules.M5Rules",
269:       "weka.classifiers.functions.LinearRegression",
270:       "weka.estimators.DiscreteEstimator",
271:       "weka.classifiers.rules.OneR",
272:       "weka.classifiers.lazy.KStar",
273:       "weka.classifiers.meta.MultiClassClassifier",
274:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
275:       "weka.attributeSelection.WrapperSubsetEval",
276:       "weka.core.WekaEnumeration",
277:       "weka.classifiers.functions.supportVector.CachedKernel",
278:       "weka.classifiers.functions.supportVector.PolyKernel",
279:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
280:       "weka.classifiers.functions.SMOreg",
281:       "weka.classifiers.functions.supportVector.RegOptimizer",
282:       "weka.classifiers.functions.supportVector.RegSMO",
283:       "weka.classifiers.functions.supportVector.RegSMOImproved",
284:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
285:       "weka.classifiers.functions.SGD",
286:       "weka.classifiers.MultipleClassifiersCombiner",
287:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
288:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
289:       "weka.classifiers.meta.Stacking",
290:       "weka.core.tokenizers.NGramTokenizer",
291:       "weka.classifiers.trees.LMT",
292:       "weka.core.Attribute$1",
293:       "weka.classifiers.rules.PART",
294:       "weka.classifiers.functions.GaussianProcesses",
295:       "weka.classifiers.functions.SMO",
296:       "weka.attributeSelection.GainRatioAttributeEval",
297:       "weka.core.TechnicalInformation",
298:       "weka.core.TechnicalInformation$Type",
299:       "weka.core.TechnicalInformation$Field",
300:       "weka.classifiers.IteratedSingleClassifierEnhancer",
301:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
302:       "weka.classifiers.meta.AdaBoostM1",
303:       "weka.core.AttributeStats",
304:       "weka.classifiers.meta.FilteredClassifier",
305:       "weka.filters.supervised.attribute.AttributeSelection",
306:       "weka.attributeSelection.AttributeSelection",
307:       "weka.attributeSelection.CfsSubsetEval",
308:       "weka.attributeSelection.ASSearch",
309:       "weka.attributeSelection.GreedyStepwise",
310:       "weka.attributeSelection.BestFirst",
311:       "weka.classifiers.trees.J48",
312:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
313:       "weka.classifiers.meta.AttributeSelectedClassifier",
314:       "weka.classifiers.rules.DecisionTable",
315:       "weka.classifiers.trees.j48.ClassifierTree",
316:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
317:       "weka.classifiers.functions.VotedPerceptron",
318:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
319:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.meta.Bagging",
321:       "weka.classifiers.trees.REPTree",
322:       "weka.estimators.PoissonEstimator",
323:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
324:       "weka.classifiers.meta.MultiScheme",
325:       "weka.classifiers.meta.LogitBoost",
326:       "weka.classifiers.meta.AdditiveRegression",
327:       "weka.classifiers.meta.CVParameterSelection",
328:       "weka.core.FastVector",
329:       "weka.classifiers.functions.supportVector.RBFKernel",
330:       "weka.classifiers.rules.JRip",
331:       "weka.classifiers.rules.part.MakeDecList",
332:       "weka.classifiers.functions.SimpleLogistic",
333:       "weka.core.Javadoc",
334:       "weka.core.TechnicalInformationHandlerJavadoc",
335:       "weka.core.matrix.Matrix",
336:       "weka.estimators.MahalanobisEstimator",
337:       "weka.classifiers.meta.ClassificationViaRegression",
338:       "weka.classifiers.trees.M5P",
339:       "weka.classifiers.functions.supportVector.Puk",
340:       "weka.classifiers.meta.Vote",
341:       "weka.attributeSelection.ReliefFAttributeEval",
342:       "weka.attributeSelection.CorrelationAttributeEval",
343:       "weka.classifiers.meta.RegressionByDiscretization",
344:       "weka.filters.unsupervised.attribute.Discretize",
345:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
346:       "weka.estimators.KernelEstimator",
347:       "weka.classifiers.meta.RandomCommittee",
348:       "weka.classifiers.functions.supportVector.StringKernel",
349:       "weka.filters.SimpleFilter",
350:       "weka.filters.SimpleStreamFilter",
351:       "weka.filters.MultiFilter",
352:       "weka.classifiers.functions.MultilayerPerceptron",
353:       "weka.filters.unsupervised.attribute.NominalToBinary",
354:       "weka.classifiers.functions.neural.SigmoidUnit",
355:       "weka.classifiers.functions.neural.LinearUnit",
356:       "weka.classifiers.trees.RandomForest",
357:       "weka.core.SelectedTag",
358:       "weka.classifiers.functions.SimpleLinearRegression",
359:       "weka.core.stemmers.Stemming"
360:     );
361:   }
362: }

[MASTER] 04:53:58.225 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setUseStopList(false);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.m_inputVector = null;
naiveBayesMultinomialText0.setNormalizeDocLength(false);
naiveBayesMultinomialText0.getMinWordFrequency();
double[] doubleArray0 = new double[4];
doubleArray0[0] = 3.0;
String[] stringArray0 = new String[8];
stringArray0[0] = "weka.classifiers.bayes.NaiveBayesMultinomialText";
stringArray0[1] = "-stopwords <file>";
stringArray0[2] = "-tokenizer <spec>";
stringArray0[3] = "@{dw>mQ5>>4_bXaP,9";
stringArray0[4] = "";
stringArray0[5] = "`:=<4";
stringArray0[6] = "";
stringArray0[7] = "/M";
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.setLNorm(0.0);
naiveBayesMultinomialText0.getPeriodicPruning();
naiveBayesMultinomialText0.listOptions();
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.getLNorm();
Random.setNextRandom(0);

[MASTER] 04:53:58.270 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_30_1575521638246/weka/classifiers/bayes/NaiveBayesMultinomialText_30_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_30_1575521638246/weka/classifiers/bayes/NaiveBayesMultinomialText_30_tmp__ESTest_scaffolding.java]]
[MASTER] 04:53:58.270 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:53:58.270 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:53:58.270 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 04:53:58.270 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 04:53:58.270 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 04:53:58.271 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_30_1575521638246/weka/classifiers/bayes/NaiveBayesMultinomialText_30_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 04:53:58 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.io.File;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import java.util.Map;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_30_tmp__ESTest extends NaiveBayesMultinomialText_30_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=0.9623351446188083
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
30:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
31:       naiveBayesMultinomialText0.setStopwords((File) null);
32:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
33:       assertFalse(naiveBayesMultinomialText0.getUseStopList());
34:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
35:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
36:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
37:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
38:   }
39: }
RegularFileObject[/tmp/EvoSuite_30_1575521638246/weka/classifiers/bayes/NaiveBayesMultinomialText_30_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 04:53:58 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_30_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_30_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.classifiers.AbstractClassifier",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.OptionHandler",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.core.WekaException",
96:       "weka.core.logging.Logger$Level",
97:       "weka.classifiers.Classifier",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.Capabilities$Capability",
100:       "weka.core.SparseInstance",
101:       "weka.core.DenseInstance",
102:       "org.pentaho.packageManagement.PackageManager",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.core.tokenizers.WordTokenizer",
105:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "weka.core.stemmers.SnowballStemmer",
108:       "weka.classifiers.Evaluation",
109:       "weka.classifiers.functions.supportVector.Kernel",
110:       "weka.core.WekaPackageManager",
111:       "org.bounce.net.DefaultAuthenticator",
112:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
113:       "weka.core.Option",
114:       "weka.core.stemmers.NullStemmer",
115:       "weka.classifiers.functions.SGDText",
116:       "weka.core.RelationalLocator",
117:       "weka.filters.Sourcable",
118:       "weka.core.Utils",
119:       "weka.core.tokenizers.Tokenizer",
120:       "weka.core.Attribute",
121:       "weka.core.NoSupportForMissingValuesException",
122:       "weka.core.Stopwords",
123:       "weka.classifiers.UpdateableClassifier",
124:       "weka.core.tokenizers.AlphabeticTokenizer",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
126:       "weka.core.FastVector",
127:       "weka.core.MultiInstanceCapabilitiesHandler",
128:       "weka.core.Copyable",
129:       "weka.core.Capabilities",
130:       "weka.core.BinarySparseInstance",
131:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
132:       "weka.core.AttributeLocator",
133:       "weka.core.UnassignedDatasetException",
134:       "weka.classifiers.RandomizableClassifier",
135:       "weka.core.SerializedObject",
136:       "weka.clusterers.UpdateableClusterer",
137:       "weka.core.Summarizable",
138:       "weka.core.RevisionUtils",
139:       "org.pentaho.packageManagement.PackageManager$1",
140:       "weka.core.Instance",
141:       "weka.core.Drawable",
142:       "weka.core.ProtectedProperties",
143:       "weka.core.matrix.Matrix",
144:       "weka.core.StringLocator",
145:       "weka.core.AttributeStats",
146:       "weka.core.WeightedInstancesHandler",
147:       "weka.core.CapabilitiesHandler",
148:       "weka.core.Randomizable",
149:       "weka.core.AbstractInstance",
150:       "weka.core.Instances",
151:       "weka.core.SelectedTag",
152:       "org.pentaho.packageManagement.DefaultPackage",
153:       "weka.core.UnassignedClassException",
154:       "weka.core.Version",
155:       "weka.filters.AllFilter",
156:       "weka.core.UnsupportedAttributeTypeException",
157:       "weka.classifiers.Sourcable",
158:       "weka.core.RevisionHandler",
159:       "weka.classifiers.evaluation.output.prediction.PlainText",
160:       "weka.core.xml.XMLSerialization",
161:       "weka.classifiers.xml.XMLClassifier",
162:       "weka.filters.Filter",
163:       "weka.core.Tag"
164:     );
165:   } 
166: 
167:   private static void resetClasses() {
168:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_30_tmp__ESTest_scaffolding.class.getClassLoader()); 
169: 
170:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
171:       "weka.classifiers.AbstractClassifier",
172:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
173:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
174:       "weka.core.Capabilities$Capability",
175:       "weka.core.tokenizers.Tokenizer",
176:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
177:       "weka.core.tokenizers.WordTokenizer",
178:       "weka.core.stemmers.NullStemmer",
179:       "weka.classifiers.RandomizableClassifier",
180:       "weka.core.Tag",
181:       "weka.classifiers.functions.SGDText",
182:       "weka.core.Stopwords",
183:       "weka.core.Utils",
184:       "weka.core.Option",
185:       "weka.classifiers.Evaluation",
186:       "weka.core.stemmers.SnowballStemmer",
187:       "weka.core.AbstractInstance",
188:       "weka.core.SparseInstance",
189:       "weka.attributeSelection.ASEvaluation",
190:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
191:       "weka.attributeSelection.PrincipalComponents",
192:       "weka.classifiers.SingleClassifierEnhancer",
193:       "weka.classifiers.misc.InputMappedClassifier",
194:       "weka.classifiers.rules.ZeroR",
195:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
196:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
197:       "weka.core.neighboursearch.balltrees.BallNode",
198:       "weka.core.RevisionUtils",
199:       "weka.core.neighboursearch.NearestNeighbourSearch",
200:       "weka.core.neighboursearch.CoverTree",
201:       "weka.core.NormalizableDistance",
202:       "weka.core.EuclideanDistance",
203:       "weka.core.Range",
204:       "weka.core.Instances",
205:       "weka.filters.Filter",
206:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
207:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
208:       "weka.classifiers.functions.supportVector.Kernel",
209:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
210:       "weka.core.UnassignedDatasetException",
211:       "weka.core.BinarySparseInstance",
212:       "weka.core.Attribute",
213:       "weka.core.ProtectedProperties",
214:       "weka.core.DenseInstance",
215:       "weka.classifiers.bayes.BayesNet",
216:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
217:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
218:       "weka.classifiers.bayes.net.search.local.K2",
219:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
220:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
221:       "weka.core.Capabilities",
222:       "org.pentaho.packageManagement.PackageManager",
223:       "org.pentaho.packageManagement.DefaultPackageManager",
224:       "weka.core.Version",
225:       "weka.core.Environment",
226:       "weka.core.WekaPackageManager",
227:       "weka.core.neighboursearch.BallTree",
228:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
229:       "weka.core.neighboursearch.balltrees.BallSplitter",
230:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
231:       "weka.core.SerializedObject",
232:       "weka.core.TestInstances",
233:       "weka.classifiers.bayes.net.BIFReader",
234:       "weka.classifiers.lazy.IBk",
235:       "weka.core.neighboursearch.LinearNNSearch",
236:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
237:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
238:       "weka.classifiers.misc.SerializedClassifier",
239:       "weka.core.neighboursearch.KDTree",
240:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
241:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
242:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
243:       "weka.classifiers.meta.CostSensitiveClassifier",
244:       "weka.classifiers.CostMatrix",
245:       "weka.core.stemmers.LovinsStemmer",
246:       "weka.core.tokenizers.AlphabeticTokenizer",
247:       "weka.core.stemmers.IteratedLovinsStemmer",
248:       "weka.filters.supervised.attribute.Discretize",
249:       "weka.core.converters.ArffLoader$ArffReader",
250:       "weka.filters.AllFilter",
251:       "weka.core.WekaException",
252:       "weka.core.UnsupportedAttributeTypeException",
253:       "weka.core.FindWithCapabilities",
254:       "weka.core.SingleIndex",
255:       "weka.core.ClassDiscovery",
256:       "weka.classifiers.trees.RandomTree",
257:       "weka.classifiers.bayes.NaiveBayes",
258:       "weka.estimators.Estimator",
259:       "weka.estimators.NormalEstimator",
260:       "weka.core.UnassignedClassException",
261:       "weka.classifiers.lazy.LWL",
262:       "weka.classifiers.trees.DecisionStump",
263:       "weka.attributeSelection.OneRAttributeEval",
264:       "weka.classifiers.functions.Logistic",
265:       "weka.classifiers.bayes.NaiveBayesMultinomial",
266:       "weka.attributeSelection.InfoGainAttributeEval",
267:       "weka.classifiers.trees.m5.M5Base",
268:       "weka.classifiers.rules.M5Rules",
269:       "weka.classifiers.functions.LinearRegression",
270:       "weka.estimators.DiscreteEstimator",
271:       "weka.classifiers.rules.OneR",
272:       "weka.classifiers.lazy.KStar",
273:       "weka.classifiers.meta.MultiClassClassifier",
274:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
275:       "weka.attributeSelection.WrapperSubsetEval",
276:       "weka.core.WekaEnumeration",
277:       "weka.classifiers.functions.supportVector.CachedKernel",
278:       "weka.classifiers.functions.supportVector.PolyKernel",
279:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
280:       "weka.classifiers.functions.SMOreg",
281:       "weka.classifiers.functions.supportVector.RegOptimizer",
282:       "weka.classifiers.functions.supportVector.RegSMO",
283:       "weka.classifiers.functions.supportVector.RegSMOImproved",
284:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
285:       "weka.classifiers.functions.SGD",
286:       "weka.classifiers.MultipleClassifiersCombiner",
287:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
288:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
289:       "weka.classifiers.meta.Stacking",
290:       "weka.core.tokenizers.NGramTokenizer",
291:       "weka.classifiers.trees.LMT",
292:       "weka.core.Attribute$1",
293:       "weka.classifiers.rules.PART",
294:       "weka.classifiers.functions.GaussianProcesses",
295:       "weka.classifiers.functions.SMO",
296:       "weka.attributeSelection.GainRatioAttributeEval",
297:       "weka.core.TechnicalInformation",
298:       "weka.core.TechnicalInformation$Type",
299:       "weka.core.TechnicalInformation$Field",
300:       "weka.classifiers.IteratedSingleClassifierEnhancer",
301:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
302:       "weka.classifiers.meta.AdaBoostM1",
303:       "weka.core.AttributeStats",
304:       "weka.classifiers.meta.FilteredClassifier",
305:       "weka.filters.supervised.attribute.AttributeSelection",
306:       "weka.attributeSelection.AttributeSelection",
307:       "weka.attributeSelection.CfsSubsetEval",
308:       "weka.attributeSelection.ASSearch",
309:       "weka.attributeSelection.GreedyStepwise",
310:       "weka.attributeSelection.BestFirst",
311:       "weka.classifiers.trees.J48",
312:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
313:       "weka.classifiers.meta.AttributeSelectedClassifier",
314:       "weka.classifiers.rules.DecisionTable",
315:       "weka.classifiers.trees.j48.ClassifierTree",
316:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
317:       "weka.classifiers.functions.VotedPerceptron",
318:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
319:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.meta.Bagging",
321:       "weka.classifiers.trees.REPTree",
322:       "weka.estimators.PoissonEstimator",
323:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
324:       "weka.classifiers.meta.MultiScheme",
325:       "weka.classifiers.meta.LogitBoost",
326:       "weka.classifiers.meta.AdditiveRegression",
327:       "weka.classifiers.meta.CVParameterSelection",
328:       "weka.core.FastVector",
329:       "weka.classifiers.functions.supportVector.RBFKernel",
330:       "weka.classifiers.rules.JRip",
331:       "weka.classifiers.rules.part.MakeDecList",
332:       "weka.classifiers.functions.SimpleLogistic",
333:       "weka.core.Javadoc",
334:       "weka.core.TechnicalInformationHandlerJavadoc",
335:       "weka.core.matrix.Matrix",
336:       "weka.estimators.MahalanobisEstimator",
337:       "weka.classifiers.meta.ClassificationViaRegression",
338:       "weka.classifiers.trees.M5P",
339:       "weka.classifiers.functions.supportVector.Puk",
340:       "weka.classifiers.meta.Vote",
341:       "weka.attributeSelection.ReliefFAttributeEval",
342:       "weka.attributeSelection.CorrelationAttributeEval",
343:       "weka.classifiers.meta.RegressionByDiscretization",
344:       "weka.filters.unsupervised.attribute.Discretize",
345:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
346:       "weka.estimators.KernelEstimator",
347:       "weka.classifiers.meta.RandomCommittee",
348:       "weka.classifiers.functions.supportVector.StringKernel",
349:       "weka.filters.SimpleFilter",
350:       "weka.filters.SimpleStreamFilter",
351:       "weka.filters.MultiFilter",
352:       "weka.classifiers.functions.MultilayerPerceptron",
353:       "weka.filters.unsupervised.attribute.NominalToBinary",
354:       "weka.classifiers.functions.neural.SigmoidUnit",
355:       "weka.classifiers.functions.neural.LinearUnit",
356:       "weka.classifiers.trees.RandomForest",
357:       "weka.core.SelectedTag",
358:       "weka.classifiers.functions.SimpleLinearRegression",
359:       "weka.core.stemmers.Stemming"
360:     );
361:   }
362: }

[MASTER] 04:53:58.271 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
naiveBayesMultinomialText0.setStopwords((File) null);
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getUseStopList());
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());


[MASTER] 04:53:58.570 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_42_1575521638531/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_42_1575521638531/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding.java]]
[MASTER] 04:53:58.570 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:53:58.570 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:53:58.570 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 04:53:58.570 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 04:53:58.570 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 04:53:58.571 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_42_1575521638531/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 04:53:58 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import java.util.Map;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.core.Capabilities;
19: import weka.core.Instances;
20: import weka.core.TestInstances;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class NaiveBayesMultinomialText_42_tmp__ESTest extends NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding {
24: 
25:   /**
26:   //Test case number: 0
27:   /*Coverage entropy=1.8603861284644434
28:   */
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
33:       TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
34:       Instances instances0 = testInstances0.generate();
35:       naiveBayesMultinomialText0.buildClassifier(instances0);
36:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
37:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
38:       // Undeclared exception!
39:       try { 
40:         naiveBayesMultinomialText0.toString();
41:         fail("Expecting exception: NullPointerException");
42:       
43:       } catch(NullPointerException e) {
44:          //
45:          // no message in exception (getMessage() returned null)
46:          //
47:          verifyException("weka.classifiers.bayes.NaiveBayesMultinomialText", e);
48:       }
49:   }
50: }
RegularFileObject[/tmp/EvoSuite_42_1575521638531/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 04:53:58 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.classifiers.AbstractClassifier",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.OptionHandler",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.core.WekaException",
96:       "weka.core.logging.Logger$Level",
97:       "weka.classifiers.Classifier",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.Capabilities$Capability",
100:       "weka.core.SparseInstance",
101:       "weka.core.DenseInstance",
102:       "org.pentaho.packageManagement.PackageManager",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.core.tokenizers.WordTokenizer",
105:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "weka.core.stemmers.SnowballStemmer",
108:       "weka.classifiers.Evaluation",
109:       "weka.classifiers.functions.supportVector.Kernel",
110:       "weka.core.WekaPackageManager",
111:       "org.bounce.net.DefaultAuthenticator",
112:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
113:       "weka.core.Option",
114:       "weka.core.stemmers.NullStemmer",
115:       "weka.classifiers.functions.SGDText",
116:       "weka.core.RelationalLocator",
117:       "weka.filters.Sourcable",
118:       "weka.core.Utils",
119:       "weka.core.tokenizers.Tokenizer",
120:       "weka.core.Attribute",
121:       "weka.core.NoSupportForMissingValuesException",
122:       "weka.core.Stopwords",
123:       "weka.classifiers.UpdateableClassifier",
124:       "weka.core.tokenizers.AlphabeticTokenizer",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
126:       "weka.core.FastVector",
127:       "weka.core.MultiInstanceCapabilitiesHandler",
128:       "weka.core.Copyable",
129:       "weka.core.Capabilities",
130:       "weka.core.BinarySparseInstance",
131:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
132:       "weka.core.AttributeLocator",
133:       "weka.core.UnassignedDatasetException",
134:       "weka.classifiers.RandomizableClassifier",
135:       "weka.core.SerializedObject",
136:       "weka.clusterers.UpdateableClusterer",
137:       "weka.core.Summarizable",
138:       "weka.core.RevisionUtils",
139:       "org.pentaho.packageManagement.PackageManager$1",
140:       "weka.core.Instance",
141:       "weka.core.Drawable",
142:       "weka.core.ProtectedProperties",
143:       "weka.core.matrix.Matrix",
144:       "weka.core.StringLocator",
145:       "weka.core.AttributeStats",
146:       "weka.core.WeightedInstancesHandler",
147:       "weka.core.CapabilitiesHandler",
148:       "weka.core.Randomizable",
149:       "weka.core.AbstractInstance",
150:       "weka.core.Instances",
151:       "weka.core.SelectedTag",
152:       "org.pentaho.packageManagement.DefaultPackage",
153:       "weka.core.UnassignedClassException",
154:       "weka.core.Version",
155:       "weka.filters.AllFilter",
156:       "weka.core.UnsupportedAttributeTypeException",
157:       "weka.classifiers.Sourcable",
158:       "weka.core.RevisionHandler",
159:       "weka.classifiers.evaluation.output.prediction.PlainText",
160:       "weka.core.xml.XMLSerialization",
161:       "weka.classifiers.xml.XMLClassifier",
162:       "weka.filters.Filter",
163:       "weka.core.Tag"
164:     );
165:   } 
166: 
167:   private static void resetClasses() {
168:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding.class.getClassLoader()); 
169: 
170:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
171:       "weka.classifiers.AbstractClassifier",
172:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
173:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
174:       "weka.core.Capabilities$Capability",
175:       "weka.core.tokenizers.Tokenizer",
176:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
177:       "weka.core.tokenizers.WordTokenizer",
178:       "weka.core.stemmers.NullStemmer",
179:       "weka.classifiers.RandomizableClassifier",
180:       "weka.core.Tag",
181:       "weka.classifiers.functions.SGDText",
182:       "weka.core.Stopwords",
183:       "weka.core.Utils",
184:       "weka.core.Option",
185:       "weka.classifiers.Evaluation",
186:       "weka.core.stemmers.SnowballStemmer",
187:       "weka.core.AbstractInstance",
188:       "weka.core.SparseInstance",
189:       "weka.attributeSelection.ASEvaluation",
190:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
191:       "weka.attributeSelection.PrincipalComponents",
192:       "weka.classifiers.SingleClassifierEnhancer",
193:       "weka.classifiers.misc.InputMappedClassifier",
194:       "weka.classifiers.rules.ZeroR",
195:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
196:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
197:       "weka.core.neighboursearch.balltrees.BallNode",
198:       "weka.core.RevisionUtils",
199:       "weka.core.neighboursearch.NearestNeighbourSearch",
200:       "weka.core.neighboursearch.CoverTree",
201:       "weka.core.NormalizableDistance",
202:       "weka.core.EuclideanDistance",
203:       "weka.core.Range",
204:       "weka.core.Instances",
205:       "weka.filters.Filter",
206:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
207:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
208:       "weka.classifiers.functions.supportVector.Kernel",
209:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
210:       "weka.core.UnassignedDatasetException",
211:       "weka.core.BinarySparseInstance",
212:       "weka.core.Attribute",
213:       "weka.core.ProtectedProperties",
214:       "weka.core.DenseInstance",
215:       "weka.classifiers.bayes.BayesNet",
216:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
217:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
218:       "weka.classifiers.bayes.net.search.local.K2",
219:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
220:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
221:       "weka.core.Capabilities",
222:       "org.pentaho.packageManagement.PackageManager",
223:       "org.pentaho.packageManagement.DefaultPackageManager",
224:       "weka.core.Version",
225:       "weka.core.Environment",
226:       "weka.core.WekaPackageManager",
227:       "weka.core.neighboursearch.BallTree",
228:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
229:       "weka.core.neighboursearch.balltrees.BallSplitter",
230:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
231:       "weka.core.SerializedObject",
232:       "weka.core.TestInstances",
233:       "weka.classifiers.bayes.net.BIFReader",
234:       "weka.classifiers.lazy.IBk",
235:       "weka.core.neighboursearch.LinearNNSearch",
236:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
237:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
238:       "weka.classifiers.misc.SerializedClassifier",
239:       "weka.core.neighboursearch.KDTree",
240:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
241:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
242:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
243:       "weka.classifiers.meta.CostSensitiveClassifier",
244:       "weka.classifiers.CostMatrix",
245:       "weka.core.stemmers.LovinsStemmer",
246:       "weka.core.tokenizers.AlphabeticTokenizer",
247:       "weka.core.stemmers.IteratedLovinsStemmer",
248:       "weka.filters.supervised.attribute.Discretize",
249:       "weka.core.converters.ArffLoader$ArffReader",
250:       "weka.filters.AllFilter",
251:       "weka.core.WekaException",
252:       "weka.core.UnsupportedAttributeTypeException",
253:       "weka.core.FindWithCapabilities",
254:       "weka.core.SingleIndex",
255:       "weka.core.ClassDiscovery",
256:       "weka.classifiers.trees.RandomTree",
257:       "weka.classifiers.bayes.NaiveBayes",
258:       "weka.estimators.Estimator",
259:       "weka.estimators.NormalEstimator",
260:       "weka.core.UnassignedClassException",
261:       "weka.classifiers.lazy.LWL",
262:       "weka.classifiers.trees.DecisionStump",
263:       "weka.attributeSelection.OneRAttributeEval",
264:       "weka.classifiers.functions.Logistic",
265:       "weka.classifiers.bayes.NaiveBayesMultinomial",
266:       "weka.attributeSelection.InfoGainAttributeEval",
267:       "weka.classifiers.trees.m5.M5Base",
268:       "weka.classifiers.rules.M5Rules",
269:       "weka.classifiers.functions.LinearRegression",
270:       "weka.estimators.DiscreteEstimator",
271:       "weka.classifiers.rules.OneR",
272:       "weka.classifiers.lazy.KStar",
273:       "weka.classifiers.meta.MultiClassClassifier",
274:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
275:       "weka.attributeSelection.WrapperSubsetEval",
276:       "weka.core.WekaEnumeration",
277:       "weka.classifiers.functions.supportVector.CachedKernel",
278:       "weka.classifiers.functions.supportVector.PolyKernel",
279:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
280:       "weka.classifiers.functions.SMOreg",
281:       "weka.classifiers.functions.supportVector.RegOptimizer",
282:       "weka.classifiers.functions.supportVector.RegSMO",
283:       "weka.classifiers.functions.supportVector.RegSMOImproved",
284:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
285:       "weka.classifiers.functions.SGD",
286:       "weka.classifiers.MultipleClassifiersCombiner",
287:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
288:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
289:       "weka.classifiers.meta.Stacking",
290:       "weka.core.tokenizers.NGramTokenizer",
291:       "weka.classifiers.trees.LMT",
292:       "weka.core.Attribute$1",
293:       "weka.classifiers.rules.PART",
294:       "weka.classifiers.functions.GaussianProcesses",
295:       "weka.classifiers.functions.SMO",
296:       "weka.attributeSelection.GainRatioAttributeEval",
297:       "weka.core.TechnicalInformation",
298:       "weka.core.TechnicalInformation$Type",
299:       "weka.core.TechnicalInformation$Field",
300:       "weka.classifiers.IteratedSingleClassifierEnhancer",
301:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
302:       "weka.classifiers.meta.AdaBoostM1",
303:       "weka.core.AttributeStats",
304:       "weka.classifiers.meta.FilteredClassifier",
305:       "weka.filters.supervised.attribute.AttributeSelection",
306:       "weka.attributeSelection.AttributeSelection",
307:       "weka.attributeSelection.CfsSubsetEval",
308:       "weka.attributeSelection.ASSearch",
309:       "weka.attributeSelection.GreedyStepwise",
310:       "weka.attributeSelection.BestFirst",
311:       "weka.classifiers.trees.J48",
312:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
313:       "weka.classifiers.meta.AttributeSelectedClassifier",
314:       "weka.classifiers.rules.DecisionTable",
315:       "weka.classifiers.trees.j48.ClassifierTree",
316:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
317:       "weka.classifiers.functions.VotedPerceptron",
318:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
319:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.meta.Bagging",
321:       "weka.classifiers.trees.REPTree",
322:       "weka.estimators.PoissonEstimator",
323:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
324:       "weka.classifiers.meta.MultiScheme",
325:       "weka.classifiers.meta.LogitBoost",
326:       "weka.classifiers.meta.AdditiveRegression",
327:       "weka.classifiers.meta.CVParameterSelection",
328:       "weka.core.FastVector",
329:       "weka.classifiers.functions.supportVector.RBFKernel",
330:       "weka.classifiers.rules.JRip",
331:       "weka.classifiers.rules.part.MakeDecList",
332:       "weka.classifiers.functions.SimpleLogistic",
333:       "weka.core.Javadoc",
334:       "weka.core.TechnicalInformationHandlerJavadoc",
335:       "weka.core.matrix.Matrix",
336:       "weka.estimators.MahalanobisEstimator",
337:       "weka.classifiers.meta.ClassificationViaRegression",
338:       "weka.classifiers.trees.M5P",
339:       "weka.classifiers.functions.supportVector.Puk",
340:       "weka.classifiers.meta.Vote",
341:       "weka.attributeSelection.ReliefFAttributeEval",
342:       "weka.attributeSelection.CorrelationAttributeEval",
343:       "weka.classifiers.meta.RegressionByDiscretization",
344:       "weka.filters.unsupervised.attribute.Discretize",
345:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
346:       "weka.estimators.KernelEstimator",
347:       "weka.classifiers.meta.RandomCommittee",
348:       "weka.classifiers.functions.supportVector.StringKernel",
349:       "weka.filters.SimpleFilter",
350:       "weka.filters.SimpleStreamFilter",
351:       "weka.filters.MultiFilter",
352:       "weka.classifiers.functions.MultilayerPerceptron",
353:       "weka.filters.unsupervised.attribute.NominalToBinary",
354:       "weka.classifiers.functions.neural.SigmoidUnit",
355:       "weka.classifiers.functions.neural.LinearUnit",
356:       "weka.classifiers.trees.RandomForest",
357:       "weka.core.SelectedTag",
358:       "weka.classifiers.functions.SimpleLinearRegression",
359:       "weka.core.stemmers.Stemming"
360:     );
361:   }
362: }

[MASTER] 04:53:58.572 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
Instances instances0 = testInstances0.generate();
naiveBayesMultinomialText0.buildClassifier(instances0);
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
naiveBayesMultinomialText0.toString();

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
  - java.net.SocketPermission: 
         accept,resolve 127.0.0.1:51366: 1
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/mosa/tests/s1019/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 04:57:22.015 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.67428125% of time used, but only 67/194 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
[MASTER] 04:57:55.417 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_63_1575521875265/weka/experiment/ResultMatrix_63_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_63_1575521875265/weka/experiment/ResultMatrix_63_tmp__ESTest_scaffolding.java]]
[MASTER] 04:57:55.417 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:57:55.417 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:57:55.420 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   variable int1
  location: class weka.experiment.ResultMatrix_63_tmp__ESTest: 42
[MASTER] 04:57:55.420 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_63_1575521875265/weka/experiment/ResultMatrix_63_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 04:57:55 GMT 2019
4:  */
5: 
6: package weka.experiment;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import org.evosuite.runtime.EvoRunner;
11: import org.evosuite.runtime.EvoRunnerParameters;
12: import org.junit.runner.RunWith;
13: import weka.experiment.ResultMatrix;
14: import weka.experiment.ResultMatrixCSV;
15: import weka.experiment.ResultMatrixGnuPlot;
16: import weka.experiment.ResultMatrixLatex;
17: import weka.experiment.ResultMatrixPlainText;
18: import weka.experiment.ResultMatrixSignificance;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class ResultMatrix_63_tmp__ESTest extends ResultMatrix_63_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=4.237638675774547
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
30:       resultMatrixLatex0.getDisplayCol(0);
31:       ResultMatrixPlainText.main((String[]) null);
32:       ResultMatrixCSV.main((String[]) null);
33:       ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1);
34:       resultMatrixSignificance0.toStringKey();
35:       resultMatrixLatex0.isStdDev(0);
36:       resultMatrixSignificance0.getVisibleColCount();
37:       ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
38:       resultMatrixPlainText0.getRevision();
39:       ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
40:       resultMatrixGnuPlot0.getDefaultEnumerateColNames();
41:       int int0 = ResultMatrix.SIGNIFICANCE_TIE;
42:       assertTrue(int0 == int1);
43:   }
44: }
RegularFileObject[/tmp/EvoSuite_63_1575521875265/weka/experiment/ResultMatrix_63_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 04:57:55 GMT 2019
5:  */
6: 
7: package weka.experiment;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class ResultMatrix_63_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.experiment.ResultMatrix"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ResultMatrix_63_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.experiment.ResultMatrixCSV",
89:       "weka.core.OptionHandler",
90:       "weka.experiment.ResultMatrixLatex",
91:       "weka.experiment.ResultMatrixPlainText",
92:       "weka.experiment.ResultMatrixSignificance",
93:       "weka.experiment.ResultMatrix",
94:       "weka.experiment.ResultMatrixHTML",
95:       "weka.core.RevisionUtils",
96:       "weka.core.Option",
97:       "weka.core.Version",
98:       "weka.experiment.ResultMatrixGnuPlot",
99:       "weka.core.Utils",
100:       "weka.core.RevisionHandler"
101:     );
102:   } 
103: 
104:   private static void resetClasses() {
105:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ResultMatrix_63_tmp__ESTest_scaffolding.class.getClassLoader()); 
106: 
107:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
108:       "weka.experiment.ResultMatrix",
109:       "weka.experiment.ResultMatrixPlainText",
110:       "weka.experiment.ResultMatrixSignificance",
111:       "weka.core.Utils",
112:       "weka.experiment.ResultMatrixCSV",
113:       "weka.experiment.ResultMatrixGnuPlot",
114:       "weka.core.Version",
115:       "weka.core.RevisionUtils",
116:       "weka.experiment.ResultMatrixHTML",
117:       "weka.experiment.ResultMatrixLatex",
118:       "weka.core.Option"
119:     );
120:   }
121: }

[MASTER] 04:57:55.421 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
resultMatrixLatex0.getDisplayCol(0);
ResultMatrixPlainText.main((String[]) null);
ResultMatrixCSV.main((String[]) null);
ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1);
resultMatrixSignificance0.toStringKey();
resultMatrixLatex0.isStdDev(0);
resultMatrixSignificance0.getVisibleColCount();
ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
resultMatrixPlainText0.getRevision();
ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
resultMatrixGnuPlot0.getDefaultEnumerateColNames();
int int0 = ResultMatrix.SIGNIFICANCE_TIE;
assertTrue(int0 == int1);


[MASTER] 04:58:33.030 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.util.concurrent.ExecutionException: org.evosuite.runtime.TooManyResourcesException: Loop has been executed more times than the allowed 10000
[MASTER] 04:58:33.030 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
int[] intArray0 = new int[1];
resultMatrixCSV1.setColOrder(intArray0);
ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV();
ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 527);
resultMatrixSignificance0.setColName(18, "[");
ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(18, 1681);

[MASTER] 04:58:48.394 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/mosa/tests/s1019/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13430
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 04:59:42.688 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:59:42.694 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:59:42.709 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 04:59:43.402 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 04:59:44.190 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 04:59:44.191 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 04:59:46.354 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 04:59:46.389 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 04:59:46.390 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 04:59:46.390 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 04:59:46.390 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 04:59:46.391 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 04:59:46.391 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 04:59:46.391 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 04:59:46.392 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 04:59:46.455 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 04:59:46.483 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 3904
* Using seed 1019
* Starting evolution
[MASTER] 04:59:49.049 [logback-2] ERROR TestCluster - Failed to check cache for javax.swing.RowFilter<M, I>.ComparisonType : Type points to itself
[MASTER] 05:00:06.546 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.toSummaryString()Ljava/lang/String;: Line 2482
[MASTER] 05:00:06.546 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.toSummaryString(Ljava/lang/String;Z)Ljava/lang/String;: Line 2510
[MASTER] 05:00:06.546 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.toSummaryString(Ljava/lang/String;Z)Ljava/lang/String;: Line 2512
[MASTER] 05:00:06.546 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.toSummaryString(Ljava/lang/String;Z)Ljava/lang/String;: Line 2518
[MASTER] 05:00:06.546 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.toSummaryString(Ljava/lang/String;Z)Ljava/lang/String;: Line 2520
[MASTER] 05:00:06.546 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.toSummaryString(Ljava/lang/String;Z)Ljava/lang/String;: Line 2592
[MASTER] 05:00:06.546 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.toSummaryString(Ljava/lang/String;Z)Ljava/lang/String;: Line 2597
[MASTER] 05:00:06.546 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.toSummaryString(Ljava/lang/String;Z)Ljava/lang/String;: Line 2598
[MASTER] 05:00:06.546 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.toSummaryString(Ljava/lang/String;Z)Ljava/lang/String;: Line 2599
[MASTER] 05:00:06.546 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.toSummaryString(Ljava/lang/String;Z)Ljava/lang/String;: Line 2607
[MASTER] 05:00:06.546 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.toSummaryString(Ljava/lang/String;Z)Ljava/lang/String;: Line 2609
[MASTER] 05:00:06.550 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4340: weka.classifiers.Evaluation.toSummaryString(Ljava/lang/String;Z)Ljava/lang/String;:2512 - ReplaceComparisonOperator == -> !=
[MASTER] 05:00:06.550 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 4380: weka.classifiers.Evaluation.toSummaryString(Ljava/lang/String;Z)Ljava/lang/String;:2520 - ReplaceComparisonOperator <= -> <
[MASTER] 05:00:06.551 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.toSummaryString()Ljava/lang/String;
[MASTER] 05:00:06.551 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.toSummaryString()Ljava/lang/String;
[MASTER] 05:00:06.552 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.toSummaryString()Ljava/lang/String;: root-Branch in context: weka.classifiers.Evaluation:toSummaryString()Ljava/lang/String;
[MASTER] 05:00:19.589 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 05:00:27.874 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 127s and 61 generations, 36651 statements, best individual has fitness: 15152.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 59%
* Total number of goals: 1378
* Number of covered goals: 811
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 44%
* Total number of goals: 809
* Number of covered goals: 354
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 65
* Number of covered goals: 65
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 63%
* Total number of goals: 424
* Number of covered goals: 268
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 21%
* Total number of goals: 278
* Number of covered goals: 59
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 103
* Number of covered goals: 102
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 41%
* Total number of goals: 809
* Number of covered goals: 329
* Generated 152 tests with total length 1752
* Resulting test suite's coverage: 52% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
[MASTER] 05:07:51.204 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 05:07:51.525 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 05:07:51.525 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 05:07:52.721 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/mosa/tests/s1019/107_weka/evosuite-tests
* Done!

* Computation finished
