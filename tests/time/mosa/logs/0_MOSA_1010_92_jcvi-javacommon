* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: org.jcvi.jillion.core.util.FileIterator
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 21349
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:46:16.396 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:46:16.588 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:46:16.598 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:46:16.646 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.util.FileIterator
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 424
* Using seed 1010
* Starting evolution
* Search finished after 121s and 478 generations, 140144 statements, best individual has fitness: 624.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 107
* Number of covered goals: 102
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 67
* Number of covered goals: 66
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 98%
* Total number of goals: 53
* Number of covered goals: 52
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 74
* Number of covered goals: 37
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 28
* Number of covered goals: 14
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 28
* Number of covered goals: 14
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 93%
* Total number of goals: 67
* Number of covered goals: 62
* Generated 32 tests with total length 174
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 59%
* Compiling and checking tests
* Writing JUnit test case 'FileIterator_ESTest' to /home/ubuntu/termite/mosa/tests/s1010/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: org.jcvi.jillion.core.Range
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: org.jcvi.jillion.assembly.consed.phd.PhdBuilder
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 21346
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 21355
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:51:32.345 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 21:51:32.364 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 21:51:32.365 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 21:51:32.413 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:51:32.417 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:51:32.424 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:51:32.473 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 21:51:32.493 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 21:51:32.494 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 21:51:32.495 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 21:51:32.495 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 21:51:32.496 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 21:51:32.496 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 21:51:32.498 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 21:51:32.499 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.assembly.consed.phd.PhdBuilder
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 232
* Using seed 1010
* Starting evolution
[MASTER] 21:51:33.570 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:51:33.661 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 21:51:33.670 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToDoubleFunction
[MASTER] 21:51:33.673 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToIntFunction
[MASTER] 21:51:33.673 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToLongFunction
[MASTER] 21:51:33.783 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:51:33.784 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.Range
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2577
* Using seed 1010
* Starting evolution
[MASTER] 21:52:05.674 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: Line 528
[MASTER] 21:52:05.678 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.<init>(SJ)V: Line 1541
[MASTER] 21:52:05.678 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.<init>(SJ)V: Line 1542
[MASTER] 21:52:05.679 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.<init>(SJ)V: Line 1543
[MASTER] 21:52:05.679 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.<init>(SJ)V: Line 1545
[MASTER] 21:52:05.679 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getBegin()J: Line 1557
[MASTER] 21:52:05.679 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getLength()J: Line 1562
[MASTER] 21:52:05.679 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J: Line 1567
[MASTER] 21:52:05.680 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 240: org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;:525 - ReplaceComparisonOperator > -> -2
[MASTER] 21:52:05.680 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 569: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:951 - ReplaceComparisonOperator >= -> ==
[MASTER] 21:52:05.680 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 578: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:956 - ReplaceComparisonOperator > -> !=
[MASTER] 21:52:05.680 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 597: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator - -> %
[MASTER] 21:52:05.681 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1113: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator + -> %
[MASTER] 21:52:05.681 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1114: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator + -> -
[MASTER] 21:52:05.681 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1115: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator + -> *
[MASTER] 21:52:05.681 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1116: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator + -> /
[MASTER] 21:52:05.681 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1120: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator - -> +
[MASTER] 21:52:05.681 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1121: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator - -> %
[MASTER] 21:52:05.681 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1122: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator - -> *
[MASTER] 21:52:05.681 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1123: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J:1567 - ReplaceArithmeticOperator - -> /
[MASTER] 21:52:05.683 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getBegin()J: root-Branch in context: 
[MASTER] 21:52:05.683 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getLength()J: root-Branch in context: 
[MASTER] 21:52:05.683 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I29 Branch 19 IFGT L525 - true in context: 
[MASTER] 21:52:05.683 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J: root-Branch in context: 
[MASTER] 21:52:29.607 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 21:53:02.381 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 276: org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;:532 - ReplaceComparisonOperator > -> >=
[MASTER] 21:53:02.382 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 621: org.jcvi.jillion.core.Range.getLength()J:971 - ReplaceArithmeticOperator - -> %
[MASTER] 21:53:29.930 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 327: org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;:541 - ReplaceComparisonOperator > -> >=
* Search finished after 121s and 1325 generations, 192289 statements, best individual has fitness: 64.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 93
* Number of covered goals: 93
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 100%
* Total number of goals: 47
* Number of covered goals: 47
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 16
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Generated 26 tests with total length 108
* Resulting test suite's coverage: 97% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 13%
* Compiling and checking tests
* Search finished after 126s and 100 generations, 33913 statements, best individual has fitness: 7720.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Writing JUnit test case 'PhdBuilder_ESTest' to /home/ubuntu/termite/mosa/tests/s1010/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* Coverage of criterion LINE: 70%
* Total number of goals: 632
* Number of covered goals: 441
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 73%
* Total number of goals: 426
* Number of covered goals: 310
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 54%
* Total number of goals: 802
* Number of covered goals: 433
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 77
* Number of covered goals: 39
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 37%
* Total number of goals: 107
* Number of covered goals: 40
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 37%
* Total number of goals: 107
* Number of covered goals: 40
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 72%
* Total number of goals: 426
* Number of covered goals: 307
* Generated 164 tests with total length 619
* Resulting test suite's coverage: 63% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 24%
* Compiling and checking tests
[MASTER] 21:54:46.900 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 21:54:46.900 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of((-9223372036854775764L), (-9223372036854775764L));
List<Range> list0 = range0.complement(range0);
assertTrue(list0.contains(range0));


[MASTER] 21:54:46.945 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.IndexOutOfBoundsException: given length -9223372036854775808 would make range [65535 - ? ] beyond max allowed end offset
[MASTER] 21:54:46.945 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
Range.of(range_CoordinateSystem0, 65535L, (-9223372036854775808L));

[MASTER] 21:54:48.164 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<0>
[MASTER] 21:54:48.165 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(9223372036854775807L);
List<Range> list0 = range0.complement(range0);
assertFalse(list0.contains(range0));
assertEquals(1, list0.size());


[MASTER] 21:54:49.835 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 21:54:49.835 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(9223372036854775807L);
List<Range> list0 = range0.split(9223372036854775807L);
List<Range> list1 = range0.complementFrom(list0);
assertFalse(list1.contains(range0));
assertFalse(list1.isEmpty());

boolean boolean0 = range0.endsBefore(range0);
assertFalse(boolean0);


[MASTER] 21:54:50.090 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 21:54:50.091 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.SPACE_BASED;
Range range0 = Range.of(range_CoordinateSystem1, 2930L, 2930L);
boolean boolean0 = range0.equals(range_CoordinateSystem0);
assertFalse(boolean0);
assertFalse(range0.isEmpty());


[MASTER] 21:54:50.360 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 21:54:50.360 [logback-1] WARN  JUnitAnalyzer - Failing test:
 LinkedList<Range> linkedList0 = new LinkedList<Range>();
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, 2147483647L, 2147483647L);
Long long0 = new Long(2147483647L);
boolean boolean0 = range0.intersects(range0);
Object object0 = new Object();
boolean boolean1 = range0.equals(object0);
assertFalse(boolean1 == boolean0);
assertFalse(boolean1);


[MASTER] 21:54:50.914 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 21:54:50.914 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(2147483647L);
Range range1 = Range.ofLength(2147483647L);
List<Range> list0 = range0.complement(range1);
assertEquals(1, list0.size());
assertFalse(list0.contains(range0));


[MASTER] 21:54:52.564 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IndexOutOfBoundsException
[MASTER] 21:54:52.564 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.ofLength(9223372036854775807L);
range0.split(9223372036854775807L);

[MASTER] 21:54:56.151 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 21:54:56.152 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.ofLength(4294966523L);
assertTrue(range0.isEmpty());

Range range1 = Range.ofLength(4294967334L);
range1.spliterator();
long long0 = range1.getLength();
assertEquals(4294967334L, long0);

Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
Range range2 = Range.of(range_CoordinateSystem0, 1L, 4294967334L);
boolean boolean0 = range2.equals(range1);
assertFalse(boolean0);
assertFalse(range1.equals((Object)range2));


[MASTER] 21:54:56.193 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 21:54:56.193 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.ofLength(4294966523L);
range0.spliterator();
Long long0 = new Long(4294966523L);
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
Range range1 = Range.of(range_CoordinateSystem0, 1L, (long) long0);
boolean boolean0 = range1.equals(range0);
assertFalse(range1.isEmpty());
assertTrue(range0.isEmpty());
assertFalse(boolean0);


[MASTER] 21:54:56.236 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 21:54:56.237 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.Builder range_Builder0 = new Range.Builder(2147483647L, 2147483647L);
Range range0 = Range.of((-2147483648L), (-2147483648L));
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
range0.getEnd();
Range range1 = Range.of(range_CoordinateSystem0, (-2147483648L), 2147483647L);
boolean boolean0 = range1.equals(range_CoordinateSystem0);
assertFalse(boolean0);

boolean boolean1 = range0.equals((Object) null);
assertNotSame(range0, range1);
assertTrue(range0.equals((Object)range1));
assertFalse(boolean1);


* Writing JUnit test case 'Range_ESTest' to /home/ubuntu/termite/mosa/tests/s1010/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 21346
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:24:48.336 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:24:48.368 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:24:48.369 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:24:48.450 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 836
* Using seed 1010
* Starting evolution
[MASTER] 22:24:49.800 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 22:24:49.800 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 22:26:04.751 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 122s and 356 generations, 192687 statements, best individual has fitness: 336.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 131
* Number of covered goals: 130
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 74
* Number of covered goals: 73
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 47
* Number of covered goals: 47
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 99%
* Total number of goals: 469
* Number of covered goals: 466
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 65%
* Total number of goals: 52
* Number of covered goals: 34
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 83%
* Total number of goals: 18
* Number of covered goals: 15
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 83%
* Total number of goals: 18
* Number of covered goals: 15
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 74
* Number of covered goals: 61
* Generated 91 tests with total length 417
* Resulting test suite's coverage: 95% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 72%
* Compiling and checking tests
[MASTER] 22:27:24.677 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 22:27:24.677 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DefaultNucleotideCodec defaultNucleotideCodec0 = DefaultNucleotideCodec.INSTANCE;
byte[] byteArray0 = new byte[4];
byteArray0[0] = (byte)108;
byteArray0[1] = (byte) (-123);
byteArray0[2] = (byte)104;
defaultNucleotideCodec0.toString(byteArray0);

* Writing JUnit test case 'DefaultNucleotideCodec_ESTest' to /home/ubuntu/termite/mosa/tests/s1010/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
