* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18437
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18445
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1367
* Using seed 1027
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:35:48.135 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:35:48.152 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:35:48.215 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:35:50.423 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 10:35:50.929 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 10:35:50.930 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2767
* Using seed 1027
* Starting evolution
[MASTER] 10:35:55.791 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.<init>(Lweka/classifiers/rules/JRip;)V
[MASTER] 10:36:05.501 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NominalAntd.getRevision()Ljava/lang/String;: Line 1061
[MASTER] 10:36:05.502 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NominalAntd.getRevision()Ljava/lang/String;: root-Branch
[MASTER] 10:36:05.504 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 992: weka.classifiers.rules.JRip$NominalAntd.getRevision()Ljava/lang/String;:1061 - ReplaceConstant - $Revision: 8118 $ -> 
[MASTER] 10:36:05.506 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$NominalAntd.getRevision()Ljava/lang/String;: root-Branch in context: 
[MASTER] 10:36:38.034 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.covers(Lweka/core/Instance;)Z: Line 1130
[MASTER] 10:36:38.034 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.covers(Lweka/core/Instance;)Z: Line 1132
[MASTER] 10:36:38.034 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.covers(Lweka/core/Instance;)Z: Line 1140
[MASTER] 10:36:38.039 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.covers(Lweka/core/Instance;)Z: I13 Branch 110 IF_ICMPGE L1132 - true
[MASTER] 10:36:38.040 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 433: weka.classifiers.rules.JRip$RipperRule.covers(Lweka/core/Instance;)Z:1130 - ReplaceConstant - 1 -> 0
[MASTER] 10:36:38.040 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 434: weka.classifiers.rules.JRip$RipperRule.covers(Lweka/core/Instance;)Z:1132 - ReplaceConstant - 0 -> 1
[MASTER] 10:36:38.040 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 435: weka.classifiers.rules.JRip$RipperRule.covers(Lweka/core/Instance;)Z:1132 - InsertUnaryOp Negation of i
[MASTER] 10:36:38.040 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 436: weka.classifiers.rules.JRip$RipperRule.covers(Lweka/core/Instance;)Z:1132 - InsertUnaryOp IINC 1 i
[MASTER] 10:36:38.040 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 437: weka.classifiers.rules.JRip$RipperRule.covers(Lweka/core/Instance;)Z:1132 - InsertUnaryOp IINC -1 i
[MASTER] 10:36:38.041 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 439: weka.classifiers.rules.JRip$RipperRule.covers(Lweka/core/Instance;)Z:1132 - ReplaceComparisonOperator >= -> >
[MASTER] 10:36:38.041 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 446: weka.classifiers.rules.JRip$RipperRule.covers(Lweka/core/Instance;)Z:1140 - InsertUnaryOp Negation of isCover
[MASTER] 10:36:38.041 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 447: weka.classifiers.rules.JRip$RipperRule.covers(Lweka/core/Instance;)Z:1140 - InsertUnaryOp IINC 1 isCover
[MASTER] 10:36:38.041 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 448: weka.classifiers.rules.JRip$RipperRule.covers(Lweka/core/Instance;)Z:1140 - InsertUnaryOp IINC -1 isCover
[MASTER] 10:36:38.042 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.covers(Lweka/core/Instance;)Z
[MASTER] 10:36:38.043 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.RipperRule.covers(Lweka/core/Instance;)Z
[MASTER] 10:36:38.043 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$RipperRule.covers(Lweka/core/Instance;)Z: I13 Branch 110 IF_ICMPGE L1132 - true in context: weka.classifiers.rules.JRip$RipperRule:covers(Lweka/core/Instance;)Z
[MASTER] 10:36:40.322 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setMinNo(D)V: Line 500
[MASTER] 10:36:40.322 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setMinNo(D)V: Line 501
[MASTER] 10:36:40.323 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setMinNo(D)V: root-Branch
[MASTER] 10:36:40.323 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 195: weka.classifiers.rules.JRip.setMinNo(D)V:500 - InsertUnaryOp Negation of m
[MASTER] 10:36:40.324 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setMinNo(D)V
[MASTER] 10:36:40.324 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setMinNo(D)V
[MASTER] 10:36:40.325 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setMinNo(D)V: root-Branch in context: weka.classifiers.rules.JRip:setMinNo(D)V
[MASTER] 10:36:53.239 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
[MASTER] 10:37:36.253 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
* Search finished after 124s and 143 generations, 80991 statements, best individual has fitness: 2888.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 217
* Number of covered goals: 187
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 65%
* Total number of goals: 428
* Number of covered goals: 279
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 260
* Number of covered goals: 237
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 65%
* Total number of goals: 428
* Number of covered goals: 279
* Generated 69 tests with total length 252
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 122s and 136 generations, 66977 statements, best individual has fitness: 12544.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 37%
* Total number of goals: 705
* Number of covered goals: 263
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 28%
* Total number of goals: 416
* Number of covered goals: 115
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 55%
* Total number of goals: 993
* Number of covered goals: 546
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 28%
* Total number of goals: 93
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 27%
* Total number of goals: 416
* Number of covered goals: 113
* Generated 74 tests with total length 617
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 74%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/mosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
[MASTER] 10:38:47.426 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 10:38:47.953 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 10:38:48.037 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 10:38:48.037 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/mosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18443
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18442
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:41:42.319 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:41:42.326 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:41:42.326 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:41:42.401 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 10:41:42.408 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 10:41:42.409 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1729
* Using seed 1027
* Starting evolution
[MASTER] 10:41:44.607 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 10:41:44.608 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 10:41:44.609 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 10:41:44.703 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:41:44.705 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:41:44.706 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1412
* Using seed 1027
* Starting evolution
[MASTER] 10:41:53.516 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: Line 625
[MASTER] 10:41:53.517 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: Line 626
[MASTER] 10:41:53.517 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;: Line 676
[MASTER] 10:41:53.517 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D: Line 752
[MASTER] 10:41:53.517 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: Line 817
[MASTER] 10:41:53.518 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;: Line 1144
[MASTER] 10:41:53.518 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D: root-Branch
[MASTER] 10:41:53.518 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;: root-Branch
[MASTER] 10:41:53.518 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: root-Branch
[MASTER] 10:41:53.518 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;: root-Branch
[MASTER] 10:41:53.518 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: root-Branch
[MASTER] 10:41:53.525 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 261: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp Negation of l
[MASTER] 10:41:53.525 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 262: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp IINC 1 l
[MASTER] 10:41:53.525 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 263: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp IINC -1 l
[MASTER] 10:41:53.525 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 276: weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;:676 - ReplaceConstant - Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value -> 
[MASTER] 10:41:53.525 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 289: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_normalize
[MASTER] 10:41:53.525 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 290: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_wordFrequencies
[MASTER] 10:41:53.525 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 292: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_lowercaseTokens
[MASTER] 10:41:53.525 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 301: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - ReplaceVariable m_norm -> m_minWordP
[MASTER] 10:41:53.525 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 302: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - ReplaceVariable m_norm -> m_t
[MASTER] 10:41:53.525 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 304: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - ReplaceVariable m_norm -> m_lnorm
[MASTER] 10:41:53.525 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 305: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - InsertUnaryOp Negation
[MASTER] 10:41:53.525 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 335: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z:817 - InsertUnaryOp Negation
[MASTER] 10:41:53.526 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 473: weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;:1144 - ReplaceConstant - $Revision: 9122 $ -> 
[MASTER] 10:41:53.526 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 10:41:53.526 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:Positive
[MASTER] 10:41:53.526 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z:False
[MASTER] 10:41:53.526 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;:NonEmptyString
[MASTER] 10:41:53.527 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V
[MASTER] 10:41:53.539 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;
[MASTER] 10:41:53.539 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D
[MASTER] 10:41:53.547 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z
[MASTER] 10:41:53.547 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;
[MASTER] 10:41:53.548 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V
[MASTER] 10:41:53.549 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;
[MASTER] 10:41:53.549 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D
[MASTER] 10:41:53.549 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z
[MASTER] 10:41:53.557 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;
[MASTER] 10:41:53.558 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:minWordFrequencyTipText()Ljava/lang/String;
[MASTER] 10:41:53.558 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getNorm()D
[MASTER] 10:41:53.558 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getUseStopList()Z
[MASTER] 10:41:53.558 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getRevision()Ljava/lang/String;
[MASTER] 10:41:53.558 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setLowercaseTokens(Z)V
[MASTER] 10:42:08.658 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 10:42:08.658 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 10:42:33.914 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 10:43:25.435 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 123s and 184 generations, 72634 statements, best individual has fitness: 5920.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 63%
* Total number of goals: 370
* Number of covered goals: 233
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 50%
* Total number of goals: 242
* Number of covered goals: 120
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 28
* Number of covered goals: 28
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 55%
* Total number of goals: 713
* Number of covered goals: 393
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 49%
* Total number of goals: 72
* Number of covered goals: 35
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 50%
* Total number of goals: 242
* Number of covered goals: 120
* Generated 69 tests with total length 464
* Resulting test suite's coverage: 58% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 123s and 196 generations, 82660 statements, best individual has fitness: 1800.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 338
* Number of covered goals: 298
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 80%
* Total number of goals: 194
* Number of covered goals: 155
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 476
* Number of covered goals: 428
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 52%
* Total number of goals: 112
* Number of covered goals: 58
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 78%
* Total number of goals: 194
* Number of covered goals: 152
* Generated 78 tests with total length 487
* Resulting test suite's coverage: 84% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
[MASTER] 10:45:39.453 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 10:45:39.476 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 10:45:39.588 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 10:45:39.588 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Resulting test suite's mutation score: 57%
* Compiling and checking tests
[MASTER] 10:45:52.808 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 10:45:52.809 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Attribute attribute0 = new Attribute("NlAB,@qCI\"pCH4/57Q");
Attribute attribute1 = new Attribute("date");
Instances instances0 = new Instances("NlAB,@qCI\"pCH4/57Q", arrayList0, 2192);
Properties properties0 = new Properties();
ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
Attribute attribute2 = new Attribute("date", instances0, protectedProperties0);
arrayList0.add(attribute2);
Instances instances1 = new Instances("YY^(9pL7$!^`'YJYQdi", arrayList0, 80);
Discretize discretize0 = new Discretize();
discretize0.setInputFormat(instances0);

[MASTER] 10:45:52.939 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_65_1575542752920/weka/classifiers/bayes/NaiveBayesMultinomialText_65_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_65_1575542752920/weka/classifiers/bayes/NaiveBayesMultinomialText_65_tmp__ESTest_scaffolding.java]]
[MASTER] 10:45:52.939 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:45:52.939 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:45:52.942 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 10:45:52.942 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 10:45:52.942 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 10:45:52.942 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_65_1575542752920/weka/classifiers/bayes/NaiveBayesMultinomialText_65_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 10:45:52 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_65_tmp__ESTest extends NaiveBayesMultinomialText_65_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=1.1217186091313738
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       naiveBayesMultinomialText0.m_periodicP = 1103;
29:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
30:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
31:       naiveBayesMultinomialText0.pruneDictionary();
32:       String string0 = naiveBayesMultinomialText0.LNormTipText();
33:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
34:       assertEquals("The LNorm to use for document length normalization.", string0);
35:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
36:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
37:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
38:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
39:   }
40: }
RegularFileObject[/tmp/EvoSuite_65_1575542752920/weka/classifiers/bayes/NaiveBayesMultinomialText_65_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 10:45:52 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_65_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_65_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.classifiers.functions.LinearRegression",
104:       "weka.core.stemmers.Stemmer",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.neighboursearch.CoverTree$MyHeap",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.RelationalLocator",
111:       "weka.core.Utils",
112:       "weka.core.CustomDisplayStringProvider",
113:       "weka.core.tokenizers.Tokenizer",
114:       "weka.core.NoSupportForMissingValuesException",
115:       "weka.classifiers.UpdateableClassifier",
116:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
117:       "weka.core.MultiInstanceCapabilitiesHandler",
118:       "weka.core.Copyable",
119:       "weka.core.Capabilities",
120:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
121:       "weka.core.BinarySparseInstance",
122:       "weka.filters.supervised.attribute.NominalToBinary",
123:       "weka.core.AttributeLocator",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.AdditionalMeasureProducer",
129:       "weka.core.neighboursearch.balltrees.BallNode",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
134:       "weka.attributeSelection.ASEvaluation",
135:       "weka.core.AbstractInstance",
136:       "weka.core.scripting.JythonObject",
137:       "weka.core.SelectedTag",
138:       "org.pentaho.packageManagement.DefaultPackage",
139:       "weka.core.Queue",
140:       "weka.core.Version",
141:       "weka.core.Tag",
142:       "weka.core.neighboursearch.CoverTree",
143:       "weka.classifiers.AbstractClassifier",
144:       "weka.filters.unsupervised.attribute.Center",
145:       "weka.core.OptionHandler",
146:       "weka.core.WekaException",
147:       "weka.filters.StreamableFilter",
148:       "weka.core.Range",
149:       "weka.core.scripting.JythonSerializableObject",
150:       "weka.classifiers.Classifier",
151:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
152:       "weka.core.Capabilities$Capability",
153:       "weka.core.SparseInstance",
154:       "org.pentaho.packageManagement.PackageManager",
155:       "weka.attributeSelection.AttributeTransformer",
156:       "weka.core.tokenizers.WordTokenizer",
157:       "weka.classifiers.misc.SerializedClassifier",
158:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
159:       "weka.attributeSelection.PrincipalComponents",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.classifiers.Evaluation",
162:       "weka.core.WekaPackageManager",
163:       "weka.filters.SupervisedFilter",
164:       "weka.core.TechnicalInformationHandler",
165:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
166:       "weka.core.Option",
167:       "weka.classifiers.meta.CostSensitiveClassifier",
168:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
169:       "weka.core.neighboursearch.PerformanceStats",
170:       "weka.filters.Sourcable",
171:       "weka.core.Attribute",
172:       "weka.core.Stopwords",
173:       "weka.core.tokenizers.AlphabeticTokenizer",
174:       "weka.core.FastVector",
175:       "weka.core.UnassignedDatasetException",
176:       "weka.core.tokenizers.NGramTokenizer",
177:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
178:       "weka.classifiers.SingleClassifierEnhancer",
179:       "weka.core.RevisionUtils",
180:       "weka.core.Instance",
181:       "weka.core.ProtectedProperties",
182:       "weka.core.StringLocator",
183:       "weka.core.AttributeStats",
184:       "weka.core.WeightedInstancesHandler",
185:       "weka.core.neighboursearch.NearestNeighbourSearch",
186:       "weka.core.neighboursearch.covertrees.Stack",
187:       "weka.filters.unsupervised.attribute.Remove",
188:       "weka.core.Randomizable",
189:       "weka.core.Instances",
190:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
191:       "weka.core.UnassignedClassException",
192:       "weka.classifiers.rules.ZeroR",
193:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
194:       "weka.filters.unsupervised.attribute.Standardize",
195:       "weka.core.TechnicalInformation",
196:       "weka.core.UnsupportedAttributeTypeException",
197:       "weka.classifiers.Sourcable",
198:       "weka.core.RevisionHandler",
199:       "weka.classifiers.evaluation.output.prediction.PlainText",
200:       "weka.core.neighboursearch.TreePerformanceStats",
201:       "weka.core.xml.XMLSerialization",
202:       "weka.classifiers.xml.XMLClassifier",
203:       "weka.filters.Filter",
204:       "weka.filters.supervised.attribute.Discretize"
205:     );
206:   } 
207: 
208:   private static void resetClasses() {
209:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_65_tmp__ESTest_scaffolding.class.getClassLoader()); 
210: 
211:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
212:       "weka.classifiers.AbstractClassifier",
213:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
214:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
215:       "weka.core.Capabilities$Capability",
216:       "weka.core.tokenizers.Tokenizer",
217:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
218:       "weka.core.tokenizers.WordTokenizer",
219:       "weka.core.stemmers.NullStemmer",
220:       "weka.classifiers.Evaluation",
221:       "weka.core.Utils",
222:       "weka.core.Option",
223:       "weka.classifiers.RandomizableClassifier",
224:       "weka.core.Tag",
225:       "weka.classifiers.functions.SGDText",
226:       "weka.core.Capabilities",
227:       "org.pentaho.packageManagement.PackageManager",
228:       "org.pentaho.packageManagement.DefaultPackageManager",
229:       "weka.core.Version",
230:       "weka.core.Environment",
231:       "weka.core.WekaPackageManager",
232:       "weka.core.AbstractInstance",
233:       "weka.core.SparseInstance",
234:       "weka.core.BinarySparseInstance",
235:       "weka.core.stemmers.LovinsStemmer",
236:       "weka.core.RevisionUtils",
237:       "weka.core.SerializedObject",
238:       "weka.classifiers.bayes.BayesNet",
239:       "weka.classifiers.bayes.net.BIFReader",
240:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
241:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
242:       "weka.classifiers.bayes.net.search.local.K2",
243:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
244:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
245:       "weka.core.neighboursearch.NearestNeighbourSearch",
246:       "weka.core.neighboursearch.BallTree",
247:       "weka.core.NormalizableDistance",
248:       "weka.core.EuclideanDistance",
249:       "weka.core.Range",
250:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
251:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
252:       "weka.core.neighboursearch.balltrees.BallSplitter",
253:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
254:       "weka.core.DenseInstance",
255:       "weka.core.Attribute",
256:       "weka.core.ProtectedProperties",
257:       "weka.classifiers.bayes.NaiveBayesMultinomial",
258:       "weka.core.TestInstances",
259:       "weka.core.Instances",
260:       "weka.core.UnassignedClassException",
261:       "weka.core.SelectedTag",
262:       "weka.classifiers.bayes.NaiveBayes",
263:       "weka.core.tokenizers.NGramTokenizer",
264:       "weka.core.UnassignedDatasetException",
265:       "weka.attributeSelection.ASEvaluation",
266:       "weka.attributeSelection.WrapperSubsetEval",
267:       "weka.classifiers.rules.ZeroR",
268:       "weka.core.stemmers.IteratedLovinsStemmer",
269:       "weka.classifiers.functions.supportVector.Kernel",
270:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
271:       "weka.classifiers.misc.SerializedClassifier",
272:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
273:       "weka.attributeSelection.PrincipalComponents",
274:       "weka.core.tokenizers.AlphabeticTokenizer",
275:       "weka.classifiers.SingleClassifierEnhancer",
276:       "weka.classifiers.misc.InputMappedClassifier",
277:       "weka.filters.Filter",
278:       "weka.core.Stopwords",
279:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
280:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
281:       "weka.core.neighboursearch.CoverTree",
282:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
283:       "weka.classifiers.bayes.NaiveBayesUpdateable",
284:       "weka.core.neighboursearch.LinearNNSearch",
285:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
286:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
287:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
288:       "weka.classifiers.meta.CostSensitiveClassifier",
289:       "weka.classifiers.CostMatrix",
290:       "weka.core.TechnicalInformation",
291:       "weka.core.TechnicalInformation$Type",
292:       "weka.core.TechnicalInformation$Field",
293:       "weka.core.neighboursearch.balltrees.BallNode",
294:       "weka.filters.supervised.attribute.Discretize",
295:       "weka.classifiers.trees.m5.M5Base",
296:       "weka.classifiers.rules.M5Rules",
297:       "weka.classifiers.functions.LinearRegression",
298:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
299:       "weka.core.stemmers.SnowballStemmer",
300:       "weka.core.converters.ArffLoader$ArffReader",
301:       "weka.classifiers.lazy.IBk",
302:       "weka.attributeSelection.InfoGainAttributeEval",
303:       "weka.core.WekaEnumeration",
304:       "weka.core.Attribute$1",
305:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
306:       "weka.classifiers.MultipleClassifiersCombiner",
307:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
308:       "weka.classifiers.meta.Vote",
309:       "weka.core.neighboursearch.KDTree",
310:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
311:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
312:       "weka.classifiers.trees.RandomForest",
313:       "weka.classifiers.trees.RandomTree",
314:       "weka.classifiers.functions.supportVector.CachedKernel",
315:       "weka.classifiers.functions.supportVector.RBFKernel",
316:       "weka.core.stemmers.Stemming",
317:       "weka.classifiers.functions.MultilayerPerceptron",
318:       "weka.core.FastVector",
319:       "weka.filters.unsupervised.attribute.NominalToBinary",
320:       "weka.classifiers.functions.neural.SigmoidUnit",
321:       "weka.classifiers.functions.neural.LinearUnit",
322:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
323:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
324:       "weka.classifiers.meta.Stacking",
325:       "weka.core.WekaException",
326:       "weka.core.UnsupportedAttributeTypeException",
327:       "weka.classifiers.functions.GaussianProcesses",
328:       "weka.classifiers.functions.supportVector.PolyKernel",
329:       "weka.filters.AllFilter",
330:       "weka.core.AttributeStats",
331:       "weka.classifiers.meta.AttributeSelectedClassifier",
332:       "weka.attributeSelection.CfsSubsetEval",
333:       "weka.attributeSelection.ASSearch",
334:       "weka.attributeSelection.BestFirst",
335:       "weka.classifiers.trees.J48",
336:       "weka.classifiers.IteratedSingleClassifierEnhancer",
337:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
338:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
339:       "weka.classifiers.meta.Bagging",
340:       "weka.classifiers.trees.REPTree",
341:       "weka.estimators.Estimator",
342:       "weka.estimators.DiscreteEstimator",
343:       "weka.attributeSelection.OneRAttributeEval",
344:       "weka.classifiers.functions.supportVector.Puk",
345:       "weka.classifiers.trees.LMT",
346:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
347:       "weka.classifiers.meta.LogitBoost",
348:       "weka.classifiers.trees.DecisionStump",
349:       "weka.classifiers.meta.FilteredClassifier",
350:       "weka.filters.supervised.attribute.AttributeSelection",
351:       "weka.attributeSelection.AttributeSelection",
352:       "weka.attributeSelection.GreedyStepwise",
353:       "weka.attributeSelection.CorrelationAttributeEval",
354:       "weka.classifiers.functions.SimpleLinearRegression",
355:       "weka.attributeSelection.ReliefFAttributeEval",
356:       "weka.estimators.MahalanobisEstimator",
357:       "weka.classifiers.rules.OneR",
358:       "weka.classifiers.functions.VotedPerceptron",
359:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
360:       "weka.estimators.NormalEstimator",
361:       "weka.classifiers.functions.SMO",
362:       "weka.filters.SimpleFilter",
363:       "weka.filters.SimpleStreamFilter",
364:       "weka.filters.MultiFilter",
365:       "weka.classifiers.functions.SGD",
366:       "weka.classifiers.meta.RandomCommittee",
367:       "weka.attributeSelection.GainRatioAttributeEval",
368:       "weka.classifiers.functions.SMOreg",
369:       "weka.classifiers.functions.supportVector.RegOptimizer",
370:       "weka.classifiers.functions.supportVector.RegSMO",
371:       "weka.classifiers.functions.supportVector.RegSMOImproved",
372:       "weka.classifiers.meta.MultiScheme",
373:       "weka.classifiers.meta.RandomSubSpace",
374:       "weka.classifiers.meta.AdditiveRegression",
375:       "weka.core.FindWithCapabilities",
376:       "weka.core.SingleIndex",
377:       "weka.classifiers.meta.RegressionByDiscretization",
378:       "weka.filters.unsupervised.attribute.Discretize",
379:       "weka.classifiers.trees.j48.ClassifierTree",
380:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
381:       "weka.classifiers.meta.AdaBoostM1",
382:       "weka.classifiers.meta.CVParameterSelection",
383:       "weka.classifiers.rules.JRip",
384:       "weka.core.neighboursearch.PerformanceStats",
385:       "weka.core.Javadoc",
386:       "weka.core.ClassDiscovery",
387:       "weka.core.ClassCache",
388:       "weka.core.AllJavadoc",
389:       "weka.classifiers.rules.DecisionTable",
390:       "weka.core.ManhattanDistance",
391:       "weka.classifiers.meta.ClassificationViaRegression",
392:       "weka.classifiers.trees.M5P",
393:       "weka.classifiers.functions.Logistic",
394:       "weka.core.matrix.Matrix",
395:       "weka.estimators.UnivariateEqualFrequencyHistogramEstimator",
396:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
397:       "weka.classifiers.rules.PART",
398:       "weka.classifiers.rules.part.MakeDecList",
399:       "weka.classifiers.meta.MultiClassClassifier",
400:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
401:       "weka.classifiers.functions.supportVector.StringKernel",
402:       "weka.estimators.PoissonEstimator",
403:       "weka.classifiers.functions.SimpleLogistic",
404:       "weka.classifiers.lazy.LWL",
405:       "weka.estimators.KernelEstimator",
406:       "weka.core.ListOptions"
407:     );
408:   }
409: }

[MASTER] 10:45:52.944 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_periodicP = 1103;
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
naiveBayesMultinomialText0.pruneDictionary();
String string0 = naiveBayesMultinomialText0.LNormTipText();
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals("The LNorm to use for document length normalization.", string0);
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());


[MASTER] 10:45:52.962 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_66_1575542752945/weka/classifiers/bayes/NaiveBayesMultinomialText_66_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_66_1575542752945/weka/classifiers/bayes/NaiveBayesMultinomialText_66_tmp__ESTest_scaffolding.java]]
[MASTER] 10:45:52.962 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:45:52.962 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:45:52.963 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 10:45:52.963 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 10:45:52.963 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 10:45:52.963 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 10:45:52.963 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 10:45:52.963 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_66_1575542752945/weka/classifiers/bayes/NaiveBayesMultinomialText_66_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 10:45:52 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_66_tmp__ESTest extends NaiveBayesMultinomialText_66_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=0.4
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       naiveBayesMultinomialText0.m_periodicP = 1123;
29:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
30:       Integer integer0 = new Integer(1123);
31:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
32:       hashMap0.put(integer0, linkedHashMap0);
33:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
34:       naiveBayesMultinomialText0.pruneDictionary();
35:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
36:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
37:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
38:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
39:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
40:   }
41: }
RegularFileObject[/tmp/EvoSuite_66_1575542752945/weka/classifiers/bayes/NaiveBayesMultinomialText_66_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 10:45:52 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_66_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_66_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.classifiers.functions.LinearRegression",
104:       "weka.core.stemmers.Stemmer",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.neighboursearch.CoverTree$MyHeap",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.RelationalLocator",
111:       "weka.core.Utils",
112:       "weka.core.CustomDisplayStringProvider",
113:       "weka.core.tokenizers.Tokenizer",
114:       "weka.core.NoSupportForMissingValuesException",
115:       "weka.classifiers.UpdateableClassifier",
116:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
117:       "weka.core.MultiInstanceCapabilitiesHandler",
118:       "weka.core.Copyable",
119:       "weka.core.Capabilities",
120:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
121:       "weka.core.BinarySparseInstance",
122:       "weka.filters.supervised.attribute.NominalToBinary",
123:       "weka.core.AttributeLocator",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.AdditionalMeasureProducer",
129:       "weka.core.neighboursearch.balltrees.BallNode",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
134:       "weka.attributeSelection.ASEvaluation",
135:       "weka.core.AbstractInstance",
136:       "weka.core.scripting.JythonObject",
137:       "weka.core.SelectedTag",
138:       "org.pentaho.packageManagement.DefaultPackage",
139:       "weka.core.Queue",
140:       "weka.core.Version",
141:       "weka.core.Tag",
142:       "weka.core.neighboursearch.CoverTree",
143:       "weka.classifiers.AbstractClassifier",
144:       "weka.filters.unsupervised.attribute.Center",
145:       "weka.core.OptionHandler",
146:       "weka.core.WekaException",
147:       "weka.filters.StreamableFilter",
148:       "weka.core.Range",
149:       "weka.core.scripting.JythonSerializableObject",
150:       "weka.classifiers.Classifier",
151:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
152:       "weka.core.Capabilities$Capability",
153:       "weka.core.SparseInstance",
154:       "org.pentaho.packageManagement.PackageManager",
155:       "weka.attributeSelection.AttributeTransformer",
156:       "weka.core.tokenizers.WordTokenizer",
157:       "weka.classifiers.misc.SerializedClassifier",
158:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
159:       "weka.attributeSelection.PrincipalComponents",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.classifiers.Evaluation",
162:       "weka.core.WekaPackageManager",
163:       "weka.filters.SupervisedFilter",
164:       "weka.core.TechnicalInformationHandler",
165:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
166:       "weka.core.Option",
167:       "weka.classifiers.meta.CostSensitiveClassifier",
168:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
169:       "weka.core.neighboursearch.PerformanceStats",
170:       "weka.filters.Sourcable",
171:       "weka.core.Attribute",
172:       "weka.core.Stopwords",
173:       "weka.core.tokenizers.AlphabeticTokenizer",
174:       "weka.core.FastVector",
175:       "weka.core.UnassignedDatasetException",
176:       "weka.core.tokenizers.NGramTokenizer",
177:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
178:       "weka.classifiers.SingleClassifierEnhancer",
179:       "weka.core.RevisionUtils",
180:       "weka.core.Instance",
181:       "weka.core.ProtectedProperties",
182:       "weka.core.StringLocator",
183:       "weka.core.AttributeStats",
184:       "weka.core.WeightedInstancesHandler",
185:       "weka.core.neighboursearch.NearestNeighbourSearch",
186:       "weka.core.neighboursearch.covertrees.Stack",
187:       "weka.filters.unsupervised.attribute.Remove",
188:       "weka.core.Randomizable",
189:       "weka.core.Instances",
190:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
191:       "weka.core.UnassignedClassException",
192:       "weka.classifiers.rules.ZeroR",
193:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
194:       "weka.filters.unsupervised.attribute.Standardize",
195:       "weka.core.TechnicalInformation",
196:       "weka.core.UnsupportedAttributeTypeException",
197:       "weka.classifiers.Sourcable",
198:       "weka.core.RevisionHandler",
199:       "weka.classifiers.evaluation.output.prediction.PlainText",
200:       "weka.core.neighboursearch.TreePerformanceStats",
201:       "weka.core.xml.XMLSerialization",
202:       "weka.classifiers.xml.XMLClassifier",
203:       "weka.filters.Filter",
204:       "weka.filters.supervised.attribute.Discretize"
205:     );
206:   } 
207: 
208:   private static void resetClasses() {
209:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_66_tmp__ESTest_scaffolding.class.getClassLoader()); 
210: 
211:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
212:       "weka.classifiers.AbstractClassifier",
213:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
214:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
215:       "weka.core.Capabilities$Capability",
216:       "weka.core.tokenizers.Tokenizer",
217:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
218:       "weka.core.tokenizers.WordTokenizer",
219:       "weka.core.stemmers.NullStemmer",
220:       "weka.classifiers.Evaluation",
221:       "weka.core.Utils",
222:       "weka.core.Option",
223:       "weka.classifiers.RandomizableClassifier",
224:       "weka.core.Tag",
225:       "weka.classifiers.functions.SGDText",
226:       "weka.core.Capabilities",
227:       "org.pentaho.packageManagement.PackageManager",
228:       "org.pentaho.packageManagement.DefaultPackageManager",
229:       "weka.core.Version",
230:       "weka.core.Environment",
231:       "weka.core.WekaPackageManager",
232:       "weka.core.AbstractInstance",
233:       "weka.core.SparseInstance",
234:       "weka.core.BinarySparseInstance",
235:       "weka.core.stemmers.LovinsStemmer",
236:       "weka.core.RevisionUtils",
237:       "weka.core.SerializedObject",
238:       "weka.classifiers.bayes.BayesNet",
239:       "weka.classifiers.bayes.net.BIFReader",
240:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
241:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
242:       "weka.classifiers.bayes.net.search.local.K2",
243:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
244:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
245:       "weka.core.neighboursearch.NearestNeighbourSearch",
246:       "weka.core.neighboursearch.BallTree",
247:       "weka.core.NormalizableDistance",
248:       "weka.core.EuclideanDistance",
249:       "weka.core.Range",
250:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
251:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
252:       "weka.core.neighboursearch.balltrees.BallSplitter",
253:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
254:       "weka.core.DenseInstance",
255:       "weka.core.Attribute",
256:       "weka.core.ProtectedProperties",
257:       "weka.classifiers.bayes.NaiveBayesMultinomial",
258:       "weka.core.TestInstances",
259:       "weka.core.Instances",
260:       "weka.core.UnassignedClassException",
261:       "weka.core.SelectedTag",
262:       "weka.classifiers.bayes.NaiveBayes",
263:       "weka.core.tokenizers.NGramTokenizer",
264:       "weka.core.UnassignedDatasetException",
265:       "weka.attributeSelection.ASEvaluation",
266:       "weka.attributeSelection.WrapperSubsetEval",
267:       "weka.classifiers.rules.ZeroR",
268:       "weka.core.stemmers.IteratedLovinsStemmer",
269:       "weka.classifiers.functions.supportVector.Kernel",
270:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
271:       "weka.classifiers.misc.SerializedClassifier",
272:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
273:       "weka.attributeSelection.PrincipalComponents",
274:       "weka.core.tokenizers.AlphabeticTokenizer",
275:       "weka.classifiers.SingleClassifierEnhancer",
276:       "weka.classifiers.misc.InputMappedClassifier",
277:       "weka.filters.Filter",
278:       "weka.core.Stopwords",
279:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
280:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
281:       "weka.core.neighboursearch.CoverTree",
282:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
283:       "weka.classifiers.bayes.NaiveBayesUpdateable",
284:       "weka.core.neighboursearch.LinearNNSearch",
285:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
286:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
287:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
288:       "weka.classifiers.meta.CostSensitiveClassifier",
289:       "weka.classifiers.CostMatrix",
290:       "weka.core.TechnicalInformation",
291:       "weka.core.TechnicalInformation$Type",
292:       "weka.core.TechnicalInformation$Field",
293:       "weka.core.neighboursearch.balltrees.BallNode",
294:       "weka.filters.supervised.attribute.Discretize",
295:       "weka.classifiers.trees.m5.M5Base",
296:       "weka.classifiers.rules.M5Rules",
297:       "weka.classifiers.functions.LinearRegression",
298:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
299:       "weka.core.stemmers.SnowballStemmer",
300:       "weka.core.converters.ArffLoader$ArffReader",
301:       "weka.classifiers.lazy.IBk",
302:       "weka.attributeSelection.InfoGainAttributeEval",
303:       "weka.core.WekaEnumeration",
304:       "weka.core.Attribute$1",
305:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
306:       "weka.classifiers.MultipleClassifiersCombiner",
307:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
308:       "weka.classifiers.meta.Vote",
309:       "weka.core.neighboursearch.KDTree",
310:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
311:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
312:       "weka.classifiers.trees.RandomForest",
313:       "weka.classifiers.trees.RandomTree",
314:       "weka.classifiers.functions.supportVector.CachedKernel",
315:       "weka.classifiers.functions.supportVector.RBFKernel",
316:       "weka.core.stemmers.Stemming",
317:       "weka.classifiers.functions.MultilayerPerceptron",
318:       "weka.core.FastVector",
319:       "weka.filters.unsupervised.attribute.NominalToBinary",
320:       "weka.classifiers.functions.neural.SigmoidUnit",
321:       "weka.classifiers.functions.neural.LinearUnit",
322:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
323:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
324:       "weka.classifiers.meta.Stacking",
325:       "weka.core.WekaException",
326:       "weka.core.UnsupportedAttributeTypeException",
327:       "weka.classifiers.functions.GaussianProcesses",
328:       "weka.classifiers.functions.supportVector.PolyKernel",
329:       "weka.filters.AllFilter",
330:       "weka.core.AttributeStats",
331:       "weka.classifiers.meta.AttributeSelectedClassifier",
332:       "weka.attributeSelection.CfsSubsetEval",
333:       "weka.attributeSelection.ASSearch",
334:       "weka.attributeSelection.BestFirst",
335:       "weka.classifiers.trees.J48",
336:       "weka.classifiers.IteratedSingleClassifierEnhancer",
337:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
338:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
339:       "weka.classifiers.meta.Bagging",
340:       "weka.classifiers.trees.REPTree",
341:       "weka.estimators.Estimator",
342:       "weka.estimators.DiscreteEstimator",
343:       "weka.attributeSelection.OneRAttributeEval",
344:       "weka.classifiers.functions.supportVector.Puk",
345:       "weka.classifiers.trees.LMT",
346:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
347:       "weka.classifiers.meta.LogitBoost",
348:       "weka.classifiers.trees.DecisionStump",
349:       "weka.classifiers.meta.FilteredClassifier",
350:       "weka.filters.supervised.attribute.AttributeSelection",
351:       "weka.attributeSelection.AttributeSelection",
352:       "weka.attributeSelection.GreedyStepwise",
353:       "weka.attributeSelection.CorrelationAttributeEval",
354:       "weka.classifiers.functions.SimpleLinearRegression",
355:       "weka.attributeSelection.ReliefFAttributeEval",
356:       "weka.estimators.MahalanobisEstimator",
357:       "weka.classifiers.rules.OneR",
358:       "weka.classifiers.functions.VotedPerceptron",
359:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
360:       "weka.estimators.NormalEstimator",
361:       "weka.classifiers.functions.SMO",
362:       "weka.filters.SimpleFilter",
363:       "weka.filters.SimpleStreamFilter",
364:       "weka.filters.MultiFilter",
365:       "weka.classifiers.functions.SGD",
366:       "weka.classifiers.meta.RandomCommittee",
367:       "weka.attributeSelection.GainRatioAttributeEval",
368:       "weka.classifiers.functions.SMOreg",
369:       "weka.classifiers.functions.supportVector.RegOptimizer",
370:       "weka.classifiers.functions.supportVector.RegSMO",
371:       "weka.classifiers.functions.supportVector.RegSMOImproved",
372:       "weka.classifiers.meta.MultiScheme",
373:       "weka.classifiers.meta.RandomSubSpace",
374:       "weka.classifiers.meta.AdditiveRegression",
375:       "weka.core.FindWithCapabilities",
376:       "weka.core.SingleIndex",
377:       "weka.classifiers.meta.RegressionByDiscretization",
378:       "weka.filters.unsupervised.attribute.Discretize",
379:       "weka.classifiers.trees.j48.ClassifierTree",
380:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
381:       "weka.classifiers.meta.AdaBoostM1",
382:       "weka.classifiers.meta.CVParameterSelection",
383:       "weka.classifiers.rules.JRip",
384:       "weka.core.neighboursearch.PerformanceStats",
385:       "weka.core.Javadoc",
386:       "weka.core.ClassDiscovery",
387:       "weka.core.ClassCache",
388:       "weka.core.AllJavadoc",
389:       "weka.classifiers.rules.DecisionTable",
390:       "weka.core.ManhattanDistance",
391:       "weka.classifiers.meta.ClassificationViaRegression",
392:       "weka.classifiers.trees.M5P",
393:       "weka.classifiers.functions.Logistic",
394:       "weka.core.matrix.Matrix",
395:       "weka.estimators.UnivariateEqualFrequencyHistogramEstimator",
396:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
397:       "weka.classifiers.rules.PART",
398:       "weka.classifiers.rules.part.MakeDecList",
399:       "weka.classifiers.meta.MultiClassClassifier",
400:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
401:       "weka.classifiers.functions.supportVector.StringKernel",
402:       "weka.estimators.PoissonEstimator",
403:       "weka.classifiers.functions.SimpleLogistic",
404:       "weka.classifiers.lazy.LWL",
405:       "weka.estimators.KernelEstimator",
406:       "weka.core.ListOptions"
407:     );
408:   }
409: }

[MASTER] 10:45:52.964 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_periodicP = 1123;
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = new Integer(1123);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
hashMap0.put(integer0, linkedHashMap0);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
naiveBayesMultinomialText0.pruneDictionary();
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());


[MASTER] 10:45:55.155 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 10:45:55.224 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
[MASTER] 10:45:55.836 [logback-1] WARN  ClassResetter - java.lang.reflect.InvocationTargetException, caused by: java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 10:45:55.836 [logback-1] WARN  ClassResetter - java.lang.reflect.InvocationTargetException, caused by: java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/mosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/mosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18443
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:47:04.558 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:47:04.560 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:47:04.561 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:47:05.084 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 10:47:05.649 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 10:47:05.650 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 10:47:07.238 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 10:47:07.282 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 10:47:07.282 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 10:47:07.282 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 10:47:07.283 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 10:47:07.283 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 10:47:07.283 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 10:47:07.283 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 10:47:07.284 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 10:47:07.329 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 10:47:07.337 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 3904
* Using seed 1027
* Starting evolution
[MASTER] 10:47:10.403 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 10:48:49.760 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 127s and 88 generations, 43042 statements, best individual has fitness: 15632.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 57%
* Total number of goals: 1378
* Number of covered goals: 789
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 42%
* Total number of goals: 809
* Number of covered goals: 337
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 60
* Number of covered goals: 60
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 62%
* Total number of goals: 424
* Number of covered goals: 262
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 22%
* Total number of goals: 278
* Number of covered goals: 60
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 103
* Number of covered goals: 101
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 97%
* Total number of goals: 103
* Number of covered goals: 100
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 39%
* Total number of goals: 809
* Number of covered goals: 315
* Generated 140 tests with total length 1132
* Resulting test suite's coverage: 51% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
[MASTER] 10:52:26.722 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 10:52:27.104 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 10:52:27.104 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 10:52:28.324 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/mosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18440
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:53:47.597 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:53:47.625 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:53:47.636 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:53:47.712 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2699
* Using seed 1027
* Starting evolution
* Search finished after 136s and 31 generations, 21848 statements, best individual has fitness: 2248.0
[MASTER] 10:56:08.591 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 19 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 647
* Number of covered goals: 631
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 95%
* Total number of goals: 441
* Number of covered goals: 419
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 678
* Number of covered goals: 614
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 244
* Number of covered goals: 107
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 91%
* Total number of goals: 441
* Number of covered goals: 403
* Generated 204 tests with total length 2113
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 11:01:46.230 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6821583333333333% of time used, but only 100/204 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
[MASTER] 11:02:09.253 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_9_1575543729230/weka/experiment/ResultMatrix_9_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_9_1575543729230/weka/experiment/ResultMatrix_9_tmp__ESTest_scaffolding.java]]
[MASTER] 11:02:09.253 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:02:09.253 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 11:02:09.256 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   variable int1
  location: class weka.experiment.ResultMatrix_9_tmp__ESTest: 31
[MASTER] 11:02:09.256 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_9_1575543729230/weka/experiment/ResultMatrix_9_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 11:02:09 GMT 2019
4:  */
5: 
6: package weka.experiment;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import org.evosuite.runtime.EvoRunner;
11: import org.evosuite.runtime.EvoRunnerParameters;
12: import org.junit.runner.RunWith;
13: import weka.experiment.ResultMatrix;
14: import weka.experiment.ResultMatrixHTML;
15: import weka.experiment.ResultMatrixSignificance;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class ResultMatrix_9_tmp__ESTest extends ResultMatrix_9_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=3.4884858967423966
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
27:       ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
28:       int[][] intArray0 = new int[0][4];
29:       resultMatrixSignificance0.getSignificance(6, 2);
30:       int int0 = ResultMatrix.SIGNIFICANCE_WIN;
31:       assertFalse(int0 == int1);
32:   }
33: }
RegularFileObject[/tmp/EvoSuite_9_1575543729230/weka/experiment/ResultMatrix_9_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 11:02:09 GMT 2019
5:  */
6: 
7: package weka.experiment;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class ResultMatrix_9_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.experiment.ResultMatrix"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ResultMatrix_9_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.experiment.ResultMatrixCSV",
89:       "weka.core.OptionHandler",
90:       "weka.experiment.ResultMatrixPlainText",
91:       "weka.experiment.ResultMatrixLatex",
92:       "weka.experiment.ResultMatrixSignificance",
93:       "weka.experiment.ResultMatrix",
94:       "weka.experiment.ResultMatrixHTML",
95:       "weka.core.RevisionUtils",
96:       "weka.core.Option",
97:       "weka.core.Version",
98:       "weka.experiment.ResultMatrixGnuPlot",
99:       "weka.core.Utils",
100:       "weka.core.RevisionHandler"
101:     );
102:   } 
103: 
104:   private static void resetClasses() {
105:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ResultMatrix_9_tmp__ESTest_scaffolding.class.getClassLoader()); 
106: 
107:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
108:       "weka.experiment.ResultMatrix",
109:       "weka.experiment.ResultMatrixGnuPlot",
110:       "weka.experiment.ResultMatrixSignificance",
111:       "weka.experiment.ResultMatrixCSV",
112:       "weka.experiment.ResultMatrixHTML",
113:       "weka.experiment.ResultMatrixPlainText",
114:       "weka.core.Utils",
115:       "weka.experiment.ResultMatrixLatex",
116:       "weka.core.RevisionUtils",
117:       "weka.core.Option",
118:       "weka.core.Version"
119:     );
120:   }
121: }

[MASTER] 11:02:09.256 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
int[][] intArray0 = new int[0][4];
resultMatrixSignificance0.getSignificance(6, 2);
int int0 = ResultMatrix.SIGNIFICANCE_WIN;
assertFalse(int0 == int1);


[MASTER] 11:03:05.422 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/mosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18442
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 11:03:46.519 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 11:03:46.546 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 11:03:46.547 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 11:03:46.551 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2499
* Using seed 1027
* Starting evolution
[MASTER] 11:03:48.977 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 11:04:05.167 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I35 Branch 181 IFEQ L1117 - false
[MASTER] 11:04:05.169 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 370: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1117 - ReplaceVariable result -> b
[MASTER] 11:04:05.169 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 371: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1117 - ReplaceVariable j -> n
[MASTER] 11:04:05.169 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 372: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1117 - InsertUnaryOp Negation of j
[MASTER] 11:04:05.169 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 373: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1117 - InsertUnaryOp IINC 1 j
[MASTER] 11:04:05.169 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 374: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1117 - InsertUnaryOp IINC -1 j
[MASTER] 11:04:05.169 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 375: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1117 - ReplaceConstant - 0.0 -> 1.0
[MASTER] 11:04:05.169 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 376: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1117 - ReplaceConstant - 0.0 -> -1.0
[MASTER] 11:04:05.169 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 377: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1117 - ReplaceVariable j -> n
[MASTER] 11:04:05.171 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I35 Branch 181 IFEQ L1117 - false in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
* Search finished after 122s and 102 generations, 55442 statements, best individual has fitness: 16712.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 18 tests with total length 102
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/mosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
