* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21268
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 05:08:59.472 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 05:08:59.474 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 05:08:59.474 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 05:08:59.493 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2499
* Using seed 1020
* Starting evolution
[MASTER] 05:09:00.814 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 05:09:05.799 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: Line 1135
[MASTER] 05:09:05.799 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: Line 1136
[MASTER] 05:09:05.799 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: Line 1138
[MASTER] 05:09:05.799 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I22 Branch 179 IFEQ L1115 - true
[MASTER] 05:09:05.799 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I138 Branch 186 IFLT L1136 - true
[MASTER] 05:09:05.799 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I138 Branch 186 IFLT L1136 - false
[MASTER] 05:09:05.799 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I142 Branch 187 IFEQ L1136 - false
[MASTER] 05:09:05.799 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I152 Branch 188 IFLT L1138 - true
[MASTER] 05:09:05.806 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I152 Branch 188 IFLT L1138 - true in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
[MASTER] 05:09:05.806 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I142 Branch 187 IFEQ L1136 - false in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
[MASTER] 05:09:05.806 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I138 Branch 186 IFLT L1136 - false in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
[MASTER] 05:09:05.806 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I22 Branch 179 IFEQ L1115 - true in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
[MASTER] 05:09:05.806 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I138 Branch 186 IFLT L1136 - true in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
* Search finished after 121s and 104 generations, 70307 statements, best individual has fitness: 16712.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 18 tests with total length 102
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/mosa/tests/s1020/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21267
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 05:22:40.255 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 05:22:40.257 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 05:22:40.284 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 05:22:41.090 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 05:22:41.714 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 05:22:41.714 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 05:22:43.066 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 05:22:43.091 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 05:22:43.091 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 05:22:43.101 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 05:22:43.101 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 05:22:43.101 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 05:22:43.102 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 05:22:43.102 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 05:22:43.103 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 05:22:43.157 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 05:22:43.167 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 3904
* Using seed 1020
* Starting evolution
[MASTER] 05:22:47.388 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 05:24:03.812 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 126s and 52 generations, 29904 statements, best individual has fitness: 15800.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 57%
* Total number of goals: 1378
* Number of covered goals: 789
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 41%
* Total number of goals: 809
* Number of covered goals: 330
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 60
* Number of covered goals: 60
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 58%
* Total number of goals: 424
* Number of covered goals: 247
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 19%
* Total number of goals: 278
* Number of covered goals: 54
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 103
* Number of covered goals: 102
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 103
* Number of covered goals: 102
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 40%
* Total number of goals: 809
* Number of covered goals: 323
* Generated 143 tests with total length 1671
* Resulting test suite's coverage: 50% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
[MASTER] 05:30:18.120 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 05:30:18.577 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 05:30:18.577 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 05:30:19.826 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/mosa/tests/s1020/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21263
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21271
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21272
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Total number of test goals for MOSA: 1367
* Using seed 1020
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 05:33:00.273 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 05:33:00.274 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 05:33:00.275 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 05:33:00.364 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 05:33:00.380 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 05:33:00.401 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 05:33:02.240 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 05:33:02.255 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 05:33:02.263 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 05:33:04.471 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 05:33:04.962 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 05:33:04.962 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Total number of test goals for MOSA: 1412
* Using seed 1020
* Starting evolution
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2767
* Using seed 1020
* Starting evolution
[MASTER] 05:33:07.452 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 136
[MASTER] 05:33:07.479 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 158
[MASTER] 05:33:07.480 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 161
[MASTER] 05:33:07.480 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 164
[MASTER] 05:33:07.480 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 167
[MASTER] 05:33:07.480 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 170
[MASTER] 05:33:07.480 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 173
[MASTER] 05:33:07.480 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 176
[MASTER] 05:33:07.480 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 179
[MASTER] 05:33:07.480 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 182
[MASTER] 05:33:07.480 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 185
[MASTER] 05:33:07.480 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 1075
[MASTER] 05:33:07.496 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: root-Branch
[MASTER] 05:33:07.501 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.<init>()V
[MASTER] 05:33:07.503 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.<init>()V
[MASTER] 05:33:07.506 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.<init>()V: root-Branch in context: weka.classifiers.rules.JRip:<init>()V
[MASTER] 05:33:09.140 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 05:33:09.187 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 05:33:15.799 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;: Line 927
[MASTER] 05:33:15.799 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;: Line 928
[MASTER] 05:33:15.799 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.getCover()D: Line 727
[MASTER] 05:33:15.802 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;: I5 Branch 173 IFNE L927 - false
[MASTER] 05:33:15.802 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.getCover()D: root-Branch
[MASTER] 05:33:15.804 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 685: weka.classifiers.rules.JRip$Antd.getCover()D:727 - ReplaceVariable cover -> accu
[MASTER] 05:33:15.804 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 686: weka.classifiers.rules.JRip$Antd.getCover()D:727 - ReplaceVariable cover -> value
[MASTER] 05:33:15.804 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 687: weka.classifiers.rules.JRip$Antd.getCover()D:727 - ReplaceVariable cover -> accuRate
[MASTER] 05:33:15.804 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 688: weka.classifiers.rules.JRip$Antd.getCover()D:727 - ReplaceVariable cover -> maxInfoGain
[MASTER] 05:33:15.804 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 689: weka.classifiers.rules.JRip$Antd.getCover()D:727 - InsertUnaryOp Negation
[MASTER] 05:33:15.805 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 863: weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;:927 - ReplaceVariable value -> cover
[MASTER] 05:33:15.805 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 864: weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;:927 - ReplaceVariable value -> accu
[MASTER] 05:33:15.805 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 865: weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;:927 - ReplaceVariable value -> accuRate
[MASTER] 05:33:15.805 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 866: weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;:927 - ReplaceVariable value -> maxInfoGain
[MASTER] 05:33:15.805 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 867: weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;:927 - InsertUnaryOp Negation
[MASTER] 05:33:15.805 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 868: weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;:927 - ReplaceComparisonOperator != -> -1
[MASTER] 05:33:15.805 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 871: weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;:927 - ReplaceConstant -  <=  -> 
[MASTER] 05:33:15.805 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 873: weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;:928 - ReplaceVariable splitPoint -> cover
[MASTER] 05:33:15.805 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 874: weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;:928 - ReplaceVariable splitPoint -> accu
[MASTER] 05:33:15.805 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 875: weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;:928 - ReplaceVariable splitPoint -> value
[MASTER] 05:33:15.805 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 876: weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;:928 - ReplaceVariable splitPoint -> accuRate
[MASTER] 05:33:15.805 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 877: weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;:928 - ReplaceVariable splitPoint -> maxInfoGain
[MASTER] 05:33:15.805 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 878: weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;:928 - InsertUnaryOp Negation
[MASTER] 05:33:15.805 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 879: weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;:928 - ReplaceConstant - 6 -> 0
[MASTER] 05:33:15.805 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 880: weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;:928 - ReplaceConstant - 6 -> 1
[MASTER] 05:33:15.805 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 881: weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;:928 - ReplaceConstant - 6 -> -1
[MASTER] 05:33:15.805 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 882: weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;:928 - ReplaceConstant - 6 -> 5
[MASTER] 05:33:15.805 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 883: weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;:928 - ReplaceConstant - 6 -> 7
[MASTER] 05:33:15.809 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NumericAntd.toString()Ljava/lang/String;
[MASTER] 05:33:15.809 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.Antd.getCover()D
[MASTER] 05:33:15.809 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.Antd.copy()Ljava/lang/Object;
[MASTER] 05:33:15.810 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.NumericAntd.toString()Ljava/lang/String;
[MASTER] 05:33:15.810 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.Antd.getCover()D
[MASTER] 05:33:15.811 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.Antd.copy()Ljava/lang/Object;
[MASTER] 05:33:15.811 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$Antd.getCover()D: root-Branch in context: weka.classifiers.rules.JRip$Antd:getCover()D
[MASTER] 05:33:15.811 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;: I5 Branch 173 IFNE L927 - false in context: 
[MASTER] 05:33:45.640 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 05:34:03.102 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.Antd.splitData(Lweka/core/Instances;DD)[Lweka/core/Instances;
[MASTER] 05:34:16.244 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 124s and 130 generations, 75025 statements, best individual has fitness: 2848.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 217
* Number of covered goals: 188
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 286
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 87%
* Total number of goals: 260
* Number of covered goals: 227
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 286
* Generated 69 tests with total length 266
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 123s and 213 generations, 90940 statements, best individual has fitness: 1480.0
* Search finished after 124s and 141 generations, 69232 statements, best individual has fitness: 12488.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 90%
* Total number of goals: 338
* Number of covered goals: 304
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 85%
* Total number of goals: 194
* Number of covered goals: 164
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 476
* Number of covered goals: 441
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 61
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 83%
* Total number of goals: 194
* Number of covered goals: 161
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Generated 84 tests with total length 510
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Coverage of criterion LINE: 37%
* Total number of goals: 705
* Number of covered goals: 263
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 27%
* Total number of goals: 416
* Number of covered goals: 111
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 56%
* Total number of goals: 993
* Number of covered goals: 554
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 30%
* Total number of goals: 93
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 27%
* Total number of goals: 416
* Number of covered goals: 111
* Generated 77 tests with total length 624
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 73%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/mosa/tests/s1020/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/mosa/tests/s1020/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 58%
* Compiling and checking tests
[MASTER] 05:38:16.276 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_3_1575524296230/weka/classifiers/bayes/NaiveBayesMultinomialText_3_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_3_1575524296230/weka/classifiers/bayes/NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding.java]]
[MASTER] 05:38:16.276 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 05:38:16.276 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 05:38:16.280 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 05:38:16.281 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_3_1575524296230/weka/classifiers/bayes/NaiveBayesMultinomialText_3_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 05:38:16 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_3_tmp__ESTest extends NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=1.0931471805599453
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
28:       naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
29:       naiveBayesMultinomialText0.getUseStopList();
30:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
31:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
32:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
33:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
34:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
35:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
36:   }
37: }
RegularFileObject[/tmp/EvoSuite_3_1575524296230/weka/classifiers/bayes/NaiveBayesMultinomialText_3_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 05:38:16 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.classifiers.AbstractClassifier",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.OptionHandler",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.trees.m5.M5Base",
96:       "weka.core.WekaException",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.Classifier",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.Capabilities$Capability",
102:       "weka.core.DenseInstance",
103:       "weka.core.SparseInstance",
104:       "org.pentaho.packageManagement.PackageManager",
105:       "weka.estimators.PoissonEstimator",
106:       "weka.classifiers.functions.LinearRegression",
107:       "weka.core.stemmers.Stemmer",
108:       "weka.core.tokenizers.WordTokenizer",
109:       "weka.classifiers.misc.SerializedClassifier",
110:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
111:       "org.pentaho.packageManagement.DefaultPackageManager",
112:       "weka.core.stemmers.SnowballStemmer",
113:       "weka.classifiers.Evaluation",
114:       "weka.core.WekaPackageManager",
115:       "org.bounce.net.DefaultAuthenticator",
116:       "weka.filters.SupervisedFilter",
117:       "weka.core.TechnicalInformationHandler",
118:       "weka.estimators.IncrementalEstimator",
119:       "weka.estimators.Estimator$Builder",
120:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
121:       "weka.core.Option",
122:       "weka.core.stemmers.NullStemmer",
123:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
124:       "weka.core.EnvironmentHandler",
125:       "weka.classifiers.functions.SGDText",
126:       "weka.classifiers.trees.m5.RuleNode",
127:       "weka.filters.Sourcable",
128:       "weka.core.Utils",
129:       "weka.core.tokenizers.Tokenizer",
130:       "weka.core.Attribute",
131:       "weka.core.NoSupportForMissingValuesException",
132:       "weka.core.Stopwords",
133:       "weka.classifiers.UpdateableClassifier",
134:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
135:       "weka.core.FastVector",
136:       "weka.core.MultiInstanceCapabilitiesHandler",
137:       "weka.core.Copyable",
138:       "weka.core.Capabilities",
139:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
140:       "weka.core.BinarySparseInstance",
141:       "weka.filters.supervised.attribute.NominalToBinary",
142:       "weka.core.tokenizers.NGramTokenizer",
143:       "weka.core.UnassignedDatasetException",
144:       "weka.classifiers.RandomizableClassifier",
145:       "weka.core.SerializedObject",
146:       "weka.clusterers.UpdateableClusterer",
147:       "weka.core.Summarizable",
148:       "weka.classifiers.SingleClassifierEnhancer",
149:       "weka.core.RevisionUtils",
150:       "weka.core.AdditionalMeasureProducer",
151:       "org.pentaho.packageManagement.PackageManager$1",
152:       "weka.core.Instance",
153:       "weka.estimators.Estimator",
154:       "weka.core.Drawable",
155:       "weka.core.ProtectedProperties",
156:       "weka.core.AttributeStats",
157:       "weka.core.WeightedInstancesHandler",
158:       "weka.core.CapabilitiesHandler",
159:       "weka.core.Randomizable",
160:       "weka.classifiers.rules.M5Rules",
161:       "weka.core.AbstractInstance",
162:       "weka.core.Instances",
163:       "weka.core.SelectedTag",
164:       "org.pentaho.packageManagement.DefaultPackage",
165:       "weka.classifiers.misc.InputMappedClassifier",
166:       "weka.core.UnassignedClassException",
167:       "weka.classifiers.rules.ZeroR",
168:       "weka.core.Version",
169:       "weka.core.TechnicalInformation",
170:       "weka.core.UnsupportedAttributeTypeException",
171:       "weka.classifiers.Sourcable",
172:       "weka.core.RevisionHandler",
173:       "weka.classifiers.evaluation.output.prediction.PlainText",
174:       "weka.filters.unsupervised.attribute.RemoveUseless",
175:       "weka.core.xml.XMLSerialization",
176:       "weka.classifiers.xml.XMLClassifier",
177:       "weka.filters.Filter",
178:       "weka.core.Tag"
179:     );
180:   } 
181: 
182:   private static void resetClasses() {
183:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding.class.getClassLoader()); 
184: 
185:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
186:       "weka.classifiers.AbstractClassifier",
187:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
188:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
189:       "weka.core.Capabilities$Capability",
190:       "weka.core.tokenizers.Tokenizer",
191:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
192:       "weka.core.tokenizers.WordTokenizer",
193:       "weka.core.stemmers.NullStemmer",
194:       "weka.core.AbstractInstance",
195:       "weka.core.SparseInstance",
196:       "weka.core.BinarySparseInstance",
197:       "weka.core.Attribute",
198:       "weka.core.ProtectedProperties",
199:       "weka.core.Utils",
200:       "weka.core.UnassignedDatasetException",
201:       "weka.core.RevisionUtils",
202:       "weka.classifiers.Evaluation",
203:       "weka.core.Option",
204:       "weka.core.Instances",
205:       "weka.classifiers.bayes.NaiveBayes",
206:       "weka.classifiers.CostMatrix",
207:       "weka.core.Capabilities",
208:       "org.pentaho.packageManagement.PackageManager",
209:       "org.pentaho.packageManagement.DefaultPackageManager",
210:       "weka.core.Version",
211:       "weka.core.Environment",
212:       "weka.core.WekaPackageManager",
213:       "weka.core.SerializedObject",
214:       "weka.core.DenseInstance",
215:       "weka.core.neighboursearch.NearestNeighbourSearch",
216:       "weka.core.neighboursearch.CoverTree",
217:       "weka.core.NormalizableDistance",
218:       "weka.core.EuclideanDistance",
219:       "weka.core.Range",
220:       "weka.core.Stopwords",
221:       "weka.core.neighboursearch.BallTree",
222:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
223:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
224:       "weka.core.neighboursearch.balltrees.BallSplitter",
225:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
226:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
227:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
228:       "weka.core.TestInstances",
229:       "weka.attributeSelection.ASEvaluation",
230:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
231:       "weka.attributeSelection.PrincipalComponents",
232:       "weka.filters.Filter",
233:       "weka.filters.SimpleFilter",
234:       "weka.filters.SimpleStreamFilter",
235:       "weka.filters.MultiFilter",
236:       "weka.filters.AllFilter",
237:       "weka.core.tokenizers.NGramTokenizer",
238:       "weka.filters.supervised.attribute.Discretize",
239:       "weka.core.stemmers.LovinsStemmer",
240:       "weka.classifiers.trees.J48",
241:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
242:       "weka.core.neighboursearch.balltrees.BallNode",
243:       "weka.core.neighboursearch.LinearNNSearch",
244:       "weka.classifiers.SingleClassifierEnhancer",
245:       "weka.classifiers.misc.InputMappedClassifier",
246:       "weka.classifiers.rules.ZeroR",
247:       "weka.classifiers.RandomizableClassifier",
248:       "weka.core.Tag",
249:       "weka.classifiers.functions.SGDText",
250:       "weka.classifiers.bayes.BayesNet",
251:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
252:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
253:       "weka.classifiers.bayes.net.search.local.K2",
254:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
255:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
256:       "weka.classifiers.functions.supportVector.Kernel",
257:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
258:       "weka.core.stemmers.IteratedLovinsStemmer",
259:       "weka.classifiers.functions.SimpleLogistic",
260:       "weka.classifiers.functions.supportVector.CachedKernel",
261:       "weka.classifiers.functions.supportVector.Puk",
262:       "weka.core.converters.ArffLoader$ArffReader",
263:       "weka.core.neighboursearch.KDTree",
264:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
265:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
266:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
267:       "weka.classifiers.meta.CostSensitiveClassifier",
268:       "weka.classifiers.trees.RandomForest",
269:       "weka.classifiers.trees.RandomTree",
270:       "weka.classifiers.bayes.NaiveBayesMultinomial",
271:       "weka.classifiers.MultipleClassifiersCombiner",
272:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
273:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
274:       "weka.classifiers.meta.Stacking",
275:       "weka.core.WekaException",
276:       "weka.core.UnsupportedAttributeTypeException",
277:       "weka.classifiers.misc.SerializedClassifier",
278:       "weka.classifiers.lazy.KStar",
279:       "weka.classifiers.rules.OneR",
280:       "weka.core.stemmers.SnowballStemmer",
281:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
282:       "weka.classifiers.bayes.net.BIFReader",
283:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
284:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
285:       "weka.attributeSelection.WrapperSubsetEval",
286:       "weka.classifiers.lazy.IBk",
287:       "weka.core.FindWithCapabilities",
288:       "weka.core.SingleIndex",
289:       "weka.attributeSelection.CfsSubsetEval",
290:       "weka.estimators.Estimator",
291:       "weka.estimators.NormalEstimator",
292:       "weka.core.SelectedTag",
293:       "weka.classifiers.functions.supportVector.StringKernel",
294:       "weka.classifiers.meta.FilteredClassifier",
295:       "weka.filters.supervised.attribute.AttributeSelection",
296:       "weka.attributeSelection.AttributeSelection",
297:       "weka.attributeSelection.ASSearch",
298:       "weka.attributeSelection.GreedyStepwise",
299:       "weka.attributeSelection.BestFirst",
300:       "weka.classifiers.functions.SMOreg",
301:       "weka.classifiers.functions.supportVector.RegOptimizer",
302:       "weka.classifiers.functions.supportVector.RegSMO",
303:       "weka.classifiers.functions.supportVector.RegSMOImproved",
304:       "weka.classifiers.functions.supportVector.PolyKernel",
305:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
306:       "weka.core.matrix.Matrix",
307:       "weka.classifiers.trees.REPTree",
308:       "weka.core.UnassignedClassException",
309:       "weka.classifiers.trees.j48.ClassifierTree",
310:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
311:       "weka.classifiers.functions.Logistic",
312:       "weka.core.TechnicalInformation",
313:       "weka.core.TechnicalInformation$Type",
314:       "weka.core.TechnicalInformation$Field",
315:       "weka.classifiers.bayes.NaiveBayesUpdateable",
316:       "weka.attributeSelection.ReliefFAttributeEval",
317:       "weka.core.ClassDiscovery",
318:       "weka.attributeSelection.OneRAttributeEval",
319:       "weka.core.WekaEnumeration",
320:       "weka.core.Attribute$1",
321:       "weka.classifiers.IteratedSingleClassifierEnhancer",
322:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
323:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
324:       "weka.classifiers.meta.Bagging",
325:       "weka.classifiers.meta.MultiClassClassifier",
326:       "weka.estimators.KernelEstimator",
327:       "weka.classifiers.functions.supportVector.RBFKernel",
328:       "weka.classifiers.functions.SMO",
329:       "weka.classifiers.meta.AdditiveRegression",
330:       "weka.attributeSelection.InfoGainAttributeEval",
331:       "weka.classifiers.functions.SimpleLinearRegression",
332:       "weka.classifiers.functions.LinearRegression",
333:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
334:       "weka.classifiers.meta.Vote",
335:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
336:       "weka.classifiers.trees.DecisionStump",
337:       "weka.classifiers.meta.RegressionByDiscretization",
338:       "weka.filters.unsupervised.attribute.Discretize",
339:       "weka.classifiers.functions.SGD",
340:       "weka.classifiers.trees.m5.M5Base",
341:       "weka.classifiers.rules.M5Rules",
342:       "weka.classifiers.trees.LMT",
343:       "weka.classifiers.functions.VotedPerceptron",
344:       "weka.classifiers.meta.RandomCommittee",
345:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
346:       "weka.classifiers.meta.ClassificationViaRegression",
347:       "weka.classifiers.trees.M5P",
348:       "weka.classifiers.functions.GaussianProcesses",
349:       "weka.classifiers.functions.MultilayerPerceptron",
350:       "weka.core.FastVector",
351:       "weka.filters.unsupervised.attribute.NominalToBinary",
352:       "weka.classifiers.functions.neural.SigmoidUnit",
353:       "weka.classifiers.functions.neural.LinearUnit",
354:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
355:       "weka.classifiers.meta.LogitBoost",
356:       "weka.attributeSelection.GainRatioAttributeEval",
357:       "weka.classifiers.rules.PART",
358:       "weka.classifiers.rules.part.MakeDecList",
359:       "weka.core.AttributeStats",
360:       "weka.classifiers.meta.MultiScheme",
361:       "weka.attributeSelection.CorrelationAttributeEval",
362:       "weka.core.tokenizers.AlphabeticTokenizer",
363:       "weka.core.Queue",
364:       "weka.core.AttributeLocator",
365:       "weka.core.StringLocator",
366:       "weka.core.RelationalLocator",
367:       "weka.core.ContingencyTables",
368:       "weka.core.Queue$QueueNode",
369:       "weka.classifiers.meta.CVParameterSelection",
370:       "weka.core.converters.ConverterUtils$DataSource",
371:       "weka.core.converters.AbstractLoader",
372:       "weka.core.converters.AbstractFileLoader",
373:       "weka.core.converters.ArffLoader",
374:       "weka.classifiers.meta.AdaBoostM1",
375:       "weka.estimators.DiscreteEstimator",
376:       "weka.core.stemmers.Stemming",
377:       "weka.experiment.Stats",
378:       "weka.classifiers.rules.DecisionTable",
379:       "weka.classifiers.rules.JRip",
380:       "weka.classifiers.functions.SGDText$Count",
381:       "weka.estimators.PoissonEstimator",
382:       "weka.classifiers.lazy.LWL",
383:       "weka.estimators.MahalanobisEstimator",
384:       "weka.core.ListOptions",
385:       "weka.classifiers.meta.AttributeSelectedClassifier",
386:       "weka.core.Statistics",
387:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
388:       "weka.core.Javadoc",
389:       "weka.core.ClassCache",
390:       "weka.core.AllJavadoc",
391:       "weka.classifiers.meta.RandomSubSpace",
392:       "weka.classifiers.meta.MultiClassClassifierUpdateable"
393:     );
394:   }
395: }

[MASTER] 05:38:16.284 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
naiveBayesMultinomialText0.getUseStopList();
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);


[MASTER] 05:38:17.021 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_27_1575524297002/weka/classifiers/bayes/NaiveBayesMultinomialText_27_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_27_1575524297002/weka/classifiers/bayes/NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding.java]]
[MASTER] 05:38:17.021 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 05:38:17.021 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 05:38:17.021 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 05:38:17.021 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 05:38:17.021 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_27_1575524297002/weka/classifiers/bayes/NaiveBayesMultinomialText_27_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 05:38:17 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.core.stemmers.Stemmer;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_27_tmp__ESTest extends NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=0.4
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
28:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
29:       naiveBayesMultinomialText0.setStemmer((Stemmer) null);
30:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
31:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
32:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
33:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
34:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
35:       
36:       int int0 = naiveBayesMultinomialText0.m_periodicP;
37:       assertEquals(0, int0);
38:   }
39: }
RegularFileObject[/tmp/EvoSuite_27_1575524297002/weka/classifiers/bayes/NaiveBayesMultinomialText_27_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 05:38:17 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.classifiers.AbstractClassifier",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.OptionHandler",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.trees.m5.M5Base",
96:       "weka.core.WekaException",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.Classifier",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.Capabilities$Capability",
102:       "weka.core.DenseInstance",
103:       "weka.core.SparseInstance",
104:       "org.pentaho.packageManagement.PackageManager",
105:       "weka.estimators.PoissonEstimator",
106:       "weka.classifiers.functions.LinearRegression",
107:       "weka.core.stemmers.Stemmer",
108:       "weka.core.tokenizers.WordTokenizer",
109:       "weka.classifiers.misc.SerializedClassifier",
110:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
111:       "org.pentaho.packageManagement.DefaultPackageManager",
112:       "weka.core.stemmers.SnowballStemmer",
113:       "weka.classifiers.Evaluation",
114:       "weka.core.WekaPackageManager",
115:       "org.bounce.net.DefaultAuthenticator",
116:       "weka.filters.SupervisedFilter",
117:       "weka.core.TechnicalInformationHandler",
118:       "weka.estimators.IncrementalEstimator",
119:       "weka.estimators.Estimator$Builder",
120:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
121:       "weka.core.Option",
122:       "weka.core.stemmers.NullStemmer",
123:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
124:       "weka.core.EnvironmentHandler",
125:       "weka.classifiers.functions.SGDText",
126:       "weka.classifiers.trees.m5.RuleNode",
127:       "weka.filters.Sourcable",
128:       "weka.core.Utils",
129:       "weka.core.tokenizers.Tokenizer",
130:       "weka.core.Attribute",
131:       "weka.core.NoSupportForMissingValuesException",
132:       "weka.core.Stopwords",
133:       "weka.classifiers.UpdateableClassifier",
134:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
135:       "weka.core.FastVector",
136:       "weka.core.MultiInstanceCapabilitiesHandler",
137:       "weka.core.Copyable",
138:       "weka.core.Capabilities",
139:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
140:       "weka.core.BinarySparseInstance",
141:       "weka.filters.supervised.attribute.NominalToBinary",
142:       "weka.core.tokenizers.NGramTokenizer",
143:       "weka.core.UnassignedDatasetException",
144:       "weka.classifiers.RandomizableClassifier",
145:       "weka.core.SerializedObject",
146:       "weka.clusterers.UpdateableClusterer",
147:       "weka.core.Summarizable",
148:       "weka.classifiers.SingleClassifierEnhancer",
149:       "weka.core.RevisionUtils",
150:       "weka.core.AdditionalMeasureProducer",
151:       "org.pentaho.packageManagement.PackageManager$1",
152:       "weka.core.Instance",
153:       "weka.estimators.Estimator",
154:       "weka.core.Drawable",
155:       "weka.core.ProtectedProperties",
156:       "weka.core.AttributeStats",
157:       "weka.core.WeightedInstancesHandler",
158:       "weka.core.CapabilitiesHandler",
159:       "weka.core.Randomizable",
160:       "weka.classifiers.rules.M5Rules",
161:       "weka.core.AbstractInstance",
162:       "weka.core.Instances",
163:       "weka.core.SelectedTag",
164:       "org.pentaho.packageManagement.DefaultPackage",
165:       "weka.classifiers.misc.InputMappedClassifier",
166:       "weka.core.UnassignedClassException",
167:       "weka.classifiers.rules.ZeroR",
168:       "weka.core.Version",
169:       "weka.core.TechnicalInformation",
170:       "weka.core.UnsupportedAttributeTypeException",
171:       "weka.classifiers.Sourcable",
172:       "weka.core.RevisionHandler",
173:       "weka.classifiers.evaluation.output.prediction.PlainText",
174:       "weka.filters.unsupervised.attribute.RemoveUseless",
175:       "weka.core.xml.XMLSerialization",
176:       "weka.classifiers.xml.XMLClassifier",
177:       "weka.filters.Filter",
178:       "weka.core.Tag"
179:     );
180:   } 
181: 
182:   private static void resetClasses() {
183:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_27_tmp__ESTest_scaffolding.class.getClassLoader()); 
184: 
185:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
186:       "weka.classifiers.AbstractClassifier",
187:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
188:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
189:       "weka.core.Capabilities$Capability",
190:       "weka.core.tokenizers.Tokenizer",
191:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
192:       "weka.core.tokenizers.WordTokenizer",
193:       "weka.core.stemmers.NullStemmer",
194:       "weka.core.AbstractInstance",
195:       "weka.core.SparseInstance",
196:       "weka.core.BinarySparseInstance",
197:       "weka.core.Attribute",
198:       "weka.core.ProtectedProperties",
199:       "weka.core.Utils",
200:       "weka.core.UnassignedDatasetException",
201:       "weka.core.RevisionUtils",
202:       "weka.classifiers.Evaluation",
203:       "weka.core.Option",
204:       "weka.core.Instances",
205:       "weka.classifiers.bayes.NaiveBayes",
206:       "weka.classifiers.CostMatrix",
207:       "weka.core.Capabilities",
208:       "org.pentaho.packageManagement.PackageManager",
209:       "org.pentaho.packageManagement.DefaultPackageManager",
210:       "weka.core.Version",
211:       "weka.core.Environment",
212:       "weka.core.WekaPackageManager",
213:       "weka.core.SerializedObject",
214:       "weka.core.DenseInstance",
215:       "weka.core.neighboursearch.NearestNeighbourSearch",
216:       "weka.core.neighboursearch.CoverTree",
217:       "weka.core.NormalizableDistance",
218:       "weka.core.EuclideanDistance",
219:       "weka.core.Range",
220:       "weka.core.Stopwords",
221:       "weka.core.neighboursearch.BallTree",
222:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
223:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
224:       "weka.core.neighboursearch.balltrees.BallSplitter",
225:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
226:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
227:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
228:       "weka.core.TestInstances",
229:       "weka.attributeSelection.ASEvaluation",
230:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
231:       "weka.attributeSelection.PrincipalComponents",
232:       "weka.filters.Filter",
233:       "weka.filters.SimpleFilter",
234:       "weka.filters.SimpleStreamFilter",
235:       "weka.filters.MultiFilter",
236:       "weka.filters.AllFilter",
237:       "weka.core.tokenizers.NGramTokenizer",
238:       "weka.filters.supervised.attribute.Discretize",
239:       "weka.core.stemmers.LovinsStemmer",
240:       "weka.classifiers.trees.J48",
241:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
242:       "weka.core.neighboursearch.balltrees.BallNode",
243:       "weka.core.neighboursearch.LinearNNSearch",
244:       "weka.classifiers.SingleClassifierEnhancer",
245:       "weka.classifiers.misc.InputMappedClassifier",
246:       "weka.classifiers.rules.ZeroR",
247:       "weka.classifiers.RandomizableClassifier",
248:       "weka.core.Tag",
249:       "weka.classifiers.functions.SGDText",
250:       "weka.classifiers.bayes.BayesNet",
251:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
252:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
253:       "weka.classifiers.bayes.net.search.local.K2",
254:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
255:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
256:       "weka.classifiers.functions.supportVector.Kernel",
257:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
258:       "weka.core.stemmers.IteratedLovinsStemmer",
259:       "weka.classifiers.functions.SimpleLogistic",
260:       "weka.classifiers.functions.supportVector.CachedKernel",
261:       "weka.classifiers.functions.supportVector.Puk",
262:       "weka.core.converters.ArffLoader$ArffReader",
263:       "weka.core.neighboursearch.KDTree",
264:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
265:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
266:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
267:       "weka.classifiers.meta.CostSensitiveClassifier",
268:       "weka.classifiers.trees.RandomForest",
269:       "weka.classifiers.trees.RandomTree",
270:       "weka.classifiers.bayes.NaiveBayesMultinomial",
271:       "weka.classifiers.MultipleClassifiersCombiner",
272:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
273:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
274:       "weka.classifiers.meta.Stacking",
275:       "weka.core.WekaException",
276:       "weka.core.UnsupportedAttributeTypeException",
277:       "weka.classifiers.misc.SerializedClassifier",
278:       "weka.classifiers.lazy.KStar",
279:       "weka.classifiers.rules.OneR",
280:       "weka.core.stemmers.SnowballStemmer",
281:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
282:       "weka.classifiers.bayes.net.BIFReader",
283:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
284:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
285:       "weka.attributeSelection.WrapperSubsetEval",
286:       "weka.classifiers.lazy.IBk",
287:       "weka.core.FindWithCapabilities",
288:       "weka.core.SingleIndex",
289:       "weka.attributeSelection.CfsSubsetEval",
290:       "weka.estimators.Estimator",
291:       "weka.estimators.NormalEstimator",
292:       "weka.core.SelectedTag",
293:       "weka.classifiers.functions.supportVector.StringKernel",
294:       "weka.classifiers.meta.FilteredClassifier",
295:       "weka.filters.supervised.attribute.AttributeSelection",
296:       "weka.attributeSelection.AttributeSelection",
297:       "weka.attributeSelection.ASSearch",
298:       "weka.attributeSelection.GreedyStepwise",
299:       "weka.attributeSelection.BestFirst",
300:       "weka.classifiers.functions.SMOreg",
301:       "weka.classifiers.functions.supportVector.RegOptimizer",
302:       "weka.classifiers.functions.supportVector.RegSMO",
303:       "weka.classifiers.functions.supportVector.RegSMOImproved",
304:       "weka.classifiers.functions.supportVector.PolyKernel",
305:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
306:       "weka.core.matrix.Matrix",
307:       "weka.classifiers.trees.REPTree",
308:       "weka.core.UnassignedClassException",
309:       "weka.classifiers.trees.j48.ClassifierTree",
310:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
311:       "weka.classifiers.functions.Logistic",
312:       "weka.core.TechnicalInformation",
313:       "weka.core.TechnicalInformation$Type",
314:       "weka.core.TechnicalInformation$Field",
315:       "weka.classifiers.bayes.NaiveBayesUpdateable",
316:       "weka.attributeSelection.ReliefFAttributeEval",
317:       "weka.core.ClassDiscovery",
318:       "weka.attributeSelection.OneRAttributeEval",
319:       "weka.core.WekaEnumeration",
320:       "weka.core.Attribute$1",
321:       "weka.classifiers.IteratedSingleClassifierEnhancer",
322:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
323:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
324:       "weka.classifiers.meta.Bagging",
325:       "weka.classifiers.meta.MultiClassClassifier",
326:       "weka.estimators.KernelEstimator",
327:       "weka.classifiers.functions.supportVector.RBFKernel",
328:       "weka.classifiers.functions.SMO",
329:       "weka.classifiers.meta.AdditiveRegression",
330:       "weka.attributeSelection.InfoGainAttributeEval",
331:       "weka.classifiers.functions.SimpleLinearRegression",
332:       "weka.classifiers.functions.LinearRegression",
333:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
334:       "weka.classifiers.meta.Vote",
335:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
336:       "weka.classifiers.trees.DecisionStump",
337:       "weka.classifiers.meta.RegressionByDiscretization",
338:       "weka.filters.unsupervised.attribute.Discretize",
339:       "weka.classifiers.functions.SGD",
340:       "weka.classifiers.trees.m5.M5Base",
341:       "weka.classifiers.rules.M5Rules",
342:       "weka.classifiers.trees.LMT",
343:       "weka.classifiers.functions.VotedPerceptron",
344:       "weka.classifiers.meta.RandomCommittee",
345:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
346:       "weka.classifiers.meta.ClassificationViaRegression",
347:       "weka.classifiers.trees.M5P",
348:       "weka.classifiers.functions.GaussianProcesses",
349:       "weka.classifiers.functions.MultilayerPerceptron",
350:       "weka.core.FastVector",
351:       "weka.filters.unsupervised.attribute.NominalToBinary",
352:       "weka.classifiers.functions.neural.SigmoidUnit",
353:       "weka.classifiers.functions.neural.LinearUnit",
354:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
355:       "weka.classifiers.meta.LogitBoost",
356:       "weka.attributeSelection.GainRatioAttributeEval",
357:       "weka.classifiers.rules.PART",
358:       "weka.classifiers.rules.part.MakeDecList",
359:       "weka.core.AttributeStats",
360:       "weka.classifiers.meta.MultiScheme",
361:       "weka.attributeSelection.CorrelationAttributeEval",
362:       "weka.core.tokenizers.AlphabeticTokenizer",
363:       "weka.core.Queue",
364:       "weka.core.AttributeLocator",
365:       "weka.core.StringLocator",
366:       "weka.core.RelationalLocator",
367:       "weka.core.ContingencyTables",
368:       "weka.core.Queue$QueueNode",
369:       "weka.classifiers.meta.CVParameterSelection",
370:       "weka.core.converters.ConverterUtils$DataSource",
371:       "weka.core.converters.AbstractLoader",
372:       "weka.core.converters.AbstractFileLoader",
373:       "weka.core.converters.ArffLoader",
374:       "weka.classifiers.meta.AdaBoostM1",
375:       "weka.estimators.DiscreteEstimator",
376:       "weka.core.stemmers.Stemming",
377:       "weka.experiment.Stats",
378:       "weka.classifiers.rules.DecisionTable",
379:       "weka.classifiers.rules.JRip",
380:       "weka.classifiers.functions.SGDText$Count",
381:       "weka.estimators.PoissonEstimator",
382:       "weka.classifiers.lazy.LWL",
383:       "weka.estimators.MahalanobisEstimator",
384:       "weka.core.ListOptions",
385:       "weka.classifiers.meta.AttributeSelectedClassifier",
386:       "weka.core.Statistics",
387:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
388:       "weka.core.Javadoc",
389:       "weka.core.ClassCache",
390:       "weka.core.AllJavadoc",
391:       "weka.classifiers.meta.RandomSubSpace",
392:       "weka.classifiers.meta.MultiClassClassifierUpdateable"
393:     );
394:   }
395: }

[MASTER] 05:38:17.022 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.setStemmer((Stemmer) null);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());

int int0 = naiveBayesMultinomialText0.m_periodicP;
assertEquals(0, int0);


[MASTER] 05:38:17.945 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_68_1575524297926/weka/classifiers/bayes/NaiveBayesMultinomialText_68_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_68_1575524297926/weka/classifiers/bayes/NaiveBayesMultinomialText_68_tmp__ESTest_scaffolding.java]]
[MASTER] 05:38:17.945 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 05:38:17.945 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 05:38:17.946 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 05:38:17.946 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 05:38:17.946 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 05:38:17.946 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 05:38:17.946 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 05:38:17.946 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_68_1575524297926/weka/classifiers/bayes/NaiveBayesMultinomialText_68_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 05:38:17 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import java.util.Map;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.System;
17: import org.evosuite.runtime.testdata.FileSystemHandling;
18: import org.junit.runner.RunWith;
19: import weka.classifiers.bayes.NaiveBayesMultinomialText;
20: import weka.core.BinarySparseInstance;
21: import weka.core.DenseInstance;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
24: public class NaiveBayesMultinomialText_68_tmp__ESTest extends NaiveBayesMultinomialText_68_tmp__ESTest_scaffolding {
25: 
26:   /**
27:   //Test case number: 0
28:   /*Coverage entropy=2.5531257522061517
29:   */
30:   @Test(timeout = 4000)
31:   public void test0()  throws Throwable  {
32:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
33:       double[] doubleArray0 = new double[4];
34:       naiveBayesMultinomialText0.m_minWordP = 272.793058907;
35:       doubleArray0[0] = 0.0;
36:       doubleArray0[1] = 0.0;
37:       doubleArray0[2] = (-3453.183865750416);
38:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
39:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
40:       doubleArray0[3] = 3.0;
41:       naiveBayesMultinomialText0.m_wordsPerClass = doubleArray0;
42:       naiveBayesMultinomialText0.getCapabilities();
43:       naiveBayesMultinomialText0.setUseStopList(true);
44:       naiveBayesMultinomialText0.setNormalizeDocLength(true);
45:       FileSystemHandling.shouldAllThrowIOExceptions();
46:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
47:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
48:       naiveBayesMultinomialText0.setLNorm(0.0);
49:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
50:       naiveBayesMultinomialText0.m_lowercaseTokens = true;
51:       naiveBayesMultinomialText0.getCapabilities();
52:       naiveBayesMultinomialText0.getMinWordFrequency();
53:       naiveBayesMultinomialText0.getLowercaseTokens();
54:       System.setCurrentTimeMillis(472L);
55:       naiveBayesMultinomialText0.stopwordsTipText();
56:       int[] intArray0 = new int[3];
57:       intArray0[0] = (-308);
58:       intArray0[1] = (-308);
59:       intArray0[2] = 1876;
60:       DenseInstance denseInstance0 = new DenseInstance(272.793058907, naiveBayesMultinomialText0.m_wordsPerClass);
61:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(denseInstance0);
62:       // Undeclared exception!
63:       try { 
64:         binarySparseInstance0.relationalValue(1876);
65:         fail("Expecting exception: RuntimeException");
66:       
67:       } catch(RuntimeException e) {
68:          //
69:          // DenseInstance doesn't have access to a dataset!
70:          //
71:          verifyException("weka.core.AbstractInstance", e);
72:       }
73:   }
74: }
RegularFileObject[/tmp/EvoSuite_68_1575524297926/weka/classifiers/bayes/NaiveBayesMultinomialText_68_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 05:38:17 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_68_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_68_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.classifiers.AbstractClassifier",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.OptionHandler",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.trees.m5.M5Base",
96:       "weka.core.WekaException",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.Classifier",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.Capabilities$Capability",
102:       "weka.core.DenseInstance",
103:       "weka.core.SparseInstance",
104:       "org.pentaho.packageManagement.PackageManager",
105:       "weka.estimators.PoissonEstimator",
106:       "weka.classifiers.functions.LinearRegression",
107:       "weka.core.stemmers.Stemmer",
108:       "weka.core.tokenizers.WordTokenizer",
109:       "weka.classifiers.misc.SerializedClassifier",
110:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
111:       "org.pentaho.packageManagement.DefaultPackageManager",
112:       "weka.core.stemmers.SnowballStemmer",
113:       "weka.classifiers.Evaluation",
114:       "weka.core.WekaPackageManager",
115:       "org.bounce.net.DefaultAuthenticator",
116:       "weka.filters.SupervisedFilter",
117:       "weka.core.TechnicalInformationHandler",
118:       "weka.estimators.IncrementalEstimator",
119:       "weka.estimators.Estimator$Builder",
120:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
121:       "weka.core.Option",
122:       "weka.core.stemmers.NullStemmer",
123:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
124:       "weka.core.EnvironmentHandler",
125:       "weka.classifiers.functions.SGDText",
126:       "weka.classifiers.trees.m5.RuleNode",
127:       "weka.filters.Sourcable",
128:       "weka.core.Utils",
129:       "weka.core.tokenizers.Tokenizer",
130:       "weka.core.Attribute",
131:       "weka.core.NoSupportForMissingValuesException",
132:       "weka.core.Stopwords",
133:       "weka.classifiers.UpdateableClassifier",
134:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
135:       "weka.core.FastVector",
136:       "weka.core.MultiInstanceCapabilitiesHandler",
137:       "weka.core.Copyable",
138:       "weka.core.Capabilities",
139:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
140:       "weka.core.BinarySparseInstance",
141:       "weka.filters.supervised.attribute.NominalToBinary",
142:       "weka.core.tokenizers.NGramTokenizer",
143:       "weka.core.UnassignedDatasetException",
144:       "weka.classifiers.RandomizableClassifier",
145:       "weka.core.SerializedObject",
146:       "weka.clusterers.UpdateableClusterer",
147:       "weka.core.Summarizable",
148:       "weka.classifiers.SingleClassifierEnhancer",
149:       "weka.core.RevisionUtils",
150:       "weka.core.AdditionalMeasureProducer",
151:       "org.pentaho.packageManagement.PackageManager$1",
152:       "weka.core.Instance",
153:       "weka.estimators.Estimator",
154:       "weka.core.Drawable",
155:       "weka.core.ProtectedProperties",
156:       "weka.core.AttributeStats",
157:       "weka.core.WeightedInstancesHandler",
158:       "weka.core.CapabilitiesHandler",
159:       "weka.core.Randomizable",
160:       "weka.classifiers.rules.M5Rules",
161:       "weka.core.AbstractInstance",
162:       "weka.core.Instances",
163:       "weka.core.SelectedTag",
164:       "org.pentaho.packageManagement.DefaultPackage",
165:       "weka.classifiers.misc.InputMappedClassifier",
166:       "weka.core.UnassignedClassException",
167:       "weka.classifiers.rules.ZeroR",
168:       "weka.core.Version",
169:       "weka.core.TechnicalInformation",
170:       "weka.core.UnsupportedAttributeTypeException",
171:       "weka.classifiers.Sourcable",
172:       "weka.core.RevisionHandler",
173:       "weka.classifiers.evaluation.output.prediction.PlainText",
174:       "weka.filters.unsupervised.attribute.RemoveUseless",
175:       "weka.core.xml.XMLSerialization",
176:       "weka.classifiers.xml.XMLClassifier",
177:       "weka.filters.Filter",
178:       "weka.core.Tag"
179:     );
180:   } 
181: 
182:   private static void resetClasses() {
183:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_68_tmp__ESTest_scaffolding.class.getClassLoader()); 
184: 
185:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
186:       "weka.classifiers.AbstractClassifier",
187:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
188:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
189:       "weka.core.Capabilities$Capability",
190:       "weka.core.tokenizers.Tokenizer",
191:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
192:       "weka.core.tokenizers.WordTokenizer",
193:       "weka.core.stemmers.NullStemmer",
194:       "weka.core.AbstractInstance",
195:       "weka.core.SparseInstance",
196:       "weka.core.BinarySparseInstance",
197:       "weka.core.Attribute",
198:       "weka.core.ProtectedProperties",
199:       "weka.core.Utils",
200:       "weka.core.UnassignedDatasetException",
201:       "weka.core.RevisionUtils",
202:       "weka.classifiers.Evaluation",
203:       "weka.core.Option",
204:       "weka.core.Instances",
205:       "weka.classifiers.bayes.NaiveBayes",
206:       "weka.classifiers.CostMatrix",
207:       "weka.core.Capabilities",
208:       "org.pentaho.packageManagement.PackageManager",
209:       "org.pentaho.packageManagement.DefaultPackageManager",
210:       "weka.core.Version",
211:       "weka.core.Environment",
212:       "weka.core.WekaPackageManager",
213:       "weka.core.SerializedObject",
214:       "weka.core.DenseInstance",
215:       "weka.core.neighboursearch.NearestNeighbourSearch",
216:       "weka.core.neighboursearch.CoverTree",
217:       "weka.core.NormalizableDistance",
218:       "weka.core.EuclideanDistance",
219:       "weka.core.Range",
220:       "weka.core.Stopwords",
221:       "weka.core.neighboursearch.BallTree",
222:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
223:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
224:       "weka.core.neighboursearch.balltrees.BallSplitter",
225:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
226:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
227:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
228:       "weka.core.TestInstances",
229:       "weka.attributeSelection.ASEvaluation",
230:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
231:       "weka.attributeSelection.PrincipalComponents",
232:       "weka.filters.Filter",
233:       "weka.filters.SimpleFilter",
234:       "weka.filters.SimpleStreamFilter",
235:       "weka.filters.MultiFilter",
236:       "weka.filters.AllFilter",
237:       "weka.core.tokenizers.NGramTokenizer",
238:       "weka.filters.supervised.attribute.Discretize",
239:       "weka.core.stemmers.LovinsStemmer",
240:       "weka.classifiers.trees.J48",
241:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
242:       "weka.core.neighboursearch.balltrees.BallNode",
243:       "weka.core.neighboursearch.LinearNNSearch",
244:       "weka.classifiers.SingleClassifierEnhancer",
245:       "weka.classifiers.misc.InputMappedClassifier",
246:       "weka.classifiers.rules.ZeroR",
247:       "weka.classifiers.RandomizableClassifier",
248:       "weka.core.Tag",
249:       "weka.classifiers.functions.SGDText",
250:       "weka.classifiers.bayes.BayesNet",
251:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
252:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
253:       "weka.classifiers.bayes.net.search.local.K2",
254:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
255:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
256:       "weka.classifiers.functions.supportVector.Kernel",
257:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
258:       "weka.core.stemmers.IteratedLovinsStemmer",
259:       "weka.classifiers.functions.SimpleLogistic",
260:       "weka.classifiers.functions.supportVector.CachedKernel",
261:       "weka.classifiers.functions.supportVector.Puk",
262:       "weka.core.converters.ArffLoader$ArffReader",
263:       "weka.core.neighboursearch.KDTree",
264:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
265:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
266:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
267:       "weka.classifiers.meta.CostSensitiveClassifier",
268:       "weka.classifiers.trees.RandomForest",
269:       "weka.classifiers.trees.RandomTree",
270:       "weka.classifiers.bayes.NaiveBayesMultinomial",
271:       "weka.classifiers.MultipleClassifiersCombiner",
272:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
273:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
274:       "weka.classifiers.meta.Stacking",
275:       "weka.core.WekaException",
276:       "weka.core.UnsupportedAttributeTypeException",
277:       "weka.classifiers.misc.SerializedClassifier",
278:       "weka.classifiers.lazy.KStar",
279:       "weka.classifiers.rules.OneR",
280:       "weka.core.stemmers.SnowballStemmer",
281:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
282:       "weka.classifiers.bayes.net.BIFReader",
283:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
284:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
285:       "weka.attributeSelection.WrapperSubsetEval",
286:       "weka.classifiers.lazy.IBk",
287:       "weka.core.FindWithCapabilities",
288:       "weka.core.SingleIndex",
289:       "weka.attributeSelection.CfsSubsetEval",
290:       "weka.estimators.Estimator",
291:       "weka.estimators.NormalEstimator",
292:       "weka.core.SelectedTag",
293:       "weka.classifiers.functions.supportVector.StringKernel",
294:       "weka.classifiers.meta.FilteredClassifier",
295:       "weka.filters.supervised.attribute.AttributeSelection",
296:       "weka.attributeSelection.AttributeSelection",
297:       "weka.attributeSelection.ASSearch",
298:       "weka.attributeSelection.GreedyStepwise",
299:       "weka.attributeSelection.BestFirst",
300:       "weka.classifiers.functions.SMOreg",
301:       "weka.classifiers.functions.supportVector.RegOptimizer",
302:       "weka.classifiers.functions.supportVector.RegSMO",
303:       "weka.classifiers.functions.supportVector.RegSMOImproved",
304:       "weka.classifiers.functions.supportVector.PolyKernel",
305:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
306:       "weka.core.matrix.Matrix",
307:       "weka.classifiers.trees.REPTree",
308:       "weka.core.UnassignedClassException",
309:       "weka.classifiers.trees.j48.ClassifierTree",
310:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
311:       "weka.classifiers.functions.Logistic",
312:       "weka.core.TechnicalInformation",
313:       "weka.core.TechnicalInformation$Type",
314:       "weka.core.TechnicalInformation$Field",
315:       "weka.classifiers.bayes.NaiveBayesUpdateable",
316:       "weka.attributeSelection.ReliefFAttributeEval",
317:       "weka.core.ClassDiscovery",
318:       "weka.attributeSelection.OneRAttributeEval",
319:       "weka.core.WekaEnumeration",
320:       "weka.core.Attribute$1",
321:       "weka.classifiers.IteratedSingleClassifierEnhancer",
322:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
323:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
324:       "weka.classifiers.meta.Bagging",
325:       "weka.classifiers.meta.MultiClassClassifier",
326:       "weka.estimators.KernelEstimator",
327:       "weka.classifiers.functions.supportVector.RBFKernel",
328:       "weka.classifiers.functions.SMO",
329:       "weka.classifiers.meta.AdditiveRegression",
330:       "weka.attributeSelection.InfoGainAttributeEval",
331:       "weka.classifiers.functions.SimpleLinearRegression",
332:       "weka.classifiers.functions.LinearRegression",
333:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
334:       "weka.classifiers.meta.Vote",
335:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
336:       "weka.classifiers.trees.DecisionStump",
337:       "weka.classifiers.meta.RegressionByDiscretization",
338:       "weka.filters.unsupervised.attribute.Discretize",
339:       "weka.classifiers.functions.SGD",
340:       "weka.classifiers.trees.m5.M5Base",
341:       "weka.classifiers.rules.M5Rules",
342:       "weka.classifiers.trees.LMT",
343:       "weka.classifiers.functions.VotedPerceptron",
344:       "weka.classifiers.meta.RandomCommittee",
345:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
346:       "weka.classifiers.meta.ClassificationViaRegression",
347:       "weka.classifiers.trees.M5P",
348:       "weka.classifiers.functions.GaussianProcesses",
349:       "weka.classifiers.functions.MultilayerPerceptron",
350:       "weka.core.FastVector",
351:       "weka.filters.unsupervised.attribute.NominalToBinary",
352:       "weka.classifiers.functions.neural.SigmoidUnit",
353:       "weka.classifiers.functions.neural.LinearUnit",
354:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
355:       "weka.classifiers.meta.LogitBoost",
356:       "weka.attributeSelection.GainRatioAttributeEval",
357:       "weka.classifiers.rules.PART",
358:       "weka.classifiers.rules.part.MakeDecList",
359:       "weka.core.AttributeStats",
360:       "weka.classifiers.meta.MultiScheme",
361:       "weka.attributeSelection.CorrelationAttributeEval",
362:       "weka.core.tokenizers.AlphabeticTokenizer",
363:       "weka.core.Queue",
364:       "weka.core.AttributeLocator",
365:       "weka.core.StringLocator",
366:       "weka.core.RelationalLocator",
367:       "weka.core.ContingencyTables",
368:       "weka.core.Queue$QueueNode",
369:       "weka.classifiers.meta.CVParameterSelection",
370:       "weka.core.converters.ConverterUtils$DataSource",
371:       "weka.core.converters.AbstractLoader",
372:       "weka.core.converters.AbstractFileLoader",
373:       "weka.core.converters.ArffLoader",
374:       "weka.classifiers.meta.AdaBoostM1",
375:       "weka.estimators.DiscreteEstimator",
376:       "weka.core.stemmers.Stemming",
377:       "weka.experiment.Stats",
378:       "weka.classifiers.rules.DecisionTable",
379:       "weka.classifiers.rules.JRip",
380:       "weka.classifiers.functions.SGDText$Count",
381:       "weka.estimators.PoissonEstimator",
382:       "weka.classifiers.lazy.LWL",
383:       "weka.estimators.MahalanobisEstimator",
384:       "weka.core.ListOptions",
385:       "weka.classifiers.meta.AttributeSelectedClassifier",
386:       "weka.core.Statistics",
387:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
388:       "weka.core.Javadoc",
389:       "weka.core.ClassCache",
390:       "weka.core.AllJavadoc",
391:       "weka.classifiers.meta.RandomSubSpace",
392:       "weka.classifiers.meta.MultiClassClassifierUpdateable"
393:     );
394:   }
395: }

[MASTER] 05:38:17.947 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
double[] doubleArray0 = new double[4];
naiveBayesMultinomialText0.m_minWordP = 272.793058907;
doubleArray0[0] = 0.0;
doubleArray0[1] = 0.0;
doubleArray0[2] = (-3453.183865750416);
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
doubleArray0[3] = 3.0;
naiveBayesMultinomialText0.m_wordsPerClass = doubleArray0;
naiveBayesMultinomialText0.getCapabilities();
naiveBayesMultinomialText0.setUseStopList(true);
naiveBayesMultinomialText0.setNormalizeDocLength(true);
FileSystemHandling.shouldAllThrowIOExceptions();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.setLNorm(0.0);
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
naiveBayesMultinomialText0.m_lowercaseTokens = true;
naiveBayesMultinomialText0.getCapabilities();
naiveBayesMultinomialText0.getMinWordFrequency();
naiveBayesMultinomialText0.getLowercaseTokens();
System.setCurrentTimeMillis(472L);
naiveBayesMultinomialText0.stopwordsTipText();
int[] intArray0 = new int[3];
intArray0[0] = (-308);
intArray0[1] = (-308);
intArray0[2] = 1876;
DenseInstance denseInstance0 = new DenseInstance(272.793058907, naiveBayesMultinomialText0.m_wordsPerClass);
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(denseInstance0);
binarySparseInstance0.relationalValue(1876);

[MASTER] 05:38:20.122 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 05:38:20.279 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 05:38:20.353 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
[MASTER] 05:38:20.910 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/mosa/tests/s1020/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21265
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21271
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 05:39:22.013 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 05:39:22.028 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 05:39:22.037 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 05:39:22.173 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 05:39:22.213 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 05:39:22.214 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1729
* Using seed 1020
* Starting evolution
[MASTER] 05:39:23.708 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 05:39:23.723 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 05:39:23.723 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 05:39:23.814 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2699
* Using seed 1020
* Starting evolution
[MASTER] 05:39:53.889 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
* Search finished after 124s and 190 generations, 97058 statements, best individual has fitness: 3936.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 77%
* Total number of goals: 370
* Number of covered goals: 286
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 65%
* Total number of goals: 242
* Number of covered goals: 157
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 71%
* Total number of goals: 713
* Number of covered goals: 509
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 53%
* Total number of goals: 72
* Number of covered goals: 38
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 65%
* Total number of goals: 242
* Number of covered goals: 157
* Generated 80 tests with total length 636
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 135s and 22 generations, 17681 statements, best individual has fitness: 2984.0
[MASTER] 05:41:42.357 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 17 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 647
* Number of covered goals: 613
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 441
* Number of covered goals: 401
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 88%
* Total number of goals: 678
* Number of covered goals: 596
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 41%
* Total number of goals: 244
* Number of covered goals: 99
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 97%
* Total number of goals: 124
* Number of covered goals: 120
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 124
* Number of covered goals: 119
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 86%
* Total number of goals: 441
* Number of covered goals: 378
* Generated 189 tests with total length 2328
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 23%
* Compiling and checking tests
[MASTER] 05:43:50.393 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 05:43:50.415 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 05:43:50.513 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 05:43:50.513 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 05:43:59.803 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 05:43:59.804 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
discretize0.m_DesiredWeightOfInstancesPerInterval = (double) 18;
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("(", arrayList0, 18);
Attribute attribute0 = new Attribute("@relation", instances0);
arrayList0.add(attribute0);
discretize0.setInputFormat(instances0);

[MASTER] 05:44:02.308 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 05:44:02.308 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("weka.filters.SimpleFilter", arrayList0, 903);
Attribute attribute0 = new Attribute(".arff", instances0);
arrayList0.add(attribute0);
discretize0.setInputFormat(instances0);

[MASTER] 05:44:09.457 [logback-1] WARN  ClassResetter - java.lang.reflect.InvocationTargetException, caused by: java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 05:44:09.457 [logback-1] WARN  ClassResetter - java.lang.reflect.InvocationTargetException, caused by: java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/mosa/tests/s1020/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 05:47:20.922 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6719145833333333% of time used, but only 71/189 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
[MASTER] 05:48:42.595 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/mosa/tests/s1020/107_weka/evosuite-tests
* Done!

* Computation finished
