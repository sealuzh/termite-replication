* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10001
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10003
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10006
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1367
* Using seed 1004
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:45:04.231 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 17:45:04.232 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 17:45:04.233 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 17:45:04.289 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:45:04.291 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:45:04.291 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:45:04.451 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:45:04.487 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:45:04.499 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:45:04.563 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2699
* Using seed 1004
* Starting evolution
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1412
* Using seed 1004
* Starting evolution
[MASTER] 17:45:11.609 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V: Line 657
[MASTER] 17:45:11.610 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V: Line 658
[MASTER] 17:45:11.610 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.stopwordsTipText()Ljava/lang/String;: Line 853
[MASTER] 17:45:11.610 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.stopwordsTipText()Ljava/lang/String;: root-Branch
[MASTER] 17:45:11.610 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V: root-Branch
[MASTER] 17:45:11.611 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 270: weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V:657 - InsertUnaryOp Negation of p
[MASTER] 17:45:11.611 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 271: weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V:657 - InsertUnaryOp IINC 1 p
[MASTER] 17:45:11.612 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 272: weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V:657 - InsertUnaryOp IINC -1 p
[MASTER] 17:45:11.612 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 345: weka.classifiers.bayes.NaiveBayesMultinomialText.stopwordsTipText()Ljava/lang/String;:853 - ReplaceConstant - The file containing the stopwords (if this is a directory then the default ones are used). -> 
[MASTER] 17:45:11.612 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.stopwordsTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 17:45:11.612 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V
[MASTER] 17:45:11.612 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.stopwordsTipText()Ljava/lang/String;
[MASTER] 17:45:11.612 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V
[MASTER] 17:45:11.612 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.stopwordsTipText()Ljava/lang/String;
[MASTER] 17:45:11.613 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.stopwordsTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:stopwordsTipText()Ljava/lang/String;
[MASTER] 17:45:11.613 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setPeriodicPruning(I)V
[MASTER] 17:45:17.884 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 17:45:49.714 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 17:45:49.714 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Search finished after 123s and 167 generations, 69276 statements, best individual has fitness: 2784.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 217
* Number of covered goals: 191
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 283
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 238
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 283
* Generated 72 tests with total length 195
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 122s and 142 generations, 63633 statements, best individual has fitness: 1592.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 89%
* Total number of goals: 338
* Number of covered goals: 302
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 81%
* Total number of goals: 194
* Number of covered goals: 157
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 476
* Number of covered goals: 444
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 112
* Number of covered goals: 57
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 80%
* Total number of goals: 194
* Number of covered goals: 156
* Generated 73 tests with total length 482
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 134s and 41 generations, 26545 statements, best individual has fitness: 2408.0
[MASTER] 17:47:21.928 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 16 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 96%
* Total number of goals: 647
* Number of covered goals: 621
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 441
* Number of covered goals: 414
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 18
* Number of covered goals: 18
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 678
* Number of covered goals: 615
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 244
* Number of covered goals: 107
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 124
* Number of covered goals: 122
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 90%
* Total number of goals: 441
* Number of covered goals: 397
* Generated 214 tests with total length 1862
* Resulting test suite's coverage: 89% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 76%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/mosa/tests/s1004/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 53%
* Compiling and checking tests
[MASTER] 17:49:26.698 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_45_1575481766612/weka/classifiers/bayes/NaiveBayesMultinomialText_45_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_45_1575481766612/weka/classifiers/bayes/NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding.java]]
[MASTER] 17:49:26.698 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 17:49:26.698 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 17:49:26.701 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 17:49:26.701 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 17:49:26.702 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_45_1575481766612/weka/classifiers/bayes/NaiveBayesMultinomialText_45_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 17:49:26 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.Instances;
17: import weka.core.TestInstances;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_45_tmp__ESTest extends NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=1.7375167345911668
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
30:       naiveBayesMultinomialText0.setLowercaseTokens(true);
31:       naiveBayesMultinomialText0.m_normalize = true;
32:       TestInstances testInstances0 = new TestInstances();
33:       testInstances0.setNumString(35);
34:       Instances instances0 = testInstances0.generate();
35:       naiveBayesMultinomialText0.buildClassifier(instances0);
36:       assertTrue(naiveBayesMultinomialText0.getLowercaseTokens());
37:   }
38: }
RegularFileObject[/tmp/EvoSuite_45_1575481766612/weka/classifiers/bayes/NaiveBayesMultinomialText_45_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 17:49:26 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.bayes.net.search.local.K2",
95:       "weka.filters.UnsupervisedFilter",
96:       "weka.core.logging.Logger$Level",
97:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.classifiers.bayes.NaiveBayes",
105:       "weka.estimators.IncrementalEstimator",
106:       "weka.core.neighboursearch.KDTree",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.Utils",
109:       "weka.core.CustomDisplayStringProvider",
110:       "weka.core.tokenizers.Tokenizer",
111:       "weka.core.NormalizableDistance",
112:       "weka.core.NoSupportForMissingValuesException",
113:       "weka.classifiers.UpdateableClassifier",
114:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
115:       "weka.core.MultiInstanceCapabilitiesHandler",
116:       "weka.core.Copyable",
117:       "weka.core.Capabilities",
118:       "weka.core.BinarySparseInstance",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
120:       "weka.core.SerializedObject",
121:       "weka.clusterers.UpdateableClusterer",
122:       "weka.core.Summarizable",
123:       "weka.core.AdditionalMeasureProducer",
124:       "org.pentaho.packageManagement.PackageManager$1",
125:       "weka.core.Drawable",
126:       "weka.core.matrix.Matrix",
127:       "weka.core.CapabilitiesHandler",
128:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
129:       "weka.core.AbstractInstance",
130:       "weka.core.scripting.JythonObject",
131:       "org.pentaho.packageManagement.DefaultPackage",
132:       "weka.estimators.DiscreteEstimator",
133:       "weka.classifiers.bayes.BayesNet",
134:       "weka.classifiers.meta.AdditiveRegression",
135:       "weka.core.Version",
136:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
137:       "weka.core.Tag",
138:       "weka.classifiers.IteratedSingleClassifierEnhancer",
139:       "weka.classifiers.AbstractClassifier",
140:       "weka.core.OptionHandler",
141:       "weka.core.WekaException",
142:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
143:       "weka.core.Range",
144:       "weka.core.Attribute$1",
145:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
146:       "weka.core.scripting.JythonSerializableObject",
147:       "weka.classifiers.Classifier",
148:       "weka.core.Capabilities$Capability",
149:       "weka.core.SparseInstance",
150:       "org.pentaho.packageManagement.PackageManager",
151:       "weka.core.WekaEnumeration",
152:       "weka.core.tokenizers.WordTokenizer",
153:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
154:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
155:       "weka.core.stemmers.SnowballStemmer",
156:       "weka.classifiers.Evaluation",
157:       "weka.classifiers.functions.supportVector.Kernel",
158:       "weka.core.WekaPackageManager",
159:       "weka.filters.SupervisedFilter",
160:       "weka.core.TechnicalInformationHandler",
161:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
162:       "weka.core.neighboursearch.LinearNNSearch",
163:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
164:       "weka.core.Option",
165:       "weka.core.neighboursearch.PerformanceStats",
166:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
167:       "weka.filters.Sourcable",
168:       "weka.core.Attribute",
169:       "weka.core.Stopwords",
170:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
171:       "weka.core.UnassignedDatasetException",
172:       "weka.core.tokenizers.NGramTokenizer",
173:       "weka.classifiers.SingleClassifierEnhancer",
174:       "weka.core.RevisionUtils",
175:       "weka.core.Instance",
176:       "weka.estimators.Estimator",
177:       "weka.core.ProtectedProperties",
178:       "weka.classifiers.bayes.net.ADNode",
179:       "weka.core.AttributeStats",
180:       "weka.core.WeightedInstancesHandler",
181:       "weka.core.neighboursearch.NearestNeighbourSearch",
182:       "weka.classifiers.trees.DecisionStump",
183:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
184:       "weka.core.EuclideanDistance",
185:       "weka.core.Instances",
186:       "weka.core.UnassignedClassException",
187:       "weka.classifiers.bayes.net.ParentSet",
188:       "weka.classifiers.rules.ZeroR",
189:       "weka.core.TechnicalInformation",
190:       "weka.core.UnsupportedAttributeTypeException",
191:       "weka.classifiers.Sourcable",
192:       "weka.core.RevisionHandler",
193:       "weka.classifiers.evaluation.output.prediction.PlainText",
194:       "weka.core.neighboursearch.TreePerformanceStats",
195:       "weka.core.xml.XMLSerialization",
196:       "weka.classifiers.xml.XMLClassifier",
197:       "weka.filters.Filter",
198:       "weka.filters.supervised.attribute.Discretize"
199:     );
200:   } 
201: 
202:   private static void resetClasses() {
203:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding.class.getClassLoader()); 
204: 
205:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
206:       "weka.classifiers.AbstractClassifier",
207:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
209:       "weka.core.Capabilities$Capability",
210:       "weka.core.tokenizers.Tokenizer",
211:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
212:       "weka.core.tokenizers.WordTokenizer",
213:       "weka.core.stemmers.NullStemmer",
214:       "weka.core.RevisionUtils",
215:       "weka.core.Option",
216:       "weka.core.Utils",
217:       "weka.classifiers.Evaluation",
218:       "weka.classifiers.bayes.NaiveBayes",
219:       "weka.core.Tag",
220:       "weka.classifiers.lazy.IBk",
221:       "weka.core.neighboursearch.NearestNeighbourSearch",
222:       "weka.core.neighboursearch.LinearNNSearch",
223:       "weka.core.NormalizableDistance",
224:       "weka.core.EuclideanDistance",
225:       "weka.core.Range",
226:       "weka.attributeSelection.ASEvaluation",
227:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
228:       "weka.attributeSelection.PrincipalComponents",
229:       "weka.core.stemmers.LovinsStemmer",
230:       "weka.core.stemmers.IteratedLovinsStemmer",
231:       "weka.core.TechnicalInformation",
232:       "weka.core.TechnicalInformation$Type",
233:       "weka.core.TechnicalInformation$Field",
234:       "weka.core.SerializedObject",
235:       "weka.core.Capabilities",
236:       "org.pentaho.packageManagement.PackageManager",
237:       "org.pentaho.packageManagement.DefaultPackageManager",
238:       "weka.core.Version",
239:       "weka.core.Environment",
240:       "weka.core.WekaPackageManager",
241:       "weka.classifiers.misc.SerializedClassifier",
242:       "weka.core.AbstractInstance",
243:       "weka.core.DenseInstance",
244:       "weka.core.neighboursearch.KDTree",
245:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
246:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
247:       "weka.core.SparseInstance",
248:       "weka.core.BinarySparseInstance",
249:       "weka.core.UnassignedDatasetException",
250:       "weka.core.tokenizers.NGramTokenizer",
251:       "weka.core.neighboursearch.CoverTree",
252:       "weka.core.Instances",
253:       "weka.core.neighboursearch.balltrees.BallNode",
254:       "weka.core.Stopwords",
255:       "weka.classifiers.functions.VotedPerceptron",
256:       "weka.core.neighboursearch.BallTree",
257:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
258:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
259:       "weka.core.neighboursearch.balltrees.BallSplitter",
260:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
261:       "weka.filters.Filter",
262:       "weka.filters.supervised.attribute.Discretize",
263:       "weka.core.TestInstances",
264:       "weka.classifiers.RandomizableClassifier",
265:       "weka.classifiers.functions.SGDText",
266:       "weka.classifiers.SingleClassifierEnhancer",
267:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
268:       "weka.classifiers.meta.CostSensitiveClassifier",
269:       "weka.classifiers.rules.ZeroR",
270:       "weka.classifiers.CostMatrix",
271:       "weka.classifiers.bayes.BayesNet",
272:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
273:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
274:       "weka.classifiers.bayes.net.search.local.K2",
275:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
276:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
277:       "weka.classifiers.misc.InputMappedClassifier",
278:       "weka.estimators.Estimator",
279:       "weka.estimators.KernelEstimator",
280:       "weka.core.Attribute",
281:       "weka.core.ProtectedProperties",
282:       "weka.classifiers.functions.SGD",
283:       "weka.core.tokenizers.AlphabeticTokenizer",
284:       "weka.core.UnassignedClassException",
285:       "weka.classifiers.meta.ClassificationViaRegression",
286:       "weka.classifiers.trees.m5.M5Base",
287:       "weka.classifiers.trees.M5P",
288:       "weka.classifiers.functions.LinearRegression",
289:       "weka.core.neighboursearch.kdtrees.KMeansInpiredMethod",
290:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
291:       "weka.classifiers.bayes.net.BIFReader",
292:       "weka.classifiers.functions.supportVector.Kernel",
293:       "weka.classifiers.functions.supportVector.CachedKernel",
294:       "weka.classifiers.functions.supportVector.PolyKernel",
295:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
296:       "weka.core.WekaException",
297:       "weka.core.UnsupportedAttributeTypeException",
298:       "weka.classifiers.functions.supportVector.StringKernel",
299:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
301:       "weka.attributeSelection.CorrelationAttributeEval",
302:       "weka.classifiers.trees.J48",
303:       "weka.classifiers.trees.j48.ClassifierTree",
304:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
305:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
306:       "weka.classifiers.meta.RegressionByDiscretization",
307:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
308:       "weka.filters.unsupervised.attribute.Discretize",
309:       "weka.classifiers.IteratedSingleClassifierEnhancer",
310:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
311:       "weka.classifiers.meta.LogitBoost",
312:       "weka.classifiers.trees.DecisionStump",
313:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
314:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
315:       "weka.classifiers.meta.Bagging",
316:       "weka.classifiers.trees.REPTree",
317:       "weka.core.stemmers.Stemming",
318:       "weka.core.FindWithCapabilities",
319:       "weka.core.SingleIndex",
320:       "weka.core.ClassDiscovery",
321:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
322:       "weka.classifiers.bayes.NaiveBayesUpdateable",
323:       "weka.core.WekaEnumeration",
324:       "weka.core.Attribute$1",
325:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
326:       "weka.attributeSelection.GainRatioAttributeEval",
327:       "weka.attributeSelection.OneRAttributeEval",
328:       "weka.attributeSelection.InfoGainAttributeEval",
329:       "weka.core.AttributeStats",
330:       "weka.classifiers.rules.M5Rules",
331:       "weka.attributeSelection.ReliefFAttributeEval",
332:       "weka.classifiers.meta.RandomCommittee",
333:       "weka.classifiers.trees.RandomTree",
334:       "weka.classifiers.meta.MultiClassClassifier",
335:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
336:       "weka.classifiers.functions.Logistic",
337:       "weka.estimators.PoissonEstimator",
338:       "weka.core.stemmers.SnowballStemmer",
339:       "weka.classifiers.meta.FilteredClassifier",
340:       "weka.filters.supervised.attribute.AttributeSelection",
341:       "weka.attributeSelection.AttributeSelection",
342:       "weka.attributeSelection.CfsSubsetEval",
343:       "weka.attributeSelection.ASSearch",
344:       "weka.attributeSelection.GreedyStepwise",
345:       "weka.attributeSelection.BestFirst",
346:       "weka.classifiers.functions.SimpleLogistic",
347:       "weka.estimators.NormalEstimator",
348:       "weka.classifiers.lazy.LWL",
349:       "weka.classifiers.functions.supportVector.Puk",
350:       "weka.classifiers.lazy.KStar",
351:       "weka.classifiers.functions.SimpleLinearRegression",
352:       "weka.classifiers.bayes.NaiveBayesMultinomial",
353:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
354:       "weka.classifiers.meta.AttributeSelectedClassifier",
355:       "weka.classifiers.rules.PART",
356:       "weka.classifiers.meta.CVParameterSelection",
357:       "weka.core.FastVector",
358:       "weka.classifiers.trees.RandomForest",
359:       "weka.attributeSelection.WrapperSubsetEval",
360:       "weka.classifiers.functions.SMO",
361:       "weka.core.converters.ArffLoader$ArffReader",
362:       "weka.classifiers.MultipleClassifiersCombiner",
363:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
364:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
365:       "weka.classifiers.meta.Stacking",
366:       "weka.classifiers.rules.DecisionTable",
367:       "weka.filters.AllFilter",
368:       "weka.estimators.DiscreteEstimator",
369:       "weka.classifiers.meta.AdaBoostM1",
370:       "weka.filters.SimpleFilter",
371:       "weka.filters.SimpleStreamFilter",
372:       "weka.filters.MultiFilter",
373:       "weka.classifiers.rules.part.MakeDecList",
374:       "weka.classifiers.meta.AdditiveRegression",
375:       "weka.core.matrix.Matrix",
376:       "weka.classifiers.functions.MultilayerPerceptron",
377:       "weka.filters.unsupervised.attribute.NominalToBinary",
378:       "weka.classifiers.functions.neural.SigmoidUnit",
379:       "weka.classifiers.functions.neural.LinearUnit",
380:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
381:       "weka.classifiers.meta.MultiScheme",
382:       "weka.classifiers.rules.JRip",
383:       "weka.classifiers.meta.Vote",
384:       "weka.classifiers.rules.OneR",
385:       "weka.classifiers.meta.RandomSubSpace",
386:       "weka.classifiers.functions.GaussianProcesses",
387:       "weka.core.SelectedTag",
388:       "weka.experiment.Stats",
389:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
390:       "weka.classifiers.functions.SMOreg",
391:       "weka.classifiers.functions.supportVector.RegOptimizer",
392:       "weka.classifiers.functions.supportVector.RegSMO",
393:       "weka.classifiers.functions.supportVector.RegSMOImproved",
394:       "weka.classifiers.functions.supportVector.RBFKernel",
395:       "weka.core.neighboursearch.PerformanceStats",
396:       "weka.core.neighboursearch.TreePerformanceStats",
397:       "weka.classifiers.trees.LMT"
398:     );
399:   }
400: }

[MASTER] 17:49:26.702 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.setLowercaseTokens(true);
naiveBayesMultinomialText0.m_normalize = true;
TestInstances testInstances0 = new TestInstances();
testInstances0.setNumString(35);
Instances instances0 = testInstances0.generate();
naiveBayesMultinomialText0.buildClassifier(instances0);
assertTrue(naiveBayesMultinomialText0.getLowercaseTokens());


[MASTER] 17:49:26.854 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_49_1575481766834/weka/classifiers/bayes/NaiveBayesMultinomialText_49_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_49_1575481766834/weka/classifiers/bayes/NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding.java]]
[MASTER] 17:49:26.854 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 17:49:26.854 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 17:49:26.854 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 17:49:26.854 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 17:49:26.855 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 17:49:26.855 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_49_1575481766834/weka/classifiers/bayes/NaiveBayesMultinomialText_49_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 17:49:26 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.stemmers.NullStemmer;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_49_tmp__ESTest extends NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=1.9296217656001493
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       NullStemmer nullStemmer0 = new NullStemmer();
30:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
31:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
32:       naiveBayesMultinomialText0.setPeriodicPruning(1759);
33:       naiveBayesMultinomialText0.setLNorm(0.0);
34:       naiveBayesMultinomialText0.pruneDictionary();
35:       int int0 = naiveBayesMultinomialText0.getPeriodicPruning();
36:       assertEquals(1759, int0);
37:   }
38: }
RegularFileObject[/tmp/EvoSuite_49_1575481766834/weka/classifiers/bayes/NaiveBayesMultinomialText_49_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 17:49:26 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.bayes.net.search.local.K2",
95:       "weka.filters.UnsupervisedFilter",
96:       "weka.core.logging.Logger$Level",
97:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.classifiers.bayes.NaiveBayes",
105:       "weka.estimators.IncrementalEstimator",
106:       "weka.core.neighboursearch.KDTree",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.Utils",
109:       "weka.core.CustomDisplayStringProvider",
110:       "weka.core.tokenizers.Tokenizer",
111:       "weka.core.NormalizableDistance",
112:       "weka.core.NoSupportForMissingValuesException",
113:       "weka.classifiers.UpdateableClassifier",
114:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
115:       "weka.core.MultiInstanceCapabilitiesHandler",
116:       "weka.core.Copyable",
117:       "weka.core.Capabilities",
118:       "weka.core.BinarySparseInstance",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
120:       "weka.core.SerializedObject",
121:       "weka.clusterers.UpdateableClusterer",
122:       "weka.core.Summarizable",
123:       "weka.core.AdditionalMeasureProducer",
124:       "org.pentaho.packageManagement.PackageManager$1",
125:       "weka.core.Drawable",
126:       "weka.core.matrix.Matrix",
127:       "weka.core.CapabilitiesHandler",
128:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
129:       "weka.core.AbstractInstance",
130:       "weka.core.scripting.JythonObject",
131:       "org.pentaho.packageManagement.DefaultPackage",
132:       "weka.estimators.DiscreteEstimator",
133:       "weka.classifiers.bayes.BayesNet",
134:       "weka.classifiers.meta.AdditiveRegression",
135:       "weka.core.Version",
136:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
137:       "weka.core.Tag",
138:       "weka.classifiers.IteratedSingleClassifierEnhancer",
139:       "weka.classifiers.AbstractClassifier",
140:       "weka.core.OptionHandler",
141:       "weka.core.WekaException",
142:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
143:       "weka.core.Range",
144:       "weka.core.Attribute$1",
145:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
146:       "weka.core.scripting.JythonSerializableObject",
147:       "weka.classifiers.Classifier",
148:       "weka.core.Capabilities$Capability",
149:       "weka.core.SparseInstance",
150:       "org.pentaho.packageManagement.PackageManager",
151:       "weka.core.WekaEnumeration",
152:       "weka.core.tokenizers.WordTokenizer",
153:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
154:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
155:       "weka.core.stemmers.SnowballStemmer",
156:       "weka.classifiers.Evaluation",
157:       "weka.classifiers.functions.supportVector.Kernel",
158:       "weka.core.WekaPackageManager",
159:       "weka.filters.SupervisedFilter",
160:       "weka.core.TechnicalInformationHandler",
161:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
162:       "weka.core.neighboursearch.LinearNNSearch",
163:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
164:       "weka.core.Option",
165:       "weka.core.neighboursearch.PerformanceStats",
166:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
167:       "weka.filters.Sourcable",
168:       "weka.core.Attribute",
169:       "weka.core.Stopwords",
170:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
171:       "weka.core.UnassignedDatasetException",
172:       "weka.core.tokenizers.NGramTokenizer",
173:       "weka.classifiers.SingleClassifierEnhancer",
174:       "weka.core.RevisionUtils",
175:       "weka.core.Instance",
176:       "weka.estimators.Estimator",
177:       "weka.core.ProtectedProperties",
178:       "weka.classifiers.bayes.net.ADNode",
179:       "weka.core.AttributeStats",
180:       "weka.core.WeightedInstancesHandler",
181:       "weka.core.neighboursearch.NearestNeighbourSearch",
182:       "weka.classifiers.trees.DecisionStump",
183:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
184:       "weka.core.EuclideanDistance",
185:       "weka.core.Instances",
186:       "weka.core.UnassignedClassException",
187:       "weka.classifiers.bayes.net.ParentSet",
188:       "weka.classifiers.rules.ZeroR",
189:       "weka.core.TechnicalInformation",
190:       "weka.core.UnsupportedAttributeTypeException",
191:       "weka.classifiers.Sourcable",
192:       "weka.core.RevisionHandler",
193:       "weka.classifiers.evaluation.output.prediction.PlainText",
194:       "weka.core.neighboursearch.TreePerformanceStats",
195:       "weka.core.xml.XMLSerialization",
196:       "weka.classifiers.xml.XMLClassifier",
197:       "weka.filters.Filter",
198:       "weka.filters.supervised.attribute.Discretize"
199:     );
200:   } 
201: 
202:   private static void resetClasses() {
203:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding.class.getClassLoader()); 
204: 
205:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
206:       "weka.classifiers.AbstractClassifier",
207:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
209:       "weka.core.Capabilities$Capability",
210:       "weka.core.tokenizers.Tokenizer",
211:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
212:       "weka.core.tokenizers.WordTokenizer",
213:       "weka.core.stemmers.NullStemmer",
214:       "weka.core.RevisionUtils",
215:       "weka.core.Option",
216:       "weka.core.Utils",
217:       "weka.classifiers.Evaluation",
218:       "weka.classifiers.bayes.NaiveBayes",
219:       "weka.core.Tag",
220:       "weka.classifiers.lazy.IBk",
221:       "weka.core.neighboursearch.NearestNeighbourSearch",
222:       "weka.core.neighboursearch.LinearNNSearch",
223:       "weka.core.NormalizableDistance",
224:       "weka.core.EuclideanDistance",
225:       "weka.core.Range",
226:       "weka.attributeSelection.ASEvaluation",
227:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
228:       "weka.attributeSelection.PrincipalComponents",
229:       "weka.core.stemmers.LovinsStemmer",
230:       "weka.core.stemmers.IteratedLovinsStemmer",
231:       "weka.core.TechnicalInformation",
232:       "weka.core.TechnicalInformation$Type",
233:       "weka.core.TechnicalInformation$Field",
234:       "weka.core.SerializedObject",
235:       "weka.core.Capabilities",
236:       "org.pentaho.packageManagement.PackageManager",
237:       "org.pentaho.packageManagement.DefaultPackageManager",
238:       "weka.core.Version",
239:       "weka.core.Environment",
240:       "weka.core.WekaPackageManager",
241:       "weka.classifiers.misc.SerializedClassifier",
242:       "weka.core.AbstractInstance",
243:       "weka.core.DenseInstance",
244:       "weka.core.neighboursearch.KDTree",
245:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
246:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
247:       "weka.core.SparseInstance",
248:       "weka.core.BinarySparseInstance",
249:       "weka.core.UnassignedDatasetException",
250:       "weka.core.tokenizers.NGramTokenizer",
251:       "weka.core.neighboursearch.CoverTree",
252:       "weka.core.Instances",
253:       "weka.core.neighboursearch.balltrees.BallNode",
254:       "weka.core.Stopwords",
255:       "weka.classifiers.functions.VotedPerceptron",
256:       "weka.core.neighboursearch.BallTree",
257:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
258:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
259:       "weka.core.neighboursearch.balltrees.BallSplitter",
260:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
261:       "weka.filters.Filter",
262:       "weka.filters.supervised.attribute.Discretize",
263:       "weka.core.TestInstances",
264:       "weka.classifiers.RandomizableClassifier",
265:       "weka.classifiers.functions.SGDText",
266:       "weka.classifiers.SingleClassifierEnhancer",
267:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
268:       "weka.classifiers.meta.CostSensitiveClassifier",
269:       "weka.classifiers.rules.ZeroR",
270:       "weka.classifiers.CostMatrix",
271:       "weka.classifiers.bayes.BayesNet",
272:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
273:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
274:       "weka.classifiers.bayes.net.search.local.K2",
275:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
276:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
277:       "weka.classifiers.misc.InputMappedClassifier",
278:       "weka.estimators.Estimator",
279:       "weka.estimators.KernelEstimator",
280:       "weka.core.Attribute",
281:       "weka.core.ProtectedProperties",
282:       "weka.classifiers.functions.SGD",
283:       "weka.core.tokenizers.AlphabeticTokenizer",
284:       "weka.core.UnassignedClassException",
285:       "weka.classifiers.meta.ClassificationViaRegression",
286:       "weka.classifiers.trees.m5.M5Base",
287:       "weka.classifiers.trees.M5P",
288:       "weka.classifiers.functions.LinearRegression",
289:       "weka.core.neighboursearch.kdtrees.KMeansInpiredMethod",
290:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
291:       "weka.classifiers.bayes.net.BIFReader",
292:       "weka.classifiers.functions.supportVector.Kernel",
293:       "weka.classifiers.functions.supportVector.CachedKernel",
294:       "weka.classifiers.functions.supportVector.PolyKernel",
295:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
296:       "weka.core.WekaException",
297:       "weka.core.UnsupportedAttributeTypeException",
298:       "weka.classifiers.functions.supportVector.StringKernel",
299:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
301:       "weka.attributeSelection.CorrelationAttributeEval",
302:       "weka.classifiers.trees.J48",
303:       "weka.classifiers.trees.j48.ClassifierTree",
304:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
305:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
306:       "weka.classifiers.meta.RegressionByDiscretization",
307:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
308:       "weka.filters.unsupervised.attribute.Discretize",
309:       "weka.classifiers.IteratedSingleClassifierEnhancer",
310:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
311:       "weka.classifiers.meta.LogitBoost",
312:       "weka.classifiers.trees.DecisionStump",
313:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
314:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
315:       "weka.classifiers.meta.Bagging",
316:       "weka.classifiers.trees.REPTree",
317:       "weka.core.stemmers.Stemming",
318:       "weka.core.FindWithCapabilities",
319:       "weka.core.SingleIndex",
320:       "weka.core.ClassDiscovery",
321:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
322:       "weka.classifiers.bayes.NaiveBayesUpdateable",
323:       "weka.core.WekaEnumeration",
324:       "weka.core.Attribute$1",
325:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
326:       "weka.attributeSelection.GainRatioAttributeEval",
327:       "weka.attributeSelection.OneRAttributeEval",
328:       "weka.attributeSelection.InfoGainAttributeEval",
329:       "weka.core.AttributeStats",
330:       "weka.classifiers.rules.M5Rules",
331:       "weka.attributeSelection.ReliefFAttributeEval",
332:       "weka.classifiers.meta.RandomCommittee",
333:       "weka.classifiers.trees.RandomTree",
334:       "weka.classifiers.meta.MultiClassClassifier",
335:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
336:       "weka.classifiers.functions.Logistic",
337:       "weka.estimators.PoissonEstimator",
338:       "weka.core.stemmers.SnowballStemmer",
339:       "weka.classifiers.meta.FilteredClassifier",
340:       "weka.filters.supervised.attribute.AttributeSelection",
341:       "weka.attributeSelection.AttributeSelection",
342:       "weka.attributeSelection.CfsSubsetEval",
343:       "weka.attributeSelection.ASSearch",
344:       "weka.attributeSelection.GreedyStepwise",
345:       "weka.attributeSelection.BestFirst",
346:       "weka.classifiers.functions.SimpleLogistic",
347:       "weka.estimators.NormalEstimator",
348:       "weka.classifiers.lazy.LWL",
349:       "weka.classifiers.functions.supportVector.Puk",
350:       "weka.classifiers.lazy.KStar",
351:       "weka.classifiers.functions.SimpleLinearRegression",
352:       "weka.classifiers.bayes.NaiveBayesMultinomial",
353:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
354:       "weka.classifiers.meta.AttributeSelectedClassifier",
355:       "weka.classifiers.rules.PART",
356:       "weka.classifiers.meta.CVParameterSelection",
357:       "weka.core.FastVector",
358:       "weka.classifiers.trees.RandomForest",
359:       "weka.attributeSelection.WrapperSubsetEval",
360:       "weka.classifiers.functions.SMO",
361:       "weka.core.converters.ArffLoader$ArffReader",
362:       "weka.classifiers.MultipleClassifiersCombiner",
363:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
364:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
365:       "weka.classifiers.meta.Stacking",
366:       "weka.classifiers.rules.DecisionTable",
367:       "weka.filters.AllFilter",
368:       "weka.estimators.DiscreteEstimator",
369:       "weka.classifiers.meta.AdaBoostM1",
370:       "weka.filters.SimpleFilter",
371:       "weka.filters.SimpleStreamFilter",
372:       "weka.filters.MultiFilter",
373:       "weka.classifiers.rules.part.MakeDecList",
374:       "weka.classifiers.meta.AdditiveRegression",
375:       "weka.core.matrix.Matrix",
376:       "weka.classifiers.functions.MultilayerPerceptron",
377:       "weka.filters.unsupervised.attribute.NominalToBinary",
378:       "weka.classifiers.functions.neural.SigmoidUnit",
379:       "weka.classifiers.functions.neural.LinearUnit",
380:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
381:       "weka.classifiers.meta.MultiScheme",
382:       "weka.classifiers.rules.JRip",
383:       "weka.classifiers.meta.Vote",
384:       "weka.classifiers.rules.OneR",
385:       "weka.classifiers.meta.RandomSubSpace",
386:       "weka.classifiers.functions.GaussianProcesses",
387:       "weka.core.SelectedTag",
388:       "weka.experiment.Stats",
389:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
390:       "weka.classifiers.functions.SMOreg",
391:       "weka.classifiers.functions.supportVector.RegOptimizer",
392:       "weka.classifiers.functions.supportVector.RegSMO",
393:       "weka.classifiers.functions.supportVector.RegSMOImproved",
394:       "weka.classifiers.functions.supportVector.RBFKernel",
395:       "weka.core.neighboursearch.PerformanceStats",
396:       "weka.core.neighboursearch.TreePerformanceStats",
397:       "weka.classifiers.trees.LMT"
398:     );
399:   }
400: }

[MASTER] 17:49:26.855 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
NullStemmer nullStemmer0 = new NullStemmer();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
naiveBayesMultinomialText0.setPeriodicPruning(1759);
naiveBayesMultinomialText0.setLNorm(0.0);
naiveBayesMultinomialText0.pruneDictionary();
int int0 = naiveBayesMultinomialText0.getPeriodicPruning();
assertEquals(1759, int0);


[MASTER] 17:49:27.036 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_58_1575481767020/weka/classifiers/bayes/NaiveBayesMultinomialText_58_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_58_1575481767020/weka/classifiers/bayes/NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding.java]]
[MASTER] 17:49:27.036 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 17:49:27.036 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 17:49:27.036 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 17:49:27.036 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 17:49:27.036 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 17:49:27.036 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 17:49:27.037 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 17:49:27.037 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 17:49:27.037 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 17:49:27.037 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_58_1575481767020/weka/classifiers/bayes/NaiveBayesMultinomialText_58_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 17:49:27 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.stemmers.NullStemmer;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_58_tmp__ESTest extends NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=2.070976373972562
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       NullStemmer nullStemmer0 = new NullStemmer();
30:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
31:       Integer integer0 = new Integer((-765));
32:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
33:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText1.m_inputVector;
34:       hashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
35:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
36:       hashMap0.put(integer0, linkedHashMap1);
37:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
38:       naiveBayesMultinomialText0.setStemmer(nullStemmer0);
39:       naiveBayesMultinomialText0.setPeriodicPruning((-765));
40:       naiveBayesMultinomialText0.pruneDictionary();
41:       int int0 = naiveBayesMultinomialText0.getPeriodicPruning();
42:       assertEquals((-765), int0);
43:   }
44: }
RegularFileObject[/tmp/EvoSuite_58_1575481767020/weka/classifiers/bayes/NaiveBayesMultinomialText_58_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 17:49:27 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.bayes.net.search.local.K2",
95:       "weka.filters.UnsupervisedFilter",
96:       "weka.core.logging.Logger$Level",
97:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.classifiers.bayes.NaiveBayes",
105:       "weka.estimators.IncrementalEstimator",
106:       "weka.core.neighboursearch.KDTree",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.Utils",
109:       "weka.core.CustomDisplayStringProvider",
110:       "weka.core.tokenizers.Tokenizer",
111:       "weka.core.NormalizableDistance",
112:       "weka.core.NoSupportForMissingValuesException",
113:       "weka.classifiers.UpdateableClassifier",
114:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
115:       "weka.core.MultiInstanceCapabilitiesHandler",
116:       "weka.core.Copyable",
117:       "weka.core.Capabilities",
118:       "weka.core.BinarySparseInstance",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
120:       "weka.core.SerializedObject",
121:       "weka.clusterers.UpdateableClusterer",
122:       "weka.core.Summarizable",
123:       "weka.core.AdditionalMeasureProducer",
124:       "org.pentaho.packageManagement.PackageManager$1",
125:       "weka.core.Drawable",
126:       "weka.core.matrix.Matrix",
127:       "weka.core.CapabilitiesHandler",
128:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
129:       "weka.core.AbstractInstance",
130:       "weka.core.scripting.JythonObject",
131:       "org.pentaho.packageManagement.DefaultPackage",
132:       "weka.estimators.DiscreteEstimator",
133:       "weka.classifiers.bayes.BayesNet",
134:       "weka.classifiers.meta.AdditiveRegression",
135:       "weka.core.Version",
136:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
137:       "weka.core.Tag",
138:       "weka.classifiers.IteratedSingleClassifierEnhancer",
139:       "weka.classifiers.AbstractClassifier",
140:       "weka.core.OptionHandler",
141:       "weka.core.WekaException",
142:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
143:       "weka.core.Range",
144:       "weka.core.Attribute$1",
145:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
146:       "weka.core.scripting.JythonSerializableObject",
147:       "weka.classifiers.Classifier",
148:       "weka.core.Capabilities$Capability",
149:       "weka.core.SparseInstance",
150:       "org.pentaho.packageManagement.PackageManager",
151:       "weka.core.WekaEnumeration",
152:       "weka.core.tokenizers.WordTokenizer",
153:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
154:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
155:       "weka.core.stemmers.SnowballStemmer",
156:       "weka.classifiers.Evaluation",
157:       "weka.classifiers.functions.supportVector.Kernel",
158:       "weka.core.WekaPackageManager",
159:       "weka.filters.SupervisedFilter",
160:       "weka.core.TechnicalInformationHandler",
161:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
162:       "weka.core.neighboursearch.LinearNNSearch",
163:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
164:       "weka.core.Option",
165:       "weka.core.neighboursearch.PerformanceStats",
166:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
167:       "weka.filters.Sourcable",
168:       "weka.core.Attribute",
169:       "weka.core.Stopwords",
170:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
171:       "weka.core.UnassignedDatasetException",
172:       "weka.core.tokenizers.NGramTokenizer",
173:       "weka.classifiers.SingleClassifierEnhancer",
174:       "weka.core.RevisionUtils",
175:       "weka.core.Instance",
176:       "weka.estimators.Estimator",
177:       "weka.core.ProtectedProperties",
178:       "weka.classifiers.bayes.net.ADNode",
179:       "weka.core.AttributeStats",
180:       "weka.core.WeightedInstancesHandler",
181:       "weka.core.neighboursearch.NearestNeighbourSearch",
182:       "weka.classifiers.trees.DecisionStump",
183:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
184:       "weka.core.EuclideanDistance",
185:       "weka.core.Instances",
186:       "weka.core.UnassignedClassException",
187:       "weka.classifiers.bayes.net.ParentSet",
188:       "weka.classifiers.rules.ZeroR",
189:       "weka.core.TechnicalInformation",
190:       "weka.core.UnsupportedAttributeTypeException",
191:       "weka.classifiers.Sourcable",
192:       "weka.core.RevisionHandler",
193:       "weka.classifiers.evaluation.output.prediction.PlainText",
194:       "weka.core.neighboursearch.TreePerformanceStats",
195:       "weka.core.xml.XMLSerialization",
196:       "weka.classifiers.xml.XMLClassifier",
197:       "weka.filters.Filter",
198:       "weka.filters.supervised.attribute.Discretize"
199:     );
200:   } 
201: 
202:   private static void resetClasses() {
203:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_58_tmp__ESTest_scaffolding.class.getClassLoader()); 
204: 
205:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
206:       "weka.classifiers.AbstractClassifier",
207:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
209:       "weka.core.Capabilities$Capability",
210:       "weka.core.tokenizers.Tokenizer",
211:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
212:       "weka.core.tokenizers.WordTokenizer",
213:       "weka.core.stemmers.NullStemmer",
214:       "weka.core.RevisionUtils",
215:       "weka.core.Option",
216:       "weka.core.Utils",
217:       "weka.classifiers.Evaluation",
218:       "weka.classifiers.bayes.NaiveBayes",
219:       "weka.core.Tag",
220:       "weka.classifiers.lazy.IBk",
221:       "weka.core.neighboursearch.NearestNeighbourSearch",
222:       "weka.core.neighboursearch.LinearNNSearch",
223:       "weka.core.NormalizableDistance",
224:       "weka.core.EuclideanDistance",
225:       "weka.core.Range",
226:       "weka.attributeSelection.ASEvaluation",
227:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
228:       "weka.attributeSelection.PrincipalComponents",
229:       "weka.core.stemmers.LovinsStemmer",
230:       "weka.core.stemmers.IteratedLovinsStemmer",
231:       "weka.core.TechnicalInformation",
232:       "weka.core.TechnicalInformation$Type",
233:       "weka.core.TechnicalInformation$Field",
234:       "weka.core.SerializedObject",
235:       "weka.core.Capabilities",
236:       "org.pentaho.packageManagement.PackageManager",
237:       "org.pentaho.packageManagement.DefaultPackageManager",
238:       "weka.core.Version",
239:       "weka.core.Environment",
240:       "weka.core.WekaPackageManager",
241:       "weka.classifiers.misc.SerializedClassifier",
242:       "weka.core.AbstractInstance",
243:       "weka.core.DenseInstance",
244:       "weka.core.neighboursearch.KDTree",
245:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
246:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
247:       "weka.core.SparseInstance",
248:       "weka.core.BinarySparseInstance",
249:       "weka.core.UnassignedDatasetException",
250:       "weka.core.tokenizers.NGramTokenizer",
251:       "weka.core.neighboursearch.CoverTree",
252:       "weka.core.Instances",
253:       "weka.core.neighboursearch.balltrees.BallNode",
254:       "weka.core.Stopwords",
255:       "weka.classifiers.functions.VotedPerceptron",
256:       "weka.core.neighboursearch.BallTree",
257:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
258:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
259:       "weka.core.neighboursearch.balltrees.BallSplitter",
260:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
261:       "weka.filters.Filter",
262:       "weka.filters.supervised.attribute.Discretize",
263:       "weka.core.TestInstances",
264:       "weka.classifiers.RandomizableClassifier",
265:       "weka.classifiers.functions.SGDText",
266:       "weka.classifiers.SingleClassifierEnhancer",
267:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
268:       "weka.classifiers.meta.CostSensitiveClassifier",
269:       "weka.classifiers.rules.ZeroR",
270:       "weka.classifiers.CostMatrix",
271:       "weka.classifiers.bayes.BayesNet",
272:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
273:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
274:       "weka.classifiers.bayes.net.search.local.K2",
275:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
276:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
277:       "weka.classifiers.misc.InputMappedClassifier",
278:       "weka.estimators.Estimator",
279:       "weka.estimators.KernelEstimator",
280:       "weka.core.Attribute",
281:       "weka.core.ProtectedProperties",
282:       "weka.classifiers.functions.SGD",
283:       "weka.core.tokenizers.AlphabeticTokenizer",
284:       "weka.core.UnassignedClassException",
285:       "weka.classifiers.meta.ClassificationViaRegression",
286:       "weka.classifiers.trees.m5.M5Base",
287:       "weka.classifiers.trees.M5P",
288:       "weka.classifiers.functions.LinearRegression",
289:       "weka.core.neighboursearch.kdtrees.KMeansInpiredMethod",
290:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
291:       "weka.classifiers.bayes.net.BIFReader",
292:       "weka.classifiers.functions.supportVector.Kernel",
293:       "weka.classifiers.functions.supportVector.CachedKernel",
294:       "weka.classifiers.functions.supportVector.PolyKernel",
295:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
296:       "weka.core.WekaException",
297:       "weka.core.UnsupportedAttributeTypeException",
298:       "weka.classifiers.functions.supportVector.StringKernel",
299:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
301:       "weka.attributeSelection.CorrelationAttributeEval",
302:       "weka.classifiers.trees.J48",
303:       "weka.classifiers.trees.j48.ClassifierTree",
304:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
305:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
306:       "weka.classifiers.meta.RegressionByDiscretization",
307:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
308:       "weka.filters.unsupervised.attribute.Discretize",
309:       "weka.classifiers.IteratedSingleClassifierEnhancer",
310:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
311:       "weka.classifiers.meta.LogitBoost",
312:       "weka.classifiers.trees.DecisionStump",
313:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
314:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
315:       "weka.classifiers.meta.Bagging",
316:       "weka.classifiers.trees.REPTree",
317:       "weka.core.stemmers.Stemming",
318:       "weka.core.FindWithCapabilities",
319:       "weka.core.SingleIndex",
320:       "weka.core.ClassDiscovery",
321:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
322:       "weka.classifiers.bayes.NaiveBayesUpdateable",
323:       "weka.core.WekaEnumeration",
324:       "weka.core.Attribute$1",
325:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
326:       "weka.attributeSelection.GainRatioAttributeEval",
327:       "weka.attributeSelection.OneRAttributeEval",
328:       "weka.attributeSelection.InfoGainAttributeEval",
329:       "weka.core.AttributeStats",
330:       "weka.classifiers.rules.M5Rules",
331:       "weka.attributeSelection.ReliefFAttributeEval",
332:       "weka.classifiers.meta.RandomCommittee",
333:       "weka.classifiers.trees.RandomTree",
334:       "weka.classifiers.meta.MultiClassClassifier",
335:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
336:       "weka.classifiers.functions.Logistic",
337:       "weka.estimators.PoissonEstimator",
338:       "weka.core.stemmers.SnowballStemmer",
339:       "weka.classifiers.meta.FilteredClassifier",
340:       "weka.filters.supervised.attribute.AttributeSelection",
341:       "weka.attributeSelection.AttributeSelection",
342:       "weka.attributeSelection.CfsSubsetEval",
343:       "weka.attributeSelection.ASSearch",
344:       "weka.attributeSelection.GreedyStepwise",
345:       "weka.attributeSelection.BestFirst",
346:       "weka.classifiers.functions.SimpleLogistic",
347:       "weka.estimators.NormalEstimator",
348:       "weka.classifiers.lazy.LWL",
349:       "weka.classifiers.functions.supportVector.Puk",
350:       "weka.classifiers.lazy.KStar",
351:       "weka.classifiers.functions.SimpleLinearRegression",
352:       "weka.classifiers.bayes.NaiveBayesMultinomial",
353:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
354:       "weka.classifiers.meta.AttributeSelectedClassifier",
355:       "weka.classifiers.rules.PART",
356:       "weka.classifiers.meta.CVParameterSelection",
357:       "weka.core.FastVector",
358:       "weka.classifiers.trees.RandomForest",
359:       "weka.attributeSelection.WrapperSubsetEval",
360:       "weka.classifiers.functions.SMO",
361:       "weka.core.converters.ArffLoader$ArffReader",
362:       "weka.classifiers.MultipleClassifiersCombiner",
363:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
364:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
365:       "weka.classifiers.meta.Stacking",
366:       "weka.classifiers.rules.DecisionTable",
367:       "weka.filters.AllFilter",
368:       "weka.estimators.DiscreteEstimator",
369:       "weka.classifiers.meta.AdaBoostM1",
370:       "weka.filters.SimpleFilter",
371:       "weka.filters.SimpleStreamFilter",
372:       "weka.filters.MultiFilter",
373:       "weka.classifiers.rules.part.MakeDecList",
374:       "weka.classifiers.meta.AdditiveRegression",
375:       "weka.core.matrix.Matrix",
376:       "weka.classifiers.functions.MultilayerPerceptron",
377:       "weka.filters.unsupervised.attribute.NominalToBinary",
378:       "weka.classifiers.functions.neural.SigmoidUnit",
379:       "weka.classifiers.functions.neural.LinearUnit",
380:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
381:       "weka.classifiers.meta.MultiScheme",
382:       "weka.classifiers.rules.JRip",
383:       "weka.classifiers.meta.Vote",
384:       "weka.classifiers.rules.OneR",
385:       "weka.classifiers.meta.RandomSubSpace",
386:       "weka.classifiers.functions.GaussianProcesses",
387:       "weka.core.SelectedTag",
388:       "weka.experiment.Stats",
389:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
390:       "weka.classifiers.functions.SMOreg",
391:       "weka.classifiers.functions.supportVector.RegOptimizer",
392:       "weka.classifiers.functions.supportVector.RegSMO",
393:       "weka.classifiers.functions.supportVector.RegSMOImproved",
394:       "weka.classifiers.functions.supportVector.RBFKernel",
395:       "weka.core.neighboursearch.PerformanceStats",
396:       "weka.core.neighboursearch.TreePerformanceStats",
397:       "weka.classifiers.trees.LMT"
398:     );
399:   }
400: }

[MASTER] 17:49:27.038 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
NullStemmer nullStemmer0 = new NullStemmer();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = new Integer((-765));
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText1.m_inputVector;
hashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
hashMap0.put(integer0, linkedHashMap1);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
naiveBayesMultinomialText0.setStemmer(nullStemmer0);
naiveBayesMultinomialText0.setPeriodicPruning((-765));
naiveBayesMultinomialText0.pruneDictionary();
int int0 = naiveBayesMultinomialText0.getPeriodicPruning();
assertEquals((-765), int0);


[MASTER] 17:49:27.091 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_61_1575481767074/weka/classifiers/bayes/NaiveBayesMultinomialText_61_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_61_1575481767074/weka/classifiers/bayes/NaiveBayesMultinomialText_61_tmp__ESTest_scaffolding.java]]
[MASTER] 17:49:27.091 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 17:49:27.091 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 17:49:27.091 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 17:49:27.091 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 17:49:27.091 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_61_1575481767074/weka/classifiers/bayes/NaiveBayesMultinomialText_61_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 17:49:27 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.ArrayList;
12: import java.util.HashMap;
13: import java.util.LinkedHashMap;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.core.Attribute;
19: import weka.core.Instances;
20: import weka.core.TestInstances;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class NaiveBayesMultinomialText_61_tmp__ESTest extends NaiveBayesMultinomialText_61_tmp__ESTest_scaffolding {
24: 
25:   /**
26:   //Test case number: 0
27:   /*Coverage entropy=1.830738805564335
28:   */
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
33:       naiveBayesMultinomialText0.m_normalize = true;
34:       TestInstances testInstances0 = new TestInstances();
35:       ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
36:       Instances instances0 = new Instances(" ", arrayList0, 25);
37:       try { 
38:         naiveBayesMultinomialText0.buildClassifier(instances0);
39:         fail("Expecting exception: Exception");
40:       
41:       } catch(Exception e) {
42:          //
43:          // weka.classifiers.bayes.NaiveBayesMultinomialText: No attributes!
44:          //
45:          verifyException("weka.core.Capabilities", e);
46:       }
47:   }
48: }
RegularFileObject[/tmp/EvoSuite_61_1575481767074/weka/classifiers/bayes/NaiveBayesMultinomialText_61_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 17:49:27 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_61_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_61_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.bayes.net.search.local.K2",
95:       "weka.filters.UnsupervisedFilter",
96:       "weka.core.logging.Logger$Level",
97:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.classifiers.bayes.NaiveBayes",
105:       "weka.estimators.IncrementalEstimator",
106:       "weka.core.neighboursearch.KDTree",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.Utils",
109:       "weka.core.CustomDisplayStringProvider",
110:       "weka.core.tokenizers.Tokenizer",
111:       "weka.core.NormalizableDistance",
112:       "weka.core.NoSupportForMissingValuesException",
113:       "weka.classifiers.UpdateableClassifier",
114:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
115:       "weka.core.MultiInstanceCapabilitiesHandler",
116:       "weka.core.Copyable",
117:       "weka.core.Capabilities",
118:       "weka.core.BinarySparseInstance",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
120:       "weka.core.SerializedObject",
121:       "weka.clusterers.UpdateableClusterer",
122:       "weka.core.Summarizable",
123:       "weka.core.AdditionalMeasureProducer",
124:       "org.pentaho.packageManagement.PackageManager$1",
125:       "weka.core.Drawable",
126:       "weka.core.matrix.Matrix",
127:       "weka.core.CapabilitiesHandler",
128:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
129:       "weka.core.AbstractInstance",
130:       "weka.core.scripting.JythonObject",
131:       "org.pentaho.packageManagement.DefaultPackage",
132:       "weka.estimators.DiscreteEstimator",
133:       "weka.classifiers.bayes.BayesNet",
134:       "weka.classifiers.meta.AdditiveRegression",
135:       "weka.core.Version",
136:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
137:       "weka.core.Tag",
138:       "weka.classifiers.IteratedSingleClassifierEnhancer",
139:       "weka.classifiers.AbstractClassifier",
140:       "weka.core.OptionHandler",
141:       "weka.core.WekaException",
142:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
143:       "weka.core.Range",
144:       "weka.core.Attribute$1",
145:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
146:       "weka.core.scripting.JythonSerializableObject",
147:       "weka.classifiers.Classifier",
148:       "weka.core.Capabilities$Capability",
149:       "weka.core.SparseInstance",
150:       "org.pentaho.packageManagement.PackageManager",
151:       "weka.core.WekaEnumeration",
152:       "weka.core.tokenizers.WordTokenizer",
153:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
154:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
155:       "weka.core.stemmers.SnowballStemmer",
156:       "weka.classifiers.Evaluation",
157:       "weka.classifiers.functions.supportVector.Kernel",
158:       "weka.core.WekaPackageManager",
159:       "weka.filters.SupervisedFilter",
160:       "weka.core.TechnicalInformationHandler",
161:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
162:       "weka.core.neighboursearch.LinearNNSearch",
163:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
164:       "weka.core.Option",
165:       "weka.core.neighboursearch.PerformanceStats",
166:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
167:       "weka.filters.Sourcable",
168:       "weka.core.Attribute",
169:       "weka.core.Stopwords",
170:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
171:       "weka.core.UnassignedDatasetException",
172:       "weka.core.tokenizers.NGramTokenizer",
173:       "weka.classifiers.SingleClassifierEnhancer",
174:       "weka.core.RevisionUtils",
175:       "weka.core.Instance",
176:       "weka.estimators.Estimator",
177:       "weka.core.ProtectedProperties",
178:       "weka.classifiers.bayes.net.ADNode",
179:       "weka.core.AttributeStats",
180:       "weka.core.WeightedInstancesHandler",
181:       "weka.core.neighboursearch.NearestNeighbourSearch",
182:       "weka.classifiers.trees.DecisionStump",
183:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
184:       "weka.core.EuclideanDistance",
185:       "weka.core.Instances",
186:       "weka.core.UnassignedClassException",
187:       "weka.classifiers.bayes.net.ParentSet",
188:       "weka.classifiers.rules.ZeroR",
189:       "weka.core.TechnicalInformation",
190:       "weka.core.UnsupportedAttributeTypeException",
191:       "weka.classifiers.Sourcable",
192:       "weka.core.RevisionHandler",
193:       "weka.classifiers.evaluation.output.prediction.PlainText",
194:       "weka.core.neighboursearch.TreePerformanceStats",
195:       "weka.core.xml.XMLSerialization",
196:       "weka.classifiers.xml.XMLClassifier",
197:       "weka.filters.Filter",
198:       "weka.filters.supervised.attribute.Discretize"
199:     );
200:   } 
201: 
202:   private static void resetClasses() {
203:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_61_tmp__ESTest_scaffolding.class.getClassLoader()); 
204: 
205:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
206:       "weka.classifiers.AbstractClassifier",
207:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
209:       "weka.core.Capabilities$Capability",
210:       "weka.core.tokenizers.Tokenizer",
211:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
212:       "weka.core.tokenizers.WordTokenizer",
213:       "weka.core.stemmers.NullStemmer",
214:       "weka.core.RevisionUtils",
215:       "weka.core.Option",
216:       "weka.core.Utils",
217:       "weka.classifiers.Evaluation",
218:       "weka.classifiers.bayes.NaiveBayes",
219:       "weka.core.Tag",
220:       "weka.classifiers.lazy.IBk",
221:       "weka.core.neighboursearch.NearestNeighbourSearch",
222:       "weka.core.neighboursearch.LinearNNSearch",
223:       "weka.core.NormalizableDistance",
224:       "weka.core.EuclideanDistance",
225:       "weka.core.Range",
226:       "weka.attributeSelection.ASEvaluation",
227:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
228:       "weka.attributeSelection.PrincipalComponents",
229:       "weka.core.stemmers.LovinsStemmer",
230:       "weka.core.stemmers.IteratedLovinsStemmer",
231:       "weka.core.TechnicalInformation",
232:       "weka.core.TechnicalInformation$Type",
233:       "weka.core.TechnicalInformation$Field",
234:       "weka.core.SerializedObject",
235:       "weka.core.Capabilities",
236:       "org.pentaho.packageManagement.PackageManager",
237:       "org.pentaho.packageManagement.DefaultPackageManager",
238:       "weka.core.Version",
239:       "weka.core.Environment",
240:       "weka.core.WekaPackageManager",
241:       "weka.classifiers.misc.SerializedClassifier",
242:       "weka.core.AbstractInstance",
243:       "weka.core.DenseInstance",
244:       "weka.core.neighboursearch.KDTree",
245:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
246:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
247:       "weka.core.SparseInstance",
248:       "weka.core.BinarySparseInstance",
249:       "weka.core.UnassignedDatasetException",
250:       "weka.core.tokenizers.NGramTokenizer",
251:       "weka.core.neighboursearch.CoverTree",
252:       "weka.core.Instances",
253:       "weka.core.neighboursearch.balltrees.BallNode",
254:       "weka.core.Stopwords",
255:       "weka.classifiers.functions.VotedPerceptron",
256:       "weka.core.neighboursearch.BallTree",
257:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
258:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
259:       "weka.core.neighboursearch.balltrees.BallSplitter",
260:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
261:       "weka.filters.Filter",
262:       "weka.filters.supervised.attribute.Discretize",
263:       "weka.core.TestInstances",
264:       "weka.classifiers.RandomizableClassifier",
265:       "weka.classifiers.functions.SGDText",
266:       "weka.classifiers.SingleClassifierEnhancer",
267:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
268:       "weka.classifiers.meta.CostSensitiveClassifier",
269:       "weka.classifiers.rules.ZeroR",
270:       "weka.classifiers.CostMatrix",
271:       "weka.classifiers.bayes.BayesNet",
272:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
273:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
274:       "weka.classifiers.bayes.net.search.local.K2",
275:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
276:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
277:       "weka.classifiers.misc.InputMappedClassifier",
278:       "weka.estimators.Estimator",
279:       "weka.estimators.KernelEstimator",
280:       "weka.core.Attribute",
281:       "weka.core.ProtectedProperties",
282:       "weka.classifiers.functions.SGD",
283:       "weka.core.tokenizers.AlphabeticTokenizer",
284:       "weka.core.UnassignedClassException",
285:       "weka.classifiers.meta.ClassificationViaRegression",
286:       "weka.classifiers.trees.m5.M5Base",
287:       "weka.classifiers.trees.M5P",
288:       "weka.classifiers.functions.LinearRegression",
289:       "weka.core.neighboursearch.kdtrees.KMeansInpiredMethod",
290:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
291:       "weka.classifiers.bayes.net.BIFReader",
292:       "weka.classifiers.functions.supportVector.Kernel",
293:       "weka.classifiers.functions.supportVector.CachedKernel",
294:       "weka.classifiers.functions.supportVector.PolyKernel",
295:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
296:       "weka.core.WekaException",
297:       "weka.core.UnsupportedAttributeTypeException",
298:       "weka.classifiers.functions.supportVector.StringKernel",
299:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
301:       "weka.attributeSelection.CorrelationAttributeEval",
302:       "weka.classifiers.trees.J48",
303:       "weka.classifiers.trees.j48.ClassifierTree",
304:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
305:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
306:       "weka.classifiers.meta.RegressionByDiscretization",
307:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
308:       "weka.filters.unsupervised.attribute.Discretize",
309:       "weka.classifiers.IteratedSingleClassifierEnhancer",
310:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
311:       "weka.classifiers.meta.LogitBoost",
312:       "weka.classifiers.trees.DecisionStump",
313:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
314:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
315:       "weka.classifiers.meta.Bagging",
316:       "weka.classifiers.trees.REPTree",
317:       "weka.core.stemmers.Stemming",
318:       "weka.core.FindWithCapabilities",
319:       "weka.core.SingleIndex",
320:       "weka.core.ClassDiscovery",
321:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
322:       "weka.classifiers.bayes.NaiveBayesUpdateable",
323:       "weka.core.WekaEnumeration",
324:       "weka.core.Attribute$1",
325:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
326:       "weka.attributeSelection.GainRatioAttributeEval",
327:       "weka.attributeSelection.OneRAttributeEval",
328:       "weka.attributeSelection.InfoGainAttributeEval",
329:       "weka.core.AttributeStats",
330:       "weka.classifiers.rules.M5Rules",
331:       "weka.attributeSelection.ReliefFAttributeEval",
332:       "weka.classifiers.meta.RandomCommittee",
333:       "weka.classifiers.trees.RandomTree",
334:       "weka.classifiers.meta.MultiClassClassifier",
335:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
336:       "weka.classifiers.functions.Logistic",
337:       "weka.estimators.PoissonEstimator",
338:       "weka.core.stemmers.SnowballStemmer",
339:       "weka.classifiers.meta.FilteredClassifier",
340:       "weka.filters.supervised.attribute.AttributeSelection",
341:       "weka.attributeSelection.AttributeSelection",
342:       "weka.attributeSelection.CfsSubsetEval",
343:       "weka.attributeSelection.ASSearch",
344:       "weka.attributeSelection.GreedyStepwise",
345:       "weka.attributeSelection.BestFirst",
346:       "weka.classifiers.functions.SimpleLogistic",
347:       "weka.estimators.NormalEstimator",
348:       "weka.classifiers.lazy.LWL",
349:       "weka.classifiers.functions.supportVector.Puk",
350:       "weka.classifiers.lazy.KStar",
351:       "weka.classifiers.functions.SimpleLinearRegression",
352:       "weka.classifiers.bayes.NaiveBayesMultinomial",
353:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
354:       "weka.classifiers.meta.AttributeSelectedClassifier",
355:       "weka.classifiers.rules.PART",
356:       "weka.classifiers.meta.CVParameterSelection",
357:       "weka.core.FastVector",
358:       "weka.classifiers.trees.RandomForest",
359:       "weka.attributeSelection.WrapperSubsetEval",
360:       "weka.classifiers.functions.SMO",
361:       "weka.core.converters.ArffLoader$ArffReader",
362:       "weka.classifiers.MultipleClassifiersCombiner",
363:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
364:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
365:       "weka.classifiers.meta.Stacking",
366:       "weka.classifiers.rules.DecisionTable",
367:       "weka.filters.AllFilter",
368:       "weka.estimators.DiscreteEstimator",
369:       "weka.classifiers.meta.AdaBoostM1",
370:       "weka.filters.SimpleFilter",
371:       "weka.filters.SimpleStreamFilter",
372:       "weka.filters.MultiFilter",
373:       "weka.classifiers.rules.part.MakeDecList",
374:       "weka.classifiers.meta.AdditiveRegression",
375:       "weka.core.matrix.Matrix",
376:       "weka.classifiers.functions.MultilayerPerceptron",
377:       "weka.filters.unsupervised.attribute.NominalToBinary",
378:       "weka.classifiers.functions.neural.SigmoidUnit",
379:       "weka.classifiers.functions.neural.LinearUnit",
380:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
381:       "weka.classifiers.meta.MultiScheme",
382:       "weka.classifiers.rules.JRip",
383:       "weka.classifiers.meta.Vote",
384:       "weka.classifiers.rules.OneR",
385:       "weka.classifiers.meta.RandomSubSpace",
386:       "weka.classifiers.functions.GaussianProcesses",
387:       "weka.core.SelectedTag",
388:       "weka.experiment.Stats",
389:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
390:       "weka.classifiers.functions.SMOreg",
391:       "weka.classifiers.functions.supportVector.RegOptimizer",
392:       "weka.classifiers.functions.supportVector.RegSMO",
393:       "weka.classifiers.functions.supportVector.RegSMOImproved",
394:       "weka.classifiers.functions.supportVector.RBFKernel",
395:       "weka.core.neighboursearch.PerformanceStats",
396:       "weka.core.neighboursearch.TreePerformanceStats",
397:       "weka.classifiers.trees.LMT"
398:     );
399:   }
400: }

[MASTER] 17:49:27.092 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_normalize = true;
TestInstances testInstances0 = new TestInstances();
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances(" ", arrayList0, 25);
naiveBayesMultinomialText0.buildClassifier(instances0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/mosa/tests/s1004/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 17:55:29.101 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 33%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/mosa/tests/s1004/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10006
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10008
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:56:10.798 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:56:10.831 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:56:10.838 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:56:12.749 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 17:56:13.177 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 17:56:13.178 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Total number of test goals for MOSA: 2767
* Using seed 1004
* Starting evolution
[MASTER] 17:56:15.901 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:56:15.902 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:56:15.915 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:56:15.919 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2499
* Using seed 1004
* Starting evolution
[MASTER] 17:56:18.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 376
[MASTER] 17:56:18.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 377
[MASTER] 17:56:18.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 380
[MASTER] 17:56:18.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 382
[MASTER] 17:56:18.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 383
[MASTER] 17:56:18.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 386
[MASTER] 17:56:18.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 388
[MASTER] 17:56:18.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 389
[MASTER] 17:56:18.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 392
[MASTER] 17:56:18.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 394
[MASTER] 17:56:18.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 395
[MASTER] 17:56:18.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 398
[MASTER] 17:56:18.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 400
[MASTER] 17:56:18.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 401
[MASTER] 17:56:18.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 402
[MASTER] 17:56:18.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 403
[MASTER] 17:56:18.183 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I10 Branch 1 IFEQ L377 - true
[MASTER] 17:56:18.183 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I33 Branch 2 IFEQ L383 - true
[MASTER] 17:56:18.183 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I56 Branch 3 IFEQ L389 - true
[MASTER] 17:56:18.183 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I79 Branch 4 IFEQ L395 - true
[MASTER] 17:56:18.183 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I105 Branch 5 IFNE L401 - false
[MASTER] 17:56:18.183 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I118 Branch 6 IFNE L402 - false
[MASTER] 17:56:18.183 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 47: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:376 - ReplaceConstant - 70 -> 0
[MASTER] 17:56:18.183 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 48: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:376 - ReplaceConstant - 70 -> 1
[MASTER] 17:56:18.183 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 49: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:376 - ReplaceConstant - 70 -> -1
[MASTER] 17:56:18.183 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 50: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:376 - ReplaceConstant - 70 -> 69
[MASTER] 17:56:18.183 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 51: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:376 - ReplaceConstant - 70 -> 71
[MASTER] 17:56:18.183 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 52: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:377 - ReplaceComparisonOperator == -> -2
[MASTER] 17:56:18.183 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 55: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:380 - ReplaceConstant - 3 -> 0
[MASTER] 17:56:18.183 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 56: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:380 - ReplaceConstant - 3 -> 1
[MASTER] 17:56:18.183 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 57: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:380 - ReplaceConstant - 3 -> -1
[MASTER] 17:56:18.183 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 58: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:380 - ReplaceConstant - 3 -> 2
[MASTER] 17:56:18.183 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 59: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:380 - ReplaceConstant - 3 -> 4
[MASTER] 17:56:18.187 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 60: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:382 - ReplaceConstant - 78 -> 0
[MASTER] 17:56:18.187 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 61: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:382 - ReplaceConstant - 78 -> 1
[MASTER] 17:56:18.187 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 62: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:382 - ReplaceConstant - 78 -> -1
[MASTER] 17:56:18.187 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 63: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:382 - ReplaceConstant - 78 -> 77
[MASTER] 17:56:18.187 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 64: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:382 - ReplaceConstant - 78 -> 79
[MASTER] 17:56:18.187 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 66: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:383 - ReplaceComparisonOperator == -> -2
[MASTER] 17:56:18.187 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 70: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:386 - ReplaceConstant - 2.0 -> 0.0
[MASTER] 17:56:18.187 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 71: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:386 - ReplaceConstant - 2.0 -> 1.0
[MASTER] 17:56:18.187 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 72: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:386 - ReplaceConstant - 2.0 -> -1.0
[MASTER] 17:56:18.187 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 73: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:386 - ReplaceConstant - 2.0 -> 3.0
[MASTER] 17:56:18.187 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 74: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:388 - ReplaceConstant - 83 -> 0
[MASTER] 17:56:18.187 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 75: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:388 - ReplaceConstant - 83 -> 1
[MASTER] 17:56:18.189 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 76: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:388 - ReplaceConstant - 83 -> -1
[MASTER] 17:56:18.189 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 77: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:388 - ReplaceConstant - 83 -> 82
[MASTER] 17:56:18.189 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 78: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:388 - ReplaceConstant - 83 -> 84
[MASTER] 17:56:18.189 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 81: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:389 - ReplaceComparisonOperator == -> -2
[MASTER] 17:56:18.189 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 86: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:392 - ReplaceConstant - 1 -> 0
[MASTER] 17:56:18.189 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 87: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:392 - ReplaceConstant - 1 -> -1
[MASTER] 17:56:18.189 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 88: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:392 - ReplaceConstant - 1 -> 2
[MASTER] 17:56:18.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 89: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:394 - ReplaceConstant - 79 -> 0
[MASTER] 17:56:18.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 90: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:394 - ReplaceConstant - 79 -> 1
[MASTER] 17:56:18.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 91: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:394 - ReplaceConstant - 79 -> -1
[MASTER] 17:56:18.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 92: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:394 - ReplaceConstant - 79 -> 78
[MASTER] 17:56:18.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 93: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:394 - ReplaceConstant - 79 -> 80
[MASTER] 17:56:18.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 97: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:395 - ReplaceComparisonOperator == -> -2
[MASTER] 17:56:18.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 103: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:398 - ReplaceConstant - 2 -> 0
[MASTER] 17:56:18.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 104: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:398 - ReplaceConstant - 2 -> 1
[MASTER] 17:56:18.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 105: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:398 - ReplaceConstant - 2 -> -1
[MASTER] 17:56:18.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 106: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:398 - ReplaceConstant - 2 -> 3
[MASTER] 17:56:18.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 107: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:400 - ReplaceConstant - 68 -> 0
[MASTER] 17:56:18.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 108: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:400 - ReplaceConstant - 68 -> 1
[MASTER] 17:56:18.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 109: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:400 - ReplaceConstant - 68 -> -1
[MASTER] 17:56:18.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 110: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:400 - ReplaceConstant - 68 -> 67
[MASTER] 17:56:18.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 111: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:400 - ReplaceConstant - 68 -> 69
[MASTER] 17:56:18.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 112: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:401 - ReplaceConstant - 69 -> 0
[MASTER] 17:56:18.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 113: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:401 - ReplaceConstant - 69 -> 1
[MASTER] 17:56:18.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 114: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:401 - ReplaceConstant - 69 -> -1
[MASTER] 17:56:18.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 115: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:401 - ReplaceConstant - 69 -> 68
[MASTER] 17:56:18.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 116: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:401 - ReplaceConstant - 69 -> 70
[MASTER] 17:56:18.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 117: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:401 - ReplaceComparisonOperator != -> ==
[MASTER] 17:56:18.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 118: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:401 - ReplaceConstant - 1 -> 0
[MASTER] 17:56:18.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 120: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:402 - ReplaceConstant - 80 -> 0
[MASTER] 17:56:18.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 121: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:402 - ReplaceConstant - 80 -> 1
[MASTER] 17:56:18.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 122: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:402 - ReplaceConstant - 80 -> -1
[MASTER] 17:56:18.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 123: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:402 - ReplaceConstant - 80 -> 79
[MASTER] 17:56:18.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 124: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:402 - ReplaceConstant - 80 -> 81
[MASTER] 17:56:18.192 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V
[MASTER] 17:56:18.193 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V
[MASTER] 17:56:18.193 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I79 Branch 4 IFEQ L395 - true in context: weka.classifiers.rules.JRip:setOptions([Ljava/lang/String;)V
[MASTER] 17:56:18.193 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I33 Branch 2 IFEQ L383 - true in context: weka.classifiers.rules.JRip:setOptions([Ljava/lang/String;)V
[MASTER] 17:56:18.193 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I118 Branch 6 IFNE L402 - false in context: weka.classifiers.rules.JRip:setOptions([Ljava/lang/String;)V
[MASTER] 17:56:18.193 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I56 Branch 3 IFEQ L389 - true in context: weka.classifiers.rules.JRip:setOptions([Ljava/lang/String;)V
[MASTER] 17:56:18.193 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I10 Branch 1 IFEQ L377 - true in context: weka.classifiers.rules.JRip:setOptions([Ljava/lang/String;)V
[MASTER] 17:56:18.193 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I105 Branch 5 IFNE L401 - false in context: weka.classifiers.rules.JRip:setOptions([Ljava/lang/String;)V
[MASTER] 17:56:18.619 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 17:57:28.641 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 124s and 211 generations, 97202 statements, best individual has fitness: 11600.0
* Search finished after 122s and 107 generations, 59474 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion LINE: 41%
* Total number of goals: 705
* Number of covered goals: 289
* Coverage analysis for criterion BRANCH
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage of criterion BRANCH: 31%
* Total number of goals: 416
* Number of covered goals: 129
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Generated 18 tests with total length 121
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Coverage of criterion WEAKMUTATION: 60%
* Total number of goals: 993
* Number of covered goals: 598
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 35%
* Total number of goals: 93
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 31%
* Total number of goals: 416
* Number of covered goals: 129
* Generated 70 tests with total length 596
* Resulting test suite's coverage: 48% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/mosa/tests/s1004/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 24%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/mosa/tests/s1004/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10009
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10010
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 18:01:16.991 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:01:17.097 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:01:17.143 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 18:01:17.321 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 18:01:17.353 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 18:01:17.362 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1729
* Using seed 1004
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 18:01:30.728 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:01:30.730 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:01:30.730 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 18:01:31.237 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 18:01:31.835 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 18:01:31.836 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 18:01:33.416 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 18:01:33.439 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 18:01:33.440 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 18:01:33.440 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 18:01:33.441 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 18:01:33.441 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 18:01:33.442 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 18:01:33.442 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 18:01:33.442 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 18:01:33.527 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 18:01:33.553 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 3904
* Using seed 1004
* Starting evolution
[MASTER] 18:01:37.093 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 18:02:38.480 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 18:02:49.691 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 125s and 295 generations, 82615 statements, best individual has fitness: 8136.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 47%
* Total number of goals: 370
* Number of covered goals: 175
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 80
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 36%
* Total number of goals: 713
* Number of covered goals: 260
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 47%
* Total number of goals: 72
* Number of covered goals: 34
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 45
* Number of covered goals: 43
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 80
* Generated 52 tests with total length 274
* Resulting test suite's coverage: 42% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 126s and 63 generations, 35235 statements, best individual has fitness: 15088.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 59%
* Total number of goals: 1378
* Number of covered goals: 819
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 45%
* Total number of goals: 809
* Number of covered goals: 361
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 53
* Number of covered goals: 53
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 64%
* Total number of goals: 424
* Number of covered goals: 273
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 18%
* Total number of goals: 278
* Number of covered goals: 51
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 95%
* Total number of goals: 103
* Number of covered goals: 98
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 94%
* Total number of goals: 103
* Number of covered goals: 97
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 41%
* Total number of goals: 809
* Number of covered goals: 334
* Generated 126 tests with total length 1499
* Resulting test suite's coverage: 52% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 12%
* Compiling and checking tests
[MASTER] 18:04:30.152 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 18:04:30.477 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/mosa/tests/s1004/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
[MASTER] 18:07:52.660 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 18:07:52.918 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 18:07:52.918 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 18:07:54.137 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/mosa/tests/s1004/107_weka/evosuite-tests
* Done!

* Computation finished
