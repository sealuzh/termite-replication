* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18382
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18386
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 03:49:08.013 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:49:08.060 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:49:08.061 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 03:49:08.191 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 03:49:08.219 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 03:49:08.248 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1729
* Using seed 1018
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 03:49:15.932 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:49:15.950 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:49:15.950 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 03:49:15.996 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2499
* Using seed 1018
* Starting evolution
[MASTER] 03:49:19.352 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 122s and 336 generations, 104303 statements, best individual has fitness: 6344.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 56%
* Total number of goals: 370
* Number of covered goals: 207
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 44%
* Total number of goals: 242
* Number of covered goals: 107
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 55%
* Total number of goals: 713
* Number of covered goals: 393
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 72
* Number of covered goals: 37
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 44%
* Total number of goals: 242
* Number of covered goals: 107
* Generated 63 tests with total length 293
* Resulting test suite's coverage: 55% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 122s and 104 generations, 67516 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 20 tests with total length 122
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 11%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/mosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
[MASTER] 03:52:23.400 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 03:52:23.696 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/mosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18381
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 03:53:07.951 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:53:07.955 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:53:07.956 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 03:53:08.368 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 03:53:08.973 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 03:53:09.001 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 03:53:10.412 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 03:53:10.434 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 03:53:10.440 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 03:53:10.440 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 03:53:10.441 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 03:53:10.441 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 03:53:10.441 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 03:53:10.442 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 03:53:10.444 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 03:53:10.497 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 03:53:10.504 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 3904
* Using seed 1018
* Starting evolution
[MASTER] 03:53:14.842 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 03:53:35.954 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 128s and 72 generations, 35764 statements, best individual has fitness: 15104.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 60%
* Total number of goals: 1378
* Number of covered goals: 823
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 43%
* Total number of goals: 809
* Number of covered goals: 350
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 71
* Number of covered goals: 71
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 62%
* Total number of goals: 424
* Number of covered goals: 263
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 20%
* Total number of goals: 278
* Number of covered goals: 55
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 97%
* Total number of goals: 103
* Number of covered goals: 100
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 95%
* Total number of goals: 103
* Number of covered goals: 98
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 42%
* Total number of goals: 809
* Number of covered goals: 339
* Generated 144 tests with total length 1430
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 10%
* Compiling and checking tests
[MASTER] 04:00:15.673 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_76_1575518415650/weka/classifiers/Evaluation_76_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_76_1575518415650/weka/classifiers/Evaluation_76_tmp__ESTest_scaffolding.java]]
[MASTER] 04:00:15.673 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:00:15.673 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:00:15.676 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   variable double1
  location: class weka.classifiers.Evaluation_76_tmp__ESTest: 37
[MASTER] 04:00:15.677 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_76_1575518415650/weka/classifiers/Evaluation_76_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 04:00:15 GMT 2019
4:  */
5: 
6: package weka.classifiers;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import org.evosuite.runtime.EvoRunner;
11: import org.evosuite.runtime.EvoRunnerParameters;
12: import org.junit.runner.RunWith;
13: import weka.classifiers.Evaluation;
14: import weka.classifiers.trees.J48;
15: import weka.core.Instances;
16: import weka.core.TestInstances;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class Evaluation_76_tmp__ESTest extends Evaluation_76_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=3.4836450511259716
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       TestInstances testInstances0 = new TestInstances();
28:       Instances instances0 = testInstances0.generate(" ");
29:       Evaluation evaluation0 = new Evaluation(instances0);
30:       J48 j48_0 = new J48();
31:       String string0 = evaluation0.toClassDetailsString(".bsi");
32:       assertEquals(".bsi\n                 TP Rate  FP Rate  Precision  Recall  F-Measure  MCC    ROC Area  PRC Area  Class\n                 0        0        0          0       0          0     ?         ?         class1\n                 0        0        0          0       0          0     ?         ?         class2\nWeighted Avg.  NaN      NaN      NaN        NaN     NaN        NaN    NaN       NaN    \n", string0);
33:       
34:       Evaluation evaluation1 = new Evaluation(instances0);
35:       evaluation0.weightedAreaUnderROC();
36:       double double0 = evaluation1.m_SumSqrErr;
37:       assertNotEquals(double0, double1, 0.01);
38:   }
39: }
RegularFileObject[/tmp/EvoSuite_76_1575518415650/weka/classifiers/Evaluation_76_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 04:00:15 GMT 2019
5:  */
6: 
7: package weka.classifiers;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class Evaluation_76_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.Evaluation"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Evaluation_76_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.clusterers.AbstractClusterer",
91:       "weka.core.converters.TextDirectoryLoader",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.filters.UnsupervisedFilter",
95:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
96:       "weka.core.DenseInstance",
97:       "weka.core.converters.DatabaseConverter",
98:       "weka.classifiers.trees.J48",
99:       "weka.classifiers.functions.SimpleLinearRegression",
100:       "weka.classifiers.evaluation.output.prediction.CSV",
101:       "org.pentaho.packageManagement.DefaultPackageManager",
102:       "weka.estimators.UnivariateIntervalEstimator",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.filters.SimpleStreamFilter",
105:       "weka.estimators.IncrementalEstimator",
106:       "weka.clusterers.NumberOfClustersRequestable",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.classifiers.functions.SGDText",
109:       "weka.classifiers.meta.AdaBoostM1",
110:       "weka.core.CustomDisplayStringProvider",
111:       "weka.core.NormalizableDistance",
112:       "weka.classifiers.functions.SMOreg",
113:       "weka.classifiers.rules.Rule",
114:       "weka.clusterers.SimpleKMeans",
115:       "weka.core.TechnicalInformation$Type",
116:       "weka.core.Copyable",
117:       "weka.filters.supervised.attribute.NominalToBinary",
118:       "weka.core.BinarySparseInstance",
119:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
120:       "weka.core.SerializedObject",
121:       "weka.clusterers.UpdateableClusterer",
122:       "weka.core.AdditionalMeasureProducer",
123:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
124:       "weka.classifiers.meta.MultiClassClassifier",
125:       "weka.core.Optimization",
126:       "weka.classifiers.functions.supportVector.RegOptimizer",
127:       "weka.classifiers.misc.InputMappedClassifier",
128:       "weka.experiment.ResultProducer",
129:       "weka.core.Version",
130:       "weka.classifiers.meta.MultiClassClassifier$Code",
131:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
132:       "weka.classifiers.evaluation.NominalPrediction",
133:       "weka.classifiers.AbstractClassifier",
134:       "weka.core.converters.ArffLoader",
135:       "weka.classifiers.meta.Stacking",
136:       "weka.core.WekaException",
137:       "weka.filters.StreamableFilter",
138:       "weka.core.Attribute$1",
139:       "weka.core.PartitionGenerator",
140:       "weka.core.SparseInstance",
141:       "weka.classifiers.trees.j48.ClassifierTree",
142:       "weka.classifiers.misc.SerializedClassifier",
143:       "weka.core.tokenizers.WordTokenizer",
144:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
145:       "weka.classifiers.trees.j48.PruneableClassifierTree",
146:       "weka.classifiers.Evaluation",
147:       "weka.classifiers.functions.supportVector.Kernel",
148:       "weka.core.converters.CSVLoader",
149:       "weka.classifiers.functions.SMO",
150:       "weka.classifiers.evaluation.ThresholdCurve",
151:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
152:       "weka.core.converters.FileSourcedConverter",
153:       "weka.core.converters.URLSourcedLoader",
154:       "weka.core.neighboursearch.LinearNNSearch",
155:       "weka.clusterers.Clusterer",
156:       "weka.estimators.KernelEstimator",
157:       "weka.estimators.UnivariateKernelEstimator",
158:       "weka.core.UnassignedDatasetException",
159:       "weka.classifiers.RandomizableClassifier",
160:       "weka.core.RevisionUtils",
161:       "weka.classifiers.functions.supportVector.RegSMO",
162:       "weka.core.converters.Loader",
163:       "weka.estimators.Estimator",
164:       "weka.core.ProtectedProperties",
165:       "weka.core.converters.C45Loader",
166:       "weka.classifiers.meta.Vote",
167:       "weka.core.StringLocator",
168:       "weka.core.AttributeStats",
169:       "weka.filters.MultiFilter",
170:       "weka.estimators.UnivariateQuantileEstimator",
171:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
172:       "weka.filters.unsupervised.attribute.Remove",
173:       "weka.core.Randomizable",
174:       "weka.classifiers.trees.LMT",
175:       "weka.classifiers.rules.M5Rules",
176:       "weka.core.EuclideanDistance",
177:       "weka.core.Instances",
178:       "weka.core.converters.AbstractFileLoader",
179:       "weka.classifiers.bayes.NaiveBayesMultinomial",
180:       "weka.core.converters.ConverterUtils$DataSink",
181:       "weka.classifiers.bayes.net.ParentSet",
182:       "weka.core.converters.DatabaseConnection",
183:       "weka.core.TechnicalInformation",
184:       "weka.core.UnsupportedAttributeTypeException",
185:       "weka.classifiers.functions.Logistic$OptEngCG",
186:       "weka.core.RevisionHandler",
187:       "weka.experiment.Stats",
188:       "weka.core.converters.ConverterUtils$DataSource",
189:       "weka.classifiers.rules.OneR$OneRRule",
190:       "weka.classifiers.xml.XMLClassifier",
191:       "weka.filters.Filter",
192:       "weka.filters.supervised.attribute.Discretize",
193:       "weka.classifiers.rules.JRip$RipperRule",
194:       "weka.core.TestInstances",
195:       "weka.core.converters.ConverterUtils",
196:       "weka.core.DistanceFunction",
197:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
198:       "org.pentaho.packageManagement.Package",
199:       "weka.classifiers.trees.m5.M5Base",
200:       "weka.classifiers.rules.RuleStats",
201:       "weka.classifiers.CostMatrix",
202:       "weka.classifiers.bayes.net.search.local.K2",
203:       "weka.core.logging.Logger$Level",
204:       "weka.core.ConjugateGradientOptimization",
205:       "weka.core.stemmers.Stemmer",
206:       "weka.core.converters.IncrementalConverter",
207:       "weka.filters.supervised.attribute.ClassOrder",
208:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
209:       "weka.classifiers.bayes.NaiveBayes",
210:       "weka.filters.SimpleFilter",
211:       "weka.classifiers.meta.MultiClassClassifier$RandomCode",
212:       "weka.estimators.Estimator$Builder",
213:       "weka.core.EnvironmentHandler",
214:       "weka.classifiers.trees.j48.C45ModelSelection",
215:       "weka.classifiers.functions.Logistic",
216:       "weka.core.RelationalLocator",
217:       "weka.core.Utils",
218:       "weka.core.tokenizers.Tokenizer",
219:       "weka.filters.unsupervised.instance.RemoveWithValues",
220:       "weka.core.NoSupportForMissingValuesException",
221:       "weka.classifiers.UpdateableClassifier",
222:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
223:       "weka.core.MultiInstanceCapabilitiesHandler",
224:       "weka.classifiers.meta.MultiClassClassifier$ExhaustiveCode",
225:       "weka.core.Capabilities",
226:       "weka.core.AttributeLocator",
227:       "weka.classifiers.functions.supportVector.CachedKernel",
228:       "weka.core.Summarizable",
229:       "weka.classifiers.trees.j48.ModelSelection",
230:       "org.pentaho.packageManagement.PackageManager$1",
231:       "weka.core.Drawable",
232:       "weka.core.matrix.Matrix",
233:       "weka.classifiers.ConditionalDensityEstimator",
234:       "weka.core.CapabilitiesHandler",
235:       "weka.classifiers.trees.REPTree",
236:       "weka.core.AbstractInstance",
237:       "weka.core.scripting.JythonObject",
238:       "weka.core.SelectedTag",
239:       "org.pentaho.packageManagement.DefaultPackage",
240:       "weka.estimators.DiscreteEstimator",
241:       "weka.classifiers.bayes.NaiveBayesUpdateable",
242:       "weka.classifiers.bayes.BayesNet",
243:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
244:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
245:       "weka.classifiers.meta.AdditiveRegression",
246:       "weka.clusterers.RandomizableClusterer",
247:       "weka.classifiers.evaluation.Prediction",
248:       "weka.core.converters.AbstractLoader",
249:       "weka.classifiers.trees.lmt.ResidualModelSelection",
250:       "weka.filters.AllFilter",
251:       "weka.filters.unsupervised.attribute.RemoveUseless",
252:       "weka.core.converters.BatchConverter",
253:       "weka.core.Tag",
254:       "weka.classifiers.IteratedSingleClassifierEnhancer",
255:       "weka.classifiers.trees.j48.BinC45ModelSelection",
256:       "weka.estimators.UnivariateDensityEstimator",
257:       "weka.core.OptionHandler",
258:       "weka.classifiers.rules.JRip",
259:       "weka.core.Range",
260:       "weka.core.scripting.JythonSerializableObject",
261:       "weka.classifiers.Classifier",
262:       "weka.core.Capabilities$Capability",
263:       "org.pentaho.packageManagement.PackageManager",
264:       "weka.core.WekaEnumeration",
265:       "weka.core.WekaPackageManager",
266:       "weka.filters.SupervisedFilter",
267:       "weka.core.TechnicalInformationHandler",
268:       "weka.experiment.DatabaseUtils",
269:       "weka.classifiers.meta.CostSensitiveClassifier",
270:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
271:       "weka.core.Option",
272:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
273:       "weka.filters.Sourcable",
274:       "weka.classifiers.meta.MultiClassClassifier$StandardCode",
275:       "weka.classifiers.meta.RandomSubSpace",
276:       "weka.core.Attribute",
277:       "weka.core.FastVector",
278:       "weka.classifiers.MultipleClassifiersCombiner",
279:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
280:       "weka.core.BatchPredictor",
281:       "weka.classifiers.functions.supportVector.RegSMOImproved",
282:       "weka.classifiers.SingleClassifierEnhancer",
283:       "weka.core.Instance",
284:       "weka.core.converters.SerializedInstancesLoader",
285:       "weka.classifiers.functions.supportVector.PolyKernel",
286:       "weka.classifiers.IntervalEstimator",
287:       "weka.core.Matchable",
288:       "weka.classifiers.bayes.net.ADNode",
289:       "weka.core.WeightedInstancesHandler",
290:       "weka.core.neighboursearch.NearestNeighbourSearch",
291:       "weka.classifiers.functions.GaussianProcesses",
292:       "weka.core.TechnicalInformation$Field",
293:       "weka.core.converters.DatabaseLoader",
294:       "weka.classifiers.functions.SGD",
295:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
296:       "weka.filters.unsupervised.attribute.Normalize",
297:       "weka.classifiers.rules.OneR",
298:       "weka.core.UnassignedClassException",
299:       "weka.classifiers.rules.ZeroR",
300:       "weka.filters.unsupervised.attribute.Standardize",
301:       "weka.classifiers.Sourcable",
302:       "weka.classifiers.functions.Logistic$OptEng",
303:       "weka.classifiers.evaluation.output.prediction.PlainText",
304:       "weka.core.xml.XMLSerialization",
305:       "weka.filters.unsupervised.attribute.MakeIndicator",
306:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
307:       "weka.classifiers.lazy.IBk"
308:     );
309:   } 
310: 
311:   private static void resetClasses() {
312:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Evaluation_76_tmp__ESTest_scaffolding.class.getClassLoader()); 
313: 
314:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
315:       "weka.classifiers.Evaluation",
316:       "weka.core.pmml.PMMLFactory$ModelType",
317:       "weka.core.pmml.PMMLFactory$1",
318:       "weka.core.xml.KOML",
319:       "weka.core.Version",
320:       "weka.core.Utils",
321:       "weka.classifiers.AbstractClassifier",
322:       "weka.core.Tag",
323:       "weka.classifiers.functions.SMOreg",
324:       "weka.classifiers.functions.supportVector.RegOptimizer",
325:       "weka.classifiers.functions.supportVector.RegSMO",
326:       "weka.classifiers.functions.supportVector.RegSMOImproved",
327:       "weka.classifiers.functions.supportVector.Kernel",
328:       "weka.classifiers.functions.supportVector.CachedKernel",
329:       "weka.classifiers.functions.supportVector.PolyKernel",
330:       "weka.core.SelectedTag",
331:       "weka.core.TechnicalInformation",
332:       "weka.core.TechnicalInformation$Type",
333:       "weka.core.TechnicalInformation$Field",
334:       "weka.core.converters.AbstractLoader",
335:       "weka.core.converters.AbstractFileLoader",
336:       "weka.core.converters.MatlabLoader",
337:       "weka.classifiers.bayes.NaiveBayesMultinomial",
338:       "weka.core.Option",
339:       "weka.core.converters.ArffLoader",
340:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
341:       "weka.classifiers.evaluation.output.prediction.Null",
342:       "weka.core.AbstractInstance",
343:       "weka.core.DenseInstance",
344:       "weka.core.SparseInstance",
345:       "weka.core.BinarySparseInstance",
346:       "weka.core.UnassignedDatasetException",
347:       "weka.core.converters.JSONLoader",
348:       "weka.core.neighboursearch.NearestNeighbourSearch",
349:       "weka.core.neighboursearch.CoverTree",
350:       "weka.core.NormalizableDistance",
351:       "weka.core.EuclideanDistance",
352:       "weka.core.Range",
353:       "weka.core.Instances",
354:       "weka.classifiers.CostMatrix",
355:       "weka.core.converters.SerializedInstancesLoader",
356:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
357:       "weka.core.tokenizers.Tokenizer",
358:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
359:       "weka.core.tokenizers.WordTokenizer",
360:       "weka.core.stemmers.NullStemmer",
361:       "weka.core.converters.TextDirectoryLoader",
362:       "weka.core.Attribute",
363:       "weka.core.ProtectedProperties",
364:       "weka.core.Capabilities",
365:       "org.pentaho.packageManagement.PackageManager",
366:       "org.pentaho.packageManagement.DefaultPackageManager",
367:       "weka.core.Environment",
368:       "weka.core.WekaPackageManager",
369:       "weka.core.WekaException",
370:       "weka.core.UnsupportedAttributeTypeException",
371:       "weka.core.TestInstances",
372:       "weka.core.xml.XMLDocument",
373:       "weka.core.xml.XMLInstances",
374:       "weka.core.converters.XRFFLoader",
375:       "weka.core.WekaEnumeration",
376:       "weka.core.Attribute$1",
377:       "weka.core.converters.C45Loader",
378:       "weka.attributeSelection.ASEvaluation",
379:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
380:       "weka.attributeSelection.PrincipalComponents",
381:       "weka.core.converters.LibSVMLoader",
382:       "weka.classifiers.rules.ZeroR",
383:       "weka.core.converters.SVMLightLoader",
384:       "weka.clusterers.AbstractClusterer",
385:       "weka.clusterers.RandomizableClusterer",
386:       "weka.clusterers.SimpleKMeans",
387:       "weka.core.SerializedObject",
388:       "weka.core.converters.ConverterUtils$DataSource",
389:       "weka.gui.GenericPropertiesCreator",
390:       "weka.gui.GenericObjectEditor",
391:       "weka.core.converters.ConverterUtils",
392:       "weka.core.converters.DatabaseLoader",
393:       "weka.experiment.DatabaseUtils",
394:       "weka.core.converters.DatabaseConnection",
395:       "weka.classifiers.evaluation.output.prediction.HTML",
396:       "weka.core.converters.ArffLoader$ArffReader",
397:       "weka.classifiers.SingleClassifierEnhancer",
398:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
399:       "weka.classifiers.meta.MultiClassClassifier",
400:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
401:       "weka.classifiers.functions.Logistic",
402:       "weka.classifiers.misc.SerializedClassifier",
403:       "weka.core.RevisionUtils",
404:       "weka.classifiers.lazy.IBk",
405:       "weka.core.neighboursearch.LinearNNSearch",
406:       "weka.classifiers.functions.supportVector.Puk",
407:       "weka.core.neighboursearch.balltrees.BallNode",
408:       "weka.classifiers.trees.LMT",
409:       "weka.classifiers.bayes.NaiveBayes",
410:       "weka.classifiers.bayes.NaiveBayesUpdateable",
411:       "weka.core.FindWithCapabilities",
412:       "weka.core.SingleIndex",
413:       "weka.core.converters.CSVLoader",
414:       "weka.classifiers.evaluation.output.prediction.XML",
415:       "weka.classifiers.meta.CostSensitiveClassifier",
416:       "weka.classifiers.meta.RegressionByDiscretization",
417:       "weka.filters.Filter",
418:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
419:       "weka.filters.unsupervised.attribute.Discretize",
420:       "weka.classifiers.trees.J48",
421:       "weka.filters.AllFilter",
422:       "weka.classifiers.bayes.BayesNet",
423:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
424:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
425:       "weka.classifiers.bayes.net.search.local.K2",
426:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
427:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
428:       "weka.classifiers.meta.AttributeSelectedClassifier",
429:       "weka.attributeSelection.CfsSubsetEval",
430:       "weka.attributeSelection.ASSearch",
431:       "weka.attributeSelection.BestFirst",
432:       "weka.core.neighboursearch.BallTree",
433:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
434:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
435:       "weka.core.neighboursearch.balltrees.BallSplitter",
436:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
437:       "weka.core.SerializationHelper",
438:       "weka.classifiers.IteratedSingleClassifierEnhancer",
439:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
440:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
441:       "weka.classifiers.meta.Bagging",
442:       "weka.classifiers.trees.REPTree",
443:       "weka.filters.SimpleFilter",
444:       "weka.filters.SimpleStreamFilter",
445:       "weka.filters.MultiFilter",
446:       "weka.classifiers.rules.OneR",
447:       "weka.classifiers.trees.DecisionStump",
448:       "weka.classifiers.lazy.LWL",
449:       "weka.estimators.UnivariateKernelEstimator",
450:       "weka.classifiers.functions.SimpleLinearRegression",
451:       "weka.classifiers.misc.InputMappedClassifier",
452:       "weka.classifiers.functions.SimpleLogistic",
453:       "weka.classifiers.functions.MultilayerPerceptron",
454:       "weka.core.FastVector",
455:       "weka.filters.unsupervised.attribute.NominalToBinary",
456:       "weka.classifiers.functions.neural.SigmoidUnit",
457:       "weka.classifiers.functions.neural.LinearUnit",
458:       "weka.classifiers.lazy.KStar",
459:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
460:       "weka.clusterers.HierarchicalClusterer",
461:       "weka.core.UnassignedClassException",
462:       "weka.classifiers.functions.GaussianProcesses",
463:       "weka.core.AttributeStats",
464:       "weka.classifiers.evaluation.output.prediction.CSV",
465:       "weka.classifiers.meta.AdditiveRegression",
466:       "weka.classifiers.pmml.consumer.PMMLClassifier",
467:       "weka.classifiers.pmml.consumer.SupportVectorMachineModel",
468:       "weka.classifiers.pmml.consumer.NeuralNetwork$MiningFunction",
469:       "weka.classifiers.pmml.consumer.SupportVectorMachineModel$classificationMethod",
470:       "weka.classifiers.pmml.consumer.SupportVectorMachineModel$SVM_representation",
471:       "weka.core.pmml.VectorDictionary",
472:       "weka.classifiers.pmml.consumer.SupportVectorMachineModel$Kernel",
473:       "weka.experiment.Stats",
474:       "weka.core.neighboursearch.KDTree",
475:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
476:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
477:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
478:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
479:       "weka.experiment.InstanceQuery",
480:       "weka.classifiers.evaluation.output.prediction.PlainText",
481:       "weka.classifiers.functions.VotedPerceptron",
482:       "weka.estimators.UnivariateEqualFrequencyHistogramEstimator",
483:       "weka.classifiers.MultipleClassifiersCombiner",
484:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
485:       "weka.classifiers.meta.MultiScheme",
486:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
487:       "weka.classifiers.meta.AdaBoostM1",
488:       "weka.classifiers.meta.Vote",
489:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
490:       "weka.core.matrix.Matrix",
491:       "weka.classifiers.functions.LinearRegression",
492:       "weka.classifiers.meta.FilteredClassifier",
493:       "weka.filters.supervised.attribute.AttributeSelection",
494:       "weka.attributeSelection.AttributeSelection",
495:       "weka.attributeSelection.GreedyStepwise",
496:       "weka.filters.supervised.attribute.Discretize",
497:       "weka.classifiers.trees.m5.M5Base",
498:       "weka.classifiers.rules.M5Rules",
499:       "weka.classifiers.trees.M5P",
500:       "weka.clusterers.Cobweb",
501:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
502:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
503:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
504:       "weka.classifiers.meta.Stacking",
505:       "weka.estimators.Estimator",
506:       "weka.estimators.KernelEstimator",
507:       "weka.classifiers.functions.SMO",
508:       "weka.clusterers.SingleClustererEnhancer",
509:       "weka.clusterers.FilteredClusterer",
510:       "weka.classifiers.functions.supportVector.StringKernel",
511:       "weka.estimators.PoissonEstimator",
512:       "weka.classifiers.RandomizableClassifier",
513:       "weka.classifiers.functions.SGD",
514:       "weka.classifiers.meta.RandomCommittee",
515:       "weka.classifiers.trees.RandomTree",
516:       "weka.classifiers.meta.RandomSubSpace",
517:       "weka.classifiers.rules.DecisionTable",
518:       "weka.attributeSelection.WrapperSubsetEval",
519:       "weka.clusterers.FarthestFirst",
520:       "weka.core.ClassDiscovery",
521:       "weka.classifiers.trees.RandomForest",
522:       "weka.attributeSelection.CorrelationAttributeEval",
523:       "weka.estimators.NormalEstimator",
524:       "weka.estimators.MahalanobisEstimator",
525:       "weka.classifiers.meta.LogitBoost",
526:       "weka.core.MinkowskiDistance",
527:       "weka.core.ChebyshevDistance",
528:       "weka.classifiers.meta.CVParameterSelection",
529:       "weka.core.Javadoc",
530:       "weka.core.GlobalInfoJavadoc",
531:       "weka.clusterers.AbstractDensityBasedClusterer",
532:       "weka.clusterers.MakeDensityBasedClusterer",
533:       "weka.attributeSelection.GainRatioAttributeEval",
534:       "weka.classifiers.rules.JRip",
535:       "weka.classifiers.functions.SGDText",
536:       "weka.classifiers.functions.supportVector.RBFKernel",
537:       "weka.classifiers.trees.j48.ClassifierTree",
538:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
539:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
540:       "weka.classifiers.rules.OneR$OneRRule",
541:       "weka.classifiers.rules.PART",
542:       "weka.classifiers.rules.part.MakeDecList",
543:       "weka.classifiers.evaluation.ThresholdCurve",
544:       "weka.core.Capabilities$Capability",
545:       "weka.classifiers.evaluation.NominalPrediction",
546:       "weka.classifiers.evaluation.Prediction"
547:     );
548:   }
549: }

[MASTER] 04:00:15.677 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate(" ");
Evaluation evaluation0 = new Evaluation(instances0);
J48 j48_0 = new J48();
String string0 = evaluation0.toClassDetailsString(".bsi");
assertEquals(".bsi\n                 TP Rate  FP Rate  Precision  Recall  F-Measure  MCC    ROC Area  PRC Area  Class\n                 0        0        0          0       0          0     ?         ?         class1\n                 0        0        0          0       0          0     ?         ?         class2\nWeighted Avg.  NaN      NaN      NaN        NaN     NaN        NaN    NaN       NaN    \n", string0);

Evaluation evaluation1 = new Evaluation(instances0);
evaluation0.weightedAreaUnderROC();
double double0 = evaluation1.m_SumSqrErr;
assertNotEquals(double0, double1, 0.01);


[MASTER] 04:00:17.753 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 04:00:17.984 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 04:00:17.985 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 04:00:19.135 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/mosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18383
* Connecting to master process on port 18382
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 04:01:21.370 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 04:01:21.375 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 04:01:21.387 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 04:01:21.437 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:01:21.457 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:01:21.458 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 04:01:23.700 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:01:23.727 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:01:23.728 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1412
* Using seed 1018
* Starting evolution
[MASTER] 04:01:25.393 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 04:01:25.806 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 04:01:25.808 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 04:01:26.195 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 04:01:26.196 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2767
* Using seed 1018
* Starting evolution
[MASTER] 04:01:28.811 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I3 Branch 48 IFNONNULL L828 - true
[MASTER] 04:01:28.814 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z:False
[MASTER] 04:01:28.814 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z
[MASTER] 04:01:28.816 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z
[MASTER] 04:01:28.816 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getUseWordFrequencies()Z
[MASTER] 04:01:28.816 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I3 Branch 48 IFNONNULL L828 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStopwords(Ljava/io/File;)V
[MASTER] 04:01:28.985 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.<init>(Lweka/classifiers/rules/JRip;)V
[MASTER] 04:01:29.136 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NominalAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 04:01:30.103 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I34 Branch 49 IFEQ L832 - true
[MASTER] 04:01:30.105 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I34 Branch 49 IFEQ L832 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStopwords(Ljava/io/File;)V
[MASTER] 04:01:55.061 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 04:02:31.757 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 123s and 229 generations, 87276 statements, best individual has fitness: 1424.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 91%
* Total number of goals: 338
* Number of covered goals: 308
* Coverage analysis for criterion BRANCH
* Search finished after 123s and 198 generations, 82249 statements, best individual has fitness: 12736.0
* Coverage of criterion BRANCH: 85%
* Total number of goals: 194
* Number of covered goals: 165
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 476
* Number of covered goals: 443
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 112
* Number of covered goals: 57
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 84%
* Total number of goals: 194
* Number of covered goals: 163
* Generated 78 tests with total length 572
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 36%
* Total number of goals: 705
* Number of covered goals: 252
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 108
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 54%
* Total number of goals: 993
* Number of covered goals: 540
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 31%
* Total number of goals: 93
* Number of covered goals: 29
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 108
* Generated 72 tests with total length 539
* Resulting test suite's coverage: 43% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 24%
* Compiling and checking tests
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/mosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 57%
* Compiling and checking tests
[MASTER] 04:06:32.279 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_55_1575518792260/weka/classifiers/bayes/NaiveBayesMultinomialText_55_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_55_1575518792260/weka/classifiers/bayes/NaiveBayesMultinomialText_55_tmp__ESTest_scaffolding.java]]
[MASTER] 04:06:32.279 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:06:32.279 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:06:32.282 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   variable stringArray1
  location: class weka.classifiers.bayes.NaiveBayesMultinomialText_55_tmp__ESTest: 30
[MASTER] 04:06:32.282 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_55_1575518792260/weka/classifiers/bayes/NaiveBayesMultinomialText_55_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 04:06:32 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import org.evosuite.runtime.EvoRunner;
11: import org.evosuite.runtime.EvoRunnerParameters;
12: import org.evosuite.runtime.testdata.FileSystemHandling;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: 
16: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
17: public class NaiveBayesMultinomialText_55_tmp__ESTest extends NaiveBayesMultinomialText_55_tmp__ESTest_scaffolding {
18: 
19:   /**
20:   //Test case number: 0
21:   /*Coverage entropy=2.711395681466945
22:   */
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
26:       naiveBayesMultinomialText0.m_stemmer = null;
27:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
28:       naiveBayesMultinomialText0.getOptions();
29:       String[] stringArray0 = new String[0];
30:       assertFalse(stringArray0.equals((Object)stringArray1));
31:   }
32: }
RegularFileObject[/tmp/EvoSuite_55_1575518792260/weka/classifiers/bayes/NaiveBayesMultinomialText_55_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 04:06:32 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_55_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_55_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "org.pentaho.packageManagement.DefaultPackageManager",
104:       "org.bounce.net.DefaultAuthenticator",
105:       "weka.estimators.IncrementalEstimator",
106:       "weka.estimators.Estimator$Builder",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.EnvironmentHandler",
109:       "weka.core.Utils",
110:       "weka.core.CustomDisplayStringProvider",
111:       "weka.core.tokenizers.Tokenizer",
112:       "weka.core.NormalizableDistance",
113:       "weka.core.NoSupportForMissingValuesException",
114:       "weka.classifiers.UpdateableClassifier",
115:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
116:       "weka.core.TechnicalInformation$Type",
117:       "weka.core.MultiInstanceCapabilitiesHandler",
118:       "weka.core.Copyable",
119:       "weka.core.Capabilities",
120:       "weka.core.BinarySparseInstance",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
122:       "weka.core.SerializedObject",
123:       "weka.clusterers.UpdateableClusterer",
124:       "weka.core.Summarizable",
125:       "weka.core.AdditionalMeasureProducer",
126:       "org.pentaho.packageManagement.PackageManager$1",
127:       "weka.core.Drawable",
128:       "weka.core.matrix.Matrix",
129:       "weka.core.CapabilitiesHandler",
130:       "weka.attributeSelection.ASEvaluation",
131:       "weka.core.AbstractInstance",
132:       "weka.core.scripting.JythonObject",
133:       "weka.core.SelectedTag",
134:       "org.pentaho.packageManagement.DefaultPackage",
135:       "weka.classifiers.bayes.BayesNet",
136:       "weka.classifiers.misc.InputMappedClassifier",
137:       "weka.core.Version",
138:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
139:       "weka.core.Tag",
140:       "weka.classifiers.AbstractClassifier",
141:       "weka.filters.unsupervised.attribute.Center",
142:       "weka.core.OptionHandler",
143:       "weka.core.WekaException",
144:       "weka.filters.StreamableFilter",
145:       "weka.core.Range",
146:       "weka.core.scripting.JythonSerializableObject",
147:       "weka.classifiers.Classifier",
148:       "weka.core.Capabilities$Capability",
149:       "weka.core.SparseInstance",
150:       "org.pentaho.packageManagement.PackageManager",
151:       "weka.attributeSelection.AttributeTransformer",
152:       "weka.core.tokenizers.WordTokenizer",
153:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
154:       "weka.attributeSelection.PrincipalComponents",
155:       "weka.core.stemmers.SnowballStemmer",
156:       "weka.classifiers.Evaluation",
157:       "weka.classifiers.functions.supportVector.Kernel",
158:       "weka.core.WekaPackageManager",
159:       "weka.filters.SupervisedFilter",
160:       "weka.core.TechnicalInformationHandler",
161:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
162:       "weka.core.neighboursearch.LinearNNSearch",
163:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
164:       "weka.core.Option",
165:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
166:       "weka.core.neighboursearch.PerformanceStats",
167:       "weka.estimators.KernelEstimator",
168:       "weka.filters.Sourcable",
169:       "weka.core.Attribute",
170:       "weka.core.Stopwords",
171:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
172:       "weka.core.FastVector",
173:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
174:       "weka.core.UnassignedDatasetException",
175:       "weka.classifiers.SingleClassifierEnhancer",
176:       "weka.core.RevisionUtils",
177:       "weka.core.Instance",
178:       "weka.estimators.Estimator",
179:       "weka.core.ProtectedProperties",
180:       "weka.classifiers.bayes.net.ADNode",
181:       "weka.core.AttributeStats",
182:       "weka.core.WeightedInstancesHandler",
183:       "weka.core.neighboursearch.NearestNeighbourSearch",
184:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
185:       "weka.core.TechnicalInformation$Field",
186:       "weka.filters.unsupervised.attribute.Remove",
187:       "weka.core.EuclideanDistance",
188:       "weka.core.Instances",
189:       "weka.classifiers.bayes.NaiveBayesMultinomial",
190:       "weka.core.UnassignedClassException",
191:       "weka.classifiers.bayes.net.BIFReader",
192:       "weka.classifiers.bayes.net.ParentSet",
193:       "weka.classifiers.rules.ZeroR",
194:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
195:       "weka.filters.unsupervised.attribute.Standardize",
196:       "weka.core.TechnicalInformation",
197:       "weka.core.UnsupportedAttributeTypeException",
198:       "weka.classifiers.Sourcable",
199:       "weka.core.RevisionHandler",
200:       "weka.classifiers.evaluation.output.prediction.PlainText",
201:       "weka.core.xml.XMLSerialization",
202:       "weka.classifiers.xml.XMLClassifier",
203:       "weka.filters.Filter",
204:       "weka.classifiers.lazy.IBk",
205:       "weka.filters.supervised.attribute.Discretize"
206:     );
207:   } 
208: 
209:   private static void resetClasses() {
210:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_55_tmp__ESTest_scaffolding.class.getClassLoader()); 
211: 
212:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
213:       "weka.classifiers.AbstractClassifier",
214:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
215:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
216:       "weka.core.Capabilities$Capability",
217:       "weka.core.tokenizers.Tokenizer",
218:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
219:       "weka.core.tokenizers.WordTokenizer",
220:       "weka.core.stemmers.NullStemmer",
221:       "weka.classifiers.Evaluation",
222:       "weka.core.Utils",
223:       "weka.core.Option",
224:       "weka.core.Instances",
225:       "weka.core.converters.ArffLoader$ArffReader",
226:       "weka.core.AbstractInstance",
227:       "weka.core.SparseInstance",
228:       "weka.core.BinarySparseInstance",
229:       "weka.core.UnassignedDatasetException",
230:       "weka.classifiers.bayes.NaiveBayes",
231:       "weka.core.TechnicalInformation",
232:       "weka.core.TechnicalInformation$Type",
233:       "weka.core.TechnicalInformation$Field",
234:       "weka.core.Tag",
235:       "weka.classifiers.functions.SMO",
236:       "weka.classifiers.functions.supportVector.Kernel",
237:       "weka.classifiers.functions.supportVector.CachedKernel",
238:       "weka.classifiers.functions.supportVector.PolyKernel",
239:       "weka.core.SerializedObject",
240:       "weka.core.Capabilities",
241:       "org.pentaho.packageManagement.PackageManager",
242:       "org.pentaho.packageManagement.DefaultPackageManager",
243:       "weka.core.Version",
244:       "weka.core.Environment",
245:       "weka.core.WekaPackageManager",
246:       "weka.core.neighboursearch.NearestNeighbourSearch",
247:       "weka.core.neighboursearch.CoverTree",
248:       "weka.core.NormalizableDistance",
249:       "weka.core.EuclideanDistance",
250:       "weka.core.Range",
251:       "weka.classifiers.bayes.BayesNet",
252:       "weka.classifiers.bayes.net.BIFReader",
253:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
254:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
255:       "weka.classifiers.bayes.net.search.local.K2",
256:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
257:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
258:       "weka.core.RevisionUtils",
259:       "weka.core.TestInstances",
260:       "weka.core.tokenizers.NGramTokenizer",
261:       "weka.classifiers.RandomizableClassifier",
262:       "weka.classifiers.functions.SGDText",
263:       "weka.core.Attribute",
264:       "weka.core.ProtectedProperties",
265:       "weka.core.DenseInstance",
266:       "weka.core.neighboursearch.balltrees.BallNode",
267:       "weka.classifiers.lazy.IBk",
268:       "weka.core.neighboursearch.LinearNNSearch",
269:       "weka.core.neighboursearch.BallTree",
270:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
271:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
272:       "weka.core.neighboursearch.balltrees.BallSplitter",
273:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
274:       "weka.classifiers.SingleClassifierEnhancer",
275:       "weka.classifiers.misc.InputMappedClassifier",
276:       "weka.classifiers.rules.ZeroR",
277:       "weka.core.FindWithCapabilities",
278:       "weka.core.SingleIndex",
279:       "weka.core.stemmers.SnowballStemmer",
280:       "weka.classifiers.misc.SerializedClassifier",
281:       "weka.attributeSelection.ASEvaluation",
282:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
283:       "weka.attributeSelection.PrincipalComponents",
284:       "weka.classifiers.functions.LinearRegression",
285:       "weka.core.Stopwords",
286:       "weka.core.neighboursearch.KDTree",
287:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
288:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
289:       "weka.classifiers.bayes.NaiveBayesMultinomial",
290:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
291:       "weka.core.stemmers.LovinsStemmer",
292:       "weka.filters.Filter",
293:       "weka.filters.supervised.attribute.Discretize",
294:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
295:       "weka.classifiers.rules.OneR",
296:       "weka.estimators.Estimator",
297:       "weka.estimators.DiscreteEstimator",
298:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
299:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
300:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
301:       "weka.classifiers.meta.CostSensitiveClassifier",
302:       "weka.classifiers.CostMatrix",
303:       "weka.attributeSelection.WrapperSubsetEval",
304:       "weka.classifiers.trees.RandomTree",
305:       "weka.estimators.PoissonEstimator",
306:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
307:       "weka.classifiers.bayes.NaiveBayesUpdateable",
308:       "weka.core.WekaException",
309:       "weka.core.UnsupportedAttributeTypeException",
310:       "weka.core.WekaEnumeration",
311:       "weka.core.Attribute$1",
312:       "weka.attributeSelection.CfsSubsetEval",
313:       "weka.core.tokenizers.AlphabeticTokenizer",
314:       "weka.classifiers.functions.supportVector.RBFKernel",
315:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
316:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
317:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
318:       "weka.classifiers.trees.J48",
319:       "weka.classifiers.trees.j48.ClassifierTree",
320:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
321:       "weka.classifiers.functions.SimpleLinearRegression",
322:       "weka.attributeSelection.InfoGainAttributeEval",
323:       "weka.classifiers.lazy.LWL",
324:       "weka.classifiers.trees.DecisionStump",
325:       "weka.classifiers.meta.ClassificationViaRegression",
326:       "weka.classifiers.trees.m5.M5Base",
327:       "weka.classifiers.trees.M5P",
328:       "weka.core.stemmers.IteratedLovinsStemmer",
329:       "weka.core.UnassignedClassException",
330:       "weka.classifiers.rules.M5Rules",
331:       "weka.classifiers.trees.LMT",
332:       "weka.estimators.KernelEstimator",
333:       "weka.attributeSelection.GainRatioAttributeEval",
334:       "weka.classifiers.trees.RandomForest",
335:       "weka.filters.SimpleFilter",
336:       "weka.filters.SimpleStreamFilter",
337:       "weka.filters.MultiFilter",
338:       "weka.filters.AllFilter",
339:       "weka.classifiers.meta.CVParameterSelection",
340:       "weka.core.FastVector",
341:       "weka.classifiers.MultipleClassifiersCombiner",
342:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
343:       "weka.classifiers.meta.Vote",
344:       "weka.classifiers.IteratedSingleClassifierEnhancer",
345:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
346:       "weka.classifiers.meta.LogitBoost",
347:       "weka.classifiers.rules.JRip",
348:       "weka.classifiers.meta.AdaBoostM1",
349:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
350:       "weka.core.MinkowskiDistance",
351:       "weka.classifiers.functions.Logistic",
352:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
353:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
354:       "weka.classifiers.meta.Stacking",
355:       "weka.classifiers.meta.AdditiveRegression",
356:       "weka.core.matrix.Matrix",
357:       "weka.estimators.MahalanobisEstimator",
358:       "weka.classifiers.rules.DecisionTable",
359:       "weka.attributeSelection.ASSearch",
360:       "weka.attributeSelection.BestFirst",
361:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
362:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
363:       "weka.classifiers.meta.Bagging",
364:       "weka.classifiers.trees.REPTree",
365:       "weka.classifiers.meta.FilteredClassifier",
366:       "weka.filters.supervised.attribute.AttributeSelection",
367:       "weka.attributeSelection.AttributeSelection",
368:       "weka.attributeSelection.GreedyStepwise",
369:       "weka.classifiers.functions.VotedPerceptron",
370:       "weka.classifiers.functions.GaussianProcesses",
371:       "weka.core.Queue",
372:       "weka.core.AttributeLocator",
373:       "weka.core.StringLocator",
374:       "weka.core.RelationalLocator",
375:       "weka.classifiers.meta.RegressionByDiscretization",
376:       "weka.filters.unsupervised.attribute.Discretize",
377:       "weka.attributeSelection.OneRAttributeEval",
378:       "weka.classifiers.meta.MultiScheme",
379:       "weka.classifiers.functions.supportVector.StringKernel",
380:       "weka.classifiers.rules.OneR$OneRRule",
381:       "weka.classifiers.functions.SimpleLogistic",
382:       "weka.classifiers.functions.MultilayerPerceptron",
383:       "weka.filters.unsupervised.attribute.NominalToBinary",
384:       "weka.classifiers.functions.neural.SigmoidUnit",
385:       "weka.classifiers.functions.neural.LinearUnit",
386:       "weka.classifiers.rules.PART",
387:       "weka.estimators.NormalEstimator",
388:       "weka.classifiers.functions.SMOreg",
389:       "weka.classifiers.functions.supportVector.RegOptimizer",
390:       "weka.classifiers.functions.supportVector.RegSMO",
391:       "weka.classifiers.functions.supportVector.RegSMOImproved",
392:       "weka.classifiers.functions.SGD",
393:       "weka.attributeSelection.CorrelationAttributeEval",
394:       "weka.classifiers.meta.RandomCommittee",
395:       "weka.core.ClassDiscovery",
396:       "weka.core.AttributeStats",
397:       "weka.classifiers.rules.part.MakeDecList",
398:       "weka.core.stemmers.Stemming",
399:       "weka.classifiers.meta.AttributeSelectedClassifier",
400:       "weka.attributeSelection.ReliefFAttributeEval",
401:       "weka.classifiers.lazy.KStar",
402:       "weka.core.Check",
403:       "weka.core.CheckGOE",
404:       "weka.classifiers.meta.MultiClassClassifier",
405:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
406:       "weka.core.SelectedTag",
407:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
408:       "weka.classifiers.functions.supportVector.Puk",
409:       "weka.core.ChebyshevDistance"
410:     );
411:   }
412: }

[MASTER] 04:06:32.282 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_stemmer = null;
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
naiveBayesMultinomialText0.getOptions();
String[] stringArray0 = new String[0];
assertFalse(stringArray0.equals((Object)stringArray1));


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/mosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18381
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18389
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Total number of test goals for MOSA: 1367
* Using seed 1018
* Starting evolution
[MASTER] 04:11:59.359 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:11:59.377 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:11:59.377 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 04:11:59.441 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2699
* Using seed 1018
* Starting evolution
* Search finished after 124s and 163 generations, 80002 statements, best individual has fitness: 2832.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 217
* Number of covered goals: 190
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 65%
* Total number of goals: 428
* Number of covered goals: 280
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 239
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 65%
* Total number of goals: 428
* Number of covered goals: 280
* Generated 76 tests with total length 213
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 136s and 33 generations, 24570 statements, best individual has fitness: 2400.0
[MASTER] 04:14:19.135 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 18 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 96%
* Total number of goals: 647
* Number of covered goals: 618
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 441
* Number of covered goals: 413
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 678
* Number of covered goals: 620
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 244
* Number of covered goals: 104
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 90%
* Total number of goals: 441
* Number of covered goals: 398
* Resulting test suite's mutation score: 76%
* Compiling and checking tests
* Generated 200 tests with total length 2055
* Resulting test suite's coverage: 89% (average coverage for all fitness functions)
* Generating assertions
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/mosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 31%
[MASTER] 04:22:27.417 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/mosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
