* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11928
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11929
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1367
* Using seed 1023
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 07:22:14.076 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 07:22:14.078 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 07:22:14.078 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 07:22:14.128 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2699
* Using seed 1023
* Starting evolution
* Search finished after 123s and 168 generations, 77652 statements, best individual has fitness: 2680.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 217
* Number of covered goals: 189
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 68%
* Total number of goals: 428
* Number of covered goals: 291
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 239
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 68%
* Total number of goals: 428
* Number of covered goals: 289
* Generated 80 tests with total length 225
* Resulting test suite's coverage: 76% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 138s and 42 generations, 31507 statements, best individual has fitness: 1912.0
[MASTER] 07:24:36.697 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 21 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 647
* Number of covered goals: 635
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 97%
* Total number of goals: 441
* Number of covered goals: 427
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 94%
* Total number of goals: 678
* Number of covered goals: 635
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 45%
* Total number of goals: 244
* Number of covered goals: 110
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 92%
* Total number of goals: 441
* Number of covered goals: 407
* Generated 219 tests with total length 2228
* Resulting test suite's coverage: 91% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 76%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/mosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 07:30:04.444 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6667166666666666% of time used, but only 94/219 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 25%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/mosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11927
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11925
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11928
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 07:38:04.903 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 07:38:04.916 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 07:38:04.916 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 07:38:05.076 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 07:38:05.105 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 07:38:05.110 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1729
* Using seed 1023
* Starting evolution
[MASTER] 07:38:07.895 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 07:38:07.902 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 07:38:07.903 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 07:38:09.337 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 07:38:09.870 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 07:38:09.883 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2767
* Using seed 1023
* Starting evolution
[MASTER] 07:38:13.294 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.<init>(Lweka/classifiers/rules/JRip;)V
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 07:38:22.783 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 07:38:22.787 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 07:38:22.789 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 07:38:23.229 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 07:38:23.706 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 07:38:23.707 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 07:38:24.891 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 07:38:24.922 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 07:38:24.922 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 07:38:24.922 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 07:38:24.922 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 07:38:24.923 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 07:38:24.923 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 07:38:24.923 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 07:38:24.924 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 07:38:24.960 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 07:38:24.970 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 3904
* Using seed 1023
* Starting evolution
[MASTER] 07:38:31.264 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 07:38:39.377 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 07:39:00.514 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 07:39:54.241 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.computeDefAccu(Lweka/core/Instances;)D: Line 1186
[MASTER] 07:39:54.241 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V: Line 1207
[MASTER] 07:39:54.241 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V: Line 1210
[MASTER] 07:39:54.241 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V: Line 1211
[MASTER] 07:39:54.241 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V: Line 1213
[MASTER] 07:39:54.242 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V: Line 1216
[MASTER] 07:39:54.242 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V: Line 1227
[MASTER] 07:39:54.242 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V: Line 1296
[MASTER] 07:39:54.242 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.computeDefAccu(Lweka/core/Instances;)D: I12 Branch 114 IF_ICMPGE L1181 - true
[MASTER] 07:39:54.242 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.computeDefAccu(Lweka/core/Instances;)D: I27 Branch 115 IF_ICMPNE L1183 - true
[MASTER] 07:39:54.242 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V: I75 Branch 118 IF_ICMPGE L1211 - true
[MASTER] 07:39:54.242 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V: I100 Branch 119 IF_ICMPGE L1216 - true
[MASTER] 07:39:54.242 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V: I137 Branch 121 IFEQ L1227 - false
[MASTER] 07:39:54.242 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V: I139 Branch 122 IFLE L1227 - true
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 463: weka.classifiers.rules.JRip$RipperRule.computeDefAccu(Lweka/core/Instances;)D:1181 - ReplaceComparisonOperator >= -> >
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 468: weka.classifiers.rules.JRip$RipperRule.computeDefAccu(Lweka/core/Instances;)D:1183 - InsertUnaryOp Negation
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 471: weka.classifiers.rules.JRip$RipperRule.computeDefAccu(Lweka/core/Instances;)D:1183 - ReplaceComparisonOperator != -> >
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 477: weka.classifiers.rules.JRip$RipperRule.computeDefAccu(Lweka/core/Instances;)D:1186 - InsertUnaryOp Negation of defAccu
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 492: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1207 - ReplaceVariable defAccu -> sumOfWeights
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 493: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1207 - InsertUnaryOp Negation of defAccu
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 494: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1207 - ReplaceConstant - 1.0 -> 0.0
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 495: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1207 - ReplaceConstant - 1.0 -> -1.0
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 496: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1207 - ReplaceConstant - 1.0 -> 2.0
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 497: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1207 - ReplaceArithmeticOperator + -> %
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 498: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1207 - ReplaceArithmeticOperator + -> -
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 499: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1207 - ReplaceArithmeticOperator + -> *
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 500: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1207 - ReplaceArithmeticOperator + -> /
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 501: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1207 - ReplaceVariable sumOfWeights -> defAccu
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 502: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1207 - InsertUnaryOp Negation of sumOfWeights
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 503: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1207 - ReplaceConstant - 1.0 -> 0.0
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 504: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1207 - ReplaceConstant - 1.0 -> -1.0
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 505: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1207 - ReplaceConstant - 1.0 -> 2.0
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 506: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1207 - ReplaceArithmeticOperator + -> %
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 507: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1207 - ReplaceArithmeticOperator + -> -
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 508: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1207 - ReplaceArithmeticOperator + -> *
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 509: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1207 - ReplaceArithmeticOperator + -> /
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 510: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1207 - ReplaceArithmeticOperator / -> +
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 511: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1207 - ReplaceArithmeticOperator / -> %
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 512: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1207 - ReplaceArithmeticOperator / -> -
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 513: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1207 - ReplaceArithmeticOperator / -> *
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 515: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1211 - ReplaceConstant - 0 -> 1
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 516: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1211 - InsertUnaryOp Negation of k
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 517: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1211 - InsertUnaryOp IINC 1 k
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 518: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1211 - InsertUnaryOp IINC -1 k
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 520: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1211 - ReplaceComparisonOperator >= -> >
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 526: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1216 - ReplaceConstant - 0 -> 1
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 528: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1216 - InsertUnaryOp Negation of j
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 529: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1216 - InsertUnaryOp IINC 1 j
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 530: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1216 - InsertUnaryOp IINC -1 j
[MASTER] 07:39:54.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 532: weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V:1216 - ReplaceComparisonOperator >= -> >
[MASTER] 07:39:54.245 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V: I100 Branch 119 IF_ICMPGE L1216 - true in context: weka.classifiers.rules.JRip$RipperRule:grow(Lweka/core/Instances;)V
[MASTER] 07:39:54.245 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$RipperRule.computeDefAccu(Lweka/core/Instances;)D: I27 Branch 115 IF_ICMPNE L1183 - true in context: 
[MASTER] 07:39:54.245 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V: I139 Branch 122 IFLE L1227 - true in context: weka.classifiers.rules.JRip$RipperRule:grow(Lweka/core/Instances;)V
[MASTER] 07:39:54.245 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V: I137 Branch 121 IFEQ L1227 - false in context: weka.classifiers.rules.JRip$RipperRule:grow(Lweka/core/Instances;)V
[MASTER] 07:39:54.245 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$RipperRule.computeDefAccu(Lweka/core/Instances;)D: I12 Branch 114 IF_ICMPGE L1181 - true in context: 
[MASTER] 07:39:54.246 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$RipperRule.grow(Lweka/core/Instances;)V: I75 Branch 118 IF_ICMPGE L1211 - true in context: weka.classifiers.rules.JRip$RipperRule:grow(Lweka/core/Instances;)V
* Search finished after 121s and 305 generations, 85418 statements, best individual has fitness: 7904.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 45%
* Total number of goals: 370
* Number of covered goals: 166
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 42%
* Total number of goals: 713
* Number of covered goals: 298
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 46%
* Total number of goals: 72
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 45
* Number of covered goals: 44
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Generated 65 tests with total length 244
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 07:40:12.558 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.computeDefAccu(Lweka/core/Instances;)D: Line 1184
[MASTER] 07:40:12.558 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.computeDefAccu(Lweka/core/Instances;)D: I27 Branch 115 IF_ICMPNE L1183 - false
[MASTER] 07:40:12.560 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 469: weka.classifiers.rules.JRip$RipperRule.computeDefAccu(Lweka/core/Instances;)D:1183 - ReplaceComparisonOperator != -> -1
[MASTER] 07:40:12.560 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 472: weka.classifiers.rules.JRip$RipperRule.computeDefAccu(Lweka/core/Instances;)D:1184 - InsertUnaryOp Negation of defAccu
[MASTER] 07:40:12.560 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 473: weka.classifiers.rules.JRip$RipperRule.computeDefAccu(Lweka/core/Instances;)D:1184 - ReplaceArithmeticOperator + -> %
[MASTER] 07:40:12.560 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 474: weka.classifiers.rules.JRip$RipperRule.computeDefAccu(Lweka/core/Instances;)D:1184 - ReplaceArithmeticOperator + -> -
[MASTER] 07:40:12.560 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 475: weka.classifiers.rules.JRip$RipperRule.computeDefAccu(Lweka/core/Instances;)D:1184 - ReplaceArithmeticOperator + -> *
[MASTER] 07:40:12.560 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 476: weka.classifiers.rules.JRip$RipperRule.computeDefAccu(Lweka/core/Instances;)D:1184 - ReplaceArithmeticOperator + -> /
[MASTER] 07:40:12.566 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$RipperRule.computeDefAccu(Lweka/core/Instances;)D: I27 Branch 115 IF_ICMPNE L1183 - false in context: 
* Search finished after 122s and 175 generations, 64993 statements, best individual has fitness: 12376.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 35%
* Total number of goals: 705
* Number of covered goals: 247
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 107
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 53%
* Total number of goals: 993
* Number of covered goals: 526
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 28%
* Total number of goals: 93
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 107
* Generated 66 tests with total length 539
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 127s and 74 generations, 32305 statements, best individual has fitness: 14816.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 61%
* Total number of goals: 1378
* Number of covered goals: 843
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 44%
* Total number of goals: 809
* Number of covered goals: 356
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 67
* Number of covered goals: 67
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 64%
* Total number of goals: 424
* Number of covered goals: 270
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 19%
* Total number of goals: 278
* Number of covered goals: 53
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 103
* Number of covered goals: 102
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 94%
* Total number of goals: 103
* Number of covered goals: 97
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 42%
* Total number of goals: 809
* Number of covered goals: 343
* Generated 134 tests with total length 1382
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
[MASTER] 07:40:59.250 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 07:40:59.979 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/mosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/mosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
[MASTER] 07:44:45.999 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 07:44:46.444 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 07:44:46.444 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 07:44:47.503 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/mosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11926
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 07:45:50.506 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 07:45:50.506 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 07:45:50.536 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 07:45:50.621 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 07:45:50.623 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 07:45:50.624 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1412
* Using seed 1023
* Starting evolution
[MASTER] 07:45:55.838 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 07:45:55.840 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 07:45:56.828 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V: Line 525
[MASTER] 07:45:56.829 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V: I3 Branch 47 IFNULL L524 - false
[MASTER] 07:45:56.833 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 240: weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V:525 - ReplaceVariable value -> m_stemmer
[MASTER] 07:45:56.834 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V
[MASTER] 07:45:56.835 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V
[MASTER] 07:45:56.835 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V: I3 Branch 47 IFNULL L524 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStemmer(Lweka/core/stemmers/Stemmer;)V
[MASTER] 07:46:15.962 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 124s and 188 generations, 81376 statements, best individual has fitness: 1504.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 91%
* Total number of goals: 338
* Number of covered goals: 306
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 84%
* Total number of goals: 194
* Number of covered goals: 162
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 476
* Number of covered goals: 441
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 60
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 194
* Number of covered goals: 159
* Generated 80 tests with total length 584
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 56%
* Compiling and checking tests
[MASTER] 07:50:49.759 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_16_1575532249737/weka/classifiers/bayes/NaiveBayesMultinomialText_16_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_16_1575532249737/weka/classifiers/bayes/NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding.java]]
[MASTER] 07:50:49.759 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 07:50:49.759 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 07:50:49.762 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 07:50:49.762 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 07:50:49.762 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_16_1575532249737/weka/classifiers/bayes/NaiveBayesMultinomialText_16_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Dec 05 07:50:49 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.io.File;
12: import java.util.LinkedHashMap;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_16_tmp__ESTest extends NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=1.5271837172395382
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       double[] doubleArray0 = new double[9];
29:       doubleArray0[0] = 406.5517699;
30:       doubleArray0[1] = 406.5517699;
31:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
32:       doubleArray0[2] = 0.693147181;
33:       doubleArray0[3] = 2028.835;
34:       doubleArray0[4] = 1747.326234;
35:       doubleArray0[5] = (-472.92);
36:       doubleArray0[6] = 2112.0208318385744;
37:       naiveBayesMultinomialText0.setMinWordFrequency(0.693147181);
38:       naiveBayesMultinomialText0.m_probOfClass = doubleArray0;
39:       // Undeclared exception!
40:       try { 
41:         naiveBayesMultinomialText0.toString();
42:         fail("Expecting exception: NullPointerException");
43:       
44:       } catch(NullPointerException e) {
45:          //
46:          // no message in exception (getMessage() returned null)
47:          //
48:          verifyException("weka.classifiers.bayes.NaiveBayesMultinomialText", e);
49:       }
50:   }
51: }
RegularFileObject[/tmp/EvoSuite_16_1575532249737/weka/classifiers/bayes/NaiveBayesMultinomialText_16_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Dec 05 07:50:49 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.classifiers.AbstractClassifier",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "weka.core.FindWithCapabilities",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.OptionHandler",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.core.WekaException",
97:       "weka.filters.StreamableFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.Classifier",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.Capabilities$Capability",
102:       "weka.core.DenseInstance",
103:       "weka.core.SparseInstance",
104:       "org.pentaho.packageManagement.PackageManager",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.core.tokenizers.WordTokenizer",
107:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
108:       "org.pentaho.packageManagement.DefaultPackageManager",
109:       "weka.core.stemmers.SnowballStemmer",
110:       "weka.classifiers.Evaluation",
111:       "weka.classifiers.functions.supportVector.Kernel",
112:       "weka.core.WekaPackageManager",
113:       "org.bounce.net.DefaultAuthenticator",
114:       "weka.filters.SimpleFilter",
115:       "weka.filters.SimpleStreamFilter",
116:       "weka.estimators.IncrementalEstimator",
117:       "weka.estimators.Estimator$Builder",
118:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
119:       "weka.core.Option",
120:       "weka.core.stemmers.NullStemmer",
121:       "weka.core.EnvironmentHandler",
122:       "weka.core.RelationalLocator",
123:       "weka.estimators.KernelEstimator",
124:       "weka.filters.Sourcable",
125:       "weka.core.Utils",
126:       "weka.core.CustomDisplayStringProvider",
127:       "weka.core.tokenizers.Tokenizer",
128:       "weka.core.Attribute",
129:       "weka.core.NoSupportForMissingValuesException",
130:       "weka.core.Stopwords",
131:       "weka.classifiers.UpdateableClassifier",
132:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
133:       "weka.core.MultiInstanceCapabilitiesHandler",
134:       "weka.core.Copyable",
135:       "weka.core.Capabilities",
136:       "weka.core.BinarySparseInstance",
137:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
138:       "weka.core.AttributeLocator",
139:       "weka.core.UnassignedDatasetException",
140:       "weka.core.SerializedObject",
141:       "weka.clusterers.UpdateableClusterer",
142:       "weka.core.Summarizable",
143:       "weka.classifiers.SingleClassifierEnhancer",
144:       "weka.core.RevisionUtils",
145:       "weka.core.AdditionalMeasureProducer",
146:       "org.pentaho.packageManagement.PackageManager$1",
147:       "weka.core.Instance",
148:       "weka.core.Drawable",
149:       "weka.estimators.Estimator",
150:       "weka.core.ProtectedProperties",
151:       "weka.core.matrix.Matrix",
152:       "weka.core.StringLocator",
153:       "weka.core.AttributeStats",
154:       "weka.core.SingleIndex",
155:       "weka.filters.MultiFilter",
156:       "weka.core.WeightedInstancesHandler",
157:       "weka.core.CapabilitiesHandler",
158:       "weka.core.AbstractInstance",
159:       "weka.core.Instances",
160:       "org.pentaho.packageManagement.DefaultPackage",
161:       "weka.classifiers.misc.InputMappedClassifier",
162:       "weka.core.UnassignedClassException",
163:       "weka.classifiers.rules.ZeroR",
164:       "weka.core.Version",
165:       "weka.filters.AllFilter",
166:       "weka.core.UnsupportedAttributeTypeException",
167:       "weka.classifiers.Sourcable",
168:       "weka.core.RevisionHandler",
169:       "weka.classifiers.evaluation.output.prediction.PlainText",
170:       "weka.core.xml.XMLSerialization",
171:       "weka.classifiers.xml.XMLClassifier",
172:       "weka.filters.Filter"
173:     );
174:   } 
175: 
176:   private static void resetClasses() {
177:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding.class.getClassLoader()); 
178: 
179:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
180:       "weka.classifiers.AbstractClassifier",
181:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
182:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
183:       "weka.core.Capabilities$Capability",
184:       "weka.core.tokenizers.Tokenizer",
185:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
186:       "weka.core.tokenizers.WordTokenizer",
187:       "weka.core.stemmers.NullStemmer",
188:       "weka.core.Utils",
189:       "weka.core.AbstractInstance",
190:       "weka.core.SparseInstance",
191:       "weka.classifiers.Evaluation",
192:       "weka.core.Option",
193:       "weka.core.UnassignedDatasetException",
194:       "weka.core.stemmers.SnowballStemmer",
195:       "weka.core.BinarySparseInstance",
196:       "weka.core.SerializedObject",
197:       "weka.classifiers.RandomizableClassifier",
198:       "weka.core.Tag",
199:       "weka.classifiers.functions.SGDText",
200:       "weka.core.FindWithCapabilities",
201:       "weka.core.Capabilities",
202:       "org.pentaho.packageManagement.PackageManager",
203:       "org.pentaho.packageManagement.DefaultPackageManager",
204:       "weka.core.Version",
205:       "weka.core.Environment",
206:       "weka.core.WekaPackageManager",
207:       "weka.core.SingleIndex",
208:       "weka.classifiers.SingleClassifierEnhancer",
209:       "weka.classifiers.IteratedSingleClassifierEnhancer",
210:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
211:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
212:       "weka.classifiers.meta.Bagging",
213:       "weka.classifiers.rules.ZeroR",
214:       "weka.classifiers.trees.REPTree",
215:       "weka.core.Attribute",
216:       "weka.core.ProtectedProperties",
217:       "weka.core.RevisionUtils",
218:       "weka.classifiers.bayes.BayesNet",
219:       "weka.classifiers.bayes.net.BIFReader",
220:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
221:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
222:       "weka.classifiers.bayes.net.search.local.K2",
223:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
224:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
225:       "weka.classifiers.bayes.NaiveBayes",
226:       "weka.core.stemmers.LovinsStemmer",
227:       "weka.core.stemmers.IteratedLovinsStemmer",
228:       "weka.core.TechnicalInformation",
229:       "weka.core.TechnicalInformation$Type",
230:       "weka.core.TechnicalInformation$Field",
231:       "weka.core.tokenizers.NGramTokenizer",
232:       "weka.classifiers.misc.InputMappedClassifier",
233:       "weka.core.DenseInstance",
234:       "weka.classifiers.functions.supportVector.Kernel",
235:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
236:       "weka.filters.Filter",
237:       "weka.filters.supervised.attribute.Discretize",
238:       "weka.core.Range",
239:       "weka.classifiers.lazy.IBk",
240:       "weka.core.neighboursearch.NearestNeighbourSearch",
241:       "weka.core.neighboursearch.LinearNNSearch",
242:       "weka.core.NormalizableDistance",
243:       "weka.core.EuclideanDistance",
244:       "weka.core.TestInstances",
245:       "weka.attributeSelection.ASEvaluation",
246:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
247:       "weka.attributeSelection.PrincipalComponents",
248:       "weka.core.Instances",
249:       "weka.core.converters.ArffLoader$ArffReader",
250:       "weka.core.neighboursearch.CoverTree",
251:       "weka.core.Stopwords",
252:       "weka.core.neighboursearch.balltrees.BallNode",
253:       "weka.classifiers.misc.SerializedClassifier",
254:       "weka.core.neighboursearch.BallTree",
255:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
256:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
257:       "weka.core.neighboursearch.balltrees.BallSplitter",
258:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
259:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
260:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
261:       "weka.core.neighboursearch.KDTree",
262:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
263:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
264:       "weka.classifiers.rules.PART",
265:       "weka.classifiers.rules.part.MakeDecList",
266:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
267:       "weka.classifiers.meta.CostSensitiveClassifier",
268:       "weka.classifiers.CostMatrix",
269:       "weka.classifiers.lazy.LWL",
270:       "weka.classifiers.trees.DecisionStump",
271:       "weka.core.WekaEnumeration",
272:       "weka.core.Attribute$1",
273:       "weka.classifiers.functions.supportVector.CachedKernel",
274:       "weka.classifiers.functions.supportVector.Puk",
275:       "weka.core.WekaException",
276:       "weka.core.UnsupportedAttributeTypeException",
277:       "weka.classifiers.meta.AttributeSelectedClassifier",
278:       "weka.attributeSelection.CfsSubsetEval",
279:       "weka.attributeSelection.ASSearch",
280:       "weka.attributeSelection.BestFirst",
281:       "weka.classifiers.trees.J48",
282:       "weka.core.matrix.Matrix",
283:       "weka.core.Javadoc",
284:       "weka.core.OptionHandlerJavadoc",
285:       "weka.classifiers.meta.FilteredClassifier",
286:       "weka.filters.supervised.attribute.AttributeSelection",
287:       "weka.attributeSelection.AttributeSelection",
288:       "weka.attributeSelection.GreedyStepwise",
289:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
290:       "weka.estimators.Estimator",
291:       "weka.estimators.NormalEstimator",
292:       "weka.core.UnassignedClassException",
293:       "weka.attributeSelection.ReliefFAttributeEval",
294:       "weka.classifiers.functions.SimpleLinearRegression",
295:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
296:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
297:       "weka.filters.AllFilter",
298:       "weka.classifiers.trees.RandomForest",
299:       "weka.classifiers.trees.RandomTree",
300:       "weka.estimators.DiscreteEstimator",
301:       "weka.classifiers.functions.MultilayerPerceptron",
302:       "weka.core.FastVector",
303:       "weka.filters.unsupervised.attribute.NominalToBinary",
304:       "weka.classifiers.functions.neural.SigmoidUnit",
305:       "weka.classifiers.functions.neural.LinearUnit",
306:       "weka.classifiers.functions.VotedPerceptron",
307:       "weka.core.converters.ConverterUtils$DataSource",
308:       "weka.core.converters.AbstractLoader",
309:       "weka.core.converters.AbstractFileLoader",
310:       "weka.core.converters.ArffLoader",
311:       "weka.classifiers.functions.SMOreg",
312:       "weka.classifiers.functions.supportVector.RegOptimizer",
313:       "weka.classifiers.functions.supportVector.RegSMO",
314:       "weka.classifiers.functions.supportVector.RegSMOImproved",
315:       "weka.classifiers.functions.supportVector.PolyKernel",
316:       "weka.attributeSelection.CorrelationAttributeEval",
317:       "weka.estimators.PoissonEstimator",
318:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
319:       "weka.classifiers.functions.SMO",
320:       "weka.classifiers.functions.GaussianProcesses",
321:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
322:       "weka.classifiers.meta.AdditiveRegression",
323:       "weka.classifiers.bayes.NaiveBayesUpdateable",
324:       "weka.classifiers.trees.j48.ClassifierTree",
325:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
326:       "weka.attributeSelection.GainRatioAttributeEval",
327:       "weka.classifiers.MultipleClassifiersCombiner",
328:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
329:       "weka.classifiers.meta.MultiScheme",
330:       "weka.classifiers.functions.SimpleLogistic",
331:       "weka.classifiers.functions.Logistic",
332:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
333:       "weka.classifiers.meta.LogitBoost",
334:       "weka.classifiers.functions.supportVector.RBFKernel",
335:       "weka.classifiers.lazy.KStar",
336:       "weka.classifiers.functions.supportVector.StringKernel",
337:       "weka.classifiers.bayes.NaiveBayesMultinomial",
338:       "weka.classifiers.functions.LinearRegression",
339:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
340:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
341:       "weka.classifiers.meta.Stacking",
342:       "weka.core.SelectedTag",
343:       "weka.attributeSelection.WrapperSubsetEval",
344:       "weka.classifiers.meta.RegressionByDiscretization",
345:       "weka.filters.unsupervised.attribute.Discretize",
346:       "weka.classifiers.rules.DecisionTable",
347:       "weka.filters.SimpleFilter",
348:       "weka.filters.SimpleStreamFilter",
349:       "weka.filters.MultiFilter",
350:       "weka.core.ClassDiscovery",
351:       "weka.classifiers.meta.RandomCommittee",
352:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
353:       "weka.classifiers.meta.MultiClassClassifier",
354:       "weka.core.AttributeStats",
355:       "weka.experiment.Stats",
356:       "weka.estimators.MahalanobisEstimator",
357:       "weka.classifiers.functions.SGD",
358:       "weka.classifiers.meta.CVParameterSelection",
359:       "weka.classifiers.meta.ClassificationViaRegression",
360:       "weka.classifiers.trees.m5.M5Base",
361:       "weka.classifiers.trees.M5P",
362:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
363:       "weka.core.Check",
364:       "weka.core.CheckGOE",
365:       "weka.classifiers.rules.OneR",
366:       "weka.attributeSelection.InfoGainAttributeEval",
367:       "weka.classifiers.meta.AdaBoostM1",
368:       "weka.classifiers.rules.JRip",
369:       "weka.classifiers.trees.LMT",
370:       "weka.core.tokenizers.AlphabeticTokenizer",
371:       "weka.classifiers.rules.M5Rules",
372:       "weka.attributeSelection.OneRAttributeEval",
373:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
374:       "weka.estimators.KernelEstimator",
375:       "weka.classifiers.meta.Vote",
376:       "weka.core.ClassCache",
377:       "weka.core.AllJavadoc",
378:       "weka.core.ChebyshevDistance",
379:       "weka.core.stemmers.Stemming",
380:       "weka.classifiers.meta.CVParameterSelection$CVParameter",
381:       "weka.core.Queue",
382:       "weka.core.AttributeLocator",
383:       "weka.core.StringLocator",
384:       "weka.core.RelationalLocator",
385:       "weka.core.ContingencyTables",
386:       "weka.core.Queue$QueueNode"
387:     );
388:   }
389: }

[MASTER] 07:50:49.763 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
double[] doubleArray0 = new double[9];
doubleArray0[0] = 406.5517699;
doubleArray0[1] = 406.5517699;
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
doubleArray0[2] = 0.693147181;
doubleArray0[3] = 2028.835;
doubleArray0[4] = 1747.326234;
doubleArray0[5] = (-472.92);
doubleArray0[6] = 2112.0208318385744;
naiveBayesMultinomialText0.setMinWordFrequency(0.693147181);
naiveBayesMultinomialText0.m_probOfClass = doubleArray0;
naiveBayesMultinomialText0.toString();

[MASTER] 07:50:53.066 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 07:50:53.236 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 07:50:53.313 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
[MASTER] 07:50:53.893 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/mosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11928
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 07:52:00.653 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 07:52:00.655 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 07:52:00.659 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 07:52:00.671 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2499
* Using seed 1023
* Starting evolution
[MASTER] 07:52:03.816 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 122s and 104 generations, 75919 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 16 tests with total length 89
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/mosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
