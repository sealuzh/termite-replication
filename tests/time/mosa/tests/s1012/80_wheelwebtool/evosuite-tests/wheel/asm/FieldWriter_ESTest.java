/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 23:25:10 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3622914870858265
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      classWriter0.index = (-2476);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Va", "Va", "Va", "Va");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0108643020548935
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(42);
      classWriter0.index = (-893);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "9", "9", "9", "9");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4804779276453799
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(67);
      ClassWriter classWriter1 = new ClassWriter(1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter1, 65535, "\"t>;L&IWmf]Ckne8Qe", "float", "-,", (Object) null);
      fieldWriter0.visitEnd();
      classWriter1.version = 67;
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector(16);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(113);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "yO(h7N}D .w@", "yO(h7N}D .w@", "yO(h7N}D .w@", "yO(h7N}D .w@");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = 113;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0832409930999294
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "|Ocq", "|Ocq", "|Ocq", "|Ocq");
      Attribute attribute0 = new Attribute("yxR0!9e=k`l");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4486869174985209
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      ClassWriter classWriter1 = new ClassWriter(1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter1, 65535, "\"t>;L&IWmf]Ckne8Qe", "float", "-,", (Object) null);
      fieldWriter0.visitEnd();
      classWriter1.version = 49;
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector(16);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      ClassWriter classWriter1 = new ClassWriter(49);
      ClassWriter classWriter2 = new ClassWriter(1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter2, 65535, "\"t>;L&IWmf]Ckne8Qe", "-},", "-},", (Object) null);
      classWriter2.version = 49;
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.8945706855324711
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1119);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1119, "1", "1", "1", "1");
      fieldWriter0.visitAnnotation("1", false);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "E*", "E*", (String) null, (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "E*", "E*", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(31);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "RuntmuVisibleAnnotatins", "RuntmuVisibleAnnotatins", "RuntmuVisibleAnnotatins", "RuntmuVisibleAnnotatins");
      fieldWriter0.visitAnnotation("wheel.asm.MethodWriter", true);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1885));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1873), "cA}", "cA}", "cA}", "cA}");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(64);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(69);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "h(", "h(", "h(", "h(");
      fieldWriter0.visitAnnotation("h(", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 101, "M\"'", "M\"'", "M\"'", "M\"'");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(95);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Y*", "Y*", "Y*", "Y*");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 95, "Y*", "Y*", "Y*", "Y*");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "D", "D", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1374));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-241), "Deprecated", "Deprecated", "Deprecated", "Deprecated");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 64, (String) null, (String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(69);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "RunimuVisibleAnnotations", "RunimuVisibleAnnotations", "RunimuVisibleAnnotations", "RunimuVisibleAnnotations");
      fieldWriter0.visitAnnotation("RunimuVisibleAnnotations", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "org.apache.commons.io.filefilter.DelegateFileFilter", "org.apache.commons.io.filefilter.DelegateFileFilter", "N;", "org.apache.commons.io.filefilter.DelegateFileFilter");
      fieldWriter0.visitEnd();
      ByteVector byteVector0 = new ByteVector(2);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(120);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 120, "8#t@gj=)!rr8y-s*1Nh", "8#t@gj=)!rr8y-s*1Nh", "8#t@gj=)!rr8y-s*1Nh", "8#t@gj=)!rr8y-s*1Nh");
      Attribute attribute0 = new Attribute("8#t@gj=)!rr8y-s*1Nh");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.039435730626322
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(58);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      fieldWriter0.getSize();
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("RuntimeVisibleAnnotations", true);
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 7, "", "", "", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }
}
