/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 27 20:25:27 GMT 2020
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.850517756600938
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[1][0];
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      resultMatrixLatex0.setRowName(1, (String) null);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.698215536154871
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.getColOrder();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixGnuPlot0.assign(resultMatrixLatex0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.882005086088324
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML0.setStdDevPrec(427);
      int[][] intArray0 = new int[4][2];
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixGnuPlot0.getSignificance(428, 0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.338553017492444
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setEnumerateRowNames(true);
      resultMatrixPlainText0.LOSS_STRING = "r@{hspace{0cm}}c@{hspace{0cm}}r@{hspace{0.1cm}}c";
      resultMatrixPlainText0.getOptions();
      resultMatrixPlainText0.clear();
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.338553017492444
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1237);
      resultMatrixPlainText0.getOptions();
      // Undeclared exception!
      resultMatrixPlainText0.clear();
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.6023807799324836
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.toStringSummary();
      int[][] intArray0 = new int[4][2];
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixGnuPlot0.getEnumerateColNames();
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      double[][] doubleArray0 = new double[0][9];
      resultMatrixGnuPlot0.m_Mean = doubleArray0;
      resultMatrixGnuPlot0.setPrintColNames(false);
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.getColNameWidth();
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.729267023454784
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(2, 755);
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot2.setRowHidden(0, true);
      resultMatrixGnuPlot2.setSignificance(0, 2, 1);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.8842971182057475
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.setSize(8, 268);
      resultMatrixLatex0.clear();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.clear();
      resultMatrixCSV0.getMean(97, 0);
      // Undeclared exception!
      resultMatrixLatex0.toString();
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.1293640643828993
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 1);
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 1;
      resultMatrixPlainText0.setPrintRowNames(false);
      resultMatrixPlainText0.WIN_STRING = "Sum (ints): ";
      resultMatrixPlainText0.setColOrder(intArray0);
      resultMatrixPlainText0.padString("$uNDh", (-2176));
      String[] stringArray0 = new String[8];
      stringArray0[0] = " ";
      stringArray0[1] = "Sum (ints): ";
      stringArray0[2] = "Sum (ints): ";
      stringArray0[3] = "";
      stringArray0[4] = "Sum (ints): ";
      stringArray0[5] = "Sum (ints): ";
      stringArray0[6] = " ";
      stringArray0[7] = "Sum (ints): ";
      resultMatrixPlainText0.m_ColNames = stringArray0;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringKey();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.246601712090598
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.WIN_STRING = "";
      resultMatrixSignificance0.setOptions((String[]) null);
      resultMatrixSignificance0.isStdDev((-2276));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.3267266724865556
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1080, 1);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      // Undeclared exception!
      resultMatrixLatex0.toStringMatrix();
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.6163861423648545
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.getColName(901);
      int[][] intArray0 = new int[4][2];
      resultMatrixGnuPlot0.setRowHidden(1, true);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.8712010109078947
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toArray();
      resultMatrixPlainText0.clear();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 2);
      resultMatrixSignificance0.doubleToString(1, 2);
      resultMatrixSignificance0.showStdDevTipText();
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.758995095564264
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.doubleToString(1, 0);
      int[][] intArray0 = new int[3][2];
      resultMatrixHTML0.setRanking(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 40);
      resultMatrixLatex0.clear();
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.3710496373258434
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.padString("", 424);
      resultMatrixPlainText0.setRowNameWidth(293);
      resultMatrixPlainText0.getOptions();
      resultMatrixPlainText0.clear();
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(490, 9);
      // Undeclared exception!
      resultMatrixSignificance0.toStringRanking();
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.2016905606232253
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.clear();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 1);
      resultMatrixHTML0.toStringMatrix();
      resultMatrixPlainText0.getColHidden(1);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      int[][] intArray1 = new int[1][8];
      intArray1[0] = intArray0;
      resultMatrixGnuPlot0.getSummaryTitle((-318));
      resultMatrixGnuPlot0.setMean((-1230), 265, (-1.0));
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.236571964404091
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      resultMatrixPlainText0.clear();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.getRowCount();
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.padString((String) null, 1341);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.8322602295395347
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.setMeanWidth(1);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixGnuPlot0.addHeader("Sorted array (ints): ", (String) null);
      boolean boolean0 = true;
      resultMatrixSignificance0.setShowStdDev(true);
      resultMatrixGnuPlot0.countWidthTipText();
      int[][] intArrayArray0 = null;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.4801084376895295
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "v";
      stringArray0[1] = "*";
      stringArray0[2] = "";
      stringArray0[3] = " ";
      stringArray0[4] = "Xma/!RL<=+h'FIm{1";
      stringArray0[5] = "\tThe width of the counts (0 = optimal).\n\t(default: ";
      resultMatrixGnuPlot0.WIN_STRING = "%";
      stringArray0[6] = "v";
      resultMatrixHTML0.setOptions(stringArray0);
      int[][] intArray0 = new int[3][2];
      resultMatrixHTML0.toStringMatrix();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.787876228087596
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.isStdDev(0);
      resultMatrixLatex0.clear();
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.928332521116136
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 2);
      resultMatrixSignificance0.toStringKey();
      resultMatrixSignificance0.getAverage(0);
      resultMatrixSignificance0.isStdDev(2356);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.padString((String) null, 123, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.8733318766428066
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ResultMatrixHTML.main((String[]) null);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getPrintRowNames();
      resultMatrixGnuPlot0.setStdDev((-4127), (-4127), (-4127));
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.344639843260795
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setColNameWidth((-714));
      resultMatrixCSV0.getOptions();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 2);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.4381041822060796
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getOptions();
      resultMatrixPlainText0.clear();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.isSignificance(3);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.2958368660043296
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringKey();
      resultMatrixHTML0.setRowName((-1900), "hOmd%1poLs$");
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.825794590225879
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 2);
      resultMatrixHTML0.setMeanWidth((-95));
      resultMatrixSignificance0.toStringKey();
      resultMatrixHTML0.removeFilterName("v");
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.getDisplayCol((-3933));
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.8027646048348562
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clear();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.toStringKey();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(821, 2);
      resultMatrixHTML0.setRowName(64, "");
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.getDefaultEnumerateColNames();
  }

  /**
  //Test case number: 32
  /*Coverage entropy=4.007333185232473
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getEnumerateColNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getRowName(95);
      resultMatrixPlainText0.getRevision();
      resultMatrixCSV0.toStringKey();
      resultMatrixPlainText0.globalInfo();
      resultMatrixCSV0.getStdDev(1, 2);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixPlainText0.getSummaryTitle(2);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.assign(resultMatrixPlainText0);
      int[] intArray0 = new int[8];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 95;
      intArray0[3] = 2;
      intArray0[4] = 1;
      Vector<String> vector0 = new Vector<String>();
      vector0.spliterator();
      resultMatrixHTML0.m_HeaderValues = vector0;
      intArray0[5] = 3;
      intArray0[6] = 95;
      intArray0[7] = 2;
      resultMatrixCSV0.setColOrder(intArray0);
      resultMatrixPlainText0.enumerateColNamesTipText();
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.enumerateColNamesTipText();
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultShowStdDev();
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.294618800071365
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      int[] intArray0 = new int[2];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(69, 69);
      // Undeclared exception!
      resultMatrixSignificance0.toString();
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.344538840762934
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      boolean[] booleanArray0 = new boolean[0];
      resultMatrixPlainText0.m_RowHidden = booleanArray0;
      resultMatrixPlainText0.clear();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.setSignificance(0, 0, 0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.6931998155897316
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setColNameWidth((-720));
      resultMatrixCSV0.m_PrintRowNames = false;
      resultMatrixCSV0.toString();
      resultMatrixCSV0.getOptions();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 0);
      resultMatrixHTML0.getColOrder();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.92887993459394
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      int[][] intArray0 = new int[4][2];
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixGnuPlot0.isAverage(0);
      resultMatrixHTML0.setSignificance(2, 7, 7);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.9100175318514614
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ResultMatrixGnuPlot.main((String[]) null);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.setOptions((String[]) null);
      resultMatrixGnuPlot0.setSignificance(0, 2, 1);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.8526379562735795
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setSignificance((-1679), (-1679), 40);
      int[] intArray0 = new int[2];
      intArray0[0] = 5145;
      intArray0[1] = 0;
      resultMatrixPlainText0.setColOrder(intArray0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.32830307452232
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.clear();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.setRowHidden((-59), true);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.8274467288059113
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.doubleToString((-1444.4), 2);
      int[][] intArray0 = new int[4][2];
      resultMatrixHTML0.setRanking(intArray0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.401197381662154
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 2);
      resultMatrixSignificance0.toStringKey();
      int[][] intArray0 = new int[0][2];
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixSignificance0.getAverage(0);
      resultMatrixSignificance0.significanceWidthTipText();
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.648625546111829
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixSignificance0.setSignificance(1, 2, (-818));
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.346944212990993
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.clear();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixPlainText0.toStringMatrix();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.doubleToString(1, (-1652));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.666099254482564
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringMatrix();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixSignificance0.toStringKey();
      resultMatrixHTML0.setRowName(805, "(");
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.3370421104115655
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.clear();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.setCount(0, 0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.282693997278065
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixSignificance0.toStringKey();
      resultMatrixHTML0.LEFT_PARENTHESES = "(";
      resultMatrixHTML0.setRowName(0, "v");
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.0829126413850387
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixHTML0.setMeanPrec(0);
      resultMatrixSignificance0.assign(resultMatrixCSV0);
      resultMatrixHTML0.setEnumerateRowNames(false);
      resultMatrixSignificance0.getRowName(1);
      resultMatrixSignificance0.setCount((-2394), 124.851561);
      resultMatrixGnuPlot0.getRemoveFilterName();
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      resultMatrixSignificance0.getDefaultCountWidth();
      resultMatrixGnuPlot0.stdDevWidthTipText();
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.2952669419919642
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setPrintRowNames(true);
      resultMatrixLatex0.clear();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      int[] intArray0 = new int[6];
      intArray0[0] = 70;
      intArray0[1] = 0;
      resultMatrixLatex1.WIN_STRING = ")";
      intArray0[2] = 0;
      resultMatrixLatex0.getOptions();
      intArray0[3] = 2;
      intArray0[4] = 0;
      intArray0[5] = 0;
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.setMean(2, 0, 2);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.3499294419534986
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getRevision();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(80, 2);
      assertEquals(80, resultMatrixSignificance0.getVisibleColCount());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      
      resultMatrixSignificance0.toStringMatrix();
      String string0 = resultMatrixSignificance0.toStringKey();
      assertEquals("Key:\n(1) col0\n(2) col1\n(3) col2\n(4) col3\n(5) col4\n(6) col5\n(7) col6\n(8) col7\n(9) col8\n(10) col9\n(11) col10\n(12) col11\n(13) col12\n(14) col13\n(15) col14\n(16) col15\n(17) col16\n(18) col17\n(19) col18\n(20) col19\n(21) col20\n(22) col21\n(23) col22\n(24) col23\n(25) col24\n(26) col25\n(27) col26\n(28) col27\n(29) col28\n(30) col29\n(31) col30\n(32) col31\n(33) col32\n(34) col33\n(35) col34\n(36) col35\n(37) col36\n(38) col37\n(39) col38\n(40) col39\n(41) col40\n(42) col41\n(43) col42\n(44) col43\n(45) col44\n(46) col45\n(47) col46\n(48) col47\n(49) col48\n(50) col49\n(51) col50\n(52) col51\n(53) col52\n(54) col53\n(55) col54\n(56) col55\n(57) col56\n(58) col57\n(59) col58\n(60) col59\n(61) col60\n(62) col61\n(63) col62\n(64) col63\n(65) col64\n(66) col65\n(67) col66\n(68) col67\n(69) col68\n(70) col69\n(71) col70\n(72) col71\n(73) col72\n(74) col73\n(75) col74\n(76) col75\n(77) col76\n(78) col77\n(79) col78\n(80) col79\n", string0);
      
      resultMatrixLatex0.getRevision();
      boolean boolean0 = resultMatrixHTML0.getRowHidden(1);
      assertFalse(boolean0);
      
      resultMatrixHTML0.setStdDevPrec(2);
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.3732504467984272
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setCountWidth(47);
      resultMatrixPlainText0.getOptions();
      resultMatrixPlainText0.clear();
      resultMatrixPlainText0.setCount(47, 47);
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.4061774521134605
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setOptions((String[]) null);
      assertEquals(0, resultMatrixSignificance0.getStdDevPrec());
      
      resultMatrixGnuPlot0.setCount(1, 0);
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 35);
      resultMatrixLatex0.setCount(1, 1);
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(35, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.2901745264329265
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 2);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(3094, 0);
      resultMatrixCSV0.m_ShowStdDev = true;
      resultMatrixCSV0.getOptions();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(0, 2011);
      resultMatrixHTML1.m_MeanWidth = 2011;
      resultMatrixHTML1.setShowStdDev(true);
      resultMatrixHTML1.getColOrder();
      assertEquals(2011, resultMatrixHTML1.getMeanWidth());
      
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      assertEquals(0, resultMatrixSignificance1.getCountWidth());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.8027646048348562
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      int[] intArray0 = new int[3];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clear();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.setColOrder(intArray0);
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      
      String string0 = resultMatrixLatex0.padString("fLVIt;J4T}406q f/f", 0);
      assertEquals("fLVIt;J4T}406q f/f", string0);
      
      resultMatrixLatex0.toStringRanking();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.367295829986472
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[6];
      intArray0[0] = 782;
      intArray0[1] = 1;
      intArray0[2] = 381;
      intArray0[3] = 2;
      intArray0[4] = (-720);
      intArray0[5] = 1;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      String string0 = resultMatrixSignificance0.toStringKey();
      assertEquals("Key:\n(1) col0\n", string0);
      
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixCSV0.getMean((-1808), (-1808));
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertFalse(resultMatrixCSV0.getShowAverage());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertFalse(resultMatrixCSV0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.52751915084157
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.getHeader((String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.8027646048348562
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringKey();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.8027646048348562
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[12];
      intArray0[0] = 2;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.setRowName(0, ")");
      resultMatrixSignificance0.showStdDevTipText();
      boolean boolean0 = resultMatrixSignificance0.getDefaultShowAverage();
      assertFalse(boolean0);
      
      resultMatrixSignificance0.toStringRanking();
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.3693801921040074
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setColNameWidth((-720));
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(18, stringArray0.length);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 0);
      int[] intArray0 = new int[0];
      resultMatrixHTML0.m_ColOrder = intArray0;
      int[] intArray1 = resultMatrixHTML0.getColOrder();
      assertNotNull(intArray1);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      
      int int0 = resultMatrixHTML0.getDefaultSignificanceWidth();
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(0, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.2501444518297604
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.setEnumerateColNames(false);
      resultMatrixPlainText0.getOptions();
      resultMatrixPlainText0.clear();
      resultMatrixPlainText0.getRowCount();
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.6486255461118287
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 2;
      intArray0[3] = 0;
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.setStdDevWidth((-2007));
      // Undeclared exception!
      try { 
        resultMatrixLatex0.getHeader("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.9462719597590445
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.toStringKey();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption (Key)}\n\\scriptsize\n{\\centering\n\\begin{tabular}{cl}\\\\\n(1) & col0 \\\\\n\\end{tabular}\n}\n\\end{table}\n", string0);
      
      int[][] intArray0 = new int[2][0];
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      resultMatrixHTML1.getDisplayName();
      assertEquals(1, resultMatrixHTML1.getRowCount());
      assertEquals(0, resultMatrixHTML1.getStdDevWidth());
      assertEquals(2, resultMatrixHTML1.getDefaultMeanPrec());
      assertFalse(resultMatrixHTML1.getRemoveFilterName());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.602380779932484
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.setRowOrder(intArray0);
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      
      resultMatrixGnuPlot0.getRemoveFilterName();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setEnumerateRowNames(true);
      resultMatrixGnuPlot0.setColOrder(intArray0);
      boolean boolean0 = resultMatrixGnuPlot0.isRowName(1898);
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertFalse(boolean0);
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintRowNames());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.899370419893723
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[1][0];
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      boolean boolean0 = resultMatrixHTML0.isMean(1);
      assertTrue(boolean0);
      
      double double0 = resultMatrixHTML1.getAverage(1);
      assertFalse(resultMatrixHTML1.getDefaultShowAverage());
      assertEquals(2, resultMatrixHTML1.getStdDevPrec());
      assertEquals(2, resultMatrixHTML1.getDefaultMeanPrec());
      assertEquals(0, resultMatrixHTML1.getStdDevWidth());
      assertEquals(0, resultMatrixHTML1.getDefaultCountWidth());
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, resultMatrixHTML1.getSignificanceWidth());
      assertEquals(1, resultMatrixHTML1.getVisibleRowCount());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.7025579159805453
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      String string0 = resultMatrixCSV0.toStringMatrix();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals("Dataset,(1)\nrow0,''\n'(v/ /*)',''\n", string0);
      
      resultMatrixHTML0.getDisplayCol(2);
      assertEquals(0, resultMatrixHTML0.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.2665092505079194
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "v";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 3810);
      resultMatrixLatex0.setRowOrder((int[]) null);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      resultMatrixLatex0.toArray();
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.6982155361548714
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.getRevision();
      resultMatrixLatex0.enumerateColNamesTipText();
      boolean boolean0 = resultMatrixLatex0.isMean(1873);
      assertFalse(boolean0);
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(40, resultMatrixLatex0.getRowNameWidth());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.338553017492444
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = resultMatrixPlainText0.getOptions();
      assertEquals(19, stringArray0.length);
      
      resultMatrixPlainText0.setEnumerateColNames(true);
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      
      resultMatrixPlainText0.clear();
      resultMatrixPlainText0.getDefaultColNameWidth();
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.890368212529478
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 2);
      String string0 = resultMatrixSignificance0.toStringKey();
      assertEquals("Key:\n(1) col0\n", string0);
      
      double double0 = resultMatrixSignificance0.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      resultMatrixHTML0.getDefaultStdDevWidth();
      int int0 = resultMatrixHTML0.getRowCount();
      assertEquals(2, int0);
      
      resultMatrixHTML0.getShowStdDev();
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.removeFilterNameTipText();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.6023807799324836
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      int[][] intArray1 = new int[15][2];
      intArray1[0] = intArray0;
      resultMatrixHTML0.clearSummary();
      resultMatrixHTML0.setRanking(intArray1);
      resultMatrixHTML0.getShowAverage();
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertTrue(resultMatrixHTML0.getPrintColNames());
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.67158738523999
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      int[] intArray0 = new int[3];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clear();
      resultMatrixLatex0.setShowAverage(true);
      int[] intArray1 = new int[6];
      intArray1[0] = 70;
      intArray1[1] = 2;
      intArray1[2] = 53;
      intArray1[3] = 2;
      intArray1[4] = 2;
      intArray1[5] = 0;
      resultMatrixLatex0.m_RankingLosses = intArray1;
      int[][] intArray2 = new int[2][8];
      intArray2[0] = intArray0;
      resultMatrixLatex0.getSummaryTitle(147);
      intArray2[1] = intArray0;
      resultMatrixLatex0.setSummary(intArray2, intArray2);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      boolean boolean0 = resultMatrixGnuPlot0.getShowAverage();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(58, 58);
      resultMatrixSignificance0.getDefaultColNameWidth();
      assertEquals(58, resultMatrixSignificance0.getRowCount());
      assertEquals(0, resultMatrixSignificance0.getDefaultMeanWidth());
      assertFalse(resultMatrixSignificance0.getDefaultShowAverage());
      assertEquals(0, resultMatrixSignificance0.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.2351193462921213
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.getOptions();
      resultMatrixPlainText0.clear();
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.309443907283561
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.clear();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.toStringSummary();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      // Undeclared exception!
      resultMatrixPlainText0.setSize(2399, 25);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.546725566899075
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      assertFalse(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      
      resultMatrixGnuPlot0.setRowHidden(1297, true);
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.3935978677122014
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.clear();
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      
      resultMatrixPlainText0.setShowStdDev(true);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.setMeanPrec(0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixSignificance0.getRevision();
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("", "");
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.headerKeys();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.0404387273591684
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixHTML0);
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      resultMatrixLatex1.setRowOrder(intArray0);
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      assertEquals(25, resultMatrixLatex1.getRowNameWidth());
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.setPrintRowNames(true);
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(0, resultMatrixPlainText0.getColCount());
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.trimString("v", 1);
      assertFalse(resultMatrixPlainText1.getDefaultShowAverage());
      assertFalse(resultMatrixPlainText1.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.859232119809774
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.clear();
      String string0 = resultMatrixPlainText0.trimString("", 2743);
      assertEquals("", string0);
      
      resultMatrixPlainText0.getAverage(2743);
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getDefaultColNameWidth());
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.452902475485522
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getOptions();
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixPlainText0.showAverageTipText();
      resultMatrixPlainText0.getCount(33);
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.6783617327834794
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[1][7];
      int[] intArray1 = new int[2];
      intArray1[0] = 0;
      intArray1[1] = 2;
      intArray0[0] = intArray1;
      resultMatrixGnuPlot0.setSummary(intArray0, intArray0);
      resultMatrixGnuPlot0.getPrintRowNames();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.8219410225711576
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[2][0];
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      resultMatrixLatex0.colNameWidthTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      int[] intArray0 = new int[3];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clear();
      String string0 = resultMatrixLatex0.getSummaryTitle((-600));
      assertEquals("_", string0);
      
      int[][] intArray1 = new int[1][2];
      intArray1[0] = intArray0;
      resultMatrixLatex0.setSummary(intArray1, intArray1);
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
      assertFalse(resultMatrixLatex0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.512168324285829
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      
      String[] stringArray0 = new String[0];
      ResultMatrixHTML.main(stringArray0);
      resultMatrixGnuPlot0.getPrintRowNames();
      resultMatrixGnuPlot0.setMean(446, 446, 446);
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.367295829986472
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.TIE_STRING = ")";
      resultMatrixPlainText0.setRemoveFilterName(false);
      resultMatrixPlainText0.m_MeanWidth = 0;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixPlainText0.getRevision();
      resultMatrixHTML0.toStringRanking();
      resultMatrixPlainText0.clearSummary();
      resultMatrixLatex0.getDefaultStdDevPrec();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.LOSS_STRING = "(";
      resultMatrixSignificance0.globalInfo();
      String string0 = resultMatrixLatex0.printColNamesTipText();
      assertEquals("Whether to output column names or just numbers representing them.", string0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(6, 39);
      resultMatrixCSV0.m_MeanWidth = 1;
      resultMatrixCSV0.getRevision();
      double double0 = resultMatrixCSV0.getStdDev(1, 2942);
      assertEquals(0.0, double0, 0.01);
      
      resultMatrixHTML0.rowNameWidthTipText();
      resultMatrixCSV0.setMean(26, 26, 39);
      assertEquals(39, resultMatrixCSV0.getRowCount());
      assertEquals(6, resultMatrixCSV0.getVisibleColCount());
      
      resultMatrixLatex0.toStringSummary();
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals(5, resultMatrixLatex0.getCountWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowOrder((int[]) null);
      resultMatrixLatex0.rowNameWidthTipText();
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[2];
      resultMatrixHTML0.stdDevPrecTipText();
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getDefaultMeanWidth());
      assertFalse(resultMatrixHTML0.getDefaultShowAverage());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(1, resultMatrixHTML0.getRowCount());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.121280506071869
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML1.getDefaultEnumerateColNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML1);
      resultMatrixLatex0.getColNameWidth();
      resultMatrixLatex0.globalInfo();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(8, 2);
      int[] intArray0 = new int[9];
      resultMatrixLatex0.removeFilterName("");
      intArray0[0] = 39;
      intArray0[1] = 2;
      intArray0[2] = 0;
      intArray0[3] = 8;
      resultMatrixLatex0.padString(" ", 1, true);
      resultMatrixGnuPlot1.setColOrder(intArray0);
      resultMatrixGnuPlot1.assign(resultMatrixHTML0);
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot(2, 2);
      resultMatrixGnuPlot1.getDefaultRowNameWidth();
      assertEquals(25, resultMatrixGnuPlot1.getRowNameWidth());
      
      resultMatrixGnuPlot0.setStdDev(2, 2, 2);
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.8526379562735795
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.setStdDev(718, 5, 0.0);
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(1, resultMatrixSignificance0.getColCount());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setStdDevWidth(48);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      int int0 = resultMatrixLatex0.getRowNameWidth();
      assertEquals(48, resultMatrixLatex0.getStdDevWidth());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.845638493134258
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 2);
      String string0 = resultMatrixSignificance0.toStringKey();
      assertEquals("Key:\n(1) col0\n", string0);
      
      resultMatrixHTML0.LEFT_PARENTHESES = "\"i)!";
      resultMatrixHTML0.setRowName(0, "v");
      int int0 = resultMatrixSignificance0.getRowNameWidth();
      assertEquals(40, int0);
      
      resultMatrixHTML0.toStringSummary();
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(0, resultMatrixHTML0.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.6808649498588037
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getRevision();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(80, 2);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      String string0 = resultMatrixPlainText0.trimString("", 0);
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertFalse(resultMatrixPlainText0.getDefaultRemoveFilterName());
      assertEquals(40, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(80, resultMatrixPlainText0.getColCount());
      assertEquals(2, resultMatrixPlainText0.getRowCount());
      assertEquals("", string0);
      assertFalse(resultMatrixPlainText0.getDefaultShowStdDev());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertFalse(resultMatrixPlainText0.getDefaultShowAverage());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.6986929152957084
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getRevision();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(80, 2);
      assertEquals(2, resultMatrixSignificance0.getRowCount());
      
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixLatex0.addHeader((String) null, "P)a~0");
      assertFalse(resultMatrixLatex0.getShowAverage());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 80);
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[2][2];
      int int0 = resultMatrixGnuPlot0.getDefaultMeanPrec();
      assertEquals(2, int0);
      
      int int1 = resultMatrixGnuPlot0.getDefaultMeanWidth();
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(0, int1);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.2444926304072963
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevPrec(2181);
      resultMatrixCSV0.getSignificance(1323, (-281));
      resultMatrixCSV0.getMeanPrec();
      int[] intArray0 = new int[8];
      intArray0[0] = 1905;
      intArray0[1] = 0;
      intArray0[2] = 2;
      intArray0[3] = 1905;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "*";
      stringArray0[1] = " ";
      stringArray0[2] = "*";
      stringArray0[3] = "[";
      stringArray0[4] = " ";
      resultMatrixCSV0.m_RowNames = stringArray0;
      intArray0[4] = (-281);
      resultMatrixCSV0.m_RowNames = stringArray0;
      intArray0[5] = 2;
      intArray0[6] = 1;
      intArray0[7] = 2;
      resultMatrixCSV0.m_RankingDiff = intArray0;
      resultMatrixCSV0.getSignificanceCount(1905, 1323);
      resultMatrixCSV0.getDisplayRow(0);
      resultMatrixCSV0.getDefaultMeanPrec();
      assertEquals(2181, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.3076497347524
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.clear();
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixPlainText0.getSignificanceCount(1634, 1634);
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.7438550678980884
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.padString("B=", 43);
      assertEquals("B=                                         ", string0);
      
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.3549875696248246
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setPrintRowNames(false);
      resultMatrixPlainText0.setCountWidth(6);
      assertEquals(6, resultMatrixPlainText0.getCountWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(6, 1);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixSignificance0);
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixHTML0.globalInfo();
      resultMatrixSignificance1.getRevision();
      resultMatrixHTML0.setStdDevPrec(2);
      resultMatrixHTML1.getDefaultPrintColNames();
      resultMatrixHTML1.getMean(57, 975);
      assertTrue(resultMatrixHTML1.getPrintRowNames());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.0280290733074104
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[5];
      intArray0[1] = 1;
      intArray0[3] = 1;
      intArray0[4] = 39;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      double double0 = resultMatrixGnuPlot0.getMean(708, (-790));
      assertEquals(0.0, double0, 0.01);
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintRowNames());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.950391601025311
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(16, 0);
      resultMatrixHTML0.setRemoveFilterName(true);
      resultMatrixHTML0.getRevision();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getColName(2);
      resultMatrixLatex0.setColHidden((-497), true);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.getDefaultEnumerateColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance(2, (-2552));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int int0 = 1904;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 1904);
      // Undeclared exception!
      resultMatrixSignificance0.assign(resultMatrixHTML0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.620818488310647
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixHTML0.setRemoveFilterName(true);
      resultMatrixHTML0.getRevision();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "(";
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixLatex0.getColName(0);
      resultMatrixLatex0.setColHidden(0, true);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(71, 2);
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixSignificance0.toStringKey();
      resultMatrixSignificance0.getAverage(78);
      resultMatrixSignificance0.setRowNameWidth(102);
      resultMatrixSignificance0.getDefaultShowStdDev();
      assertEquals(102, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.countWidthTipText();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(40, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.3068849378916276
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_RankingLosses = null;
      String[] stringArray0 = resultMatrixPlainText0.getOptions();
      assertEquals(19, stringArray0.length);
      
      resultMatrixPlainText0.clear();
      resultMatrixPlainText0.getEnumerateColNames();
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.8243648409235025
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray1 = new int[6][6];
      intArray1[0] = intArray0;
      int[] intArray2 = new int[3];
      intArray2[0] = 2;
      intArray2[1] = 0;
      intArray2[2] = 7;
      intArray1[1] = intArray2;
      intArray1[2] = intArray0;
      resultMatrixGnuPlot0.setStdDevWidth(0);
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      resultMatrixHTML0.setRanking(intArray1);
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertFalse(resultMatrixHTML0.getDefaultShowAverage());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.4872534092060716
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ResultMatrixGnuPlot.main((String[]) null);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.padString("(", 2, false);
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.236571964404091
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      resultMatrixPlainText0.padString("$circ$", 0, false);
      resultMatrixLatex0.m_RowNameWidth = 0;
      resultMatrixPlainText0.clear();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset (1) col0 | (2) col1\n---------------------------\n---------------------------\n(v/ /*) | (0/0/0)\n", string0);
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.233183484380926
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 1;
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML1);
      String string0 = resultMatrixPlainText0.getColName(731);
      assertNull(string0);
      
      String string1 = resultMatrixPlainText0.toStringKey();
      assertEquals("Key:\n", string1);
      
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixPlainText0.setColName(37, ")");
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(0, resultMatrixPlainText0.getVisibleRowCount());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(25, resultMatrixHTML1.getRowNameWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 2);
      assertEquals(2, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=3.178053830347948
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setOptions((String[]) null);
      resultMatrixSignificance0.getDefaultCountWidth();
      assertFalse(resultMatrixSignificance0.getEnumerateColNames());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.8322602295395347
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.9858803700767558
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowAverage(true);
      int[][] intArray0 = new int[1][0];
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.setShowStdDev(true);
      resultMatrixHTML0.trimString((String) null, (-1514));
      assertTrue(resultMatrixHTML0.getShowStdDev());
      
      String string0 = resultMatrixLatex0.stdDevPrecTipText();
      assertEquals("The number of decimals after the decimal point for the standard deviation.", string0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.173730847161735
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixGnuPlot0.m_ColNameWidth = (-865);
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      String string1 = resultMatrixLatex0.getSummaryTitle(2);
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals("c", string1);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.9889840465642794
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String string0 = resultMatrixSignificance0.toString();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(40, resultMatrixGnuPlot0.getRowNameWidth());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.9695698663657653
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      int[] intArray0 = new int[3];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.setRowOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setPrintRowNames(true);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      resultMatrixPlainText0.setCountWidth(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixSignificance0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot((-932), 2249);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=3.6319759343549367
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 2;
      intArray0[4] = 2;
      intArray0[5] = 97;
      intArray0[6] = 1;
      intArray0[7] = 0;
      intArray0[8] = 1;
      resultMatrixPlainText0.m_ColOrder = intArray0;
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixHTML0.getDefaultRemoveFilterName();
      resultMatrixHTML0.printColNamesTipText();
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.367295829986472
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setColNameWidth(4665);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "(";
      stringArray0[1] = "Warning, unable to load properties file(s) from system resource (Utils.java): ";
      stringArray0[2] = "*";
      stringArray0[3] = "v";
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.getColName(0);
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixPlainText0.setColName((-1094), ")");
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex((-1094), 2);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=3.338553017492444
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = resultMatrixPlainText0.getOptions();
      assertEquals(19, stringArray0.length);
      
      resultMatrixPlainText0.clear();
      resultMatrixPlainText0.isRowName((-330));
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.651116054762002
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.headerKeys();
      boolean boolean0 = resultMatrixLatex0.isRowName(2);
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertFalse(boolean0);
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertFalse(resultMatrixLatex0.getShowAverage());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setCountWidth((-3118));
      resultMatrixLatex0.stdDevPrecTipText();
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(548);
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      assertEquals(548, resultMatrixGnuPlot0.getCountWidth());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.9079746984344155
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(3, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      
      resultMatrixPlainText0.m_CountWidth = 2;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.m_RemoveFilterName = false;
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.getDefaultPrintRowNames();
      resultMatrixGnuPlot0.listOptions();
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      resultMatrixSignificance0.getRevision();
      resultMatrixPlainText0.TIE_STRING = "(";
      resultMatrixPlainText0.trimString("dCvz~|Xcvo=G~lB=", 2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.LEFT_PARENTHESES = "dCvz~|Xcvo=G~lB=";
      resultMatrixLatex0.toStringRanking();
      resultMatrixSignificance0.setShowStdDev(false);
      resultMatrixSignificance0.getAverage(26);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.setRowNameWidth(0);
      assertEquals(0, resultMatrixSignificance1.getRowNameWidth());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.9458755173797666
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getAverage((-1553));
      assertFalse(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(50, resultMatrixSignificance0.getRowNameWidth());
      assertFalse(resultMatrixSignificance0.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertFalse(resultMatrixSignificance0.getShowAverage());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertTrue(resultMatrixSignificance0.getPrintColNames());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[0][4];
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.6511160547620025
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      int[][] intArray0 = new int[4][2];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertFalse(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.7284075400342926
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.isAverage((-1));
      resultMatrixLatex0.clearHeader();
      resultMatrixLatex0.getMeanWidth();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML2 = null;
      try {
        resultMatrixHTML2 = new ResultMatrixHTML(1, (-1790));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setRowName(1, "<lCr/ _1V");
      resultMatrixHTML0.getDefaultStdDevWidth();
      assertFalse(resultMatrixHTML0.getDefaultEnumerateRowNames());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getRowName((-3085));
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertTrue(resultMatrixPlainText0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.8526379562735795
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      assertFalse(resultMatrixHTML1.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixHTML1.getDefaultColNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[3];
      resultMatrixGnuPlot0.setMeanWidth(0);
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 1;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=3.120291565301284
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.getColName(901);
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertTrue(resultMatrixHTML0.getPrintColNames());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=3.3068849378916276
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getOptions();
      int int0 = (-797);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSize(3455, (-797));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=3.547048482450744
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ResultMatrixGnuPlot.main((String[]) null);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setPrintColNames(false);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.setOptions((String[]) null);
      assertEquals(0, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=3.32830307452232
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setEnumerateRowNames(false);
      resultMatrixPlainText0.clear();
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixPlainText0.getDefaultRowNameWidth();
      assertEquals(0, resultMatrixPlainText0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=3.2735977329564885
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      resultMatrixPlainText0.clear();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset (1) col0 | (2) col1\n---------------------------\n---------------------------\n(v/ /*) | (0/0/0)\n", string0);
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
      
      String string1 = resultMatrixLatex0.doubleToString(2, 1);
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals("2.0", string1);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=2.8428806153171315
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clear();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.doubleToString(0, 350);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.getHeader("*");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 141
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(42, 42);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      boolean boolean0 = resultMatrixSignificance0.getColHidden((-140));
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertFalse(boolean0);
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(42, resultMatrixSignificance0.getRowCount());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(42, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(0, resultMatrixSignificance0.getDefaultColNameWidth());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=2.8004698251768687
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      resultMatrixSignificance0.setRowOrder(intArray0);
      int int0 = resultMatrixSignificance0.getDisplayRow(1129);
      assertEquals((-1), int0);
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertFalse(resultMatrixSignificance0.getDefaultEnumerateRowNames());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=3.3923092584994805
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixHTML0.setRemoveFilterName(false);
      resultMatrixHTML0.getRevision();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getColName(0);
      resultMatrixLatex0.setColHidden(0, false);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 2);
      resultMatrixSignificance0.padString("v", 1898, true);
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixSignificance0.toStringKey();
      resultMatrixSignificance0.getAverage(78);
      resultMatrixSignificance0.setRowNameWidth(102);
      assertEquals(102, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=3.246601712090598
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setSignificanceWidth((-1585));
      resultMatrixSignificance0.setOptions((String[]) null);
      assertFalse(resultMatrixSignificance0.getPrintRowNames());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=3.2047775241322567
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 0);
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      intArray0[1] = 1;
      intArray0[2] = 2;
      intArray0[3] = 1;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.setColName(0, "(");
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColName(1, "Tx");
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[3][0];
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.enumerateRowNamesTipText();
      assertEquals(0, resultMatrixHTML0.getDefaultMeanWidth());
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertFalse(resultMatrixHTML0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=2.52751915084157
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      int[][] intArray0 = new int[0][3];
      resultMatrixHTML0.setRanking(intArray0);
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertTrue(resultMatrixHTML0.getPrintColNames());
      assertFalse(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=2.7277547782488143
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      int[][] intArray0 = new int[3][2];
      resultMatrixHTML0.setRanking(intArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      String string0 = resultMatrixSignificance0.toStringKey();
      assertEquals("Key:\n1 col0\n", string0);
      
      resultMatrixSignificance0.getAverage(2);
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(50, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertTrue(resultMatrixSignificance0.getPrintColNames());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=2.992400521059247
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getSummaryTitle(0);
      resultMatrixGnuPlot0.setSignificanceWidth(0);
      resultMatrixGnuPlot0.RIGHT_PARENTHESES = "A}roDNWxdl%`yQzclF";
      String[] stringArray0 = new String[0];
      resultMatrixGnuPlot0.removeFilterName("{centering\n");
      resultMatrixGnuPlot0.setShowStdDev(true);
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      
      resultMatrixGnuPlot0.m_RowNames = stringArray0;
      resultMatrixGnuPlot0.m_MeanWidth = 2;
      resultMatrixGnuPlot0.getRowOrder();
      resultMatrixGnuPlot0.getRowOrder();
      int int0 = resultMatrixGnuPlot0.getVisibleRowCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 151
  /*Coverage entropy=2.651116054762002
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setMeanPrec(1131);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      int[][] intArray0 = new int[3][2];
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixGnuPlot0.setColOrder((int[]) null);
      assertEquals(1131, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=3.338553017492444
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getOptions();
      resultMatrixPlainText0.setSignificanceWidth((-858));
      resultMatrixPlainText0.getOptions();
      resultMatrixPlainText0.clear();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSize((-858), 97);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 153
  /*Coverage entropy=2.621995466690559
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getVisibleColCount();
      String[][] stringArray0 = new String[3][8];
      String[] stringArray1 = new String[2];
      stringArray1[0] = "*";
      stringArray1[1] = "";
      resultMatrixGnuPlot0.m_ShowAverage = false;
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[2];
      stringArray2[0] = " ";
      stringArray2[1] = "[\"cqe`";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[0];
      stringArray0[2] = stringArray3;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getColSize(stringArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 154
  /*Coverage entropy=3.170148321475506
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(3, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.m_CountWidth = 2;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.m_RemoveFilterName = false;
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.getDefaultPrintRowNames();
      resultMatrixGnuPlot0.listOptions();
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      resultMatrixSignificance0.getRevision();
      resultMatrixPlainText0.TIE_STRING = "(";
      resultMatrixPlainText0.trimString("dCvz~|Xcvo=G~lB=", 2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.setShowStdDev(false);
      String[][] stringArray0 = new String[0][0];
      // Undeclared exception!
      try { 
        resultMatrixLatex0.getColSize(stringArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 155
  /*Coverage entropy=2.818762871904427
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setColNameWidth(4665);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "(";
      stringArray0[1] = "Warning, unable to load properties file(s) from system resource (Utils.java): ";
      stringArray0[2] = "*";
      stringArray0[3] = "v";
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.removeFilterName((String) null);
      resultMatrixGnuPlot0.setShowStdDev(true);
      resultMatrixGnuPlot0.getRowOrder();
      resultMatrixGnuPlot0.getRowOrder();
      assertEquals(4665, resultMatrixCSV0.getColNameWidth());
      
      int int0 = resultMatrixSignificance0.getDefaultStdDevPrec();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 156
  /*Coverage entropy=2.5986051779973063
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[12];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.setColNameWidth(3);
      resultMatrixLatex0.setRowOrder(intArray0);
      assertEquals(3, resultMatrixLatex0.getColNameWidth());
  }

  /**
  //Test case number: 157
  /*Coverage entropy=3.25842157605242
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.getOptions();
      resultMatrixPlainText0.clear();
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=3.610238261726482
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_StdDevPrec = (-1460);
      resultMatrixHTML0.setPrintColNames(true);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      assertTrue(resultMatrixHTML0.getPrintColNames());
  }

  /**
  //Test case number: 159
  /*Coverage entropy=3.8170856899981245
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = resultMatrixPlainText0.getOptions();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.setOptions(stringArray0);
      assertEquals(5, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=3.299668260750111
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.toStringKey();
      String[] stringArray0 = new String[1];
      stringArray0[0] = " ";
      resultMatrixLatex0.setOptions(stringArray0);
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
  }

  /**
  //Test case number: 161
  /*Coverage entropy=4.257092596301105
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.headerKeys();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "[";
      stringArray0[1] = "[";
      stringArray0[2] = "(";
      stringArray0[3] = "*";
      stringArray0[4] = "[";
      resultMatrixSignificance0.m_ShowAverage = false;
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      stringArray0[5] = "-summary data not set-";
      ResultMatrixCSV.main(stringArray0);
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixCSV0.getStdDevPrec();
      resultMatrixCSV0.showAverageTipText();
      String[][] stringArray1 = new String[4][0];
      String[] stringArray2 = new String[6];
      stringArray2[0] = " ";
      stringArray2[1] = "(";
      stringArray2[2] = "*";
      stringArray2[3] = "(";
      stringArray2[4] = "-summary data not set-";
      stringArray2[5] = "";
      stringArray1[0] = stringArray2;
      stringArray1[1] = stringArray0;
      stringArray1[2] = stringArray0;
      stringArray1[3] = stringArray0;
      int int0 = resultMatrixSignificance0.getColSize(stringArray1, 1, true, true);
      assertEquals(1, int0);
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=3.5490895194727066
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowNameWidth(2663);
      String[] stringArray0 = resultMatrixPlainText0.getOptions();
      resultMatrixPlainText0.clear();
      ResultMatrixPlainText.main(stringArray0);
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertFalse(resultMatrixPlainText0.getShowAverage());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=2.6486255461118287
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      
      String string0 = resultMatrixGnuPlot0.toStringKey();
      assertEquals("Key:\n1 col0\n", string0);
      
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      assertEquals(0, resultMatrixGnuPlot0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 164
  /*Coverage entropy=2.6486255461118287
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.trimString(" ", 3243);
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(5, resultMatrixLatex0.getCountWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
  }

  /**
  //Test case number: 165
  /*Coverage entropy=2.7458535301741085
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.trimString("f.8sZ-,k3brD9(**", 1);
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals("f", string0);
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
  }

  /**
  //Test case number: 166
  /*Coverage entropy=3.8768217805143927
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getSummaryTitle(0);
      resultMatrixGnuPlot0.setSignificanceWidth(0);
      resultMatrixGnuPlot0.RIGHT_PARENTHESES = "A}roDNWxdl%`yQzclF";
      String[] stringArray0 = new String[0];
      resultMatrixGnuPlot0.removeFilterName("{centering\n");
      resultMatrixGnuPlot0.setShowStdDev(true);
      assertTrue(resultMatrixGnuPlot0.getShowStdDev());
      
      ResultMatrixGnuPlot.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getPrintColNames();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.toStringRanking();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getColHidden(2);
      assertTrue(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 167
  /*Coverage entropy=3.8783438772864818
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.LEFT_PARENTHESES = "$circ$";
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 2;
      intArray0[4] = 2;
      resultMatrixLatex0.setRowOrder((int[]) null);
      resultMatrixPlainText0.setPrintRowNames(false);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      int[][] intArray1 = new int[1][3];
      int[] intArray2 = new int[4];
      intArray2[0] = 0;
      intArray2[1] = 1;
      intArray2[2] = (-601);
      intArray2[3] = 2;
      intArray1[0] = intArray2;
      resultMatrixCSV0.m_NonSigWins = intArray1;
      resultMatrixPlainText0.toStringRanking();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "(";
      stringArray0[1] = "u2r/~p(a";
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixPlainText0.getPrintColNames();
      resultMatrixPlainText0.toStringRanking();
      resultMatrixCSV0.getColHidden(0);
      assertFalse(resultMatrixPlainText0.getPrintRowNames());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
  }

  /**
  //Test case number: 168
  /*Coverage entropy=3.236571964404091
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      resultMatrixPlainText0.clear();
      assertEquals(2, resultMatrixPlainText0.getVisibleColCount());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset (1) col0 | (2) col1\n---------------------------\n---------------------------\n(v/ /*) | (0/0/0)\n", string0);
      
      resultMatrixLatex0.getDefaultSignificanceWidth();
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 169
  /*Coverage entropy=3.4462471438544346
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(3, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.m_CountWidth = 2;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixPlainText0.setPrintRowNames(true);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(1, 1);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(1, 1);
      resultMatrixCSV1.getDefaultEnumerateColNames();
      assertEquals(1, resultMatrixCSV1.getVisibleRowCount());
      
      resultMatrixPlainText0.getDefaultSignificanceWidth();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "4 ,YM";
      stringArray0[1] = " 4Cx";
      stringArray0[2] = "v";
      stringArray0[3] = "(";
      ResultMatrixGnuPlot.main(stringArray0);
      boolean boolean0 = resultMatrixPlainText1.getPrintColNames();
      assertTrue(boolean0);
      assertFalse(resultMatrixPlainText1.getEnumerateRowNames());
      
      resultMatrixCSV0.getColHidden(0);
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 170
  /*Coverage entropy=2.842880615317132
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      
      resultMatrixLatex0.m_StdDevPrec = 13;
      int[][] intArray0 = new int[2][0];
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      int int0 = resultMatrixLatex0.getMeanWidth();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 171
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      boolean boolean0 = resultMatrixPlainText0.getEnumerateRowNames();
      assertFalse(boolean0);
      assertFalse(resultMatrixPlainText0.getShowAverage());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 172
  /*Coverage entropy=3.2958368660043296
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.headerKeys();
      resultMatrixPlainText0.setStdDevPrec(1721);
      resultMatrixPlainText0.isSignificance((-3206));
      assertEquals(1721, resultMatrixPlainText0.getStdDevPrec());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getRevision();
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 173
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.headerKeys();
      resultMatrixPlainText0.setStdDevPrec(1721);
      resultMatrixPlainText0.isSignificance(1);
      assertEquals(1721, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 174
  /*Coverage entropy=3.2188758248682
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.clearRanking();
      int[] intArray0 = new int[0];
      resultMatrixSignificance0.setColOrder(intArray0);
      String[] stringArray0 = new String[0];
      resultMatrixSignificance0.setOptions(stringArray0);
      assertFalse(resultMatrixSignificance0.getPrintRowNames());
  }

  /**
  //Test case number: 175
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setSignificanceWidth(125);
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      assertEquals(125, resultMatrixGnuPlot0.getSignificanceWidth());
  }

  /**
  //Test case number: 176
  /*Coverage entropy=2.873986707618567
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      resultMatrixLatex0.setRowOrder(intArray0);
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
      
      resultMatrixGnuPlot0.getRowOrder();
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
  }

  /**
  //Test case number: 177
  /*Coverage entropy=2.7437733554254993
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixSignificance0.setSignificanceWidth(0);
      int[] intArray0 = new int[2];
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.setEnumerateColNames(false);
      assertFalse(resultMatrixLatex0.getEnumerateColNames());
  }

  /**
  //Test case number: 178
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.getSummaryTitle(0);
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(0, resultMatrixLatex0.getDefaultStdDevWidth());
      assertEquals("a", string0);
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 179
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.getColName((-5169));
      assertNull(string0);
      
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintColNames());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 180
  /*Coverage entropy=2.7878762280875957
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(974, 0);
      resultMatrixHTML0.getColName(2);
      resultMatrixSignificance0.toStringSummary();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 181
  /*Coverage entropy=2.8578613523789516
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 2);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.doubleToString((-2213.764659349), 2);
      assertEquals("-2213.76", string0);
      
      String string1 = resultMatrixHTML0.getColName(0);
      assertNotNull(string1);
      assertEquals("(1)", string1);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.setRowName(2, "j50L");
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
  }

  /**
  //Test case number: 182
  /*Coverage entropy=3.2128189783784378
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[0];
      resultMatrixSignificance0.setOptions(stringArray0);
      resultMatrixSignificance0.stdDevWidthTipText();
      assertEquals(0, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 183
  /*Coverage entropy=2.973971854832384
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.toStringKey();
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 184
  /*Coverage entropy=2.9025538185947704
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.getColName(901);
      assertNull(string0);
      
      resultMatrixGnuPlot0.getPrintRowNames();
      int int0 = resultMatrixHTML0.getColCount();
      assertEquals(1, int0);
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      
      boolean boolean0 = resultMatrixGnuPlot0.getEnumerateRowNames();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 185
  /*Coverage entropy=3.3732504467984272
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = resultMatrixPlainText0.getOptions();
      assertEquals(19, stringArray0.length);
      
      resultMatrixPlainText0.clear();
      double double0 = resultMatrixPlainText0.getStdDev(46, 3);
      assertEquals(0.0, double0, 0.01);
      
      resultMatrixPlainText0.meanPrecTipText();
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
  }

  /**
  //Test case number: 186
  /*Coverage entropy=2.9792949754551628
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.clearHeader();
      resultMatrixHTML0.setPrintRowNames(false);
      resultMatrixHTML0.m_CountWidth = (-1);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.getDefaultCountWidth();
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 2;
      resultMatrixHTML0.removeFilterName("");
      resultMatrixHTML0.m_StdDevWidth = 2;
      intArray0[4] = 1;
      resultMatrixPlainText0.m_RankingDiff = intArray0;
      resultMatrixPlainText0.setPrintRowNames(false);
      resultMatrixPlainText0.getStdDev(0, (-2554));
      resultMatrixHTML0.toStringKey();
      resultMatrixHTML0.getColCount();
      String[][] stringArray0 = new String[1][1];
      String[] stringArray1 = new String[0];
      stringArray0[0] = stringArray1;
      resultMatrixGnuPlot0.getColSize(stringArray0, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.clear();
      assertTrue(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
  }

  /**
  //Test case number: 187
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(97, 1);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      int int0 = resultMatrixHTML1.getVisibleColCount();
      assertEquals(2, resultMatrixHTML1.getStdDevPrec());
      assertTrue(resultMatrixHTML1.getEnumerateColNames());
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
      assertEquals(0, resultMatrixHTML1.getDefaultColNameWidth());
      assertEquals(1, resultMatrixHTML1.getVisibleRowCount());
      assertTrue(resultMatrixHTML1.getPrintRowNames());
      assertFalse(resultMatrixHTML1.getEnumerateRowNames());
      assertEquals(97, int0);
      assertEquals(0, resultMatrixHTML1.getDefaultStdDevWidth());
      assertEquals(0, resultMatrixHTML1.getMeanWidth());
  }

  /**
  //Test case number: 188
  /*Coverage entropy=2.651116054762002
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      int[][] intArray0 = new int[4][2];
      resultMatrixHTML0.setRanking(intArray0);
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertTrue(resultMatrixHTML0.getPrintColNames());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertFalse(resultMatrixHTML0.getEnumerateColNames());
      
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      resultMatrixGnuPlot0.isAverage(2);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 189
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.listOptions();
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex((ResultMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 190
  /*Coverage entropy=3.911823754348817
  */
  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      int[] intArray0 = new int[3];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.setRowOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setPrintRowNames(true);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      resultMatrixPlainText0.setCountWidth(6);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixSignificance0);
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      assertEquals(1, resultMatrixSignificance1.getColCount());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0  \n------------------------------------\nrow0                        (0)    |\n------------------------------------\n(v/ /*)                            |\n", string0);
      
      resultMatrixSignificance1.getRevision();
      resultMatrixHTML1.getDefaultPrintColNames();
      assertEquals(0, resultMatrixHTML1.getVisibleColCount());
      assertEquals(2, resultMatrixHTML1.getStdDevPrec());
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
      assertTrue(resultMatrixHTML1.getEnumerateColNames());
      assertTrue(resultMatrixHTML1.getPrintRowNames());
      assertEquals(25, resultMatrixHTML1.getRowNameWidth());
  }

  /**
  //Test case number: 191
  /*Coverage entropy=2.5955157854799817
  */
  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixGnuPlot0.padString("", 1, true);
      int[][] intArray0 = new int[3][9];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 1;
      intArray2[1] = 0;
      intArray2[2] = 1;
      intArray2[3] = 1;
      intArray2[4] = 1;
      intArray2[5] = 1;
      intArray2[6] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[9];
      intArray3[0] = 2;
      intArray3[1] = 0;
      intArray3[2] = 2;
      intArray3[3] = 1;
      intArray3[4] = 1;
      intArray3[5] = 2;
      intArray3[6] = 2;
      intArray3[7] = 3618;
      intArray3[8] = 1;
      intArray0[2] = intArray3;
      resultMatrixGnuPlot0.m_Significance = intArray0;
      resultMatrixGnuPlot0.setRowNameWidth(25);
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      
      resultMatrixGnuPlot0.m_RowNameWidth = (-932);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      resultMatrixGnuPlot0.getDefaultPrintColNames();
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 192
  /*Coverage entropy=3.1840095699178423
  */
  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.removeFilterName("");
      assertEquals(1, resultMatrixHTML0.getColCount());
      
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      String string1 = resultMatrixHTML0.padString("", (-1820), false);
      assertEquals("", string1);
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 193
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.setMeanPrec((-2511));
      // Undeclared exception!
      try { 
        resultMatrixLatex0.getHeader(")");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 194
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clear();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 2);
      resultMatrixHTML0.setMeanPrec(0);
      resultMatrixHTML0.meanPrecTipText();
      boolean boolean0 = resultMatrixHTML0.getDefaultRemoveFilterName();
      assertEquals(0, resultMatrixHTML0.getMeanPrec());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 195
  /*Coverage entropy=2.5805376244873655
  */
  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setPrintRowNames(true);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.getHeader(" ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 196
  /*Coverage entropy=4.262679877041316
  */
  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      ResultMatrixGnuPlot.main((String[]) null);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getColOrder();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int int0 = resultMatrixHTML0.getStdDevWidth();
      assertEquals(0, int0);
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
  }

  /**
  //Test case number: 197
  /*Coverage entropy=3.2000728953968203
  */
  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.padString("nv+JB#m~", (-575));
      resultMatrixLatex0.getDefaultEnumerateColNames();
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
  }

  /**
  //Test case number: 198
  /*Coverage entropy=3.4991448561648757
  */
  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixCSV0.m_HeaderValues = vector0;
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      String[] stringArray0 = new String[3];
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer0);
      stringArray0[0] = "[";
      stringArray0[1] = "v";
      stringArray0[2] = " ";
      ResultMatrixCSV.main(stringArray0);
      resultMatrixCSV0.setColNameWidth((-720));
      String[] stringArray1 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray1.length);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getRevision();
      resultMatrixCSV0.setMean(1956, (-1), 0);
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 199
  /*Coverage entropy=2.6885678425123976
  */
  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRowHidden(44, false);
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 200
  /*Coverage entropy=2.921613496406035
  */
  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      resultMatrixLatex0.setPrintRowNames(false);
      resultMatrixLatex0.setRowOrder(intArray0);
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
      assertTrue(resultMatrixLatex0.getEnumerateRowNames());
  }

  /**
  //Test case number: 201
  /*Coverage entropy=3.120291565301284
  */
  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixSignificance0.setMean(110, 1, 0);
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 202
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.printRowNamesTipText();
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals("Whether to output row names or just numbers representing them.", string0);
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertFalse(resultMatrixLatex0.getDefaultRemoveFilterName());
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(0, resultMatrixLatex0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 203
  /*Coverage entropy=2.648625546111829
  */
  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      int[] intArray0 = new int[4];
      intArray0[0] = 913;
      intArray0[1] = 0;
      intArray0[2] = 257;
      intArray0[3] = 0;
      resultMatrixLatex0.setRowOrder(intArray0);
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(40, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      
      int int0 = resultMatrixSignificance0.getStdDevPrec();
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertFalse(resultMatrixSignificance0.getDefaultShowAverage());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 204
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (double) 0;
      doubleArray0[4] = (double) 1;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = (double) 0;
      resultMatrixCSV0.m_Counts = doubleArray0;
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      
      resultMatrixCSV0.m_StdDevPrec = 0;
      int int0 = resultMatrixCSV0.getStdDevPrec();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 205
  /*Coverage entropy=3.3720780106151977
  */
  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_CountWidth = (-678);
      resultMatrixPlainText0.m_StdDevWidth = 368;
      resultMatrixPlainText0.getOptions();
      resultMatrixPlainText0.clear();
      int int0 = resultMatrixPlainText0.getVisibleRowCount();
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 206
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("No value given for -", "No value given for -");
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 207
  /*Coverage entropy=3.173730847161735
  */
  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.removeFilterName("OI,S");
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
  }

  /**
  //Test case number: 208
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRemoveFilterName(false);
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      assertFalse(resultMatrixGnuPlot0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 209
  /*Coverage entropy=3.2501444518297604
  */
  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.setColNameWidth(0);
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(18, stringArray0.length);
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(45, 0);
      resultMatrixHTML0.getColOrder();
      assertEquals(0, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(45, resultMatrixHTML0.getVisibleColCount());
      
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      assertEquals(40, resultMatrixSignificance1.getRowNameWidth());
  }

  /**
  //Test case number: 210
  /*Coverage entropy=3.21039133978839
  */
  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1);
      double double0 = resultMatrixSignificance0.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      resultMatrixHTML0.getRowHidden(1127);
      int int0 = resultMatrixLatex0.getDisplayCol(4);
      assertEquals((-1), int0);
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
  }

  /**
  //Test case number: 211
  /*Coverage entropy=3.8712010109078947
  */
  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      resultMatrixPlainText0.clear();
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 2;
      intArray0[2] = 0;
      resultMatrixPlainText0.setColOrder(intArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals("Dataset (1) col0 | (2) col1\n---------------------------\n---------------------------\n(v/ /*) | (0/0/0)\n", string0);
      assertEquals(2, resultMatrixPlainText0.getVisibleColCount());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      
      resultMatrixLatex0.getRowHidden((-2326));
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
  }

  /**
  //Test case number: 212
  /*Coverage entropy=2.631612186595399
  */
  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setShowAverage(true);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.getHeader(")");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 213
  /*Coverage entropy=2.7485462919025654
  */
  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.padString("X]K*[|@xHx}%f5.]", 97, true);
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals("                                                                                 X]K*[|@xHx}%f5.]", string0);
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertFalse(resultMatrixPlainText0.getShowAverage());
  }

  /**
  //Test case number: 214
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowAverage(false);
      int[][] intArray0 = new int[0][7];
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 215
  /*Coverage entropy=2.8004698251768687
  */
  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[2];
      resultMatrixLatex0.setRowOrder(intArray0);
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
      assertFalse(resultMatrixLatex0.getShowAverage());
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(0, resultMatrixLatex0.getDefaultStdDevWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      assertFalse(resultMatrixLatex0.getShowStdDev());
  }

  /**
  //Test case number: 216
  /*Coverage entropy=3.2188758248682
  */
  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[0];
      resultMatrixSignificance0.setOptions(stringArray0);
      resultMatrixSignificance0.getColCount();
      resultMatrixSignificance0.getSignificance(44, (-2413));
      assertEquals(0, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 217
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[0];
      resultMatrixLatex0.setRowOrder(intArray0);
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 218
  /*Coverage entropy=3.770875877960794
  */
  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clear();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.removeFilterName("");
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixLatex0.getSignificance(1, 2);
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 219
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.clear();
      double double0 = resultMatrixPlainText0.getCount((-1311));
      assertEquals(0, resultMatrixPlainText0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertFalse(resultMatrixPlainText0.getDefaultRemoveFilterName());
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 220
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.meanPrecTipText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.getColOrder();
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 221
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      String[] stringArray0 = new String[9];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.colNameWidthTipText();
      assertEquals("The maximum width of the column names (0 = optimal).", string0);
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(0, resultMatrixSignificance0.getDefaultSignificanceWidth());
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 222
  /*Coverage entropy=3.610917912644226
  */
  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      
      resultMatrixSignificance0.setOptions((String[]) null);
      int int0 = resultMatrixSignificance0.getSignificanceWidth();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 223
  /*Coverage entropy=3.2794518157267287
  */
  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_RemoveFilterName = true;
      String[] stringArray0 = resultMatrixPlainText0.getOptions();
      assertEquals(20, stringArray0.length);
      
      resultMatrixPlainText0.clearHeader();
      resultMatrixPlainText0.clear();
      resultMatrixPlainText0.clear();
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
  }

  /**
  //Test case number: 224
  /*Coverage entropy=3.220660906912691
  */
  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowStdDev(false);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
  }

  /**
  //Test case number: 225
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      int int0 = resultMatrixGnuPlot0.getCountWidth();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, int0);
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
  }

  /**
  //Test case number: 226
  /*Coverage entropy=2.8513345373297447
  */
  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 2);
      String string0 = resultMatrixSignificance0.toStringKey();
      assertEquals("Key:\n(1) col0\n", string0);
      
      double double0 = resultMatrixSignificance0.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      resultMatrixSignificance0.getDefaultStdDevPrec();
      assertEquals(0, resultMatrixSignificance0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 227
  /*Coverage entropy=2.472422873542602
  */
  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      int[] intArray0 = new int[9];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.assign(resultMatrixHTML0);
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertTrue(resultMatrixHTML0.getPrintColNames());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 228
  /*Coverage entropy=3.3693801921040074
  */
  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setColNameWidth((-720));
      resultMatrixCSV0.getOptions();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 0);
      assertFalse(resultMatrixHTML0.getShowStdDev());
      
      resultMatrixHTML0.setShowStdDev(true);
      resultMatrixHTML0.getColOrder();
      assertTrue(resultMatrixHTML0.getShowStdDev());
  }

  /**
  //Test case number: 229
  /*Coverage entropy=3.332204510175204
  */
  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultPrintRowNames();
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.WIN_STRING = "BHbpc2vx 9nA}iK6[L";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(26, 1);
      resultMatrixCSV0.assign(resultMatrixLatex0);
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixCSV0.m_PrintRowNames = true;
      resultMatrixCSV0.clearHeader();
      resultMatrixLatex0.setShowStdDev(true);
      resultMatrixCSV0.setStdDevPrec((-575));
      resultMatrixCSV0.toStringKey();
      resultMatrixCSV0.getCountWidth();
      int int0 = resultMatrixCSV0.getDefaultStdDevPrec();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 230
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[1];
      try { 
        resultMatrixSignificance0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 231
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setStdDevWidth(56);
      assertEquals(56, resultMatrixGnuPlot0.getStdDevWidth());
  }

  /**
  //Test case number: 232
  /*Coverage entropy=3.120291565301284
  */
  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 2);
      resultMatrixPlainText0.isSignificance(2);
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      assertEquals(2, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(2, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 233
  /*Coverage entropy=3.6871854513502242
  */
  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      String[][] stringArray0 = resultMatrixGnuPlot0.toArray();
      assertEquals(3, stringArray0.length);
      
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
  }

  /**
  //Test case number: 234
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRowNameWidth((-2364));
      int[] intArray0 = new int[16];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
  }

  /**
  //Test case number: 235
  /*Coverage entropy=3.236571964404091
  */
  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setSize(2142, 0);
      assertEquals(2142, resultMatrixLatex0.getVisibleColCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      resultMatrixPlainText0.clear();
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset (1) col0 | (2) col1\n---------------------------\n---------------------------\n(v/ /*) | (0/0/0)\n", string0);
  }

  /**
  //Test case number: 236
  /*Coverage entropy=2.791039810954727
  */
  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixHTML0.setSize(0, 6);
      assertEquals(6, resultMatrixHTML0.getRowCount());
      
      resultMatrixLatex0.m_SignificanceWidth = 2;
      int[][] intArray0 = new int[2][0];
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 237
  /*Coverage entropy=2.803496867629152
  */
  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.clearSummary();
      int[] intArray0 = new int[2];
      resultMatrixLatex0.setRowOrder(intArray0);
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      
      String string0 = resultMatrixSignificance0.getRowName(0);
      assertEquals("row0", string0);
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertFalse(resultMatrixSignificance0.getDefaultShowAverage());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 238
  /*Coverage entropy=3.522952859275876
  */
  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRowNameWidth(46);
      String[] stringArray0 = new String[0];
      ResultMatrixHTML.main(stringArray0);
      resultMatrixGnuPlot0.getPrintRowNames();
      assertEquals(46, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 239
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDisplayName();
      double double0 = resultMatrixSignificance0.getAverage(1);
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0.0, double0, 0.01);
      assertEquals(1, resultMatrixSignificance0.getColCount());
  }

  /**
  //Test case number: 240
  /*Coverage entropy=2.7169774104452054
  */
  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML0.setSignificanceWidth(2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.getRowName(1);
      int[][] intArray0 = new int[2][0];
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      assertEquals(2, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
  }

  /**
  //Test case number: 241
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      
      resultMatrixGnuPlot0.m_MeanPrec = 14;
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.meanWidthTipText();
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 242
  /*Coverage entropy=2.8243648409235025
  */
  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      int[][] intArray0 = new int[4][2];
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixHTML0.getDefaultSignificanceWidth();
      assertEquals(0, resultMatrixHTML0.getVisibleColCount());
      assertEquals(0, resultMatrixHTML0.getRowCount());
      
      resultMatrixGnuPlot0.showAverageTipText();
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 243
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(1, resultMatrixSignificance0.getColCount());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.setRemoveFilterName(true);
      int int0 = resultMatrixCSV0.getMeanPrec();
      assertTrue(resultMatrixCSV0.getRemoveFilterName());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 244
  /*Coverage entropy=3.344941919194126
  */
  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setMeanWidth(910);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals(910, resultMatrixHTML0.getMeanWidth());
      assertEquals("Dataset                      (1) \n---------------------------------\nrow0                     (0)    |\n---------------------------------\n(v/ /*)                         |\n", string0);
  }

  /**
  //Test case number: 245
  /*Coverage entropy=3.7353285255379776
  */
  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixHTML0.setRemoveFilterName(true);
      resultMatrixHTML0.getRevision();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getColName(0);
      resultMatrixLatex0.setColHidden(0, true);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(80, 2);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (double) 2;
      resultMatrixSignificance0.m_Counts = doubleArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixGnuPlot1);
      resultMatrixSignificance0.WIN_STRING = "?/|#xG1voZS27";
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixGnuPlot1);
      resultMatrixSignificance0.toStringMatrix();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringKey();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 246
  /*Coverage entropy=2.668078702217483
  */
  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.toStringRanking();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getColSize((String[][]) null, 37);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 247
  /*Coverage entropy=3.547048482450744
  */
  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      ResultMatrixGnuPlot.main((String[]) null);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.setOptions((String[]) null);
      String[][] stringArray0 = new String[3][9];
      stringArray0[0] = null;
      stringArray0[1] = null;
      String[] stringArray1 = new String[2];
      stringArray1[0] = "";
      stringArray1[1] = "";
      stringArray0[2] = stringArray1;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getColSize(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 248
  /*Coverage entropy=3.309443907283561
  */
  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.clearSummary();
      resultMatrixPlainText0.clear();
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixPlainText0.toStringRanking();
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
  }

  /**
  //Test case number: 249
  /*Coverage entropy=3.3269983979131057
  */
  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.assign(resultMatrixHTML0);
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                      (1) \n---------------------------------\nrow0                     (0)    |\n---------------------------------\n(v/ /*)                         |\n", string0);
      
      resultMatrixLatex0.getColNameWidth();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 250
  /*Coverage entropy=2.743535678836661
  */
  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.clear();
      resultMatrixSignificance0.globalInfo();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 251
  /*Coverage entropy=2.950391601025311
  */
  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(3, 3);
      resultMatrixSignificance0.m_ColNameWidth = 3;
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.removeFilterName("value2");
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "(";
      stringArray0[1] = ")";
      stringArray0[2] = "v";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 0);
      String[][] stringArray1 = new String[0][1];
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getColSize(stringArray1, 2, false, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 252
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_EnumerateRowNames = true;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.clearSummary();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixHTML0.RIGHT_PARENTHESES = "c";
      int int0 = resultMatrixLatex0.getColNameWidth();
      resultMatrixLatex0.globalInfo();
      resultMatrixHTML0.getRevision();
      resultMatrixLatex0.setColHidden(2, true);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      String[][] stringArray0 = new String[3][0];
      String[] stringArray1 = new String[6];
      stringArray1[0] = " ";
      stringArray1[1] = "$circ$";
      stringArray1[2] = "c";
      stringArray1[3] = "$circ$";
      stringArray1[4] = "(";
      stringArray1[5] = "c";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[6];
      stringArray2[0] = " ";
      stringArray2[1] = ")";
      stringArray2[2] = " ";
      stringArray2[3] = "(";
      stringArray2[4] = "c";
      stringArray2[5] = "$circ$";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[1];
      stringArray3[0] = ")";
      stringArray0[2] = stringArray3;
      int int1 = resultMatrixHTML0.getColSize(stringArray0, (-2096), false, true);
      assertEquals(0, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertTrue(int1 == int0);
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, int1);
  }

  /**
  //Test case number: 253
  /*Coverage entropy=3.6280156368701584
  */
  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_ColNameWidth = 3100;
      String[] stringArray0 = resultMatrixPlainText0.getOptions();
      resultMatrixPlainText0.clear();
      String[][] stringArray1 = new String[4][3];
      stringArray1[0] = stringArray0;
      stringArray1[1] = stringArray0;
      stringArray1[2] = stringArray0;
      stringArray1[3] = stringArray0;
      int int0 = resultMatrixPlainText0.getColSize(stringArray1, 30, true, true);
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 254
  /*Coverage entropy=3.1343617096659826
  */
  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixHTML0.setRemoveFilterName(true);
      resultMatrixHTML0.getRevision();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getColName(0);
      resultMatrixLatex0.setColHidden(0, true);
      resultMatrixLatex0.setShowAverage(true);
      int[][] intArray0 = new int[0][7];
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 255
  /*Coverage entropy=3.567468369471728
  */
  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_EnumerateRowNames = false;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixHTML0.RIGHT_PARENTHESES = "c";
      resultMatrixLatex0.getColNameWidth();
      resultMatrixLatex0.globalInfo();
      resultMatrixHTML0.getRevision();
      resultMatrixLatex0.setColHidden(2, false);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      String[][] stringArray0 = new String[3][0];
      String[] stringArray1 = new String[6];
      stringArray1[0] = " ";
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(111, 0);
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixSignificance0.toStringKey();
      resultMatrixSignificance0.getAverage(2736);
      resultMatrixSignificance0.setRowNameWidth(12);
      assertEquals(12, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 256
  /*Coverage entropy=3.764608371223619
  */
  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 0);
      resultMatrixHTML0.setRemoveFilterName(true);
      resultMatrixHTML0.getRevision();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.getColName(1);
      resultMatrixLatex0.setColHidden(1, true);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 2);
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixSignificance0.toStringKey();
      resultMatrixSignificance0.getAverage(2);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance1.setRowNameWidth(2279);
      assertEquals(2279, resultMatrixSignificance1.getRowNameWidth());
  }

  /**
  //Test case number: 257
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      intArray0[1] = 2;
      intArray0[2] = 0;
      intArray0[3] = (-1210);
      intArray0[4] = 2;
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      int[] intArray1 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray1);
      int int0 = resultMatrixGnuPlot0.getColSize((String[][]) null, (-1));
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, int0);
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintRowNames());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
  }

  /**
  //Test case number: 258
  /*Coverage entropy=2.791039810954727
  */
  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(125, 0);
      int[][] intArray0 = new int[1][5];
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 259
  /*Coverage entropy=2.631612186595399
  */
  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 260
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
  }
}
