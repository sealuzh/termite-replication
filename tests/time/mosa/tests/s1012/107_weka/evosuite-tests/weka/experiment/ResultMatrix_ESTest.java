/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 23:39:20 GMT 2019
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.127338682321895
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.setRowHidden((-544), false);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=4.062296579348145
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixSignificance0.setColOrder(intArray0);
      ResultMatrixPlainText.main((String[]) null);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance1);
      resultMatrixHTML0.m_ShowStdDev = true;
      resultMatrixHTML0.m_EnumerateColNames = true;
      resultMatrixHTML0.isStdDev(2);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.127187407834337
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_StdDevPrec = 0;
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      resultMatrixPlainText0.globalInfo();
      resultMatrixPlainText0.getCountWidth();
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.352603208189148
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[9][9];
      boolean[] booleanArray0 = new boolean[2];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      resultMatrixHTML0.m_RowHidden = booleanArray0;
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixHTML0.getSignificanceCount(0, 0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=4.161970993962085
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.LOSS_STRING = "";
      resultMatrixCSV0.m_RemoveFilterName = false;
      resultMatrixCSV0.toString();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "]";
      stringArray0[1] = "";
      stringArray0[2] = " ";
      stringArray0[3] = "]";
      stringArray0[4] = "]";
      stringArray0[5] = " ";
      stringArray0[6] = " ";
      ResultMatrixCSV.main(stringArray0);
      resultMatrixCSV0.setColOrder((int[]) null);
      resultMatrixCSV0.m_RankingWins = null;
      resultMatrixCSV0.isMean(1206);
      resultMatrixCSV0.setStdDevWidth(1206);
      resultMatrixCSV0.getVisibleColCount();
      resultMatrixCSV0.getMean(0, (-1035));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setEnumerateColNames(true);
      resultMatrixSignificance0.clear();
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixCSV0.getColCount();
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.isRowName(2);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=4.193708568413589
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toString();
      resultMatrixLatex0.m_PrintRowNames = false;
      resultMatrixLatex0.getOptions();
      resultMatrixLatex0.clearSummary();
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.341629132163693
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.assign((ResultMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=4.261143675914809
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = resultMatrixLatex0.getOptions();
      resultMatrixLatex0.clearSummary();
      ResultMatrixHTML.main(stringArray0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.541121077179204
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 2);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixHTML0.getMean((-1021), 2);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.933185286116246
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getVisibleRowCount();
      resultMatrixCSV0.setCount((-282), 0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.2562117291522417
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 17);
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 1;
      resultMatrixHTML0.setRowOrder(intArray0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML0.getVisibleColCount();
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.2842228217416776
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setMeanWidth((-391));
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.padString((String) null, (-391), false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.682498995899716
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setCount(0, 0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.7951176032093574
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2426, 1);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clearSummary();
      // Undeclared exception!
      resultMatrixHTML1.toStringMatrix();
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.394079242323584
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 2);
      String[] stringArray0 = new String[3];
      resultMatrixLatex0.m_StdDevPrec = 2;
      int[] intArray0 = new int[0];
      resultMatrixLatex0.m_RankingDiff = intArray0;
      stringArray0[0] = " ";
      resultMatrixLatex0.m_StdDevWidth = (-622);
      resultMatrixLatex0.m_EnumerateRowNames = true;
      stringArray0[1] = " ";
      stringArray0[2] = "(";
      resultMatrixLatex0.m_RowNames = stringArray0;
      boolean boolean0 = true;
      resultMatrixLatex0.setShowStdDev(true);
      resultMatrixLatex0.getColCount();
      String[][] stringArray1 = new String[0][6];
      // Undeclared exception!
      try { 
        resultMatrixLatex0.getColSize(stringArray1, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.4914587692804866
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 2);
      resultMatrixCSV0.getVisibleRowCount();
      resultMatrixCSV0.setCount(1, 1);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.14442386543956
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.setCount(1, (-1906.9988165625));
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.668899399350316
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 2);
      resultMatrixCSV0.setShowStdDev(true);
      resultMatrixSignificance0.m_StdDevPrec = 1;
      resultMatrixSignificance0.assign(resultMatrixCSV0);
      resultMatrixCSV0.toString();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixCSV0.getEnumerateColNames();
      resultMatrixSignificance0.getDisplayCol(0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.4365024712299324
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getVisibleRowCount();
      resultMatrixCSV0.setCount(3395, 1);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.3916781122014155
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getVisibleColCount();
      resultMatrixHTML0.isStdDev(863);
      resultMatrixHTML0.getDefaultStdDevWidth();
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.9331266192872123
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixHTML0.setRowNameWidth(2395);
      resultMatrixHTML0.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clearSummary();
      resultMatrixHTML0.toStringMatrix();
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.4866413644630816
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixHTML0.enumerateColNamesTipText();
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.091358801185712
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      Vector<Integer> vector0 = new Vector<Integer>();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.setRowHidden(0, false);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.098179099260215
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML1);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixHTML1.getMean(0, 0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.319510471991464
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setColOrder(intArray0);
      resultMatrixSignificance0.significanceWidthTipText();
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.5395719426739167
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getRowName(2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.setRowName(0, "*");
      resultMatrixSignificance0.toStringKey();
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.352570608994733
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getSignificanceCount(0, 1);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.2580710002507383
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[5] = 2;
      intArray0[6] = (-505);
      resultMatrixCSV0.setColOrder(intArray0);
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.isSignificance(3393);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.64503614580979
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.TIE_STRING = "";
      resultMatrixSignificance0.getSignificanceWidth();
      resultMatrixSignificance0.getEnumerateRowNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDisplayName();
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      resultMatrixPlainText0.toArray();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      resultMatrixSignificance0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.trimString(" ", 1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.getDefaultPrintColNames();
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.371547683228323
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = true;
      booleanArray0[6] = false;
      booleanArray0[7] = false;
      booleanArray0[8] = false;
      resultMatrixSignificance0.m_ColHidden = booleanArray0;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(3163, 0);
      int[][] intArray0 = new int[0][9];
      resultMatrixHTML0.setRanking(intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getEnumerateColNames();
      resultMatrixSignificance0.getDisplayName();
      resultMatrixHTML0.setStdDev(1749, 26, 1);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.7196197036889833
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 1);
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixCSV0.clearSummary();
      resultMatrixLatex0.setRowOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.7057032471109816
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getSignificanceWidth();
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.getDefaultShowStdDev();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(0, 544);
      resultMatrixHTML1.getDisplayName();
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML(1689, 2);
      resultMatrixHTML2.getSignificance(544, (-1562));
      resultMatrixHTML1.getVisibleRowCount();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.getRevision();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringSummary();
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.8523786320061673
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.TIE_STRING = "";
      resultMatrixSignificance0.getSignificanceWidth();
      resultMatrixSignificance0.getEnumerateRowNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDisplayName();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1628, 2);
      resultMatrixPlainText0.getDisplayName();
      // Undeclared exception!
      resultMatrixPlainText0.toArray();
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.5873543335540856
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.getRowName(0);
      assertNotNull(string0);
      assertEquals("row0", string0);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.setRowName((-612), "(");
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      double double0 = resultMatrixHTML0.getMean(0, 1);
      assertEquals(0.0, double0, 0.01);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.7174226777079626
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      resultMatrixGnuPlot0.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixGnuPlot0.toArray();
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.getDefaultShowAverage();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setMeanPrec(1389);
      resultMatrixGnuPlot0.m_ShowStdDev = false;
      resultMatrixCSV0.getRevision();
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getDefaultMeanPrec();
      resultMatrixGnuPlot0.countWidthTipText();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      
      resultMatrixCSV0.headerKeys();
      resultMatrixCSV0.trimString((String) null, (-1405));
      assertEquals(1389, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.299907461977713
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.setRowName(1, "*");
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.getMean(1, (-145));
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(40, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      
      int int0 = resultMatrixSignificance0.getDisplayCol((-145));
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertFalse(resultMatrixSignificance0.getDefaultRemoveFilterName());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.452621422070103
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDisplayName();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(0, 318);
      resultMatrixHTML0.getSignificance(1, 934);
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      
      resultMatrixHTML1.getVisibleRowCount();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRevision();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowStdDev());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.236686363768168
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      int[][] intArray0 = new int[4][7];
      int[] intArray1 = new int[9];
      intArray1[0] = 1;
      intArray1[1] = 2;
      intArray1[2] = 0;
      intArray1[3] = 2;
      intArray1[4] = 2;
      intArray1[5] = 0;
      intArray1[6] = 0;
      intArray1[7] = 1;
      intArray1[8] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 1;
      intArray2[1] = 1;
      intArray2[2] = 1;
      intArray2[3] = 0;
      intArray2[4] = 1;
      intArray2[5] = 0;
      intArray2[6] = 1;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[7];
      intArray3[0] = 1;
      intArray3[1] = 2;
      intArray3[2] = 97;
      intArray3[3] = 1;
      intArray3[4] = 0;
      intArray3[5] = 0;
      intArray3[6] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[4];
      intArray4[0] = 1;
      intArray4[1] = 0;
      intArray4[2] = 97;
      intArray4[3] = 1;
      intArray0[3] = intArray4;
      resultMatrixSignificance0.m_Wins = intArray0;
      resultMatrixSignificance0.TIE_STRING = "";
      resultMatrixSignificance0.getSignificanceWidth();
      resultMatrixSignificance0.padString("", 0);
      resultMatrixSignificance0.getEnumerateRowNames();
      int[][] intArray5 = new int[2][5];
      int[] intArray6 = new int[6];
      intArray6[1] = 0;
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.4896072249698613
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixSignificance0.assign(resultMatrixHTML0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(496, 1);
      assertEquals(496, resultMatrixGnuPlot0.getVisibleColCount());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
      
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      boolean boolean0 = resultMatrixHTML1.isStdDev(496);
      assertFalse(boolean0);
      
      resultMatrixHTML0.getAverage((-2357));
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(40, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertFalse(resultMatrixSignificance0.getShowAverage());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.7168837929956884
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 0);
      assertFalse(resultMatrixGnuPlot0.getEnumerateColNames());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 123);
      resultMatrixCSV0.setShowAverage(false);
      resultMatrixCSV0.getEnumerateColNames();
      int int0 = resultMatrixSignificance1.getDisplayCol(1520);
      assertEquals((-1), int0);
      
      String string0 = resultMatrixCSV0.removeFilterNameTipText();
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(123, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals("Whether to remove the classname package prefixes from the filter names in datasets.", string0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.4914587692804866
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getMean(26, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.getRevision();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.4920285698502873
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML1.getMean(0, 2);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.675228971590884
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      resultMatrixSignificance0.assign(resultMatrixHTML0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.getEnumerateColNames();
      int int0 = resultMatrixSignificance0.getDisplayCol((-4073));
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.2735839910650055
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_EnumerateRowNames = false;
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixHTML0.setStdDev(30, 30, 0.0);
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertFalse(resultMatrixHTML0.getShowAverage());
      assertFalse(resultMatrixHTML0.getShowStdDev());
      assertFalse(resultMatrixHTML0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.9934838446656764
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance2);
      resultMatrixLatex0.getOptions();
      resultMatrixSignificance0.getAverage(1);
      resultMatrixSignificance1.m_ShowStdDev = false;
      resultMatrixSignificance0.setRowNameWidth(1);
      assertEquals(1, resultMatrixSignificance0.getRowNameWidth());
      
      resultMatrixSignificance2.addHeader("", "(");
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance2);
      resultMatrixCSV0.getMeanWidth();
      resultMatrixCSV0.setStdDev((-2319), 18, 0.0);
      assertEquals(0, resultMatrixSignificance2.getStdDevWidth());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=4.125654179782988
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 6);
      resultMatrixSignificance0.getRowName((-1522));
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.getDefaultCountWidth();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.getRevision();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.setSize(2, 125);
      resultMatrixGnuPlot0.getDefaultPrintRowNames();
      resultMatrixGnuPlot0.listOptions();
      resultMatrixGnuPlot0.setCountWidth((-1667));
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.toArray();
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      assertEquals(2, resultMatrixGnuPlot0.getColCount());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.getEnumerateColNames();
      resultMatrixSignificance0.getDisplayCol(6);
      String string0 = resultMatrixHTML0.meanWidthTipText();
      assertEquals("The width of the mean (0 = optimal).", string0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.4146799927432747
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 1);
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixCSV0.clearSummary();
      resultMatrixLatex0.setRowOrder(intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray1 = new int[3][0];
      int[] intArray2 = new int[3];
      intArray2[0] = 0;
      intArray2[1] = 0;
      intArray1[0] = intArray2;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      resultMatrixHTML0.setRanking(intArray1);
      resultMatrixSignificance0.getCount(1);
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.6743501266442427
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.TIE_STRING = "";
      resultMatrixSignificance0.getSignificanceWidth();
      resultMatrixSignificance0.getEnumerateRowNames();
      int[][] intArray0 = new int[2][5];
      int[] intArray1 = new int[1];
      intArray1[0] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[6];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.setColName(0, "");
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=4.052203407401363
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getOptions();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.319510471991464
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixSignificance0.setEnumerateColNames(true);
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixCSV0.setColOrder(intArray0);
      resultMatrixCSV0.getDefaultEnumerateColNames();
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.359046124061186
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.WIN_STRING = "";
      int int0 = resultMatrixSignificance0.getSignificanceWidth();
      assertEquals(0, int0);
      
      resultMatrixSignificance0.getDefaultShowStdDev();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDisplayName();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(1555, 2);
      resultMatrixHTML1.getSignificance(0, 1);
      int int1 = resultMatrixHTML1.getVisibleRowCount();
      assertEquals(2, int1);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRevision();
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowStdDev());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.5875941774962454
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.assign(resultMatrixCSV0);
      boolean boolean0 = resultMatrixSignificance0.getEnumerateRowNames();
      assertFalse(boolean0);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixSignificance0);
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertTrue(resultMatrixCSV1.getEnumerateColNames());
      assertFalse(resultMatrixSignificance0.getShowStdDev());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      
      resultMatrixCSV0.setColName((-544), "");
      assertFalse(resultMatrixCSV0.getDefaultRemoveFilterName());
      assertEquals(1, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=4.110206009068908
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(2, 0);
      resultMatrixPlainText1.setPrintRowNames(true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      String string0 = resultMatrixGnuPlot0.toString();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"(1)\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      resultMatrixPlainText1.getStdDev(0, 1182);
      assertEquals(2, resultMatrixPlainText1.getVisibleColCount());
      assertFalse(resultMatrixPlainText1.getEnumerateRowNames());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getColCount();
      resultMatrixHTML0.getPrintColNames();
      ResultMatrixSignificance resultMatrixSignificance3 = new ResultMatrixSignificance(resultMatrixHTML0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot1);
      resultMatrixLatex0.setRowName(1, "");
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      assertFalse(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.5404573970730153
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.m_ShowStdDev = true;
      intArray0[0] = 1;
      double double0 = resultMatrixSignificance0.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      int int0 = resultMatrixCSV0.getVisibleColCount();
      assertEquals(1, int0);
      
      resultMatrixSignificance0.showStdDevTipText();
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(0, resultMatrixSignificance0.getDefaultSignificanceWidth());
      assertTrue(resultMatrixSignificance0.getDefaultPrintRowNames());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.319510471991464
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setColOrder(intArray0);
      resultMatrixCSV0.getDefaultEnumerateColNames();
      boolean boolean0 = resultMatrixSignificance0.getRemoveFilterName();
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertFalse(boolean0);
      assertEquals(0, resultMatrixSignificance0.getDefaultSignificanceWidth());
      assertEquals(0, resultMatrixSignificance0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.1926273457353362
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.setRowName(2, "v");
      resultMatrixLatex0.toStringSummary();
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getDefaultCountWidth());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.633886498887349
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultPrintColNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(1, 0);
      resultMatrixCSV0.setColName(1522, "");
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.541904636676301
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.assign(resultMatrixCSV0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 2);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixGnuPlot1);
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertEquals(50, resultMatrixCSV1.getRowNameWidth());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      assertFalse(resultMatrixCSV1.getEnumerateColNames());
      assertTrue(resultMatrixCSV1.getPrintRowNames());
      assertFalse(resultMatrixCSV1.getEnumerateRowNames());
      assertTrue(resultMatrixCSV1.getPrintColNames());
      
      resultMatrixCSV0.setColName(1, "*");
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(0, resultMatrixCSV0.getDefaultSignificanceWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.4432298253644733
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.TIE_STRING = "";
      resultMatrixSignificance0.getSignificanceWidth();
      resultMatrixSignificance0.getEnumerateRowNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.getDefaultPrintRowNames();
      resultMatrixGnuPlot0.listOptions();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.getDisplayName();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.57079576929331
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setRowNameWidth((-2898));
      int int0 = resultMatrixCSV0.getVisibleRowCount();
      assertEquals(1, int0);
      assertFalse(resultMatrixCSV0.getShowStdDev());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      
      resultMatrixSignificance0.getDisplayCol(17);
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertTrue(resultMatrixSignificance0.getDefaultEnumerateColNames());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.402159044936829
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int int0 = resultMatrixCSV0.getVisibleRowCount();
      assertEquals(1, int0);
      
      int int1 = resultMatrixSignificance0.getDisplayCol(1);
      assertEquals((-1), int1);
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.3568212171863077
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.setRowName(1, "*");
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixSignificance0.setCountWidth(0);
      resultMatrixHTML0.m_ColOrder = null;
      resultMatrixHTML0.getMean(1, (-145));
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex1);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setSize(2, (-825));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.3477835873415405
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setColOrder((int[]) null);
      resultMatrixCSV0.getRowHidden(0);
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getDefaultStdDevWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertFalse(resultMatrixCSV0.getDefaultShowAverage());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=4.108124616554841
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_ShowAverage = true;
      resultMatrixSignificance0.toStringRanking();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.getOptions();
      resultMatrixSignificance0.setStdDevWidth(1);
      resultMatrixLatex0.clearSummary();
      resultMatrixSignificance0.assign(resultMatrixLatex0);
      resultMatrixSignificance0.getSignificanceWidth();
      assertTrue(resultMatrixSignificance0.getShowAverage());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRevision();
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.294457149609806
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.getAverage(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance();
      resultMatrixLatex0.globalInfo();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.trimString((String) null, 3204);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.7943256572304147
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.TIE_STRING = "";
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = resultMatrixLatex0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixSignificance0.setStdDevWidth((-2452));
      resultMatrixLatex0.clearSummary();
      resultMatrixSignificance1.assign(resultMatrixSignificance0);
      resultMatrixSignificance1.getSignificanceWidth();
      double double0 = resultMatrixSignificance1.getCount(2476);
      assertEquals(0, resultMatrixSignificance1.getMeanWidth());
      assertEquals(40, resultMatrixSignificance1.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance1.getStdDevWidth());
      assertTrue(resultMatrixSignificance1.getPrintRowNames());
      assertEquals(2, resultMatrixSignificance1.getMeanPrec());
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, resultMatrixSignificance1.getCountWidth());
      assertEquals(0, resultMatrixSignificance1.getColNameWidth());
      assertFalse(resultMatrixSignificance1.getShowAverage());
      assertEquals(2, resultMatrixSignificance1.getStdDevPrec());
      assertEquals(1, resultMatrixSignificance1.getRowCount());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.7787410595348376
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      String string0 = resultMatrixGnuPlot0.toString();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"(1)\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getStdDev(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(0, 221);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixLatex1);
      resultMatrixHTML1.getColCount();
      resultMatrixHTML1.getPrintColNames();
      assertEquals(221, resultMatrixHTML1.getRowCount());
      
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixCSV0);
      assertEquals(0, resultMatrixSignificance1.getCountWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      assertEquals(50, resultMatrixGnuPlot1.getRowNameWidth());
      assertTrue(resultMatrixGnuPlot1.getPrintColNames());
      
      resultMatrixLatex0.setRowName(1, "$circ$");
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.2282744338409093
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      
      resultMatrixSignificance0.m_ColNameWidth = 1402;
      int int0 = resultMatrixSignificance0.getMeanPrec();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=4.213511364992523
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.setCountWidth(1);
      resultMatrixSignificance0.setOptions((String[]) null);
      ResultMatrixLatex.main((String[]) null);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.3432782766699805
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int int0 = resultMatrixHTML0.getSignificanceCount((-1712), (-1712));
      assertEquals(0, int0);
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=4.080546327545416
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.clearSummary();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getColNameWidth();
      resultMatrixLatex0.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.setColHidden(1, true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 2);
      resultMatrixGnuPlot0.removeFilterName("WMZYI1M{MmF.3n");
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
      
      resultMatrixGnuPlot0.setShowStdDev(true);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot1.getRowOrder();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0, resultMatrixGnuPlot1.getSignificanceWidth());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.2245907461411627
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixPlainText0.getRowNameWidth();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getHeader("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.337588728123289
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = (-4373);
      intArray0[3] = 0;
      intArray0[4] = 1;
      resultMatrixLatex0.m_RankingWins = intArray0;
      resultMatrixLatex0.m_CountWidth = 48;
      resultMatrixLatex0.setColNameWidth((-896));
      int int0 = resultMatrixLatex0.getRowNameWidth();
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(0, int0);
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.6954160528334046
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getRowName(0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML1);
      resultMatrixPlainText0.getRevision();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.toStringRanking();
      resultMatrixGnuPlot0.getDefaultPrintRowNames();
      resultMatrixGnuPlot1.listOptions();
      resultMatrixGnuPlot1.setCountWidth(1);
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.toArray();
      resultMatrixGnuPlot1.getDefaultMeanWidth();
      assertEquals(1, resultMatrixGnuPlot1.getCountWidth());
      
      resultMatrixSignificance0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText0.trimString("", 1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.getEnumerateRowNames();
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.242497825476122
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV1.getRowCount());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      int int0 = resultMatrixHTML0.getSignificanceCount(0, 0);
      assertEquals(0, int0);
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
      assertFalse(resultMatrixHTML0.getShowAverage());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixHTML0.getDefaultSignificanceWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.755303241932098
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.TIE_STRING = "";
      resultMatrixSignificance0.getSignificanceWidth();
      resultMatrixSignificance0.getEnumerateRowNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDisplayName();
      int[][] intArray0 = new int[2][5];
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(3, 16);
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.setPrintRowNames(false);
      resultMatrixPlainText0.getStdDev((-1741), 875);
      assertTrue(resultMatrixPlainText0.getEnumerateRowNames());
      
      resultMatrixHTML0.getColCount();
      boolean boolean0 = resultMatrixHTML0.getPrintColNames();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.3925952244510262
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 3709);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 3709;
      intArray0[2] = 0;
      intArray0[3] = 3709;
      resultMatrixSignificance0.m_RankingLosses = intArray0;
      // Undeclared exception!
      resultMatrixSignificance0.toStringRanking();
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.3351311734455087
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      double double0 = resultMatrixSignificance1.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      resultMatrixSignificance1.setRowNameWidth(0);
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(resultMatrixSignificance0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixSignificance2.getDefaultColNameWidth();
      assertEquals(0, resultMatrixSignificance2.getSignificanceWidth());
      assertTrue(resultMatrixSignificance2.getPrintRowNames());
      assertEquals(2, resultMatrixSignificance2.getStdDevPrec());
      assertTrue(resultMatrixSignificance2.getEnumerateColNames());
      assertEquals(2, resultMatrixSignificance2.getMeanPrec());
      assertEquals(0, resultMatrixSignificance2.getCountWidth());
      assertEquals(40, resultMatrixSignificance2.getRowNameWidth());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.29136219522066
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int int0 = resultMatrixHTML0.getVisibleRowCount();
      assertEquals(1, int0);
      
      resultMatrixHTML0.getDefaultShowStdDev();
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertFalse(resultMatrixHTML0.getShowAverage());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=4.054624512873263
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      int[] intArray0 = new int[3];
      intArray0[1] = 0;
      intArray0[2] = 1;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "v";
      stringArray0[1] = " ";
      stringArray0[2] = "v";
      ResultMatrixCSV.main(stringArray0);
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1553);
      resultMatrixLatex0.stdDevWidthTipText();
      boolean boolean0 = resultMatrixLatex0.isRowName((-832));
      assertFalse(resultMatrixLatex0.getShowAverage());
      assertFalse(boolean0);
      assertEquals(1553, resultMatrixLatex0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.3940014245149444
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1233);
      resultMatrixSignificance0.getEnumerateRowNames();
      int[][] intArray0 = new int[0][1];
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.2886062789553234
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.1415832925907017
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixSignificance0.setMeanWidth((-218));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.setRowHidden(0, false);
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertFalse(resultMatrixLatex0.getShowAverage());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.765977347528626
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.getRowName(0);
      assertEquals("row0", string0);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML1);
      resultMatrixPlainText0.getDefaultCountWidth();
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      String[] stringArray0 = resultMatrixLatex0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixLatex0.clearSummary();
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      assertEquals(1, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=4.10795933276257
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.TIE_STRING = "";
      resultMatrixSignificance0.getSignificanceWidth();
      resultMatrixSignificance0.getEnumerateRowNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      String[] stringArray0 = resultMatrixLatex0.getOptions();
      assertEquals(19, stringArray0.length);
      
      resultMatrixLatex0.clearSummary();
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(5, resultMatrixLatex0.getCountWidth());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.4982989530901043
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.TIE_STRING = "";
      resultMatrixSignificance0.getSignificanceWidth();
      resultMatrixSignificance0.getEnumerateRowNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(97, 1);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixLatex0.setRowOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.removeFilterName("# end #\n");
      resultMatrixHTML0.m_RankingDiff = intArray0;
      resultMatrixHTML0.getColOrder();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[][] stringArray0 = new String[0][5];
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.getColSize(stringArray0, 1, false, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.4906817685034857
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 957);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.6316774220360197
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRevision();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertTrue(resultMatrixHTML0.getPrintColNames());
      assertFalse(resultMatrixHTML0.getEnumerateColNames());
      
      resultMatrixCSV0.setMeanPrec((-346));
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getRowNameWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.6739215989429876
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.TIE_STRING = "";
      int int0 = resultMatrixSignificance0.getSignificanceWidth();
      assertEquals(0, int0);
      
      resultMatrixSignificance0.getEnumerateRowNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDisplayName();
      int[][] intArray0 = new int[2][5];
      int[] intArray1 = new int[1];
      intArray1[0] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[6];
      intArray2[0] = 0;
      intArray2[1] = 1;
      intArray2[2] = 0;
      intArray2[3] = (-1087);
      intArray2[4] = 2;
      intArray2[5] = 0;
      resultMatrixHTML0.getColName((-4488));
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
      
      boolean boolean0 = resultMatrixSignificance0.getEnumerateRowNames();
      assertFalse(boolean0);
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.1913662210863794
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.TIE_STRING = "-ranking data not set-";
      int int0 = resultMatrixSignificance0.getSignificanceWidth();
      assertEquals(0, int0);
      
      resultMatrixSignificance0.getEnumerateRowNames();
      int[][] intArray0 = new int[2][5];
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      resultMatrixSignificance0.getDefaultShowAverage();
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertTrue(resultMatrixSignificance0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.35897557747024
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.TIE_STRING = "";
      resultMatrixSignificance0.getSignificanceWidth();
      resultMatrixSignificance0.getEnumerateRowNames();
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getVisibleRowCount();
      resultMatrixCSV0.setSignificance(0, 77, 1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 1);
      resultMatrixHTML0.getRevision();
      boolean boolean0 = resultMatrixHTML0.getDefaultShowAverage();
      assertFalse(boolean0);
      
      resultMatrixHTML0.getVisibleRowCount();
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.3775005815838193
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.getRowName(0);
      assertNotNull(string0);
      assertEquals("row0", string0);
      
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.getAverage(69);
      resultMatrixSignificance1.getEnumerateRowNames();
      assertEquals(2, resultMatrixSignificance1.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixSignificance1.getSignificanceWidth());
      assertEquals(2, resultMatrixSignificance1.getMeanPrec());
      assertEquals(1, resultMatrixSignificance1.getColCount());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.2959833487479218
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getRowName(0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.setRowName(0, "z?hJZ(9-\"u4");
      resultMatrixLatex0.m_StdDevPrec = 53;
      resultMatrixLatex0.toStringSummary();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.doubleToString(1, (-389));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.289476674219111
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      Vector<Integer> vector0 = new Vector<Integer>();
      String string0 = resultMatrixSignificance0.doubleToString(1107.41974348587, 54);
      assertEquals("1107.419743485870000000000000000000000000000000000000000000", string0);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.setRowHidden(0, false);
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(40, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      
      int int0 = resultMatrixSignificance0.getVisibleColCount();
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.3293362529313475
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.clearHeader();
      resultMatrixHTML0.setPrintRowNames(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(0, 0);
      resultMatrixHTML0.m_CountWidth = (-1621);
      resultMatrixGnuPlot1.removeFilterName("Original array (doubles): ");
      resultMatrixGnuPlot1.setShowStdDev(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot2.getColSize((String[][]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.695697327335482
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(3, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText0.setPrintRowNames(true);
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      String string0 = resultMatrixGnuPlot0.toString();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n\n# data for the plot\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:1]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"(1)\"\nreplot \"plot.dat\" using 1:3 with lines title \"(2)\"\nreplot \"plot.dat\" using 1:4 with lines title \"(3)\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      resultMatrixPlainText1.getStdDev(3, 54);
      assertEquals(2, resultMatrixPlainText1.getMeanPrec());
      assertEquals(0, resultMatrixPlainText1.getSignificanceWidth());
      assertFalse(resultMatrixPlainText1.getShowStdDev());
      assertEquals(25, resultMatrixPlainText1.getRowNameWidth());
      assertTrue(resultMatrixPlainText1.getPrintColNames());
      assertEquals(0, resultMatrixPlainText1.getStdDevWidth());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getColCount();
      resultMatrixHTML0.getPrintColNames();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixCSV0.getMeanWidth();
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.491384447467034
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixPlainText0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV1);
      boolean boolean0 = resultMatrixSignificance0.isRowName(1);
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertFalse(boolean0);
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.4800499964889426
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(0, 0);
      String string0 = resultMatrixGnuPlot1.removeFilterName("Original array (doubles ");
      assertEquals("Original array (doubles ", string0);
      
      resultMatrixGnuPlot1.setShowStdDev(false);
      assertFalse(resultMatrixGnuPlot1.getShowStdDev());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int int0 = resultMatrixHTML0.getVisibleRowCount();
      assertEquals(1, int0);
      
      resultMatrixHTML0.getRowHidden(1);
      assertEquals(0, resultMatrixHTML0.getDefaultStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.964052401116223
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.enumerateRowNamesTipText();
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.5396680687913826
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[1][4];
      int[] intArray1 = new int[5];
      intArray1[0] = 0;
      intArray1[4] = 0;
      intArray0[0] = intArray1;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getCount(107);
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(0, resultMatrixSignificance0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.9949101173770223
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.toString();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.toStringRanking();
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.6286449008606567
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_RowNameWidth = (-541);
      resultMatrixLatex0.printColNamesTipText();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.4649490869014703
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(3163, 0);
      int[][] intArray0 = new int[0][9];
      resultMatrixHTML0.setRanking(intArray0);
      int int0 = resultMatrixHTML0.getSignificance(2, 97);
      assertEquals(0, int0);
      
      resultMatrixHTML0.getVisibleRowCount();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRevision();
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintRowNames());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.635287227825461
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[][] stringArray0 = resultMatrixCSV0.toArray();
      assertEquals(3, stringArray0.length);
      
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setColOrder(intArray0);
      resultMatrixCSV0.getDefaultMeanPrec();
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.320916565061434
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixHTML0.stdDevPrecTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clear();
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.6996185073061625
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.clearHeader();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getColNameWidth();
      resultMatrixLatex0.globalInfo();
      resultMatrixHTML0.getRevision();
      resultMatrixLatex0.setColHidden((-3904), true);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(2, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot2.removeFilterName(" ");
      resultMatrixGnuPlot2.setShowStdDev(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot3 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.getRowOrder();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.6304437108786445
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.getSignificanceWidth();
      resultMatrixSignificance0.getEnumerateRowNames();
      int[][] intArray0 = new int[2][5];
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.toStringKey();
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(40, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.209708507630964
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixHTML0.getDisplayRow(16);
      assertFalse(resultMatrixHTML0.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixHTML0.getDefaultStdDevWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
      assertFalse(resultMatrixHTML0.getDefaultShowAverage());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.436976292599276
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      boolean[] booleanArray0 = new boolean[1];
      booleanArray0[0] = false;
      resultMatrixCSV0.m_ColHidden = booleanArray0;
      resultMatrixCSV0.getVisibleRowCount();
      resultMatrixCSV0.setSignificance(1, (-937), (-937));
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(225, 1359);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.4279193191717585
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int int0 = resultMatrixHTML0.getSignificanceCount(0, 1);
      assertEquals(0, int0);
      
      resultMatrixCSV0.enumerateColNamesTipText();
      assertFalse(resultMatrixCSV0.getShowStdDev());
      
      resultMatrixSignificance0.setSignificance(2, 264, (-283));
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertFalse(resultMatrixSignificance0.getDefaultShowAverage());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertTrue(resultMatrixSignificance0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.28792796190212
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.assign(resultMatrixCSV0);
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      
      resultMatrixSignificance0.m_StdDevPrec = 66;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 2);
      resultMatrixCSV0.getEnumerateColNames();
      resultMatrixSignificance0.getDisplayCol(0);
      resultMatrixSignificance0.isMean(1);
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.793891340712501
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.TIE_STRING = "";
      resultMatrixSignificance0.getSignificanceWidth();
      resultMatrixSignificance0.getEnumerateRowNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixLatex0.setRowOrder(intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      assertEquals(0, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringRanking();
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertFalse(resultMatrixGnuPlot0.getEnumerateColNames());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getEnumerateColNames();
      int int0 = resultMatrixSignificance0.getDisplayCol(2);
      assertEquals((-1), int0);
      
      resultMatrixLatex0.countWidthTipText();
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertFalse(resultMatrixLatex0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.417120154980259
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[9][9];
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixHTML0.getSignificanceCount(0, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.getRevision();
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.224059713947336
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "(";
      stringArray0[1] = "$circ$";
      stringArray0[2] = "(";
      stringArray0[3] = " ";
      stringArray0[4] = "$circ$";
      stringArray0[5] = " ";
      stringArray0[6] = "$\bullet$";
      stringArray0[7] = "$circ$";
      resultMatrixSignificance0.toStringSummary();
      stringArray0[8] = "$circ$";
      resultMatrixCSV0.m_RowNames = stringArray0;
      resultMatrixSignificance0.setStdDevWidth(1);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.assign(resultMatrixCSV0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=3.701783512156209
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      int[] intArray0 = new int[3];
      intArray0[1] = 0;
      intArray0[2] = 1;
      resultMatrixHTML0.m_RankingWins = intArray0;
      resultMatrixHTML0.m_PrintColNames = true;
      resultMatrixHTML0.getColOrder();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      String string0 = resultMatrixHTML0.getColName(0);
      assertNull(string0);
      assertFalse(resultMatrixHTML0.getShowStdDev());
      
      resultMatrixSignificance0.getEnumerateRowNames();
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=4.053947501265323
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.setPrintRowNames(true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.getRevision();
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      
      resultMatrixPlainText0.setPrintRowNames(true);
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      String string0 = resultMatrixGnuPlot0.toString();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      resultMatrixPlainText0.getStdDev(0, (-2358));
      resultMatrixHTML0.getColCount();
      resultMatrixHTML0.getPrintColNames();
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixCSV0.getMeanWidth();
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertFalse(resultMatrixCSV0.getPrintColNames());
      assertFalse(resultMatrixCSV0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.440014200405378
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot1);
      resultMatrixGnuPlot0.setPrintRowNames(true);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "*";
      try { 
        resultMatrixSignificance0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.38930087018326
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      int int0 = resultMatrixCSV0.getVisibleRowCount();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int int1 = resultMatrixSignificance0.getDisplayCol(0);
      assertTrue(int1 == int0);
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(0, int1);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=4.162513428100292
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(11, 0);
      resultMatrixCSV0.getRowName((-876));
      resultMatrixCSV0.meanWidthTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getRevision();
      resultMatrixLatex0.padString("9qXb*==P_>SX:yDI", 11);
      resultMatrixLatex0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV2.getDefaultRowNameWidth();
      resultMatrixCSV1.getVisibleRowCount();
      resultMatrixLatex0.setPrintRowNames(false);
      resultMatrixCSV1.getDisplayName();
      resultMatrixLatex0.setMean(82, (-876), 1);
      ResultMatrixCSV resultMatrixCSV3 = new ResultMatrixCSV();
      resultMatrixCSV3.getStdDevWidth();
      resultMatrixCSV1.getRowCount();
      resultMatrixLatex0.printRowNamesTipText();
      resultMatrixCSV2.setRowNameWidth(2);
      assertTrue(resultMatrixLatex0.getEnumerateRowNames());
      
      resultMatrixCSV1.setRowHidden(76, false);
      resultMatrixCSV0.setRemoveFilterName(false);
      resultMatrixCSV1.toStringSummary();
      assertEquals(0, resultMatrixCSV1.getColNameWidth());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=3.541826470488529
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.getRowName((-2641));
      assertNull(string0);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      double double0 = resultMatrixSignificance1.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      resultMatrixLatex0.setRowName(1, "'0nKm");
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=3.857803796431461
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 16);
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      resultMatrixGnuPlot0.toStringRanking();
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=3.6064490455582465
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(97, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(7, 2);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = ")";
      resultMatrixGnuPlot0.setSignificanceWidth(1);
      stringArray0[1] = "";
      stringArray0[2] = "v";
      stringArray0[3] = "*";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = " ";
      stringArray0[7] = " ";
      resultMatrixSignificance0.setOptions(stringArray0);
      assertEquals(1, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.2886376536297757
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 2);
      resultMatrixSignificance0.assign(resultMatrixCSV0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixSignificance0.setEnumerateRowNames(false);
      resultMatrixCSV0.getEnumerateColNames();
      int int0 = resultMatrixSignificance0.getDisplayCol(0);
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=3.5860919583088093
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getSummaryTitle(0);
      resultMatrixGnuPlot0.setSignificanceWidth(0);
      resultMatrixGnuPlot0.RIGHT_PARENTHESES = "A}roDNWxdl%`yQzclF";
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSize((-336), 1);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=4.142721006995809
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_ColNameWidth = 383;
      resultMatrixPlainText0.clearHeader();
      resultMatrixPlainText0.removeFilterName((String) null);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "v";
      stringArray0[1] = "*";
      stringArray0[2] = "*";
      stringArray0[3] = " ";
      stringArray0[4] = "v";
      stringArray0[5] = "*";
      stringArray0[6] = "*";
      stringArray0[7] = "(";
      stringArray0[8] = "vF";
      resultMatrixHTML0.setOptions(stringArray0);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.showAverageTipText();
      resultMatrixPlainText0.m_RemoveFilterName = true;
      resultMatrixPlainText0.getRowOrder();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixHTML0.getSignificanceWidth();
      assertEquals(0, resultMatrixHTML0.getStdDevPrec());
      
      String[] stringArray1 = new String[5];
      stringArray1[0] = "*";
      stringArray1[1] = null;
      stringArray1[2] = ")";
      stringArray1[3] = ")";
      stringArray1[4] = ")";
      ResultMatrixPlainText.main(stringArray1);
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.2634978131488714
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setPrintColNames(true);
      resultMatrixHTML0.m_EnumerateColNames = true;
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      assertTrue(resultMatrixHTML0.getPrintColNames());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.6740798229376517
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.TIE_STRING = "";
      resultMatrixSignificance0.getSignificanceWidth();
      resultMatrixSignificance0.getEnumerateRowNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = resultMatrixLatex0.getOptions();
      resultMatrixSignificance0.setStdDevWidth(0);
      resultMatrixLatex0.clearSummary();
      resultMatrixSignificance0.assign(resultMatrixHTML0);
      resultMatrixSignificance0.getSignificanceWidth();
      String[][] stringArray1 = new String[8][3];
      stringArray1[0] = stringArray0;
      stringArray1[1] = stringArray0;
      stringArray1[2] = stringArray0;
      stringArray1[3] = stringArray0;
      stringArray1[4] = stringArray0;
      stringArray1[5] = stringArray0;
      stringArray1[6] = stringArray0;
      String[] stringArray2 = new String[6];
      stringArray2[0] = "*";
      stringArray2[1] = "$\bullet$";
      stringArray2[2] = "(";
      stringArray2[3] = "";
      stringArray2[4] = "";
      stringArray2[5] = "v";
      stringArray1[7] = stringArray2;
      resultMatrixSignificance0.getColSize(stringArray1, 0, false, false);
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      
      resultMatrixLatex0.getDefaultEnumerateColNames();
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=4.0786580772780665
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.setOptions((String[]) null);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      assertEquals(0, resultMatrixSignificance0.getStdDevPrec());
      
      ResultMatrixLatex.main((String[]) null);
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.trimString("*", 1572);
      resultMatrixHTML0.addHeader(".*DJaJ)bo>", " ");
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=4.0926237216139585
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.m_RowNameWidth = 1;
      resultMatrixSignificance0.setOptions((String[]) null);
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      ResultMatrixLatex.main((String[]) null);
      resultMatrixHTML0.getDefaultMeanWidth();
      assertTrue(resultMatrixHTML0.getPrintRowNames());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=3.995450479014048
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      double double0 = resultMatrixSignificance0.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.toArray();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getRevision();
      String string0 = resultMatrixPlainText0.trimString("$Revision:", 2);
      assertEquals("$R", string0);
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixSignificance0);
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int int0 = resultMatrixHTML0.getVisibleRowCount();
      assertEquals(1, int0);
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertFalse(resultMatrixHTML0.getShowStdDev());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=3.2857358645566332
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.getRowName(0);
      resultMatrixSignificance0.showAverageTipText();
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getColCount();
      resultMatrixHTML0.getPrintColNames();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV1.getDefaultRowNameWidth();
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertTrue(resultMatrixCSV1.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertTrue(resultMatrixCSV1.getPrintRowNames());
      
      resultMatrixCSV0.getMeanWidth();
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.14449331470687
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertTrue(resultMatrixSignificance0.getDefaultEnumerateColNames());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 2;
      intArray0[3] = 0;
      intArray0[4] = 1;
      resultMatrixCSV0.setColOrder(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixGnuPlot0.getDefaultSignificanceWidth();
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=3.447928546838119
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      resultMatrixLatex0.setPrintRowNames(true);
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      double double0 = resultMatrixSignificance1.getAverage(1);
      assertEquals(0.0, double0, 0.01);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      boolean boolean0 = resultMatrixCSV0.getEnumerateColNames();
      assertTrue(boolean0);
      
      resultMatrixSignificance1.getDisplayName();
      resultMatrixCSV0.toStringSummary();
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertFalse(resultMatrixCSV0.getShowAverage());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertFalse(resultMatrixCSV0.getShowStdDev());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=3.5854244758302243
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 26);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.setRowNameWidth(1);
      resultMatrixLatex0.globalInfo();
      resultMatrixHTML0.significanceWidthTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixSignificance0.m_HeaderValues = vector0;
      resultMatrixSignificance0.globalInfo();
      resultMatrixSignificance0.isAverage(30);
      assertEquals(1, resultMatrixHTML0.getRowNameWidth());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=3.319602936161598
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setStdDevPrec(34);
      resultMatrixCSV0.setColOrder(intArray0);
      resultMatrixCSV0.stdDevPrecTipText();
      assertEquals(34, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=3.483121127958708
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixSignificance0.getEnumerateRowNames();
      resultMatrixSignificance0.clear();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.getVisibleRowCount();
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      
      int int1 = resultMatrixSignificance0.getDisplayCol((-3346));
      assertEquals((-1), int1);
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(0, resultMatrixSignificance0.getColCount());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=4.054007578915687
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      String string0 = resultMatrixSignificance1.toString();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      resultMatrixSignificance1.clearRanking();
      resultMatrixSignificance1.toStringKey();
      assertEquals(40, resultMatrixSignificance1.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance1.getMeanWidth());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=3.239110900075599
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setRemoveFilterName(true);
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.setCountWidth(3744);
      resultMatrixSignificance0.clear();
      resultMatrixSignificance0.getDefaultEnumerateColNames();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=3.4869368385683006
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int int0 = resultMatrixHTML0.getVisibleColCount();
      assertEquals(1, int0);
      
      boolean boolean0 = resultMatrixHTML0.isStdDev(1);
      boolean boolean1 = resultMatrixHTML0.getPrintRowNames();
      assertFalse(boolean1 == boolean0);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 51);
      resultMatrixSignificance0.getDefaultPrintColNames();
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
      assertFalse(resultMatrixSignificance0.getShowStdDev());
      assertEquals(51, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=3.631146389842193
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.getSummaryTitle(0);
      assertEquals("a", string0);
      
      resultMatrixGnuPlot0.setSignificanceWidth(0);
      resultMatrixGnuPlot0.RIGHT_PARENTHESES = "A}roDNWxdl%`yQzclF";
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.getRevision();
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=3.390507814144438
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setSignificanceWidth((-256));
      resultMatrixSignificance0.toStringRanking();
      int int0 = resultMatrixSignificance0.getSignificanceWidth();
      assertEquals(0, int0);
      
      resultMatrixSignificance0.getEnumerateRowNames();
      int[][] intArray0 = new int[2][5];
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=3.4385796520667373
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int int0 = resultMatrixHTML0.getVisibleColCount();
      assertEquals(1, int0);
      
      resultMatrixHTML0.isStdDev(1);
      String string0 = resultMatrixHTML0.getSummaryTitle(1);
      assertEquals(0, resultMatrixHTML0.getDefaultStdDevWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals("b", string0);
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=4.025511628181528
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      resultMatrixGnuPlot0.toStringMatrix();
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixGnuPlot0.stdDevWidthTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringKey();
      assertFalse(resultMatrixSignificance0.getShowStdDev());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      
      resultMatrixGnuPlot0.getColName(0);
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=3.643404056425069
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.getColName(0);
      assertEquals("[1]", string0);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int int0 = resultMatrixHTML0.getSignificanceCount(0, 1);
      assertEquals(0, int0);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      
      String string1 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string1);
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=3.2634978131488714
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixHTML0.stdDevWidthTipText();
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getDefaultSignificanceWidth());
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixHTML0.getDefaultCountWidth());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=3.4425034580098552
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 2);
      resultMatrixCSV0.clear();
      int int0 = resultMatrixCSV0.getVisibleRowCount();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(2, int0);
      
      int int1 = resultMatrixSignificance0.getDisplayCol(0);
      assertEquals(0, int1);
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=3.4275559676364424
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixPlainText0.toStringKey();
      int int0 = resultMatrixGnuPlot0.getSignificanceCount(0, 0);
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=3.588579399171122
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.setPrintRowNames(true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixPlainText0.getStdDev(0, 0);
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      
      resultMatrixGnuPlot0.toStringRanking();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(40, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=3.348050800310277
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.rowNameWidthTipText();
      assertEquals("The maximum width for the row names (0 = optimal).", string0);
      
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixLatex0.m_HeaderKeys = vector0;
      resultMatrixLatex0.setRowHidden(0, false);
      resultMatrixLatex0.getColCount();
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=3.5866176745972522
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.setPrintRowNames(false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.setPrintRowNames(false);
      resultMatrixPlainText0.getStdDev(1, 0);
      resultMatrixHTML0.getColCount();
      resultMatrixHTML0.getPrintColNames();
      assertTrue(resultMatrixHTML0.getEnumerateRowNames());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=4.054513336948512
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.addHeader("", "-count-width");
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 0);
      resultMatrixGnuPlot0.setPrintRowNames(true);
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      resultMatrixGnuPlot0.meanWidthTipText();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      resultMatrixCSV0.toArray();
      resultMatrixGnuPlot0.toArray();
      resultMatrixCSV0.countWidthTipText();
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n\n# data for the plot\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:1]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.padString(")g#ne.vhS$", 0, false);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixGnuPlot0.m_RankingWins = intArray0;
      resultMatrixSignificance0.getEnumerateColNames();
      resultMatrixGnuPlot0.isAverage(1);
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixGnuPlot0.getDisplayName();
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      
      resultMatrixCSV0.isMean(1);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=3.0882694086683875
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixGnuPlot0.padString("", 1, true);
      int[][] intArray0 = new int[3][9];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 1;
      intArray2[1] = 0;
      intArray2[2] = 1;
      intArray2[3] = 1;
      intArray2[4] = 1;
      intArray2[5] = 1;
      intArray2[6] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[9];
      intArray3[0] = 2;
      intArray3[1] = 0;
      intArray3[2] = 2;
      intArray3[3] = 1;
      intArray3[4] = 1;
      intArray3[5] = 2;
      intArray3[6] = 2;
      intArray3[7] = 3618;
      intArray3[8] = 1;
      intArray0[2] = intArray3;
      resultMatrixGnuPlot0.m_Significance = intArray0;
      resultMatrixGnuPlot0.setRowNameWidth(25);
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      
      resultMatrixGnuPlot0.m_RowNameWidth = (-932);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      resultMatrixGnuPlot0.getDefaultPrintColNames();
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=3.3155929110989417
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setPrintRowNames(true);
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixHTML0.getShowStdDev();
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getDefaultStdDevWidth());
      assertEquals(1, resultMatrixHTML0.getColCount());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=3.3710751824741334
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setColOrder(intArray0);
      String string0 = resultMatrixCSV0.padString(" ", 1);
      assertEquals(" ", string0);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=3.3279101272234723
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixCSV0.m_SignificanceWidth = 0;
      int int0 = resultMatrixHTML0.getSignificanceCount(0, 1);
      assertEquals(0, int0);
      
      int int1 = resultMatrixCSV0.getRowCount();
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(1, int1);
      assertEquals(1, resultMatrixCSV0.getColCount());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=3.48629831128984
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setRowOrder((int[]) null);
      int int0 = resultMatrixHTML0.getStdDevWidth();
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, int0);
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(0, resultMatrixHTML0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 156
  /*Coverage entropy=3.4992843261972535
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int int0 = resultMatrixCSV0.getVisibleRowCount();
      assertEquals(1, int0);
      
      int int1 = resultMatrixSignificance0.getDisplayCol(2);
      assertEquals((-1), int1);
      
      String string0 = resultMatrixCSV0.padString(" ", (-1));
      assertEquals(" ", string0);
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
  }

  /**
  //Test case number: 157
  /*Coverage entropy=3.6742370364548163
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.setRowName(2, "v");
      resultMatrixLatex0.toStringSummary();
      resultMatrixPlainText0.printRowNamesTipText();
      String string0 = resultMatrixLatex0.toStringKey();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption (Key)}\n\\scriptsize\n{\\centering\n\\begin{tabular}{cl}\\\\\n(1) & col0 \\\\\n\\end{tabular}\n}\n\\end{table}\n", string0);
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(5, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(2, resultMatrixLatex0.getVisibleRowCount());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=3.4859283519853634
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 1;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = (double) 0;
      resultMatrixCSV0.m_Counts = doubleArray0;
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      
      resultMatrixCSV0.m_StdDevPrec = 0;
      int int0 = resultMatrixCSV0.getStdDevPrec();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 159
  /*Coverage entropy=3.4884858967423966
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(50, 0);
      resultMatrixSignificance0.getDefaultEnumerateRowNames();
      resultMatrixSignificance0.listOptions();
      resultMatrixSignificance0.setStdDevWidth(10);
      assertEquals(10, resultMatrixSignificance0.getStdDevWidth());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=3.0763359438150966
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setColNameWidth(4665);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 1);
      ResultMatrixHTML resultMatrixHTML1 = null;
      try {
        resultMatrixHTML1 = new ResultMatrixHTML(0, (-2098));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 161
  /*Coverage entropy=3.319510471991464
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setColOrder(intArray0);
      assertFalse(resultMatrixCSV0.getShowStdDev());
      
      resultMatrixSignificance0.getShowAverage();
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=3.5376731226549287
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.getAverage(3039);
      resultMatrixSignificance0.printRowNamesTipText();
      resultMatrixSignificance0.addHeader("Whether to output row names or just numbers representing them.", "-ranking data not set-");
      assertEquals(0, resultMatrixSignificance0.getDefaultSignificanceWidth());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=3.7482528830446173
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.removeFilterName("");
      assertEquals(1, resultMatrixLatex0.getColCount());
      
      String[][] stringArray0 = resultMatrixLatex0.toArray();
      assertEquals(3, stringArray0.length);
      
      String[] stringArray1 = resultMatrixLatex0.getOptions();
      assertEquals(18, stringArray1.length);
      
      resultMatrixLatex0.clearSummary();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
  }

  /**
  //Test case number: 164
  /*Coverage entropy=3.6316774220360197
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColNameWidth((-327));
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      resultMatrixGnuPlot0.toStringRanking();
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      
      resultMatrixPlainText0.headerKeys();
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 165
  /*Coverage entropy=3.682508068416341
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      int[] intArray0 = new int[7];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 1);
      resultMatrixCSV0.setColOrder(intArray0);
      assertEquals(0, resultMatrixCSV0.getDefaultCountWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 166
  /*Coverage entropy=3.6329816531150794
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixSignificance0.toStringRanking();
      resultMatrixPlainText1.m_PrintRowNames = false;
      resultMatrixPlainText1.getRowHidden((-273));
      resultMatrixSignificance0.setSize(2, 2);
      resultMatrixSignificance0.getDefaultColNameWidth();
      assertEquals(2, resultMatrixSignificance0.getVisibleColCount());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.addHeader("v", "(");
      resultMatrixCSV0.clear();
      resultMatrixCSV0.toStringSummary();
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 167
  /*Coverage entropy=3.490877904621952
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[0];
      resultMatrixCSV0.setColOrder(intArray0);
      assertTrue(resultMatrixCSV0.getDefaultPrintRowNames());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 168
  /*Coverage entropy=3.5395719426739167
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 1);
      resultMatrixLatex0.toStringSummary();
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
      
      boolean boolean0 = resultMatrixGnuPlot0.getRowHidden(55);
      assertFalse(boolean0);
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
  }

  /**
  //Test case number: 169
  /*Coverage entropy=3.5412544638672125
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV0.setShowStdDev(true);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      int int1 = new Integer(1);
      resultMatrixCSV0.getDefaultCountWidth();
      assertTrue(resultMatrixCSV0.getShowStdDev());
      
      resultMatrixCSV1.getColHidden(2);
      assertEquals(1, resultMatrixCSV1.getRowCount());
  }

  /**
  //Test case number: 170
  /*Coverage entropy=3.542447748926741
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.assign(resultMatrixCSV0);
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertFalse(resultMatrixSignificance0.getShowAverage());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 2);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(257, 2);
      resultMatrixHTML0.getSignificance(1, 2);
      resultMatrixHTML0.getVisibleRowCount();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRevision();
      assertEquals(2, resultMatrixGnuPlot0.getVisibleRowCount());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintColNames());
  }

  /**
  //Test case number: 171
  /*Coverage entropy=3.6713871636812794
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixLatex0.clearSummary();
      resultMatrixCSV0.setShowAverage(true);
      int int0 = resultMatrixCSV0.getStdDevPrec();
      assertEquals(2, int0);
      
      resultMatrixCSV0.showAverageTipText();
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 172
  /*Coverage entropy=3.176732718453845
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(60, 1);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixLatex0);
      assertEquals(0, resultMatrixHTML1.getStdDevWidth());
      assertEquals(0, resultMatrixHTML1.getRowNameWidth());
      assertEquals(0, resultMatrixHTML1.getMeanWidth());
      assertTrue(resultMatrixHTML1.getEnumerateColNames());
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
      assertEquals(2, resultMatrixHTML1.getStdDevPrec());
      assertTrue(resultMatrixHTML1.getPrintRowNames());
      assertEquals(0, resultMatrixHTML1.getSignificanceWidth());
      
      int int0 = new Integer(0);
      resultMatrixHTML0.isStdDev(57);
      assertEquals(60, resultMatrixHTML0.getVisibleColCount());
      
      resultMatrixLatex0.getDefaultRowNameWidth();
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getDefaultCountWidth());
  }

  /**
  //Test case number: 173
  /*Coverage entropy=3.4482662846682857
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixSignificance0.padString("I'%h@", 1, true);
      assertEquals("I", string0);
      
      resultMatrixLatex0.setRowName(1, "*");
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
      
      resultMatrixSignificance0.setRowHidden(2, false);
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
  }

  /**
  //Test case number: 174
  /*Coverage entropy=3.1480857517316996
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setColOrder(intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.globalInfo();
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      
      resultMatrixCSV0.getDefaultRowNameWidth();
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertFalse(resultMatrixCSV0.getShowAverage());
  }

  /**
  //Test case number: 175
  /*Coverage entropy=3.039479190087481
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 2;
      resultMatrixHTML0.setRowOrder(intArray0);
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixHTML0.getPrintColNames());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertFalse(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getRowCount());
  }

  /**
  //Test case number: 176
  /*Coverage entropy=3.995314244044045
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRevision();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>col0</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>v/ /*</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixHTML0.getSignificance(2, 8);
      resultMatrixHTML0.getVisibleRowCount();
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRevision();
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
  }

  /**
  //Test case number: 177
  /*Coverage entropy=3.267826817477876
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearRanking();
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setColOrder(intArray0);
      resultMatrixSignificance0.getCount((-2920));
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(0, resultMatrixSignificance0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertTrue(resultMatrixSignificance0.getDefaultEnumerateColNames());
  }

  /**
  //Test case number: 178
  /*Coverage entropy=3.570951269874628
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 2);
      int int0 = resultMatrixCSV0.getVisibleRowCount();
      assertEquals(2, int0);
      
      int int1 = resultMatrixSignificance0.getDisplayCol(0);
      assertEquals(0, int1);
      
      resultMatrixCSV0.colNameWidthTipText();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      String string0 = resultMatrixPlainText0.toStringKey();
      assertEquals("Key:\n(1) col0\n(2) col1\n", string0);
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 179
  /*Coverage entropy=3.4859283519853634
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.meanPrecTipText();
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 180
  /*Coverage entropy=3.2407430523951963
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setShowStdDev(true);
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setColOrder(intArray0);
      assertTrue(resultMatrixCSV0.getShowStdDev());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
  }

  /**
  //Test case number: 181
  /*Coverage entropy=3.2594622441097014
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.assign(resultMatrixCSV0);
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertFalse(resultMatrixSignificance0.getShowAverage());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 2);
      resultMatrixCSV0.getEnumerateColNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int int0 = resultMatrixHTML0.getVisibleColCount();
      assertEquals(1, int0);
      
      resultMatrixGnuPlot0.getDefaultPrintRowNames();
      assertFalse(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(2, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 182
  /*Coverage entropy=3.178495281612358
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(resultMatrixSignificance0);
      assertFalse(resultMatrixSignificance2.getEnumerateRowNames());
      assertEquals(0, resultMatrixSignificance2.getMeanWidth());
      assertEquals(40, resultMatrixSignificance2.getRowNameWidth());
      assertTrue(resultMatrixSignificance2.getPrintRowNames());
      assertEquals(0, resultMatrixSignificance2.getCountWidth());
      assertEquals(2, resultMatrixSignificance2.getMeanPrec());
      assertEquals(2, resultMatrixSignificance2.getStdDevPrec());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int int0 = resultMatrixSignificance1.getDefaultStdDevPrec();
      assertEquals(1, resultMatrixSignificance1.getColCount());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 183
  /*Coverage entropy=3.2409030351246035
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int int0 = resultMatrixHTML0.getSignificanceCount(4490, 0);
      assertFalse(resultMatrixHTML0.getDefaultRemoveFilterName());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(0, int0);
      assertEquals(0, resultMatrixHTML0.getDefaultStdDevWidth());
      assertEquals(1, resultMatrixHTML0.getColCount());
  }

  /**
  //Test case number: 184
  /*Coverage entropy=3.380937795632014
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setStdDevPrec((-1141));
      String string0 = resultMatrixGnuPlot0.getColName(1616);
      assertNull(string0);
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 185
  /*Coverage entropy=4.188825464264032
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText.main((String[]) null);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.getHeader(")");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 186
  /*Coverage entropy=3.4882695869868265
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      int int0 = resultMatrixCSV0.getSignificance((-3314), 0);
      assertEquals(40, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(0, int0);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertFalse(resultMatrixCSV0.getDefaultShowAverage());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 187
  /*Coverage entropy=3.4884858967423966
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.setRowHidden(1, false);
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertFalse(resultMatrixLatex0.getShowAverage());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(40, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
  }

  /**
  //Test case number: 188
  /*Coverage entropy=3.434635057597813
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(4, 4);
      resultMatrixHTML0.setMeanPrec(0);
      assertEquals(0, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 189
  /*Coverage entropy=3.1279084828916957
  */
  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixPlainText0.setSize(865, 3);
      assertEquals(3, resultMatrixPlainText0.getRowCount());
  }

  /**
  //Test case number: 190
  /*Coverage entropy=3.8328058910556626
  */
  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowNameWidth(0);
      String[] stringArray0 = resultMatrixLatex0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixLatex0.clearSummary();
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
  }

  /**
  //Test case number: 191
  /*Coverage entropy=3.158544844914895
  */
  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.getRowName(1);
      assertNull(string0);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.setRowName(1, "z?hJZ(9-\"u4");
      resultMatrixLatex0.toStringSummary();
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(40, resultMatrixLatex0.getRowNameWidth());
  }

  /**
  //Test case number: 192
  /*Coverage entropy=3.507010372243086
  */
  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.getRowName(39);
      assertNull(string0);
      
      int int0 = resultMatrixHTML0.getVisibleRowCount();
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertFalse(resultMatrixHTML0.getDefaultShowAverage());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(1, int0);
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 193
  /*Coverage entropy=3.5412966312718086
  */
  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      double double0 = resultMatrixSignificance1.getAverage(1);
      assertEquals(0.0, double0, 0.01);
      
      resultMatrixLatex0.setRowName(1, "'0nKm");
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getDefaultCountWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0, resultMatrixLatex0.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 194
  /*Coverage entropy=3.1769889808665557
  */
  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.meanWidthTipText();
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
  }

  /**
  //Test case number: 195
  /*Coverage entropy=3.715379321371695
  */
  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultEnumerateRowNames();
      resultMatrixSignificance0.listOptions();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRemoveFilterName(false);
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      
      String string0 = resultMatrixGnuPlot0.toStringKey();
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      assertEquals("Key:\n1 col0\n", string0);
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultSignificanceWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 196
  /*Coverage entropy=3.5868407726860454
  */
  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.setMeanWidth(0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 197
  /*Coverage entropy=3.4857302328854476
  */
  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 2);
      resultMatrixCSV0.setMeanWidth(10);
      resultMatrixCSV0.getVisibleRowCount();
      assertEquals(10, resultMatrixCSV0.getMeanWidth());
      
      int int0 = resultMatrixSignificance0.getDisplayCol(0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 198
  /*Coverage entropy=3.676013014021416
  */
  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.setStdDevWidth(1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.setMeanWidth(97);
      resultMatrixHTML0.getDisplayName();
      assertEquals(97, resultMatrixHTML0.getMeanWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV1.getColName(1);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(1, 473);
      resultMatrixGnuPlot1.setRemoveFilterName(true);
      String string0 = resultMatrixGnuPlot1.toStringKey();
      assertEquals("Key:\n1 col0\n", string0);
  }

  /**
  //Test case number: 199
  /*Coverage entropy=3.5354315286325124
  */
  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[][] stringArray0 = new String[4][1];
      String[] stringArray1 = new String[3];
      stringArray1[0] = " ";
      stringArray1[1] = ")";
      stringArray1[2] = "*";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[7];
      stringArray2[0] = "*";
      stringArray2[1] = ")";
      stringArray2[2] = " ";
      stringArray2[3] = ")";
      stringArray2[4] = " ";
      stringArray2[5] = "Only outputs the significance indicators. Can be used for spotting patterns.";
      stringArray2[6] = "v";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[0];
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[0];
      stringArray0[3] = stringArray4;
      int int0 = resultMatrixPlainText0.getColSize(stringArray0, 997);
      assertEquals(0, int0);
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 200
  /*Coverage entropy=3.5328672060284023
  */
  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int int0 = resultMatrixHTML0.getVisibleColCount();
      resultMatrixHTML0.isStdDev(1);
      String[][] stringArray0 = new String[1][8];
      String[] stringArray1 = new String[1];
      stringArray1[0] = "";
      stringArray0[0] = stringArray1;
      int int1 = resultMatrixHTML0.getColSize(stringArray0, 1);
      assertEquals(0, int1);
      assertFalse(int1 == int0);
      
      resultMatrixHTML0.getRowOrder();
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixHTML0.getRowCount());
  }

  /**
  //Test case number: 201
  /*Coverage entropy=3.4859283519853634
  */
  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int int0 = resultMatrixSignificance0.getCountWidth();
      assertEquals(0, int0);
      assertFalse(resultMatrixSignificance0.getDefaultEnumerateRowNames());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 202
  /*Coverage entropy=3.676013014021416
  */
  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.stdDevWidthTipText();
      Vector<Integer> vector0 = new Vector<Integer>();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixSignificance1.getAverage(0);
      resultMatrixSignificance1.setRowNameWidth(0);
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(resultMatrixSignificance0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance2.getColSize((String[][]) null, 1442, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 203
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.getSummaryTitle(0);
      assertEquals("a", string0);
      
      resultMatrixGnuPlot0.setSignificanceWidth(0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      String[][] stringArray0 = new String[1][8];
      String[] stringArray1 = new String[5];
      stringArray1[1] = "*";
      stringArray1[2] = " ";
      stringArray1[3] = "";
      stringArray1[4] = "";
      stringArray0[0] = stringArray1;
      int int0 = resultMatrixHTML0.getColSize(stringArray0, 1, true, false);
      assertEquals(0, int0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.getDefaultEnumerateColNames();
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 204
  /*Coverage entropy=3.14589330567467
  */
  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      int[] intArray0 = new int[9];
      intArray0[7] = 2;
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[5] = 2;
      intArray0[6] = 1;
      intArray0[7] = 0;
      resultMatrixHTML0.setRowOrder(intArray0);
      assertTrue(resultMatrixHTML0.getPrintColNames());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 2);
      assertEquals(2, resultMatrixCSV0.getVisibleColCount());
      
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(0, 2);
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML(resultMatrixHTML1);
      assertTrue(resultMatrixHTML2.getEnumerateColNames());
      assertEquals(25, resultMatrixHTML2.getRowNameWidth());
      assertEquals(2, resultMatrixHTML2.getMeanPrec());
      assertEquals(0, resultMatrixHTML2.getCountWidth());
      assertEquals(0, resultMatrixHTML2.getMeanWidth());
      assertEquals(2, resultMatrixHTML2.getStdDevPrec());
      assertTrue(resultMatrixHTML2.getPrintRowNames());
      
      resultMatrixHTML1.getDefaultEnumerateColNames();
      boolean boolean0 = resultMatrixHTML1.getDefaultRemoveFilterName();
      assertFalse(boolean0);
      assertEquals(2, resultMatrixHTML1.getVisibleRowCount());
  }

  /**
  //Test case number: 205
  /*Coverage entropy=3.2702099887899223
  */
  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.TIE_STRING = "-ranking data not set-";
      int int0 = resultMatrixSignificance0.getSignificanceWidth();
      assertEquals(1, resultMatrixSignificance0.getColCount());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.isStdDev(1);
      int int1 = resultMatrixHTML0.getColNameWidth();
      assertTrue(int1 == int0);
      assertFalse(resultMatrixHTML0.getDefaultRemoveFilterName());
      assertEquals(0, resultMatrixHTML0.getDefaultCountWidth());
      assertEquals(0, int1);
  }

  /**
  //Test case number: 206
  /*Coverage entropy=3.391433911957215
  */
  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int int0 = resultMatrixHTML0.getVisibleColCount();
      assertEquals(1, int0);
      
      resultMatrixHTML0.isStdDev(1);
      resultMatrixHTML0.globalInfo();
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertFalse(resultMatrixHTML0.getShowStdDev());
      assertFalse(resultMatrixHTML0.getDefaultRemoveFilterName());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
  }

  /**
  //Test case number: 207
  /*Coverage entropy=3.3973991794195126
  */
  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(10, 284);
      resultMatrixGnuPlot0.setShowStdDev(false);
      resultMatrixGnuPlot0.setColHidden(2856, false);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(5826, 0);
  }

  /**
  //Test case number: 208
  /*Coverage entropy=3.5861880844262752
  */
  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int int0 = resultMatrixLatex0.getColSize((String[][]) null, (-1874));
      assertEquals(0, int0);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.globalInfo();
      assertTrue(resultMatrixHTML0.getDefaultPrintRowNames());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 209
  /*Coverage entropy=3.541166733025435
  */
  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      int[][] intArray0 = new int[5][9];
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 210
  /*Coverage entropy=3.370675449340421
  */
  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 9);
      int[][] intArray0 = new int[2][1];
      int[] intArray1 = new int[2];
      intArray1[0] = 0;
      intArray1[1] = 9;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 0;
      intArray0[1] = intArray2;
      resultMatrixHTML0.setRanking(intArray0);
      assertEquals(9, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(0, resultMatrixHTML0.getColCount());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.showAverageTipText();
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertEquals(0, resultMatrixLatex0.getDefaultCountWidth());
  }

  /**
  //Test case number: 211
  /*Coverage entropy=3.5840001998371873
  */
  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.isSignificance(2);
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(0, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
  }
}
