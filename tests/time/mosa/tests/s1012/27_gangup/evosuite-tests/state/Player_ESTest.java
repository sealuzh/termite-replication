/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 23:30:53 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.574464215715726
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(0L, player0.getTimeOfDeath());
      
      player0.setDead((-1L), true);
      Player player1 = new Player(71, "<ie4h%6z/v|K", (String) null, (short)4919);
      player1.setJoinOK(player0, true);
      player0.getSubparty();
      player1.isJoinOK(player0, false);
      player1.getName();
      assertEquals(4919, player1.getPictureId());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party();
      party0.remove(player0);
      party0.getSubparty();
      player0.pack();
      player0.add(party0);
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(611, "", 611);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.6467142775717116
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player((-1), "koM~VSr3G.M&J:3V", 5);
      player0.gangStrength();
      player0.setConnected(false);
      player0.type();
      player0.isConnected();
      player0.getName();
      Player player1 = new Player();
      player0.next = (Party) player1;
      Player player2 = new Player(1, "koM~VSr3G.M&J:3V", (-1));
      player2.id = (int) (short)4919;
      player0.isJoinOK(player2, false);
      player0.isJoinOK(player2, true);
      assertFalse(player0.isConnected());
      
      int int0 = player2.type();
      assertTrue(player2.isConnected());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.0289251927098695
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player((-1939), "state.Player", (-1939));
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("state.Player");
      mockFileOutputStream0.flush();
      mockFileOutputStream0.flush();
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      dataOutputStream0.writeBoolean(false);
      dataOutputStream0.writeBytes("state.Player");
      player0.pack(dataOutputStream0);
      player0.setMoney((-1939));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.gangStrength();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.reset(false);
      player0.gangStrength();
      player0.pack();
      System.setCurrentTimeMillis(1889L);
      player0.type();
      player0.setDead((long) (-1939));
      player0.pack();
      player0.getMoney();
      System.setCurrentTimeMillis(1889L);
      player0.getName();
      player0.getMoney();
      player0.getY();
      player0.type();
      player0.getName();
      player0.type();
      float float0 = player0.getY();
      assertTrue(player0.isDead());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.419171178686402
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(0, "EK^,LB", "EK^,LB", 0);
      player0.setDead((-2176L), true);
      int int0 = Packable.GAME_STATE;
      Player player1 = new Player(0, (String) null, 0);
      Player player2 = new Player(0, "EK^,LB", 4);
      player2.setJoinOK(player0, false);
      Player player3 = new Player();
      player2.setDead();
      player3.gangStrength();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)59;
      byteArray0[1] = (byte)59;
      player1.unpack(byteArray0);
      Player player4 = new Player();
      player2.add(player4);
      player2.pack();
      player0.setDead();
      player4.setX((-1227.3774F));
      player3.isJoinOK(player0, false);
      Player player5 = new Player(0, (String) null, (String) null, 4);
      player5.getMoney();
      player0.getTimeOfDeath();
      player5.isJoinOK(player0, false);
      assertTrue(player0.isDead());
      
      player5.toString();
      assertEquals(4, player5.getPictureId());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player();
      player0.getSubparty();
      Player player1 = new Player(1, "", "", 1290, 1);
      player0.isBoss();
      player1.isJoinOK(player0, false);
      player1.getIP();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-54);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      try { 
        dataInputStream0.readFloat();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.301160282549396
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      Player player1 = new Player((-343), "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", (-343), (-590));
      player1.setX((-2741.7527F));
      player1.isJoinOK(player0, true);
      player1.getMoney();
      player1.isConnected();
      player1.gangStrength();
      player0.pack();
      player1.setDead(1392409296320L);
      player0.reset(true);
      float float0 = player1.getX();
      assertTrue(player1.isDead());
      assertEquals((-2741.7527F), float0, 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(599);
      player0.getTimeOfDeath();
      Player player1 = new Player(599, (String) null, (String) null, 599);
      player1.getIP();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-103);
      byteArray0[1] = (byte)74;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)39;
      player0.setX((short)4919);
      assertEquals(4919.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ(1.0F);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-738), 12);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Party party0 = player0.head;
      player0.boss = null;
      player0.setZ((-288.1F));
      player0.getZ();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals((-288.1F), player0.getZ(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      player1.setJoinOK(player0, false);
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertEquals(0, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertEquals("0.0.0.0", player1.getIP());
      assertFalse(boolean0);
      assertEquals("Player4919", player1.getName());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((-1087), "EK^,LB", "EK^,LB", (-1087));
      player0.setDead((-2176L), true);
      player0.getPictureId();
      Player player1 = new Player(14335);
      player1.add(player0);
      assertEquals((-2176L), player0.getTimeOfDeath());
      
      player1.setConnected(true);
      assertEquals("Player14335", player1.getName());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.9663881312694826
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(0, "EK^,LB", "EK^,LB", 0);
      player0.setDead((-2176L), true);
      player0.getPictureId();
      player0.setMoney((-2176L));
      Player player1 = new Player(0);
      player0.setJoinOK(player1, true);
      player0.getTimeOfDeath();
      player1.isJoinOK(player0, false);
      assertEquals((-2176L), player0.getTimeOfDeath());
      
      player1.pack();
      assertEquals("Player0", player1.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.9417429777213613
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player1.setJoinOK(player0, false);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals(0, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-1", player1.getName());
      assertTrue(boolean0);
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.048820325203473
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(0, "rCUGj}W-Y-?tTJ", "rCUGj}W-Y-?tTJ", 0, 0);
      player0.getPictureId();
      Player player1 = new Player();
      player1.setZ(0);
      player0.isJoinOK(player1, false);
      assertEquals(0.0F, player1.getZ(), 0.01F);
      
      player0.toString();
      player1.setZ(0.2F);
      player0.pack();
      player1.getZ();
      player1.setConnected(false);
      assertEquals("Player-1", player1.toString());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(0.0F, player0.getY(), 0.01F);
      
      player0.setY(1.0F);
      player0.setJoinOK(player0, true);
      float float0 = player0.getY();
      assertEquals(1.0F, float0, 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      float float0 = Player.MOVE_DISTANCE;
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(boolean0);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player((-253), (String) null, (-253));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(605, "}", "}", 605, 605);
      player0.pack();
      assertTrue(player0.isConnected());
      assertEquals(605, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(605, player0.getStrength());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(5, "", "", 5);
      player0.getName();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(5, player0.getPictureId());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(2, "", "", 2);
      player0.toString();
      assertEquals(1, player0.getStrength());
      assertEquals(2, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.0343946195677223
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player();
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      player0.id = 835;
      Player player1 = new Player();
      player0.add(player1);
      player0.pack();
      player0.gangStrength();
      int int1 = player0.gangStrength();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(2, int1);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.getName());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ(0);
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(4, "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", 4);
      player0.setDead();
      player0.getX();
      boolean boolean0 = player0.isDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(0, "", 0);
      Player player1 = new Player();
      player0.head = (Party) player1;
      player0.prev = (Party) player1;
      player0.setY(0);
      player0.pack();
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0.0F);
      player0.isDead();
      player0.getY();
      player0.getX();
      player0.setX(0.0F);
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isDead();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("Player-1", player0.toString());
      assertFalse(boolean0);
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(4);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(29, byteArrayOutputStream0.size());
      
      Player player1 = new Player((short)4919, "{^NB|k\"d0;3+V", 898);
      assertEquals(10.0F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      player0.setX(0.0F);
      Player player1 = new Player((short)4919);
      player0.isJoinOK(player1, true);
      long long0 = player0.getTimeOfDeath();
      assertEquals(1392409281320L, long0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      player0.setMoney(0.1F);
      player0.setJoinOK(player0, true);
      player0.getTimeOfDeath();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readFloat();
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0.1F, player0.getMoney(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(13, "EK^,LB", "EK^,LB", 13);
      player0.setDead((-2176L), true);
      player0.getPictureId();
      player0.pack();
      assertEquals((-2176L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player();
      int int0 = player0.getPictureId();
      assertEquals(0, int0);
      
      player0.pack();
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.getName());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.6902535776209735
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      
      player0.setMoney(0.1F);
      player0.setJoinOK(player0, true);
      player0.getTimeOfDeath();
      player0.isJoinOK(player0, true);
      player0.pack();
      float float0 = player0.getMoney();
      assertEquals(0.1F, float0, 0.01F);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)28;
      byteArray0[1] = (byte) (-1);
      player0.unpack(byteArray0);
      int int0 = player0.getStrength();
      assertFalse(player0.isDead());
      assertEquals(1, int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      player0.setMoney(0.0F);
      player0.pack();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.3072109573039925
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, false);
      player0.isJoinOK(player0, false);
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(0, (String) null, "r$hYs7|x*|w,y", (-1));
      player0.getX();
      player0.setConnected(true);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      player0.pack();
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead(2007L, false);
      player0.pack();
      assertEquals(2007L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.9713931362744876
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(50);
      Player player1 = new Player(0, "bpc2vx 9nA}iK6[", "Tb.1bh_ZOdxR#tu'!", 1456, 0);
      player1.setX(0);
      player1.gangStrength();
      player0.setDead((long) 1456, false);
      player0.boss = (Party) player1;
      player0.isJoinOK(player1, false);
      player0.setY((-3324.956F));
      player1.setX((short)4919);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      mockFileInputStream0.mark(1456);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      player1.unpack(dataInputStream0);
      player1.getStrength();
      player0.setJoinOK(player1, false);
      player1.setDead();
      assertEquals(4919.0F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(0, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 0, 0);
      player0.setZ(0);
      int int0 = player0.gangStrength();
      assertEquals(0, int0);
      
      float float0 = player0.getMoney();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getZ(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player((-3503), (String) null, (String) null, 3, (-3503));
      Player player1 = new Player((-1), (String) null, (short)4919);
      player0.boss = (Party) player1;
      assertEquals(4919, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertEquals("0.0.0.0", player1.getIP());
      
      int int0 = player0.getStrength();
      assertEquals((-3503), int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      
      int int0 = player0.gangStrength();
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals(1, int0);
      assertEquals("Player-1", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player((-3091));
      int int0 = player0.getStrength();
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-3091", player0.toString());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player();
      String string0 = player0.getIP();
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", string0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(false);
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }
}
