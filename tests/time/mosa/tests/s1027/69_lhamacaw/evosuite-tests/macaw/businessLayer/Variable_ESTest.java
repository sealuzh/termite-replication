/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 10:53:37 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.function.Consumer;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocument(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.5673124357146344
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      user0.setPostCode("UNABLE_TO_DELETE_DERIVED_VARIABLE");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.9880108024667438
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("T}0}:?R");
      derivedVariable0.codeBookNumber = " z3[6!";
      derivedVariable0.getNotes();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getYear();
      derivedVariable0.setAvailability("");
      derivedVariable0.getNotes();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setYear((String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable1.clone();
      rawVariable0.setYear("UFV]z");
      System.setCurrentTimeMillis(0L);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.setSupportingDocuments(arrayList1);
      derivedVariable0.isCoded();
      arrayList0.add((Variable) rawVariable1);
      derivedVariable0.getAvailability();
      rawVariable0.getCleaningStatus();
      derivedVariable0.getCleaningStatus();
      arrayList0.add((Variable) rawVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      rawVariable0.getCleaningStatus();
      rawVariable1.getAlias();
      derivedVariable0.getDisplayItemIdentifier();
      rawVariable1.getValueLabels();
      derivedVariable0.addSourceVariables(arrayList0);
      rawVariable0.getCodeBookNumber();
      assertEquals("UFV]z", rawVariable0.getYear());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.6709281754843333
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("");
      Variable variable0 = null;
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      rawVariable0.setAlternativeVariable((Variable) null);
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      rawVariable0.setIdentifier(2208);
      rawVariable0.setCoded(false);
      Variable.validateFields(rawVariable0);
      Variable.validateFields(rawVariable0);
      rawVariable0.getDisplayName();
      Variable.validateFields(rawVariable0);
      rawVariable0.setCodeBookNumber("");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.4977545789237454
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes(rawVariable1);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.7463568973953323
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("!");
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription((String) null);
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("!", rawVariable0.getLabel());
      
      derivedVariable0.getCleaningDescription();
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.620795178839221
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isCleaned());
      
      derivedVariable0.setCleaned(true);
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      boolean boolean0 = derivedVariable0.isCleaned();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setIdentifier(1261);
      ontologyTerm0.setDescription("general.fieldValue.unknown");
      rawVariable0.setNotes("general.fieldValue.unknown");
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setIdentifier(1188);
      ontologyTerm0.setNewRecord(false);
      rawVariable0.setCleaningDescription("kzGn%aMHoGI}V<G");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getCleaningDescription();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.7742194210068787
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("]24@,L.JfnD");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      derivedVariable0.setQuestionNumber("UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_DUPLICATE");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getDisplayItemIdentifier();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setValueLabels(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable1.addOntologyTerms(arrayList1);
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes(derivedVariable1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.2590752087262675
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("jiY2, cyN)uy[MxI");
      derivedVariable0.setCleaningStatus("OPDPlN>$");
      derivedVariable0.form = "UNABLE_TO_UPDATE_CLEANING_STATE";
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.setColumnStart((String) null);
      derivedVariable0.getLabel();
      derivedVariable0.isCoded();
      derivedVariable0.getQuestionNumber();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.getCleaningDescription();
      derivedVariable0.getColumnStart();
      derivedVariable0.addSourceVariables(arrayList0);
      assertEquals("OPDPlN>$", derivedVariable0.getCleaningStatus());
      
      String string0 = rawVariable0.getAvailability();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.893391319078799
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd((String) null);
      derivedVariable0.setIdentifier((-1472));
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("-1472", derivedVariable0.getDisplayItemIdentifier());
      
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.454482887875094
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = null;
      Variable.validateFields(rawVariable0);
      rawVariable0.form = null;
      rawVariable0.getForm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.getIdentifier();
      derivedVariable0.getSourceVariables();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.320302132381434
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setYear("variable.cleaningStatus.label");
      derivedVariable0.getQuestionNumber();
      derivedVariable0.setCleaningStatus("");
      Variable.validateFields(derivedVariable0);
      derivedVariable0.setCategory("INVALID_SUPPORTING_DOCUMENT");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("Jn?S0%`%");
      supportingDocument0.setTitle("");
      supportingDocument0.setFilePath("Unknown");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.getName();
      derivedVariable0.getYear();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCategory("Unknown");
      derivedVariable1.setNotes("]e%x6W2ON*");
      derivedVariable0.addSourceVariable(derivedVariable1);
      assertEquals("variable.cleaningStatus.label", derivedVariable0.getYear());
      
      derivedVariable1.isCleaned();
      derivedVariable1.getCodeBookNumber();
      derivedVariable1.getAlternativeVariable();
      derivedVariable1.getIdentifier();
      boolean boolean0 = derivedVariable1.isCoded();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.2162443181522673
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("UNABLE_TO_GET_VARIABLE_NAMES", "UNABLE_TO_GET_VARIABLE_NAMES");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      rawVariable0.getOntologyTerms();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "UNABLE_TO_GET_VARIABLE_NAMES";
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.columnEnd = "P4RCLbG2";
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getColumnEnd();
      assertEquals("P4RCLbG2", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.2085716838811678
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.setIdentifier(2753);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getFilePath();
      assertEquals("2753", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "4`$@>)!";
      rawVariable0.columnStart = "general.error.blankField";
      rawVariable0.getColumnEnd();
      rawVariable0.getColumnStart();
      assertEquals("general.error.blankField", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.getYear();
      derivedVariable0.getValueLabels();
      derivedVariable0.setCleaned(true);
      derivedVariable0.getLabel();
      derivedVariable0.getAlias();
      derivedVariable0.getSourceVariables();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      assertTrue(derivedVariable0.isCleaned());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.9745307896586626
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = null;
      String string0 = rawVariable0.getColumnStart();
      assertNotNull(string0);
      
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      ontologyTerm0.setOntologyName((String) null);
      arrayList0.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setIsNewRecord(false);
      rawVariable0.isCoded();
      rawVariable0.getYear();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(rawVariable0);
      rawVariable0.cloneAttributes(rawVariable1);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable1.addSupportingDocuments(arrayList1);
      boolean boolean0 = rawVariable0.hasSameDisplayName(rawVariable1);
      assertTrue(boolean0);
      
      rawVariable1.createVariableSummary();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      arrayList2.add((Variable) rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.removeSupportingDocument(supportingDocument0);
      derivedVariable0.setSourceVariables(arrayList2);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.getFilePath();
      String string1 = rawVariable1.getColumnEnd();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertNull(string1);
      assertEquals("Unknown", rawVariable1.getAvailability());
      
      derivedVariable0.getFilePath();
      String string2 = rawVariable0.getCleaningDescription();
      assertNotNull(string2);
      
      derivedVariable0.getCategory();
      derivedVariable0.getCategory();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.5813690145252886
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("UNABLE_TO_CHECK_CATEGORY_EXISTS");
      derivedVariable0.setFilePath("UNABLE_TO_CHECK_CATEGORY_EXISTS");
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable1.form = "UNABLE_TO_CHECK_CATEGORY_EXISTS";
      String string0 = derivedVariable1.getFilePath();
      assertEquals("UNABLE_TO_CHECK_CATEGORY_EXISTS", derivedVariable0.getColumnEnd());
      assertEquals("UNABLE_TO_CHECK_CATEGORY_EXISTS", string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlias("!");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("!", rawVariable1.getAlias());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertNotNull(macawChangeEvent0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(true);
      derivedVariable0.setName("~R|U/-\"<K<T");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("~R|U/-\"<K<T", derivedVariable0.getName());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.7467447448420033
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setNotes(" z3[6!");
      derivedVariable1.setName("UNABLE_TO_FILTER_SUMMARIES");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.getNotes();
      assertEquals(" z3[6!", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("UNABLE_TO_GET_CHANGES_FOR_LIST_CHOICES");
      rawVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("H");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getLabel();
      rawVariable0.getCategory();
      assertEquals("H", rawVariable0.getLabel());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.5386400847822452
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("H");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAvailability("H");
      Variable.detectFieldChanges(user0, derivedVariable1, rawVariable0);
      assertEquals("H", derivedVariable1.getAvailability());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-2111));
      rawVariable0.setAlternativeVariable(derivedVariable0);
      assertEquals("-2111", derivedVariable0.getDisplayItemIdentifier());
      
      User user0 = new User("S=n2K5HdHJ)XI", "S=n2K5HdHJ)XI");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getCodeBookNumber();
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.setIsNewRecord(false);
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setName("!#,Dy*0e1Q8Vxbm xG");
      rawVariable0.setQuestionNumber("I");
      rawVariable0.getQuestionNumber();
      rawVariable0.getQuestionNumber();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("I", "SELF_REFERENCING_ALTERNATIVE_VARIABLE");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.getQuestionNumber();
      rawVariable0.getName();
      rawVariable0.getColumnEnd();
      rawVariable0.getIdentifier();
      rawVariable0.setIdentifier(0);
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges((User) null, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.5854244758302243
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("H");
      rawVariable0.setYear("H");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("H");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("H", rawVariable0.getYear());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "GUHWvvZ9t";
      String string0 = rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", string0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.addOntologyTerm(ontologyTerm1);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("d");
      rawVariable0.setCategory("Ho<=]G8");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("Ho<=]G8", rawVariable0.getCategory());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      rawVariable0.setCleaned(false);
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("!");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("!");
      User user0 = new User("!", "!");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("!", derivedVariable0.getName());
      assertEquals("!", rawVariable0.getLabel());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("!");
      User user0 = new User("!", "!");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("!", rawVariable0.getLabel());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("!");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("!");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("!", derivedVariable0.getName());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "macaw.system.MacawErrorType";
      String string0 = rawVariable0.getLabel();
      assertFalse(rawVariable0.isCoded());
      assertEquals("", string0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.columnEnd = "H";
      derivedVariable0.setName("H");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("H", derivedVariable0.getName());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.6851309643957646
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("H");
      rawVariable0.form = "H";
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("H", derivedVariable0.getDisplayName());
      assertEquals("H", rawVariable0.getForm());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.8936329525208677
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.setIdentifier(448);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getIdentifier();
      derivedVariable0.isCoded();
      assertEquals("448", derivedVariable0.getDisplayItemIdentifier());
      
      User user0 = new User("9~S&(AYexg>4B/", "9~S&(AYexg>4B/");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      rawVariable0.setNotes("/[/R/@]$/xR$$Nwx4Vn");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("/[/R/@]$/xR$$Nwx4Vn", rawVariable0.getNotes());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "H";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.554218296452355
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "INVALID_CATEGORY";
      User user0 = new User("$`'8NmH", "$`'8NmH");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("INVALID_CATEGORY", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.5806560020475704
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "Unknown";
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable1.createVariableSummary();
      assertEquals("Unknown", rawVariable1.getCodeBookNumber());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.624728496322497
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "y%W9x],lj0+eIYn@wt";
      String string0 = rawVariable0.getLabel();
      assertEquals("", string0);
      
      rawVariable0.getCleaningDescription();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("", rawVariable1.getColumnStart());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getColumnEnd());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("y%W9x],lj0+eIYn@wt", rawVariable1.getForm());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.6304437108786445
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "general.fieldValue.unknown";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("general.fieldValue.unknown", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart((String) null);
      String string0 = rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertNotNull(string0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      String string0 = derivedVariable0.getCleaningStatus();
      assertEquals("Unknown", string0);
      
      Variable variable0 = derivedVariable0.getAlternativeVariable();
      assertFalse(variable0.isNewRecord());
      assertEquals(0, variable0.getIdentifier());
      assertFalse(variable0.isCleaned());
      assertFalse(variable0.isCoded());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      assertTrue(arrayList1.isEmpty());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("variable.alternativeVariable.label");
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      rawVariable0.getForm();
      assertEquals("variable.alternativeVariable.label", rawVariable0.getForm());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.620795178839221
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "variable.isCleaned.saveChanges.changedToNotClean";
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      assertEquals("variable.isCleaned.saveChanges.changedToNotClean", rawVariable0.getForm());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("H");
      rawVariable0.getForm();
      assertEquals("H", rawVariable0.getNotes());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "U?XgI-:0 <%e~GEB";
      String string0 = derivedVariable0.getForm();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", string0);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.clone();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.listIterator();
      derivedVariable0.setSourceVariables(arrayList0);
      assertEquals("", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(126);
      rawVariable0.createVariableSummary();
      rawVariable0.getFilePath();
      assertEquals(126, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.5389044601953317
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCleaningStatus("d");
      derivedVariable0.setName("d");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      rawVariable0.isCoded();
      assertEquals("d", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.7545591030700876
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-1642));
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.setFilePath("");
      supportingDocument0.setIdentifier((-1));
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.getYear();
      derivedVariable0.getAvailability();
      derivedVariable1.getCategory();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable1.removeSourceVariables(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(true);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument1);
      rawVariable0.clone();
      derivedVariable1.getNotes();
      derivedVariable1.getSourceVariables();
      rawVariable0.isNewRecord();
      derivedVariable1.isNewRecord();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.isCoded();
      assertTrue(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, (Variable) null);
      assertFalse(derivedVariable0.isCoded());
      assertNull(macawChangeEvent0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("UNABLE_TO_CHECK_ONTOLOGY_TERM_ASSOCIATION_DUPLICATE");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      derivedVariable0.getDisplayName();
      assertEquals("UNABLE_TO_CHECK_ONTOLOGY_TERM_ASSOCIATION_DUPLICATE", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.625071549495739
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setForm("NO_SUPPORTING_DOCUMENT_FILTER");
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable0.getFilePath();
      rawVariable0.getSupportingDocuments();
      assertEquals("NO_SUPPORTING_DOCUMENT_FILTER", rawVariable0.getForm());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=4.178685008153255
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      rawVariable0.removeOntologyTerms(arrayList0);
      ontologyTerm1.setIdentifier(108);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals(0, arrayList1.size());
      
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      
      rawVariable0.getValueLabels();
      Variable.validateFields(rawVariable0);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.4048159937786893
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-2058005160));
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.624728496322497
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.cloneAttributes(rawVariable0);
      rawVariable0.getCleaningDescription();
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("UNABLE_TO_FILTER_SUMMARIES");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("UNABLE_TO_FILTER_SUMMARIES", derivedVariable0.getName());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("lha.mrc.ac.uk:LHA");
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("lha.mrc.ac.uk:LHA");
      ontologyTerm0.clone();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-910));
      ontologyTerm1.getDisplayName();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      rawVariable0.getCodeBookNumber();
      rawVariable0.getFilePath();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean1 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean1 == boolean0);
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(1781);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      String string0 = rawVariable0.getCleaningStatus();
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", string0);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("&me+}Nz)[&");
      rawVariable0.getFilePath();
      assertEquals("&me+}Nz)[&", rawVariable0.getNotes());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user0, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("GUHWvvZt");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("GUHWvvZt", derivedVariable0.getDisplayName());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.6845198108434345
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("#\"w5Gz#Ky5xL");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("#\"w5Gz#Ky5xL", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getAlias());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.9971515848932915
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCoded());
      assertNotNull(macawChangeEvent0);
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("d");
      User user0 = new User();
      Variable.validateFields(derivedVariable0);
      assertEquals("d", derivedVariable0.getDisplayName());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      rawVariable0.getOntologyTerms();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("variable.columnEnd.label");
      rawVariable0.getFilePath();
      rawVariable0.getColumnStart();
      assertEquals("variable.columnEnd.label", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.setColumnStart(")");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals(")", rawVariable0.getColumnStart());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.282360045759959
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("%Cc|c?3 !?xA8\"aIMI/", "%Cc|c?3 !?xA8\"aIMI/");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertTrue(derivedVariable0.isCleaned());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.383522442827672
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertTrue(derivedVariable0.isCleaned());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("H");
      derivedVariable0.setName("H");
      User user0 = new User("H", "H");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("H", derivedVariable0.getQuestionNumber());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("variable.alternativeVariable.label");
      rawVariable0.clone();
      rawVariable0.getCategory();
      assertEquals("variable.alternativeVariable.label", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("H");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("H", rawVariable0.getLabel());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.9654211895134472
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("user.lastName.label", "user.lastName.label");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("user.lastName.label");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("user.lastName.label", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getName());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      ontologyTerm0.setTerm("general.fieldValue.unknown");
      ontologyTerm0.clone();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getCodeBookNumber();
      rawVariable0.setAlias("G_R");
      rawVariable0.getAlias();
      assertEquals("G_R", rawVariable0.getAlias());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("EM1F^3+Z");
      derivedVariable0.getCodeBookNumber();
      assertEquals("EM1F^3+Z", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("cwgisE");
      rawVariable0.createVariableSummary();
      rawVariable0.clone();
      assertEquals("cwgisE", rawVariable0.getYear());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.585509428566693
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("/G06NKtRiEj");
      rawVariable0.createVariableSummary();
      rawVariable0.clone();
      assertEquals("/G06NKtRiEj", rawVariable0.getName());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      rawVariable0.getSupportingDocuments();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("j[;9b4uX5e4O|e-K@6");
      rawVariable0.getQuestionNumber();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("\"pg");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("\"pg", rawVariable0.getAlias());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("iR3B2X?(9oPg*");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("iR3B2X?(9oPg*", rawVariable0.getQuestionNumber());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("d");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("d", rawVariable0.getLabel());
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber((String) null);
      rawVariable0.setAlternativeVariable(rawVariable0);
      String string0 = rawVariable0.getFilePath();
      assertFalse(rawVariable0.isNewRecord());
      assertNotNull(string0);
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart((String) null);
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.668619868083795
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.addSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("I%+Z4UBkt\"1\"p");
      derivedVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("I%+Z4UBkt\"1\"p");
      assertTrue(ontologyTerm0.isNewRecord());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.5353865202004258
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("GUHWvvZ9t");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.clone();
      assertEquals("GUHWvvZ9t", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = null;
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory((String) null);
      rawVariable0.setAlternativeVariable(rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("variable.columnEnd.label");
      rawVariable0.getColumnEnd();
      rawVariable0.getColumnStart();
      assertEquals("variable.columnEnd.label", rawVariable0.getAlias());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "!";
      rawVariable0.setLabel("!");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      rawVariable0.getAvailability();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "jj3";
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, variableSummary0.getIdentifier());
      assertEquals("", variableSummary0.getDisplayName());
      assertEquals("", variableSummary0.getYear());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", variableSummary0.getLabel());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=3.5813690145252886
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setLabel("general.fieldValue.blank");
      rawVariable0.createVariableSummary();
      rawVariable0.clone();
      assertEquals("general.fieldValue.blank", rawVariable0.getLabel());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("variable.saveChanges.valueChanged");
      rawVariable0.setAlternativeVariable(rawVariable0);
      assertEquals("variable.saveChanges.valueChanged", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.7887946124832026
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable1.setForm((String) null);
      rawVariable1.setValueLabels((ArrayList<ValueLabel>) null);
      rawVariable1.setFilePath("q{89XwARcwoK");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      arrayList0.parallelStream();
      rawVariable1.removeSupportingDocuments(arrayList0);
      rawVariable1.getYear();
      rawVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("q{89XwARcwoK");
      derivedVariable0.hasSameDisplayName(rawVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      // Undeclared exception!
      try { 
        rawVariable1.addValueLabel(valueLabel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("'#fykJB");
      derivedVariable0.clone();
      assertEquals("'#fykJB", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("8YrDk.FOC0GU}|::");
      rawVariable0.clone();
      assertEquals("8YrDk.FOC0GU}|::", rawVariable0.getForm());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("+|{|m8@'5,");
      rawVariable0.getFilePath();
      boolean boolean0 = rawVariable0.isCoded();
      assertEquals("+|{|m8@'5,", rawVariable0.getColumnEnd());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "variable.alias.label";
      boolean boolean0 = derivedVariable0.isCleaned();
      assertFalse(boolean0);
      
      String string0 = derivedVariable0.getYear();
      assertEquals("", string0);
      
      String string1 = derivedVariable0.getCodeBookNumber();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", string1);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.cloneAttributes(derivedVariable0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.getFilePath();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.setAlternativeVariable(rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("PS>(t]sP_");
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      rawVariable0.getFilePath();
      assertEquals("PS>(t]sP_", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.2745180899177098
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.getCodeBookNumber();
      Variable.validateFields(derivedVariable0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=3.581951544267405
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.getLabel();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getValueLabels();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getValueLabels();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertEquals(0, arrayList0.size());
  }
}
