/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 10:49:26 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.520782696495816
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player((-264), "y", (-264));
      player0.reset(true);
      player0.getY();
      player0.setJoinOK(player0, true);
      player0.getX();
      byte[] byteArray0 = player0.pack();
      player0.setY(0.0F);
      Player player1 = new Player((short)4919, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (-739));
      player0.boss = (Party) player1;
      player1.next = (Party) player0;
      float float0 = Player.TOLERANCE;
      player0.setDead();
      player1.pack();
      player0.unpack(byteArray0);
      player0.setMoney((short)4919);
      player0.getZ();
      player0.setMoney((-1.0F));
      player1.type();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player2 = new Player((-264), "", 1);
      Player player3 = new Player((short)4919);
      player2.setJoinOK(player0, true);
      System.setCurrentTimeMillis(1392409296349L);
      player3.getTimeOfDeath();
      boolean boolean0 = player0.isJoinOK(player2, true);
      assertTrue(player0.isDead());
      
      player2.pack();
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.1021170635140374
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((-264));
      player0.reset(true);
      player0.getY();
      player0.setJoinOK(player0, true);
      player0.getX();
      player0.setY(0.0F);
      player0.getPictureId();
      float float0 = Player.TOLERANCE;
      player0.setDead();
      player0.setMoney(0);
      player0.getZ();
      player0.setMoney((-1.7136983F));
      Player player1 = new Player((-264), "", 1);
      Player player2 = new Player((short)4919);
      System.setCurrentTimeMillis(1392409296320L);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertTrue(player0.isDead());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player();
      Player player1 = new Player((-1));
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-71);
      byteArray0[1] = (byte)40;
      byteArray0[2] = (byte) (-71);
      player1.unpack(byteArray0);
      player0.add(player1);
      player0.setConnected(true);
      player0.pack();
      player0.setConnected(false);
      player0.isConnected();
      DataInputStream dataInputStream0 = null;
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.26147761112867
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player((-264), "", (-264));
      player0.reset(true);
      player0.getY();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.setJoinOK(player0, true);
      player0.getX();
      player0.pack();
      player0.setY(0.0F);
      player0.getPictureId();
      player0.setMoney(10.0F);
      Player player1 = new Player((-264), "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (-723));
      player0.boss = (Party) player0;
      player1.next = (Party) player0;
      player0.getMoney();
      player0.setDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      
      player1.pack();
      Player player2 = new Player(1799, "P", 1186);
      assertEquals(1186, player2.getPictureId());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player((-1335), (String) null, (String) null, (-1335), (-1335));
      player0.setZ(1.0F);
      player0.getIP();
      assertEquals(1.0F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "", "", 3118);
      player0.setY((-2310.2356F));
      player0.setJoinOK(player1, false);
      Player player2 = new Player((-1095));
      player2.isJoinOK(player1, false);
      player0.pack();
      float float0 = player0.getY();
      assertEquals((-2310.2356F), float0, 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      System.setCurrentTimeMillis((-461L));
      Player player0 = new Player((-908), (String) null, (-908));
      player0.toString();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-908), player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player((-4), "P", "P", (-4), (-4));
      player0.setX((-4));
      float float0 = player0.getX();
      assertEquals((-4.0F), float0, 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.270262287306028
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player((-264), "", (-264));
      player0.reset(true);
      player0.getY();
      player0.setZ((-264));
      player0.setJoinOK(player0, true);
      float float0 = Player.MOVE_DISTANCE;
      player0.getPictureId();
      Player player1 = new Player((-264), "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (-743));
      player0.boss = (Party) player1;
      player0.getMoney();
      player0.setDead();
      player1.pack();
      player0.getZ();
      player1.setDead();
      player1.setX(0.1F);
      player0.isJoinOK(player1, false);
      player0.type();
      player1.isJoinOK(player0, false);
      System.setCurrentTimeMillis(5);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead((-4011L));
      System.setCurrentTimeMillis((-4011L));
      player0.getTimeOfDeath();
      player0.getIP();
      assertEquals((-4011L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0);
      player0.toString();
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(362);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1043), 56);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(1, "VP[d", "8.@$PlT", 1);
      player0.setDead();
      player0.setX(0.0F);
      player0.type();
      float float0 = player0.getX();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = null;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.125543816101745
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, false);
      player0.pack();
      Party party0 = new Party();
      player0.next = party0;
      player0.setMoney(0.0F);
      player0.getZ();
      player0.setDead();
      Player player1 = new Player((short)4919);
      player1.setMoney((-3717.1025F));
      player1.isJoinOK(player0, false);
      player0.type();
      player0.isJoinOK(player1, true);
      player1.getMoney();
      int int0 = player0.type();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(47, "", ".*[.]class$", 47, 47);
      String string0 = player0.getIP();
      assertEquals(47, player0.getStrength());
      assertEquals("", string0);
      assertTrue(player0.isConnected());
      assertEquals(47, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.58357976679115
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player((-262), "", (-262));
      player0.getY();
      player0.getX();
      byte[] byteArray0 = player0.pack();
      player0.setY(0.0F);
      player0.getPictureId();
      Player player1 = new Player((-262), "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (-723));
      player0.boss = (Party) player1;
      player1.next = (Party) player0;
      player0.getMoney();
      player0.setDead();
      player1.pack();
      player0.unpack(byteArray0);
      player0.setMoney((-262));
      player0.getZ();
      player1.setDead();
      player1.setMoney(0.0F);
      player0.isJoinOK(player1, false);
      player0.type();
      Player player2 = new Player(0, "gui.ModuleBrowserDialog$ModuleFilter", 0);
      player0.setJoinOK(player2, false);
      player0.getName();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "I-GJ#9,t", "", (short)4919, (-615));
      player0.boss = (Party) player1;
      player0.add(player0.boss);
      player0.type();
      player0.setY((short)4919);
      assertEquals(4919.0F, player0.getY(), 0.01F);
      
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)23;
      byteArray1[2] = (byte) (-3);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 1);
      byteArray0[1] = (byte) (-3);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[6] = (byte)83;
      int int0 = player1.getStrength();
      assertEquals((-615), int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.574464215715726
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player((-1653));
      Player player1 = new Player((-1653), "-t9fQK>lC$k9", "-t9fQK>lC$k9", (short)4919, (short)4919);
      player0.setJoinOK(player1, true);
      player1.setY(0.2F);
      player0.isJoinOK(player1, true);
      float float0 = player1.getY();
      assertEquals(0.2F, float0, 0.01F);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.1982462795335826
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      System.setCurrentTimeMillis(3980L);
      Player player0 = new Player((-1), "l130B`;'Z-Vu.", "l130B`;'Z-Vu.", (-1), (-1));
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player1 = new Player((-856), "5_F_}8j ", "l130B`;'Z-Vu.", 761, (-2767));
      player1.setMoney((-1));
      player0.setDead();
      player1.setY((-1.0F));
      player0.add(player1);
      player0.boss = (Party) player1;
      player0.setDead();
      player0.isJoinOK(player1, false);
      player1.getSubparty();
      player1.setZ(2184.0F);
      player1.type();
      player1.setY(0.0F);
      player0.id = 761;
      player0.isJoinOK(player1, false);
      player1.getName();
      player0.isJoinOK(player1, false);
      player1.getTimeOfDeath();
      float float0 = player1.getZ();
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(2184.0F, float0, 0.01F);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(0L, player0.getTimeOfDeath());
      
      player0.setDead(1L, false);
      boolean boolean0 = player0.isDead();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      player0.getTimeOfDeath();
      int int0 = Packable.TEXT_MESSAGE;
      player0.getName();
      float float0 = player0.getY();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(134);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)0;
      byteArray0[3] = (byte)100;
      byteArray0[4] = (byte)75;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(3, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.304704691639832
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertTrue(boolean0);
      
      player1.pack();
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-1", player1.toString());
      assertFalse(player1.isDead());
      assertEquals(0, player1.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      player1.setJoinOK(player0, true);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals("0.0.0.0", player1.getIP());
      assertFalse(boolean0);
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(0, player1.getPictureId());
      assertEquals("Player4919", player1.toString());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player();
      String string0 = player0.toString();
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-1", string0);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(0, (String) null, 0);
      player0.getName();
      player0.next = null;
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player((-1), "", "", (-1), 4);
      player0.getTimeOfDeath();
      player0.setDead(2429L);
      int int0 = player0.getStrength();
      assertEquals(2429L, player0.getTimeOfDeath());
      assertEquals(4, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.782880254385889
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player((-312), "utKEGiGd{okTLm", "utKEGiGd{okTLm", 0, (-312));
      int int0 = player0.gangStrength();
      assertEquals((-312), int0);
      
      player0.setJoinOK(player0, false);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertTrue(boolean0);
      
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      
      player0.pack();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(1, "", "l#+9$)", 1);
      Party party0 = new Party(1);
      player0.prev = party0;
      party0.id = 5;
      player0.getPictureId();
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      
      int int0 = player0.getPictureId();
      assertEquals(1, int0);
      assertEquals("", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player((-264), "", (-264));
      assertFalse(player0.isDead());
      
      player0.reset(false);
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      
      player0.setJoinOK(player0, false);
      player0.pack();
      int int0 = player0.getPictureId();
      assertEquals((-264), int0);
      
      player0.pack();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player((-264));
      player0.getY();
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      player0.setY(0.0F);
      int int0 = player0.getPictureId();
      assertEquals(0, int0);
      
      player0.pack();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-264", player0.toString());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player();
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
      
      float float0 = player0.getX();
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, float0, 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.toString());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player((-264), "state.Party", "state.Party", (-264), (-264));
      player0.pack();
      assertTrue(player0.isConnected());
      assertEquals((-264), player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals((-264), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.085788413586281
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player((-1), "0.0.0.0", (-1));
      player0.id = 2;
      player0.setDead();
      player0.reset(false);
      player0.isDead();
      player0.type();
      player0.gangStrength();
      player0.reset(true);
      Player player1 = new Player(2, "C]MVT'P8P", "6QADwY8^aNt=#", 535);
      player1.add(player0);
      player1.gangStrength();
      player0.setJoinOK(player1, false);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)64;
      byteArray0[3] = (byte)127;
      player0.unpack(byteArray0);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertFalse(boolean0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.toString());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = "";
      Player player0 = new Player((-1), "", "", (-1), 4);
      player0.getTimeOfDeath();
      Player player1 = new Player(4, "", (short)4919);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0.0F);
      player0.pack();
      assertEquals("Player-1", player0.getName());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player((-4080), "b", "b", (-4080), (-4080));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      System.setCurrentTimeMillis((-4080));
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = player0.gangBoss();
      player0.reset(false);
      player0.add(party0);
      player0.pack();
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ((-842.4F));
      player0.pack();
      assertEquals((-842.4F), player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(true);
      player0.pack();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.toString());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player(2147340491);
      player0.setDead((long) 2147340491, false);
      player0.pack();
      assertEquals(2147340491L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player((-228));
      boolean boolean0 = player0.isConnected();
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(boolean0);
      assertEquals("Player-228", player0.toString());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player();
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
      
      int int0 = player0.getStrength();
      assertEquals(1, int0);
      
      String string0 = player0.getName();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", string0);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player();
      float float0 = player0.getMoney();
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, float0, 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, false);
      boolean boolean0 = player0.isDead();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-1", player0.toString());
      assertFalse(boolean0);
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.3616721964862397
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player(823, "joIzD}}h 8F]4", "itu[]vCbAK#_", 823, 0);
      player0.pack();
      player0.gangStrength();
      Player player1 = new Player(823, "qzVXe", "qzVXe", (-580), 1148);
      player1.setDead(0L);
      player1.gangStrength();
      player0.setMoney(0);
      player0.add(player1);
      player0.setY((-1370.4F));
      player1.setX(10.0F);
      player1.id = 1;
      player0.id = 1;
      player1.setConnected(false);
      player1.gangStrength();
      player0.setJoinOK(player1, false);
      player0.getStrength();
      player0.getTimeOfDeath();
      assertEquals((-1370.4F), player0.getY(), 0.01F);
      
      player1.getTimeOfDeath();
      float float0 = player1.getY();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player(4, " ", " ", 4, 4);
      int int0 = player0.gangStrength();
      assertEquals(4, int0);
      
      player0.getSubparty();
      float float0 = player0.getMoney();
      float float1 = player0.getY();
      assertTrue(player0.isConnected());
      assertEquals(float1, float0, 0.01F);
      assertEquals(0.0F, float1, 0.01F);
      assertFalse(player0.isDead());
      assertEquals(4, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte) (-99);
      byteArray0[2] = (byte)97;
      byteArray0[3] = (byte)4;
      player0.unpack(byteArray0);
      player0.setJoinOK(player0, false);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(boolean0);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      
      Player player1 = new Player(428, "", "", (short)4919, (short)4919);
      assertTrue(player1.isConnected());
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(4919, player1.getPictureId());
      assertEquals(4919, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-67);
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)75;
      player0.unpack(byteArray0);
      player0.pack();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-1", player0.toString());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      
      Player player1 = new Player((short)4919, "", 2484);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(player1.isConnected());
      assertFalse(player1.isDead());
      assertEquals(1, player1.getStrength());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(2484, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      player0.getIP();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Player player0 = new Player((-1583));
      player0.setDead((long) (-1583));
      assertEquals((-1583L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Player player0 = new Player();
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      player0.pack();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertTrue(player0.isConnected());
  }
}
