/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 28 09:53:07 GMT 2020
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4361623253853443
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1248));
      classWriter0.version = (-2885);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2885), "Wcsr_S-hE%f", "", "", "ConstantValue");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4659992569610426
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2546));
      classWriter0.index = (-2546);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "oPCHX[+vDvo|HaW{DC/", "oPCHX[+vDvo|HaW{DC/", "oPCHX[+vDvo|HaW{DC/", "oPCHX[+vDvo|HaW{DC/");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1248));
      classWriter0.version = (-2885);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2885), "Wcsr_S-hE%f", "", "", "ConstantValue");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6108643020548935
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2546));
      classWriter0.index = (-2546);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "oPCHX[+vDvo|HaW{DC/", "oPCHX[+vDvo|HaW{DC/", "oPCHX[+vDvo|HaW{DC/", "oPCHX[+vDvo|HaW{DC/");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(63490);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", "");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2514));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", "");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2448));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Kb9g2apK^>dZE\"Zjd-", "Kb9g2apK^>dZE\"Zjd-", "Kb9g2apK^>dZE\"Zjd-", "Kb9g2apK^>dZE\"Zjd-");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(12);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Kb9g2!HK>dHE\"Zjd", "Kb9g2!HK>dHE\"Zjd", (String) null, "Kb9g2!HK>dHE\"Zjd");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(62651);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 62651, "uL['C-Mcr%", "uL['C-Mcr%", "", "");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = 2321;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation("^kqw", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.8239592165010823
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2471));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Kb9g2apK^>dZE\"Zjd-", "Kb9g2apK^>dZE\"Zjd-", (String) null, "Kb9g2apK^>dZE\"Zjd-");
      ByteVector byteVector0 = new ByteVector();
      Attribute attribute0 = new Attribute("Kb9g2apK^>dZE\"Zjd-");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2498));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Kb9g2apK^>dZE\"Zjd-", "Kb9g2apK^>dZE\"Zjd-", "Kb9g2apK^>dZE\"Zjd-", "Kb9g2apK^>dZE\"Zjd-");
      ByteVector byteVector0 = classWriter0.pool;
      byte[] byteArray0 = new byte[0];
      byteVector0.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 3628, "The FilenameFilter must not be null", "The FilenameFilter must not be null", "The FilenameFilter must not be null", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(177);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 177, "~lAo_ o$3TlTg{!", "~lAo_ o$3TlTg{!", "~lAo_ o$3TlTg{!", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(62651);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = (-29);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2321, "^kqw", "Kb9g2apK^>dZE\"Zjd-", (String) null, (Object) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6330395116644678
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2471));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Kb9g2apK^>dZE\"Zjd-", "Kb9g2apK^>dZE\"Zjd-", "Kb9g2apK^>dZE\"Zjd-", "Kb9g2apK^>dZE\"Zjd-");
      ByteVector byteVector0 = classWriter0.pool;
      Attribute attribute0 = new Attribute("Kb9g2apK^>dZE\"Zjd-");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6128694524619496
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1248));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1248), "P", "P", "P", "P");
      ByteVector byteVector0 = new ByteVector(6);
      classWriter0.lastField.visitAnnotation("~\"B&,|dib+<", false);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6546695645285008
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2466));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Kb9g2apK^>dZE\"Zjd-", "Kb9g2apK^>dZE\"Zjd-", (String) null, "Kb9g2apK^>dZE\"Zjd-");
      fieldWriter0.visitAnnotation("Kb9g2apK^>dZE\"Zjd-", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4361623253853443
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1248));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1248), "P", "P", "P", "P");
      ByteVector byteVector0 = new ByteVector(6);
      classWriter0.visit(49, 1, "P", "qW,m# M p", "The array of prefixes must not be null", (String[]) null);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4659992569610426
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(30);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "oPCHX[+vDvo|HaW{DC/", "oPCHX[+vDvo|HaW{DC/", "oPCHX[+vDvo|HaW{DC/", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.8239592165010823
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2552));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "oPCHX[+vDvo|HaW{DC/", "oPCHX[+vDvo|HaW{DC/", "oPCHX[+vDvo|HaW{DC/", "oPCHX[+vDvo|HaW{DC/");
      Attribute attribute0 = new Attribute("oPCHX[+vDvo|HaW{DC/");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.6108643020548935
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2466));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Kb9g2apK^>dZE\"Zjd-", "Kb9g2apK^>dZE\"Zjd-", (String) null, "Kb9g2apK^>dZE\"Zjd-");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1248));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1248), "P", "P", "P", "P");
      int int0 = classWriter0.lastField.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(62651);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 62651, "uL['C-Mcr%", "uL['C-Mcr%", "", "");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "The wildcard must not be null";
      stringArray0[1] = "3Z]rMwz9jqQ";
      classWriter0.visit(49, 64930, "The wildcard must not be null", "The wildcard must not be null", "Kb9g2apK^>dZE\"Zjd-", stringArray0);
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.6108643020548935
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2636));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 670, "", "", "", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.8239592165010823
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(62651);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 62651, "uL['C-Mcr%", "uL['C-Mcr%", "", "");
      fieldWriter0.visitAnnotation("Kb9g2apK^>dZE\"Zjd-", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(42, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.8239592165010823
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(62651);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 62651, "uL['C-Mcr%", "uL['C-Mcr%", "", "");
      fieldWriter0.visitAnnotation("uL['C-Mcr%", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(42, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(62651);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 62651, "uL['C-Mcr%", "uL['C-Mcr%", "", "");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 2321, "^kqw", "Kb9g2apK^>dZE\"Zjd-", (String) null, (Object) null);
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2466));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Kb9g2apK^>dZE\"Zjd-", "Kb9g2apK^>dZE\"Zjd-", (String) null, "Kb9g2apK^>dZE\"Zjd-");
      fieldWriter0.visitEnd();
  }
}
