/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 18:32:45 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias((String) null);
      derivedVariable0.setColumnEnd("general.error.blankField");
      derivedVariable0.getAlias();
      assertEquals("general.error.blankField", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.991661676973648
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.columnEnd = "UNABLE_TO_DISASSOCIATE_ONTOLOGY_TERM";
      rawVariable0.form = "UNABLE_TO_DISASSOCIATE_ONTOLOGY_TERM";
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName((String) null);
      supportingDocument0.setIdentifier((-839));
      arrayList1.add(supportingDocument0);
      supportingDocument0.setFilePath((String) null);
      supportingDocument0.setDocumentCode((String) null);
      UnaryOperator<SupportingDocument> unaryOperator0 = UnaryOperator.identity();
      arrayList1.replaceAll(unaryOperator0);
      supportingDocument0.getDisplayName();
      arrayList1.add(supportingDocument0);
      rawVariable0.addSupportingDocuments(arrayList1);
      rawVariable0.columnStart = null;
      rawVariable0.setNotes((String) null);
      rawVariable0.isCoded();
      rawVariable0.setAvailability("O(qB@NwY=");
      rawVariable0.getIdentifier();
      rawVariable0.isCoded();
      rawVariable0.getAlias();
      rawVariable0.getColumnStart();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.clone();
      rawVariable0.getValueLabels();
      rawVariable0.getAlias();
      rawVariable0.getLabel();
      rawVariable0.getAvailability();
      Variable.validateFields(rawVariable0);
      assertEquals("O(qB@NwY=", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getLabel());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.9167460195023938
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-2058005160));
      rawVariable0.setCleaningDescription("sLFkZT");
      rawVariable0.setCleaned(false);
      rawVariable0.getIdentifier();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      assertEquals("sLFkZT", rawVariable0.getCleaningDescription());
      
      User user0 = new User("5~U^C<w<", "UNABLE_TO_GET_ORIGINAL_CATEGORY");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("supportingDocument.documentCode.saveChanges");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocument((SupportingDocument) null);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.getNotes();
      derivedVariable0.setCleaningDescription("F");
      derivedVariable0.addSupportingDocument((SupportingDocument) null);
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.146102255087602
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-1));
      rawVariable0.setAlternativeVariable(rawVariable0);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("-1", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.146102255087602
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = ">(*-Ea1},K]{v%[CC";
      rawVariable0.setIdentifier(1675);
      rawVariable0.setAlternativeVariable(rawVariable0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("1675", rawVariable0.getDisplayItemIdentifier());
      assertEquals(1675, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList0.add(valueLabel1);
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.setCodeBookNumber((String) null);
      String string0 = rawVariable0.getQuestionNumber();
      assertNotNull(string0);
      
      String string1 = rawVariable0.getNotes();
      assertNotNull(string1);
      
      String string2 = rawVariable0.getColumnEnd();
      assertNotNull(string2);
      
      String string3 = rawVariable0.getAlias();
      assertNotNull(string3);
      
      String string4 = rawVariable0.getCodeBookNumber();
      assertNull(string4);
      
      boolean boolean0 = rawVariable0.isCoded();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.7463568973953323
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setName("F");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.getName();
      assertEquals("F", rawVariable0.getName());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.48940315962994
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart((String) null);
      rawVariable0.setLabel("k1jw*V Jfsnw2\"3s^j");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("k1jw*V Jfsnw2\"3s^j", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("6");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.getLabel();
      assertEquals("6", rawVariable0.getLabel());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "UNABLE_TO_UPDATE_RAW_VARIABLE";
      derivedVariable0.getColumnStart();
      derivedVariable0.getLabel();
      assertEquals("UNABLE_TO_UPDATE_RAW_VARIABLE", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("B");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setQuestionNumber("B");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable2.updateOntologyTerm(ontologyTerm0);
      rawVariable2.getQuestionNumber();
      rawVariable2.getCleaningDescription();
      assertEquals("B", rawVariable2.getQuestionNumber());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.536563018997195
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user1 = new User();
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      User user2 = new User("*9_JQ\"7uRZc1JE<QNUG", "[.F7\"[F9D(]Q=l?f");
      Variable.detectFieldChanges(user2, rawVariable0, rawVariable0);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.9971515848932915
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      
      Variable variable0 = rawVariable0.getAlternativeVariable();
      assertFalse(variable0.isCleaned());
      assertFalse(variable0.isCoded());
      assertFalse(variable0.isNewRecord());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.2946911718967824
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      rawVariable0.setFilePath("6");
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      arrayList1.add(valueLabel0);
      arrayList0.addAll((Collection<? extends ValueLabel>) arrayList1);
      ValueLabel valueLabel1 = new ValueLabel();
      User user0 = new User("6", "6");
      valueLabel1.clone();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.validateFields(valueLabel1);
      ValueLabel.detectFieldChanges(user0, derivedVariable1, valueLabel1, valueLabel2);
      arrayList0.add(valueLabel1);
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.getIdentifier();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable1.setIsNewRecord(true);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable2.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList2);
      rawVariable0.getFilePath();
      derivedVariable1.getSupportingDocuments();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      ArrayList<OntologyTerm> arrayList3 = derivedVariable1.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList3);
      derivedVariable1.getAlternativeVariable();
      assertTrue(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getCleaningDescription();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.getAlternativeVariable();
      rawVariable0.getValueLabels();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      RawVariable rawVariable0 = new RawVariable();
      ontologyTerm1.setIdentifier((-2054114791));
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.9698092248500694
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("variable.cleaningStatus.label");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.notes = "d";
      rawVariable0.notes = "variable.cleaningStatus.label";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.getCategory();
      rawVariable0.getValueLabels();
      rawVariable0.getIdentifier();
      rawVariable0.getColumnEnd();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("6");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("6");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("6", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.369978708581614
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.isCleaned();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.7429622436872183
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setIdentifier((-348));
      rawVariable0.setAlternativeVariable(rawVariable1);
      Variable.validateFields(rawVariable0);
      rawVariable1.createVariableSummary();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable1.getCleaningStatus();
      assertEquals("-348", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.969755134636486
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath((String) null);
      derivedVariable0.getNotes();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      derivedVariable0.setForm((String) null);
      arrayList0.stream();
      arrayList0.spliterator();
      arrayList0.forEach(consumer0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getValueLabels();
      arrayList0.parallelStream();
      derivedVariable0.setName((String) null);
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getDisplayName();
      derivedVariable0.getCodeBookNumber();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.hasSameDisplayName(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.9717956303085744
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(4480);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setForm("variable.name.label");
      derivedVariable0.getIdentifier();
      derivedVariable0.getAvailability();
      System.setCurrentTimeMillis(0);
      derivedVariable0.getForm();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      ontologyTerm0.setDescription("variable.codeBookNumber.label");
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.clone();
      derivedVariable0.getDisplayName();
      User user0 = new User();
      rawVariable0.setAvailability(":x%\u0007>SmsnaE-v");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      derivedVariable0.clone();
      rawVariable0.setAlias("");
      rawVariable0.getCleaningDescription();
      rawVariable0.isCleaned();
      rawVariable1.hasSameDisplayName(rawVariable0);
      rawVariable1.clone();
      derivedVariable0.getDisplayItemIdentifier();
      assertEquals("variable.name.label", derivedVariable0.getForm());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("BBd(iGbN9PsGs");
      rawVariable0.getFilePath();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      assertEquals("BBd(iGbN9PsGs", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.5855274061277456
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("q");
      rawVariable0.setCleaningStatus("n`@WR~O<kbqNUE{hv6-");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.removeOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.getDisplayName();
      assertEquals("q", rawVariable0.getDisplayName());
      
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable1);
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("mNo+xr35rU@g");
      derivedVariable0.getCategory();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getAlternativeVariable();
      assertEquals("mNo+xr35rU@g", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.282360045759959
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertTrue(derivedVariable0.isCleaned());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.8055124628724255
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getFilePath();
      rawVariable0.setCleaningStatus((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("");
      rawVariable0.setLabel("");
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      User user1 = new User();
      user1.setAddressLine1("OSm![lH1e't9");
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user1, rawVariable1, rawVariable1);
      assertTrue(arrayList0.isEmpty());
      
      String string0 = rawVariable0.getCleaningStatus();
      assertNull(string0);
      
      rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(derivedVariable0.isCoded());
      assertTrue(boolean0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setQuestionNumber("<=*@g>fQ[;S0yu}R$");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("<=*@g>fQ[;S0yu}R$", rawVariable1.getQuestionNumber());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.9971515848932915
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.301608716407634
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User("e", "9oScyi i.6");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      rawVariable0.setValueLabels(arrayList0);
      arrayList0.add(valueLabel1);
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.setCodeBookNumber("z2");
      rawVariable0.getNotes();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("");
      derivedVariable0.getSourceVariables();
      derivedVariable0.getAvailability();
      rawVariable0.getColumnEnd();
      rawVariable0.getAlias();
      rawVariable0.getCodeBookNumber();
      boolean boolean0 = rawVariable0.isCoded();
      assertEquals("z2", rawVariable0.getCodeBookNumber());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.6305437208796447
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.notes = "}@g_{>o~qLo7";
      rawVariable0.setAlternativeVariable(derivedVariable0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCleaned());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getName());
      assertEquals("", rawVariable1.getForm());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getColumnEnd());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("}@g_{>o~qLo7", rawVariable1.getNotes());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertTrue(boolean0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(rawVariable0);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable1);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "B,q:16MR";
      String string0 = rawVariable0.getFilePath();
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("6");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("6");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("6", derivedVariable0.getNotes());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.columnEnd = null;
      rawVariable1.questionNumber = "DUPLICATE_ONTOLOGY_TERM";
      String string0 = rawVariable1.getFilePath();
      assertFalse(rawVariable1.isNewRecord());
      assertNotNull(string0);
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", string0);
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("Z 9~Lu*G;)M");
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.653990088159252
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.8212255045191412
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel1);
      derivedVariable0.setCleaned(true);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.clone();
      derivedVariable0.isCoded();
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.067461933429295
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("CJYv!e@%:KUA|D7i");
      rawVariable0.getCleaningDescription();
      assertEquals("CJYv!e@%:KUA|D7i", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("6");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("6");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("6", rawVariable0.getName());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setYear("'\"|,=G;Eq+bSBUAx/lC");
      rawVariable1.createVariableSummary();
      rawVariable1.setYear("/.m2");
      assertEquals("/.m2", rawVariable1.getYear());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("?sxd:+t5[");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("?sxd:+t5[", "?sxd:+t5[");
      User user1 = new User();
      rawVariable0.createVariableSummary();
      assertEquals("?sxd:+t5[", rawVariable0.getName());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.625390528762087
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.setIdentifier(1);
      derivedVariable0.createVariableSummary();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.clone();
      assertEquals(1, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(true);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable2);
      assertFalse(rawVariable2.isCoded());
      assertTrue(rawVariable0.isCoded());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.7466212728084187
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("F");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setLabel("F");
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("F", "F");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("F", rawVariable0.getName());
      assertEquals("F", rawVariable0.getLabel());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("i'#!X");
      User user0 = new User("", "Lo]KE2D19{`?FM$O8!W");
      user0.setStatus((String) null);
      user0.setIdentifier(341);
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      derivedVariable0.setAlias("");
      rawVariable0.setLabel((String) null);
      derivedVariable0.setAvailability("K9E|X\"T");
      derivedVariable0.setCategory("Lo]KE2D19{`?FM$O8!W");
      rawVariable0.getFilePath();
      derivedVariable0.getAlternativeVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("LHA", ontologyTerm0.getOntologyName());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.6321363424300435
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("]");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.clone();
      assertEquals("]", rawVariable0.getName());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("UNABLE_TO_GET_USER_IDENTIFIER");
      rawVariable0.setAlias("5Fyrm>E>Ut.i");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      User user0 = new User("UNABLE_TO_GET_USER_IDENTIFIER", "UNABLE_TO_GET_USER_IDENTIFIER");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.setForm("d?bL%0Rll_>JcVa");
      rawVariable0.getFilePath();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getCleaningDescription();
      assertEquals("UNABLE_TO_GET_USER_IDENTIFIER", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("6");
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("6", "6");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("6", rawVariable0.getLabel());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertNull(macawChangeEvent0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.383522442827672
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertTrue(derivedVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("F");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.codeBookNumber = "F";
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("F", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("F");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("F", rawVariable0.getName());
      assertFalse(arrayList0.isEmpty());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.6851309643957646
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("6");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.form = "6";
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("6", rawVariable0.getForm());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("variable.label.label");
      rawVariable0.setLabel("variable.label.label");
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("variable.label.label", rawVariable0.getCleaningStatus());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user0, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.9498260458782015
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("F");
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("F", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.281440279691212
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes((String) null);
      rawVariable0.setAlternativeVariable(rawVariable0);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      String string0 = rawVariable0.getNotes();
      assertFalse(rawVariable0.isNewRecord());
      assertNull(string0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.488701025045145
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = null;
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.6846842034128904
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("6");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setNotes("6");
      User user0 = new User("6", "6");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      assertEquals("6", rawVariable1.getNotes());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.5788772673323948
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("6");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("6", rawVariable0.getLabel());
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.6851309643957646
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "8Ze[[TTrU9pFv$T0m4";
      rawVariable0.setLabel("6");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("6", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getName());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("6");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("6");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("6", derivedVariable0.getColumnEnd());
      assertEquals("6", rawVariable0.getLabel());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("F");
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("F", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.setEmail("n`@WR~O<kbqNUE{hv6-");
      derivedVariable0.codeBookNumber = "n`@WR~O<kbqNUE{hv6-";
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("n`@WR~O<kbqNUE{hv6-", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("general.error.blankField");
      derivedVariable0.getAlias();
      assertEquals("general.error.blankField", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.75012938226178
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("4'a/bH.qg!Ae");
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setAlias("user.userID.saveChanges");
      valueLabel0.setLabel("zVN=N~J$<M!LHuZ^:(");
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.getCleaningDescription();
      derivedVariable0.setYear("");
      derivedVariable0.isNewRecord();
      derivedVariable0.getQuestionNumber();
      derivedVariable0.setYear("");
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.726634037681537
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("UNABLE_TO_GET_STUDY_YEARS", "UNABLE_TO_GET_STUDY_YEARS");
      rawVariable0.setQuestionNumber("UNABLE_TO_GET_STUDY_YEARS");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals("UNABLE_TO_GET_STUDY_YEARS", rawVariable0.getQuestionNumber());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "variable.questionNumber.label";
      rawVariable0.setAlias("user.county.saveChanges");
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setCoded(true);
      rawVariable0.isNewRecord();
      rawVariable0.setQuestionNumber("user.county.saveChanges");
      rawVariable0.setCleaningDescription((String) null);
      assertEquals("user.county.saveChanges", rawVariable0.getQuestionNumber());
      
      User user0 = new User("variable.questionNumber.label", "user.county.saveChanges");
      user0.setStatus((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.554218296452355
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals(0, arrayList0.size());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("ONTOLOGY_TERM");
      rawVariable0.getAlias();
      rawVariable0.getValueLabels();
      assertEquals("ONTOLOGY_TERM", rawVariable0.getAlias());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber((String) null);
      String string0 = derivedVariable0.getColumnStart();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertNotNull(string0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("UNABLE_TO_CREATE_VALUE_LABELS");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("UNABLE_TO_CREATE_VALUE_LABELS", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "variable.codeBookNumber.label";
      String string0 = rawVariable0.getLabel();
      assertEquals("", string0);
      
      String string1 = rawVariable0.getCodeBookNumber();
      assertEquals("", string1);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "k";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("k", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getLabel());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.490114296025901
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.setCategory("F");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      Variable.validateFields(derivedVariable0);
      assertEquals("F", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("");
      derivedVariable0.getColumnStart();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("f4t)Lo2mXz(");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("f4t)Lo2mXz(", derivedVariable0.getCleaningDescription());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(1, arrayList0.size());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable1.removeSupportingDocuments(arrayList0);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable1);
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.6846842034128904
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("macaw.system.MacawErrorType");
      rawVariable0.createVariableSummary();
      assertEquals("macaw.system.MacawErrorType", rawVariable0.getQuestionNumber());
      
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("6");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.getSourceVariables();
      rawVariable0.createVariableSummary();
      assertEquals("6", rawVariable0.getLabel());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.301608716407634
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("user.password.saveChanges");
      Variable.validateFields(derivedVariable0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.getAvailability();
      assertEquals("user.password.saveChanges", derivedVariable0.getForm());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      rawVariable0.notes = "variable.alternativeVariable.label";
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", variableSummary0.getYear());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getDisplayName());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("<p.rFL@q3w=p/");
      User user0 = new User();
      derivedVariable0.createVariableSummary();
      assertEquals("<p.rFL@q3w=p/", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = derivedVariable0.getDisplayItemIdentifier();
      assertEquals("0", string0);
      
      derivedVariable0.getNotes();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-1));
      Variable.validateFields(rawVariable0);
      rawVariable0.getYear();
      assertEquals("-1", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.5808383717256613
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(false);
      rawVariable0.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.getYear();
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.635444637347097
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeValueLabel((ValueLabel) null);
      rawVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.clone();
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setSupportingDocuments(arrayList0);
      ArrayList<String> arrayList1 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList1.size());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isCoded());
      
      derivedVariable0.setCoded(true);
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertTrue(derivedVariable0.isCoded());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=3.625071549495739
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("UNABLE_TO_GET_CLEANING_STATE_IDENTIFIER");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.clone();
      assertEquals("UNABLE_TO_GET_CLEANING_STATE_IDENTIFIER", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.5353865202004258
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("6");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.clone();
      assertEquals("6", rawVariable0.getLabel());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.625071549495739
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("variable.alias.label");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.clone();
      assertEquals("variable.alias.label", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("bariable.notes.label");
      rawVariable0.clone();
      assertEquals("bariable.notes.label", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=3.624728496322497
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.codeBookNumber = "^$L\"{";
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getForm());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("^$L\"{", derivedVariable1.getCodeBookNumber());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("", derivedVariable1.getAlias());
      
      derivedVariable0.getCleaningStatus();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=3.5806560020475704
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.notes = null;
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("3nJ&zQ+4w't");
      derivedVariable0.getColumnEnd();
      assertEquals("3nJ&zQ+4w't", derivedVariable0.getForm());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("1");
      Variable.validateFields(rawVariable0);
      assertEquals("1", rawVariable0.getColumnStart());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("q");
      int int0 = rawVariable0.getIdentifier();
      assertEquals("q", rawVariable0.getCleaningDescription());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.05569358184064
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("general.fieldValue.blank");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("general.fieldValue.blank", rawVariable0.getYear());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("general.fieldValue.blank");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("general.fieldValue.blank", rawVariable0.getYear());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("a");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("F");
      Variable.validateFields(rawVariable0);
      assertEquals("F", rawVariable0.getName());
      assertEquals("F", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.653990088159252
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("variable.label.label");
      rawVariable0.setCleaningStatus("variable.label.label");
      rawVariable0.setAlternativeVariable(rawVariable0);
      assertEquals("variable.label.label", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertFalse(rawVariable0.isCoded());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("UNABLE_TO_GET_ALTERNATIVE_VARIABLE");
      rawVariable0.setAlternativeVariable(rawVariable0);
      assertEquals("UNABLE_TO_GET_ALTERNATIVE_VARIABLE", rawVariable0.getColumnEnd());
  }
}
