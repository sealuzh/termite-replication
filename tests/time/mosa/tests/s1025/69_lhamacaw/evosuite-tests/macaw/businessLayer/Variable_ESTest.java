/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 09:34:14 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.4821394381001958
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = null;
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertTrue(arrayList0.isEmpty());
      
      String string0 = rawVariable0.getColumnStart();
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertNull(string0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.999467728856233
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setIdentifier((-1523));
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.addSourceVariable(derivedVariable1);
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertEquals("-1523", derivedVariable0.getDisplayItemIdentifier());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.0823572675934168
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("<A$");
      Variable.validateFields(derivedVariable0);
      derivedVariable0.setCategory("EDIT");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ontologyTerm0.setIdentifier(1210);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.getDisplayName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getValueLabels();
      derivedVariable0.getCategory();
      derivedVariable0.getCleaningDescription();
      assertEquals("EDIT", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.672814840803382
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-2014024447));
      rawVariable0.setCleaningStatus("+emm6A4IC[kZobf");
      rawVariable0.cloneAttributes(rawVariable0);
      rawVariable0.setAvailability((String) null);
      rawVariable0.clone();
      rawVariable0.clone();
      rawVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.createVariableSummary();
      rawVariable0.getAlternativeVariable();
      assertEquals("-2014024447", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setLabel("H");
      User user0 = new User("H", "H");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("H", rawVariable0.getLabel());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("n *:  )Y6Py");
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("n *:  )Y6Py");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("n *:  )Y6Py", rawVariable0.getLabel());
      assertEquals("n *:  )Y6Py", derivedVariable0.getName());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.599957686803094
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "uX+y";
      rawVariable0.columnEnd = "general.fieldValue.blank";
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable1.getNotes();
      assertEquals("uX+y", rawVariable1.getNotes());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setLabel("macaw.businessLayer.DerivedVariable");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("macaw.businessLayer.DerivedVariable", rawVariable0.getLabel());
      assertFalse(arrayList0.isEmpty());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("p;1wk7rt#|");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("p;1wk7rt#|", rawVariable1.getLabel());
      assertFalse(arrayList0.isEmpty());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.7471740047912334
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("93B");
      rawVariable0.setAvailability((String) null);
      rawVariable0.getYear();
      rawVariable0.getNotes();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.createVariableSummary();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("93B", rawVariable0.getYear());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.007081920694827
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setForm((String) null);
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      supportingDocument1.setTitle("(");
      supportingDocument1.setDocumentCode((String) null);
      supportingDocument1.setDescription("4|oz#KxxqxeT");
      derivedVariable0.removeSupportingDocument(supportingDocument1);
      derivedVariable0.columnStart = "UNABLE_TO_CHECK_DOCUMENT_DUPLICATES";
      derivedVariable0.setAlias("");
      derivedVariable0.setCleaningStatus("");
      derivedVariable0.getFilePath();
      derivedVariable0.getAvailability();
      derivedVariable0.getForm();
      derivedVariable0.getNotes();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.getDisplayName();
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      derivedVariable0.getOntologyTerms();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals("", derivedVariable0.getCleaningStatus());
      
      rawVariable0.getFilePath();
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.8657987404222727
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addOntologyTerms(arrayList0);
      derivedVariable0.setName("TkeQ+s2kcYUhwIdA|C");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      derivedVariable1.setName((String) null);
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable3.setAlternativeVariable(derivedVariable0);
      derivedVariable2.cloneAttributes(derivedVariable4);
      derivedVariable1.getName();
      User user0 = new User();
      User user1 = new User("NON_EXISTENT_CATEGORY", "");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable2.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      try { 
        DerivedVariable.validateFields(derivedVariable2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.6699756656540683
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setIdentifier(494);
      derivedVariable0.columnStart = "c0`fl?%N@D<.bt";
      derivedVariable0.clone();
      derivedVariable0.createVariableSummary();
      derivedVariable0.getForm();
      derivedVariable0.getForm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setIdentifier(1);
      derivedVariable1.clone();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      assertEquals(494, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.6601609159707396
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.9159303165315698
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.setCodeBookNumber((String) null);
      rawVariable0.getFilePath();
      rawVariable0.setAlias("0");
      rawVariable0.getIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable0.getColumnStart();
      rawVariable0.setName("0");
      rawVariable0.setAlias("");
      rawVariable0.getYear();
      rawVariable0.getCleaningDescription();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getIdentifier();
      rawVariable0.getCodeBookNumber();
      derivedVariable0.setIsNewRecord(true);
      assertTrue(derivedVariable0.isNewRecord());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getCategory();
      rawVariable1.containsOntologyTerm(ontologyTerm0);
      rawVariable1.getName();
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.8407503065040274
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.setIdentifier(649);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("649", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart((String) null);
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, arrayList0.size());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("J", "J");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("|xF");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("|xF", rawVariable0.getYear());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.7601808508040717
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(329);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.clone();
      User user0 = new User();
      User user1 = new User("Sl4D*\"QRX", "UNABLE_TO_GET_CLEANING_STATE_NAME");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm1);
      rawVariable0.setName("UNABLE_TO_GET_CLEANING_STATE_NAME");
      rawVariable0.setAlias("9J^/2?SOaAwKY|5o");
      rawVariable0.getYear();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getCategory();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      assertEquals("9J^/2?SOaAwKY|5o", rawVariable0.getAlias());
      
      boolean boolean1 = derivedVariable1.hasSameDisplayName(derivedVariable0);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      
      derivedVariable0.setCleaningStatus("");
      derivedVariable0.setCleaned(true);
      Variable.validateFields(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("g", "g");
      rawVariable0.setCleaningStatus("g");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("g", rawVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.1380501687234124
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      
      boolean boolean0 = derivedVariable0.isCleaned();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.866089226987269
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ontologyTerm0.setTerm("-LHA");
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable0.getDisplayName();
      derivedVariable0.getSupportingDocuments();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.createVariableSummary();
      Variable.validateFields(derivedVariable0);
      rawVariable0.getFilePath();
      RawVariable rawVariable1 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription((String) null);
      String string0 = rawVariable0.getCleaningDescription();
      assertNull(string0);
      
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.404011652717737
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-2013265917));
      rawVariable0.setAlternativeVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("-2013265917", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-5226));
      int int0 = rawVariable0.getIdentifier();
      assertEquals("-5226", rawVariable0.getDisplayItemIdentifier());
      assertEquals((-5226), int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("p;1wk7rt#|");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getLabel();
      assertEquals("p;1wk7rt#|", rawVariable0.getLabel());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.9971515848932915
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      
      Variable variable0 = rawVariable0.getAlternativeVariable();
      assertFalse(variable0.isCoded());
      assertFalse(variable0.isCleaned());
      assertFalse(variable0.isNewRecord());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("variable.columnStart.label");
      derivedVariable0.setName("J");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("J", derivedVariable0.getName());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.13669049038172
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-1073741822));
      rawVariable0.setAlternativeVariable(derivedVariable0);
      assertEquals("-1073741822", derivedVariable0.getDisplayItemIdentifier());
      
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "INVALID_ONTOLOGY_TERM";
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      assertEquals("", variableSummary0.getName());
      assertEquals("", variableSummary0.getLabel());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", variableSummary0.getYear());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setForm("9{");
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("9{", rawVariable1.getForm());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.632197381311811
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setIdentifier(1187);
      derivedVariable0.setName("]");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      derivedVariable1.clone();
      int int0 = derivedVariable1.getIdentifier();
      assertEquals(1187, int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "CqeH+Nw*a6ayu@*v";
      derivedVariable0.notes = "CqeH+Nw*a6ayu@*v";
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getDisplayName());
      assertEquals("", variableSummary0.getYear());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      derivedVariable0.getDisplayName();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("UNABLE_TO_DELETE_ONTOLOGY_TERM");
      derivedVariable0.notes = "UNABLE_TO_DELETE_ONTOLOGY_TERM";
      derivedVariable0.createVariableSummary();
      assertEquals("UNABLE_TO_DELETE_ONTOLOGY_TERM", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "AOmM";
      derivedVariable0.setCleaningStatus("variable.alternativeVariable.label");
      derivedVariable0.createVariableSummary();
      assertEquals("variable.alternativeVariable.label", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("J");
      derivedVariable0.setName("J");
      User user0 = new User("J", "J");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("J", derivedVariable0.getName());
      assertEquals("J", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("variable.isCoded.label");
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("variable.isCoded.label", rawVariable0.getCategory());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.8673572346551417
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getCleaningStatus();
      derivedVariable0.getIdentifier();
      User user0 = new User("Sl4D*\"QRX", "");
      derivedVariable0.getColumnEnd();
      user0.setLastName("Sl4D*\"QRX");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      rawVariable0.setIsNewRecord(true);
      rawVariable0.clone();
      derivedVariable0.clone();
      rawVariable0.isNewRecord();
      assertTrue(rawVariable0.isNewRecord());
      
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getNotes();
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.6851309643957646
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "93B";
      derivedVariable0.setName("J");
      User user0 = new User("J", "J");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("J", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.4696072829762055
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setNameSpace("variable.columnStart.label");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.form = "variable.columnStart.label";
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getAlias();
      derivedVariable0.getQuestionNumber();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      rawVariable0.getForm();
      assertEquals("variable.columnStart.label", rawVariable0.getForm());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.4466856169199285
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("hq&Z&Q{BgyS3j%/-LB");
      rawVariable0.getAlias();
      rawVariable0.getLabel();
      assertEquals("hq&Z&Q{BgyS3j%/-LB", rawVariable0.getAlias());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(false);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("AsY_am(AQ}}");
      user0.setPostCode((String) null);
      rawVariable0.addSupportingDocument(supportingDocument0);
      valueLabel0.setIdentifier(1);
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.getForm();
      supportingDocument0.setFileName("'8+GBqbH>C");
      supportingDocument0.setIdentifier(1);
      String string0 = rawVariable0.getAvailability();
      assertEquals("Unknown", string0);
      
      boolean boolean0 = rawVariable0.isCleaned();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean1 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean1 == boolean0);
      
      int int0 = rawVariable0.getIdentifier();
      assertEquals(0, int0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.getQuestionNumber();
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.5642900265283206
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      valueLabel0.setMissingValue(true);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("z<M`J,w\u0006mw?");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument1);
      valueLabel0.setIdentifier((-2536));
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.getForm();
      supportingDocument1.setFileName("");
      supportingDocument0.setIdentifier(608);
      rawVariable0.isCleaned();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getQuestionNumber();
      derivedVariable1.getQuestionNumber();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.603069605607787
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(2989);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      
      rawVariable0.getYear();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCleaned());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(3162);
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.7510542845003565
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(2989);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.clone();
      rawVariable1.setName(".I");
      rawVariable1.setAlias(".I");
      rawVariable1.getYear();
      assertEquals(".I", rawVariable1.getDisplayName());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getCategory();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.3917250844866427
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      Variable.validateFields(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setName((String) null);
      User user0 = new User((String) null, (String) null);
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.getName();
      assertTrue(derivedVariable0.isCleaned());
      
      derivedVariable1.getQuestionNumber();
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.383522442827672
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertFalse(derivedVariable1.isCleaned());
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.6930121983106288
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setColumnEnd("DOTKD");
      rawVariable0.setCleaningDescription("7|=J5[)ve?9x<BWrig");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getColumnEnd();
      rawVariable0.getYear();
      rawVariable0.getColumnEnd();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = null;
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      String string0 = derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertNotNull(string0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("UNABLE_TO_CREATE_DERIVED_VARIABLE");
      derivedVariable0.createVariableSummary();
      assertEquals("UNABLE_TO_CREATE_DERIVED_VARIABLE", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.6305437208796447
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "Sl4D*\"QRX";
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("Sl4D*\"QRX", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("qzfn={'");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("qzfn={'", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.9003854066784616
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "=message==";
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("=message==", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("J");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setColumnEnd("J");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("J", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.getSupportingDocuments();
      rawVariable0.createVariableSummary();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertFalse(rawVariable0.isNewRecord());
      assertNull(macawChangeEvent0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.4316244347695988
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      user0.setCounty("");
      rawVariable0.setAlternativeVariable(derivedVariable1);
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      
      DerivedVariable derivedVariable3 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertTrue(boolean0);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.getFilePath();
      rawVariable0.setAlias("0");
      assertEquals("0", rawVariable0.getAlias());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(true);
      derivedVariable0.isCoded();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "({NX<5";
      String string0 = rawVariable0.getAlias();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      user0.setCity("variable.isCoded.label");
      derivedVariable1.setAlias("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME", derivedVariable1.getAlias());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.487634764824865
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(true);
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = null;
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.777967086335298
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "|Fbl";
      rawVariable0.notes = "|Fbl";
      rawVariable0.setColumnStart("|Fbl");
      rawVariable0.getColumnStart();
      rawVariable0.notes = "|Fbl";
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.getOntologyTerms();
      rawVariable0.getColumnStart();
      rawVariable0.getCleaningStatus();
      rawVariable0.getCategory();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      rawVariable0.getLabel();
      assertEquals("|Fbl", rawVariable0.getColumnStart());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.883454229856515
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.setCodeBookNumber("0");
      rawVariable0.getFilePath();
      rawVariable0.setAlias("0");
      rawVariable0.getIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable0.getColumnStart();
      rawVariable0.setName("0");
      rawVariable0.setAlias("");
      rawVariable0.getYear();
      rawVariable0.getCleaningDescription();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getIdentifier();
      rawVariable0.getCodeBookNumber();
      derivedVariable0.setIsNewRecord(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getCategory();
      boolean boolean0 = rawVariable1.containsOntologyTerm(ontologyTerm0);
      assertEquals("0", rawVariable0.getCodeBookNumber());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.320302132381434
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.setCodeBookNumber("");
      rawVariable0.getFilePath();
      rawVariable0.setAlias("0");
      rawVariable0.getIdentifier();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getColumnStart();
      rawVariable0.setName("0");
      rawVariable0.setAlias("");
      rawVariable0.getYear();
      rawVariable0.getCleaningDescription();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.getIdentifier();
      rawVariable0.getCodeBookNumber();
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.setCategory("");
      derivedVariable0.getCategory();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.689067872995674
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("J");
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(true);
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertTrue(rawVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.5353865202004258
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("7bO-_kJKCeU-A");
      rawVariable0.setCleaningDescription("");
      rawVariable0.clone();
      assertEquals("7bO-_kJKCeU-A", rawVariable0.getYear());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("rOA6!WY");
      derivedVariable0.getAlias();
      assertEquals("rOA6!WY", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("variable.alternativeVariable.label");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("variable.alternativeVariable.label", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.6851309643957646
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("J");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.questionNumber = "H";
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("J", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.707883557241649
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("user.addressLine1.label");
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("user.addressLine1.label", derivedVariable0.getName());
      
      RawVariable.validateFields(rawVariable0);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.625071549495739
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes((String) null);
      rawVariable0.getColumnStart();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable1.getColumnEnd();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.920070886916697
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.setCodeBookNumber("");
      rawVariable0.getFilePath();
      rawVariable0.setAlias("0");
      rawVariable0.getIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.clone();
      rawVariable0.getColumnStart();
      rawVariable0.setName("0");
      rawVariable0.setAlias("");
      rawVariable0.getYear();
      rawVariable0.getCleaningDescription();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.getIdentifier();
      String string0 = rawVariable0.getDisplayName();
      assertEquals("0", rawVariable0.getDisplayName());
      
      derivedVariable0.setAvailability("");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      String string1 = derivedVariable0.getAvailability();
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.getYear();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertTrue(boolean0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("]");
      derivedVariable1.getName();
      assertEquals("]", derivedVariable1.getDisplayName());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("J");
      User user0 = new User("J", "J");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("J", derivedVariable0.getDisplayName());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("7JI%y3Ew~ES");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("7JI%y3Ew~ES", derivedVariable0.getYear());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("J");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("J", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("J");
      User user0 = new User("J", "J");
      Variable.validateFields(derivedVariable0);
      assertEquals("J", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("J");
      User user0 = new User("J", "J");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("J", derivedVariable0.getName());
      assertEquals("J", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("ALIAS_FILE_PATH", "ALIAS_FILE_PATH");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals(0, arrayList0.size());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.6731033352984412
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.cloneAttributes(rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
      
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable1);
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(67);
      rawVariable0.getFilePath();
      assertEquals(67, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("UNABLE_TO_GET_ALTERNATIVE_VARIABLE");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("UNABLE_TO_GET_ALTERNATIVE_VARIABLE", rawVariable0.getAlias());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.564189384835455
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription((String) null);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "u@M2;J7a8j`]YBa";
      rawVariable0.getQuestionNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("u@M2;J7a8j`]YBa", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList0);
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, variableSummary0.getIdentifier());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("WR<(~IX='");
      rawVariable0.getCodeBookNumber();
      assertEquals("WR<(~IX='", rawVariable0.getYear());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isNewRecord());
      
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.createVariableSummary();
      assertTrue(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("UNABLE_TO_CREATE_DATABASE");
      rawVariable0.getFilePath();
      assertEquals("UNABLE_TO_CREATE_DATABASE", rawVariable0.getCategory());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("\"3dZFf&ke!x");
      rawVariable0.getLabel();
      assertEquals("\"3dZFf&ke!x", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.620959571408677
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("J");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getDisplayName();
      assertEquals("J", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.5353865202004258
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("UNABLE_TO_GET_CATEGORY_NAME");
      derivedVariable0.clone();
      assertEquals("UNABLE_TO_GET_CATEGORY_NAME", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "variable.form.label";
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getLabel());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("variable.form.label", derivedVariable1.getForm());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("", derivedVariable1.getName());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("eiR");
      derivedVariable0.getColumnEnd();
      assertEquals("Unknown", derivedVariable0.getAvailability());
      
      derivedVariable0.setAvailability("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      derivedVariable1.getFilePath();
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("INVALID_RAW_VARIABLE");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("INVALID_RAW_VARIABLE", rawVariable0.getForm());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("lI(3^![");
      rawVariable0.getNotes();
      assertEquals("lI(3^![", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "+r]Ul";
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("+r]Ul", rawVariable0.getColumnStart());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("cPoCBm;");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("cPoCBm;", rawVariable0.getCleaningDescription());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.554218296452355
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertTrue(arrayList0.isEmpty());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=3.710401248597012
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      String string0 = valueLabel0.getDisplayName();
      derivedVariable1.addValueLabel(valueLabel0);
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable1.getValueLabels();
      derivedVariable1.clone();
      String string1 = derivedVariable1.getLabel();
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 124
  /*Coverage entropy=3.3781766359449454
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addValueLabel((ValueLabel) null);
      rawVariable0.getFilePath();
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getForm();
      derivedVariable0.setCoded(false);
      derivedVariable0.isCoded();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getOntologyTerms();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "uX+y";
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("uX+y", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getLabel());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("variable.isCoded.label");
      rawVariable0.getName();
      assertEquals("variable.isCoded.label", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm(";");
      Variable.validateFields(rawVariable0);
      assertEquals(";", rawVariable0.getForm());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath("NON_EXISTENT_ONTOLOGY_TERM");
      rawVariable0.getFilePath();
      assertEquals("NON_EXISTENT_ONTOLOGY_TERM", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("variable.name.label");
      derivedVariable0.createVariableSummary();
      assertEquals("variable.name.label", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getAlternativeVariable();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.getLabel();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=2.05569358184064
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertNotNull(macawChangeEvent0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }
}
