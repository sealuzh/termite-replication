/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 09:02:38 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.9447978161695705
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(0, "", "i?57r'3BB(Z0?B", 745, 0);
      Player player1 = new Player(5, "i?57r'3BB(Z0?B", "A", 0);
      player0.setJoinOK(player1, false);
      Player player2 = new Player();
      player1.isJoinOK(player2, false);
      assertEquals("0.0.0.0", player2.getIP());
      assertEquals(0, player2.getPictureId());
      assertEquals("Player-1", player2.getName());
      
      int int0 = player1.gangStrength();
      assertEquals(1, int0);
      
      player1.pack();
      player1.pack();
      assertEquals(1, player1.getStrength());
      
      int int1 = player0.getStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(745, player0.getPictureId());
      assertEquals(0, int1);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      System.setCurrentTimeMillis((-901L));
      Player player0 = new Player(22021);
      player0.setX((-1.0F));
      player0.pack();
      player0.getX();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.1952296882816973
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(3280, "", 0);
      player0.id = 0;
      player0.setY(1.0F);
      Player player1 = new Player((-2040), "Z8[/8/WU,0M+!", (short)4919);
      player0.setJoinOK(player1, true);
      player1.add(player0);
      player0.getSubparty();
      player0.toString();
      player0.getStrength();
      player1.head = (Party) player0;
      player1.isConnected();
      player1.isJoinOK(player0, true);
      byte[] byteArray0 = new byte[0];
      player1.unpack(byteArray0);
      assertEquals(10.0F, player1.getX(), 0.01F);
      
      player0.isConnected();
      player1.setX(0.0F);
      player1.next = (Party) player0;
      player1.setConnected(false);
      player1.getX();
      player1.setDead(0L);
      assertEquals(1, player1.getStrength());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      System.setCurrentTimeMillis((-2302L));
      Player player0 = new Player(1719);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Player.unpack(): *** WARNING *** data is not of proper type!");
      Party party0 = player0.head;
      player0.head = null;
      player0.setZ((-5726.1562F));
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)40;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)26;
      byteArray0[3] = (byte)53;
      player0.unpack(byteArray0);
      Party party1 = new Party((short)4919);
      player0.next = party1;
      player0.setY(0.0F);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.getStrength();
      player0.pack();
      player0.getZ();
      player0.type();
      player0.type();
      System.setCurrentTimeMillis((-1011L));
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.240555505820405
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      Player player0 = new Player((-61));
      player0.setY((-2012.422F));
      player0.pack();
      player0.reset(false);
      player0.setY((-998.0499F));
      player0.getIP();
      player0.getStrength();
      player0.getX();
      Player player1 = new Player(4919, "0.0.0.0", 1923);
      player1.setJoinOK(player0, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0.0.0.0");
      player0.unpack(byteArray0);
      player0.setJoinOK(player1, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0.0.0.0");
      player0.gangStrength();
      player0.pack();
      player0.getZ();
      float float0 = player0.getY();
      assertEquals((-998.0499F), float0, 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.0995015447694865
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((-19435), "pFM+e{9S;SBkZ,", (-19435));
      player0.pack();
      player0.getSubparty();
      player0.getSubparty();
      player0.setMoney((-19435));
      player0.reset(false);
      player0.setZ((-2566.7427F));
      player0.gangStrength();
      player0.type();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      player0.unpack(dataInputStream0);
      player0.setConnected(false);
      player0.getMoney();
      player0.setDead();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      String string0 = "<77\\ui";
      // Undeclared exception!
      try { 
        dataOutputStream0.writeUTF(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.052128844641025
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Player player0 = new Player(2147340491, (String) null, 2147340491);
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      player0.setMoney(1021.8162F);
      player0.getMoney();
      Party party0 = player0.gangBoss();
      player0.boss = party0;
      player0.getZ();
      party0.boss = player0.boss;
      player0.getStrength();
      player0.next = party0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis((-1L));
      player0.getY();
      player0.getMoney();
      player0.getZ();
      System.setCurrentTimeMillis(1825L);
      player0.getX();
      player0.getName();
      player0.getY();
      Player player1 = new Player(822, "Q_}mhko}", "`c2O;$$cadj]:j xD> ", (short)4919, (short)4919);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(1021.8162F, player0.getMoney(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.9410699503727393
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player((-1767), "", "aoR^Jc+C[-i%)$;X2", (-19401), 0);
      player0.gangStrength();
      player0.getY();
      player0.setConnected(true);
      player0.reset(false);
      System.setCurrentTimeMillis((-2513L));
      player0.getMoney();
      player0.setDead((-2513L), true);
      System.setCurrentTimeMillis((-348L));
      player0.getX();
      player0.getTimeOfDeath();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      player0.unpack(dataInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals((-2513L), player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(5);
      player0.setDead();
      player0.setZ(5);
      float float0 = player0.getZ();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(5.0F, float0, 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "t");
      Player player0 = new Player(23550, "", "yhUA<vU", 23550, 23550);
      player0.getIP();
      player0.getStrength();
      player0.getX();
      Player player1 = new Player(0, "module.ModuleBrowserDialog$ModuleFilter", 71);
      // Undeclared exception!
      try { 
        player1.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      System.setCurrentTimeMillis((-2160L));
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-4247), 1);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.753349994178044
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(982);
      Player player1 = new Player((short)4919, "", "", (short)4919, 5);
      player0.add(player1);
      Player player2 = new Player();
      player2.setZ((short)4919);
      player0.gangStrength();
      player2.getSubparty();
      player0.gangStrength();
      player2.setDead();
      assertEquals(1392409281320L, player2.getTimeOfDeath());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((-2255), "", "", 772, 1006);
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pushbackInputStream0, byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player((-488), "Player.unpack(): *** WARNING *** data is not of proper type!", (-488));
      player0.pack();
      player0.getName();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      Party party0 = player0.head;
      player0.boss = null;
      byteArrayOutputStream0.close();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      player0.setX(2453.833F);
      player0.getX();
      player0.setZ((-488));
      int int0 = player0.getPictureId();
      assertEquals(2453.833F, player0.getX(), 0.01F);
      assertEquals((-488), int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.9417429777213613
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, true);
      Player player1 = new Player();
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(boolean0);
      assertFalse(player1.isDead());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals("Player-1", player1.toString());
      assertEquals(1, player1.getStrength());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.9417429777213613
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, false);
      Player player1 = new Player();
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertTrue(player1.isConnected());
      assertEquals(0, player1.getPictureId());
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals("Player-1", player1.getName());
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      byteArrayInputStream0.read();
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(26, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Party party0 = new Party();
      Player player0 = new Player(2, "@{vw()cwD}(wA9bfY~D", "rxS$>1,='", 2, 2);
      player0.setConnected(false);
      Player player1 = new Player();
      player1.pack();
      player0.isConnected();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("@{vw()cwD}(wA9bfY~D");
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      player0.setY(442.0F);
      player0.setDead((-2709L));
      float float0 = player0.getY();
      assertEquals((-2709L), player0.getTimeOfDeath());
      assertEquals(442.0F, float0, 0.01F);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.1952296882816973
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(3280, "", 0);
      player0.id = 0;
      player0.setY(1.0F);
      Player player1 = new Player((-2040), "Z8[/8/WU,0M+!", (short)4919);
      player0.setJoinOK(player1, true);
      player1.add(player0);
      player0.getSubparty();
      player0.toString();
      player0.getStrength();
      player1.head = (Party) player0;
      player1.isConnected();
      player1.isJoinOK(player0, true);
      byte[] byteArray0 = new byte[0];
      player1.unpack(byteArray0);
      assertEquals(10.0F, player1.getX(), 0.01F);
      
      player0.isConnected();
      player1.setX(0.0F);
      player1.next = (Party) player0;
      player1.setConnected(false);
      player1.getY();
      player1.setDead(0L);
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player();
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = null;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(boolean0);
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0, 0);
      Player player1 = new Player(0, ".*[.]class$", (short)4919);
      player0.next = (Party) player1;
      player0.setZ((-2258.0F));
      player0.gangStrength();
      player0.gangStrength();
      player0.setDead((long) 0);
      player0.setZ(0);
      assertEquals(0.0F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player();
      float float0 = player0.getMoney();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setDead();
      player0.pack();
      long long0 = player0.getTimeOfDeath();
      assertEquals(1392409281320L, long0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.6902535776209735
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(11);
      Player player1 = new Player((short)4919, (String) null, (short)4919);
      player0.setJoinOK(player1, false);
      Player player2 = new Player();
      player2.setDead((long) (short)4919, false);
      player0.isJoinOK(player1, false);
      player2.isDead();
      // Undeclared exception!
      try { 
        player1.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player();
      float float0 = player0.getY();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      player0.setJoinOK(player1, false);
      int int0 = (-251);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(false);
      player0.pack();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      player0.pack();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.getName());
      assertFalse(boolean0);
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(543, (String) null, "y_K#|4atxB!!Bci5`u", 543, 543);
      player0.getIP();
      player0.gangStrength();
      player0.setZ(1202.0103F);
      Party party0 = new Party(543);
      party0.getSubparty();
      party0.id = 0;
      party0.id = 0;
      party0.boss = (Party) player0;
      player0.add(party0);
      player0.getSubparty();
      player0.setX(0.0F);
      player0.pack();
      player0.setZ(0);
      player0.getTimeOfDeath();
      Player player1 = null;
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setDead();
      player0.pack();
      player0.getIP();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player(1699, "", "", 1, 297);
      player0.getSubparty();
      player0.getName();
      player0.setDead(0L, false);
      player0.gangStrength();
      Party party0 = new Party();
      player0.prev = party0;
      player0.getPictureId();
      player0.getSubparty();
      player0.getPictureId();
      player0.setX(1);
      player0.setY((-539.0F));
      int int0 = player0.getStrength();
      assertEquals((-539.0F), player0.getY(), 0.01F);
      assertEquals(297, int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(2317, "a8y/$7", "7G|q>c_w<bu+V7C0", 806, 2317);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)93;
      player0.unpack(byteArray0);
      player0.getPictureId();
      player0.setDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(613, "", "cW~pgZsE!5~<6+>5", 2229, (-3110));
      int int0 = player0.gangStrength();
      int int1 = player0.getStrength();
      assertTrue(int1 == int0);
      assertEquals((-3110), int1);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(2229, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(1.0F);
      int int0 = player0.type();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(0.0F);
      player0.pack();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      player0.getPictureId();
      player0.setDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player();
      String string0 = player0.getName();
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals("Player-1", string0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player(0, (String) null, (String) null, 1);
      player0.toString();
      player0.setMoney(1);
      Player player1 = new Player((short)4919, (String) null, "module.ModuleBrowserDialog$ModuleFilter", 2577, 180);
      player0.setConnected(true);
      assertEquals(1.0F, player0.getMoney(), 0.01F);
      
      boolean boolean0 = player1.isDead();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player();
      player0.toString();
      Player player1 = new Player(4919, "\"l.<},pa'pIK|:H@Br", (short)4919);
      player1.setDead();
      assertEquals(1392409281320L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney((-2225.4714F));
      player0.getSubparty();
      player0.pack();
      assertEquals((-2225.4714F), player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = player0.isDead();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(boolean0);
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player();
      assertFalse(player0.isDead());
      
      player0.setDead(0L);
      player0.pack();
      assertTrue(player0.isDead());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("FM,f4~f(o7q^T");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      player0.pack();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertFalse(boolean0);
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-1", player1.toString());
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0, player1.getPictureId());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertEquals(1, player0.getStrength());
      
      Player player1 = new Player((short)4919, "", "", 1, (short)4919);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(4919, player1.getStrength());
      assertEquals(1, player1.getPictureId());
      assertFalse(player1.isDead());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player();
      int int0 = player0.getStrength();
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, int0);
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player(2026);
      boolean boolean0 = player0.isConnected();
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player2026", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertTrue(boolean0);
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player(655, "qCT`y[.rJf#1w0#YaI", "qCT`y[.rJf#1w0#YaI", 655, 655);
      player0.setDead((long) 655, false);
      assertEquals(655L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player();
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.getName());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Player player0 = new Player();
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("Player-1", player0.toString());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(true);
      player0.pack();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }
}
