/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 28 08:00:21 GMT 2020
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.1044509313813426
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_ColNameWidth = 2;
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.getStdDev(30, 30);
      resultMatrixCSV0.getColNameWidth();
      resultMatrixCSV0.getRowNameWidth();
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.8739867076185663
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      int[][] intArray0 = new int[8][4];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      resultMatrixSignificance0.setEnumerateColNames(false);
      String[][] stringArray0 = new String[0][1];
      resultMatrixSignificance0.getColSize(stringArray0, (-529));
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.714277730720821
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.isMean((-229));
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.getRevision();
      resultMatrixGnuPlot0.getColCount();
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.getRowHidden((-1239));
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.2794518157267283
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "$circ$";
      resultMatrixLatex0.setPrintRowNames(false);
      stringArray0[1] = ")";
      stringArray0[2] = "$\bullet$";
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixLatex0.getColHidden((-1));
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.1496942847305873
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 2;
      resultMatrixSignificance0.m_RankingWins = intArray0;
      resultMatrixSignificance0.m_ShowAverage = true;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.getStdDev(18, 18);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringRanking();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.342879007125056
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray1 = new int[7][6];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      resultMatrixLatex0.m_ColOrder = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      resultMatrixLatex0.setRanking(intArray1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixLatex0.getStdDev(0, 1);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.2334701558228627
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      int int0 = 16;
      int int1 = 123;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(16, 123);
      resultMatrixPlainText0.getRevision();
      // Undeclared exception!
      resultMatrixPlainText0.toArray();
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.846851348300205
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixGnuPlot0.getRevision();
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = (-2606);
      intArray0[2] = 2;
      intArray0[3] = 1;
      resultMatrixGnuPlot0.m_RankingLosses = intArray0;
      resultMatrixGnuPlot0.getRemoveFilterName();
      resultMatrixGnuPlot0.setPrintRowNames(false);
      resultMatrixGnuPlot0.getRowName(930);
      resultMatrixGnuPlot0.setSignificance(1, 1751, 859);
      resultMatrixGnuPlot0.getDefaultMeanPrec();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      String[][] stringArray0 = new String[8][4];
      String[] stringArray1 = new String[7];
      stringArray1[0] = "";
      stringArray1[1] = null;
      stringArray1[2] = "8034";
      stringArray1[3] = " ";
      stringArray1[4] = "Key:\n1 col0\n";
      stringArray1[5] = "";
      stringArray1[6] = "Key:\n1 col0\n";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[1];
      stringArray2[0] = " ";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[0];
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[2];
      stringArray4[0] = "Key:\n1 col0\n";
      stringArray4[1] = "8034";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[3];
      stringArray5[0] = "";
      stringArray5[1] = "";
      stringArray5[2] = "";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[5];
      stringArray6[0] = " ";
      stringArray6[1] = null;
      stringArray6[2] = "";
      stringArray6[3] = "";
      stringArray6[4] = "v";
      stringArray0[5] = stringArray6;
      String[] stringArray7 = new String[5];
      stringArray7[0] = null;
      stringArray7[1] = " ";
      stringArray7[2] = null;
      stringArray7[3] = "";
      stringArray7[4] = "";
      stringArray0[6] = stringArray7;
      String[] stringArray8 = new String[7];
      stringArray8[0] = " ";
      stringArray8[1] = null;
      stringArray8[2] = "*";
      stringArray8[3] = "";
      stringArray8[4] = "";
      stringArray8[5] = " ";
      stringArray8[6] = "";
      stringArray0[7] = stringArray8;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getColSize(stringArray0, 2, false, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.9288799345939394
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "(";
      stringArray0[1] = "$circ$";
      stringArray0[2] = ")";
      stringArray0[3] = "$\bullet$";
      stringArray0[4] = "$circ$";
      stringArray0[5] = "$circ$";
      resultMatrixLatex0.m_PrintRowNames = false;
      stringArray0[6] = " ";
      resultMatrixLatex0.m_ColNames = stringArray0;
      resultMatrixLatex0.setRowOrder(intArray0);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringKey();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.105338760745584
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_ColNameWidth = 2;
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.getStdDev(30, 30);
      resultMatrixCSV0.getRowName(1);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.8993704198937236
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      int[] intArray0 = new int[5];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.m_EnumerateColNames = true;
      resultMatrixLatex1.setRowOrder(intArray0);
      resultMatrixLatex1.isSignificance(13);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.8004698251768687
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 2);
      resultMatrixCSV0.getStdDev(0, 0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.4339872044851467
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex1.isMean(3);
      resultMatrixLatex0.showStdDevTipText();
      resultMatrixLatex0.getSignificance(1, 0);
      resultMatrixHTML0.toStringKey();
      String[] stringArray0 = new String[6];
      stringArray0[0] = " ";
      stringArray0[1] = ")";
      stringArray0[2] = "$circ$";
      int[][] intArray0 = new int[3][8];
      int[] intArray1 = new int[9];
      intArray1[0] = 2;
      intArray1[1] = 2;
      intArray1[2] = 107;
      intArray1[3] = 1;
      intArray1[4] = 0;
      intArray1[5] = 1;
      intArray1[6] = 1;
      intArray1[7] = 2;
      intArray1[8] = 3;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[2];
      intArray2[0] = 1;
      intArray2[1] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[6];
      intArray3[0] = 2;
      intArray3[1] = 2;
      intArray3[2] = (-1711);
      intArray3[3] = (-1381);
      intArray3[4] = 1;
      intArray3[5] = (-1866);
      intArray0[2] = intArray3;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.409855725722282
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setPrintRowNames(true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.m_StdDevPrec = 0;
      String[] stringArray0 = new String[6];
      stringArray0[0] = "$\bullet$";
      stringArray0[1] = "$circ$";
      stringArray0[2] = "$\bullet$";
      stringArray0[3] = "$circ$";
      stringArray0[4] = "$\bullet$";
      stringArray0[5] = " ";
      resultMatrixLatex0.m_RowNames = stringArray0;
      resultMatrixLatex0.setMean((-795), 16, 2.0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixSignificance0.meanPrecTipText();
      resultMatrixSignificance0.setStdDev(1, 0, 813.0249037226);
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixLatex0.getOptions();
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[6][4];
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      resultMatrixSignificance0.m_MeanPrec = (-684);
      resultMatrixSignificance0.setStdDev((-684), (-684), (-4221.9888));
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.1098746512037336
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_ColNameWidth = 2;
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.getDisplayRow(0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.toStringKey();
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.9066635494413338
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getVisibleRowCount();
      resultMatrixLatex0.getColHidden(1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(14, 0);
      resultMatrixHTML0.getDefaultRowNameWidth();
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.5147109884203083
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.setColOrder(intArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixSignificance0.getDisplayCol(841);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.631612186595399
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getEnumerateColNames();
      resultMatrixSignificance0.getDefaultShowAverage();
      resultMatrixSignificance0.toStringRanking();
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.890368212529478
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixPlainText0.padString("v", 2);
      resultMatrixGnuPlot0.setColOrder(intArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 0);
      resultMatrixSignificance0.trimString("", 2);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.0008303170414576
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.clearSummary();
      resultMatrixPlainText0.getRevision();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[1][9];
      resultMatrixHTML0.setShowAverage(false);
      resultMatrixHTML0.m_PrintColNames = false;
      resultMatrixHTML0.setSize(713, 2);
      resultMatrixPlainText0.LEFT_PARENTHESES = "QkaUrnV(y^ZX";
      resultMatrixHTML0.globalInfo();
      resultMatrixPlainText0.getDisplayRow(1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 0);
      resultMatrixSignificance0.getColName(628);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixHTML0.meanPrecTipText();
      ResultMatrixCSV resultMatrixCSV0 = null;
      try {
        resultMatrixCSV0 = new ResultMatrixCSV(0, (-1451));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.7725887222397803
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      int[][] intArray0 = new int[6][4];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRanking(intArray0);
      resultMatrixLatex0.getDefaultRowNameWidth();
      resultMatrixLatex0.setRanking(intArray0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.294738296175057
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.getRowOrder();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixCSV0.getDisplayName();
      resultMatrixSignificance0.getSignificance(2, 2);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringKey();
      resultMatrixCSV0.getColName(2);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.toStringMatrix();
      resultMatrixCSV0.setColNameWidth(2);
      resultMatrixSignificance0.getRowNameWidth();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML1);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixCSV0.isRowName(0);
      resultMatrixLatex1.getDefaultShowAverage();
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.5045909752257782
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.getRowOrder();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_ShowAverage = true;
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.RIGHT_PARENTHESES = "v";
      resultMatrixSignificance0.getSignificance(248, 2);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringKey();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      String[] stringArray0 = new String[1];
      resultMatrixLatex0.m_ColOrder = null;
      stringArray0[0] = "*";
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixHTML0.setSignificance(1691, 32, 0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      int[][] intArray0 = new int[6][4];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      resultMatrixSignificance0.globalInfo();
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.7437733554254993
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColOrder(intArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixGnuPlot0.setMeanWidth(0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_MeanPrec = 114;
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.countWidthTipText();
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(28, 1);
      resultMatrixLatex0.printRowNamesTipText();
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.1639741657447567
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_ColNameWidth = 2;
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.setRowOrder((int[]) null);
      resultMatrixCSV0.padString("isNewer? ", 0, true);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.2958368660043296
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText1.setMeanPrec(1252);
      resultMatrixPlainText1.getVisibleRowCount();
      resultMatrixPlainText0.m_RowNameWidth = 529;
      resultMatrixPlainText0.getSummaryTitle((-3218));
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.075220548054372
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_ColNameWidth = 2;
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.getStdDev(30, 30);
      resultMatrixCSV0.getCount(737);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.613030723501209
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_ColNameWidth = 2;
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 1);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 0);
      resultMatrixGnuPlot0.getSummaryTitle(0);
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixHTML0.getColCount();
      resultMatrixHTML0.getDisplayRow((-1026));
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 3);
      resultMatrixSignificance0.setRowName((-1840), ";ac6y");
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.5515864715369734
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[2][4];
      int[] intArray1 = new int[2];
      intArray1[0] = 1;
      intArray1[1] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[5];
      intArray2[0] = 1;
      resultMatrixGnuPlot0.addHeader("{centering \begin{tabular}{lr", "{centering \begin{tabular}{lr");
      intArray2[1] = 2;
      intArray2[2] = 1;
      resultMatrixGnuPlot0.setSignificanceWidth(7);
      intArray2[3] = 2;
      intArray2[4] = 2;
      intArray0[1] = intArray2;
      resultMatrixGnuPlot0.setSummary(intArray0, intArray0);
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixGnuPlot0.m_ShowStdDev = true;
      resultMatrixGnuPlot0.getOptions();
      int[] intArray3 = new int[0];
      resultMatrixGnuPlot0.setRowOrder(intArray3);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_RemoveFilterName = false;
      resultMatrixLatex0.toStringSummary();
      resultMatrixLatex0.setRowOrder(intArray1);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.1620620952012546
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.getRowOrder();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_ShowAverage = true;
      resultMatrixSignificance0.setColName(1, " ,t+NXnjJ+b0n;Zbo|");
      resultMatrixCSV0.getDisplayName();
      resultMatrixSignificance0.getColName(888);
      resultMatrixSignificance0.setRowName(888, (String) null);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.5490895194727066
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_SignificanceWidth = 4;
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      Vector<String> vector0 = new Vector<String>();
      resultMatrixCSV0.addHeader("", "");
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixCSV0.toStringRanking();
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.2160893546176905
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.getRowOrder();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_ShowAverage = true;
      resultMatrixSignificance0.setColName(1, " ,t+NXnjJ+b0n;Zbo|");
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.RIGHT_PARENTHESES = "1Q06w1#]+G;";
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.setColOrder((int[]) null);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultStdDevWidth();
      resultMatrixLatex0.setRowName(1, "r");
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.8997571011430585
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringKey();
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      intArray0[1] = 1984;
      intArray0[2] = 1;
      intArray0[3] = 2;
      boolean[] booleanArray0 = new boolean[4];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      resultMatrixLatex0.m_RowHidden = booleanArray0;
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.doubleToString(Double.NaN, (-2807));
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixGnuPlot0.getStdDev((-382), 1);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.8615662510453697
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[9];
      intArray0[1] = 0;
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[5] = 1;
      intArray0[7] = 0;
      intArray0[8] = 2;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultStdDevWidth();
      resultMatrixLatex0.setRowName(1, ")");
      resultMatrixGnuPlot0.clear();
      resultMatrixLatex0.getDisplayCol(0);
      resultMatrixLatex0.getDisplayName();
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.1178278991340513
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_ColNameWidth = 1;
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      intArray0[1] = 502;
      intArray0[2] = 2;
      intArray0[3] = 0;
      intArray0[4] = 2;
      resultMatrixLatex0.m_RowOrder = intArray0;
      resultMatrixLatex0.setCountWidth(383);
      resultMatrixLatex0.getMean(1, 2);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.6237580849649036
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_ShowStdDev = true;
      resultMatrixGnuPlot0.m_MeanWidth = 271;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.toStringMatrix();
  }

  /**
  //Test case number: 42
  /*Coverage entropy=4.271767016860831
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      String[] stringArray0 = new String[0];
      resultMatrixLatex0.setOptions(stringArray0);
      ResultMatrixSignificance.main(stringArray0);
      String[][] stringArray1 = new String[6][0];
      stringArray1[0] = stringArray0;
      String[] stringArray2 = new String[9];
      stringArray2[0] = "(";
      stringArray2[1] = "(";
      stringArray2[2] = " ";
      stringArray2[3] = " ";
      stringArray2[4] = " ";
      stringArray2[5] = "pV3R\"hC{kP";
      stringArray2[6] = "$\bullet$";
      stringArray2[7] = ")";
      stringArray2[8] = "";
      stringArray1[1] = stringArray2;
      stringArray1[2] = stringArray0;
      stringArray1[3] = stringArray0;
      stringArray1[4] = stringArray0;
      stringArray1[5] = stringArray0;
      resultMatrixPlainText0.getColSize(stringArray1, (-1));
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultStdDevPrec();
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.9025538185947704
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setSignificanceWidth((-10));
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(2, 2);
      resultMatrixLatex1.getSignificance(2, 1);
      resultMatrixLatex0.setRowOrder(intArray0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.973971854832384
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 2);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(30, 2);
      resultMatrixCSV0.getStdDev(2, 1);
      resultMatrixCSV0.isSignificance(1);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.0275966632432514
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      int[][] intArray1 = new int[1][5];
      intArray1[0] = intArray0;
      resultMatrixLatex0.setRanking(intArray1);
      resultMatrixLatex0.setEnumerateColNames(true);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(2, 2);
      // Undeclared exception!
      try { 
        resultMatrixHTML1.getHeader((String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.2444926304072967
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 1);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixPlainText0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixLatex0.setRowName(97, "");
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultStdDevWidth();
      resultMatrixLatex0.setRowName(0, "*");
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.2313893106078018
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultStdDevWidth();
      resultMatrixSignificance0.toStringMatrix();
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_RowNames = null;
      resultMatrixGnuPlot0.m_SignificanceWidth = 0;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getVisibleRowCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.9083826809913753
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex0.setSignificanceWidth(0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(2, 2);
      resultMatrixLatex1.getSignificance(2, 1);
      resultMatrixLatex0.setRowOrder(intArray0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.9551210479031202
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 2);
      resultMatrixCSV0.getStdDev(0, 0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = ")";
      stringArray0[1] = "$\bullet$";
      stringArray0[2] = "$\bullet$";
      ResultMatrixHTML.main(stringArray0);
      resultMatrixCSV0.getDefaultMeanPrec();
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.9636907612873347
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_ShowStdDev = true;
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixLatex0.isStdDev(2790);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.2047775241322567
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getRowHidden(1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.getRevision();
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getRowOrder();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixSignificance0.setColName(0, "");
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getSignificance((-723), 1446);
      resultMatrixLatex0.setEnumerateColNames(false);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.244666592031648
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      int[][] intArray1 = new int[1][5];
      intArray1[0] = intArray0;
      resultMatrixLatex0.setRanking(intArray1);
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.setShowAverage(true);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.9214464993152647
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.getRowOrder();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setColName((-1141), "*");
      resultMatrixCSV0.getDisplayName();
      resultMatrixSignificance0.getSignificance(248, 47);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringKey();
      resultMatrixGnuPlot0.toStringKey();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML1.toStringMatrix();
      resultMatrixSignificance0.getRowNameWidth();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.getDisplayName();
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      int[][] intArray0 = new int[0][9];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.removeFilterNameTipText();
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.8243648409235025
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      int[][] intArray0 = new int[6][4];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRanking(intArray0);
      resultMatrixLatex0.addHeader((String) null, (String) null);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.093394272833746
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      resultMatrixCSV0.getStdDev((-447), (-447));
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.4514334031630147
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixSignificance0.m_RankingDiff = intArray0;
      resultMatrixSignificance0.m_RankingWins = intArray0;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getSignificance(344, 1);
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.setRowOrder(resultMatrixSignificance0.m_RankingWins);
      resultMatrixSignificance0.getSignificanceCount(241, (-1));
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.743535678836661
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.getRowOrder();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setColName(2, (String) null);
      resultMatrixCSV0.getDisplayName();
      int int0 = 248;
      ResultMatrixSignificance resultMatrixSignificance1 = null;
      try {
        resultMatrixSignificance1 = new ResultMatrixSignificance(2, (-83));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.1745570645394947
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.clearRanking();
      resultMatrixGnuPlot0.toArray();
      resultMatrixGnuPlot0.getColName(1);
      resultMatrixGnuPlot0.setColOrder(intArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      assertTrue(resultMatrixSignificance0.getPrintColNames());
      assertEquals(5, resultMatrixSignificance0.getCountWidth());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.435158658284827
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(37, 12);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      int int0 = resultMatrixPlainText0.getDisplayRow(1);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(1, int0);
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = new String[4];
      stringArray0[0] = ")";
      stringArray0[1] = ")";
      stringArray0[2] = ")";
      stringArray0[3] = "(";
      ResultMatrixLatex.main(stringArray0);
      resultMatrixLatex0.toStringSummary();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.8004698251768687
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[3][4];
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      resultMatrixSignificance0.m_ShowAverage = false;
      int int0 = resultMatrixSignificance0.getDisplayRow(45);
      assertEquals((-1), int0);
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.6834363243374386
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.getOptions();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.getSignificance(0, 1);
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(1371, 1);
      resultMatrixLatex2.setEnumerateColNames(false);
      assertFalse(resultMatrixLatex2.getEnumerateColNames());
      
      ResultMatrixLatex resultMatrixLatex3 = new ResultMatrixLatex();
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixLatex3.setRowOrder(intArray0);
      assertEquals(2, resultMatrixLatex3.getStdDevPrec());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.8034968676291516
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.setColOrder(intArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1);
      boolean boolean0 = resultMatrixGnuPlot0.isMean(2);
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertTrue(boolean0);
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.2409918106792848
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringMatrix();
      resultMatrixLatex0.m_StdDevWidth = 102;
      resultMatrixLatex0.setCountWidth(0);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.assign((ResultMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.9609292113863934
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(7, 7);
      resultMatrixHTML0.m_RankingLosses = null;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.meanPrecTipText();
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixHTML0.getSignificance(0, 111);
      assertFalse(resultMatrixHTML0.getShowStdDev());
      assertEquals(7, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(7, resultMatrixHTML0.getColCount());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.0752205480543715
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot1.getDisplayCol(10);
      assertEquals(2, resultMatrixGnuPlot1.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot1.getSignificanceWidth());
      assertTrue(resultMatrixGnuPlot1.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot1.getStdDevWidth());
      assertTrue(resultMatrixGnuPlot1.getPrintColNames());
      assertEquals(50, resultMatrixGnuPlot1.getRowNameWidth());
      assertEquals(1, resultMatrixGnuPlot1.getColCount());
      assertEquals(0, resultMatrixGnuPlot1.getMeanWidth());
      assertEquals(2, resultMatrixGnuPlot1.getStdDevPrec());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.6023807799324836
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      intArray0[0] = (-646);
      resultMatrixGnuPlot0.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      int int0 = resultMatrixLatex0.getDisplayCol((-646));
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals((-1), int0);
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.266815289526291
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.getRowOrder();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_ShowAverage = true;
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.RIGHT_PARENTHESES = "v";
      resultMatrixCSV0.getRowName(0);
      resultMatrixSignificance0.getSignificance(248, 2);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_StdDev = null;
      resultMatrixHTML0.toStringKey();
      resultMatrixCSV0.getColName(2);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML1.toStringMatrix();
      resultMatrixSignificance0.getRowNameWidth();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML1);
      ResultMatrixLatex resultMatrixLatex1 = null;
      try {
        resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixHTML0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.093394272833746
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_ColNameWidth = 2;
      resultMatrixCSV0.toStringMatrix();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSize((-884), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.0752205480543715
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.getRowName(18);
      assertNull(string0);
      
      int[][] intArray0 = new int[1][4];
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      assertFalse(resultMatrixSignificance0.getDefaultShowAverage());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertTrue(resultMatrixSignificance0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getRowName((-1111));
      resultMatrixSignificance0.getDefaultRowNameWidth();
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.950391601025311
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getPrintRowNames();
      String string0 = resultMatrixLatex0.toStringKey();
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
      assertFalse(resultMatrixLatex0.getShowAverage());
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption (Key)}\n\\scriptsize\n{\\centering\n\\begin{tabular}{cl}\\\\\n(1) & col0 \\\\\n\\end{tabular}\n}\n\\end{table}\n", string0);
      assertEquals(0, resultMatrixLatex0.getDefaultCountWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.233183484380926
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(2, 2);
      resultMatrixLatex0.getSignificance(2, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex1);
      int int0 = resultMatrixGnuPlot0.getVisibleRowCount();
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.6023807799324836
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.WIN_STRING = "";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      
      resultMatrixGnuPlot0.setStdDevWidth(2);
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      intArray0[0] = (-627);
      resultMatrixGnuPlot1.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot1);
      resultMatrixGnuPlot0.getDefaultPrintColNames();
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getStdDev(0, 795);
      resultMatrixSignificance0.getColHidden(0);
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertFalse(resultMatrixSignificance0.getDefaultShowAverage());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.9963067983056164
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 0);
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[3][4];
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      resultMatrixGnuPlot1.getDefaultCountWidth();
      resultMatrixSignificance0.setStdDev(1531, 1815, 0);
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot1);
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.2743656393418727
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setColName(110, "v");
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDisplayName();
      resultMatrixSignificance0.getSignificance(0, 513);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringKey();
      resultMatrixCSV0.getColName(0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixCSV0);
      assertEquals(1, resultMatrixHTML1.getVisibleColCount());
      
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixSignificance0.getRowNameWidth();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.getDisplayName();
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.397556181979661
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[6][4];
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixPlainText0.setStdDev(1, 2, 0);
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(125, 1);
      resultMatrixGnuPlot0.toStringMatrix();
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.7912866769137503
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      String string0 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      resultMatrixCSV0.getRowOrder();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_ShowAverage = true;
      resultMatrixSignificance0.setColName(1, " ,t+NXnjJ+b0n;Zbo|");
      resultMatrixCSV0.getDisplayName();
      resultMatrixSignificance0.getColName(0);
      resultMatrixSignificance0.setRowName(0, "Dataset,[1]\nrow0,''\n'[v/ /*]',''\n");
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 2);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixSignificance0.setColName(0, " ,t+NXnjJHban;Zbo|");
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 1);
      resultMatrixCSV0.getDefaultMeanPrec();
      ResultMatrixCSV resultMatrixCSV1 = null;
      try {
        resultMatrixCSV1 = new ResultMatrixCSV((-2215), 1);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(3, 3);
      resultMatrixLatex0.setColNameWidth(248);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.getDefaultShowStdDev();
      resultMatrixLatex0.getMean((-1215), (-2305));
      assertEquals(248, resultMatrixLatex0.getColNameWidth());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.6227500473212872
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateColNames(false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(32, 32);
      resultMatrixPlainText0.padString("v", 1, true);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = ")";
      stringArray0[1] = "*";
      stringArray0[2] = "*";
      stringArray0[3] = "Generates the matrix in CSV ('comma-separated values') format.";
      stringArray0[4] = " ";
      stringArray0[5] = "/hm?n2ku?Kh^B$5<";
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixPlainText0.toStringKey();
      // Undeclared exception!
      resultMatrixPlainText0.toString();
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.311370775117544
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.getPrintColNames();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      Vector<String> vector0 = new Vector<String>(0);
      resultMatrixCSV0.getRowCount();
      resultMatrixCSV0.setRowHidden(18, false);
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.940934875967115
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      resultMatrixSignificance0.getRowHidden(1);
      assertFalse(resultMatrixSignificance0.getPrintColNames());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.1731027011044644
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      String[] stringArray0 = new String[0];
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixLatex0.getColNameWidth();
      assertEquals(0, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      int[][] intArray0 = new int[8][4];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      resultMatrixSignificance0.getColOrder();
      assertEquals(0, resultMatrixSignificance0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertFalse(resultMatrixSignificance0.getDefaultRemoveFilterName());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.261071039453686
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.listOptions();
      String string0 = resultMatrixLatex0.toString();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      intArray0[1] = 2;
      intArray0[2] = 2;
      intArray0[3] = 2;
      resultMatrixLatex0.m_ColOrder = intArray0;
      resultMatrixLatex0.meanPrecTipText();
      resultMatrixLatex0.getColOrder();
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.717437297705448
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.setColOrder(intArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixGnuPlot0.setStdDev(0, 2228, 1);
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[3][4];
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      resultMatrixSignificance0.setStdDev((-3735), 18, (-690.5681482447));
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.8285016742309215
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixSignificance0.setStdDev(0, 11, (-66.30291978));
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertFalse(resultMatrixSignificance0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setColOrder(intArray0);
      int int0 = resultMatrixLatex0.getMeanPrec();
      assertEquals(2, int0);
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      assertEquals(1, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setPrintRowNames(true);
      resultMatrixLatex0.LEFT_PARENTHESES = "\tWhether to output column names or just numbers representing them.\n\t(default: no)";
      resultMatrixLatex0.setRowOrder(intArray0);
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.5805376244873655
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      assertEquals(0, resultMatrixLatex1.getRowNameWidth());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      
      resultMatrixLatex0.toStringSummary();
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.stdDevPrecTipText();
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertFalse(resultMatrixLatex0.getShowAverage());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixCSV0.getDefaultEnumerateRowNames();
      assertEquals(0, resultMatrixCSV0.getDefaultMeanWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.setStdDevWidth((-140));
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColOrder((int[]) null);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(5, resultMatrixLatex0.getCountWidth());
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.7463212593893727
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_ShowAverage = true;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.toStringMatrix();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.588867109548153
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      String string0 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[0];
      resultMatrixLatex0.setRowOrder(intArray0);
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.668078702217483
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.WIN_STRING = "3";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.setStdDevWidth(2);
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      intArray0[0] = (-646);
      resultMatrixGnuPlot1.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot1);
      resultMatrixGnuPlot0.setMean(974, (-646), (-1934.8));
      assertEquals(2, resultMatrixGnuPlot0.getStdDevWidth());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.258411143005185
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getOptions();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.listOptions();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.775128845387793
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      int[][] intArray0 = new int[8][4];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      String string0 = resultMatrixSignificance0.toStringKey();
      assertEquals("Key:\n(1) col0\n", string0);
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.1278794104545113
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_ColNameWidth = 2;
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.getStdDev(30, 30);
      resultMatrixCSV0.getSignificanceWidth();
      assertEquals(2, resultMatrixCSV0.getColNameWidth());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.5490895194727066
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.globalInfo();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      
      Vector<String> vector0 = new Vector<String>();
      ResultMatrixPlainText.main(stringArray0);
      assertEquals(18, stringArray0.length);
      
      resultMatrixCSV0.removeFilterName((String) null);
      assertEquals(0, resultMatrixCSV0.getCountWidth());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.3471811016013646
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setColNameWidth(1527);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixLatex0.padString(")", (-2529), true);
      resultMatrixLatex0.setOptions((String[]) null);
      assertEquals(0, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.toStringRanking();
      int int0 = resultMatrixSignificance0.getVisibleColCount();
      assertEquals(0, int0);
      
      resultMatrixSignificance0.colNameWidthTipText();
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getRowCount());
      assertFalse(resultMatrixSignificance0.getShowAverage());
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.1278794104545113
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDisplayName();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      String string0 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setMean(1, 1, 2);
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 2;
      resultMatrixLatex0.getRevision();
      intArray0[2] = 2;
      intArray0[3] = 97;
      intArray0[4] = 2;
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.setMean((-1569), 2, (-15.53948498258));
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setSignificanceWidth(3);
      int[][] intArray0 = new int[3][4];
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      assertEquals(3, resultMatrixSignificance0.getSignificanceWidth());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.6888794541139402
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = resultMatrixLatex0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.colNameWidthTipText();
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.803496867629152
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.setColOrder(intArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixGnuPlot0.m_HeaderValues = vector0;
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(5, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(97, 47);
      resultMatrixLatex0.setMean(0, 2, 71.8229851537674);
      assertEquals(97, resultMatrixLatex0.getVisibleColCount());
      assertEquals(47, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.9401437834560733
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.clear();
      resultMatrixSignificance0.setSignificanceWidth(26);
      boolean boolean0 = resultMatrixSignificance0.isSignificance(5728);
      assertEquals(26, resultMatrixSignificance0.getSignificanceWidth());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 1);
      resultMatrixHTML0.setEnumerateRowNames(false);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader(" ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setEnumerateRowNames(true);
      resultMatrixLatex0.setRowOrder(intArray0);
      assertTrue(resultMatrixLatex0.getEnumerateRowNames());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.getDefaultCountWidth();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.8526379562735795
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertTrue(resultMatrixSignificance0.getDefaultEnumerateColNames());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[0];
      resultMatrixLatex0.setColOrder(intArray0);
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=3.3732504467984272
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = resultMatrixLatex0.getOptions();
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      assertEquals(18, stringArray0.length);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1);
      resultMatrixSignificance0.isSignificance(0);
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=3.5890875912249562
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[][] stringArray0 = resultMatrixCSV0.toArray();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      boolean boolean0 = resultMatrixCSV0.getPrintColNames();
      assertFalse(boolean0);
      
      resultMatrixCSV0.isStdDev(0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray1 = resultMatrixCSV0.getOptions();
      resultMatrixHTML0.removeFilterName("N(3i21c8)>A*8t<");
      resultMatrixHTML0.clearRanking();
      resultMatrixHTML0.getDefaultPrintColNames();
      Vector<String> vector0 = new Vector<String>(2);
      resultMatrixCSV0.getDefaultMeanPrec();
      resultMatrixCSV0.headerKeys();
      ResultMatrixPlainText.main(stringArray1);
      int int0 = resultMatrixCSV0.getCountWidth();
      assertEquals(0, int0);
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(1, 0);
      resultMatrixLatex1.getColSize(stringArray0, 2, false, true);
      resultMatrixHTML0.isSignificance((-262));
      resultMatrixLatex0.getShowStdDev();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.1634240504234032
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.WIN_STRING = "3";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.setStdDevWidth(2);
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      intArray0[0] = (-646);
      resultMatrixGnuPlot1.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot1);
      resultMatrixGnuPlot0.setMean(516, 0, 0);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevWidth());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.8526379562735795
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      double double0 = resultMatrixCSV0.getStdDev((-2598), 0);
      assertEquals(0.0, double0, 0.01);
      
      resultMatrixCSV0.setMean(1515, 0, 70.763345176);
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertFalse(resultMatrixCSV0.getShowAverage());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertTrue(resultMatrixCSV0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.8243648409235025
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      int[][] intArray0 = new int[6][4];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRanking(intArray0);
      resultMatrixLatex0.printColNamesTipText();
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
      assertEquals(1, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.052372499429948
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      boolean boolean0 = false;
      resultMatrixCSV0.setPrintRowNames(false);
      String string0 = " <classname>\n";
      resultMatrixCSV1.addHeader(" <classname>\n", "]");
      resultMatrixCSV0.removeFilterName(" <classname>\n");
      resultMatrixCSV1.isAverage(0);
      resultMatrixCSV1.getVisibleColCount();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setPrintRowNames(false);
      resultMatrixGnuPlot0.meanPrecTipText();
      assertTrue(resultMatrixGnuPlot0.getEnumerateRowNames());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 1);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.2526797000223904
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.padString("hYJfl1$KCsmw,#u", 2);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "$\bullet$";
      stringArray0[1] = "hY";
      stringArray0[2] = "$circ$";
      stringArray0[3] = "(";
      resultMatrixLatex0.m_ColNames = stringArray0;
      resultMatrixLatex0.setCountWidth(58);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      resultMatrixLatex0.assign(resultMatrixGnuPlot0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 52);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 891;
      intArray0[3] = 2;
      resultMatrixGnuPlot1.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      assertTrue(resultMatrixLatex0.getPrintColNames());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(7, 0);
      resultMatrixSignificance0.setMeanPrec(2);
      resultMatrixSignificance0.toStringKey();
      boolean boolean0 = resultMatrixSignificance0.isStdDev((-2));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=3.0245687650905935
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      int[][] intArray1 = new int[1][5];
      resultMatrixLatex0.setColNameWidth(0);
      intArray1[0] = intArray0;
      resultMatrixLatex0.setRanking(intArray1);
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.getDefaultRemoveFilterName();
      resultMatrixLatex0.setColOrder(intArray0);
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(0, resultMatrixLatex0.getVisibleRowCount());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=3.4559641525861644
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setRemoveFilterName(true);
      resultMatrixCSV0.getOptions();
      assertTrue(resultMatrixCSV0.getRemoveFilterName());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 0);
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=3.7376696182833657
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_CountWidth = 344;
      resultMatrixSignificance0.setRemoveFilterName(true);
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.getDefaultColNameWidth();
      resultMatrixSignificance0.setMeanPrec((-863));
      resultMatrixSignificance0.toStringKey();
      assertTrue(resultMatrixSignificance0.getRemoveFilterName());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=3.0904599236161974
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setMeanPrec((-87));
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.setColOrder(intArray0);
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.9025538185947704
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 1);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance1.getSignificanceCount(1, 2);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2130, 1110);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=2.9079575486106544
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.padString((String) null, 781);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setCountWidth(1);
      assertEquals(1, resultMatrixLatex0.getCountWidth());
      
      resultMatrixHTML0.getDefaultEnumerateColNames();
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      int[][] intArray0 = new int[8][4];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      boolean boolean0 = resultMatrixSignificance0.getShowAverage();
      assertFalse(boolean0);
      
      resultMatrixSignificance0.globalInfo();
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertFalse(resultMatrixSignificance0.getDefaultRemoveFilterName());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=3.0870423502280264
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      intArray0[0] = (-646);
      resultMatrixGnuPlot0.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.getSignificance(0, (-602));
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals(0, resultMatrixLatex0.getDefaultStdDevWidth());
      assertFalse(resultMatrixLatex0.getDefaultRemoveFilterName());
      assertFalse(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=3.529881130591447
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      String[] stringArray0 = new String[5];
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_ColNameWidth = 1055;
      resultMatrixGnuPlot0.rowNameWidthTipText();
      resultMatrixGnuPlot0.getShowStdDev();
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.setRowOrder(intArray0);
      resultMatrixLatex0.enumerateColNamesTipText();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(1, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=3.303246036699927
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixSignificance0);
      assertEquals(40, resultMatrixLatex1.getRowNameWidth());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      assertFalse(resultMatrixLatex1.getEnumerateRowNames());
      
      String string0 = resultMatrixLatex0.toString();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      resultMatrixLatex0.getAverage(2);
      assertEquals(0, resultMatrixLatex0.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=3.876920111749113
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      String[] stringArray0 = new String[5];
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getAverage((-1299));
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=3.2423606966230083
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      String[] stringArray0 = new String[0];
      resultMatrixPlainText0.clearHeader();
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixPlainText0.getColName(2);
      resultMatrixLatex0.isStdDev(0);
      assertFalse(resultMatrixLatex0.getEnumerateColNames());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=3.8561010731103025
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDisplayName();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.getSummaryTitle(3);
      resultMatrixCSV0.setEnumerateColNames(false);
      String[][] stringArray0 = resultMatrixCSV0.toArray();
      resultMatrixCSV0.setColHidden(0, true);
      resultMatrixCSV0.getDefaultPrintRowNames();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(3, 1);
      int int0 = resultMatrixLatex0.getColSize(stringArray0, 6, true, true);
      assertFalse(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=3.594619809937604
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.getPrintColNames();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      Vector<String> vector0 = new Vector<String>(0);
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.getDefaultMeanPrec();
      resultMatrixCSV0.headerKeys();
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixCSV0.getCountWidth();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.getColSize((String[][]) null, 2, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 148
  /*Coverage entropy=2.9288799345939394
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDisplayName();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.getSummaryTitle(3);
      resultMatrixCSV0.setEnumerateColNames(false);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[][] stringArray0 = new String[0][8];
      // Undeclared exception!
      try { 
        resultMatrixLatex0.getColSize(stringArray0, 995, true, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 149
  /*Coverage entropy=3.8606234575716956
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateColNames(false);
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.LOSS_STRING = " ";
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 8);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.assign(resultMatrixCSV0);
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 0);
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 2613;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixGnuPlot1);
      String[][] stringArray0 = new String[2][2];
      String[] stringArray1 = new String[0];
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[1];
      stringArray2[0] = "";
      stringArray0[1] = stringArray2;
      resultMatrixLatex1.getColSize(stringArray0, (-1), false, false);
      assertEquals(1, resultMatrixGnuPlot1.getVisibleRowCount());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=3.189550866482298
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_CountWidth = 344;
      int[] intArray0 = new int[1];
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.m_RankingDiff = intArray0;
      assertEquals(344, resultMatrixSignificance0.getCountWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clear();
      String[][] stringArray1 = new String[4][2];
      stringArray1[0] = stringArray0;
      resultMatrixLatex0.m_ShowStdDev = false;
      stringArray1[1] = stringArray0;
      stringArray1[2] = stringArray0;
      stringArray1[3] = stringArray0;
      resultMatrixLatex0.getColSize(stringArray1, 0, true, true);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      assertEquals(0, resultMatrixLatex0.getCountWidth());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=2.8133554045006153
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      int[][] intArray0 = new int[8][4];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRanking(intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 1);
      resultMatrixCSV0.getDefaultEnumerateColNames();
      assertEquals(0, resultMatrixCSV0.getVisibleColCount());
      
      resultMatrixLatex0.getMean(0, 45);
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getStdDev((-1461), 0);
      assertEquals(0, resultMatrixCSV0.getDefaultStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultSignificanceWidth());
      assertFalse(resultMatrixCSV0.getShowStdDev());
      assertTrue(resultMatrixCSV0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=4.000596434286577
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[6][4];
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(1, resultMatrixPlainText0.getColCount());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      
      resultMatrixSignificance0.getMean(1858, 0);
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=4.343805421853679
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.isStdDev(1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      resultMatrixHTML0.removeFilterName("$circ$");
      resultMatrixHTML0.clearRanking();
      resultMatrixHTML0.setCount(1778, 0.0);
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      
      ResultMatrixSignificance.main(stringArray0);
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=3.1758491761530703
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_ColNameWidth = 2;
      resultMatrixCSV0.toStringMatrix();
      assertEquals(2, resultMatrixCSV0.getColNameWidth());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 1);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 0);
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixHTML0.getColCount();
      resultMatrixGnuPlot0.getDisplayCol(2);
      resultMatrixGnuPlot0.setRowHidden((-1), false);
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 156
  /*Coverage entropy=3.466704480549237
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = resultMatrixLatex0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getColHidden(3482);
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
  }

  /**
  //Test case number: 157
  /*Coverage entropy=3.672000058596207
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.removeFilterName("~4P{");
      resultMatrixCSV0.toArray();
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[5] = 0;
      intArray0[6] = 2;
      intArray0[7] = 2;
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.getSummaryTitle(0);
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      
      resultMatrixCSV0.setEnumerateColNames(false);
      String[][] stringArray0 = resultMatrixCSV0.toArray();
      resultMatrixCSV0.setColHidden((-816), false);
      resultMatrixCSV0.getDefaultPrintRowNames();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 0);
      int int0 = resultMatrixLatex0.getColSize(stringArray0, 11, false, true);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 158
  /*Coverage entropy=3.2062405444820476
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 2;
      intArray0[5] = 2;
      intArray0[6] = 1;
      intArray0[7] = 2;
      intArray0[8] = 0;
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.getSummaryTitle(2);
      resultMatrixCSV0.setEnumerateColNames(false);
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.setColHidden(2, false);
      resultMatrixCSV0.getDefaultPrintRowNames();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2310, 103);
  }

  /**
  //Test case number: 159
  /*Coverage entropy=3.0829126413850387
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.LOSS_STRING = " ";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex0.getSignificanceCount(1, 0);
      resultMatrixCSV0.setColHidden(1, true);
      resultMatrixCSV0.getDefaultPrintRowNames();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 1);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.getDefaultPrintColNames();
      boolean boolean0 = resultMatrixHTML0.getEnumerateRowNames();
      assertFalse(boolean0);
      
      resultMatrixHTML0.getDisplayName();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixSignificance0.getRevision();
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      
      resultMatrixCSV0.enumerateRowNamesTipText();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=4.248495242049361
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.WIN_STRING = "3";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.setCount((-396), 0.0);
      ResultMatrixSignificance.main((String[]) null);
  }

  /**
  //Test case number: 161
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.setMeanPrec(0);
      resultMatrixLatex1.setCountWidth(0);
      assertEquals(0, resultMatrixLatex1.getMeanPrec());
      
      resultMatrixHTML0.getDefaultEnumerateColNames();
      assertEquals(1, resultMatrixHTML0.getRowCount());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=2.8745196256575896
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.getDefaultColNameWidth();
      resultMatrixPlainText0.setStdDevPrec(0);
      resultMatrixSignificance0.setMeanPrec(1);
      resultMatrixSignificance0.toStringKey();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.assign(resultMatrixSignificance0);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixLatex0.getDefaultEnumerateColNames();
      int int0 = resultMatrixSignificance0.getRowNameWidth();
      assertEquals(1, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 163
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clearSummary();
      resultMatrixLatex0.setRowOrder(intArray0);
      assertEquals(0, resultMatrixLatex0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 164
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clearHeader();
      resultMatrixLatex0.getDefaultShowAverage();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertFalse(resultMatrixLatex0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 165
  /*Coverage entropy=2.791039810954727
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      int[][] intArray0 = new int[1][4];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 166
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setMean(809, 3372, 809);
      String string0 = resultMatrixPlainText0.stdDevWidthTipText();
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals("The width of the standard deviation (0 = optimal).", string0);
      assertEquals(0, resultMatrixPlainText0.getDefaultStdDevWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 167
  /*Coverage entropy=2.6438239683789817
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRevision();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.setRowNameWidth(144);
      resultMatrixLatex0.padString("g;F'{$!I*u9~dj4=q5", 144, false);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex0.toStringRanking();
      assertEquals(144, resultMatrixLatex0.getRowNameWidth());
      
      resultMatrixHTML0.getPrintColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.globalInfo();
      resultMatrixSignificance0.getDefaultPrintColNames();
      assertTrue(resultMatrixHTML0.getPrintRowNames());
  }

  /**
  //Test case number: 168
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      int[][] intArray0 = new int[8][4];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setRowNameWidth(8);
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      assertEquals(8, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 169
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 2);
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      
      resultMatrixCSV0.m_EnumerateRowNames = true;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.enumerateRowNamesTipText();
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.getSignificance((-2683), 2);
      assertTrue(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 170
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.getRemoveFilterName();
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
  }

  /**
  //Test case number: 171
  /*Coverage entropy=3.8839744173942603
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.padString("", 2843, true);
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      
      Vector<String> vector0 = new Vector<String>();
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.getColHidden((-1881));
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 172
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      int[] intArray0 = new int[15];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.getColName((-2460));
      assertNull(string0);
      
      resultMatrixSignificance0.toStringRanking();
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertFalse(resultMatrixSignificance0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 173
  /*Coverage entropy=3.2047775241322567
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getColName(1524);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 174
  /*Coverage entropy=3.332204510175204
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.getDefaultColNameWidth();
      resultMatrixSignificance0.setMeanPrec(1);
      resultMatrixSignificance0.toStringKey();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.assign(resultMatrixSignificance0);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixHTML0.getEnumerateRowNames();
      assertEquals(1, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 175
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      int[][] intArray0 = new int[3][4];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultShowStdDev();
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertTrue(resultMatrixPlainText0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 176
  /*Coverage entropy=2.755696352159205
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(1, 0);
      resultMatrixGnuPlot1.toStringRanking();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getColSize((String[][]) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 177
  /*Coverage entropy=2.921613496406035
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.getColSize((String[][]) null, (-3287));
      int int0 = resultMatrixLatex0.getSignificanceWidth();
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(0, int0);
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
  }

  /**
  //Test case number: 178
  /*Coverage entropy=2.8428806153171315
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.doubleToString(614.6162903761926, 101);
      resultMatrixCSV0.getRowOrder();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader("*");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 179
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultRowNameWidth();
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
  }

  /**
  //Test case number: 180
  /*Coverage entropy=3.1417070364814803
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixLatex0.setStdDevPrec(2);
      String[] stringArray0 = new String[0];
      resultMatrixLatex0.setOptions(stringArray0);
      assertFalse(resultMatrixLatex0.getPrintRowNames());
  }

  /**
  //Test case number: 181
  /*Coverage entropy=3.1278794104545113
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 75);
      resultMatrixCSV0.getRowOrder();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixCSV0.getDisplayName();
      resultMatrixSignificance0.m_MeanWidth = 1;
      resultMatrixSignificance0.getSignificance(1, 603);
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String string0 = resultMatrixCSV0.getColName(0);
      assertNotNull(string0);
      assertEquals(75, resultMatrixCSV0.getVisibleRowCount());
      
      resultMatrixCSV0.toStringMatrix();
      String string1 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,[1]\nrow0,''\nrow1,''\nrow2,''\nrow3,''\nrow4,''\nrow5,''\nrow6,''\nrow7,''\nrow8,''\nrow9,''\nrow10,''\nrow11,''\nrow12,''\nrow13,''\nrow14,''\nrow15,''\nrow16,''\nrow17,''\nrow18,''\nrow19,''\nrow20,''\nrow21,''\nrow22,''\nrow23,''\nrow24,''\nrow25,''\nrow26,''\nrow27,''\nrow28,''\nrow29,''\nrow30,''\nrow31,''\nrow32,''\nrow33,''\nrow34,''\nrow35,''\nrow36,''\nrow37,''\nrow38,''\nrow39,''\nrow40,''\nrow41,''\nrow42,''\nrow43,''\nrow44,''\nrow45,''\nrow46,''\nrow47,''\nrow48,''\nrow49,''\nrow50,''\nrow51,''\nrow52,''\nrow53,''\nrow54,''\nrow55,''\nrow56,''\nrow57,''\nrow58,''\nrow59,''\nrow60,''\nrow61,''\nrow62,''\nrow63,''\nrow64,''\nrow65,''\nrow66,''\nrow67,''\nrow68,''\nrow69,''\nrow70,''\nrow71,''\nrow72,''\nrow73,''\nrow74,''\n'[v/ /*]',''\n", string1);
      
      resultMatrixCSV0.getDefaultPrintRowNames();
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 182
  /*Coverage entropy=3.2062651007397753
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDisplayName();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixCSV0.getSummaryTitle(3);
      resultMatrixCSV0.setEnumerateColNames(false);
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.setColHidden(0, true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.toStringRanking();
      int[][] intArray1 = new int[0][1];
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSummary(intArray1, intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 183
  /*Coverage entropy=3.554095156565439
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowOrder(intArray0);
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
  }

  /**
  //Test case number: 184
  /*Coverage entropy=2.8848951827782128
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      int[][] intArray0 = new int[8][4];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRanking(intArray0);
      resultMatrixLatex0.getVisibleColCount();
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 185
  /*Coverage entropy=2.9458755173797666
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      int[][] intArray0 = new int[8][4];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRanking(intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 0);
      resultMatrixPlainText0.m_PrintColNames = true;
      resultMatrixPlainText0.toStringSummary();
      assertEquals(0, resultMatrixPlainText0.getRowCount());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      int int0 = resultMatrixLatex0.getSignificanceCount((-1861), 0);
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 186
  /*Coverage entropy=2.8739867076185663
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowStdDev(false);
      resultMatrixLatex0.setRowOrder(intArray0);
      boolean boolean0 = resultMatrixLatex0.getShowAverage();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertFalse(boolean0);
      assertFalse(resultMatrixLatex0.getShowStdDev());
  }

  /**
  //Test case number: 187
  /*Coverage entropy=2.791039810954727
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[1][1];
      int[] intArray1 = new int[2];
      intArray1[0] = 1;
      intArray1[1] = 0;
      intArray0[0] = intArray1;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 188
  /*Coverage entropy=4.22881065459077
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.padString("hYJfl1$KCsmw,#u", 2);
      ResultMatrixLatex.main((String[]) null);
      resultMatrixLatex0.padString("-show-avg", 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixLatex0.toStringRanking();
      resultMatrixSignificance0.m_ShowStdDev = false;
      resultMatrixSignificance0.m_PrintRowNames = false;
      resultMatrixSignificance0.getDefaultStdDevWidth();
      ResultMatrixLatex.main((String[]) null);
      resultMatrixSignificance0.setColNameWidth(1);
      resultMatrixLatex0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.setEnumerateColNames(false);
      assertEquals(1, resultMatrixSignificance0.getColNameWidth());
      
      resultMatrixHTML0.setStdDevWidth(41);
      assertTrue(resultMatrixLatex0.getPrintRowNames());
  }

  /**
  //Test case number: 189
  /*Coverage entropy=2.8004698251768687
  */
  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.padString("", (-4465));
      assertEquals("", string0);
      
      resultMatrixGnuPlot0.enumerateColNamesTipText();
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 190
  /*Coverage entropy=2.8526379562735795
  */
  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 1);
      resultMatrixSignificance0.setEnumerateColNames(true);
      resultMatrixSignificance0.trimString("-mean-prec", 11);
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertFalse(resultMatrixSignificance0.getDefaultEnumerateRowNames());
      assertFalse(resultMatrixSignificance0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 191
  /*Coverage entropy=3.252770505378014
  */
  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[6][4];
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals(0, resultMatrixPlainText0.getVisibleRowCount());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals("Dataset (1) col0 | (2) col1\n---------------------------\n---------------------------\n(v/ /*) | (0/0/0)\n", string0);
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 192
  /*Coverage entropy=3.588867109548153
  */
  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_RowNameWidth = 1792;
      resultMatrixCSV0.setColNameWidth((-3055));
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.getStdDev(3, 3);
      assertEquals(1792, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 193
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_StdDevWidth = 46;
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSize((-1126), (-641));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 194
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSize(61, (-2209));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 195
  /*Coverage entropy=3.1417070364814803
  */
  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSize((-4013), (-4733));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 196
  /*Coverage entropy=2.8243648409235025
  */
  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      int[][] intArray0 = new int[6][4];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowNameWidth((-410));
      resultMatrixLatex0.setRanking(intArray0);
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertFalse(resultMatrixLatex0.getDefaultRemoveFilterName());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(0, resultMatrixLatex0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 197
  /*Coverage entropy=2.8023124626719724
  */
  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.getStdDevPrec();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 198
  /*Coverage entropy=3.3464520534908706
  */
  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getOptions();
      double[][] doubleArray0 = new double[7][3];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) 1;
      doubleArray1[1] = (double) 2;
      doubleArray1[2] = (double) 2;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[4];
      doubleArray2[0] = (double) 1;
      doubleArray2[1] = (double) 2;
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = (double) 1;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[9];
      doubleArray3[0] = (double) 0;
      doubleArray3[1] = (double) 2;
      doubleArray3[2] = (double) 2;
      doubleArray3[3] = (double) 0;
      doubleArray3[4] = (double) 1;
      doubleArray3[5] = (double) 2;
      doubleArray3[6] = (double) 2;
      doubleArray3[7] = (-33.6546155315);
      doubleArray3[8] = (double) 0;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[5];
      doubleArray4[0] = (double) 1;
      doubleArray4[1] = (-33.6546155315);
      doubleArray4[2] = (double) 0;
      doubleArray4[3] = 622.521886519;
      doubleArray4[4] = (double) 2;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[4];
      doubleArray5[0] = (double) 2;
      doubleArray5[1] = 622.521886519;
      doubleArray5[2] = (double) 1;
      doubleArray5[3] = 622.521886519;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[8];
      doubleArray6[0] = (double) 1;
      doubleArray6[1] = (double) 1;
      doubleArray6[2] = (double) 1;
      doubleArray6[3] = (double) 0;
      doubleArray6[4] = (double) 0;
      doubleArray6[5] = (double) 1;
      doubleArray6[6] = 622.521886519;
      doubleArray6[7] = (double) 1;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[7];
      doubleArray7[0] = (double) 1;
      doubleArray7[1] = (double) 2;
      doubleArray7[2] = (-33.6546155315);
      doubleArray7[3] = (double) 1;
      doubleArray7[4] = 622.521886519;
      doubleArray7[5] = (double) 0;
      doubleArray7[6] = (-33.6546155315);
      doubleArray0[6] = doubleArray7;
      resultMatrixGnuPlot0.m_Mean = doubleArray0;
      resultMatrixGnuPlot0.m_EnumerateRowNames = true;
      resultMatrixGnuPlot0.setRowNameWidth(0);
      int int0 = resultMatrixGnuPlot0.getStdDevPrec();
      assertTrue(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 199
  /*Coverage entropy=3.91531092758384
  */
  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixPlainText.main((String[]) null);
  }

  /**
  //Test case number: 200
  /*Coverage entropy=3.7376696182833657
  */
  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDisplayName();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.getDefaultColNameWidth();
      resultMatrixSignificance0.setMeanPrec(717);
      resultMatrixSignificance0.toStringKey();
      assertEquals(717, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 201
  /*Coverage entropy=2.6808649498588037
  */
  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[0][1];
      resultMatrixLatex0.setRanking(intArray0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      assertEquals(0, resultMatrixLatex1.getRowNameWidth());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
      assertEquals(1, resultMatrixLatex1.getRowCount());
      assertEquals(0, resultMatrixLatex1.getDefaultCountWidth());
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      assertFalse(resultMatrixLatex1.getEnumerateRowNames());
  }

  /**
  //Test case number: 202
  /*Coverage entropy=3.5366933917926833
  */
  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.setCount(1, (-586.961296));
      String[] stringArray0 = new String[5];
      stringArray0[1] = "v";
      stringArray0[2] = "*";
      stringArray0[3] = "v";
      stringArray0[4] = "v";
      ResultMatrixSignificance.main(stringArray0);
      assertEquals(5, stringArray0.length);
  }

  /**
  //Test case number: 203
  /*Coverage entropy=4.052319503342694
  */
  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      String[] stringArray0 = new String[0];
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixPlainText0.toStringKey();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.setCount(1, 2);
      ResultMatrixSignificance.main(stringArray0);
      assertEquals(0, stringArray0.length);
  }

  /**
  //Test case number: 204
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.setCount(0, 0);
      assertEquals(0, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(1, resultMatrixHTML0.getRowCount());
  }

  /**
  //Test case number: 205
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setPrintColNames(true);
      resultMatrixLatex0.setRowOrder(intArray0);
      assertTrue(resultMatrixLatex0.getPrintColNames());
  }

  /**
  //Test case number: 206
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setRemoveFilterName(true);
      int[][] intArray0 = new int[6][4];
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 207
  /*Coverage entropy=3.7081095646614566
  */
  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setOptions((String[]) null);
      resultMatrixLatex0.getOptions();
      resultMatrixLatex0.getCount((-1));
      assertFalse(resultMatrixLatex0.getEnumerateColNames());
  }

  /**
  //Test case number: 208
  /*Coverage entropy=3.7612001156935655
  */
  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.m_SignificanceWidth = 1;
      int[][] intArray0 = new int[2][7];
      int[] intArray1 = new int[5];
      intArray1[0] = 2;
      resultMatrixPlainText0.m_SignificanceWidth = 2;
      intArray1[1] = 0;
      resultMatrixPlainText0.getRevision();
      intArray1[2] = 0;
      intArray1[3] = 1;
      resultMatrixPlainText0.setPrintColNames(false);
      intArray1[4] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      resultMatrixPlainText0.m_NonSigWins = intArray0;
      resultMatrixPlainText0.m_ColNames = null;
      resultMatrixPlainText0.removeFilterName("Vn='xMon*Xr#f\"");
      resultMatrixPlainText0.setEnumerateColNames(false);
      resultMatrixPlainText0.setRemoveFilterName(false);
      resultMatrixPlainText0.setSize(0, 1251);
      resultMatrixPlainText0.setColNameWidth(2461);
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixPlainText0.showAverageTipText();
      resultMatrixPlainText0.getCount(0);
      assertFalse(resultMatrixPlainText0.getPrintColNames());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setOptions((String[]) null);
      resultMatrixSignificance0.toStringSummary();
      assertFalse(resultMatrixSignificance0.getShowAverage());
  }

  /**
  //Test case number: 209
  /*Coverage entropy=3.185256796640907
  */
  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_ColNameWidth = 2;
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixCSV0.setPrintColNames(false);
      int[] intArray0 = new int[0];
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getDefaultSignificanceWidth();
      assertEquals(2, resultMatrixCSV0.getColNameWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 210
  /*Coverage entropy=2.8243648409235025
  */
  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      int[][] intArray0 = new int[8][4];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRemoveFilterName(false);
      resultMatrixLatex0.setRanking(intArray0);
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 211
  /*Coverage entropy=3.795579268762688
  */
  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(24, 2);
      resultMatrixLatex0.setOptions(stringArray0);
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
  }

  /**
  //Test case number: 212
  /*Coverage entropy=2.8243648409235025
  */
  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      int[][] intArray0 = new int[8][4];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setColNameWidth(17);
      resultMatrixLatex0.setRanking(intArray0);
      assertEquals(17, resultMatrixLatex0.getColNameWidth());
  }

  /**
  //Test case number: 213
  /*Coverage entropy=3.529881130591447
  */
  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      String[] stringArray0 = new String[5];
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.showAverageTipText();
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
  }

  /**
  //Test case number: 214
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setMeanPrec(1);
      int[][] intArray0 = new int[6][4];
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      assertEquals(1, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 215
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.setSignificance((-1409), (-1409), (-1409));
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(1, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 216
  /*Coverage entropy=2.8243648409235025
  */
  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      int[][] intArray0 = new int[6][4];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRanking(intArray0);
      int int0 = resultMatrixLatex0.getStdDevWidth();
      assertEquals(0, int0);
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertEquals(1, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 217
  /*Coverage entropy=2.651116054762002
  */
  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixLatex0.assign(resultMatrixSignificance0);
      resultMatrixLatex0.setRowOrder(intArray0);
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      assertFalse(resultMatrixLatex0.getPrintColNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
  }

  /**
  //Test case number: 218
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      int[][] intArray0 = new int[2][4];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.padString((String) null, 11, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 219
  /*Coverage entropy=2.882005086088324
  */
  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setColOrder(intArray0);
      String string0 = resultMatrixLatex0.padString(" |", (-1), false);
      assertEquals(" |", string0);
      
      resultMatrixLatex0.getShowAverage();
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
  }

  /**
  //Test case number: 220
  /*Coverage entropy=2.705012510008047
  */
  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[6][4];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRanking(intArray0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance1.setSummary(intArray0, intArray0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixSignificance1);
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      assertEquals(0, resultMatrixLatex1.getRowNameWidth());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
      
      resultMatrixSignificance0.setMean(3769, 1, 1);
      resultMatrixLatex0.setSignificance(0, 0, 1);
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 221
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_RowOrder = intArray0;
      resultMatrixLatex0.setMeanWidth((-1049));
      resultMatrixLatex0.setColOrder(intArray0);
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
  }

  /**
  //Test case number: 222
  /*Coverage entropy=2.782355920889567
  */
  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      int[][] intArray0 = new int[8][4];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      resultMatrixSignificance0.setSignificance(1661, 1661, 1661);
      assertEquals(0, resultMatrixSignificance0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertTrue(resultMatrixSignificance0.getDefaultEnumerateColNames());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 223
  /*Coverage entropy=2.8332133440562166
  */
  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setColOrder(intArray0);
      int int0 = resultMatrixLatex0.getSignificanceCount(249, 59);
      assertEquals(0, int0);
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 224
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixCSV0.significanceWidthTipText();
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
      assertTrue(resultMatrixCSV0.getDefaultPrintRowNames());
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getDefaultCountWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(1, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 225
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[6][4];
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      resultMatrixSignificance0.getRowNameWidth();
      assertEquals(0, resultMatrixSignificance0.getDefaultSignificanceWidth());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertFalse(resultMatrixSignificance0.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
      assertEquals(1, resultMatrixSignificance0.getColCount());
  }

  /**
  //Test case number: 226
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      resultMatrixCSV0.setSize(667, 100);
  }

  /**
  //Test case number: 227
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setSize(0, 692);
      resultMatrixSignificance0.m_StdDevPrec = 0;
      resultMatrixSignificance0.m_ShowStdDev = false;
      resultMatrixSignificance0.m_RowNameWidth = 0;
      resultMatrixSignificance0.m_ColNameWidth = 0;
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixSignificance0.getRowNameWidth();
      assertEquals(692, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 228
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.removeFilterName("");
      assertEquals("", string0);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 229
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setRowHidden(3, false);
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getDefaultShowAverage());
      assertEquals(1, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 230
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(1, resultMatrixLatex0.getColCount());
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(2, 0);
      int int0 = resultMatrixLatex1.getVisibleRowCount();
      assertEquals(0, int0);
      assertFalse(resultMatrixLatex1.getShowStdDev());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      assertEquals(0, resultMatrixLatex1.getDefaultMeanWidth());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      assertEquals(2, resultMatrixLatex1.getVisibleColCount());
      assertFalse(resultMatrixLatex1.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
  }

  /**
  //Test case number: 231
  /*Coverage entropy=2.946271959759045
  */
  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.isRowName((-1487));
      resultMatrixLatex0.getVisibleRowCount();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.doubleToString(10.0, (-2838));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 232
  /*Coverage entropy=3.317275078068807
  */
  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = new String[0];
      resultMatrixLatex0.setOptions(stringArray0);
      int int0 = resultMatrixLatex0.getVisibleRowCount();
      assertFalse(resultMatrixLatex0.getPrintRowNames());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 233
  /*Coverage entropy=3.7841896339182655
  */
  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 2);
      resultMatrixCSV0.m_EnumerateRowNames = true;
      resultMatrixCSV0.getPrintColNames();
      resultMatrixCSV0.isStdDev(2);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixCSV0.getOptions();
      resultMatrixHTML0.removeFilterName("*");
      resultMatrixHTML0.m_CountWidth = 1538;
      resultMatrixHTML0.TIE_STRING = "]";
      resultMatrixHTML0.clearRanking();
      resultMatrixHTML0.getDefaultPrintColNames();
      Vector<String> vector0 = new Vector<String>(3);
      double[][] doubleArray0 = new double[2][9];
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = (double) 2;
      doubleArray1[1] = (double) 1538;
      doubleArray1[2] = (double) 1;
      doubleArray1[3] = (double) 3;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = 2852.196223963715;
      doubleArray2[1] = (double) 1;
      doubleArray2[2] = (double) 3;
      doubleArray2[3] = (double) 1538;
      doubleArray2[4] = (double) 1538;
      doubleArray2[5] = (double) 2;
      doubleArray0[1] = doubleArray2;
      resultMatrixCSV0.m_StdDev = doubleArray0;
      resultMatrixHTML0.m_HeaderValues = vector0;
      resultMatrixHTML0.isRowName(2);
      vector0.add("]");
      resultMatrixCSV0.setRowHidden(0, true);
      resultMatrixHTML0.getVisibleRowCount();
      resultMatrixHTML0.getMeanWidth();
      resultMatrixHTML0.rowNameWidthTipText();
      resultMatrixCSV0.getEnumerateRowNames();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixHTML0.meanWidthTipText();
      assertEquals(1538, resultMatrixHTML0.getCountWidth());
  }

  /**
  //Test case number: 234
  /*Coverage entropy=3.4572076692901836
  */
  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.isStdDev(1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixCSV0.getOptions();
      resultMatrixHTML0.removeFilterName("$circ$");
      resultMatrixHTML0.clearRanking();
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixHTML0.isRowName(831);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[0][5];
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 235
  /*Coverage entropy=2.7458535301741085
  */
  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setRowHidden(686, true);
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 236
  /*Coverage entropy=3.287569805176762
  */
  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.LEFT_PARENTHESES = "CSV";
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixCSV0.LOSS_STRING = "CSV";
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.toArray();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      resultMatrixCSV0.setColHidden(0, true);
      resultMatrixCSV0.getDefaultPrintRowNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 26);
      resultMatrixHTML0.isRowName(2);
      Vector<String> vector0 = new Vector<String>();
      vector0.add(" ");
      resultMatrixCSV0.setRowHidden(0, false);
      resultMatrixHTML0.getVisibleRowCount();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.getMeanWidth();
      resultMatrixHTML1.rowNameWidthTipText();
      resultMatrixCSV0.getEnumerateRowNames();
      assertEquals(0, resultMatrixCSV0.getVisibleColCount());
      
      resultMatrixHTML1.getDefaultEnumerateColNames();
      resultMatrixHTML0.meanWidthTipText();
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
  }

  /**
  //Test case number: 237
  /*Coverage entropy=3.9463978686817334
  */
  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 2);
      resultMatrixCSV0.m_EnumerateRowNames = true;
      resultMatrixCSV0.getPrintColNames();
      resultMatrixCSV0.isStdDev(2);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      resultMatrixHTML0.removeFilterName("*");
      resultMatrixHTML0.m_CountWidth = 1538;
      resultMatrixHTML0.TIE_STRING = "]";
      resultMatrixHTML0.clearRanking();
      resultMatrixHTML0.getDefaultPrintColNames();
      Vector<String> vector0 = new Vector<String>(3);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) 1538;
      doubleArray0[2] = (double) 1;
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.getDefaultMeanPrec();
      resultMatrixCSV0.headerKeys();
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixCSV0.getCountWidth();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("!lxuZw>)l?0BQz\"tWd");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 238
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      boolean boolean0 = resultMatrixCSV0.isStdDev(1);
      assertFalse(boolean0);
      
      resultMatrixLatex0.setCountWidth((-130));
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      assertFalse(resultMatrixLatex0.getDefaultRemoveFilterName());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertFalse(resultMatrixLatex0.getShowAverage());
      assertEquals(0, resultMatrixLatex0.getDefaultStdDevWidth());
      assertEquals(1, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 239
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_RowNameWidth = 39;
      int[][] intArray0 = new int[3][4];
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      String string0 = resultMatrixSignificance0.meanWidthTipText();
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals("The width of the mean (0 = optimal).", string0);
      assertEquals(1, resultMatrixSignificance0.getColCount());
  }

  /**
  //Test case number: 240
  /*Coverage entropy=3.0998987589937186
  */
  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      String[][] stringArray0 = resultMatrixLatex0.toArray();
      assertEquals(3, stringArray0.length);
      
      int[][] intArray0 = new int[0][2];
      resultMatrixLatex0.setRanking(intArray0);
      assertTrue(resultMatrixLatex0.getPrintRowNames());
  }

  /**
  //Test case number: 241
  /*Coverage entropy=2.8004698251768687
  */
  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.trimString("Sorted array with NaN (doubles): ", 58);
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      assertFalse(resultMatrixLatex0.getDefaultRemoveFilterName());
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(1, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 242
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertFalse(resultMatrixHTML0.getShowStdDev());
      
      String string0 = resultMatrixSignificance0.trimString(",BL?h_AG", 0);
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertFalse(resultMatrixSignificance0.getDefaultRemoveFilterName());
      assertEquals(",BL?h_AG", string0);
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertFalse(resultMatrixSignificance0.getDefaultShowAverage());
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 243
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.getSummaryTitle(0);
      assertEquals("a", string0);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(5, resultMatrixLatex0.getCountWidth());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertFalse(resultMatrixLatex0.getShowAverage());
  }

  /**
  //Test case number: 244
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      String[] stringArray0 = new String[5];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      try { 
        resultMatrixLatex0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 245
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(12, 12);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.doubleToString((-1.0), (-990));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 246
  /*Coverage entropy=3.536693391792683
  */
  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      assertEquals(0, resultMatrixHTML0.getVisibleRowCount());
      
      String[] stringArray0 = new String[2];
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixHTML0.colNameWidthTipText();
      resultMatrixHTML0.getAverage(0);
      resultMatrixHTML0.doubleToString(0.0, 0);
      assertFalse(resultMatrixHTML0.getShowAverage());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 247
  /*Coverage entropy=3.1445641492324934
  */
  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.getStdDev(30, 960);
      resultMatrixCSV0.doubleToString(0.0, 960);
  }

  /**
  //Test case number: 248
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      // Undeclared exception!
      try { 
        resultMatrixLatex1.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 249
  /*Coverage entropy=3.5989557713498943
  */
  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setStdDevWidth(46);
      int[][] intArray0 = new int[3][4];
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      resultMatrixSignificance0.toStringMatrix();
      assertEquals(46, resultMatrixSignificance0.getStdDevWidth());
  }

  /**
  //Test case number: 250
  /*Coverage entropy=2.7886260379670382
  */
  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setStdDevWidth(0);
      resultMatrixGnuPlot0.m_PrintColNames = true;
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.getDefaultSignificanceWidth();
      resultMatrixGnuPlot1.getRowOrder();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertTrue(resultMatrixGnuPlot1.getPrintColNames());
      assertFalse(resultMatrixGnuPlot1.getEnumerateColNames());
      
      int[][] intArray0 = new int[6][9];
      intArray0[0] = null;
      intArray0[1] = null;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.getSignificance(2, 1);
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(40, resultMatrixPlainText0.getRowNameWidth());
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 251
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setColNameWidth(2784);
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getDisplayName();
      assertEquals(2784, resultMatrixLatex0.getColNameWidth());
  }

  /**
  //Test case number: 252
  /*Coverage entropy=3.075220548054372
  */
  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[1][8];
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      int int0 = resultMatrixSignificance0.getSignificance(26, 26);
      assertEquals(0, int0);
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertFalse(resultMatrixSignificance0.getShowAverage());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
  }

  /**
  //Test case number: 253
  /*Coverage entropy=3.2794518157267287
  */
  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setOptions((String[]) null);
      resultMatrixLatex0.enumerateRowNamesTipText();
      assertFalse(resultMatrixLatex0.getPrintRowNames());
  }

  /**
  //Test case number: 254
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowAverage(false);
      resultMatrixLatex0.setRowOrder(intArray0);
      assertFalse(resultMatrixLatex0.getShowAverage());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0, resultMatrixLatex0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 255
  /*Coverage entropy=2.882005086088324
  */
  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[3][4];
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      resultMatrixSignificance0.isAverage(53);
      resultMatrixSignificance0.getDisplayCol(2993);
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertFalse(resultMatrixSignificance0.getShowAverage());
      assertEquals(0, resultMatrixSignificance0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 256
  /*Coverage entropy=3.233746492566828
  */
  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      String[] stringArray0 = new String[0];
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixLatex0.setCountWidth(2);
      resultMatrixPlainText0.isAverage((-2090));
      assertFalse(resultMatrixLatex0.getPrintRowNames());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDisplayName();
      assertEquals(1, resultMatrixHTML0.getColCount());
  }

  /**
  //Test case number: 257
  /*Coverage entropy=2.8322602295395347
  */
  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowOrder((int[]) null);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.setShowAverage(true);
      resultMatrixSignificance0.toStringKey();
      assertFalse(resultMatrixSignificance0.getDefaultShowAverage());
      assertTrue(resultMatrixSignificance0.getShowAverage());
  }

  /**
  //Test case number: 258
  /*Coverage entropy=2.8243648409235025
  */
  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      int[][] intArray0 = new int[8][4];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowStdDev(true);
      resultMatrixLatex0.setRanking(intArray0);
      assertTrue(resultMatrixLatex0.getShowStdDev());
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
  }

  /**
  //Test case number: 259
  /*Coverage entropy=3.1417070364814803
  */
  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixLatex0.setMeanWidth(2);
      String[] stringArray0 = new String[0];
      resultMatrixLatex0.setOptions(stringArray0);
      assertEquals(0, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 260
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getStdDev(2, 0);
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertEquals(1, resultMatrixCSV0.getColCount());
  }

  /**
  //Test case number: 261
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setStdDevPrec((-700));
      int[][] intArray0 = new int[3][4];
  }

  /**
  //Test case number: 262
  /*Coverage entropy=2.743535678836661
  */
  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRemoveFilterName(true);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.colNameWidthTipText();
      resultMatrixHTML0.getAverage(1);
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      
      resultMatrixLatex0.getDefaultMeanWidth();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
  }

  /**
  //Test case number: 263
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowOrder(intArray0);
      int int0 = resultMatrixLatex0.getMeanWidth();
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getDefaultSignificanceWidth());
      assertEquals(0, int0);
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 264
  /*Coverage entropy=3.9512437185814298
  */
  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.m_RemoveFilterName = false;
      resultMatrixGnuPlot1.getColCount();
      resultMatrixGnuPlot0.getMeanWidth();
      boolean boolean0 = resultMatrixGnuPlot0.isMean(0);
      assertFalse(boolean0);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset col0\n------------\nrow0        \n", string0);
      
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      resultMatrixGnuPlot1.toStringRanking();
      assertEquals(0, resultMatrixGnuPlot1.getStdDevWidth());
      assertEquals(2, resultMatrixGnuPlot1.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot1.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot1.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot1.getMeanWidth());
      assertFalse(resultMatrixGnuPlot1.getShowStdDev());
  }

  /**
  //Test case number: 265
  /*Coverage entropy=3.8525859483279343
  */
  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[0];
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixLatex0.toStringMatrix();
      assertEquals(0, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 266
  /*Coverage entropy=3.738899944894481
  */
  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixSignificance0.getRowHidden(0);
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 267
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      boolean boolean0 = resultMatrixPlainText0.getEnumerateColNames();
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertTrue(boolean0);
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
  }

  /**
  //Test case number: 268
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultRemoveFilterName();
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }
}
