/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 09:11:22 GMT 2019
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.2634978131488714
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      String[][] stringArray0 = new String[7][7];
      String[] stringArray1 = new String[4];
      stringArray1[0] = "";
      stringArray1[1] = "*";
      stringArray1[2] = "v";
      stringArray1[3] = "";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[4];
      stringArray2[0] = "";
      stringArray2[1] = "v";
      stringArray2[2] = "";
      stringArray2[3] = " ";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[5];
      stringArray3[0] = "*";
      stringArray3[1] = "v";
      stringArray3[2] = " ";
      stringArray3[3] = "v";
      stringArray3[4] = "[L:TjC'7";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[3];
      stringArray4[0] = "v";
      stringArray4[1] = "*";
      stringArray4[2] = "";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[4];
      stringArray5[0] = "";
      stringArray5[1] = " ";
      stringArray5[2] = "*";
      stringArray5[3] = "v";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[3];
      stringArray6[0] = "v";
      stringArray6[1] = "*";
      stringArray6[2] = "";
      stringArray0[5] = stringArray6;
      String[] stringArray7 = new String[3];
      stringArray7[0] = "v";
      stringArray7[1] = "";
      stringArray7[2] = "v";
      stringArray0[6] = stringArray7;
      resultMatrixGnuPlot0.getColSize(stringArray0, (-1));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.1266616915458942
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.setCountWidth(0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.toStringRanking();
  }

  /**
  //Test case number: 2
  /*Coverage entropy=4.0433691302138275
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      int[][] intArray1 = new int[2][5];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      resultMatrixCSV0.setRanking(intArray1);
      resultMatrixCSV0.getColName(0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.setSignificanceWidth((-509));
      resultMatrixHTML0.getDefaultRowNameWidth();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = " ";
      stringArray0[2] = "v";
      stringArray0[3] = "";
      stringArray0[4] = "*";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "*";
      stringArray0[8] = "";
      ResultMatrixHTML.main(stringArray0);
      resultMatrixGnuPlot0.getPrintColNames();
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.6319977124326464
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_StdDevWidth = 1424;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1);
      resultMatrixSignificance0.getRowName(0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixCSV0.getAverage(3);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.setSignificanceWidth(26);
      resultMatrixHTML0.getDefaultRowNameWidth();
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.4520703679311584
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[1];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColOrder(intArray0);
      int[][] intArray1 = new int[1][7];
      intArray1[0] = intArray0;
      resultMatrixCSV0.setSummary(intArray1, intArray1);
      resultMatrixCSV0.setRanking(intArray1);
      resultMatrixGnuPlot0.getColCount();
      resultMatrixGnuPlot0.getRowHidden(1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultPrintColNames();
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.3554611184349965
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[3];
      intArray0[0] = 3899;
      intArray0[1] = 0;
      intArray0[2] = 2;
      resultMatrixGnuPlot1.setColOrder(intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot1);
      int[][] intArray1 = new int[9][6];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      int[] intArray2 = new int[3];
      intArray2[0] = 0;
      intArray2[1] = 2;
      intArray2[2] = 3899;
      intArray1[2] = intArray2;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      intArray1[7] = intArray0;
      intArray1[8] = intArray0;
      resultMatrixCSV0.setSummary(intArray1, intArray1);
      resultMatrixCSV0.setRanking(intArray1);
      resultMatrixGnuPlot0.getEnumerateColNames();
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.4882169632413125
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_SignificanceWidth = 1;
      resultMatrixCSV0.getRevision();
      resultMatrixCSV0.setSignificance(12, 1, 682);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 2);
      resultMatrixLatex0.globalInfo();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(1, 498);
      resultMatrixCSV1.padString(" (", 1, false);
      resultMatrixLatex0.getStdDevWidth();
      resultMatrixCSV0.getShowAverage();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=4.07975953995987
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getOptions();
      Vector<String> vector0 = new Vector<String>();
      Vector<String> vector1 = new Vector<String>();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV0.setRowName((-1279), "v");
      resultMatrixCSV0.significanceWidthTipText();
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.8206535167626337
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(13, 13);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 0;
      resultMatrixCSV0.setRowOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(0, 2);
      resultMatrixLatex0.enumerateRowNamesTipText();
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex();
      resultMatrixLatex2.toStringMatrix();
      resultMatrixLatex0.getRowHidden(0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.2854131739004035
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(13, 13);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.RIGHT_PARENTHESES = "1[cRW:Y)ymb)";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText1);
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixGnuPlot0.setRowNameWidth(13);
      resultMatrixGnuPlot0.getStdDevPrec();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(2825, 1);
      resultMatrixGnuPlot1.getMean(0, 480);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.6288460194476464
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(13, 13);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.setStdDevWidth(1799);
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.RIGHT_PARENTHESES = "1[cRW:Y)ymb)";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText1);
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.getStdDevPrec();
      resultMatrixGnuPlot0.getMean(2, (-382));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.0769915251965854
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(495, 1);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "!u.Gi=X<";
      stringArray0[1] = "v";
      stringArray0[2] = "]";
      stringArray0[3] = "[";
      stringArray0[4] = "v";
      stringArray0[5] = "]";
      stringArray0[6] = "]";
      resultMatrixCSV0.m_ColNames = stringArray0;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot1.assign(resultMatrixCSV0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.717268107826398
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(13, 13);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText1);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setSignificance(0, 2, 0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(1, 13);
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(1, 0);
      resultMatrixLatex2.globalInfo();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(15, 2);
      resultMatrixCSV1.padString("", 0, false);
      resultMatrixLatex0.getSignificanceCount(110, 13);
      resultMatrixLatex1.getStdDevWidth();
      resultMatrixLatex0.rowNameWidthTipText();
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.3834149302587377
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(13, 13);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixCSV0.setRowOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(34, 2);
      resultMatrixLatex1.enumerateRowNamesTipText();
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex();
      resultMatrixLatex0.setMean(34, 1, 1.0);
      resultMatrixLatex1.getMeanWidth();
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.255530624147992
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDisplayName();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1);
      resultMatrixSignificance0.setEnumerateColNames(false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(12, 1);
      resultMatrixHTML0.trimString("*", 1);
      resultMatrixCSV0.getColName(2206);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.630616359295868
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(13, 13);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText1.LEFT_PARENTHESES = "1[cRW:Y)ymb)";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = false;
      booleanArray0[6] = true;
      resultMatrixLatex0.setMean(0, 114, 1);
      resultMatrixLatex0.getMeanWidth();
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.671305779742903
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(13, 13);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixSignificance0.stdDevPrecTipText();
      resultMatrixPlainText0.LEFT_PARENTHESES = "";
      resultMatrixLatex0.setMean(1, (-1350), 1539.9046341482438);
      resultMatrixLatex0.getMeanWidth();
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.259433338198442
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(13, 2);
      resultMatrixLatex0.getVisibleRowCount();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.printColNamesTipText();
      resultMatrixLatex1.getDefaultShowAverage();
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.867229840808697
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDisplayName();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1);
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 2;
      resultMatrixCSV0.setRowOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 153);
      resultMatrixLatex0.enumerateRowNamesTipText();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.4367053768009477
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.padString("##^ lF", (-478), false);
      resultMatrixCSV0.setRowName(0, ")");
      resultMatrixCSV0.significanceWidthTipText();
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixLatex0.getStdDevWidth();
  }

  /**
  //Test case number: 20
  /*Coverage entropy=4.080786698018953
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getOptions();
      Vector<String> vector0 = new Vector<String>();
      Vector<String> vector1 = new Vector<String>();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(39, 45);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.setRowName(2, " ");
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV0.getDefaultEnumerateRowNames();
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.6734666743846436
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(13, 13);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.enumerateColNamesTipText();
      resultMatrixCSV0.getColName(3);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.777357989853429
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getOptions();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 2);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.padString((String) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.3721722078172136
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.stdDevPrecTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringKey();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 2);
      resultMatrixHTML0.trimString("*", (-250));
      resultMatrixHTML0.getMeanWidth();
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.6165878615975804
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getRowName(1);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex1);
      resultMatrixPlainText0.toStringRanking();
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.3737066175275077
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(13, 13);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText1);
      resultMatrixCSV0.getCountWidth();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(38, 2);
      resultMatrixSignificance0.getDefaultColNameWidth();
      resultMatrixSignificance0.setMeanPrec((-60));
      resultMatrixSignificance1.toStringKey();
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.319414345873998
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.getPrintRowNames();
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.3429202387179577
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.toStringRanking();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance1.setStdDev((-1738), (-2303), 2);
      resultMatrixCSV0.showAverageTipText();
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.2990609011311527
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.clearHeader();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.setRowName(2, ")");
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.getDefaultEnumerateRowNames();
      resultMatrixCSV0.getMeanPrec();
      resultMatrixHTML0.toStringKey();
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.6759962171792218
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDisplayName();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText1);
      resultMatrixLatex0.getVisibleRowCount();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.printColNamesTipText();
      resultMatrixGnuPlot0.getDisplayCol(1);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.35879516728849
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_SignificanceWidth = 1;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.assign(resultMatrixCSV0);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixCSV0.getRevision();
      resultMatrixGnuPlot0.WIN_STRING = "v";
      resultMatrixCSV0.setSignificance(12, 1, 682);
      int[][] intArray0 = new int[5][9];
      resultMatrixCSV0.setSummary(intArray0, intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(46, 1);
      resultMatrixHTML0.getMeanWidth();
      resultMatrixGnuPlot0.getDisplayCol(0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.significanceWidthTipText();
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.503874185768537
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(13, 13);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText1.LEFT_PARENTHESES = "1[cRW:Y)ymb)";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText1);
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixSignificance0.stdDevPrecTipText();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.toStringKey();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(5, 278);
      resultMatrixHTML0.getMeanWidth();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getDisplayCol(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=4.2192849491379185
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setStdDevPrec((-2263));
      resultMatrixSignificance0.setMeanPrec(3);
      resultMatrixSignificance0.getSummaryTitle(3);
      resultMatrixSignificance0.rowNameWidthTipText();
      resultMatrixSignificance0.getStdDevWidth();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixSignificance0.m_StdDevWidth = 1;
      resultMatrixSignificance0.toString();
      resultMatrixLatex0.setColNameWidth((-660));
      resultMatrixLatex0.getRevision();
      resultMatrixLatex0.m_PrintColNames = true;
      resultMatrixLatex0.toStringKey();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDisplayName();
      resultMatrixSignificance0.meanPrecTipText();
      resultMatrixHTML0.getColName(532);
      resultMatrixLatex0.toString();
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.getRemoveFilterName();
      resultMatrixLatex0.toStringRanking();
      resultMatrixHTML0.getDefaultSignificanceWidth();
      resultMatrixHTML0.setStdDev(0, (-2263), Double.NaN);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.442271959759045
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV1.enumerateColNamesTipText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV1);
      resultMatrixHTML0.getMeanWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV1);
      resultMatrixGnuPlot0.getDisplayCol(4);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.setStdDev(0, (-11), 0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.631361984524191
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[1][4];
      int[] intArray1 = new int[1];
      intArray1[0] = 1;
      intArray0[0] = intArray1;
      resultMatrixLatex0.m_Wins = intArray0;
      resultMatrixLatex0.getDefaultEnumerateRowNames();
      resultMatrixLatex0.m_ShowAverage = false;
      resultMatrixLatex0.m_CountWidth = 1;
      resultMatrixLatex0.WIN_STRING = "";
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "$\bullet$";
      stringArray0[2] = "$\bullet$";
      resultMatrixLatex0.clearHeader();
      resultMatrixLatex0.TIE_STRING = "$\bullet$";
      stringArray0[3] = "$\bullet$";
      stringArray0[4] = "$\bullet$";
      stringArray0[5] = "(";
      stringArray0[6] = ")";
      stringArray0[7] = "$\bullet$";
      stringArray0[8] = ")";
      resultMatrixLatex0.m_RowNames = stringArray0;
      resultMatrixLatex0.getDisplayRow((-59));
      resultMatrixLatex0.colNameWidthTipText();
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.getColNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.globalInfo();
  }

  /**
  //Test case number: 35
  /*Coverage entropy=4.261146369590158
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      Vector<String> vector0 = new Vector<String>();
      Vector<String> vector1 = new Vector<String>();
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV0.getRevision();
      resultMatrixCSV0.getColName(0);
      resultMatrixCSV0.getColHidden(49);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.672029733962404
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = (-524);
      intArray0[3] = 0;
      resultMatrixCSV1.setColOrder(intArray0);
      resultMatrixCSV1.enumerateColNamesTipText();
      resultMatrixCSV0.getColName(0);
      resultMatrixCSV1.printRowNamesTipText();
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.382879092589349
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDisplayName();
      int[] intArray0 = new int[1];
      resultMatrixCSV0.getSummaryTitle(2);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColOrder(intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setColOrder(intArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_MeanPrec = 0;
      resultMatrixSignificance0.toStringKey();
      resultMatrixHTML0.getRowCount();
  }

  /**
  //Test case number: 38
  /*Coverage entropy=4.0497300839613235
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getPrintColNames();
      resultMatrixCSV0.getOptions();
      Vector<String> vector0 = new Vector<String>();
      Vector<String> vector1 = new Vector<String>();
      resultMatrixCSV0.getEnumerateRowNames();
      int[] intArray0 = new int[7];
      intArray0[0] = 111;
      intArray0[1] = (-982);
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[4] = 0;
      intArray0[5] = 2;
      intArray0[6] = 1;
      resultMatrixCSV0.m_RankingLosses = intArray0;
      int[][] intArray1 = new int[1][4];
      int[] intArray2 = new int[0];
      intArray1[0] = intArray2;
      resultMatrixCSV0.setRanking(intArray1);
      resultMatrixCSV0.removeFilterNameTipText();
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.4934496554484733
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringKey();
      resultMatrixGnuPlot0.setStdDev(278, 296, (-1.0));
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.832270847883178
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getOptions();
      Vector<String> vector0 = new Vector<String>();
      Vector<String> vector1 = new Vector<String>();
      int[][] intArray0 = new int[1][4];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      resultMatrixCSV0.setRanking(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.getRevision();
      resultMatrixGnuPlot0.getDefaultMeanWidth();
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.239938556534503
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex0.getStdDevWidth();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=4.374079838067665
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.LOSS_STRING = "CSV";
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixCSV0.LOSS_STRING = "CSV";
      resultMatrixCSV0.setRowOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(297, 2);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(1, 4);
      resultMatrixCSV2.headerKeys();
      resultMatrixLatex0.getStdDev(1, 4);
      String[] stringArray0 = new String[4];
      stringArray0[0] = " ";
      stringArray0[1] = "]";
      stringArray0[2] = "]";
      stringArray0[3] = ")";
      ResultMatrixHTML.main(stringArray0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.541665294866279
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.clearHeader();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(1, 44);
      resultMatrixHTML0.trimString("-summary data not set-", 2);
      resultMatrixHTML0.getMeanWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.getDisplayCol(2);
      ResultMatrixSignificance resultMatrixSignificance1 = null;
      try {
        resultMatrixSignificance1 = new ResultMatrixSignificance(0, (-3753));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.8310280395869682
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(13, 13);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      resultMatrixLatex0.getDisplayName();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(50, 43);
      resultMatrixCSV1.setCount(2330, 2);
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(1, 2);
      resultMatrixCSV2.enumerateColNamesTipText();
      resultMatrixCSV0.getColName((-1667));
      resultMatrixCSV0.getDefaultShowStdDev();
      resultMatrixCSV0.getDefaultEnumerateRowNames();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.824134799113447
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.LEFT_PARENTHESES = "";
      resultMatrixSignificance0.setStdDevWidth(1);
      int int0 = 1;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(58, 50);
      resultMatrixLatex0.getDisplayName();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      // Undeclared exception!
      resultMatrixCSV0.toArray();
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.1273386823218945
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV1.enumerateColNamesTipText();
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(2, 2);
      int int0 = 495;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.padString((String) null, 0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.6332317724902357
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColOrder((int[]) null);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringKey();
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.6750235273176433
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setShowAverage(false);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixGnuPlot0.stdDevWidthTipText();
  }

  /**
  //Test case number: 49
  /*Coverage entropy=4.097836755314391
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.getPrintColNames();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixSignificance0.getDefaultPrintColNames();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      Vector<String> vector0 = new Vector<String>(1);
      Vector<String> vector1 = new Vector<String>();
      vector1.add("[");
      resultMatrixCSV1.setRowHidden((-745), false);
      resultMatrixCSV1.getEnumerateRowNames();
      resultMatrixSignificance0.getDisplayName();
      String[][] stringArray1 = new String[3][6];
      stringArray1[0] = stringArray0;
      stringArray1[1] = stringArray0;
      stringArray1[2] = stringArray0;
      resultMatrixCSV1.getColSize(stringArray1, 2336, false, false);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.716899540283218
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(13, 13);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixSignificance0.stdDevPrecTipText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML0.trimString(" ", 2);
      resultMatrixHTML0.getMeanWidth();
      resultMatrixGnuPlot0.getDisplayCol((-570));
      resultMatrixSignificance0.setStdDev((-1), 2, 1);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=4.163492307619033
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.rowNameWidthTipText();
      resultMatrixLatex0.getDisplayCol(20);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "(";
      stringArray0[1] = " ";
      stringArray0[2] = "$\bullet$";
      ResultMatrixSignificance.main(stringArray0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.3477835873415405
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.setColOrder(intArray0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.295796927980607
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.getSummaryTitle(26);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.setSignificance(1, 26, 1);
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex((-1182), 1);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.9644863656060942
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixHTML0.globalInfo();
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.6814579250476416
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringMatrix();
      int[] intArray0 = new int[1];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColOrder(intArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 2);
      resultMatrixSignificance0.stdDevPrecTipText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 2);
      resultMatrixHTML0.trimString("", 141);
      resultMatrixCSV0.getColName(1);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.3546766390031557
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.trimString("", 290);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDisplayName();
      resultMatrixPlainText0.getDefaultEnumerateColNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.doubleToString(175.708, 2);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixLatex0.m_MeanWidth = (-649);
      resultMatrixLatex0.setShowStdDev(false);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      int[][] intArray0 = new int[2][8];
      int[] intArray1 = new int[4];
      intArray1[0] = 1;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = 1;
      intArray2[1] = 2;
      intArray2[2] = 1;
      intArray0[1] = intArray2;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.5845489468648077
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      int int0 = ResultMatrix.SIGNIFICANCE_WIN;
      resultMatrixSignificance0.setRowOrder((int[]) null);
      resultMatrixCSV0.enumerateColNamesTipText();
      resultMatrixCSV0.getColName(1);
      resultMatrixSignificance0.isSignificance(2);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.2888024150737896
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(0, 2);
      resultMatrixCSV1.getRevision();
      resultMatrixCSV1.setStdDevWidth(1);
      resultMatrixCSV0.setMeanWidth(70);
      resultMatrixCSV1.toStringKey();
  }

  /**
  //Test case number: 59
  /*Coverage entropy=4.054430630296753
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex0.enumerateRowNamesTipText();
      resultMatrixLatex1.m_StdDevPrec = 1;
      resultMatrixLatex1.m_RemoveFilterName = true;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toString();
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.setColHidden(0, false);
      resultMatrixCSV0.getDefaultPrintRowNames();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "$\bullet$";
      stringArray0[1] = "-row-name-width";
      stringArray0[2] = ")";
      stringArray0[3] = "Whether to enumerate the row names (prefixing them with '(x)', with 'x' being the index).";
      stringArray0[4] = "$circ$";
      stringArray0[5] = "v";
      stringArray0[6] = "Whether to enumerate the row names (prefixing them with '(x)', with 'x' being the index).";
      stringArray0[7] = "[";
      stringArray0[8] = "(";
      try { 
        resultMatrixLatex0.setOptions(stringArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \")\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=4.189506410246532
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(13, 13);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText1.LEFT_PARENTHESES = "1[cRW:Y)ymb)";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText1);
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[0] = false;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.toArray();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(1, 997);
      resultMatrixCSV1.setColHidden(5897, true);
      resultMatrixCSV0.getDefaultPrintRowNames();
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV();
      resultMatrixCSV2.getDefaultEnumerateColNames();
      resultMatrixCSV2.headerKeys();
      resultMatrixLatex0.getStdDev(0, (-550));
  }

  /**
  //Test case number: 61
  /*Coverage entropy=4.025466070233337
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.toString();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.setEnumerateColNames(true);
      assertTrue(resultMatrixCSV1.getEnumerateColNames());
      
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.headerKeys();
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      
      double double0 = resultMatrixLatex0.getStdDev((-1), 356);
      assertEquals(0.0, double0, 0.01);
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=4.135048088660397
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      String string0 = resultMatrixSignificance0.getRowName((-3062));
      assertNull(string0);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.toStringRanking();
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(0, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(40, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=4.261147155202092
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(13, 13);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText1.LEFT_PARENTHESES = "1[cRW:Y)ymb)";
      Vector<String> vector0 = new Vector<String>();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "(";
      stringArray0[1] = ")";
      stringArray0[2] = " ";
      stringArray0[3] = ")";
      stringArray0[4] = "v";
      stringArray0[5] = "/";
      stringArray0[6] = "";
      stringArray0[7] = "*";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getCountWidth();
      resultMatrixCSV0.listOptions();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      resultMatrixSignificance0.getDefaultColNameWidth();
      resultMatrixSignificance0.setMeanPrec(173);
      assertEquals(173, resultMatrixSignificance0.getMeanPrec());
      
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.toStringKey();
      resultMatrixGnuPlot0.countWidthTipText();
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.195256956273215
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(13, 13);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText1.LEFT_PARENTHESES = "1[cRW:Y)ymb)";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText1);
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = false;
      booleanArray0[6] = true;
      resultMatrixLatex0.getRevision();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex1.getSignificance(2, 0);
      assertEquals(5, resultMatrixGnuPlot0.getCountWidth());
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(13, resultMatrixPlainText0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(33, 0);
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixHTML0.getDefaultPrintColNames();
      assertEquals(33, resultMatrixHTML0.getVisibleColCount());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.4728662666421304
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText1.setMeanWidth(2);
      assertEquals(2, resultMatrixPlainText1.getMeanWidth());
      
      int[] intArray0 = new int[6];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 2;
      intArray0[4] = 0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText(resultMatrixCSV0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixPlainText2);
      resultMatrixCSV1.setSignificance(1026, 0, 0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1571);
      resultMatrixLatex0.globalInfo();
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(resultMatrixCSV0);
      int[][] intArray1 = new int[1][5];
      int[] intArray2 = new int[4];
      intArray2[0] = 1;
      intArray2[1] = 2;
      intArray2[2] = 1;
      intArray2[3] = 0;
      intArray1[0] = intArray2;
      resultMatrixCSV2.setSummary(intArray1, intArray1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRowNameWidth(0);
      resultMatrixGnuPlot0.getStdDevPrec();
      resultMatrixGnuPlot0.getMean(1, 0);
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.488882958485498
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      String string0 = resultMatrixSignificance0.doubleToString((-917.077599197), 4);
      assertEquals("-917.0776", string0);
      
      resultMatrixSignificance0.getDisplayName();
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      
      resultMatrixHTML0.setRowName(69, "");
      int int0 = resultMatrixHTML0.getColSize((String[][]) null, (-25), false, true);
      assertEquals(0, int0);
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=4.082788473310681
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      Vector<String> vector0 = new Vector<String>();
      Vector<String> vector1 = new Vector<String>();
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixCSV0.getDefaultEnumerateColNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.toStringKey();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getColSize((String[][]) null, 1, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.356625243903165
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "[";
      stringArray0[1] = " ";
      stringArray0[2] = "v";
      stringArray0[3] = "";
      resultMatrixCSV0.m_RowNames = stringArray0;
      resultMatrixCSV0.getDisplayName();
      int[] intArray0 = new int[1];
      String string0 = resultMatrixCSV0.getSummaryTitle(26);
      assertEquals("a", string0);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColOrder(intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setMeanPrec(2);
      String string1 = resultMatrixSignificance0.toStringKey();
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals("Key:\n(1) col0\n", string1);
      
      String[][] stringArray1 = new String[9][0];
      stringArray1[0] = stringArray0;
      stringArray1[1] = resultMatrixCSV0.m_RowNames;
      stringArray1[2] = resultMatrixCSV0.m_RowNames;
      stringArray1[3] = stringArray0;
      stringArray1[4] = resultMatrixCSV0.m_RowNames;
      stringArray1[5] = stringArray0;
      stringArray1[6] = stringArray0;
      stringArray1[7] = resultMatrixCSV0.m_RowNames;
      stringArray1[8] = resultMatrixCSV0.m_RowNames;
      int int0 = resultMatrixCSV0.getColSize(stringArray1, 2, true, true);
      assertEquals(1, int0);
      assertFalse(resultMatrixCSV0.getDefaultShowAverage());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.239535678836661
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.getRevision();
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      assertEquals(0, resultMatrixLatex1.getRowNameWidth());
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(26, 1);
      resultMatrixLatex2.setPrintRowNames(true);
      resultMatrixLatex2.getSignificance(3094, 3405);
      boolean boolean0 = resultMatrixLatex2.isMean(1);
      assertEquals(26, resultMatrixLatex2.getVisibleColCount());
      assertTrue(boolean0);
      assertFalse(resultMatrixLatex2.getDefaultShowStdDev());
      assertTrue(resultMatrixLatex2.getPrintRowNames());
      assertEquals(1, resultMatrixLatex2.getVisibleRowCount());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=4.109677217855144
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.setColHidden((-2309), true);
      int[][] intArray0 = new int[2][9];
      int[] intArray1 = new int[2];
      intArray1[0] = 1239;
      resultMatrixSignificance0.clearRanking();
      intArray1[1] = 2;
      intArray0[0] = intArray1;
      resultMatrixSignificance0.setEnumerateColNames(true);
      int[] intArray2 = new int[2];
      resultMatrixSignificance0.getRowName(1239);
      intArray2[0] = 0;
      resultMatrixSignificance0.m_Significance = intArray0;
      resultMatrixPlainText0.setSummary(intArray0, resultMatrixSignificance0.m_Significance);
      resultMatrixSignificance0.addHeader("(", "{pVs_6");
      intArray2[1] = 1;
      intArray0[1] = intArray2;
      resultMatrixSignificance0.setRanking(intArray0);
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.headerKeys();
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      
      resultMatrixPlainText0.significanceWidthTipText();
      resultMatrixPlainText0.getDefaultShowStdDev();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.toStringRanking();
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(5, resultMatrixGnuPlot0.getCountWidth());
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      
      resultMatrixPlainText0.getColCount();
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.817426663404938
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 2);
      int[] intArray0 = new int[8];
      intArray0[0] = 47;
      intArray0[1] = 1;
      intArray0[2] = 2;
      intArray0[3] = 0;
      intArray0[4] = 1;
      intArray0[5] = 2;
      intArray0[6] = 1;
      intArray0[7] = 2;
      resultMatrixCSV0.setRowOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(0, 2);
      resultMatrixLatex1.enumerateRowNamesTipText();
      resultMatrixCSV0.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex();
      assertEquals(1, resultMatrixLatex2.getVisibleColCount());
      
      String string0 = resultMatrixLatex2.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      resultMatrixLatex1.getDefaultPrintColNames();
      assertEquals(2, resultMatrixLatex1.getVisibleRowCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.7552973387996893
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setSignificanceWidth(2783);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.toStringMatrix();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex1);
      String string0 = resultMatrixSignificance0.toStringKey();
      assertEquals(2783, resultMatrixLatex0.getSignificanceWidth());
      assertEquals("Key:\n(1) col0\n", string0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.534434659222463
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.assign(resultMatrixLatex0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixLatex0.getDefaultEnumerateColNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 21);
      resultMatrixGnuPlot0.globalInfo();
      resultMatrixPlainText0.setSignificanceWidth((-1142));
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      resultMatrixGnuPlot0.getRowNameWidth();
      resultMatrixLatex0.stdDevPrecTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance(3, (-665));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.489961496669003
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.m_RankingDiff = intArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      resultMatrixGnuPlot0.WIN_STRING = "*";
      resultMatrixGnuPlot0.significanceWidthTipText();
      resultMatrixGnuPlot0.setEnumerateRowNames(false);
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setSignificance(0, 1, 26);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(662, 0);
      resultMatrixLatex0.globalInfo();
      int int0 = resultMatrixLatex0.getSignificanceCount((-1766), 53);
      assertEquals(0, int0);
      assertEquals(662, resultMatrixLatex0.getVisibleColCount());
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.921912264395848
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int int0 = resultMatrixLatex0.getSignificanceCount(0, 0);
      assertEquals(0, int0);
      
      resultMatrixLatex0.getStdDevWidth();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      String string0 = resultMatrixGnuPlot0.toStringKey();
      assertEquals("Key:\n[1] col0\n", string0);
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixLatex0.m_HeaderKeys = vector0;
      String string1 = resultMatrixLatex0.padString("", 1);
      assertEquals(" ", string1);
      
      resultMatrixLatex0.getStdDev(95, 1);
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=4.237612871035608
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.doubleToString(3420.22734, 1302);
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      Vector<String> vector0 = new Vector<String>();
      Vector<String> vector1 = new Vector<String>();
      int[][] intArray0 = new int[1][4];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      resultMatrixCSV0.setRanking(intArray0);
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      
      ResultMatrixHTML.main(stringArray0);
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(18, stringArray0.length);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.7417473431585586
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = new String[0];
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixLatex0.toStringSummary();
      assertFalse(resultMatrixLatex0.getPrintRowNames());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.2126753929435434
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.assign(resultMatrixCSV0);
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixCSV0.getRevision();
      resultMatrixGnuPlot0.WIN_STRING = "v";
      int[][] intArray0 = new int[5][9];
      resultMatrixCSV0.setSummary(intArray0, intArray0);
      resultMatrixGnuPlot0.setRowNameWidth((-2));
      double double0 = resultMatrixGnuPlot0.getMean(0, 0);
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.4925642225845115
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_SignificanceWidth = 1;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.assign(resultMatrixCSV0);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixCSV0.getRevision();
      resultMatrixGnuPlot0.WIN_STRING = "v";
      resultMatrixCSV0.setSignificance(12, 1, 682);
      int[][] intArray0 = new int[5][9];
      resultMatrixCSV0.setSummary(intArray0, intArray0);
      resultMatrixGnuPlot0.setRowNameWidth((-2));
      int int0 = resultMatrixGnuPlot0.getStdDevPrec();
      assertEquals(2, int0);
      
      resultMatrixGnuPlot0.getMean(0, 1);
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(1, resultMatrixGnuPlot0.getSignificanceWidth());
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.5394719326729165
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      resultMatrixGnuPlot0.getMean((-3520), 2);
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.5914179882487653
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringMatrix();
      Vector<String> vector0 = new Vector<String>();
      Vector<String> vector1 = new Vector<String>();
      int[][] intArray0 = new int[1][9];
      int[] intArray1 = new int[3];
      intArray1[0] = 1;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.assign((ResultMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.7603586694930735
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_SignificanceWidth = 1;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.toStringRanking();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & [1]\\\\\n\\hline\nrow0                      &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      resultMatrixLatex0.getCount(3857);
      int int1 = resultMatrixLatex0.getVisibleRowCount();
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
      assertEquals(1, int1);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.283575532916533
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDisplayName();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixCSV0.setPrintRowNames(true);
      resultMatrixSignificance0.getDefaultColNameWidth();
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      
      resultMatrixSignificance0.m_CountWidth = (-997);
      resultMatrixSignificance0.setMeanPrec(2);
      String string0 = resultMatrixSignificance0.toStringKey();
      assertEquals("Key:\n[1] col0\n", string0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=4.235559913642016
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDisplayName();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1);
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      resultMatrixSignificance0.getRowName(0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setOptions(stringArray0);
      assertEquals(0, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=4.054478496272022
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex0.enumerateRowNamesTipText();
      resultMatrixLatex1.m_RemoveFilterName = true;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.toString();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.setColHidden(0, false);
      resultMatrixCSV0.getDefaultPrintRowNames();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex1);
      String string1 = resultMatrixSignificance0.toStringKey();
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals("Key:\n(1) col0\n", string1);
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.2842228217416776
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = new String[1];
      try { 
        resultMatrixLatex0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.2331278603600317
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDisplayName();
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixCSV0.LOSS_STRING = "&X)5f(*S";
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.getDefaultCountWidth();
      assertTrue(resultMatrixCSV0.getDefaultPrintRowNames());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
      assertFalse(resultMatrixCSV0.getShowAverage());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.844227467995124
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex0.enumerateRowNamesTipText();
      resultMatrixLatex1.m_StdDevPrec = 1;
      resultMatrixLatex1.m_RemoveFilterName = true;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex1);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 850);
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.getSignificance(3, 0);
      // Undeclared exception!
      resultMatrixLatex2.toStringMatrix();
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.2994553198148298
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_StdDevWidth = 1424;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1);
      resultMatrixSignificance0.getRowName(0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(1424, resultMatrixPlainText0.getStdDevWidth());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(1815, 2);
      int[] intArray0 = new int[0];
      resultMatrixCSV1.setRowOrder(intArray0);
      assertEquals(2, resultMatrixCSV1.getVisibleRowCount());
      assertFalse(resultMatrixCSV1.getRemoveFilterName());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.2371066887588325
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      String string0 = resultMatrixCSV1.enumerateColNamesTipText();
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      assertFalse(resultMatrixCSV1.getEnumerateRowNames());
      assertEquals("Whether to enumerate the column names (prefixing them with '(x)', with 'x' being the index).", string0);
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertTrue(resultMatrixCSV1.getEnumerateColNames());
      assertTrue(resultMatrixCSV1.getPrintRowNames());
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
      
      String string1 = resultMatrixCSV0.getColName(0);
      assertEquals("[1]", string1);
      
      resultMatrixCSV0.toStringRanking();
      assertEquals(1, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.8650856528393938
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int int0 = resultMatrixLatex0.getSignificanceCount(0, 0);
      int int1 = resultMatrixLatex0.getStdDevWidth();
      assertTrue(int1 == int0);
      
      resultMatrixCSV0.getDefaultEnumerateColNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.addHeader(" ", "v");
      resultMatrixGnuPlot0.toStringKey();
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.8073146988582587
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setPrintRowNames(false);
      String[] stringArray0 = new String[0];
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixLatex0.doubleToString(1516.52096338, 75);
      resultMatrixLatex0.enumerateRowNamesTipText();
      assertFalse(resultMatrixLatex0.getPrintRowNames());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.8977960211179363
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.LOSS_STRING = "CSV";
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixCSV0.LOSS_STRING = "CSV";
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.getSummaryTitle(3);
      resultMatrixCSV0.m_RankingWins = intArray0;
      int int0 = 0;
      resultMatrixCSV0.setEnumerateColNames(false);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.522146720366234
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      String string0 = resultMatrixSignificance0.getRowName(2);
      assertNull(string0);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.toStringRanking();
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertTrue(resultMatrixPlainText0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(1, resultMatrixPlainText0.getColCount());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=4.072572176690631
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(34, 2);
      resultMatrixLatex0.enumerateRowNamesTipText();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringMatrix();
      assertEquals(34, resultMatrixLatex0.getVisibleColCount());
      
      resultMatrixLatex1.getRowHidden(2);
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.588695035517939
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDisplayName();
      int[] intArray0 = new int[1];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColOrder(intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.getRowHidden((-1955));
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(40, resultMatrixLatex0.getRowNameWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=4.0268586254770495
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.LOSS_STRING = "CSV";
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixCSV0.LOSS_STRING = "CSV";
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.getSummaryTitle(3);
      resultMatrixCSV0.m_RankingWins = intArray0;
      resultMatrixCSV0.setEnumerateColNames(false);
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.setColHidden(0, true);
      resultMatrixCSV0.getDefaultPrintRowNames();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.getDefaultMeanPrec();
      resultMatrixCSV0.headerKeys();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "]";
      stringArray0[1] = ",";
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixCSV0.getVisibleColCount();
      ResultMatrixGnuPlot.main(stringArray0);
      assertEquals(2, stringArray0.length);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=4.068119876121495
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_CountWidth = 295;
      String[] stringArray0 = new String[0];
      resultMatrixLatex0.setOptions(stringArray0);
      ResultMatrixLatex.main(stringArray0);
      resultMatrixLatex0.getShowStdDev();
      assertEquals(0, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.994846431898373
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.setCount(0, 0);
      resultMatrixSignificance0.m_CountWidth = 458;
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      resultMatrixHTML0.isSignificance((-1321));
      assertFalse(resultMatrixHTML0.getShowAverage());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.716382177368389
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      Vector<String> vector0 = new Vector<String>();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.assign(resultMatrixCSV0);
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      String string0 = resultMatrixCSV1.getColName((-367));
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
      assertFalse(resultMatrixCSV1.getEnumerateRowNames());
      assertTrue(resultMatrixCSV1.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertTrue(resultMatrixCSV1.getPrintRowNames());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertNull(string0);
      
      resultMatrixCSV0.getColOrder();
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(1, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.6301059512629927
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      String[][] stringArray0 = resultMatrixCSV0.toArray();
      assertEquals(3, stringArray0.length);
      
      resultMatrixCSV0.LOSS_STRING = "[";
      resultMatrixCSV0.getDefaultPrintRowNames();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.getDefaultMeanPrec();
      resultMatrixCSV0.headerKeys();
      resultMatrixCSV0.getColNameWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.getRevision();
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.96420609315104
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getSignificanceCount((-1068), 0);
      resultMatrixLatex0.getStdDevWidth();
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      
      resultMatrixCSV0.getDefaultEnumerateColNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      String string0 = resultMatrixGnuPlot0.toStringKey();
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals("Key:\n[1] col0\n", string0);
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.2372798489319927
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV1.enumerateColNamesTipText();
      String string0 = resultMatrixCSV1.getColName(0);
      assertEquals("[1]", string0);
      assertNotNull(string0);
      
      resultMatrixCSV1.getDefaultEnumerateRowNames();
      assertTrue(resultMatrixCSV1.getPrintRowNames());
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertEquals(1, resultMatrixCSV1.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.422773922599897
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDisplayName();
      int[] intArray0 = new int[1];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixCSV0.getSummaryTitle((-1402));
      assertEquals("I", string0);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColOrder(intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      String string1 = resultMatrixSignificance0.toStringKey();
      assertEquals("Key:\n(1) col0\n", string1);
      
      resultMatrixGnuPlot0.getRevision();
      resultMatrixHTML0.getSignificanceWidth();
      assertEquals(0, resultMatrixHTML0.getDefaultStdDevWidth());
      assertEquals(1, resultMatrixHTML0.getRowCount());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.985080903997647
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_SignificanceWidth = 1;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.assign(resultMatrixCSV0);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"[1]\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      resultMatrixGnuPlot0.WIN_STRING = "v";
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      
      resultMatrixCSV0.setSignificance(12, 1, 682);
      resultMatrixCSV0.setSignificance((-1), (-442), 1);
      resultMatrixCSV0.getRevision();
      assertFalse(resultMatrixCSV0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=4.110848708491977
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.setCount((-8), (-8));
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      ResultMatrixSignificance.main((String[]) null);
      resultMatrixHTML0.isSignificance((-1321));
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertFalse(resultMatrixHTML0.getShowStdDev());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=4.13514450909252
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(48, 2);
      resultMatrixPlainText0.setColName((-3492), "kbkPA.Bq#O-b");
      assertEquals(2, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(48, resultMatrixPlainText0.getVisibleColCount());
      
      ResultMatrixPlainText.main((String[]) null);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getCountWidth();
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.setCount(2, 0);
      resultMatrixCSV0.enumerateColNamesTipText();
      resultMatrixCSV0.getColName(9);
      resultMatrixCSV0.m_MeanWidth = 864;
      assertFalse(resultMatrixCSV0.getPrintColNames());
      
      resultMatrixPlainText0.setStdDev(2, 864, 2265.28);
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=4.188810230799528
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.WIN_STRING = "3";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.setCount(1, (-586.961296));
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertTrue(resultMatrixHTML0.getPrintColNames());
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "3";
      stringArray0[2] = "*";
      stringArray0[3] = "3";
      stringArray0[4] = "3";
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixGnuPlot0.setMean((-647), 0, 1);
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.2838111874371894
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1);
      resultMatrixSignificance0.getRowName(0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.toStringRanking();
      resultMatrixPlainText0.m_ColNameWidth = 10;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.trimString((String) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.1699021172713064
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      // Undeclared exception!
      resultMatrixSignificance0.setSize(692, 414);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.5681782945332445
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      String string0 = resultMatrixCSV0.enumerateColNamesTipText();
      assertEquals("Whether to enumerate the column names (prefixing them with '(x)', with 'x' being the index).", string0);
      
      String string1 = resultMatrixCSV1.getColName(2);
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
      assertFalse(resultMatrixCSV1.getEnumerateRowNames());
      assertTrue(resultMatrixCSV1.getPrintRowNames());
      assertEquals(1, resultMatrixCSV1.getVisibleColCount());
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertTrue(resultMatrixCSV1.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertEquals(0, resultMatrixCSV1.getDefaultColNameWidth());
      assertNull(string1);
      assertFalse(resultMatrixCSV1.getDefaultRemoveFilterName());
      assertEquals(1, resultMatrixCSV1.getRowCount());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.2655464687186537
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setCountWidth(2);
      resultMatrixCSV0.getDisplayName();
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.listOptions();
      assertEquals(2, resultMatrixCSV0.getCountWidth());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.7812784724849156
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.LOSS_STRING = "CSV";
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixCSV0.LOSS_STRING = "CSV";
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.getSummaryTitle(3);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColOrder(intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.setMeanPrec((-401));
      resultMatrixGnuPlot0.clear();
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getSignificance(0, (-1992));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.9570453696357974
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.clear();
      resultMatrixSignificance0.m_StdDevWidth = 624;
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.m_RankingDiff = intArray0;
      intArray0[0] = 2;
      resultMatrixSignificance0.m_RankingWins = intArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=3.93691469340238
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setSize(0, 692);
      resultMatrixSignificance0.m_StdDevPrec = 0;
      resultMatrixSignificance0.m_ShowStdDev = false;
      resultMatrixSignificance0.m_RowNameWidth = 0;
      resultMatrixSignificance0.m_ColNameWidth = 0;
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixSignificance0.getRowNameWidth();
      resultMatrixSignificance0.showStdDevTipText();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "*";
      ResultMatrixSignificance.main(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.684696497550259
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateRowNames(false);
      resultMatrixCSV0.getPrintColNames();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      Vector<String> vector0 = new Vector<String>();
      Vector<String> vector1 = new Vector<String>();
      resultMatrixCSV0.getEnumerateRowNames();
      int[][] intArray0 = new int[1][4];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.5869102219533557
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[1];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColOrder(intArray0);
      int[][] intArray1 = new int[1][7];
      intArray1[0] = intArray0;
      resultMatrixCSV0.setSummary(intArray1, intArray1);
      resultMatrixGnuPlot0.setRowNameWidth((-2));
      int int0 = resultMatrixGnuPlot0.getStdDevPrec();
      assertEquals(2, int0);
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      assertEquals(0, resultMatrixGnuPlot1.getSignificanceWidth());
      assertEquals(0, resultMatrixGnuPlot1.getStdDevWidth());
      assertEquals(25, resultMatrixGnuPlot1.getRowNameWidth());
      assertTrue(resultMatrixGnuPlot1.getPrintRowNames());
      assertEquals(2, resultMatrixGnuPlot1.getMeanPrec());
      assertEquals(1, resultMatrixGnuPlot1.getVisibleRowCount());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.736179955665673
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.getRevision();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixLatex0.clearSummary();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.toStringKey();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=3.5444767297062354
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1088, 2);
      resultMatrixPlainText0.setColName(1088, " ;$t{D");
      String string0 = resultMatrixPlainText0.padString("\tThe maximum width for the column names (0 = optimal).\n\t(default: ", 0, true);
      assertEquals("\tThe maximum width for the column names (0 = optimal).\n\t(default: ", string0);
      
      resultMatrixPlainText0.toStringKey();
      assertEquals(1088, resultMatrixPlainText0.getColCount());
      assertEquals(2, resultMatrixPlainText0.getRowCount());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=3.58676894908481
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 0);
      resultMatrixPlainText0.setColName(2, "i%Edpe2QjB'vQ/Fi?09");
      String string0 = resultMatrixPlainText0.padString("3BAqM/5T*u", 1, false);
      assertEquals("3", string0);
      
      String string1 = resultMatrixPlainText0.toStringKey();
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals("Key:\n(1) col0\n", string1);
      assertEquals(0, resultMatrixPlainText0.getRowCount());
      assertFalse(resultMatrixPlainText0.getShowAverage());
      assertFalse(resultMatrixPlainText0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=3.287909657569047
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixCSV0.setCount(2354, (-1090.7259041));
      resultMatrixGnuPlot0.setStdDevWidth(467);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      assertEquals(467, resultMatrixGnuPlot0.getStdDevWidth());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.4458870965208064
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixSignificance0.stdDevPrecTipText();
      resultMatrixCSV0.getColName(1224);
      resultMatrixSignificance0.removeFilterName("");
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(114, 2076);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=3.6746524698037284
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV1.enumerateColNamesTipText();
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertTrue(resultMatrixCSV1.getPrintRowNames());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertTrue(resultMatrixCSV1.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultColNameWidth();
      resultMatrixSignificance0.setMeanPrec((-728));
      String string0 = resultMatrixSignificance0.toStringKey();
      assertEquals(0, resultMatrixSignificance0.getDefaultMeanWidth());
      assertEquals("Key:\n(1) col0\n", string0);
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=3.354617693229508
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.m_RankingDiff = intArray0;
      intArray0[0] = 2;
      resultMatrixSignificance0.m_RankingWins = intArray0;
      resultMatrixSignificance0.m_PrintRowNames = false;
      Vector<String> vector0 = new Vector<String>(14);
      Vector<String> vector1 = new Vector<String>();
      vector0.add(")");
      String string0 = resultMatrixSignificance0.padString("-mean-prec", 14, true);
      assertEquals("    -mean-prec", string0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setRowHidden(2, true);
      resultMatrixCSV0.getEnumerateRowNames();
      assertEquals(0, resultMatrixCSV0.getDefaultCountWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.755445923802504
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      
      resultMatrixLatex0.enumerateRowNamesTipText();
      resultMatrixLatex1.m_StdDevPrec = 1;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.setColHidden(2, true);
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.headerKeys();
      resultMatrixLatex0.getStdDev(1, 12);
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.5402489334499174
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      int[] intArray0 = new int[3];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray1 = new int[2][7];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setRanking(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.4882695869868265
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setStdDevWidth(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      assertTrue(resultMatrixGnuPlot1.getPrintColNames());
      assertEquals(0, resultMatrixGnuPlot1.getSignificanceWidth());
      assertEquals(0, resultMatrixGnuPlot1.getStdDevWidth());
      assertTrue(resultMatrixGnuPlot1.getPrintRowNames());
      assertEquals(2, resultMatrixGnuPlot1.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot1.getStdDevPrec());
      assertEquals(50, resultMatrixGnuPlot1.getRowNameWidth());
      
      resultMatrixGnuPlot0.colNameWidthTipText();
      resultMatrixGnuPlot0.globalInfo();
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.7975054339363
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.enumerateRowNamesTipText();
      resultMatrixLatex0.getSignificance(1088, 1088);
      resultMatrixLatex0.toStringMatrix();
      resultMatrixSignificance0.toStringKey();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.doubleToString((-4773.8177689), (-2562));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=3.0911424914301424
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.getDisplayName();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getColSize((String[][]) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=3.4422953271294583
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.setMeanWidth(2);
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      resultMatrixGnuPlot0.significanceWidthTipText();
      resultMatrixGnuPlot0.setEnumerateRowNames(true);
      assertEquals(2, resultMatrixGnuPlot0.getMeanWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 12);
      resultMatrixCSV0.setSignificance(3383, 0, 1);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(0, 12);
      resultMatrixLatex0.globalInfo();
      resultMatrixCSV0.padString("$circ$", 12, false);
      resultMatrixLatex1.getSignificanceCount((-1619), 626);
      resultMatrixLatex1.getStdDevWidth();
      String[][] stringArray0 = new String[1][7];
      String[] stringArray1 = new String[5];
      stringArray1[0] = "$\bullet$";
      stringArray1[1] = "fH=0c|-Fi";
      stringArray1[2] = ")";
      stringArray1[3] = "(";
      stringArray1[4] = "$\bullet$";
      stringArray0[0] = stringArray1;
      int int0 = resultMatrixLatex0.getColSize(stringArray0, 0);
      assertEquals(8, int0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.741839807328693
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = new String[0];
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixLatex0.getDefaultRowNameWidth();
      assertFalse(resultMatrixLatex0.getEnumerateColNames());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=3.4597431107054564
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDisplayName();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1);
      resultMatrixSignificance0.setEnumerateColNames(false);
      resultMatrixSignificance0.getRowName(0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixSignificance0.m_PrintColNames = false;
      resultMatrixCSV0.m_MeanWidth = 1;
      resultMatrixSignificance0.setMeanPrec(1);
      resultMatrixSignificance0.toStringKey();
      assertEquals(1, resultMatrixSignificance0.getMeanPrec());
      
      resultMatrixCSV0.getDefaultRowNameWidth();
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=3.714202927671937
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = new String[0];
      resultMatrixLatex0.setOptions(stringArray0);
      int int0 = resultMatrixLatex0.getDisplayRow(26);
      assertEquals(0, resultMatrixLatex0.getStdDevPrec());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=3.631557208055134
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_StdDevWidth = 0;
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.enumerateRowNamesTipText();
      assertFalse(resultMatrixLatex1.getEnumerateRowNames());
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertEquals(0, resultMatrixLatex1.getRowNameWidth());
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setColHidden(1, false);
      resultMatrixCSV0.getDefaultPrintRowNames();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.getDefaultMeanPrec();
      resultMatrixCSV0.headerKeys();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertFalse(resultMatrixCSV0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=3.2286443931453856
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(46, 46);
      Vector<String> vector0 = new Vector<String>();
      resultMatrixPlainText0.m_HeaderValues = vector0;
      resultMatrixPlainText0.getDefaultPrintRowNames();
      resultMatrixPlainText0.globalInfo();
      assertEquals(46, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertFalse(resultMatrixPlainText0.getDefaultRemoveFilterName());
      assertEquals(46, resultMatrixPlainText0.getColCount());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=4.024710359599662
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(0, resultMatrixCSV0.getRowNameWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      resultMatrixLatex0.getCount(1);
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=4.1099833332049736
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex0.enumerateRowNamesTipText();
      resultMatrixLatex1.m_RemoveFilterName = true;
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.toString();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.setColHidden(0, false);
      resultMatrixCSV0.getDefaultPrintRowNames();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.getDefaultMeanPrec();
      resultMatrixCSV0.headerKeys();
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=3.490577634378733
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("v");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=4.135935994709884
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.LOSS_STRING = "CSV";
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixCSV0.LOSS_STRING = "CSV";
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.getSummaryTitle(3);
      resultMatrixCSV0.m_RankingWins = intArray0;
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      
      resultMatrixCSV0.setEnumerateColNames(false);
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.setColHidden(0, true);
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.getDefaultStdDevPrec();
      assertEquals(0, resultMatrixCSV0.getVisibleColCount());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=3.3298662239710994
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.m_RankingLosses = intArray0;
      resultMatrixCSV0.getVisibleColCount();
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex((-1986), (-1986));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 141
  /*Coverage entropy=3.286089315905222
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[2][1];
      int[] intArray1 = new int[4];
      intArray1[0] = 1;
      intArray1[1] = 2;
      intArray1[2] = 1;
      intArray0[0] = intArray1;
      intArray0[1] = intArray1;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 142
  /*Coverage entropy=4.188850517254168
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.padString("hYJfl1$KCsmw,#u", (-894));
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      
      ResultMatrixLatex.main((String[]) null);
      resultMatrixLatex0.padString("-show-avg", 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixSignificance0.m_ShowStdDev = false;
      resultMatrixSignificance0.m_PrintRowNames = false;
      resultMatrixSignificance0.getDefaultStdDevWidth();
      ResultMatrixLatex.main((String[]) null);
      resultMatrixSignificance0.setColNameWidth((-894));
      String string0 = resultMatrixHTML0.toString();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>($\\circ$/ /$\\bullet$)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      String string1 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string1);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.setEnumerateColNames(true);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=3.495453972955436
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex0.enumerateRowNamesTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex1);
      String string0 = resultMatrixCSV0.padString("$circ$", (-2307), true);
      assertEquals("$circ$", string0);
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      
      int int0 = resultMatrixLatex0.getSignificanceCount(2221, 3020);
      int int1 = resultMatrixLatex0.getStdDevWidth();
      assertTrue(int1 == int0);
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
      assertEquals(0, int1);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=3.076264120213861
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 0);
      resultMatrixLatex1.toStringRanking();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSize(0, (-2073));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 145
  /*Coverage entropy=3.2886062789553234
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_StdDevWidth = 46;
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSize((-1126), (-641));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 146
  /*Coverage entropy=3.8788880395769816
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getOptions();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getSignificanceCount(0, 0);
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      int[][] intArray0 = new int[0][8];
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 147
  /*Coverage entropy=3.4882695869868265
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      int[][] intArrayArray0 = null;
      // Undeclared exception!
      try { 
        resultMatrixCSV1.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 148
  /*Coverage entropy=3.48629831128984
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.padString("e'b Ze.3!&", 2566);
      assertFalse(resultMatrixSignificance0.getDefaultShowAverage());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=3.4884858967423966
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setStdDevWidth(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.m_PrintRowNames = false;
      resultMatrixGnuPlot1.setRowNameWidth(0);
      int int0 = resultMatrixGnuPlot1.getStdDevPrec();
      assertEquals(0, resultMatrixGnuPlot1.getRowNameWidth());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 150
  /*Coverage entropy=3.5861880844262752
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int int0 = resultMatrixGnuPlot0.getStdDevPrec();
      assertEquals(2, int0);
      
      resultMatrixGnuPlot0.getMean(2, (-1842));
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=4.078468433405606
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      String[] stringArray0 = new String[1];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(360, 2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      String[] stringArray1 = resultMatrixLatex0.getOptions();
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(19, stringArray1.length);
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(5, resultMatrixLatex0.getCountWidth());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=3.4884858967423966
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.m_RankingDiff = intArray0;
      intArray0[0] = 2;
      resultMatrixSignificance0.m_RankingWins = intArray0;
      resultMatrixSignificance0.getDefaultColNameWidth();
      resultMatrixSignificance0.setMeanPrec(2);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringKey();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 153
  /*Coverage entropy=3.5402489334499174
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setCount(1, 901.383751045);
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
      
      resultMatrixGnuPlot0.setStdDevWidth((-1));
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      assertEquals(0, resultMatrixGnuPlot1.getSignificanceWidth());
      assertEquals(0, resultMatrixGnuPlot1.getMeanWidth());
      assertEquals(50, resultMatrixGnuPlot1.getRowNameWidth());
      assertFalse(resultMatrixGnuPlot1.getDefaultRemoveFilterName());
      assertTrue(resultMatrixGnuPlot1.getPrintColNames());
      assertEquals(0, resultMatrixGnuPlot1.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot1.getMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot1.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot1.getStdDevWidth());
      assertTrue(resultMatrixGnuPlot1.getPrintRowNames());
      assertEquals(1, resultMatrixGnuPlot1.getColCount());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=3.4429515407715794
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setPrintColNames(true);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(26, 0);
      resultMatrixLatex0.setMeanWidth(0);
      resultMatrixLatex0.getVisibleRowCount();
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.getDisplayName();
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertTrue(resultMatrixCSV0.getPrintColNames());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=3.2372798489319927
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.setRemoveFilterName(false);
      resultMatrixLatex0.enumerateRowNamesTipText();
      resultMatrixLatex1.getSignificance(0, 2);
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      assertEquals(1, resultMatrixLatex1.getRowCount());
      assertEquals(0, resultMatrixLatex1.getDefaultStdDevWidth());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertEquals(0, resultMatrixLatex1.getRowNameWidth());
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
  }

  /**
  //Test case number: 156
  /*Coverage entropy=3.1277953927022693
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.setRowNameWidth(11);
      assertEquals(11, resultMatrixGnuPlot0.getRowNameWidth());
      
      resultMatrixSignificance0.toStringSummary();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.globalInfo();
      assertFalse(resultMatrixCSV0.getShowStdDev());
  }

  /**
  //Test case number: 157
  /*Coverage entropy=3.5374801842022947
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(3, 3);
      resultMatrixLatex0.setColNameWidth(248);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.getDefaultShowStdDev();
      assertEquals(248, resultMatrixLatex0.getColNameWidth());
      assertEquals(3, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=3.774689910964824
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = new String[0];
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixLatex0.showAverageTipText();
      assertEquals(0, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 159
  /*Coverage entropy=3.673780326074442
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setMeanWidth(264);
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.meanPrecTipText();
      assertEquals(264, resultMatrixPlainText0.getMeanWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=3.093554672946801
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      
      resultMatrixCSV0.m_SignificanceWidth = 1;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.assign(resultMatrixCSV0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV1.getColName(2);
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
  }

  /**
  //Test case number: 161
  /*Coverage entropy=3.442395990766797
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.setSignificance(0, (-2932), 1);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(0, 1);
      resultMatrixLatex1.globalInfo();
      String string0 = resultMatrixCSV0.padString("$\bullet$", 2, false);
      assertEquals("$\b", string0);
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getRowNameWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      
      int int0 = resultMatrixLatex1.getSignificanceCount(1, 1);
      assertEquals(0, resultMatrixLatex1.getVisibleColCount());
      assertEquals(0, int0);
      
      resultMatrixLatex0.getStdDevWidth();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=3.58676894908481
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColName(0, "print-row-names");
      String string0 = resultMatrixPlainText0.padString("(", 0, true);
      assertEquals("(", string0);
      
      String string1 = resultMatrixPlainText0.toStringKey();
      assertEquals("Key:\n(1) print-row-names\n", string1);
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=3.3547067007951514
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(394, 1);
      String string0 = resultMatrixCSV0.padString("{3}jW", 852, true);
      assertEquals("                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               {3}jW", string0);
      
      int int0 = resultMatrixLatex0.getSignificanceCount(2, 1);
      int int1 = resultMatrixLatex0.getStdDevWidth();
      assertTrue(int1 == int0);
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
      assertEquals(0, int1);
  }

  /**
  //Test case number: 164
  /*Coverage entropy=3.801002584950451
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.setMeanWidth((-3797));
      Vector<String> vector0 = new Vector<String>();
      Vector<String> vector1 = new Vector<String>();
      int[][] intArray0 = new int[1][4];
      int[] intArray1 = new int[0];
      resultMatrixCSV0.m_RowNameWidth = (-3797);
      intArray0[0] = intArray1;
      resultMatrixCSV0.setRanking(intArray0);
      assertEquals((-3797), resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 165
  /*Coverage entropy=3.34223713259004
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      
      resultMatrixCSV0.m_SignificanceWidth = 1;
      resultMatrixCSV0.m_ColNameWidth = (-1843);
      resultMatrixCSV0.setSignificance(12, 0, 682);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.setMeanPrec(2);
      String string0 = resultMatrixSignificance0.toStringKey();
      assertEquals("Key:\n(1) col0\n", string0);
  }

  /**
  //Test case number: 166
  /*Coverage entropy=3.4929510936076293
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int int0 = resultMatrixLatex0.getSignificanceCount(1, 1098);
      assertEquals(0, int0);
      
      resultMatrixLatex0.getStdDevWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      String string0 = resultMatrixGnuPlot0.toStringKey();
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals("Key:\n(1) col0\n", string0);
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintRowNames());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
  }

  /**
  //Test case number: 167
  /*Coverage entropy=3.4866413644630816
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setRowName(1835, "");
      resultMatrixCSV0.significanceWidthTipText();
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertFalse(resultMatrixCSV0.getShowAverage());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 168
  /*Coverage entropy=3.5363257164119464
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setSize(1258, 0);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixSignificance0.getRowNameWidth();
      resultMatrixSignificance0.enumerateColNamesTipText();
      assertEquals(1258, resultMatrixSignificance0.getColCount());
  }

  /**
  //Test case number: 169
  /*Coverage entropy=3.48629831128984
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.clearRanking();
      resultMatrixHTML0.getSignificance((-1948), (-1948));
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertFalse(resultMatrixHTML0.getDefaultShowAverage());
      assertEquals(0, resultMatrixHTML0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 170
  /*Coverage entropy=4.080293132004498
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getPrintColNames();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV1.isStdDev((-1130));
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      assertEquals(1, resultMatrixCSV0.getRowCount());
      
      Vector<String> vector0 = new Vector<String>(1);
      Vector<String> vector1 = new Vector<String>();
      vector1.add("[");
      resultMatrixCSV1.setRowHidden((-745), false);
      resultMatrixCSV1.getEnumerateRowNames();
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertTrue(resultMatrixCSV1.getPrintRowNames());
      assertEquals(40, resultMatrixCSV1.getRowNameWidth());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertTrue(resultMatrixCSV1.getEnumerateColNames());
  }

  /**
  //Test case number: 171
  /*Coverage entropy=4.261131669423887
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getPrintColNames();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV1.isStdDev((-1130));
      assertTrue(resultMatrixCSV1.getPrintRowNames());
      
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      
      Vector<String> vector0 = new Vector<String>(1);
      Vector<String> vector1 = new Vector<String>();
      vector1.add("[");
      ResultMatrixSignificance.main(stringArray0);
      assertEquals(18, stringArray0.length);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 172
  /*Coverage entropy=3.302039563722702
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.removeFilterName("}/=&Gx+N$`}UXix}1`");
      assertEquals("}/=&Gx+N$`}UXix}1`", string0);
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      int int0 = resultMatrixLatex1.getVisibleRowCount();
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
      assertEquals(0, resultMatrixLatex1.getRowNameWidth());
      assertEquals(1, int0);
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex();
      assertFalse(resultMatrixLatex2.getRemoveFilterName());
      assertEquals(1, resultMatrixLatex2.getColCount());
  }

  /**
  //Test case number: 173
  /*Coverage entropy=4.080488635425808
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 2);
      resultMatrixCSV0.m_EnumerateRowNames = true;
      resultMatrixCSV0.getPrintColNames();
      resultMatrixCSV0.isStdDev(2);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixCSV0.getOptions();
      resultMatrixHTML0.removeFilterName("*");
      resultMatrixHTML0.m_CountWidth = 1538;
      resultMatrixHTML0.TIE_STRING = "]";
      resultMatrixHTML0.clearRanking();
      resultMatrixHTML0.getDefaultPrintColNames();
      Vector<String> vector0 = new Vector<String>(1);
      double[][] doubleArray0 = new double[2][9];
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = (double) 2;
      doubleArray1[1] = (double) 1538;
      doubleArray1[2] = (double) 1;
      doubleArray1[3] = (double) 1;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = 2852.196223963715;
      doubleArray2[1] = (double) 1;
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = (double) 1538;
      doubleArray2[4] = (double) 1538;
      doubleArray2[5] = (double) 2;
      resultMatrixCSV0.m_StdDev = doubleArray0;
      resultMatrixHTML0.m_HeaderValues = vector0;
      resultMatrixHTML0.isRowName(2);
      vector0.add("]");
      resultMatrixCSV0.setRowHidden(0, true);
      resultMatrixHTML0.getVisibleRowCount();
      resultMatrixHTML0.getMeanWidth();
      resultMatrixHTML0.rowNameWidthTipText();
      resultMatrixCSV0.getEnumerateRowNames();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixHTML0.meanWidthTipText();
      assertEquals(1538, resultMatrixHTML0.getCountWidth());
  }

  /**
  //Test case number: 174
  /*Coverage entropy=3.866392728613673
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getPrintColNames();
      assertEquals(1, resultMatrixCSV0.getColCount());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixSignificance0);
      boolean boolean0 = resultMatrixCSV1.isStdDev((-1135));
      assertFalse(boolean0);
      
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      Vector<String> vector0 = new Vector<String>(1);
      Vector<String> vector1 = new Vector<String>();
      vector0.add("");
      resultMatrixCSV1.setRowHidden(0, true);
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertEquals(40, resultMatrixCSV1.getRowNameWidth());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertTrue(resultMatrixCSV1.getEnumerateColNames());
      
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV();
      boolean boolean1 = resultMatrixCSV2.getEnumerateRowNames();
      assertEquals(0, resultMatrixCSV2.getMeanWidth());
      assertEquals(1, resultMatrixCSV2.getRowCount());
      assertEquals(0, resultMatrixCSV2.getColNameWidth());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 175
  /*Coverage entropy=4.025493973489647
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      resultMatrixLatex0.isRowName(0);
      resultMatrixLatex0.getVisibleRowCount();
      resultMatrixLatex0.printColNamesTipText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>[1]</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>[v/ /*]</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixGnuPlot0.toArray();
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
  }

  /**
  //Test case number: 176
  /*Coverage entropy=3.7746899109648235
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = new String[0];
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixLatex0.meanWidthTipText();
      assertFalse(resultMatrixLatex0.getPrintRowNames());
  }

  /**
  //Test case number: 177
  /*Coverage entropy=4.213504672176747
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Whether to show the row with averages.";
      ResultMatrixGnuPlot.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.removeFilterName("Whether to show the row with averages.");
      assertEquals("Whether to show the row with averages.", string0);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.rowNameWidthTipText();
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
  }

  /**
  //Test case number: 178
  /*Coverage entropy=4.260672132589025
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_RemoveFilterName = false;
      resultMatrixLatex0.setPrintRowNames(false);
      resultMatrixLatex0.m_ShowStdDev = true;
      resultMatrixLatex0.m_StdDevPrec = 1871;
      resultMatrixLatex0.toStringMatrix();
      resultMatrixLatex0.toArray();
      resultMatrixLatex0.clearSummary();
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.getOptions();
      resultMatrixLatex0.getRevision();
      resultMatrixLatex0.getRevision();
      resultMatrixLatex0.padString("", 1871, true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.clear();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.toStringRanking();
      resultMatrixSignificance0.addHeader("sJ4e4]~\"{$&P", "$circ$");
      resultMatrixPlainText0.clearHeader();
      assertEquals(1871, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
  }

  /**
  //Test case number: 179
  /*Coverage entropy=3.2983754547979567
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getRowCount());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV1.getRevision();
      String string0 = resultMatrixCSV0.getColName(0);
      assertEquals("[1]", string0);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringRanking();
      resultMatrixCSV1.getDefaultRemoveFilterName();
      String string1 = resultMatrixCSV1.trimString("8034", 19);
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertFalse(resultMatrixCSV1.getEnumerateRowNames());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertTrue(resultMatrixCSV1.getPrintRowNames());
      assertTrue(resultMatrixCSV1.getEnumerateColNames());
      assertEquals(1, resultMatrixCSV1.getColCount());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertEquals("8034", string1);
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
  }

  /**
  //Test case number: 180
  /*Coverage entropy=3.8893258725798385
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.assign(resultMatrixCSV0);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixCSV0.getRevision();
      resultMatrixGnuPlot0.WIN_STRING = "v";
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      
      resultMatrixCSV0.setSignificance(12, 1, 682);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(506, 2);
      resultMatrixLatex0.globalInfo();
      int int0 = resultMatrixLatex0.getVisibleRowCount();
      assertEquals(2, int0);
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      assertEquals(1, resultMatrixLatex1.getColCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 2);
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col | (2)\n---------------------------------------\nrow0                       (0)    |    \nrow1                       (0)    |    \n---------------------------------------\n                          (v/ /* (0/0/0\n", string0);
  }

  /**
  //Test case number: 181
  /*Coverage entropy=3.7742049460531
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      int int0 = ResultMatrix.SIGNIFICANCE_WIN;
      resultMatrixSignificance0.toStringSummary();
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      
      resultMatrixSignificance0.setMeanPrec(2);
      String string0 = resultMatrixSignificance0.toStringKey();
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertEquals("Key:\n(1) col0\n", string0);
      
      String string1 = resultMatrixLatex0.toString();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string1);
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 182
  /*Coverage entropy=3.7958218523418967
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setSize(0, 692);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 183
  /*Coverage entropy=4.188825194754201
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Vector<String> vector1 = new Vector<String>();
      ResultMatrixPlainText.main((String[]) null);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getColName(1);
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 184
  /*Coverage entropy=4.024710359599662
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      String string0 = resultMatrixLatex1.toStringMatrix();
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      
      resultMatrixLatex0.getCount(0);
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 185
  /*Coverage entropy=3.1937110316503663
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV0.clear();
      resultMatrixCSV1.getRevision();
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertFalse(resultMatrixCSV1.getEnumerateRowNames());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      assertTrue(resultMatrixCSV1.getEnumerateColNames());
      assertTrue(resultMatrixCSV1.getPrintRowNames());
      
      String string0 = resultMatrixCSV0.getColName(0);
      assertEquals("[1]", string0);
      assertNotNull(string0);
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 186
  /*Coverage entropy=3.537855771056755
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      String string0 = resultMatrixLatex1.doubleToString(1, 2);
      assertEquals("1.00", string0);
      
      resultMatrixLatex1.getRevision();
      resultMatrixLatex1.getSignificance(0, 2);
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      assertEquals(1, resultMatrixLatex1.getColCount());
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertEquals(1, resultMatrixLatex1.getRowCount());
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
  }

  /**
  //Test case number: 187
  /*Coverage entropy=3.380937795632014
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[2];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 188
  /*Coverage entropy=3.5843757866916475
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.getRevision();
      resultMatrixLatex1.getSignificance(0, 2);
      resultMatrixLatex1.getRowOrder();
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      assertFalse(resultMatrixLatex1.getEnumerateRowNames());
      assertEquals(1, resultMatrixLatex1.getVisibleColCount());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertEquals(0, resultMatrixLatex1.getRowNameWidth());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(0, resultMatrixLatex1.getDefaultMeanWidth());
  }

  /**
  //Test case number: 189
  /*Coverage entropy=3.020056464274406
  */
  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.getDisplayName();
      int int0 = resultMatrixCSV1.getDefaultSignificanceWidth();
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
      assertEquals(1, resultMatrixCSV1.getVisibleColCount());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertTrue(resultMatrixCSV1.getPrintRowNames());
      assertTrue(resultMatrixCSV1.getEnumerateColNames());
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertFalse(resultMatrixCSV1.getDefaultEnumerateRowNames());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertFalse(resultMatrixCSV1.getRemoveFilterName());
      assertEquals(1, resultMatrixCSV1.getVisibleRowCount());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 190
  /*Coverage entropy=3.434635057597813
  */
  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 191
  /*Coverage entropy=3.5841931382898213
  */
  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_StdDevWidth = 0;
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.enumerateRowNamesTipText();
      resultMatrixLatex1.getDisplayName();
      resultMatrixLatex1.getSignificance(1, 1088);
      assertEquals(1, resultMatrixLatex1.getVisibleColCount());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertEquals(0, resultMatrixLatex1.getDefaultColNameWidth());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(0, resultMatrixLatex1.getDefaultRowNameWidth());
      assertEquals(0, resultMatrixLatex1.getDefaultStdDevWidth());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      assertTrue(resultMatrixLatex1.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
  }

  /**
  //Test case number: 192
  /*Coverage entropy=3.5374801842022947
  */
  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getPrintColNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.getRevision();
      resultMatrixLatex0.getSignificance(2, 0);
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
  }

  /**
  //Test case number: 193
  /*Coverage entropy=3.4170263404427326
  */
  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setShowAverage(false);
      resultMatrixPlainText0.getStdDev(0, 0);
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertFalse(resultMatrixPlainText0.getShowAverage());
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 194
  /*Coverage entropy=3.2845658749149194
  */
  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      
      resultMatrixLatex0.m_RemoveFilterName = true;
      resultMatrixLatex0.setShowStdDev(true);
      resultMatrixLatex0.getDefaultSignificanceWidth();
      assertTrue(resultMatrixLatex0.getShowStdDev());
  }

  /**
  //Test case number: 195
  /*Coverage entropy=3.074513528101823
  */
  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      
      resultMatrixSignificance0.setStdDevPrec(1);
      resultMatrixSignificance0.toStringSummary();
      assertEquals(1, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 196
  /*Coverage entropy=3.4869603437294296
  */
  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.setRowName(1, "CSV");
      boolean boolean0 = resultMatrixCSV0.isAverage(2);
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultCountWidth());
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(boolean0);
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
  }

  /**
  //Test case number: 197
  /*Coverage entropy=3.412485337317957
  */
  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.setCount((-654), 2);
      resultMatrixGnuPlot0.setStdDevWidth(1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.setRemoveFilterName(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.getEnumerateColNames();
      assertEquals(1, resultMatrixGnuPlot0.getStdDevWidth());
      
      resultMatrixHTML0.toStringKey();
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
  }

  /**
  //Test case number: 198
  /*Coverage entropy=3.281382721594089
  */
  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV1.enumerateColNamesTipText();
      resultMatrixCSV0.setMeanWidth(70);
      String string0 = resultMatrixCSV1.getColName(0);
      assertEquals(70, resultMatrixCSV0.getMeanWidth());
      assertEquals("[1]", string0);
  }

  /**
  //Test case number: 199
  /*Coverage entropy=3.628827549262483
  */
  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevPrec((-337));
      resultMatrixCSV0.setPrintColNames(false);
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.clearRanking();
      int[] intArray0 = new int[6];
      intArray0[0] = 2;
      intArray0[1] = (-337);
      intArray0[2] = (-337);
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[5] = 1;
      resultMatrixCSV0.m_RowOrder = intArray0;
      resultMatrixCSV0.setMean((-337), (-337), 0.0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.toStringSummary();
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertFalse(resultMatrixHTML0.getPrintColNames());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertFalse(resultMatrixHTML0.getShowStdDev());
  }

  /**
  //Test case number: 200
  /*Coverage entropy=3.4884858967423966
  */
  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.setStdDev(1, 0, (-2346.9));
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
  }

  /**
  //Test case number: 201
  /*Coverage entropy=4.110848823242541
  */
  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML1.setCount((-1639), (-1330.16059));
      ResultMatrixSignificance.main((String[]) null);
  }

  /**
  //Test case number: 202
  /*Coverage entropy=3.2242058593620238
  */
  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setStdDevWidth(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.m_PrintRowNames = false;
      resultMatrixGnuPlot1.setRowNameWidth(0);
      assertEquals(0, resultMatrixGnuPlot1.getRowNameWidth());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 2);
      int int0 = resultMatrixPlainText0.getColCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 203
  /*Coverage entropy=3.8020143490181244
  */
  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixGnuPlot0.setColOrder(intArray0);
      boolean boolean0 = resultMatrixGnuPlot0.isMean(97);
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertFalse(boolean0);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 204
  /*Coverage entropy=3.9949969874483524
  */
  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.m_RemoveFilterName = false;
      resultMatrixGnuPlot1.getColCount();
      resultMatrixGnuPlot0.getMeanWidth();
      boolean boolean0 = resultMatrixGnuPlot0.isMean(0);
      assertFalse(boolean0);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset col0\n------------\nrow0        \n", string0);
      
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      resultMatrixGnuPlot1.toStringRanking();
      assertEquals(0, resultMatrixGnuPlot1.getStdDevWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot1.getMeanPrec());
      assertEquals(50, resultMatrixGnuPlot1.getRowNameWidth());
      assertEquals(2, resultMatrixGnuPlot1.getStdDevPrec());
      assertFalse(resultMatrixGnuPlot1.getRemoveFilterName());
  }

  /**
  //Test case number: 205
  /*Coverage entropy=3.2593736099619184
  */
  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getColCount());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      
      int int0 = ResultMatrix.SIGNIFICANCE_WIN;
      resultMatrixSignificance0.setCountWidth(1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      resultMatrixLatex0.getVisibleRowCount();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.getDefaultMeanWidth();
      int int1 = resultMatrixLatex0.getDefaultStdDevPrec();
      assertEquals(2, int1);
  }

  /**
  //Test case number: 206
  /*Coverage entropy=3.6165321668050434
  */
  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      
      int int0 = resultMatrixLatex0.getVisibleRowCount();
      assertEquals(1, int0);
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(1, 1);
      resultMatrixLatex1.globalInfo();
      resultMatrixLatex0.setMean(1, 0, 0);
      resultMatrixLatex1.getMeanWidth();
      assertEquals(2, resultMatrixLatex1.getDefaultMeanPrec());
  }

  /**
  //Test case number: 207
  /*Coverage entropy=3.536830130031114
  */
  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      boolean boolean0 = resultMatrixLatex0.isRowName((-1487));
      assertFalse(boolean0);
      
      int int0 = resultMatrixLatex0.getVisibleRowCount();
      assertEquals(1, int0);
      
      resultMatrixLatex0.printColNamesTipText();
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertFalse(resultMatrixLatex0.getDefaultRemoveFilterName());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
  }

  /**
  //Test case number: 208
  /*Coverage entropy=3.435005016902289
  */
  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultColNameWidth();
      resultMatrixSignificance0.setMeanPrec(0);
      assertEquals(0, resultMatrixSignificance0.getMeanPrec());
  }
}
