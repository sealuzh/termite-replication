/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 21:49:04 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-119);
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte) (-91);
      byteArray0[3] = (byte) (-119);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "J2GlJ}");
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("/u/Iq<{Jg7hG2}vS", temporaryURLContent0, 0, 0);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, homeTexture0, 0, 0);
      homeEnvironment0.getSkyTexture();
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0, int0);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy(".Handler", propertyChangeListener0);
      Camera camera0 = new Camera(3025.63F, 1234.2588F, 3617.0F, (-4199.3F), 1.3333334F, 1.3333334F);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "^e'%.q,L&q^P", ".Handler", camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setAllLevelsVisible(false);
      assertEquals(240, homeEnvironment0.getVideoHeight());
      
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getPhotoAspectRatio();
      assertEquals(0, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("!O[(O3T_ap\"jg", "!O[(O3T_ap\"jg", uRLContent0, 19, 0.0F, "");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(19, homeTexture0, 19, homeTexture0, (-1897), 1.7777778F);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getGroundTexture();
      System.setCurrentTimeMillis(320);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "J2GlJ}");
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("/u/Iq<{Jg7hG2}vS", temporaryURLContent0, 0, 0);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, homeTexture0, 0, 0);
      homeEnvironment0.getSkyTexture();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getGroundTexture();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0, homeEnvironment0.getSkyColor());
      assertEquals(0, homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(0, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy(".Handler", propertyChangeListener0);
      homeEnvironment0.setAllLevelsVisible(false);
      assertEquals(320, homeEnvironment0.getVideoWidth());
      
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getSkyTexture();
      assertEquals(0, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-1801));
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals((-1351), homeEnvironment0.getVideoHeight());
      assertEquals((-1801), int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth((-958));
      int int0 = homeEnvironment1.getVideoHeight();
      assertEquals((-718), int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      
      homeEnvironment0.setCeillingLightColor(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getCeillingLightColor();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setPhotoQuality((-3022));
      homeEnvironment1.getPhotoQuality();
      assertEquals((-3022), homeEnvironment1.getPhotoQuality());
      
      homeEnvironment0.getVideoCameraPath();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoHeight(0);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.getLightColor();
      homeEnvironment1.setVideoQuality(0);
      homeEnvironment2.setVideoFrameRate((-629));
      homeEnvironment1.getPhotoWidth();
      homeEnvironment2.getVideoFrameRate();
      homeEnvironment2.getPhotoHeight();
      homeEnvironment2.clone();
      assertEquals((-629), homeEnvironment2.getVideoFrameRate());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, (-63.01F), 0.0F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, (-932), homeTexture0, (-932), 0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getGroundColor();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals((-932), homeEnvironment1.getLightColor());
      assertEquals(0, int0);
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals((-932), homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, (-2146690749), (-3766.26F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2146690749), homeTexture0, 3725, homeTexture0, (-2146690749), (-1.0F));
      homeEnvironment0.getGroundTexture();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-2146690749), homeEnvironment0.getGroundColor());
      assertEquals(3725, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals((-1.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-2146690749), homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.122928297357194
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setPhotoWidth(0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("x", "x", object0, homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Camera camera0 = new Camera((-103.8772F), (-103.8772F), 0, 0, (-720.5917F), 1549.4857F);
      camera0.setPitch(0.0F);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object0, ";xea.scj.|$J-_~)=", homeEnvironment_Property0, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      homeEnvironment0.setGroundColor(3052);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setWallsAlpha(3052);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      homeEnvironment0.isAllLevelsVisible();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoQuality(3052);
      homeEnvironment0.getGroundTexture();
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(AspectRatio.RATIO_4_3, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality((-312));
      homeEnvironment0.clone();
      assertEquals((-312), homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.1952296882816973
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-5084));
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setSubpartSizeUnderLight((-1100.0142F));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      homeEnvironment0.getGroundColor();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.setPhotoQuality(11053224);
      homeEnvironment1.getPhotoWidth();
      Random.setNextRandom((-5084));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "y1}y8Np!");
      homeEnvironment1.setPhotoQuality(16);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment1.getLightColor();
      homeEnvironment0.getCeillingLightColor();
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment1.getPhotoQuality();
      homeEnvironment2.getVideoWidth();
      homeEnvironment0.getSkyTexture();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("y1}y8Np!");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.y1}y8Np!
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((-3278));
      homeEnvironment0.clone();
      assertEquals((-3278), homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((-3785));
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals((-3785), int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment.Property.values();
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("s \"-N~QzN9}=urYu\"M", temporaryURLContent0, 2581, 2581, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2581, homeTexture0, 2581, 2581, 2581);
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertNotNull(homeTexture1);
      assertEquals(2581, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(2581.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(2581, homeEnvironment0.getLightColor());
      assertEquals(2581, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("VIDEO_FRAME_RATE", (Content) null, (-1959.0F), 2370);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2370, homeTexture0, (-1), 2370, (-1));
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(2370, homeEnvironment0.getGroundColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals((-1.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertNotNull(homeTexture1);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(2370, homeEnvironment0.getLightColor());
      assertEquals((-1), homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      URLContent uRLContent0 = new URLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("+pO8G.fiJgW", uRLContent0, 1383, 2302.8599F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1383, homeTexture0, 1383, homeTexture0, 1383, 2302.8599F);
      homeEnvironment0.getSkyTexture();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(1383, homeEnvironment0.getSkyColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(2302.8599F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(1383, homeEnvironment0.getGroundColor());
      assertEquals(1383, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.1958550791509905
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1), (HomeTexture) null, (-1), (-1), (-1));
      homeEnvironment0.setCeillingLightColor(12);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.isObserverCameraElevationAdjusted();
      System.setCurrentTimeMillis(12);
      homeEnvironment0.getPhotoWidth();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)113;
      byteArray0[1] = (byte) (-53);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      homeEnvironment0.setVideoWidth(400);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getPhotoAspectRatio();
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(12, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setWallsAlpha((-1099.2635F));
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getVideoAspectRatio();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getVideoCameraPath();
      assertEquals((-1099.2635F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("i3!>", resourceURLContent0, 969.0F, 1.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2, homeTexture0, 525, (-3493), 1.0F);
      float float0 = homeEnvironment0.getWallsAlpha();
      assertEquals(1.0F, float0, 0.01F);
      
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(320, int0);
      assertEquals((-3493), homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(525, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(2, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.380937795632014
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setGroundColor(11);
      homeEnvironment0.setPhotoHeight(1465);
      homeEnvironment1.setPhotoHeight(306);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment1.setVideoQuality(306);
      URL uRL0 = MockURL.getFileExample();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Z");
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("Z", resourceURLContent0, 1.0F, 11);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment3 = new HomeEnvironment(11, homeTexture0, 14, (-1389), 306);
      homeEnvironment3.getPhotoHeight();
      homeEnvironment2.setSkyColor((-181));
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment2.setGroundColor(12);
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment3.getVideoFrameRate();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment2.setDrawingMode(homeEnvironment_DrawingMode0);
      HomeEnvironment homeEnvironment4 = homeEnvironment2.clone();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment4.setDrawingMode(homeEnvironment_DrawingMode1);
      homeEnvironment4.getVideoHeight();
      HomeEnvironment homeEnvironment5 = homeEnvironment2.clone();
      homeEnvironment5.setPhotoWidth(240);
      System.setCurrentTimeMillis(12);
      int int0 = homeEnvironment1.getVideoQuality();
      assertEquals(11, homeEnvironment1.getGroundColor());
      assertEquals(306, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor((-3589));
      homeEnvironment0.clone();
      assertEquals((-3589), homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.236515101780002
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      System.setCurrentTimeMillis((-917L));
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.clone();
      homeEnvironment0.setSkyColor(3584);
      Camera camera0 = new Camera(1.0F, (-1592.51F), (-1541.3F), 1.0F, (-917L), (-1541.3F));
      camera0.setPitch(3584);
      linkedList0.add(camera0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("T,L/o8kDDpbM.p90", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      linkedList0.sort(comparator0);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.getWallsAlpha();
      HomeEnvironment.Property.values();
      homeEnvironment0.setSubpartSizeUnderLight((-1.0F));
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getGroundColor();
      System.setCurrentTimeMillis(78L);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(3584, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertFalse(homeEnvironment1.isObserverCameraElevationAdjusted());
      
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      int int0 = homeEnvironment1.getVideoWidth();
      assertEquals(320, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(1761);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setVideoWidth(1761);
      homeEnvironment0.setPhotoWidth(1761);
      assertEquals(1761, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.6976463077396793
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(4191);
      homeEnvironment0.setVideoQuality((-161));
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setSubpartSizeUnderLight(1.0F);
      homeEnvironment0.setPhotoHeight((-161));
      homeEnvironment0.setVideoWidth((-161));
      homeEnvironment0.getSubpartSizeUnderLight();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setPhotoWidth(4191);
      homeEnvironment0.getGroundColor();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("jr&-bTMk!", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      AspectRatio aspectRatio1 = AspectRatio.SQUARE_RATIO;
      homeEnvironment1.setVideoAspectRatio(aspectRatio1);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment1.setCeillingLightColor(10);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment1.getPhotoHeight();
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment1.getLightColor();
      homeEnvironment1.getSkyColor();
      homeEnvironment1.getVideoAspectRatio();
      assertTrue(homeEnvironment1.isAllLevelsVisible());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(6);
      homeEnvironment0.clone();
      assertEquals(6, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(2146792026);
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      boolean boolean0 = homeEnvironment0.isAllLevelsVisible();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-314));
      homeEnvironment0.clone();
      assertEquals((-314), homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-1240));
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals((-1240), int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(13684944);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-2146559791));
      homeEnvironment0.clone();
      assertEquals((-2146559791), homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setVideoWidth(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment1.getDrawingMode();
      HomeEnvironment.Property.values();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(320);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13427964, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("#:Z&hXq0Kxkw", (Content) null, (-1), (-252.63F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1), homeTexture0, (-1), homeTexture0, (-1), (-1));
      homeEnvironment0.getSkyTexture();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-1), homeEnvironment0.getLightColor());
      assertEquals((-1), homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-1), homeEnvironment0.getSkyColor());
      assertEquals((-1.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-5037));
      homeEnvironment0.clone();
      assertEquals((-5037), homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(11053224);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1260), (HomeTexture) null, (-1260), (-1260), (-1260));
      int int0 = homeEnvironment0.getLightColor();
      assertEquals((-1260.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-1260), homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-1260), int0);
      assertEquals((-1260), homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor((-1));
      homeEnvironment0.clone();
      assertEquals((-1), homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(25);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(2146725434);
      assertEquals(2146725434, homeEnvironment0.getLightColor());
      
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      assertEquals(320, homeEnvironment1.getVideoWidth());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture("#6A7N\"YY8-", (Content) null, 2.0F, 2.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(13427964);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(11053224, homeEnvironment1.getGroundColor());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(3001);
      homeEnvironment0.clone();
      assertEquals(3001, homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.008925238667177
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoHeight(0);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment1.setPhotoHeight(0);
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment1.getLightColor();
      homeEnvironment2.setVideoFrameRate(0);
      homeEnvironment2.getVideoFrameRate();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode1);
      homeEnvironment1.getVideoHeight();
      homeEnvironment1.getLightColor();
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", (Content) null, (-553.0F), (-553.0F), "");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.6439556568820564
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("UBql>", (Content) null, 331, (-776.0F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(331, homeTexture0, 0, homeTexture0, 6, 6);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setLightColor(6);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setSubpartSizeUnderLight((-2250.8176F));
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment1.setCeillingLightColor(19);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("u", propertyChangeListener0);
      homeEnvironment1.setSubpartSizeUnderLight(19);
      homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.setGroundColor(1409);
      homeEnvironment2.getSkyColor();
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      // Undeclared exception!
      try { 
        homeEnvironment0.setGroundTexture(homeTexture1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-2250));
      homeEnvironment0.getGroundColor();
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getSkyColor();
      float float0 = homeEnvironment0.getWallsAlpha();
      assertEquals((-2250), homeEnvironment0.getGroundColor());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setPhotoHeight(1465);
      homeEnvironment1.setPhotoHeight(0);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.getLightColor();
      homeEnvironment2.setVideoFrameRate((-629));
      homeEnvironment2.getPhotoWidth();
      int int0 = homeEnvironment2.getVideoFrameRate();
      assertEquals((-629), int0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-15));
      homeEnvironment0.clone();
      assertEquals((-15), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-1809));
      homeEnvironment0.setWallsAlpha((-1108.2F));
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals((-1108.2F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals((-1809), int0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(2159.2979F);
      homeEnvironment0.clone();
      assertEquals(2159.2979F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(13684944);
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertTrue(boolean0);
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_TEXTURE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("V:KRh_Dm@}x$RV`", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(2040109465);
      homeEnvironment0.clone();
      assertEquals(2040109465, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(240, int0);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor((-837));
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals((-837), homeEnvironment0.getLightColor());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      
      homeEnvironment0.setSkyColor(13684944);
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(13684944, homeEnvironment0.getSkyColor());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.clone();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality((-932));
      homeEnvironment0.clone();
      assertEquals((-932), homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setVideoWidth(13);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      HomeEnvironment.Property.values();
      homeEnvironment0.setAllLevelsVisible(true);
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(1502);
      assertEquals(1127, homeEnvironment0.getVideoHeight());
      
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      assertEquals(13684944, homeEnvironment1.getLightColor());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(186);
      assertEquals(186, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((-2707.4F));
      homeEnvironment0.clone();
      assertEquals((-2707.4F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setSubpartSizeUnderLight((-1.0F));
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals((-1.0F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
      assertEquals(320, int0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(461);
      homeEnvironment0.clone();
      assertEquals(461, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(3456);
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(3456, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", uRLContent0, 1.0F, (-1394));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1394), homeTexture0, 0, homeTexture0, (-1823), (-569.62006F));
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(0, homeEnvironment0.getSkyColor());
      assertEquals((-569.62006F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-1394), homeEnvironment0.getGroundColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-1823), homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(0, int0);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.clone();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(3665, (HomeTexture) null, 3665, (HomeTexture) null, 3665, 3665);
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(3665.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(3665, homeEnvironment0.getLightColor());
      assertEquals(3665, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(3665, int0);
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(171.09F);
      homeEnvironment0.clone();
      assertEquals(171.09F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(0);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getWallsAlpha();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(7, (HomeTexture) null, 7, 7, 7);
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(7.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(7, int0);
      assertEquals(7, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(7, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha((-496.0422F));
      homeEnvironment0.clone();
      assertEquals((-496.0422F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(0, homeEnvironment1.getPhotoQuality());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.clone();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_QUALITY;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
  }
}
