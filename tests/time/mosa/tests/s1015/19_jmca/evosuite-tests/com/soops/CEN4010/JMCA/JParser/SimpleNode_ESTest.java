/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 01:42:27 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.StringWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.7962209059715708
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("W{0", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*lt</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0287375017310743
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("[x^%O?AfUVbxWuN");
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.dump("[x^%O?AfUVbxWuN", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>[x^%O?AfUVbxWuN</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.7805062184775959
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      String string0 = "<";
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("<");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter(9);
      simpleNode0.dump("=", stringWriter0);
      assertEquals("<EnumBody>\n</EnumBody>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(63);
      simpleNode0.setIdentifier("8C+rT");
      SimpleNode simpleNode1 = new SimpleNode(63);
      simpleNode1.toString();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("/ `*XROH@|7%'m~?]=", stringWriter0);
      assertEquals("<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.8544198778100099
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("*amp", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>*amp</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(17);
      simpleNode0.setIdentifier("&&");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(17);
      simpleNode0.dump("&&", stringWriter1);
      assertEquals("<VariableDeclarator>\n  <identifier>*amp</identifier>\n</VariableDeclarator>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      StringWriter stringWriter0 = new StringWriter(9);
      simpleNode0.setIdentifier("<=");
      simpleNode0.dump("}", stringWriter0);
      assertEquals("<EnumBody>\n  <identifier>*le</identifier>\n</EnumBody>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.3753841918294416
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      Node[] nodeArray0 = new Node[1];
      simpleNode0.toString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.children = nodeArray0;
      simpleNode0.setIdentifier("y");
      simpleNode0.jjtAddChild((Node) null, 1);
      simpleNode0.jjtAddChild((Node) null, 1);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("<", stringWriter0);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.1123103344201821
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("{", stringWriter0);
      assertEquals("<CompilationUnit>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.8909207651871126
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      simpleNode0.setIdentifier("ClassOrInterfaceBody");
      SimpleNode simpleNode1 = new SimpleNode(48);
      int int0 = 5059;
      simpleNode0.jjtAddChild(simpleNode1, 5059);
      StringWriter stringWriter0 = new StringWriter(48);
      simpleNode0.dump("ClassOrInterfaceBody", stringWriter0);
      // Undeclared exception!
      simpleNode0.dump("ClassOrInterfaceBody", stringWriter0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(26);
      simpleNode0.setIdentifier(">>");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(">>", stringWriter0);
      assertEquals("<ExplicitConstructorInvocation>\n  <identifier>*rshft</identifier>\n</ExplicitConstructorInvocation>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(">", stringWriter0);
      assertEquals("<RelationalExpression>\n  <identifier>*gt</identifier>\n</RelationalExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1641933683302232
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      simpleNode0.setIdentifier("}");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("}", stringWriter0);
      assertEquals("<RelationalExpression>\n</RelationalExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(17);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("<<");
      simpleNode0.dump("<<", stringWriter0);
      assertEquals("<VariableDeclarator>\n  <identifier>*lshft</identifier>\n</VariableDeclarator>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(17);
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode((-4205));
      simpleNode0.parent = (Node) simpleNode1;
      Node node0 = simpleNode0.jjtGetParent();
      assertSame(node0, simpleNode1);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(38);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 1877);
      simpleNode0.jjtGetChild(1877);
      assertEquals(1878, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleNode simpleNode0 = new SimpleNode(1);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.toString();
      simpleNode0.children = nodeArray0;
      simpleNode0.setIdentifier("PackageDeclaration");
      simpleNode0.jjtAddChild((Node) null, 1);
      simpleNode0.jjtAddChild((Node) null, 1);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.jjtAddChild((Node) null, 1);
      assertEquals(2, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(4);
      SimpleNode simpleNode0 = new SimpleNode(4);
      simpleNode0.setIdentifier((String) null);
      // Undeclared exception!
      try { 
        simpleNode0.dump((String) null, stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0676032882216056
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(17);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("", stringWriter0);
      assertEquals("<VariableDeclarator>\n</VariableDeclarator>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 1);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-114307594));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -114307594
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.setIdentifier("^-oeW");
      String string0 = simpleNode0.toString();
      assertEquals("PackageDeclaration : ^-oeW", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(17);
      JavaParser javaParser0 = new JavaParser(">=");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 17);
      simpleNode1.jjtAddChild(simpleNode0, 17);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.dump(">=", stringWriter0);
      assertEquals(18, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtSetParent(nodeArray0[1]);
      simpleNode0.toString();
      Node node0 = simpleNode0.jjtGetParent();
      simpleNode0.jjtClose();
      assertSame(simpleNode0, node0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(70);
      SimpleNode simpleNode1 = new SimpleNode(70);
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode0.setIdentifier("~");
      assertFalse(simpleNode0.equals((Object)simpleNode1));
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      SimpleNode simpleNode1 = new SimpleNode(48);
      simpleNode0.jjtAddChild(simpleNode1, 5059);
      StringWriter stringWriter0 = new StringWriter(48);
      simpleNode0.jjtGetChild(5059);
      assertEquals(5060, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetNumChildren();
      Node node0 = simpleNode0.jjtGetChild(1);
      simpleNode0.toString();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtClose();
      assertSame(simpleNode0, node0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-18));
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("y");
      // Undeclared exception!
      try { 
        simpleNode0.dump("y", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1994249972));
      simpleNode0.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1994249972));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.setIdentifier("^-oeW");
      simpleNode0.toString("t");
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-42));
      simpleNode0.jjtAddChild((Node) null, 1262);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(1263, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-2554));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2554
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(17);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<", stringWriter0);
      assertEquals("<VariableDeclarator>\n  <identifier>*lt</identifier>\n</VariableDeclarator>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("y");
      simpleNode0.dump("<", stringWriter0);
      assertEquals("<PackageDeclaration>\n  <identifier>y</identifier>\n</PackageDeclaration>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.872328712831577
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("y");
      simpleNode0.dump("y", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>y</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(17);
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(">=", stringWriter0);
      assertEquals("<VariableDeclarator>\n  <identifier>*ge</identifier>\n</VariableDeclarator>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("<=");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1));
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 2905);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1971);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(30);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.setIdentifier("<");
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(30);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 30
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1087893299));
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1445023633));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleNode simpleNode0 = new SimpleNode(26);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("18O", stringWriter0);
      assertEquals("", stringWriter0.toString());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.dump("", stringWriter0);
      assertEquals("", stringWriter0.toString());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(5181);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent((Node) null);
      // Undeclared exception!
      try { 
        simpleNode0.toString("Literal");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5181
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtOpen();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }
}
