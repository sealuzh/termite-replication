/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 02:04:18 GMT 2019
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.044660958059312
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDisplayName();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.WIN_STRING = ">-<,>,<,Resultset\n";
      resultMatrixCSV0.getSignificance(0, 1);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.6596072565302733
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.setStdDevPrec(923);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixCSV0.setMean(2742, 1, 923);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.6172805060718685
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringKey();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[7];
      intArray0[0] = 2;
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 0;
      intArray0[4] = 1;
      intArray0[5] = 1;
      resultMatrixPlainText0.m_RowNameWidth = 0;
      intArray0[6] = 2;
      resultMatrixPlainText0.setColOrder(intArray0);
      resultMatrixPlainText0.getDisplayRow(0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.2367626210831992
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[7][4];
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.setColHidden(114, true);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.537007992777885
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringRanking();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixLatex0.setRowNameWidth(0);
      resultMatrixPlainText0.getVisibleColCount();
      resultMatrixLatex0.getRevision();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.padString("", (-482), true);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.753528207894238
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(32, 32);
      resultMatrixPlainText0.m_SignificanceWidth = 32;
      int[][] intArray0 = new int[3][9];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[6];
      intArray2[0] = 1;
      intArray2[1] = 32;
      intArray2[2] = 2;
      intArray2[3] = 2;
      intArray2[4] = 32;
      intArray2[5] = 32;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[4];
      intArray3[0] = 1;
      intArray3[1] = 32;
      intArray3[2] = 1;
      intArray3[3] = 2;
      intArray0[2] = intArray3;
      resultMatrixPlainText0.m_Significance = intArray0;
      resultMatrixPlainText0.clear();
      resultMatrixPlainText0.setColNameWidth(32);
      resultMatrixPlainText0.getDisplayCol(383);
      resultMatrixPlainText0.toStringKey();
      // Undeclared exception!
      resultMatrixPlainText0.toStringMatrix();
  }

  /**
  //Test case number: 6
  /*Coverage entropy=4.157980766937764
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toString();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(51, 0);
      resultMatrixGnuPlot1.getMean(1, (-935));
      resultMatrixGnuPlot0.getOptions();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getHeader("</b> = ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.583282951731786
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.TIE_STRING = "v";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.setStdDevPrec(49);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.getSignificance(0, (-451));
      resultMatrixGnuPlot0.getRevision();
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.8484507519341995
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.getColName(4892);
      resultMatrixSignificance0.toStringSummary();
      int[] intArray0 = new int[0];
      resultMatrixPlainText0.getOptions();
      resultMatrixPlainText0.setEnumerateColNames(true);
      resultMatrixSignificance0.m_RankingLosses = intArray0;
      resultMatrixCSV0.clear();
      resultMatrixPlainText0.getSummaryTitle(1);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-summary data not set-";
      stringArray0[1] = "*";
      stringArray0[2] = "]";
      stringArray0[3] = "v";
      stringArray0[4] = " ";
      stringArray0[5] = "]";
      stringArray0[6] = "v";
      resultMatrixPlainText0.m_ColNames = stringArray0;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getSignificanceCount(3, 112);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.5394719326729165
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 1);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getHeader("v");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.35248500829293
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringKey();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "$circ$";
      stringArray0[1] = "$\bullet$";
      stringArray0[2] = "$\bullet$";
      stringArray0[3] = "(";
      stringArray0[4] = "(";
      resultMatrixCSV0.m_RowNames = stringArray0;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getVisibleRowCount();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=4.212723170269676
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixPlainText0.getRowName(0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV2.setMeanWidth((-482));
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1157, 2);
      resultMatrixHTML0.getDisplayCol(1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setPrintRowNames(false);
      resultMatrixGnuPlot0.getOptions();
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.5996574097895673
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      resultMatrixLatex0.padString("ck+q^rWe#ZC2Um%a~", 1);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex0.setSignificance(0, 2, 56);
      resultMatrixLatex0.getAverage(0);
      resultMatrixLatex0.getDisplayRow(56);
      resultMatrixPlainText0.setStdDev(0, 0, 0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.7176082976863896
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.assign(resultMatrixHTML0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_SignificanceWidth = 1;
      resultMatrixGnuPlot0.getOptions();
      resultMatrixLatex0.enumerateRowNamesTipText();
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.934761771249458
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(5, 1);
      resultMatrixGnuPlot0.setSignificanceWidth((-2265));
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getOptions();
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.492330913009773
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 0);
      resultMatrixGnuPlot0.setSignificanceWidth(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getSignificance((-885), (-2215));
  }

  /**
  //Test case number: 16
  /*Coverage entropy=4.082856686800482
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(1, 2);
      int[] intArray0 = new int[1];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColOrder(intArray0);
      resultMatrixPlainText0.toString();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringSummary();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV1.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(0, 11);
      int[][] intArray1 = new int[5][2];
      int[] intArray2 = new int[7];
      intArray2[0] = 1;
      intArray2[1] = 0;
      intArray2[2] = 2;
      intArray2[3] = 2;
      intArray2[4] = 11;
      intArray2[5] = 1;
      intArray2[6] = 0;
      intArray1[0] = intArray2;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      int[] intArray3 = new int[6];
      intArray3[0] = 649;
      intArray3[1] = 0;
      intArray3[2] = 1;
      intArray3[3] = 2;
      intArray3[4] = 5035;
      intArray3[5] = 0;
      intArray1[3] = intArray3;
      intArray1[4] = intArray0;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSummary(intArray1, intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.681048716550441
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 673);
      resultMatrixPlainText0.setEnumerateRowNames(false);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.3969155645534506
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringKey();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.setSignificanceWidth(0);
      resultMatrixCSV0.getVisibleRowCount();
      resultMatrixLatex0.rowNameWidthTipText();
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 2;
      resultMatrixLatex0.setColOrder(intArray0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.9785352483796803
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 0);
      ResultMatrixPlainText.main((String[]) null);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixHTML0.stdDevWidthTipText();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixHTML0.isSignificance(0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.2381553778974093
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringRanking();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.getColName(0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "(";
      stringArray0[1] = ")";
      stringArray0[2] = "$\bullet$";
      resultMatrixLatex0.m_RowNames = stringArray0;
      int int0 = 1383;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.assign(resultMatrixLatex0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.4342348975337873
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_PrintColNames = false;
      String[] stringArray0 = new String[1];
      resultMatrixGnuPlot0.showAverageTipText();
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.848028982193545
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      int[] intArray0 = new int[10];
      intArray0[0] = 2;
      resultMatrixLatex0.setRowOrder(intArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixLatex0.setShowStdDev(false);
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixLatex0.getRemoveFilterName();
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.834677048500196
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixGnuPlot0.setSignificanceWidth(1);
      resultMatrixGnuPlot0.getOptions();
  }

  /**
  //Test case number: 24
  /*Coverage entropy=4.21354167341515
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixPlainText0.setColOrder((int[]) null);
      ResultMatrixPlainText.main((String[]) null);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixSignificance0.getPrintColNames();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "v";
      stringArray0[1] = ")";
      ResultMatrixSignificance.main(stringArray0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.6752913994087195
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixGnuPlot0.getSignificanceCount(0, 727);
      resultMatrixSignificance0.printColNamesTipText();
  }

  /**
  //Test case number: 26
  /*Coverage entropy=4.162199248309479
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toString();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 0);
      resultMatrixGnuPlot0.getMean(0, 1);
      resultMatrixGnuPlot0.getOptions();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getHeader("%OmA!X{@',v&`g)$MH");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.585666109272293
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.meanPrecTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixCSV0.m_RemoveFilterName = true;
      resultMatrixSignificance0.setPrintColNames(true);
      resultMatrixSignificance0.setRowNameWidth(1);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixLatex0.getColHidden(2);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.434635057597813
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getColHidden((-4022));
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.7813546844218786
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[1];
      resultMatrixSignificance0.getRowName(1);
      stringArray0[0] = " ";
      resultMatrixSignificance0.setOptions(stringArray0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.5414549530608452
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML0.getDisplayCol(0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.8593252750708182
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixPlainText0.getRowName(0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(47, 0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(1, 1);
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixCSV1.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "*";
      resultMatrixSignificance0.getPrintColNames();
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.375042818432457
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringSummary();
      resultMatrixLatex0.doubleToString(0, 1);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(32, 1);
      resultMatrixCSV0.getStdDev((-1887), 2);
      resultMatrixPlainText0.removeFilterName("I");
      resultMatrixPlainText0.clear();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 2);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(918, 0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixSignificance1);
      resultMatrixCSV1.getVisibleRowCount();
  }

  /**
  //Test case number: 33
  /*Coverage entropy=4.169655708060474
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixPlainText0.toStringSummary();
      resultMatrixLatex0.doubleToString(1062.5899682763372, 2);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(3384, 0);
      resultMatrixCSV0.getStdDev(0, (-27));
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.clear();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.632700919839764
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.getDisplayCol((-2793));
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.09513440312089
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      int[] intArray0 = new int[1];
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.getMean((-2282), 3879);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.632388625867038
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringRanking();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.getColName((-1053));
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(2, 2);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=4.2832162609051
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixPlainText0.toStringSummary();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-summary data not set-";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.m_EnumerateColNames = false;
      resultMatrixSignificance0.toStringKey();
      resultMatrixSignificance0.setPrintRowNames(false);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.setStdDevWidth((-818));
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixHTML1.m_HeaderKeys = vector0;
      // Undeclared exception!
      try { 
        resultMatrixHTML1.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.4302520185125758
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixGnuPlot0.getSignificanceCount(0, 727);
      resultMatrixSignificance0.isMean(180);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=4.163501237769125
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML0.addHeader("*", "v");
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance1.toStringKey();
      resultMatrixSignificance1.setPrintRowNames(false);
      resultMatrixSignificance0.setPrintRowNames(true);
      ResultMatrixLatex.main((String[]) null);
      resultMatrixSignificance0.setCount(1, 1);
      resultMatrixSignificance1.setPrintRowNames(true);
      resultMatrixSignificance0.globalInfo();
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.7774012156225965
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixPlainText0.getRowName(0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.toArray();
      resultMatrixCSV0.getStdDevPrec();
      resultMatrixHTML0.assign(resultMatrixCSV0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.globalInfo();
      resultMatrixGnuPlot0.setMeanPrec(0);
      resultMatrixHTML0.toStringSummary();
      resultMatrixGnuPlot0.getSummaryTitle(1);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(0, 431);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 47);
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML2.setPrintColNames(false);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.768233001916796
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixGnuPlot0.getSignificanceCount(1, 0);
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixCSV0.getEnumerateRowNames();
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.7919556837138177
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 5);
      resultMatrixGnuPlot0.getMean(1, 2347);
      resultMatrixGnuPlot0.getOptions();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=4.070657201389438
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.TIE_STRING = "v";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 0);
      resultMatrixGnuPlot0.getMean(1, 1);
      resultMatrixGnuPlot0.getOptions();
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.9626189519739743
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[][] stringArray0 = new String[5][9];
      String[] stringArray1 = new String[5];
      stringArray1[0] = "(";
      stringArray1[1] = "v";
      stringArray1[2] = "(";
      stringArray1[3] = "v";
      stringArray1[4] = ")";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[7];
      stringArray2[0] = " ";
      stringArray2[1] = " ";
      stringArray2[2] = "v";
      stringArray2[3] = "(";
      stringArray2[4] = " ";
      stringArray2[5] = "(";
      stringArray2[6] = "(";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[7];
      stringArray3[0] = " ";
      stringArray3[1] = "";
      stringArray3[2] = " ";
      stringArray3[3] = "v";
      stringArray3[4] = ")";
      stringArray3[5] = "(";
      stringArray3[6] = "v";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[5];
      stringArray4[0] = "v";
      stringArray4[1] = "v";
      stringArray4[2] = "";
      stringArray4[3] = " ";
      stringArray4[4] = "*";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[1];
      stringArray5[0] = " ";
      stringArray0[4] = stringArray5;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getColSize(stringArray0, 1, false, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.8095695893638433
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(901, 0);
      String[] stringArray0 = resultMatrixLatex0.getOptions();
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.getDefaultPrintColNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 2;
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[4] = 0;
      resultMatrixHTML0.m_RankingLosses = intArray0;
      resultMatrixLatex0.clearHeader();
      resultMatrixHTML0.getDisplayName();
      resultMatrixLatex0.getRowHidden(16);
      String[][] stringArray1 = new String[2][9];
      stringArray1[0] = stringArray0;
      stringArray1[1] = stringArray0;
      resultMatrixLatex0.getColSize(stringArray1, 0, true, true);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.9776602729764075
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[9][4];
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.getDefaultSignificanceWidth();
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.1958458679084263
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixLatex0.setRowOrder(intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixLatex0.toStringRanking();
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.230386047717229
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixGnuPlot0.m_RowNameWidth = 30;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.getSignificanceCount((-4670), 0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.4426497109281535
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      int int0 = 56;
      // Undeclared exception!
      try { 
        resultMatrixLatex1.padString((String) null, (-3325));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=4.225922675063825
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText.main((String[]) null);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.setPrintColNames(true);
      resultMatrixGnuPlot0.getDefaultRemoveFilterName();
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.525134944069218
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      double[][] doubleArray0 = new double[9][6];
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = (double) 2;
      doubleArray1[1] = (double) 2;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[8];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = (double) 1;
      doubleArray2[3] = (double) 0;
      doubleArray2[4] = (double) 0;
      doubleArray2[5] = (double) 0;
      doubleArray2[6] = (double) 0;
      doubleArray2[7] = (double) 0;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[4];
      doubleArray3[0] = (double) 2;
      doubleArray3[1] = (double) 56;
      doubleArray3[2] = (double) 0;
      doubleArray3[3] = (double) 1;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[4];
      doubleArray4[0] = (double) 1;
      doubleArray4[1] = (double) 2;
      doubleArray4[2] = (double) 0;
      doubleArray4[3] = (double) 0;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[2];
      doubleArray5[0] = (double) 1;
      doubleArray5[1] = (double) 0;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[5];
      doubleArray6[0] = (double) 1;
      doubleArray6[1] = (double) 56;
      doubleArray6[2] = (double) 2;
      doubleArray6[3] = Double.NaN;
      doubleArray6[4] = (double) 0;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[8];
      doubleArray7[0] = 100.0;
      doubleArray7[1] = (double) 0;
      doubleArray7[2] = (double) 1;
      doubleArray7[3] = 1901.0;
      doubleArray7[4] = (double) 56;
      doubleArray7[5] = Double.NaN;
      doubleArray7[6] = (double) 1;
      doubleArray7[7] = Double.NaN;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[6];
      doubleArray8[0] = (double) 2;
      doubleArray8[1] = (double) 0;
      doubleArray8[2] = 0.0;
      doubleArray8[3] = 1901.0;
      doubleArray8[4] = (double) 2;
      doubleArray8[5] = 0.0;
      doubleArray0[7] = doubleArray8;
      double[] doubleArray9 = new double[8];
      doubleArray9[0] = (double) 0;
      doubleArray9[1] = (double) 2;
      doubleArray9[2] = 100.0;
      doubleArray9[3] = 0.0;
      doubleArray9[4] = 100.0;
      doubleArray9[5] = (double) 1;
      doubleArray9[6] = (double) 2;
      doubleArray9[7] = Double.NaN;
      doubleArray0[8] = doubleArray9;
      resultMatrixLatex0.m_Mean = doubleArray0;
      resultMatrixLatex1.padString("ck+q^rWe#ZC2Um%a~", 1);
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex1.setSignificance(0, 2, 56);
      resultMatrixLatex1.getAverage(0);
      resultMatrixLatex1.getDisplayRow(56);
      resultMatrixLatex1.getColOrder();
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.3983689473017975
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringKey();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.getVisibleRowCount();
      resultMatrixLatex0.getPrintRowNames();
  }

  /**
  //Test case number: 53
  /*Coverage entropy=4.188826369922412
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      int[][] intArray0 = new int[1][7];
      int[] intArray1 = new int[2];
      intArray1[0] = 2;
      intArray1[1] = 1;
      intArray0[0] = intArray1;
      resultMatrixHTML1.setSummary(intArray0, intArray0);
      resultMatrixHTML1.setPrintRowNames(false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColOrder(intArray1);
      ResultMatrixPlainText.main((String[]) null);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 3257);
      resultMatrixSignificance0.setRowName(0, (String) null);
      resultMatrixSignificance0.getRevision();
  }

  /**
  //Test case number: 54
  /*Coverage entropy=4.213539702149971
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixPlainText0.toStringSummary();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setMeanWidth(0);
      String[] stringArray0 = new String[0];
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance0.toStringKey();
      resultMatrixSignificance1.setPrintRowNames(false);
      resultMatrixSignificance1.setPrintRowNames(false);
      ResultMatrixLatex.main(stringArray0);
      resultMatrixSignificance1.setCount((-541), 0);
      resultMatrixSignificance0.setPrintRowNames(true);
      resultMatrixSignificance0.globalInfo();
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.3433239325162116
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 1114);
      resultMatrixPlainText0.getVisibleColCount();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
  }

  /**
  //Test case number: 56
  /*Coverage entropy=4.1888257772486694
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(1, 2);
      int[] intArray0 = new int[1];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColOrder(intArray0);
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixHTML0.getDefaultEnumerateRowNames();
  }

  /**
  //Test case number: 57
  /*Coverage entropy=4.13462757984473
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      resultMatrixLatex0.assign(resultMatrixPlainText0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      resultMatrixLatex0.isAverage((-111));
      assertEquals(5, resultMatrixLatex0.getCountWidth());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.3991981138967837
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixLatex0.getRevision();
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
      
      int int0 = resultMatrixGnuPlot0.getSignificanceCount(1, 1);
      assertEquals(0, int0);
      assertEquals(0, resultMatrixGnuPlot0.getDefaultSignificanceWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.676414486085651
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.addHeader("v", "scriptsize\n");
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = (-1);
      resultMatrixLatex0.setRowOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringSummary();
      resultMatrixLatex0.doubleToString((-1), 3368);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColOrder(intArray0);
      resultMatrixSignificance0.setRowName((-1), " ");
      resultMatrixSignificance0.toStringKey();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      String string0 = resultMatrixGnuPlot0.toStringKey();
      assertEquals(0, resultMatrixSignificance0.getDefaultColNameWidth());
      assertEquals("Key:\n(1) col0\n", string0);
      assertTrue(resultMatrixSignificance0.getPrintColNames());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertTrue(resultMatrixSignificance0.getDefaultEnumerateColNames());
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.673348254400518
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixPlainText0.toStringSummary();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(18, stringArray0.length);
      
      resultMatrixPlainText0.getStdDevWidth();
      String[][] stringArray1 = new String[9][7];
      stringArray1[0] = stringArray0;
      stringArray1[1] = stringArray0;
      stringArray1[2] = stringArray0;
      stringArray1[3] = stringArray0;
      stringArray1[4] = stringArray0;
      stringArray1[5] = stringArray0;
      stringArray1[6] = stringArray0;
      stringArray1[7] = stringArray0;
      stringArray1[8] = stringArray0;
      int int0 = resultMatrixGnuPlot1.getColSize(stringArray1, 2);
      assertTrue(resultMatrixGnuPlot1.getEnumerateColNames());
      assertEquals(12, int0);
      assertEquals(0, resultMatrixGnuPlot1.getMeanWidth());
      assertEquals(5, resultMatrixGnuPlot1.getCountWidth());
      assertEquals(1, resultMatrixGnuPlot1.getVisibleRowCount());
      assertEquals(0, resultMatrixGnuPlot1.getSignificanceWidth());
      assertEquals(25, resultMatrixGnuPlot1.getRowNameWidth());
      assertTrue(resultMatrixGnuPlot1.getPrintColNames());
      assertEquals(2, resultMatrixGnuPlot1.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot1.getDefaultCountWidth());
      assertEquals(2, resultMatrixGnuPlot1.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot1.getStdDevWidth());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.4978440034447593
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixPlainText0.getRowName(0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColOrder((int[]) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "(";
      stringArray0[1] = "v";
      stringArray0[2] = "(";
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText1);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.removeFilterName("v");
      int int0 = ResultMatrix.SIGNIFICANCE_WIN;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getColSize((String[][]) null, 57);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.7934214070671315
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.setEnumerateRowNames(true);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixCSV0.getSignificance((-4279), (-4279));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringRanking();
      resultMatrixHTML0.setColHidden(2112, false);
      String[][] stringArray0 = new String[4][0];
      String[] stringArray1 = new String[9];
      stringArray1[0] = ")";
      stringArray1[1] = "(";
      stringArray1[2] = "O~r[";
      stringArray1[3] = "*";
      stringArray1[4] = ")";
      stringArray1[5] = " ";
      stringArray1[6] = "$circ$";
      stringArray1[7] = "v";
      stringArray1[8] = ")";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[3];
      stringArray2[0] = ")";
      stringArray2[1] = ")";
      stringArray2[2] = "*";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[2];
      stringArray3[0] = "v";
      stringArray3[1] = "(";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[9];
      stringArray4[0] = "*";
      stringArray4[1] = " ";
      stringArray4[2] = "*";
      stringArray4[3] = "Can't construct a path to file relative to user dir.";
      stringArray4[4] = " ";
      stringArray4[5] = "v";
      stringArray4[6] = ")";
      stringArray4[7] = "v";
      stringArray4[8] = " ";
      stringArray0[3] = stringArray4;
      int int0 = resultMatrixCSV0.getColSize(stringArray0, (-1));
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, int0);
      assertEquals(0, resultMatrixCSV0.getDefaultCountWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(5, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=4.094344340786487
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      
      resultMatrixLatex1.setPrintRowNames(false);
      resultMatrixLatex1.getColNameWidth();
      resultMatrixLatex0.getRevision();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 2);
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixGnuPlot0.setRowNameWidth(0);
      resultMatrixLatex1.isAverage(0);
      resultMatrixLatex1.getDefaultShowStdDev();
      resultMatrixGnuPlot0.toArray();
      resultMatrixGnuPlot0.getEnumerateColNames();
      String[][] stringArray0 = new String[9][9];
      String[] stringArray1 = new String[4];
      stringArray1[0] = " ";
      stringArray1[1] = "$circ$";
      stringArray1[2] = ")";
      stringArray1[3] = ")";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[1];
      stringArray2[0] = "";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[4];
      stringArray3[0] = "";
      stringArray3[1] = "$circ$";
      stringArray3[2] = "";
      stringArray3[3] = "(";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[0];
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[4];
      stringArray5[0] = ")";
      stringArray5[1] = "";
      stringArray5[2] = "$\bullet$";
      stringArray5[3] = "";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[9];
      stringArray6[0] = "y;*JVOBSvx3}V2aTv";
      stringArray6[1] = ")";
      stringArray6[2] = " ";
      stringArray6[3] = " ";
      stringArray6[4] = "(";
      stringArray6[5] = "(";
      stringArray6[6] = "$circ$";
      stringArray6[7] = "$\bullet$";
      stringArray6[8] = "$circ$";
      stringArray0[5] = stringArray6;
      String[] stringArray7 = new String[2];
      stringArray7[0] = "(";
      stringArray7[1] = "8034";
      stringArray0[6] = stringArray7;
      String[] stringArray8 = new String[3];
      stringArray8[0] = "(";
      stringArray8[1] = ")";
      stringArray8[2] = "$\bullet$";
      stringArray0[7] = stringArray8;
      String[] stringArray9 = new String[3];
      stringArray9[0] = "$circ$";
      stringArray9[1] = "";
      stringArray9[2] = "$\bullet$";
      stringArray0[8] = stringArray9;
      resultMatrixLatex0.getColSize(stringArray0, 384);
      assertTrue(resultMatrixLatex0.getPrintRowNames());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.8885295651184153
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringSummary();
      resultMatrixLatex0.doubleToString(9.223372036854776E18, 2);
      resultMatrixLatex0.padString(" ", 0);
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(resultMatrixLatex1);
      resultMatrixLatex2.setSignificance(1, 26, (-1120));
      ResultMatrixLatex resultMatrixLatex3 = new ResultMatrixLatex(resultMatrixLatex2);
      double double0 = resultMatrixLatex3.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      resultMatrixLatex2.getDisplayRow(2);
      assertEquals(2, resultMatrixLatex2.getMeanPrec());
      assertEquals(0, resultMatrixLatex2.getMeanWidth());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixPlainText0.getDefaultRowNameWidth();
      assertTrue(resultMatrixPlainText0.getPrintColNames());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.4209424693815826
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.setStdDevPrec(923);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.getSignificance(0, 2);
      assertEquals(923, resultMatrixLatex0.getStdDevPrec());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 2);
      resultMatrixSignificance0.setShowAverage(true);
      resultMatrixSignificance0.getDisplayName();
      assertTrue(resultMatrixSignificance0.getShowAverage());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.5869816845801274
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(12, 12);
      resultMatrixHTML0.clearSummary();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.getDisplayName();
      int int0 = ResultMatrix.SIGNIFICANCE_WIN;
      resultMatrixHTML0.globalInfo();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(9, 12);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixLatex0.setStdDevPrec(4);
      resultMatrixLatex0.getDefaultColNameWidth();
      resultMatrixLatex0.isRowName(0);
      resultMatrixLatex0.m_MeanPrec = 1;
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixHTML0.setEnumerateRowNames(true);
      resultMatrixHTML0.doubleToString((-2639.4025236329353), 12);
      int int1 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(431, 0);
      resultMatrixPlainText0.toStringKey();
      resultMatrixLatex0.getDefaultPrintColNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixPlainText0.toStringRanking();
      resultMatrixGnuPlot0.setColName(1, "{o,");
      resultMatrixLatex0.listOptions();
      assertEquals(4, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.7504935784296136
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixPlainText0.getRowName(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.getOptions();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getHeader("v");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.9099139454873777
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.listOptions();
      int int0 = 214;
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(0, 214);
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText2.toString();
      resultMatrixPlainText0.setStdDevPrec(2);
      resultMatrixPlainText1.getRowHidden(0);
      resultMatrixPlainText2.toArray();
      resultMatrixPlainText1.clearHeader();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText2);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.633124547682704
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML0.addHeader("*", "v");
      int[][] intArray0 = new int[8][0];
      int[] intArray1 = new int[1];
      intArray1[0] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.setRowOrder(intArray1);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringSummary();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(13, 13);
      resultMatrixCSV0.getStdDev(1, 2);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.6581406285978857
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 1);
      int int0 = resultMatrixGnuPlot0.getSignificanceCount(0, 0);
      assertEquals(0, int0);
      
      resultMatrixGnuPlot0.setMean(0, 0, 2);
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      
      resultMatrixSignificance0.getEnumerateColNames();
      String[][] stringArray0 = resultMatrixSignificance0.toArray();
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(3, stringArray0.length);
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.7484762785131593
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getRowName(25);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(2, 25);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.getColName(2);
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.colNameWidthTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 0);
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"(1) col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      boolean boolean0 = resultMatrixGnuPlot0.isRowName(0);
      assertTrue(boolean0);
      
      resultMatrixCSV0.getRowName(8);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(5, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.632500203953102
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.m_RankingLosses = null;
      int[] intArray0 = new int[1];
      resultMatrixLatex0.setRowOrder(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(0, 0);
      boolean boolean0 = resultMatrixHTML0.getEnumerateRowNames();
      assertFalse(boolean0);
      
      resultMatrixLatex0.getDefaultCountWidth();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      
      resultMatrixGnuPlot1.significanceWidthTipText();
      assertEquals(0, resultMatrixGnuPlot1.getColCount());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.3425259672676573
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML1);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixLatex0.setRowOrder(intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getMeanWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.3900391144458184
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.TIE_STRING = "v";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixGnuPlot0.setMeanWidth(2);
      assertEquals(2, resultMatrixGnuPlot0.getMeanWidth());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(1, 0);
      resultMatrixHTML0.getDisplayCol(0);
      resultMatrixCSV0.getDisplayName();
      int int0 = resultMatrixHTML0.getDefaultColNameWidth();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.7174180989206764
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(3, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixPlainText0.listOptions();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.getDefaultCountWidth();
      resultMatrixLatex1.setRowName(1116, "*");
      resultMatrixPlainText0.setMean((-604), 312, 0.0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.headerKeys();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixCSV0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot(0, 3994);
      // Undeclared exception!
      resultMatrixGnuPlot2.toStringSummary();
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.7550016039932608
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(12, 12);
      resultMatrixHTML0.clearSummary();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.getDefaultStdDevPrec();
      resultMatrixLatex0.removeFilterNameTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(9, 12);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixLatex0.setStdDevPrec(4);
      resultMatrixLatex0.getDefaultColNameWidth();
      resultMatrixLatex0.isRowName(0);
      resultMatrixLatex0.m_MeanPrec = 1;
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixHTML0.setEnumerateRowNames(true);
      resultMatrixHTML0.doubleToString((-2639.4025236329353), 12);
      resultMatrixLatex0.getMeanWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(431, 0);
      resultMatrixPlainText0.toStringKey();
      resultMatrixLatex0.getDefaultPrintColNames();
      resultMatrixLatex0.getDefaultCountWidth();
      resultMatrixLatex0.setRowName(1794, "*");
      assertEquals(4, resultMatrixLatex0.getStdDevPrec());
      
      resultMatrixPlainText0.setMean(9, 423, 0);
      resultMatrixHTML0.headerKeys();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML1);
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixPlainText0.setRowHidden(0, false);
      assertFalse(resultMatrixPlainText0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=4.213518710605709
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML0.addHeader("*", "v");
      int[][] intArray0 = new int[8][0];
      int[] intArray1 = new int[1];
      intArray1[0] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColOrder(intArray2);
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixSignificance0.setRowName(1, "z!S,,W&6'H:");
      resultMatrixSignificance0.getRevision();
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=4.261146850539629
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(12, 12);
      resultMatrixHTML0.clearSummary();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.getDefaultStdDevPrec();
      resultMatrixLatex0.removeFilterNameTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(9, 12);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixLatex0.setStdDevPrec(4);
      resultMatrixLatex0.getDefaultColNameWidth();
      resultMatrixLatex0.isRowName(0);
      resultMatrixLatex0.m_MeanPrec = 1;
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixHTML0.setEnumerateRowNames(true);
      resultMatrixHTML0.doubleToString((-2639.4025236329353), 12);
      resultMatrixLatex0.getMeanWidth();
      resultMatrixLatex0.doubleToString(4, 1);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[4];
      resultMatrixSignificance0.m_CountWidth = 2;
      assertEquals(2, resultMatrixSignificance0.getCountWidth());
      
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 9;
      intArray0[3] = 2;
      resultMatrixPlainText0.setColOrder(intArray0);
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixPlainText0.setRowHidden(1, false);
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.8654910822836026
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.TIE_STRING = "v";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(1, 0);
      assertEquals(1, resultMatrixCSV1.getVisibleColCount());
      
      int int0 = resultMatrixHTML0.getDisplayCol(0);
      assertEquals(0, int0);
      
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(18, stringArray0.length);
      
      double double0 = resultMatrixCSV0.getCount(2);
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0.0, double0, 0.01);
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.6312207116556454
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML1);
      resultMatrixHTML0.setEnumerateRowNames(false);
      String string0 = resultMatrixGnuPlot0.toStringKey();
      assertEquals("Key:\n(1) col0\n", string0);
      
      resultMatrixHTML1.globalInfo();
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(25, resultMatrixHTML1.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      
      resultMatrixHTML0.getCount(2);
      resultMatrixHTML0.meanWidthTipText();
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      assertFalse(resultMatrixHTML0.getDefaultEnumerateRowNames());
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.3772956749412346
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_MeanPrec = 2;
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      
      int int0 = resultMatrixGnuPlot0.getSignificanceCount(0, 727);
      assertEquals(0, int0);
      
      boolean boolean0 = resultMatrixGnuPlot0.getShowStdDev();
      assertFalse(boolean0);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultSignificanceWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=4.107800336251813
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.toString();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getMean(0, 1);
      int int0 = resultMatrixGnuPlot0.getSignificanceCount(2, 2);
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.383428229142256
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.toStringKey();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption (Key)}\n\\scriptsize\n{\\centering\n\\begin{tabular}{cl}\\\\\n(1) & col0 \\\\\n\\end{tabular}\n}\n\\end{table}\n", string0);
      
      int[] intArray0 = new int[0];
      resultMatrixLatex0.setRowOrder(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 16);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.getEnumerateRowNames();
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertFalse(resultMatrixHTML0.getDefaultShowAverage());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.303552210150394
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      int int0 = resultMatrixHTML0.getDisplayCol(0);
      assertEquals(0, int0);
      
      String string0 = resultMatrixHTML0.padString("", 0);
      assertEquals("", string0);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.toStringRanking();
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertTrue(resultMatrixLatex0.getPrintColNames());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.4902330800032058
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      String string0 = resultMatrixLatex0.padString("ck+q^rWe#ZC2Um%a~", 1);
      assertEquals("c", string0);
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.setSignificance(0, 2, 56);
      double double0 = resultMatrixLatex0.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      int int0 = resultMatrixLatex1.getDisplayRow(1);
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(5, resultMatrixLatex1.getCountWidth());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
      assertEquals((-1), int0);
      assertTrue(resultMatrixLatex1.getPrintColNames());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.2552356970680236
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[4];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixPlainText0.toStringSummary();
      resultMatrixLatex0.doubleToString(1062.5899682763372, 2);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(3384, 0);
      resultMatrixCSV0.getStdDev(0, 0);
      // Undeclared exception!
      resultMatrixCSV0.toStringHeader();
  }

  /**
  //Test case number: 87
  /*Coverage entropy=4.099239738180067
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(3, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixPlainText0.listOptions();
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 '' '' ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"(1) col0\"\nreplot \"plot.dat\" using 1:3 with lines title \"(2) col1\"\nreplot \"plot.dat\" using 1:4 with lines title \"(3) col2\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      resultMatrixGnuPlot0.setColName((-1295), "-stddev-prec");
      resultMatrixLatex0.listOptions();
      resultMatrixLatex0.getDefaultPrintColNames();
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.355004209521809
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixPlainText0.toStringSummary();
      String string0 = resultMatrixLatex0.doubleToString(1062.5899682763372, 2);
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(5, resultMatrixLatex0.getCountWidth());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals("1062.59", string0);
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(3384, 0);
      resultMatrixCSV0.getStdDev(0, 17);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 0);
      resultMatrixGnuPlot0.stdDevPrecTipText();
      int int0 = resultMatrixGnuPlot0.getSignificanceCount(97, 2844);
      assertEquals(0, int0);
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.3544130765168827
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixPlainText0.toStringSummary();
      String string0 = resultMatrixLatex0.doubleToString(1062.5899682763372, 2);
      assertEquals("1062.59", string0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(3384, 0);
      resultMatrixCSV0.getStdDev(0, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.stdDevPrecTipText();
      int int0 = resultMatrixGnuPlot0.getSignificanceCount(97, 2844);
      assertEquals(0, int0);
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(5, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.8967861260132364
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML0.addHeader("*", "v");
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.toString();
      resultMatrixPlainText0.setStdDevPrec(2);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixPlainText0.toArray();
      resultMatrixPlainText0.setShowAverage(false);
      resultMatrixPlainText0.clearHeader();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV1.toStringHeader();
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance((-1281), 15);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=4.05398566366925
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(3, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixPlainText0.listOptions();
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"(1)\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      resultMatrixGnuPlot0.setColName(18, " ");
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      
      resultMatrixLatex0.listOptions();
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=4.054587026481803
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(3, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixPlainText0.listOptions();
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 '' '' ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"(1) col0\"\nreplot \"plot.dat\" using 1:3 with lines title \"(2) col1\"\nreplot \"plot.dat\" using 1:4 with lines title \"(3) col2\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      resultMatrixGnuPlot0.setColName(0, " ");
      assertEquals(5, resultMatrixGnuPlot0.getCountWidth());
      
      resultMatrixLatex0.listOptions();
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.255963201394972
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.meanPrecTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      int int0 = resultMatrixCSV0.getVisibleRowCount();
      assertEquals(1, int0);
      
      resultMatrixCSV0.getDefaultPrintRowNames();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.437921173203319
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.toStringKey();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption (Key)}\n\\scriptsize\n{\\centering\n\\begin{tabular}{cl}\\\\\n(1) & col0 \\\\\n\\end{tabular}\n}\n\\end{table}\n", string0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.setShowStdDev(false);
      int int0 = resultMatrixCSV0.getVisibleRowCount();
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(1, int0);
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertFalse(resultMatrixCSV0.getShowStdDev());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(3, 3);
      resultMatrixGnuPlot0.toStringSummary();
      assertEquals(3, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=4.079702144562981
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setPrintColNames(false);
      resultMatrixGnuPlot0.getOptions();
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.9540341680443203
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[7][4];
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      assertEquals(1, resultMatrixHTML0.getColCount());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = " ";
      stringArray0[1] = "";
      stringArray0[2] = ")";
      stringArray0[3] = "v";
      stringArray0[4] = ")";
      stringArray0[5] = ")";
      stringArray0[6] = "4ppg az&nBfVyu]RW";
      stringArray0[7] = ")";
      stringArray0[8] = ")";
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixHTML0.getDefaultRowNameWidth();
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.6303266889917176
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String string0 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      resultMatrixSignificance0.toStringKey();
      resultMatrixSignificance0.getStdDevPrec();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.globalInfo();
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.8384820636720205
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixPlainText0.toStringSummary();
      resultMatrixLatex0.doubleToString(1062.5899682763372, 2);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(3384, 0);
      int int0 = 0;
      // Undeclared exception!
      resultMatrixCSV0.toString();
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.2913789160859594
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[3][3];
      int[] intArray1 = new int[1];
      intArray1[0] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[6];
      intArray2[0] = 0;
      intArray2[1] = 2;
      intArray2[2] = 1;
      intArray2[3] = 2;
      intArray2[4] = 2;
      intArray2[5] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[9];
      intArray3[0] = 1;
      intArray3[1] = 2;
      intArray3[2] = 1;
      intArray3[3] = 2;
      intArray3[4] = 2;
      intArray3[5] = 2;
      intArray3[6] = 1;
      intArray3[7] = 2;
      intArray3[8] = 2;
      intArray0[2] = intArray3;
      resultMatrixHTML0.m_NonSigWins = intArray0;
      resultMatrixHTML0.getDefaultRowNameWidth();
      int int0 = resultMatrixHTML0.getSignificanceWidth();
      assertEquals(0, int0);
      
      resultMatrixHTML0.setRowName(25, "");
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertFalse(resultMatrixHTML0.getDefaultRemoveFilterName());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.5350233241570344
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 0);
      String string0 = resultMatrixLatex0.padString("%(6Ct&#", 2);
      assertEquals("%(", string0);
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.setSignificance((-1568), 0, 51);
      double double0 = resultMatrixLatex1.getAverage(1);
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertFalse(resultMatrixLatex1.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
      assertEquals(0.0, double0, 0.01);
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      
      int int0 = resultMatrixLatex0.getDisplayRow(635);
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=4.043134368294541
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixPlainText0.getRowName(0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixPlainText0.toArray();
      resultMatrixLatex0.setStdDevPrec((-1));
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.getSignificance(2, 1);
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1008, 2);
      resultMatrixSignificance0.getDisplayName();
      assertEquals(1008, resultMatrixSignificance0.getColCount());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.5396680687913826
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[18];
      resultMatrixLatex0.setRowOrder(intArray0);
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.450281335218399
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[4];
      stringArray0[0] = " ";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixPlainText0.toStringSummary();
      resultMatrixLatex0.doubleToString(1062.5899682763372, 2);
      resultMatrixPlainText0.removeFilterName("");
      resultMatrixPlainText0.clear();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.getVisibleRowCount();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=4.162820905388902
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "*";
      resultMatrixPlainText0.setEnumerateRowNames(false);
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText(resultMatrixPlainText1);
      resultMatrixPlainText1.toString();
      resultMatrixPlainText2.setStdDevPrec(0);
      resultMatrixPlainText2.getRowHidden((-508));
      resultMatrixPlainText1.toArray();
      resultMatrixPlainText1.clearHeader();
      ResultMatrixPlainText resultMatrixPlainText3 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText1.printRowNamesTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText2);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 39);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.6793535537241175
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringRanking();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.getColName(0);
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      String string0 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,(1)\nrow0,''\n'($\\\\circ$/ /$\\\\bullet$)',''\n", string0);
      
      resultMatrixCSV0.setMeanWidth(0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.removeFilterName((String) null);
      resultMatrixPlainText0.clear();
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 1);
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      
      resultMatrixCSV0.getVisibleRowCount();
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.127338682321895
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[2];
      stringArray0[0] = " ";
      resultMatrixPlainText0.toStringSummary();
      resultMatrixPlainText0.toStringRanking();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      // Undeclared exception!
      resultMatrixSignificance0.setSize(69, 1127);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.3022592353136737
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.meanPrecTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.setSize(1, 2);
      resultMatrixCSV0.getVisibleRowCount();
      assertEquals(2, resultMatrixCSV0.getVisibleRowCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 1161);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      assertEquals(1161, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.6284519624080227
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixLatex0.printRowNamesTipText();
      resultMatrixCSV0.showStdDevTipText();
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getShowAverage());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=4.261145690962968
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.setEnumerateRowNames(true);
      resultMatrixPlainText0.toString();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixGnuPlot0.m_RankingWins = intArray0;
      resultMatrixGnuPlot0.getRowNameWidth();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|(";
      ResultMatrixHTML.main(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.4892387670604843
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[7][4];
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      int int0 = resultMatrixCSV0.getVisibleRowCount();
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(1, int0);
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.5372760609118274
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(1, resultMatrixPlainText0.getColCount());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.setRowOrder((int[]) null);
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(5, resultMatrixLatex0.getCountWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.8616684417024008
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      String string0 = resultMatrixPlainText0.toString();
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals("Dataset                                               col0\n----------------------------------------------------------\nrow0                                              (0)    |\n----------------------------------------------------------\nv/ /*                                                    |\n", string0);
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML1.getColCount());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=4.136767829120822
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.setEnumerateRowNames(false);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText1.toString();
      resultMatrixPlainText1.setStdDevPrec(0);
      resultMatrixPlainText1.getRowHidden(2);
      resultMatrixPlainText0.toArray();
      resultMatrixPlainText1.clearHeader();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=4.237617453442469
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.addHeader("OY", "WaJfaM}");
      String string0 = resultMatrixHTML0.toString();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixHTML0.setRowNameWidth((-163));
      resultMatrixHTML0.toStringHeader();
      resultMatrixHTML0.setSignificance(1714, 1714, 1714);
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      
      int[] intArray0 = new int[8];
      intArray0[0] = 1714;
      intArray0[1] = (-163);
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[4] = 2;
      intArray0[5] = 0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.getDefaultEnumerateColNames();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(1714, 1);
      resultMatrixPlainText1.setColOrder(intArray0);
      assertEquals(1714, resultMatrixPlainText1.getVisibleColCount());
      
      String[] stringArray0 = new String[0];
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixPlainText0.setRowHidden((-163), true);
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=4.031249313109161
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getColName(592);
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.setMeanWidth(3);
      resultMatrixCSV0.clearRanking();
      resultMatrixCSV0.getStdDev((-1309), 8);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.6746524698037284
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(3, 1);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.getColName(1);
      resultMatrixCSV0.setMeanWidth(0);
      resultMatrixCSV0.getStdDev(1, 1);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.435005016902289
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[1][7];
      int[] intArray1 = new int[6];
      intArray1[0] = 1;
      resultMatrixHTML0.setMeanPrec(271);
      intArray1[2] = 0;
      intArray1[3] = 1;
      intArray1[4] = 2;
      intArray0[0] = intArray1;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.3210535826453573
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[7][4];
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(111, 0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.toStringRanking();
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(1, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=3.108064289718111
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultShowAverage();
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=4.041958379917383
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.setEnumerateRowNames(true);
      resultMatrixPlainText0.toString();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 1;
      resultMatrixPlainText0.setMeanPrec((-1269));
      intArray0[3] = 0;
      intArray0[4] = 0;
      resultMatrixLatex0.setRowOrder(intArray0);
      assertTrue(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=3.398517793741887
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getVisibleColCount();
      resultMatrixPlainText0.setRemoveFilterName(true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.46139754571807
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringRanking();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int int0 = resultMatrixPlainText0.getVisibleColCount();
      assertEquals(1, int0);
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.setSignificance(1, 13, 44);
      assertEquals(0, resultMatrixLatex1.getRowNameWidth());
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      
      double double0 = resultMatrixLatex0.getAverage(1);
      assertEquals(0.0, double0, 0.01);
      
      int int1 = resultMatrixLatex0.getDisplayRow(2);
      assertEquals((-1), int1);
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
      assertEquals(1, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=3.3693995516552637
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_StdDevPrec = 25;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setMeanWidth(1);
      resultMatrixGnuPlot0.setColNameWidth(25);
      resultMatrixGnuPlot0.getMean(0, 1);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(614, 50);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=3.1456215492674966
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.toStringRanking();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.getColName(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = null;
      try {
        resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(2, (-901));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=4.213518619349955
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML0.addHeader("*", "v");
      int[] intArray0 = new int[1];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColOrder(intArray0);
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixPlainText0.setRowHidden(2, false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=4.213517889653709
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      String[] stringArray0 = new String[3];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML1.getDefaultStdDevWidth();
      assertFalse(resultMatrixHTML1.getEnumerateRowNames());
      assertTrue(resultMatrixHTML1.getEnumerateColNames());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.4242070373976783
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[8][4];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixHTML0.setRanking(intArray0);
      int[] intArray1 = resultMatrixHTML0.getRowOrder();
      assertNull(intArray1);
      
      resultMatrixHTML0.getRowName(4);
      assertTrue(resultMatrixHTML0.getDefaultPrintRowNames());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.3195104719914634
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[8][4];
      resultMatrixHTML0.clearSummary();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      
      resultMatrixHTML0.setRanking(intArray0);
      assertFalse(resultMatrixHTML0.getShowStdDev());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=3.981178911446049
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      
      ResultMatrixPlainText.main((String[]) null);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getColNameWidth();
      resultMatrixCSV0.getDefaultMeanPrec();
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=4.082443669638907
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.m_RowNames = null;
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(5, resultMatrixCSV0.getCountWidth());
      
      String string0 = resultMatrixPlainText0.getRowName(0);
      assertEquals("row0", string0);
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(2, 0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(1, 1);
      assertEquals(1, resultMatrixCSV1.getVisibleColCount());
      
      String string1 = resultMatrixPlainText1.toString();
      assertFalse(resultMatrixPlainText1.getShowStdDev());
      assertEquals("Dataset (1) col0 | (2) col1\n---------------------------\n---------------------------\n(v/ /*) | (0/0/0)\n", string1);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixCSV1.getSignificance(0, 50);
      resultMatrixHTML0.enumerateColNamesTipText();
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.6755157592819563
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int int0 = resultMatrixGnuPlot0.getSignificanceCount(0, 0);
      assertEquals(0, int0);
      
      resultMatrixSignificance0.m_MeanPrec = 1;
      resultMatrixLatex0.colNameWidthTipText();
      resultMatrixSignificance0.toStringSummary();
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=3.2282744338409093
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[7][4];
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=3.488039965861683
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.getRowName((-130));
      assertNull(string0);
      
      resultMatrixGnuPlot0.toStringSummary();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=3.5231747043753714
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int int0 = ResultMatrix.SIGNIFICANCE_WIN;
      resultMatrixCSV0.showAverageTipText();
      String string0 = resultMatrixHTML0.getRowName(2);
      assertNull(string0);
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getDefaultStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getDefaultMeanWidth());
      assertEquals(0, resultMatrixHTML0.getDefaultCountWidth());
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=3.0773929703993153
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.clearRanking();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(2, 0);
      assertEquals(0, resultMatrixGnuPlot1.getRowCount());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertFalse(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getDefaultShowAverage());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=3.8495919169277295
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringSummary();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 1);
      resultMatrixCSV0.addHeader("", "0#!Cd3DZ$n&.e`_^'");
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col | (2)\n---------------------------------------\nrow0                       (0)    |    \n---------------------------------------\n                          (v/ /* (0/0/0\n", string0);
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixCSV1.getDisplayName();
      assertEquals(0, resultMatrixCSV1.getCountWidth());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=3.2090464751913745
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[9][4];
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.getDefaultStdDevPrec();
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertFalse(resultMatrixHTML0.getDefaultShowAverage());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=3.271383640313224
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML0.addHeader("*", "v");
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_ShowAverage = false;
      resultMatrixHTML1.setStdDevWidth(1);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.setRowNameWidth(2);
      resultMatrixSignificance0.getDefaultPrintColNames();
      assertEquals(1, resultMatrixHTML1.getStdDevWidth());
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=3.468180397493245
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[6][4];
      resultMatrixGnuPlot0.setColNameWidth(0);
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.setPrintRowNames(false);
      resultMatrixHTML0.clearRanking();
      assertFalse(resultMatrixHTML0.getPrintRowNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(2, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      resultMatrixSignificance0.toStringSummary();
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=3.753492353608263
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String string0 = resultMatrixHTML0.toString();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      String string1 = resultMatrixLatex0.padString(" /1,>CU", (-1361), true);
      assertEquals(" /1,>CU", string1);
      
      resultMatrixLatex0.getRevision();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      
      int int0 = resultMatrixGnuPlot0.getSignificanceCount(1, 2);
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=4.284125654391714
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[5];
      stringArray0[0] = " ";
      stringArray0[1] = "*";
      stringArray0[2] = ")";
      resultMatrixPlainText0.padString("iYsAx,", 0);
      stringArray0[3] = "v";
      stringArray0[4] = "(";
      resultMatrixPlainText0.setOptions(stringArray0);
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixPlainText0.m_HeaderValues = vector0;
      vector0.remove((Object) "u\"P}Q(+dWShg");
      vector0.trimToSize();
      resultMatrixPlainText0.padString("u\"P}Q(+dWShg", (-1818), true);
      resultMatrixPlainText0.toStringSummary();
      resultMatrixPlainText0.toString();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.setColNameWidth((-829));
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.getMeanPrec();
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixLatex0.getDefaultShowStdDev();
      assertEquals(5, resultMatrixPlainText0.getStdDevPrec());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.toStringRanking();
      assertFalse(resultMatrixCSV0.getShowAverage());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=3.2373628393304883
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringKey();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSize(0, (-508));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 143
  /*Coverage entropy=3.2864104071942344
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[2];
      resultMatrixSignificance0.listOptions();
      intArray0[0] = 1;
      intArray0[1] = 1;
      resultMatrixSignificance0.m_RankingLosses = intArray0;
      int int0 = (-304);
      resultMatrixSignificance0.trimString((String) null, (-304));
      String[] stringArray0 = new String[2];
      stringArray0[0] = " ";
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSize((-304), (-397));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=3.4868571128248584
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int int0 = resultMatrixPlainText0.getVisibleColCount();
      assertEquals(1, int0);
      assertFalse(resultMatrixPlainText0.getDefaultEnumerateRowNames());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.removeFilterName(")");
      assertEquals(")", string0);
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowStdDev());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=4.213518320600904
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader((String) null, (String) null);
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColOrder(intArray0);
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixPlainText0.setRowHidden(0, true);
      assertEquals(0, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=3.68614950593808
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.clearHeader();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.assign(resultMatrixGnuPlot0);
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=4.163507422075852
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(592, 3);
      resultMatrixPlainText0.m_RowOrder = null;
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.getDefaultEnumerateColNames();
      resultMatrixPlainText0.setColOrder((int[]) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "*";
      stringArray0[1] = "*";
      stringArray0[2] = "";
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixPlainText0.setRowHidden(3, true);
      assertEquals("Whether to enumerate the row names (prefixing them with '(x)', with 'x' being the index).", resultMatrixPlainText0.enumerateRowNamesTipText());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=4.370254135770461
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringRanking();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.getColName(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixPlainText0.setRowHidden(1, false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 149
  /*Coverage entropy=3.337004034249275
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 0);
      resultMatrixGnuPlot0.setSignificanceWidth(0);
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      boolean boolean0 = resultMatrixCSV0.getShowAverage();
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertFalse(boolean0);
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=3.5869102219533557
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.getSignificance(0, 2);
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(5, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertFalse(resultMatrixCSV0.getDefaultRemoveFilterName());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(1, resultMatrixCSV0.getColCount());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=3.490577634378733
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      boolean boolean0 = resultMatrixGnuPlot0.isMean(0);
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertFalse(boolean0);
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=3.4884858967423966
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.getSignificance(1, 2);
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=4.213512049899606
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.toStringKey();
      resultMatrixSignificance0.setPrintRowNames(false);
      resultMatrixSignificance0.setPrintRowNames(true);
      String[] stringArray0 = new String[4];
      stringArray0[0] = " ";
      stringArray0[1] = "(";
      stringArray0[2] = ")";
      stringArray0[3] = ")";
      ResultMatrixLatex.main(stringArray0);
      resultMatrixSignificance0.setCount(0, 2);
      resultMatrixSignificance0.setPrintRowNames(true);
      resultMatrixSignificance0.globalInfo();
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDisplayCol(2);
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=3.588626994421116
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringRanking();
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(18, 2);
      resultMatrixSignificance0.setCount(4353, 240.78804674);
      resultMatrixSignificance0.setPrintRowNames(true);
      resultMatrixSignificance0.globalInfo();
      assertEquals(18, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(2, resultMatrixSignificance0.getRowCount());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int int0 = resultMatrixHTML0.getDisplayCol(26);
      assertFalse(resultMatrixHTML0.getDefaultEnumerateRowNames());
      assertEquals((-1), int0);
      assertEquals(0, resultMatrixHTML0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=4.2070047361208
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "*";
      stringArray0[1] = "v";
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText1.toStringKey();
      resultMatrixPlainText1.getVisibleColCount();
      resultMatrixPlainText0.toString();
      resultMatrixPlainText0.setStdDevPrec(12);
      int int0 = (-1432);
      resultMatrixPlainText0.getRowHidden((-1432));
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText1);
      resultMatrixCSV0.m_RowHidden = null;
      resultMatrixCSV0.getStdDev(97, (-1432));
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 156
  /*Coverage entropy=3.0928535028331074
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      intArray0[0] = 37;
      resultMatrixHTML0.m_RowOrder = intArray0;
      resultMatrixHTML0.TIE_STRING = "";
      int[][] intArray1 = new int[9][4];
      resultMatrixHTML0.setSummary(intArray1, intArray1);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 157
  /*Coverage entropy=4.030116252338828
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixGnuPlot0.setMeanWidth((-1058));
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.getVisibleRowCount();
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertFalse(resultMatrixCSV0.getShowStdDev());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=3.7731349542836874
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(18, stringArray0.length);
      
      String string0 = resultMatrixGnuPlot0.getColName(989);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertNull(string0);
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
  }

  /**
  //Test case number: 159
  /*Coverage entropy=3.8207366765266277
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixPlainText0.toStringSummary();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.getOptions();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.setMeanWidth(1);
      int int0 = resultMatrixCSV0.getVisibleRowCount();
      assertEquals(1, resultMatrixCSV0.getMeanWidth());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 160
  /*Coverage entropy=3.5409253154212634
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      double double0 = resultMatrixCSV0.getStdDev(3030, 0);
      assertEquals(0.0, double0, 0.01);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.stdDevPrecTipText();
      int int0 = resultMatrixGnuPlot0.getSignificanceCount(1, (-325));
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(0, int0);
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
  }

  /**
  //Test case number: 161
  /*Coverage entropy=3.3691323386865277
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[8][4];
      resultMatrixHTML0.setEnumerateRowNames(false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixHTML0.setRanking(intArray0);
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
      assertTrue(resultMatrixHTML0.getDefaultPrintRowNames());
      assertEquals(1, resultMatrixHTML0.getColCount());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=4.053898786127094
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[8][4];
      resultMatrixHTML0.m_ShowAverage = false;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      
      resultMatrixHTML0.setRanking(intArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=3.3697132033450625
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[8][4];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixHTML0.listOptions();
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(1, resultMatrixHTML0.getRowCount());
  }

  /**
  //Test case number: 164
  /*Coverage entropy=3.4417674552545403
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getVisibleColCount();
      int[][] intArray0 = new int[0][1];
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 165
  /*Coverage entropy=3.1257298336542227
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixPlainText0.toStringSummary();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.doubleToString(2, (-4));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 166
  /*Coverage entropy=4.189946776995757
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.setPrintRowNames(true);
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      
      resultMatrixPlainText0.setEnumerateRowNames(true);
      resultMatrixPlainText0.toString();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getRevision();
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
  }

  /**
  //Test case number: 167
  /*Coverage entropy=3.6742370364548163
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      String string0 = resultMatrixLatex0.padString("ck+q^rWe#ZC2Um%a~", 1);
      assertEquals("c", string0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      int int0 = resultMatrixCSV0.getVisibleRowCount();
      assertEquals(1, int0);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(5, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 168
  /*Coverage entropy=3.753509382058181
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "$\bullet$";
      stringArray0[1] = "(";
      stringArray0[2] = ")";
      stringArray0[3] = " ";
      stringArray0[4] = "(";
      stringArray0[5] = "(";
      stringArray0[6] = "$circ$";
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixLatex0.getDisplayRow(3433);
      int int0 = resultMatrixLatex0.getCountWidth();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 169
  /*Coverage entropy=3.7559868333801334
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(1, resultMatrixPlainText0.getColCount());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(5, resultMatrixCSV0.getCountWidth());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      
      String string0 = resultMatrixPlainText0.getRowName(0);
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals("row0", string0);
      assertNotNull(string0);
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(47, 0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.padString("##################\n", (-1469));
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(2, 2);
      resultMatrixLatex1.setSignificance(2, (-1237), 1);
      assertEquals(2, resultMatrixLatex1.getVisibleColCount());
      
      resultMatrixLatex0.getAverage((-1237));
      int int0 = resultMatrixLatex0.getDisplayRow((-1237));
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 170
  /*Coverage entropy=3.2631547599756296
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[7][4];
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.headerKeys();
      assertEquals(0, resultMatrixHTML0.getDefaultSignificanceWidth());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertFalse(resultMatrixHTML0.getDefaultShowAverage());
  }

  /**
  //Test case number: 171
  /*Coverage entropy=3.5372760609118274
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.toStringKey();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption (Key)}\n\\scriptsize\n{\\centering\n\\begin{tabular}{cl}\\\\\n(1) & col0 \\\\\n\\end{tabular}\n}\n\\end{table}\n", string0);
      
      resultMatrixLatex0.getDisplayRow(56);
      resultMatrixLatex0.getDefaultRowNameWidth();
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultSignificanceWidth());
      assertEquals(1, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 172
  /*Coverage entropy=3.538349598217249
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringRanking();
      assertEquals(1, resultMatrixLatex0.getRowCount());
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.setSignificance(0, 1, 102);
      double double0 = resultMatrixLatex1.getAverage(2);
      assertEquals(0.0, double0, 0.01);
      
      int int0 = resultMatrixLatex1.getDisplayRow(1703);
      assertEquals((-1), int0);
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(2, resultMatrixLatex1.getDefaultMeanPrec());
      assertEquals(0, resultMatrixLatex1.getDefaultRowNameWidth());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
      assertEquals(1, resultMatrixLatex1.getColCount());
  }

  /**
  //Test case number: 173
  /*Coverage entropy=3.674053830347946
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setCountWidth((-141));
      int[][] intArray0 = new int[8][4];
      resultMatrixHTML0.m_MeanPrec = (-611);
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.setPrintRowNames(false);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 58);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 174
  /*Coverage entropy=3.5372760609118274
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(3, 3);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.setCountWidth(3);
      resultMatrixCSV0.getEnumerateRowNames();
      assertEquals(3, resultMatrixCSV0.getCountWidth());
  }

  /**
  //Test case number: 175
  /*Coverage entropy=3.3415249980389405
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[1];
      resultMatrixGnuPlot0.WIN_STRING = " ";
      try { 
        resultMatrixSignificance0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 176
  /*Coverage entropy=4.136093622412953
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "$\bullet$";
      stringArray0[1] = "$circ$";
      stringArray0[2] = ")";
      stringArray0[3] = " ";
      stringArray0[4] = "(";
      stringArray0[5] = "(";
      stringArray0[6] = "$circ$";
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixLatex0.toStringMatrix();
      assertEquals(0, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 177
  /*Coverage entropy=3.7487035296395588
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 0);
      resultMatrixGnuPlot0.toArray();
      resultMatrixLatex0.assign(resultMatrixGnuPlot0);
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 178
  /*Coverage entropy=4.051472092497166
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 0);
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertFalse(resultMatrixHTML0.getPrintColNames());
      
      resultMatrixGnuPlot0.setSignificanceWidth(0);
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(18, stringArray0.length);
  }

  /**
  //Test case number: 179
  /*Coverage entropy=3.5386400847822452
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixCSV0.LEFT_PARENTHESES = null;
      String string0 = resultMatrixPlainText0.padString(")", 0, false);
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertFalse(resultMatrixPlainText0.getShowAverage());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(")", string0);
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
  }

  /**
  //Test case number: 180
  /*Coverage entropy=3.748849786471037
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_MeanPrec = 231;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.getDisplayName();
      resultMatrixPlainText0.getDefaultShowStdDev();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringRanking();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixPlainText0.getDisplayRow(287);
      int int0 = resultMatrixPlainText0.getMeanPrec();
      assertEquals(231, int0);
  }

  /**
  //Test case number: 181
  /*Coverage entropy=3.1699021172713064
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int int0 = resultMatrixSignificance0.getColCount();
      assertEquals(1, int0);
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertTrue(resultMatrixSignificance0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 182
  /*Coverage entropy=3.3379301202676266
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[2][4];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 183
  /*Coverage entropy=3.5374801842022947
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML0.addHeader("*", "v");
      resultMatrixHTML0.setCountWidth(0);
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixHTML1.countWidthTipText();
      assertEquals(2, resultMatrixHTML1.getStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(0, resultMatrixHTML1.getCountWidth());
      assertEquals(25, resultMatrixHTML1.getRowNameWidth());
      assertEquals(0, resultMatrixHTML1.getStdDevWidth());
      assertTrue(resultMatrixHTML1.getPrintRowNames());
      assertEquals(0, resultMatrixHTML1.getSignificanceWidth());
      assertTrue(resultMatrixHTML1.getEnumerateColNames());
      assertEquals(0, resultMatrixHTML1.getMeanWidth());
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
  }

  /**
  //Test case number: 184
  /*Coverage entropy=3.492283997691922
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      int[][] intArray0 = new int[1][7];
      int[] intArray1 = new int[2];
      intArray1[0] = 2;
      intArray1[1] = 1;
      intArray0[0] = intArray1;
      // Undeclared exception!
      try { 
        resultMatrixHTML1.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 185
  /*Coverage entropy=3.266939866206127
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.setSignificance(1006, 0, (-1406));
      resultMatrixLatex0.getAverage(986);
      int int0 = resultMatrixLatex0.getDisplayRow(986);
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals((-1), int0);
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(5, resultMatrixLatex0.getCountWidth());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
  }

  /**
  //Test case number: 186
  /*Coverage entropy=3.5866946272713576
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 0);
      resultMatrixGnuPlot0.setSignificanceWidth(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.setRowNameWidth((-1188));
      int int0 = ResultMatrix.SIGNIFICANCE_WIN;
      assertEquals(1, int0);
  }

  /**
  //Test case number: 187
  /*Coverage entropy=3.5861880844262752
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      boolean boolean0 = resultMatrixSignificance0.isStdDev(0);
      assertFalse(resultMatrixSignificance0.getShowStdDev());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertFalse(boolean0);
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(0, resultMatrixSignificance0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 188
  /*Coverage entropy=3.9417958919929696
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String string0 = resultMatrixHTML0.toString();
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getMean(0, 1);
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(18, stringArray0.length);
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
  }

  /**
  //Test case number: 189
  /*Coverage entropy=4.212245806757362
  */
  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      String[] stringArray0 = resultMatrixGnuPlot1.getOptions();
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(50, resultMatrixGnuPlot1.getRowNameWidth());
      assertEquals(18, stringArray0.length);
      assertEquals(2, resultMatrixGnuPlot1.getMeanPrec());
  }

  /**
  //Test case number: 190
  /*Coverage entropy=3.9640747732316184
  */
  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 47);
      String[][] stringArray0 = resultMatrixLatex0.toArray();
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(3, stringArray0.length);
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 191
  /*Coverage entropy=3.490877904621952
  */
  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      String string0 = resultMatrixCSV0.getColName(0);
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertNull(string0);
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertTrue(resultMatrixCSV0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultStdDevWidth());
      assertFalse(resultMatrixCSV0.getShowStdDev());
      assertEquals(0, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 192
  /*Coverage entropy=3.5354315286325124
  */
  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      boolean boolean0 = resultMatrixPlainText0.isMean(3);
      assertFalse(resultMatrixPlainText0.getDefaultEnumerateRowNames());
      assertFalse(boolean0);
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
  }

  /**
  //Test case number: 193
  /*Coverage entropy=3.538028931229915
  */
  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      String string0 = resultMatrixHTML1.toStringKey();
      assertEquals(0, resultMatrixHTML1.getCountWidth());
      assertEquals(2, resultMatrixHTML1.getStdDevPrec());
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
      assertEquals(0, resultMatrixHTML1.getStdDevWidth());
      assertEquals(0, resultMatrixHTML1.getMeanWidth());
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td colspan=\"2\"><b>Key</b></td></tr>\n   <tr><td><b>(1)</b></td><td>col0</td></tr>\n</table>\n", string0);
      assertFalse(resultMatrixHTML1.getRemoveFilterName());
      assertEquals(1, resultMatrixHTML1.getVisibleRowCount());
      assertEquals(0, resultMatrixHTML1.getSignificanceWidth());
      assertEquals(25, resultMatrixHTML1.getRowNameWidth());
      assertTrue(resultMatrixHTML1.getPrintRowNames());
  }
}
