/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 27 22:49:44 GMT 2020
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.File;
import java.io.PipedReader;
import java.io.PrintWriter;
import java.io.Reader;
import java.io.StreamTokenizer;
import java.util.LinkedHashSet;
import java.util.List;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPackage;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.h2.jdbcx.JdbcDataSource;
import org.h2.value.ValueLobDb;
import org.hsqldb.lib.FileUtil;
import org.junit.runner.RunWith;
import org.postgresql.ds.PGConnectionPoolDataSource;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.4735023850806486
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      String string0 = SQLUtil.renderColumnListWithTableName("", stringArray0);
      assertEquals(".", string0);
      
      String[] stringArray1 = new String[7];
      stringArray1[0] = "";
      stringArray1[1] = "alter index";
      stringArray1[2] = "";
      stringArray1[3] = "alter index";
      stringArray1[4] = "a";
      stringArray1[5] = "alter table";
      stringArray1[6] = ".";
      String string1 = SQLUtil.join("", "", stringArray0, "", "alter index", stringArray1);
      assertEquals(" as alter index on . = alter index.", string1);
      
      Random.setNextRandom((-361602233));
      boolean boolean0 = SQLUtil.isQuery("a");
      boolean boolean1 = SQLUtil.isDML("insert");
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.11609425610897
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("derby.version.major");
      SQLUtil.removeComments("logmirror.ctrl");
      SQLUtil.isDDL("derby.version.major");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "derby.version.major";
      stringArray0[1] = "logmirror.ctrl";
      stringArray0[2] = "logmirror.ctrl";
      String[] stringArray1 = new String[2];
      stringArray1[0] = "logmirror.ctrl";
      stringArray1[1] = "derby.version.major";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("derby.version.major", stringArray0, "logmirror.ctrl", "derby.version.major", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.parseColumnTypeAndSize("Zym$rjo");
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addRequiredCondition("8o]!vqp^", stringBuilder0);
      DBDataType dBDataType0 = DBDataType.getInstance(40001, "");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter materialized view", defaultDBTable0, dBDataType0, integer0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("8o]!vqp^(1)", stringBuilder0.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      constraintDescriptorList0.add((Object) stringBuilder0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) constraintDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.StringBuilder cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0114042647073518
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      SQLUtil.isDDL("VhKLDH(EeZ *xjf]");
      // Undeclared exception!
      SQLUtil.mutatesDataOrStructure("/*");
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.8407487285692812
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.mutatesDataOrStructure("truncatedgrdcfc${~{@v,s1");
      SQLUtil.isDDL("");
      StringBuilder stringBuilder0 = new StringBuilder();
      assertEquals("", stringBuilder0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4241299173467734
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[1];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      SQLUtil.innerJoin("null = null", stringArray0, "w(1i", "w(1i", stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.8438614379613667
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      SQLUtil.isDDL("select");
      SQLUtil.mutatesDataOrStructure("select");
      boolean boolean0 = new Boolean(false);
      StringBuilder stringBuilder0 = new StringBuilder("$VALUES");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      SQLUtil.isDDL("org.hsqldb.rowio.RowInputTextLog");
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = new StringBuilder("org.hsqldb.rowio.RowInputTextLog");
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.6188490916819118
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "org.h2.expression.Aggregate";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      SQLUtil.innerJoin("5?88C^.M%A", stringArray0, "X4v%2@Fn<zQ&\"w", "drop table", stringArray0);
      String[] stringArray1 = new String[1];
      stringArray1[0] = "org.h2.expression.Aggregate = 'org.h2.expression.Aggregate' AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null";
      SQLUtil.renderColumnListWithTableName("tJPsb-|c.dg>vG^`", stringArray1);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "tJPsb-|c.dg>vG^`.org.h2.expression.Aggregate = 'org.h2.expression.Aggregate' AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null";
      Object object0 = new Object();
      objectArray0[1] = object0;
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0330001999799117
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("CHECK ");
      SQLUtil.parseColumnTypeAndSize("");
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.append("I?MA");
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint((String) null, true, "", "odi6jv");
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0);
      Random.setNextRandom((-1088));
      SQLUtil.parseColumnTypeAndSize("I?MA");
      Random.setNextRandom((-1088));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize("");
      SQLUtil.isQuery("");
      String string0 = "sess";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("sess", (DBSchema) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(5);
      int int0 = 41;
      // Undeclared exception!
      try { 
        defaultDBTable0.getUniqueConstraint("sess");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.9356005054539458
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "org.h2.expression.Aggregate";
      stringArray0[1] = "org.h2.expression.Aggregate";
      DBSchema dBSchema0 = new DBSchema("org.h2.expression.Aggregate");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("org.h2.expression.Aggregate", dBSchema0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable1, (String) null, false, stringArray0);
      SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("884iQN'P{>Jkg");
      assertNull(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("iG,W4,kdm0x", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      jdbcDataSource0.getLogWriter();
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey((DBForeignKeyConstraint) null, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "C96kGhOt~`";
      stringArray0[1] = "C96kGhOt~`";
      stringArray0[2] = "C96kGhOt~`";
      String string0 = SQLUtil.renderColumnListWithTableName("C96kGhOt~`", stringArray0);
      assertEquals("C96kGhOt~`.C96kGhOt~`, C96kGhOt~`.C96kGhOt~`, C96kGhOt~`.C96kGhOt~`, C96kGhOt~`.null", string0);
      
      String string1 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("(C96kGhOt~`, C96kGhOt~`, C96kGhOt~`, )", string1);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("5mc(NFl*1xI1");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "Unknown constraint type: ", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "C96kGhOt~`");
      stringBuilder0.chars();
      stringBuilder0.append('-');
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("C96kGhOt~`", true, "Unknown constraint type: ", "v");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string2 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CONSTRAINT C96kGhOt~` CHECK v", string2);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      SQLUtil.removeComments("");
      SQLUtil.renderColumnNames(stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder();
      assertEquals("", stringBuilder0.toString());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1143170665485984
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[6];
      stringArray0[1] = "Maximum Blob input octet length exceeded: ";
      DBSchema dBSchema0 = new DBSchema("Maximum Blob input octet length exceeded: ");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("SET SESSION CHARACTERISTICS AS TRANSACTION ", dBSchema0);
      DBDataType.getInstance(6, "j");
      Integer integer0 = new Integer((-448));
      Integer integer1 = RawTransaction.COMMIT;
      File file0 = FileUtil.canonicalFile("j");
      File file1 = FileUtil.canonicalFile(file0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file1);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.renderCreateTable(defaultDBTable1, true, nameSpec0, mockPrintWriter0);
      SQLUtil.normalize("Maximum Blob input octet length exceeded: ", false);
      SQLUtil.ownerDotComponent(defaultDBTable1);
      String[] stringArray1 = new String[2];
      stringArray1[0] = "Maximum Blob input octet length exceeded: ";
      stringArray1[1] = "Maximum Blob input octet length exceeded: ";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("Maximum Blob input octet length exceeded: .SET SESSION CHARACTERISTICS AS TRANSACTION ", stringArray0, "Maximum Blob input octet length exceeded: ", "SET SESSION CHARACTERISTICS AS TRANSACTION ", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.32450838693107065
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      SQLUtil.removeComments("VhKLDH(EeZ *xjf]");
      SQLUtil.normalize("VhKLDH(EeZ *xjf]", false);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((DBColumn[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String string0 = "setBoolean(String,boolean)";
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("setBoolean(String,boolean)", false, "setBoolean(String,boolean)", "v");
      LinkedHashSet<DBUniqueConstraint> linkedHashSet0 = new LinkedHashSet<DBUniqueConstraint>();
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("setBoolean(String,boolean)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"String\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      SQLUtil.renderColumnNames((String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = null;
      try {
        defaultDBColumn0 = new DefaultDBColumn("()", defaultDBTable0, (-512535193), "()");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[2] = "";
      stringArray0[3] = stringArray0[1];
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addRequiredCondition((String) null, stringBuilder0);
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("");
      assertEquals(1, objectArray0.length);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName((String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("/+oe!\"o%=PS2<", stringBuilder0);
      assertEquals("/+oe!\"o%=PS2<", stringBuilder0.toString());
      
      DBDataType dBDataType0 = DBDataType.getInstance(45, "GBOuM1]$vfpwpz23yx{");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("/+oe!\"o%=PS2<", (DBTable) null, dBDataType0, integer0, integer1);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("GBOUM1]$VFPWPZ23YX{(2,2)", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.9160825054413518
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      System.setCurrentTimeMillis((-1798L));
      String string0 = SQLUtil.normalize("S-:y3x2`/4{OEtiDD", true);
      assertEquals("S - : y3  x2 ` / 4 { OEtiDD", string0);
      
      boolean boolean0 = SQLUtil.isProcedureCall("S - : y3  x2 ` / 4 { OEtiDD");
      assertFalse(boolean0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string1 = SQLUtil.substituteMarkers("truncatep[z", "", (Object) null);
      assertEquals("nulltnullrnullunullnnullcnullanulltnullenullpnull[nullznull", string1);
      
      String string2 = SQLUtil.ownerDotComponent(defaultDBTable0);
      assertEquals("null", string2);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      SQLUtil.renderColumnNames((String[]) null);
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("lKl?eb[]e", (String[]) null, " jREFERENCES ", " jREFERENCES ", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.9559838465843624
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SQLUtil.mutatesDataOrStructure(" DETERMINISTIC");
      SQLUtil.parseColumnTypeAndSize(" DETERMINISTIC");
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.7499625679061092
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      SQLUtil.normalize("VhKLDH(EeZ *xjf]", false);
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("create tablesessio", (DBSchema) null);
      DBDataType dBDataType0 = DBDataType.getInstance(42000, "create tablesessio");
      dBDataType0.isNumber();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("create tablesessio", defaultDBTable0, dBDataType0, integer0);
      SQLUtil.renderColumn(defaultDBColumn0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.6094379124341
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[6];
      stringArray0[4] = "Maximum Blob input octet length exceeded: ";
      DBSchema dBSchema0 = new DBSchema("Maximum Blob input octet length exceeded: ");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("SET SESSION CHARACTERISTICS AS TRANSACTION ", dBSchema0);
      DBDataType dBDataType0 = DBDataType.getInstance(6, "j");
      Integer integer0 = new Integer((-448));
      Integer integer1 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Maximum Blob input octet length exceeded: ", defaultDBTable0, dBDataType0, integer1);
      DBColumn[] dBColumnArray0 = new DBColumn[3];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      DBDataType.getInstance(6, "j");
      Integer integer2 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("-- free", defaultDBTable1, dBDataType0, integer1);
      String string0 = SQLUtil.renderColumn(defaultDBColumn1);
      assertEquals("-- free J(0) NULL", string0);
      
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, stringArray0[1], true, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string1 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY (, , , , Maximum Blob input octet length exceeded: , )", string1);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.0679759122939765
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      SQLUtil.isDDL("select");
      SQLUtil.mutatesDataOrStructure("select");
      SQLUtil.parseColumnTypeAndSize("BLOBTRUNCATE");
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.append("select");
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("CHECK ", false, "$pY0V!0,BcrIV.", "BLOBTRUNCATE");
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0);
      Random.setNextRandom(4088);
      SQLUtil.parseColumnTypeAndSize("$pY0V!0,BcrIV.");
      Random.setNextRandom(4088);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition("", stringBuilder0);
      assertEquals("", stringBuilder1.toString());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.9722469794234416
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-447230822), "dete_rmin");
      Integer integer0 = new Integer((-77));
      Integer integer1 = RawTransaction.COMMIT;
      Integer integer2 = RawTransaction.ABORT;
      Integer integer3 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("dete_rmin", defaultDBTable0, dBDataType0, integer3);
      DBColumn[] dBColumnArray0 = new DBColumn[3];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn0;
      SQLUtil.renderColumnNames(dBColumnArray0);
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("dete_rmin");
      assertNull(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("5(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: 5(
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      SQLUtil.typeAndName((DBObject) null);
      String string0 = SQLUtil.renderValue((Object) null);
      assertEquals("null", string0);
      
      boolean boolean0 = SQLUtil.isDML("");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.7481554572476763
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "C96kGhOt~`";
      stringArray0[1] = "C96kGhOt~`";
      stringArray0[2] = "C96kGhOt~`";
      String string0 = SQLUtil.renderColumnListWithTableName("C96kGhOt~`", stringArray0);
      assertEquals("C96kGhOt~`.C96kGhOt~`, C96kGhOt~`.C96kGhOt~`, C96kGhOt~`.C96kGhOt~`, C96kGhOt~`.null", string0);
      
      SQLUtil.renderColumnNames(stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("5mc(NFl*1xI1");
      String string1 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("C96kGhOt~` = 'C96kGhOt~`' AND C96kGhOt~` = 'C96kGhOt~`' AND C96kGhOt~` = 'C96kGhOt~`' AND null = null", string1);
      
      DBDataType.getInstance((-1429), "n@)Zy&f$<lo.");
      Integer integer0 = new Integer((-1429));
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "C96kGhOt~` = 'C96kGhOt~`' AND C96kGhOt~` = 'C96kGhOt~`' AND C96kGhOt~` = 'C96kGhOt~`' AND null = null", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string2 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY (C96kGhOt~`, C96kGhOt~`, C96kGhOt~`, )", string2);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.4906647542789075
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      String[] stringArray0 = new String[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "determin", false, stringArray0);
      String string0 = SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      assertEquals("CONSTRAINT determin ", string0);
      
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("determin");
      assertNull(boolean0);
      
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string1 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY ()", string1);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.3034884952192693
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "null = null", false, stringArray0);
      SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("i^%sal|slz(`*-8%");
      assertNull(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[7];
      stringArray0[0] = " = ";
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint(" = ", false, "n0(yK-$og", " NULL");
      defaultDBTable1.addCheckConstraint(dBCheckConstraint0);
      defaultDBTable1.getUniqueConstraint(stringArray0);
      Integer integer0 = RawTransaction.ABORT;
      PipedReader pipedReader0 = new PipedReader();
      boolean boolean0 = SQLUtil.isQuery("select=");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.9368185977125945
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      SQLUtil.normalize("/+oe!\"o%=PS2<", true);
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("/ + oe ! \"o%=PS2<\"");
      assertNull(boolean0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("exec=");
      assertFalse(boolean0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getCheckConstraints();
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertNotNull(string0);
      assertEquals("table null", string0);
      
      String[] stringArray0 = new String[0];
      String string1 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM null WHERE ", string1);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("/+oe!\"o%=PS2<", stringBuilder0);
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnListWithTableName("org.apache.derby.impl.sql.compile.GenerationClauseNode", stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.5982695885852573
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      String string0 = "6M@=}8H3aRXD\\hS";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "6M@=}8H3aRXDhS";
      stringArray0[1] = "6M@=}8H3aRXDhS";
      stringArray0[2] = "6M@=}8H3aRXDhS";
      stringArray0[3] = "6M@=}8H3aRXDhS";
      stringArray0[4] = "6M@=}8H3aRXDhS";
      stringArray0[5] = "6M@=}8H3aRXDhS";
      stringArray0[6] = "6M@=}8H3aRXDhS";
      stringArray0[7] = "6M@=}8H3aRXDhS";
      stringArray0[8] = "6M@=}8H3aRXDhS";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("6M@=}8H3aRXDhS", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("]Z&_lD]c%EtC]fNT");
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("rename{zi,cwv&&:>.!t");
      SQLUtil.substituteMarkers("rename{zi,cwv&&:>.!t", "}8If S7Q", "rename{zi,cwv&&:>.!t");
      CompositeDBObject<DBForeignKeyConstraint> compositeDBObject0 = (CompositeDBObject<DBForeignKeyConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("rename{zi,cwv&&:>.!t", compositeDBObject0);
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.69240886298655
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SQLUtil.renderColumnListWithTableName("", stringArray0);
      SQLUtil.renderColumnNames(stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.innerJoin("", stringArray0, "c013800d-00fb-2649-07ec-000000134f30", (String) null, stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Integer integer0 = RawTransaction.COMMIT;
      Integer integer1 = RawTransaction.ABORT;
      DBColumn[] dBColumnArray0 = new DBColumn[6];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.9730014063936125
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-447230822), "determin");
      Integer integer0 = new Integer(1);
      Integer integer1 = RawTransaction.COMMIT;
      Integer integer2 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("determin", defaultDBTable0, dBDataType0, integer2);
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      SQLUtil.renderColumnNames(dBColumnArray0);
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("determin");
      assertNull(boolean0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.5905146653114488
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      String string0 = SQLUtil.normalize("VhKLDH(EeZ *xjf]", true);
      assertEquals("VhKLDH (EeZ * xjf ]", string0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "V  hKLDH (EeZ * xjf ]";
      SQLUtil.leftJoin("VhKLDH(EeZ *xjf]", stringArray0, "_U\"=FAqc-M", "VhKLDH(EeZ *xjf]", stringArray0);
      String[] stringArray1 = new String[1];
      stringArray1[0] = "VhKLDH(EeZ *xjf]";
      String string1 = SQLUtil.leftJoin("left join _U\"=FAqc-M as VhKLDH(EeZ *xjf] on VhKLDH(EeZ *xjf].V  hKLDH (EeZ * xjf ] = VhKLDH(EeZ *xjf].V  hKLDH (EeZ * xjf ]", stringArray0, "VhKLDH(EeZ *xjf]", "u:u|d|ledJrSV~l", stringArray1);
      assertEquals("left join VhKLDH(EeZ *xjf] as u:u|d|ledJrSV~l on left join _U\"=FAqc-M as VhKLDH(EeZ *xjf] on VhKLDH(EeZ *xjf].V  hKLDH (EeZ * xjf ] = VhKLDH(EeZ *xjf].V  hKLDH (EeZ * xjf ].V  hKLDH (EeZ * xjf ] = u:u|d|ledJrSV~l.VhKLDH(EeZ *xjf]", string1);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      String string0 = "create unique index";
      String string1 = null;
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = SQLUtil.normalize("", true);
      assertEquals("", string0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("PUr");
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertEquals("table PUr", string0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.6726254461503205
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      SQLUtil.isDML("aPt^er session");
      DBSchema dBSchema0 = new DBSchema("aPt^er session");
      dBSchema0.getSequences(true);
      dBSchema0.getPackages();
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition((String) null, stringBuilder0);
      StringBuilder stringBuilder1 = stringBuilder0.append(2013);
      SQLUtil.addOptionalCondition("alter sessionalter table", stringBuilder1);
      assertEquals("null2013 or alter sessionalter table", stringBuilder1.toString());
      
      SQLUtil.parseColumnTypeAndSize("alter table");
      SQLUtil.isProcedureCall("alter table");
      String string0 = SQLUtil.ownerDotComponent(dBSchema0);
      assertEquals("aPt^er session", string0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.6089396320718437
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      String string0 = SQLUtil.normalize("-y3x2`/{EtiDD", true);
      assertEquals("- y3  x2 ` / { EtiDD", string0);
      
      Boolean boolean0 = SQLUtil.mutatesStructure("alter index");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.0592293789763123
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("0NVn3FM{^4g;");
      List<DBPackage> list0 = new ConstraintDescriptorList();
      SQLUtil.mutatesDataOrStructure("execute<q[npp");
      SQLUtil.parseColumnTypeAndSize("0NVn3FM{^4g;");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("select intoapt^er session");
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("FIen!{T^Oqr", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.8438614379613667
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select into");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.660947433286918
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("selectselect intov  hkldh(eez * xjf ]");
      assertFalse(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "UNSIGNED";
      stringArray0[1] = "selectselect intov  hkldh(eez * xjf ]";
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.5623155215734763
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      SQLUtil.normalize("PpwO6'*~Q0{LHF", true);
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("PpwO6 '*~Q0{LHF'");
      assertNull(boolean0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      String string0 = SQLUtil.normalize("setBoolean(String,boolean)", true);
      assertEquals("setBoolean (String, boolean)", string0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.7356219397587946
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      String[] stringArray0 = new String[2];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      stringArray0[0] = "";
      stringArray0[1] = "";
      SQLUtil.leftJoin("", stringArray0, "", "", stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "left join  as  on . = . and . = .");
      SQLUtil.addOptionalCondition("", stringBuilder0);
      assertEquals("left join  as  on . = . and . = . or ", stringBuilder0.toString());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("select into", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      String string0 = SQLUtil.substituteMarkers("\"wWYCnME+rhSPpa5", ",]=c", (Object) null);
      assertEquals("\"wWYCnME+rhSPpa5", string0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("mlv%j]C", "/+oe!\"o%=PS2<", (String[]) null, "/+oe!\"o%=PS2<", (String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.8201022980949626
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      SQLUtil.normalize("X0X03.S", false);
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("X0X03.S");
      assertNull(boolean0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      String[] stringArray0 = new String[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getUniqueConstraint(stringArray0);
      Integer integer0 = RawTransaction.COMMIT;
      Character character0 = Character.valueOf('j');
      SQLUtil.renderValue(character0);
      Boolean boolean0 = Boolean.FALSE;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("//");
      assertFalse(defaultDBTable1.equals((Object)defaultDBTable0));
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0114042647073516
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.leftJoin("call", stringArray0, "u<k_g+w", "call", stringArray0);
      assertEquals("left join u<k_g+w as call on ", string0);
      
      DBCatalog dBCatalog0 = new DBCatalog("2.JVd6ra.3i4Z}=EgiC");
      DBSchema dBSchema0 = new DBSchema("call", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("left join u<k_g+w as call on ", dBSchema0);
      defaultDBTable0.getPrimaryKeyConstraint();
      String string1 = SQLUtil.renderValue((Object) null);
      assertEquals("null", string1);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.8438614379613667
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("");
      assertNull(boolean0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.2047933096947843
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      String[] stringArray0 = new String[15];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      String string1 = SQLUtil.innerJoin("null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", stringArray0, (String) null, (String) null, stringArray0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 73
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.6425559869377246
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      SQLUtil.normalize("S-:y3x2`/4{OEtiDD", true);
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("S - : y3  x2 ` / 4 { OEtiDD");
      assertNull(boolean0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      SQLUtil.removeComments("HT01HaqB_Ak'm!LY");
      StringBuilder stringBuilder0 = new StringBuilder("HT01HaqB_Ak'm!LY");
      SQLUtil.addOptionalCondition("HT01HaqB_Ak'm!LY", stringBuilder0);
      assertEquals("HT01HaqB_Ak'm!LY or HT01HaqB_Ak'm!LY", stringBuilder0.toString());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.3667110520552042
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("execute");
      assertTrue(boolean0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      MockFile mockFile0 = new MockFile((String) null, ">RAu3zfGnKByWW<Q");
      File file0 = FileUtil.canonicalFile((File) mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      String string0 = SQLUtil.substituteMarkers("execute", "K", "F$RGP|BIc.~JMc");
      assertEquals("execute", string0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("S-:y3x2`/4{OEtiDD");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("f");
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.326543253194114
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("0N-LaPT");
      assertNull(boolean0);
      
      byte[] byteArray0 = new byte[0];
      ValueLobDb valueLobDb0 = ValueLobDb.createSmallLob((-294453248), byteArray0, (-294453248));
      ValueLobDb valueLobDb1 = valueLobDb0.copyToTemp();
      valueLobDb1.equals((Object) null);
      Reader reader0 = valueLobDb1.getReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(reader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string0);
      
      SQLUtil sQLUtil0 = new SQLUtil();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "--";
      stringArray0[1] = "?x3^y,Oa#K;2v;";
      stringArray0[2] = null;
      stringArray0[3] = "--";
      stringArray0[4] = "0N-LaPT";
      stringArray0[5] = "0N-LaPT";
      stringArray0[6] = null;
      stringArray0[7] = "?x3^y,Oa#K;2v;";
      String string1 = SQLUtil.join("?x3^y,Oa#K;2v;", "--", stringArray0, "DROP TABLE ", "--", stringArray0);
      assertEquals("?x3^y,Oa#K;2v; join DROP TABLE  as -- on --.-- = --.-- and --.?x3^y,Oa#K;2v; = --.?x3^y,Oa#K;2v; and --.null = --.null and --.-- = --.-- and --.0N-LaPT = --.0N-LaPT and --.0N-LaPT = --.0N-LaPT and --.null = --.null and --.?x3^y,Oa#K;2v; = --.?x3^y,Oa#K;2v;", string1);
      
      String string2 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("(--, ?x3^y,Oa#K;2v;, , --, 0N-LaPT, 0N-LaPT, , ?x3^y,Oa#K;2v;)", string2);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "org.h2.expression.Aggregate";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "$G`<@", false, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) ":t");
      StringBuilder stringBuilder1 = stringBuilder0.append(0.0F);
      StringBuilder stringBuilder2 = stringBuilder1.append('C');
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder3 = SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder2, nameSpec0);
      SQLUtil.addRequiredCondition("org.h2.expression.Aggregate", stringBuilder3);
      assertEquals(":t0.0C and org.h2.expression.Aggregate", stringBuilder3.toString());
      assertEquals(":t0.0C and org.h2.expression.Aggregate", stringBuilder0.toString());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.464816384890813
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getUniqueConstraints(true);
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertNotNull(string0);
      assertEquals("table null", string0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "table null";
      stringArray0[1] = "table null";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("table null", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string1 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (table null, table null) REFERENCES null(table null, table null)", string1);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      String[] stringArray0 = new String[2];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "determin", false, stringArray0);
      String string0 = SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      assertEquals("CONSTRAINT determin ", string0);
      
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "determin");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string1 = SQLUtil.innerJoin((String) null, stringArray0, "", "delete", stringArray0);
      assertEquals(" as delete on null.null = delete.null and null.null = delete.null", string1);
      
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string2 = SQLUtil.ukSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT determin UNIQUE (, )", string2);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.6957425341696346
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("null = null");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "null = null", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBPrimaryKeyConstraint0, nameSpec0);
      SQLUtil.addRequiredCondition("null = null", stringBuilder0);
      assertEquals("CONSTRAINT \"null = null\"  and null = null", stringBuilder0.toString());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.8043716191528454
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("delete");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.5047882836811908
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      SQLUtil.mutatesStructure("/+oe!do%=PS2&L");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "/+oe!do%=PS2&L";
      stringArray0[1] = "/+oe!do%=PS2&L";
      stringArray0[2] = "+;AyF1=OHb0Cn_";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      SQLUtil.innerJoin("null = null", stringArray0, "null = null", "null = null", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("SELECT * FROM null WHERE null = null");
      assertEquals(1, objectArray0.length);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = " on ";
      stringArray0[2] = "";
      stringArray0[3] = " on ";
      stringArray0[4] = "";
      SQLUtil.join("update", " keys:", stringArray0, "", " 2&8~*", stringArray0);
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("update join  as  2&8~* on  keys:.null =  2&8~*.null and  keys:. on  =  2&8~*. on  and  keys:. =  2&8~*. and  keys:. on  =  2&8~*. on  and  keys:. =  2&8~*. and  keys:.null =  2&8~*.null and  keys:.null =  2&8~*.null and  keys:.null =  2&8~*.null");
      assertEquals(1, objectArray0.length);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("rename{zi,cwv&&:>.!t");
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers("rename{zi,cwv&&:>.!t", (String) null, "rename{zi,cwv&&:>.!t");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      SQLUtil.isDDL("call");
      SQLUtil.mutatesDataOrStructure("call");
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("call");
      assertEquals(1, objectArray0.length);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("", stringBuilder0);
      assertEquals("", stringBuilder1.toString());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DBConstraint dBConstraint0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      StringBuilder stringBuilder0 = new StringBuilder();
      String[] stringArray0 = new String[9];
      stringArray0[0] = null;
      stringArray0[1] = "derby.system.durability";
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = "alter materialized viewalter table";
      stringArray0[6] = null;
      stringArray0[7] = null;
      stringArray0[8] = "create unique index";
      String string0 = SQLUtil.leftJoin((String) null, stringArray0, (String) null, stringArray0[6], stringArray0);
      assertEquals("left join null as null on null.null = null.null and null.derby.system.durability = null.derby.system.durability and null.null = null.null and null.null = null.null and null.null = null.null and null.alter materialized viewalter table = null.alter materialized viewalter table and null.null = null.null and null.null = null.null and null.create unique index = null.create unique index", string0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      String string0 = SQLUtil.renderColumnListWithTableName("", stringArray0);
      assertEquals(".", string0);
      
      String string1 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("()", string1);
      
      String string2 = SQLUtil.innerJoin((String) null, stringArray0, (String) null, "8X?0M n0lZ_JgtVV", stringArray0);
      assertEquals("null as 8X?0M n0lZ_JgtVV on null. = 8X?0M n0lZ_JgtVV.", string2);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("truncatedet_~`sm", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("getParameterValueSet");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.5047882836811908
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      SQLUtil.mutatesStructure("");
      SQLUtil.isProcedureCall("");
      SQLUtil.isProcedureCall("");
      DBSchema dBSchema0 = new DBSchema("DATE");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Zn", dBSchema0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, (DBDataType) null);
      defaultDBColumn0.getForeignKeyConstraint();
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "Zn");
      StringBuilder stringBuilder1 = stringBuilder0.insert(0, "");
      StringBuilder stringBuilder2 = stringBuilder1.append((CharSequence) "");
      StringBuilder stringBuilder3 = stringBuilder2.insert(0, (-2464.1674756901502));
      StringBuilder stringBuilder4 = stringBuilder3.append((Object) "DATE");
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder4, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.833785546820053
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      String[] stringArray0 = new String[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType.getInstance((-447230861), "determi");
      String[] stringArray1 = new String[0];
      SQLUtil.renderWhereClause(stringArray1, stringArray1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = SQLUtil.innerJoin("determi", stringArray1, "alter materialized ", "*L!JU", stringArray0);
      assertEquals("alter materialized  as *L!JU on ", string0);
      
      Boolean boolean0 = SQLUtil.mutatesStructure("");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.0592293789763123
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("ym6TwwL6#la\"jBg9]");
      SQLUtil.parseColumnTypeAndSize("6THCa");
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.1209503926735833
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      String[] stringArray1 = new String[9];
      stringArray1[0] = "";
      stringArray1[1] = "";
      stringArray1[2] = "";
      stringArray1[3] = "";
      stringArray1[4] = "";
      stringArray1[5] = "";
      stringArray1[6] = "";
      stringArray1[7] = "org.apache.derby.impl.sql.compile.AggregateNode";
      stringArray1[8] = "";
      SQLUtil.innerJoin("", stringArray0, "", "", stringArray1);
      SQLUtil.isProcedureCall("");
      SQLUtil.isProcedureCall("");
      DBCatalog dBCatalog0 = new DBCatalog("SQLERRML");
      DBSchema dBSchema0 = new DBSchema("", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" as  on . = . and . = . and . = . and . = . and . = .", dBSchema0);
      // Undeclared exception!
      try { 
        defaultDBTable0.getProvider((-548));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.6837389058487535
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "CLOB";
      stringArray0[1] = "CLOB";
      stringArray0[2] = "";
      String string0 = SQLUtil.leftJoin("CLOB", stringArray0, "(;", "", stringArray0);
      assertEquals("left join (; as  on CLOB.CLOB = .CLOB and CLOB.CLOB = .CLOB and CLOB. = .", string0);
      
      String string1 = SQLUtil.innerJoin("left join (; as  on CLOB.CLOB = .CLOB and CLOB.CLOB = .CLOB and CLOB. = .", stringArray0, "", "CLOB", stringArray0);
      assertEquals(" as CLOB on left join (; as  on CLOB.CLOB = .CLOB and CLOB.CLOB = .CLOB and CLOB. = ..CLOB = CLOB.CLOB and left join (; as  on CLOB.CLOB = .CLOB and CLOB.CLOB = .CLOB and CLOB. = ..CLOB = CLOB.CLOB and left join (; as  on CLOB.CLOB = .CLOB and CLOB.CLOB = .CLOB and CLOB. = .. = CLOB.", string1);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[1];
      stringArray1[0] = "w(i";
      String string0 = SQLUtil.innerJoin("w(i", stringArray0, (String) null, (String) null, stringArray1);
      assertEquals("null as null on ", string0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      SQLUtil.isDDL("delete");
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("delete", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "C96kGhOt~`";
      stringArray0[1] = "C96kGhOt~`";
      stringArray0[2] = "C96kGhOt~`";
      stringArray0[3] = "C96kGhOt~`";
      String string0 = SQLUtil.renderColumnListWithTableName("C96kGhOt~`", stringArray0);
      SQLUtil.renderColumnNames(stringArray0);
      String string1 = SQLUtil.removeComments("C96kGhOt~`");
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "mN #RHlAFm ";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      SQLUtil.innerJoin("mN #RHlAFm  = 'mN #RHlAFm ' AND null = null", stringArray0, "w(1i", "w(1i", stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.9559838465843622
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("p[Z");
      assertNull(boolean0);
      
      VersionNumber versionNumber0 = VersionNumber.valueOf("p[Z");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("p[Z", "p[Z", versionNumber0);
      String string0 = SQLUtil.ownerDotComponent(defaultDatabase0);
      assertEquals("p[Z", string0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("PtSIw/gd");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      String string0 = SQLUtil.renderColumnListWithTableName("", stringArray0);
      assertEquals(".", string0);
      
      String string1 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("()", string1);
      
      String string2 = SQLUtil.leftJoin((String) null, stringArray0, "", "", stringArray0);
      assertEquals("left join  as  on null. = .", string2);
      
      String string3 = SQLUtil.removeComments(".");
      assertTrue(string3.equals((Object)string0));
  }

  /**
  //Test case number: 109
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      String string0 = SQLUtil.renderValue(integer0);
      assertEquals("3", string0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.3378606778364337
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      String[] stringArray0 = new String[15];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      String string1 = SQLUtil.innerJoin("null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", stringArray0, "null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", "null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", stringArray0);
      String string2 = SQLUtil.leftJoin("xjor95~LLR'", stringArray0, ">Y7Lj3j.", string1, stringArray0);
      assertFalse(string2.equals((Object)string0));
  }

  /**
  //Test case number: 111
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "$5Hk|3:GyAjP]-_5";
      stringArray0[1] = "R[";
      stringArray0[2] = "$5Hk|3:GyAjP]-_5";
      stringArray0[3] = "$5Hk|3:GyAjP]-_5";
      stringArray0[4] = "$5Hk|3:GyAjP]-_5";
      stringArray0[5] = "2e";
      String[] stringArray1 = new String[1];
      stringArray1[0] = null;
      // Undeclared exception!
      try { 
        SQLUtil.join("$5Hk|3:GyAjP]-_5", "2e", stringArray0, (String) null, "$5Hk|3:GyAjP]-_5", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      System.setCurrentTimeMillis(4605L);
      String[] stringArray0 = new String[0];
      SQLUtil.join("OIU", (String) null, stringArray0, "executese+sion", "", stringArray0);
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize(" 2&8~*");
      assertEquals(1, objectArray0.length);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "i4DQ')7V";
      stringArray0[1] = "i4DQ')7V";
      String string0 = SQLUtil.join("i4DQ')7V", "i4DQ')7V", stringArray0, "exec", "i4DQ')7V", stringArray0);
      assertEquals("i4DQ')7V join exec as i4DQ')7V on i4DQ')7V.i4DQ')7V = i4DQ')7V.i4DQ')7V and i4DQ')7V.i4DQ')7V = i4DQ')7V.i4DQ')7V", string0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        SQLUtil.join("axj.833TNg^18C< ", "det^erministic", stringArray0, "axj.833TNg^18C< ", "~g$myqC", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.join("getDate", "getDate", stringArray0, "setBoolean(String,boolean)", "setBoolean(String,boolean)", (String[]) null);
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      MockFile mockFile0 = new MockFile("^%2JX/V)");
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("^%2JX/V)", (String[]) null, "^%2JX/V)", "^%2JX/V)", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.9559838465843624
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      String string0 = "SESSION";
      SQLUtil.mutatesDataOrStructure("SESSION");
      DBTable dBTable0 = null;
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource0.getLogWriter();
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, true, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      MockFile mockFile0 = new MockFile("alter session", "E= ,");
      FileUtil.canonicalFile((File) mockFile0);
      MockFile mockFile1 = new MockFile("alter session", "C96kGhOt~`");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile1);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      String string0 = SQLUtil.ownerDotComponent(defaultDBTable0);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      String string0 = "SESSION";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("SESSION");
      MockFile mockFile0 = new MockFile("SESSION", "SESSION");
      FileUtil.canonicalFile((File) mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      boolean boolean0 = true;
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, true, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      MockFile mockFile0 = new MockFile("SESSION", "SESSION");
      FileUtil.canonicalFile((File) mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      String string0 = SQLUtil.ownerDotComponent(defaultDBTable0);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.9559838465843624
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("p[Z");
      VersionNumber versionNumber0 = VersionNumber.valueOf("p[Z");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("p[Z", "p[Z", versionNumber0);
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.310783678099714
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("truncate");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("0N-LaT");
      assertFalse(boolean0);
      
      Boolean boolean1 = SQLUtil.mutatesDataOrStructure("0N-LaT");
      assertNull(boolean1);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "0N-LaT";
      String string0 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("(0N-LaT, , , , , , , )", string0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure(" ESCAPE ");
      assertNull(boolean0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("()", string0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      SQLUtil.isDDL("2Q>{f7OzJFRkFvd");
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.154783153373369
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("setBoolean(String,boolean)");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure(",");
      assertNull(boolean0);
      
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(",", (DBTable) null, 3515, "?jlQWZzS3]S");
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("?JLQWZZS3]S", string0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("!6=*X[]5epo5G", (DBTable) null, 89, "])Hvw pv@o?");
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("!6=*X[]5epo5G ])HVW PV@O? NULL", string0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("SESSIO");
      SQLUtil.isDDL("SESSIO");
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Boolean.valueOf("create materialized view");
      SQLUtil.isDDL("create materialized view");
      StringBuilder stringBuilder0 = new StringBuilder("create materialized view");
      assertEquals("create materialized view", stringBuilder0.toString());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.2424533248940002
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter tableselectselect intov  hkldh(eez * xjf ]");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join(":5Iv5mZIX2", "P#,\":2dK!<atU`jK8", (String[]) null, "unaligned write ", "", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      String string0 = "create materialized viewexecute<q[npp";
      // Undeclared exception!
      try { 
        SQLUtil.join("create materialized viewexecute<q[npp", "", (String[]) null, "update", " keys:", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      System.setCurrentTimeMillis((-1798L));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "update";
      stringArray0[1] = "=/5: #";
      stringArray0[2] = " keys:";
      stringArray0[3] = "update";
      stringArray0[4] = " 2&8~*";
      SQLUtil.join("", "", stringArray0, (String) null, ".", stringArray0);
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("");
      assertEquals(1, objectArray0.length);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("select into/+oe!\"o%=ps2<", "select into/+oe!\"o%=ps2<", (String[]) null, "UHm", "select into/+oe!\"o%=ps2<", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.innerJoin("create materialized viewlocate", stringArray0, "create materialized viewlocate", "create materialized viewlocate", stringArray0);
      assertEquals("create materialized viewlocate as create materialized viewlocate on ", string0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("exhc=", "exhc=", (String[]) null, "exhc=", "exhc=", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        SQLUtil.join((String) null, (String) null, (String[]) null, (String) null, "bw7", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }
}
