/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 08:46:50 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0238736061572697
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4712);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4712, "=.wuq4*weW\"~:ak}: W", "=.wuq4*weW\"~:ak}: W", "=.wuq4*weW\"~:ak}: W", "=.wuq4*weW\"~:ak}: W");
      classWriter0.version = 50;
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.getSize();
      byteVector0.putByte(24);
      ClassWriter classWriter1 = new ClassWriter((-1039));
      classWriter1.index = (-1039);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter1, 50, "=.wuq4*weW\"~:ak}: W", "long", "", "");
      fieldWriter1.getSize();
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
      
      int int1 = fieldWriter1.getSize();
      assertEquals(24, int1);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.8545607627328535
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4714);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4714, "=.wuq4*weW\"~:ak}: W", "=.wuq4*weW\"~:ak}: W", "=.wuq4*weW\"~:ak}: W", "=.wuq4*weW\"~:ak}: W");
      classWriter0.version = 2;
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putByte(2);
      ClassWriter classWriter1 = new ClassWriter((-1039));
      classWriter1.index = (-1039);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter1, 1, "=.wuq4*weW\"~:ak}: W", "P :/~v92whD", "P :/~v92whD", "P :/~v92whD");
      ByteVector byteVector2 = new ByteVector();
      fieldWriter1.put(byteVector1);
      fieldWriter0.put(byteVector0);
      assertFalse(fieldWriter0.equals((Object)fieldWriter1));
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.343193896232072
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1675));
      classWriter0.index = (-1675);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1675), "h", "h", (String) null, "h");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.length = 2;
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "Signature", "Signature", "Signature", "Signature");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0829081047004716
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, ".", ".", (String) null, ".");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0615632381579823
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1650));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1650), "h", "h", (String) null, "h");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-459));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "=.wuq4*weW\"~:ak}: W", "=.wuq4*weW\"~:ak}: W", "=.wuq4*weW\"~:ak}: W", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-459));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "=.wuq4*weW\"~:ak}: W", "=.wuq4*weW\"~:ak}: W", "=.wuq4*weW\"~:ak}: W", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2085));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Signature", "Signature", "Signature", "Signature");
      fieldWriter0.visitAnnotation("Signature", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.779633722950942
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "TDNRHynd7z82}`Kd)<", "bD0", "3]CiR&56d", "bD0");
      classWriter0.newClassItem("3]CiR&56d");
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("bD0");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAttribute(attribute0);
      classWriter0.newMethod("", "RuntimeInvisibleAnnotations", "TDNRHynd7z82}`Kd)<", false);
      ByteVector byteVector1 = byteVector0.putUTF8("");
      ByteVector byteVector2 = byteVector1.putLong(1);
      fieldWriter0.visitAnnotation("", false);
      // Undeclared exception!
      fieldWriter0.put(byteVector2);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1650));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1650), "h", "h", (String) null, "h");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.length = (-1650);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-459));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-459), "=.wuq4*weW\"~:ak}: W", "=.wuq4*weW\"~:ak}: W", "=.wuq4*weW\"~:ak}: W", "=.wuq4*weW\"~:ak}: W");
      classWriter0.version = (-459);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-459));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-459), "=.wuq4*weW\"~:ak}: W", "=.wuq4*weW\"~:ak}: W", "=.wuq4*weW\"~:ak}: W", "=.wuq4*weW\"~:ak}: W");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4714);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Synthetic", "Synthetic", "Synthetic", "Synthetic");
      fieldWriter0.visitAnnotation("Synthetic", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4714);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4714, "=.wuq4*weW\"~:ak}: W", "=.wuq4*weW\"~:ak}: W", "=.wuq4*weW\"~:ak}: W", "=.wuq4*weW\"~:ak}: W");
      classWriter0.version = 49;
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1650));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1650), "h", "h", "h", "h");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 7, "Signatture", "Signatture", "Signatture", "Signatture");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 2, "Signatture", "Signatture", "Signatture", "Signatture");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(255);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 255, "Signatture", "Signatture", "Signatture", "Signatture");
      fieldWriter0.visitAnnotation("Signatture", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.039435730626322
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(31);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 31, ".", ".", ".", ".");
      fieldWriter0.getSize();
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation(".", false);
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65517);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", (String) null, "");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, ".", ".", ".", ".");
      fieldWriter0.visitAnnotation(".", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5679);
      classWriter0.version = 642;
      classWriter0.addUninitializedType("q", 184);
      classWriter0.addType("$3'OpqDN");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 642, "of)xo*", "g)_Yx/_KT", "X", "g)_Yx/_KT");
      fieldWriter0.visitAnnotation("of)xo*", true);
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
      Attribute attribute0 = new Attribute("q");
      ClassWriter classWriter1 = new ClassWriter(131072);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4714);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Synthetic", "Synthetic", "Synthetic", "Synthetic");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1675));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1675), "|M", "|M", (String) null, "|M");
      Attribute attribute0 = new Attribute("|M");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, (-494), "The wildcard list must not be null", "The wildcard list must not be null", "The wildcard list must not be null", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-459));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, "=.wuq4*weW\"~:ak}: W", "=.wuq4*weW\"~:ak}: W", "=.wuq4*weW\"~:ak}: W", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-459));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "=.wuq4*weW\"~:ak}: W", "=.wuq4*weW\"~:ak}: W", "=.wuq4*weW\"~:ak}: W", "=.wuq4*weW\"~:ak}: W");
      Attribute attribute0 = new Attribute("=.wuq4*weW\"~:ak}: W");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
