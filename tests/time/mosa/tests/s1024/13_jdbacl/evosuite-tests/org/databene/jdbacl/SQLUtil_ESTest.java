/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 28 06:55:59 GMT 2020
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedReader;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.net.URI;
import java.util.List;
import java.util.Vector;
import org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBNotNullConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.nval = (double) (-4);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 4", string0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("(h lu^QH:o!/");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (h lu^QH:o!/
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers("", ";p5 $\")", "select into;p5 $\")oiq@yrvs.");
      assertEquals("", string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = SQLUtil.renderValue(stringBuilder0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("^h%57nFLYZh .w2X)7K", defaultDBTable0, 539, "^h%57nFLYZh .w2X)7K");
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("^h%57nFLYZh .w2X)7K", string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, (-5151), "");
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      vector0.add((DBColumn) defaultDBColumn0);
      String string0 = SQLUtil.renderColumnNames((List<DBColumn>) vector0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      String string0 = SQLUtil.removeComments("gF#+M:zY5D");
      assertEquals("gF#+M:zY5D", string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("alter tableexecuteselect * from null where null = null and null = null and null = null and null = null and null = null and null = null and null = null and null = null and null = null and null = null and null = null and null = null and null = null and null = null and null = null");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("selectinsertthis statement is lready closed.");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("call");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("deleteusdsfv$");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("alter materialized view");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("got ", false, "got ", "got ");
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder0 = SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, (StringBuilder) null, nameSpec0);
      assertNull(stringBuilder0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "-%E8p./kbQ^84/(7Gni", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE ()", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      String string0 = SQLUtil.renderValue((Object) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.renderValue(defaultDBTable0);
      assertNull(string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("java.sql.Date", defaultDBTable0, (-2675), "");
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("", stringBuilder0.toString());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((DBColumn[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      String string0 = SQLUtil.renderColumnNames((String[]) null);
      assertEquals("()", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String string0 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("(, )", string0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("()", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnListWithTableName((String) null, stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      String[] stringArray0 = new String[5];
      String string0 = SQLUtil.renderColumnListWithTableName("", stringArray0);
      assertEquals(".null, .null, .null, .null, .null", string0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema((String) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("eZhFs)=Ab7|Jita|(E]r", dBSchema0);
      String[] stringArray0 = new String[0];
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("eZhFs)=Ab7|Jita|(E]r", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("eZhFs)=Ab7|Jita|(E]r");
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, mockPrintWriter0);
      assertEquals("eZhFs)=Ab7|Jita|(E]r", dBForeignKeyConstraint0.getName());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey((DBForeignKeyConstraint) null, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      String string0 = SQLUtil.removeComments("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4270610433807247
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "j~gFi/QLa<", true, (String[]) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT j~gFi/QLa< PRIMARY KEY ()", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("");
      assertEquals(1, objectArray0.length);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      String string0 = SQLUtil.normalize("", true);
      assertEquals("", string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.310783678099714
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.8438614379613667
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("");
      assertNull(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.45056120886630463
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.leftJoin("", stringArray0, "", "", stringArray0);
      assertEquals("left join  as  on .null = .null", string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      String[] stringArray0 = new String[19];
      String string0 = SQLUtil.leftJoin("", stringArray0, (String) null, (String) null, stringArray0);
      assertEquals("left join null as null on .null = null.null and .null = null.null and .null = null.null and .null = null.null and .null = null.null and .null = null.null and .null = null.null and .null = null.null and .null = null.null and .null = null.null and .null = null.null and .null = null.null and .null = null.null and .null = null.null and .null = null.null and .null = null.null and .null = null.null and .null = null.null and .null = null.null", string0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.join("\"-K+peR<w>dT>nn{", "UwqRi", stringArray0, (String) null, (String) null, stringArray0);
      assertEquals("\"-K+peR<w>dT>nn{ join null as null on ", string0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.join("hQ}+A", "hQ}+A", stringArray0, "hQ}+A", "preparing statement: ", stringArray0);
      assertEquals("hQ}+A join hQ}+A as preparing statement:  on ", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String string0 = SQLUtil.join("", "", stringArray0, "", "", stringArray0);
      assertEquals(" as  on .null = .null and .null = .null", string0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join((String) null, "SELECT * FROM ", (String[]) null, "SELECT * FROM ", (String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("Unable to load the class {0} responsible for the datatype {1}");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.45056120886630463
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.innerJoin("left join zDVrFl as zDVrFl on zDVrFl.null = zDVrFl.null", stringArray0, (String) null, (String) null, stringArray0);
      assertEquals("null as null on left join zDVrFl as zDVrFl on zDVrFl.null = zDVrFl.null.null = null.null", string0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      String[] stringArray0 = new String[10];
      String string0 = SQLUtil.innerJoin("/.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null", stringArray0, "", "", stringArray0);
      assertEquals(" as  on /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null.null = .null and /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null.null = .null and /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null.null = .null and /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null.null = .null and /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null.null = .null and /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null.null = .null and /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null.null = .null and /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null.null = .null and /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null.null = .null and /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null, /.null.null = .null", string0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[0];
      String string0 = SQLUtil.innerJoin((String) null, stringArray0, "N@y", "N@y", stringArray1);
      assertEquals("N@y as N@y on ", string0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      String[] stringArray0 = new String[5];
      String string0 = SQLUtil.innerJoin("", stringArray0, "setNClob(int, NClob)", stringArray0[0], stringArray0);
      assertEquals("setNClob(int, NClob) as null on .null = null.null and .null = null.null and .null = null.null and .null = null.null and .null = null.null", string0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      String[] stringArray0 = new String[7];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("updatalt");
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("updatalt", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT updatalt FOREIGN KEY (, , , , , , ) REFERENCES updatalt(, , , , , , )", string0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("truncategetpassword", false, "truncategetpassword", "truncategetpassword");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBCheckConstraint0, nameSpec0);
      assertEquals("", stringBuilder0.toString());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.1682824501765625
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("Uw7R", false, "Uw7R", "Uw7R");
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, (NameSpec) null);
      assertEquals("CHECK Uw7R", string0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("SELECT * FROM ", true, "SELECT * FROM ", "SELECT * FROM ");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "SELECT * FROM ");
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      assertEquals("SELECT * FROM CONSTRAINT \"SELECT * FROM \" ", stringBuilder0.toString());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("", stringBuilder0);
      assertEquals("", stringBuilder1.toString());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition((String) null, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      String[] stringArray0 = new String[5];
      Object[] objectArray0 = new Object[2];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, (String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.15374194270109
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("l");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("l", (DBSchema) null);
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("_^]mW_*nUv0DV}~U");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, true, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) constraintDescriptorList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      Character character0 = Character.valueOf('@');
      columnDescriptorList0.add((Object) character0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Character cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("'H]MpvX20%,", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.mutatesStructure("s</*");
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.mutatesDataOrStructure("\"/*s9F`2:^0NPx]");
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin((String) null, (String[]) null, (String) null, "\"Cl=uPA\"Tw`<}Ph6", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.45056120886630463
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      String[] stringArray0 = new String[8];
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("vvkpp", stringArray0, "getCurrentConnection", "type: ", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("casl", (String) null, (String[]) null, "casl", "casl", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String[] stringArray1 = new String[1];
      // Undeclared exception!
      try { 
        SQLUtil.join("pqsq8Ei5{)3m,", "RELEASE SEINLs", stringArray0, "pqsq8Ei5{)3m,", "pqsq8Ei5{)3m,", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.isQuery("E`}{?>nMWsM {/*~");
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.isProcedureCall("8._n)/*G@M`!h(&P");
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.isDDL("/*");
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("-I<Hru", (String[]) null, "-I<Hru", "-I<Hru", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String[] stringArray0 = new String[3];
      String[] stringArray1 = new String[2];
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("XXLt2]l6@*E", stringArray0, "casl", "42ZA2", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("RELEASE SAVEPOINT ");
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("org.h2.store.fs.FileSystemDisk", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("hQ}+A", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.nval = 0.2705;
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("0.2705", string0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      String string0 = SQLUtil.normalize("Iz*;<'zq2@\"R^S0C7", false);
      assertEquals("Iz *  ; < 'zq2@\"R^S0C7'", string0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      String string0 = SQLUtil.normalize("/*/", false);
      assertEquals("/*/", string0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      String string0 = SQLUtil.normalize("-%EDp./kbQ84/(7GHi", false);
      assertEquals("- % EDp./ kbQ84 / (7GHi", string0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      String string0 = SQLUtil.normalize("a?}hcuy&,", true);
      assertEquals("a ? } hcuy &,", string0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      String string0 = SQLUtil.normalize("alter tablerij[wg@)?p\"|", true);
      assertEquals("alter tablerij [ wg @) ? p \"|\"", string0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      String string0 = SQLUtil.removeComments("/*y*/");
      assertEquals("", string0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      String[] stringArray0 = new String[1];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, false, stringArray0);
      String string0 = SQLUtil.typeAndName(dBPrimaryKeyConstraint0);
      assertEquals("unique constraint constraint", string0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("<3QNt!'c\")^sy3UFTb");
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertEquals("table <3QNt!'c\")^sy3UFTb", string0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertEquals("table null", string0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint(" NOT NULL", false, " NOT NULL", " NOT NULL");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("CONSTRAINT \" NOT NULL\" ", string0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, false, stringArray0);
      String string0 = SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("z,u)zBrrxZ=", true, "z,u)zBrrxZ=", "C_64");
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0);
      assertEquals("CONSTRAINT z,u)zBrrxZ= ", stringBuilder0.toString());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      StringBuilder stringBuilder0 = new StringBuilder("org.apache.derby.impl.sql.catalog.SPSNameCacheable");
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, false, stringArray0);
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0);
      assertEquals("org.apache.derby.impl.sql.catalog.SPSNameCacheable", stringBuilder0.toString());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("6/pFJHj@J@a", dBCatalog0);
      String string0 = SQLUtil.ownerDotComponent(dBSchema0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance(0, "drop materialized view");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", (DBTable) null, dBDataType0, integer0, integer0);
      String string0 = SQLUtil.ownerDotComponent(defaultDBColumn0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "SELECT * FROM ");
      SQLUtil.addOptionalCondition("SELECT * FROM ", stringBuilder0);
      assertEquals("SELECT * FROM  or SELECT * FROM ", stringBuilder0.toString());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition("", stringBuilder0);
      assertEquals("", stringBuilder1.toString());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "SELECT * FROM ");
      SQLUtil.addRequiredCondition("SELECT * FROM ", stringBuilder0);
      assertEquals("SELECT * FROM  and SELECT * FROM ", stringBuilder0.toString());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addRequiredCondition((String) null, stringBuilder0);
      assertEquals("null", stringBuilder0.toString());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.464816384890813
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[15];
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("SELECT * FROM null WHERE null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (, , , , , , , , , , , , , , ) REFERENCES null(, , , , , , , , , , , , , , )", string0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[9];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, true, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE (, , , , , , , , )", string0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.320888343149322
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("callrelease savepoint");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.8775242811493906
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select into");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.7214023220140038
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select");
      assertFalse(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter tablejNw>KXin");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter sessiongodt");
      assertNotNull(boolean0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Character character0 = new Character('Q');
      String string0 = SQLUtil.substituteMarkers(".4}(#a;f", "create materialized viewnull", character0);
      assertEquals(".4}(#a;f", string0);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null AND null = null", string0);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-1438407419), "-%E8p./kbQC84/n(qGni");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("-%E8p./kbQC84/n(qGni", defaultDBTable0, dBDataType0, integer0, integer0);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("-%E8P./KBQC84/N(QGNI(1,1)", string0);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance("NCLOB");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("NCLOB", defaultDBTable0, dBDataType0, integer0, integer0);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("NCLOB", string0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-272017165), "RELEASE SA\u0002EPOINLT ");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("RELEASE SA\u0002EPOINLT ", defaultDBTable0, dBDataType0, integer0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("RELEASE SA\u0002EPOINLT  RELEASE SA\u0002EPOINLT (3) NULL", string0);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=0.7595473914748635
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(2189, "q.{;Tzr*_E&?:@PwQ'q");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("q.{;Tzr*_E&?:@PwQ'q", defaultDBTable0, dBDataType0, (Integer) null, integer0);
      DBNotNullConstraint dBNotNullConstraint0 = new DBNotNullConstraint(defaultDBTable0, "\"!q", true, "q.{;Tzr*_E&?:@PwQ'q");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("drop tablerelease savepoint");
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      assertNull(defaultDBTable0.getName());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=0.9830877585747855
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(".4}(#a;f");
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Unable to load the class {0} responsible for the datatype {1}", defaultDBTable0, (-675349775), ";8^idh,xp*.E[I@C");
      defaultDBColumn0.setDefaultValue("\"Xm0EC-,$ A[lb4Zo9");
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      assertEquals("table", defaultDBTable0.getObjectType());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("^h%57nFLYZh .w2X)7K", defaultDBTable0, 4819, "^h%57nFLYZh .w2X)7K");
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      vector0.add((DBColumn) defaultDBColumn0);
      vector0.add((DBColumn) defaultDBColumn0);
      String string0 = SQLUtil.renderColumnNames((List<DBColumn>) vector0);
      assertEquals("^h%57nFLYZh .w2X)7K, ^h%57nFLYZh .w2X)7K", string0);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("&|K\"^KM*1#l", defaultDBTable0, (-7), "&|K\"^KM*1#l");
      DBColumn[] dBColumnArray0 = new DBColumn[5];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 141
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, (-5151), "");
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 142
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("drop table");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      assertNull(defaultDBTable0.getName());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize(" FE=> Password(password=<not shown>)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"password=<not shown>\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("INSERT INTO INFORMATION_SCHEMA.LOBS(ID, BYTE_COUNT, TABLE) VALUES(?, ?, ?)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"ID\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, (-5151), "");
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "A6H", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY ()", string0);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers("", "", "");
      assertEquals("''", string0);
  }

  /**
  //Test case number: 148
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.leftJoin("eZhFs)=Ab7)ita|(E]r", stringArray0, "eZhFs)=Ab7)ita|(E]r", "eZhFs)=Ab7)ita|(E]r", stringArray0);
      assertEquals("left join eZhFs)=Ab7)ita|(E]r as eZhFs)=Ab7)ita|(E]r on ", string0);
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.2636256721237273
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("RELASE SVEINT ");
      String[] stringArray0 = new String[4];
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("gX", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      assertNull(defaultDBTable0.getName());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("&|K\"^KM*N1#l", defaultDBTable0, 13, "&|K\"^KM*N1#l");
      DBNotNullConstraint dBNotNullConstraint0 = new DBNotNullConstraint(defaultDBTable0, "&|K\"^KM*N1#l", true, "&|K\"^KM*N1#l");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBNotNullConstraint0, nameSpec0);
      assertEquals("&|K\"^KM*N1#l NOT NULL", string0);
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.0114042647073516
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM null WHERE null = null", string0);
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.4680602034990462
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      String[] stringArray0 = new String[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "f -cRPZFC_;g[tD", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(dynamicByteArrayOutputStream0, true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      assertNull(defaultDBTable0.getName());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
  }
}
