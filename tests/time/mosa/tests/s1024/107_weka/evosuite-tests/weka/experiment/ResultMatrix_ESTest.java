/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 08:37:56 GMT 2019
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=4.3613826537083416
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1491, 0);
      resultMatrixGnuPlot0.setMeanWidth((-223));
      resultMatrixGnuPlot0.TIE_STRING = "";
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot1);
      resultMatrixSignificance0.globalInfo();
      resultMatrixGnuPlot1.getRowNameWidth();
      resultMatrixGnuPlot1.getDefaultPrintRowNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixSignificance0.getSummaryTitle(1);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "v";
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixLatex0.getDisplayName();
      resultMatrixGnuPlot0.getCountWidth();
      resultMatrixGnuPlot1.getDefaultEnumerateRowNames();
      resultMatrixGnuPlot1.addHeader("L;QV", "");
      resultMatrixLatex0.getCount((-379));
      resultMatrixGnuPlot0.getDefaultStdDevPrec();
      resultMatrixSignificance0.getOptions();
      resultMatrixLatex0.getRevision();
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      resultMatrixLatex0.getRowHidden(0);
      resultMatrixSignificance0.setShowStdDev(true);
      resultMatrixSignificance0.getDisplayName();
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.28221689161357
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.WIN_STRING = " ";
      int[][] intArray0 = new int[10][9];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.setRowName(2, "O@s8mHu");
      resultMatrixLatex0.setRanking(intArray0);
      String[][] stringArray0 = new String[2][5];
      String[] stringArray1 = new String[8];
      stringArray1[0] = " ";
      stringArray1[1] = "(";
      stringArray1[2] = " ";
      stringArray1[3] = "";
      stringArray1[4] = "O@s8mHu";
      stringArray1[5] = "*";
      stringArray1[6] = " ";
      stringArray1[7] = "v";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[3];
      stringArray2[0] = "'78|1V=P_i";
      stringArray2[1] = "YH.g";
      stringArray2[2] = "*";
      stringArray0[1] = stringArray2;
      resultMatrixPlainText0.getColSize(stringArray0, 0, false, false);
      resultMatrixPlainText0.padString("\tThe width of the standard deviation (0 = optimal).\n\t(default: ", 1);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.14509195837646
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance0.assign(resultMatrixSignificance1);
      resultMatrixSignificance0.isMean(1096);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.5930596902385603
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getAverage(0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = ")";
      stringArray0[1] = " ";
      stringArray0[2] = "(";
      stringArray0[3] = "$\bullet$";
      stringArray0[4] = "$\bullet$";
      stringArray0[5] = ")";
      stringArray0[6] = "-count-width <int>";
      stringArray0[7] = "$\bullet$";
      stringArray0[8] = "$\bullet$";
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixLatex0.getEnumerateColNames();
      resultMatrixLatex0.colNameWidthTipText();
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.58379607654672
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.colNameWidthTipText();
      resultMatrixLatex0.setStdDev(1343, 190, Double.NaN);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.7568599726246767
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int int0 = 26;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(46, 26);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.setShowAverage(false);
      // Undeclared exception!
      resultMatrixSignificance0.toArray();
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.9745738743371763
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixCSV0.getColName((-1063));
      resultMatrixCSV0.getRowName((-1541));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixCSV0.setSignificance(2, (-2394), (-2394));
      int[][] intArray0 = new int[6][7];
      int[] intArray1 = new int[9];
      intArray1[0] = (-2394);
      intArray1[1] = 2;
      intArray1[2] = 1;
      intArray1[3] = (-1063);
      intArray1[4] = 0;
      intArray1[5] = 0;
      intArray1[6] = 2791;
      intArray1[7] = 1;
      intArray1[8] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = 0;
      intArray2[1] = 1;
      intArray2[2] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[7];
      intArray3[0] = 2;
      intArray3[1] = 2;
      intArray3[2] = 0;
      intArray3[3] = 2;
      intArray3[4] = 0;
      intArray3[5] = 2;
      intArray3[6] = 1;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[5];
      intArray4[0] = 0;
      intArray4[1] = 2;
      intArray4[2] = 2791;
      intArray4[3] = 2791;
      intArray4[4] = (-1063);
      intArray0[3] = intArray4;
      int[] intArray5 = new int[3];
      intArray5[0] = 1;
      intArray5[1] = 1;
      intArray5[2] = (-907);
      intArray0[4] = intArray5;
      int[] intArray6 = new int[1];
      intArray6[0] = (-907);
      intArray0[5] = intArray6;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.7819487201773083
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth(1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.setRemoveFilterName(true);
      resultMatrixSignificance0.getSummaryTitle(2);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.setShowAverage(true);
      resultMatrixSignificance0.toArray();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 2);
      resultMatrixHTML0.getPrintColNames();
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 2;
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.isRowName(0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.585991948307809
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex0.assign(resultMatrixLatex1);
      resultMatrixLatex0.meanWidthTipText();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.globalInfo();
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.903896993522806
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      int int0 = 0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.getDisplayName();
      int int1 = 10;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "rwO%$afS^zn]{";
      stringArray0[1] = "CSV";
      stringArray0[2] = "v";
      stringArray0[3] = "]";
      ResultMatrixCSV.main(stringArray0);
      resultMatrixCSV0.getColHidden(10);
      resultMatrixCSV0.getCountWidth();
      int int2 = (-1709);
      resultMatrixCSV0.getMean((-1709), 0);
      resultMatrixCSV0.getRowCount();
      ResultMatrixHTML resultMatrixHTML0 = null;
      try {
        resultMatrixHTML0 = new ResultMatrixHTML((ResultMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.2677343533077416
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[1][5];
      int[] intArray1 = new int[9];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 1;
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray1[5] = 0;
      intArray1[6] = 2;
      intArray1[7] = 81;
      intArray1[8] = 1;
      intArray0[0] = intArray1;
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      resultMatrixLatex0.getDefaultSignificanceWidth();
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.7079460062160763
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixCSV0.toStringKey();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex0.setRowNameWidth(92);
      resultMatrixLatex0.getDisplayCol(1);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.291940195999084
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.setSize(2, 1856);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      String[] stringArray0 = new String[8];
      resultMatrixSignificance0.toStringRanking();
      stringArray0[0] = "*";
      stringArray0[1] = " ";
      stringArray0[2] = " ";
      stringArray0[3] = "*";
      stringArray0[4] = "*";
      stringArray0[5] = "-stddev-width";
      stringArray0[6] = " ";
      stringArray0[7] = "*";
      try { 
        resultMatrixSignificance0.setOptions(stringArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \" \"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.3692248028566616
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.doubleToString(5.7, (-2090));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.2888024150737896
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 1);
      resultMatrixCSV0.getVisibleColCount();
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.1251186801018926
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      String[] stringArray0 = new String[1];
      resultMatrixLatex0.setSize(6, 6);
      try { 
        resultMatrixSignificance0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.265490632904767
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth(1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = " ";
      stringArray0[1] = "";
      stringArray0[2] = "^72', ?iWRjl[7";
      stringArray0[3] = "[";
      stringArray0[4] = "*";
      stringArray0[5] = " ";
      stringArray0[6] = "v";
      stringArray0[7] = "[";
      resultMatrixCSV0.m_ColNames = stringArray0;
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixSignificance0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getSignificanceCount(1, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.8412770689106983
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getOptions();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV1.removeFilterName("");
      resultMatrixCSV0.setRowName(1, "*");
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[0][5];
      resultMatrixLatex0.setRanking(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(44, 1);
      resultMatrixGnuPlot0.clear();
      resultMatrixCSV0.printRowNamesTipText();
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.9650754008182187
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 1);
      int[] intArray0 = new int[1];
      resultMatrixHTML0.toArray();
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixHTML0.toStringMatrix();
      resultMatrixSignificance0.countWidthTipText();
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.2381553778974093
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.getRowName(0);
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixCSV0.enumerateRowNamesTipText();
      resultMatrixHTML0.assign(resultMatrixCSV0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.1738226963376768
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(14, 14);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.isStdDev(111);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.71527870256604
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "(";
      resultMatrixLatex0.setSize(6, 6);
      resultMatrixSignificance0.setOptions(stringArray0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixSignificance0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.667757574225926
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(19, 19);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.clearHeader();
      String[][] stringArray0 = resultMatrixLatex0.toArray();
      resultMatrixCSV0.setStdDevWidth(95);
      resultMatrixCSV0.m_ColNameWidth = 2652;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.getDisplayName();
      resultMatrixCSV0.WIN_STRING = " ";
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 599;
      resultMatrixSignificance0.m_RankingDiff = intArray0;
      resultMatrixSignificance0.getColNameWidth();
      resultMatrixLatex0.getSummaryTitle(0);
      resultMatrixCSV0.getDisplayName();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 1);
      resultMatrixHTML0.LEFT_PARENTHESES = " ";
      resultMatrixHTML0.toStringSummary();
      resultMatrixCSV0.getColSize(stringArray0, 1);
      resultMatrixLatex0.globalInfo();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.5774088789070086
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth(1);
      resultMatrixCSV0.toStringKey();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixCSV0.getVisibleRowCount();
      resultMatrixCSV0.getStdDevWidth();
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.7268100174341185
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 1);
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixHTML0.toStringMatrix();
      resultMatrixCSV0.toStringSummary();
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.208596906073483
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      int int0 = ResultMatrix.SIGNIFICANCE_WIN;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.getDisplayCol(1);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getMean(1, 3);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.995188300252759
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 1);
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getAverage(1);
      resultMatrixHTML0.setColOrder(intArray0);
      resultMatrixHTML0.printRowNamesTipText();
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.430382262034954
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDisplayCol(0);
      resultMatrixLatex0.setSignificance(0, (-2037), (-1804));
      resultMatrixLatex0.meanPrecTipText();
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.3971117006719167
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.addHeader("", "");
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.setShowAverage(true);
      resultMatrixLatex0.setStdDevPrec(2);
      double[][] doubleArray0 = new double[3][2];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) 2;
      resultMatrixSignificance0.WIN_STRING = "$circ$";
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 1;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[1];
      resultMatrixLatex0.toStringRanking();
      doubleArray2[0] = (double) 2;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[1];
      doubleArray3[0] = (double) 2;
      doubleArray0[2] = doubleArray3;
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 2;
      intArray0[4] = 2;
      resultMatrixSignificance0.m_RankingLosses = intArray0;
      resultMatrixSignificance0.m_Mean = doubleArray0;
      resultMatrixSignificance0.getVisibleRowCount();
      resultMatrixLatex0.setMean(1, 2, 1.0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringRanking();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.990796954213081
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.getDefaultEnumerateColNames();
      resultMatrixCSV0.getRowName(91);
      resultMatrixLatex1.getDisplayCol(2);
      resultMatrixCSV0.getMean(0, (-1));
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.169501957207281
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int int0 = 95;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.padString((String) null, 95, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.209690574757518
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixPlainText0.TIE_STRING = resultMatrixPlainText0.TIE_STRING;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex1.getDisplayCol(356);
      resultMatrixCSV0.getMean(0, 2);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.5673897191026502
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toArray();
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.getDefaultEnumerateColNames();
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.getDisplayCol(30);
      resultMatrixCSV0.getMean((-3971), 2);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.5404573970730153
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDisplayCol(3);
      resultMatrixCSV0.getMean(3, 0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.6586200642568665
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[7];
      intArray0[0] = 2;
      intArray0[1] = (-246);
      intArray0[2] = 0;
      intArray0[3] = 2;
      intArray0[4] = 2;
      resultMatrixHTML0.m_StdDevWidth = 2;
      intArray0[5] = 1;
      intArray0[6] = (-1);
      resultMatrixHTML0.m_ColOrder = intArray0;
      resultMatrixHTML0.toArray();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getAverage(0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.8737396718687447
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.WIN_STRING = " ";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 1);
      resultMatrixCSV0.getSignificanceCount(0, 0);
      resultMatrixPlainText0.getColName(0);
      resultMatrixPlainText0.toString();
      resultMatrixCSV0.getDefaultShowStdDev();
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.253500590069759
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.WIN_STRING = " ";
      int[][] intArray0 = new int[10][9];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.setRowName(2, "O@s8mHu");
      resultMatrixLatex0.setRanking(intArray0);
      resultMatrixLatex0.getRevision();
      resultMatrixPlainText0.getColOrder();
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.319602936161598
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.getRowCount();
      resultMatrixSignificance0.getDefaultShowStdDev();
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.652319329734742
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.268644396930443
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.WIN_STRING = " ";
      int[][] intArray0 = new int[10][9];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.setRowName(2, "O@s8mHu");
      resultMatrixLatex0.setRanking(intArray0);
      resultMatrixLatex0.getColHidden(0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.5883102129211557
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(60, 2);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[2];
      intArray0[1] = 2;
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.setColNameWidth(2);
      resultMatrixSignificance0.setCountWidth(110);
      resultMatrixSignificance0.getDefaultStdDevWidth();
      resultMatrixSignificance0.setRowHidden(0, false);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getAverage(0);
      resultMatrixLatex0.getColHidden(1);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.4019087104207504
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(2, 1);
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(848, 0);
      resultMatrixLatex0.assign(resultMatrixCSV2);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixCSV1.getRowName(1);
      resultMatrixLatex0.getDisplayCol(2);
      resultMatrixCSV2.toStringKey();
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.5232671685455057
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      resultMatrixSignificance0.getSignificance(0, (-1751));
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixSignificance0.getColName(142);
      resultMatrixCSV0.getDefaultPrintColNames();
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.2286443931453856
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(3, 3);
      resultMatrixPlainText0.getColCount();
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.3976994496627313
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRowNameWidth(3);
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      resultMatrixGnuPlot0.m_RankingWins = intArray0;
      int[][] intArray1 = new int[8][0];
      intArray1[0] = intArray0;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setStdDev(1, 1, 1);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.4859283519853634
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultRowNameWidth();
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.2846082542313866
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.getSignificance(0, 1);
      resultMatrixSignificance0.setMeanWidth(0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.assign(resultMatrixLatex0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixSignificance0.getSignificanceWidth();
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.5350884754592706
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDisplayCol((-2080));
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.902287744953411
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.WIN_STRING = " ";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixPlainText0.toString();
      resultMatrixLatex0.LEFT_PARENTHESES = "v";
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(2, 207);
      resultMatrixCSV1.getRowName((-1037));
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.9656412237616636
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 26);
      resultMatrixHTML0.setRowOrder((int[]) null);
      resultMatrixHTML0.toStringMatrix();
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.299619950746806
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.getDisplayName();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixLatex0.WIN_STRING = " ";
      resultMatrixSignificance0.setPrintRowNames(true);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearRanking();
      resultMatrixCSV0.setColName(1, "");
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex1.getAverage(1);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.726813275665225
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 1);
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.getDefaultColNameWidth();
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.9789445996372423
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth(1);
      resultMatrixCSV0.setRowNameWidth(11);
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.getRowName(11);
      String[] stringArray0 = new String[8];
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixCSV0.removeFilterName("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n");
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.3840521003636868
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDisplayCol(0);
      resultMatrixLatex0.significanceWidthTipText();
  }

  /**
  //Test case number: 55
  /*Coverage entropy=4.053955303829246
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth(1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.setRemoveFilterName(true);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.setShowAverage(true);
      resultMatrixSignificance0.toArray();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 2);
      resultMatrixHTML0.getPrintColNames();
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixHTML0.printColNamesTipText();
      resultMatrixSignificance0.getRevision();
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.5354315286325124
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      int[][] intArray0 = new int[7][9];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.LEFT_PARENTHESES = "+ )]f@t!|)h";
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      resultMatrixLatex0.removeFilterNameTipText();
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.6325356360474927
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(17, 0);
      resultMatrixSignificance0.getSignificance((-3), (-1));
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(22, 2);
      resultMatrixSignificance1.getDefaultPrintColNames();
      ResultMatrixPlainText resultMatrixPlainText1 = null;
      try {
        resultMatrixPlainText1 = new ResultMatrixPlainText((-1036), 162);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=4.003462278277675
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.WIN_STRING = " ";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 26);
      resultMatrixCSV0.setRowNameWidth(36);
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.getVisibleColCount();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "(";
      stringArray0[1] = " ";
      stringArray0[2] = "[";
      stringArray0[3] = "H.W)h1U";
      stringArray0[4] = "Dataset,[1],[2],''\nrow0,'','',''\nrow1,'','',''\nrow2,'','',''\nrow3,'','',''\nrow4,'','',''\nrow5,'','',''\nrow6,'','',''\nrow7,'','',''\nrow8,'','',''\nrow9,'','',''\nrow10,'','',''\nrow11,'','',''\nrow12,'','',''\nrow13,'','',''\nrow14,'','',''\nrow15,'','',''\nrow16,'','',''\nrow17,'','',''\nrow18,'','',''\nrow19,'','',''\nrow20,'','',''\nrow21,'','',''\nrow22,'','',''\nrow23,'','',''\nrow24,'','',''\nrow25,'','',''\n'[v/ /*]','','',[0/0/0]\n";
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixLatex0.getDefaultPrintColNames();
      resultMatrixCSV0.getRowHidden(1);
      assertEquals(36, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.683964806976824
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      String string0 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 1);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV1.setRowName(1, "v");
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertTrue(resultMatrixCSV1.getPrintRowNames());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertTrue(resultMatrixCSV1.getEnumerateColNames());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(13, 2);
      int[][] intArray0 = new int[0][7];
      resultMatrixLatex0.setRanking(intArray0);
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.587774479502105
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setRowName(0, "$circ$");
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getDefaultStdDevWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getDefaultCountWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.291697895352307
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_PrintRowNames = true;
      resultMatrixLatex0.getColName(2);
      // Undeclared exception!
      resultMatrixLatex0.setSize(344, 344);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.8296366086996474
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.toStringMatrix();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.stdDevPrecTipText();
      resultMatrixCSV0.getEnumerateRowNames();
      resultMatrixCSV0.getColNameWidth();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(37, 2);
      resultMatrixLatex1.setEnumerateRowNames(false);
      resultMatrixLatex0.assign(resultMatrixCSV0);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixCSV0.getRowName(0);
      resultMatrixLatex0.getDisplayCol(2);
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.toStringRanking();
      resultMatrixSignificance0.setSize(0, 1);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=4.110743735349922
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearRanking();
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.stdDevPrecTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.getDefaultPrintColNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixSignificance0);
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixHTML2.setRowOrder(intArray0);
      assertEquals(1, resultMatrixHTML2.getVisibleColCount());
      
      String string0 = resultMatrixHTML1.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>[1]</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>[v/ /*]</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixHTML0.getStdDev(0, (-42));
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.7906797860286603
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearRanking();
      String string0 = resultMatrixCSV0.padString("", (-469));
      assertEquals("", string0);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixHTML0.rowNameWidthTipText();
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      
      int int0 = resultMatrixCSV0.getSignificanceCount(22, 26);
      assertEquals(0, int0);
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.928505813773319
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getStdDevWidth();
      resultMatrixCSV0.getOptions();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.setColNameWidth(2183);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.padString((String) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.9642609765460373
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      
      String string0 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 1);
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      
      resultMatrixHTML0.getDefaultEnumerateRowNames();
      resultMatrixHTML0.significanceWidthTipText();
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.073291247675771
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.assign((ResultMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.2842228217416776
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[1];
      boolean boolean0 = resultMatrixLatex0.isRowName((-313));
      assertFalse(boolean0);
      assertFalse(resultMatrixLatex0.getDefaultRemoveFilterName());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertEquals(1, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.8437004605740843
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.toStringMatrix();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.stdDevPrecTipText();
      resultMatrixCSV0.getEnumerateRowNames();
      resultMatrixCSV0.getColNameWidth();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(37, 2);
      resultMatrixLatex1.setEnumerateRowNames(false);
      resultMatrixCSV0.toStringKey();
      resultMatrixLatex0.assign(resultMatrixCSV0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.getPrintColNames();
      resultMatrixHTML0.getStdDev((-1244), 0);
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      
      resultMatrixCSV0.toStringKey();
      resultMatrixPlainText0.getDefaultCountWidth();
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=4.08219967724239
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.stdDevPrecTipText();
      resultMatrixLatex0.getDefaultPrintColNames();
      resultMatrixCSV0.toStringKey();
      resultMatrixLatex0.assign(resultMatrixCSV0);
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      
      resultMatrixPlainText0.setCount(0, 32);
      assertFalse(resultMatrixPlainText0.getShowAverage());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.6322262420729405
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.getColName((-2695));
      assertNull(string0);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringSummary();
      resultMatrixLatex0.getDefaultRowNameWidth();
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.1912828724807505
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "(";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      int int0 = resultMatrixCSV0.getSignificanceCount(1, 0);
      int int1 = resultMatrixSignificance0.getRowNameWidth();
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertTrue(int1 == int0);
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertFalse(resultMatrixSignificance0.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(0, int1);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.2842228217416776
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setCount((-55), 5.5);
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(0, resultMatrixPlainText0.getDefaultColNameWidth());
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      assertFalse(resultMatrixPlainText0.getShowAverage());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.8159804263615547
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      resultMatrixLatex0.toStringMatrix();
      assertTrue(resultMatrixLatex0.getPrintColNames());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.stdDevPrecTipText();
      resultMatrixCSV0.getEnumerateRowNames();
      resultMatrixCSV0.toStringKey();
      resultMatrixLatex0.assign(resultMatrixCSV0);
      resultMatrixPlainText0.setCount(1, 1649.193587098821);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=4.123033458057758
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.toStringMatrix();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.stdDevPrecTipText();
      resultMatrixCSV0.getEnumerateRowNames();
      resultMatrixCSV0.getColNameWidth();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(37, 2);
      resultMatrixLatex1.setEnumerateRowNames(false);
      resultMatrixLatex0.assign(resultMatrixCSV0);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixCSV0.getRowName(0);
      resultMatrixLatex0.getDisplayCol(2);
      assertEquals(0, resultMatrixLatex0.getVisibleColCount());
      
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.toStringKey();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getStdDev(0, 1);
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.20794861679677
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth(1856);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 2;
      intArray0[2] = 2;
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixCSV0.getStdDev(0, 2);
      assertEquals(1856, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.311424800300607
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      String string0 = resultMatrixCSV0.getColName(1);
      assertNull(string0);
      
      String string1 = resultMatrixCSV0.getRowName(0);
      assertEquals("row0", string1);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixHTML0.setMean(2, (-1), 1);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.2631547599756296
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[2][6];
      int[] intArray1 = new int[3];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 1;
      intArray2[1] = 2;
      intArray2[2] = 0;
      intArray2[3] = 1;
      intArray0[1] = intArray2;
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      int int0 = resultMatrixSignificance0.getMeanPrec();
      assertEquals(0, resultMatrixSignificance0.getDefaultColNameWidth());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertFalse(resultMatrixSignificance0.getDefaultEnumerateRowNames());
      assertEquals(2, int0);
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.575203864926166
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(46, 16);
      resultMatrixSignificance0.getSignificance(0, 1);
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixSignificance0.getColName(25);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1371);
      resultMatrixCSV0.setColNameWidth(1);
      resultMatrixPlainText0.toStringSummary();
      resultMatrixCSV0.getDefaultPrintColNames();
      assertEquals(1, resultMatrixCSV0.getColNameWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDisplayName();
      int int0 = resultMatrixLatex0.getMeanWidth();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.2994442070630416
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(46, 16);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      String string0 = resultMatrixSignificance0.getColName(570);
      assertNull(string0);
      
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixSignificance0.setColOrder(intArray0);
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(16, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getDefaultColNameWidth());
      assertEquals(46, resultMatrixSignificance0.getColCount());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.1456215492674966
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixPlainText0.WIN_STRING = " ";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      double double0 = resultMatrixCSV0.getMean(0, 0);
      assertEquals(Double.NaN, double0, 0.01);
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(5, resultMatrixCSV0.getCountWidth());
      
      resultMatrixPlainText0.getDefaultPrintColNames();
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertFalse(resultMatrixPlainText0.getShowAverage());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.899401780966827
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.getRowName(604);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDisplayCol((-2092));
      resultMatrixCSV0.m_SignificanceWidth = 21;
      resultMatrixCSV0.getMean((-1), (-1));
      assertEquals(21, resultMatrixCSV0.getSignificanceWidth());
      
      resultMatrixLatex0.getDefaultPrintColNames();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.783329407811895
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.setColNameWidth(1);
      resultMatrixSignificance0.setCountWidth(1);
      assertEquals(1, resultMatrixSignificance0.getCountWidth());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.clearHeader();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixLatex0.trimString(")", 1);
      assertEquals(1, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.898372522905092
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearRanking();
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.stdDevPrecTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixHTML0.setRowOrder(intArray0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringMatrix();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.9657277805105386
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(46, 16);
      resultMatrixSignificance0.getSignificance(0, 2);
      resultMatrixSignificance0.getDefaultPrintColNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.getPrintColNames();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.getStdDev(2, 2);
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(46, resultMatrixHTML0.getColCount());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.7564990939320264
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.toStringRanking();
      int int0 = ResultMatrix.SIGNIFICANCE_WIN;
      resultMatrixSignificance0.setMeanWidth(0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 0);
      resultMatrixSignificance0.setEnumerateRowNames(true);
      resultMatrixSignificance0.setCountWidth(40);
      resultMatrixSignificance0.getDefaultStdDevWidth();
      int[] intArray0 = new int[7];
      intArray0[0] = 2;
      intArray0[1] = 2;
      intArray0[2] = 0;
      intArray0[3] = 2;
      resultMatrixHTML0.getColName(1);
      intArray0[4] = 97;
      intArray0[5] = 97;
      intArray0[6] = 2;
      resultMatrixHTML0.setRowOrder(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 69);
      resultMatrixGnuPlot0.addHeader(" ", "count-width");
      resultMatrixGnuPlot0.clearSummary();
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 449);
      resultMatrixPlainText0.getDefaultPrintRowNames();
      resultMatrixLatex0.clear();
      resultMatrixSignificance0.getDisplayRow((-1232));
      assertEquals(40, resultMatrixSignificance0.getCountWidth());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.302545099337686
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.WIN_STRING = " ";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.getPrintColNames();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 2);
      resultMatrixCSV0.clearRanking();
      resultMatrixCSV0.getDisplayName();
      int int0 = resultMatrixCSV0.getVisibleRowCount();
      assertEquals(2, int0);
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      resultMatrixLatex0.getDefaultEnumerateColNames();
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(5, resultMatrixLatex0.getCountWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.1913662210863785
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      String string0 = resultMatrixCSV0.getRowName(0);
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals("row0", string0);
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      
      resultMatrixHTML0.globalInfo();
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.778251091679529
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      int[][] intArray0 = new int[7][9];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      resultMatrixLatex0.toArray();
      resultMatrixLatex0.setSignificance((-1556), (-1556), 376);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.globalInfo();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertFalse(resultMatrixPlainText0.getShowStdDev());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.175914454809299
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      
      resultMatrixCSV0.setStdDevWidth(1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixCSV0.setPrintColNames(false);
      resultMatrixLatex0.assign(resultMatrixCSV0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixCSV0);
      assertEquals(25, resultMatrixLatex1.getRowNameWidth());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.393155448540662
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.setPrintColNames(true);
      String string0 = resultMatrixLatex0.doubleToString(2, 2);
      assertEquals("2.00", string0);
      
      resultMatrixLatex0.WIN_STRING = "*";
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(5, resultMatrixLatex0.getCountWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 1);
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getVisibleColCount());
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.2842228217416776
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getAverage((-257));
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=4.091465236520198
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      String string0 = resultMatrixCSV0.getRowName(0);
      assertEquals("row0", string0);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.setColNameWidth((-2269));
      resultMatrixLatex0.assign(resultMatrixCSV0);
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      
      String string1 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string1);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.3171513686230476
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.getSignificance(0, 97);
      resultMatrixSignificance0.getDefaultPrintColNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.getPrintColNames();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearRanking();
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.getVisibleRowCount();
      resultMatrixHTML0.getDefaultPrintRowNames();
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.020476897320443
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultCountWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixHTML0.getRevision();
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex((-3092), 25);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.6843222172016548
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toArray();
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      
      resultMatrixCSV0.clear();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.8994908970205158
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth((-1443));
      resultMatrixCSV0.setRowNameWidth(604);
      resultMatrixCSV0.toStringMatrix();
      assertEquals(604, resultMatrixCSV0.getRowNameWidth());
      
      resultMatrixCSV0.clear();
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=4.007084680008742
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth((-2246));
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.getVisibleColCount();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.435005016902289
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_EnumerateColNames = false;
      resultMatrixCSV0.LOSS_STRING = " yerrorbars";
      boolean boolean0 = resultMatrixCSV0.getRowHidden((-2738));
      assertFalse(boolean0);
      
      resultMatrixCSV0.setStdDev((-11), (-2738), 4138.16842);
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(0, resultMatrixCSV0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getDefaultShowAverage());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.9950830600419778
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex0.assign(resultMatrixLatex1);
      resultMatrixLatex0.getRowHidden(16);
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertFalse(resultMatrixLatex0.getPrintColNames());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.8667421201304366
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 16);
      resultMatrixSignificance0.getSignificance(0, 2);
      resultMatrixSignificance0.setRemoveFilterName(true);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.setShowAverage(true);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.725800238971447
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.setMeanPrec(0);
      resultMatrixGnuPlot0.setCountWidth(0);
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"(1)\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.getRevision();
      resultMatrixGnuPlot1.getDefaultMeanPrec();
      assertTrue(resultMatrixGnuPlot1.getPrintColNames());
      assertEquals(50, resultMatrixGnuPlot1.getColNameWidth());
      assertFalse(resultMatrixGnuPlot1.getRemoveFilterName());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot2.clearHeader();
      assertEquals(0, resultMatrixGnuPlot2.getMeanWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0, resultMatrixGnuPlot2.getSignificanceWidth());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.5915074803809155
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth(1);
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.getVisibleColCount();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "v";
      resultMatrixCSV0.getRowOrder();
      assertEquals(1, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.3655121313473804
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(46, 16);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      String string0 = resultMatrixSignificance0.getColName(25);
      assertEquals("(26)", string0);
      
      int int1 = resultMatrixSignificance0.getStdDevPrec();
      assertEquals(2, int1);
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(46, resultMatrixSignificance0.getVisibleColCount());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(16, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.587974968695738
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.assign(resultMatrixSignificance0);
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixSignificance0.enumerateColNamesTipText();
      resultMatrixSignificance1.enumerateRowNamesTipText();
      assertEquals(0, resultMatrixSignificance1.getMeanWidth());
      assertTrue(resultMatrixSignificance1.getEnumerateColNames());
      assertEquals(0, resultMatrixSignificance1.getCountWidth());
      assertEquals(2, resultMatrixSignificance1.getStdDevPrec());
      assertEquals(1, resultMatrixSignificance1.getVisibleRowCount());
      assertFalse(resultMatrixSignificance1.getEnumerateRowNames());
      assertEquals(0, resultMatrixSignificance1.getSignificanceWidth());
      assertFalse(resultMatrixSignificance1.getRemoveFilterName());
      assertEquals(0, resultMatrixSignificance1.getStdDevWidth());
      assertFalse(resultMatrixSignificance1.getShowAverage());
      assertEquals(40, resultMatrixSignificance1.getRowNameWidth());
      assertTrue(resultMatrixSignificance1.getPrintRowNames());
      assertEquals(1, resultMatrixSignificance1.getVisibleColCount());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.7336853666613594
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth(1856);
      int int0 = ResultMatrix.SIGNIFICANCE_WIN;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.getDisplayCol(0);
      resultMatrixCSV0.setRowOrder((int[]) null);
      resultMatrixCSV0.getMean(0, 1);
      resultMatrixLatex0.toStringMatrix();
      resultMatrixLatex0.showStdDevTipText();
      assertEquals(1856, resultMatrixCSV0.getStdDevWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.177463589314586
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      assertTrue(resultMatrixLatex0.getPrintColNames());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth(0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.assign(resultMatrixLatex1);
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.2537319376695284
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.getSignificance(0, 97);
      resultMatrixSignificance0.getDefaultPrintColNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.getPrintColNames();
      double double0 = resultMatrixHTML0.getStdDev(1, (-961));
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(0, resultMatrixHTML0.getDefaultSignificanceWidth());
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(0, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.4914587692804866
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV1.getStdDev(914, 2);
      assertTrue(resultMatrixCSV1.getEnumerateColNames());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertTrue(resultMatrixCSV1.getPrintRowNames());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertEquals(1, resultMatrixCSV1.getColCount());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertFalse(resultMatrixCSV1.getDefaultShowAverage());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      assertEquals(1, resultMatrixCSV1.getRowCount());
      assertEquals(0, resultMatrixCSV1.getDefaultColNameWidth());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.9804322884756913
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int int0 = resultMatrixCSV0.getStdDevWidth();
      assertEquals(0, int0);
      
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      resultMatrixSignificance0.setPrintRowNames(true);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixCSV0);
      String string0 = resultMatrixSignificance1.toString();
      assertEquals("Dataset [1]\n-----------\nrow0       \n", string0);
      
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance2.setColHidden(2, true);
      resultMatrixSignificance2.getDefaultPrintColNames();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixSignificance1);
      resultMatrixCSV1.getDefaultPrintColNames();
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.470475351335881
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.setColNameWidth(1);
      resultMatrixSignificance0.setCountWidth(1);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.setColHidden(1, false);
      resultMatrixSignificance0.getDefaultPrintColNames();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.getDefaultPrintColNames();
      assertEquals(1, resultMatrixSignificance0.getColNameWidth());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=4.3065945642167245
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixCSV0.clearRanking();
      resultMatrixCSV0.m_MeanWidth = 1;
      resultMatrixCSV0.getVisibleRowCount();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance1.clearHeader();
      resultMatrixSignificance1.setOptions(stringArray0);
      assertEquals(5, resultMatrixSignificance1.getStdDevPrec());
      
      ResultMatrixSignificance.main(stringArray0);
      assertTrue(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.6468239100140494
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      int int0 = resultMatrixCSV0.getSignificanceCount(2, 2);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=4.187607189482897
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getStdDevWidth();
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.padString("i.m^J", 26, false);
      resultMatrixCSV0.setSignificanceWidth(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixCSV0.getDefaultPrintColNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.rowNameWidthTipText();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.getOptions();
      resultMatrixCSV0.setColName(3, "]");
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML();
      resultMatrixHTML2.getCountWidth();
      resultMatrixCSV0.setEnumerateColNames(false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.toStringKey();
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.enumerateColNamesTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 0);
      resultMatrixLatex0.getStdDevPrec();
      resultMatrixCSV0.getColName(3640);
      resultMatrixLatex0.showStdDevTipText();
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=3.453117975806068
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearRanking();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setCountWidth(1);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixSignificance0.setRowHidden(1, false);
      assertEquals(1, resultMatrixSignificance0.getCountWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getAverage(58);
      assertEquals(1, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.324122434965307
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      int[][] intArray0 = new int[7][9];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray1 = new int[8];
      intArray1[0] = 2;
      intArray1[1] = 2;
      intArray1[2] = 2;
      resultMatrixLatex0.WIN_STRING = "$Revision: 8080 $";
      intArray1[3] = 2;
      intArray1[4] = 2;
      intArray1[5] = 28;
      intArray1[6] = 228;
      intArray1[7] = (-1549);
      resultMatrixLatex0.m_RankingWins = intArray1;
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      resultMatrixLatex0.padString("", 0, false);
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.5396680687913826
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth(1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.setRemoveFilterName(true);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.getSignificanceCount(0, (-1868));
      assertEquals(1, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.7052979827513806
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getRevision();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.WIN_STRING = " ";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      String[][] stringArray0 = resultMatrixHTML0.toArray();
      assertEquals(3, stringArray0.length);
      
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1) col0</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixLatex0.getDefaultShowAverage();
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=3.242982012977635
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.WIN_STRING = "";
      int int0 = resultMatrixGnuPlot0.getRowCount();
      assertEquals(1, int0);
      
      resultMatrixGnuPlot0.clearHeader();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      resultMatrixSignificance0.getDefaultPrintColNames();
      int int1 = resultMatrixGnuPlot0.getDisplayRow(0);
      assertEquals(0, int1);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(40, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=3.6756614858503385
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixSignificance0.getDefaultPrintColNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      boolean boolean0 = resultMatrixHTML0.getPrintColNames();
      assertFalse(boolean0);
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearRanking();
      resultMatrixCSV0.setColName(0, "<|Wc");
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex1.getAverage(2);
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertFalse(resultMatrixLatex1.getDefaultShowAverage());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
      assertEquals(5, resultMatrixLatex1.getCountWidth());
      assertEquals(1, resultMatrixLatex1.getVisibleRowCount());
      assertEquals(25, resultMatrixLatex1.getRowNameWidth());
      assertTrue(resultMatrixLatex1.getPrintColNames());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=4.0499043764620275
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.getSignificance(20, 1);
      resultMatrixSignificance0.getDefaultPrintColNames();
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(5, resultMatrixSignificance0.getCountWidth());
      assertTrue(resultMatrixSignificance0.getPrintColNames());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.55942371019251
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 16);
      resultMatrixSignificance0.getSignificance(0, 2);
      assertEquals(16, resultMatrixSignificance0.getVisibleRowCount());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV0.clearRanking();
      int int0 = resultMatrixCSV1.getVisibleRowCount();
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertEquals(1, resultMatrixCSV1.getColCount());
      assertFalse(resultMatrixCSV1.getShowAverage());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=3.5376731226549287
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      int int0 = resultMatrixLatex0.getDisplayCol(12);
      assertEquals((-1), int0);
      
      resultMatrixLatex1.getDefaultStdDevPrec();
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
      assertFalse(resultMatrixLatex1.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
      assertEquals(1, resultMatrixLatex1.getColCount());
      assertEquals(0, resultMatrixLatex1.getRowNameWidth());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(1, resultMatrixLatex1.getRowCount());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=4.2135158806159865
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "/oK<$iVY";
      stringArray0[1] = "";
      stringArray0[2] = "HOUVf-<?Ax?9a)_0 /<";
      stringArray0[3] = "";
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getColSize((String[][]) null, (-1462), false, true);
      resultMatrixCSV0.getDefaultRemoveFilterName();
      resultMatrixCSV0.getDefaultStdDevPrec();
      resultMatrixCSV0.headerKeys();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDisplayName();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.9637596182147448
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.headerKeys();
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=4.108060769787083
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getStdDevWidth();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      String string0 = resultMatrixCSV0.padString(".m^J", 26, false);
      assertEquals(".m^J                      ", string0);
      
      resultMatrixCSV0.setSignificanceWidth(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(5, 2);
      resultMatrixSignificance1.setCountWidth((-1));
      assertEquals(0, resultMatrixSignificance1.getCountWidth());
      
      resultMatrixGnuPlot0.meanPrecTipText();
      resultMatrixGnuPlot0.getCount(1);
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.5395719426739167
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int int0 = resultMatrixCSV0.getStdDevWidth();
      assertEquals(0, int0);
      
      int[] intArray0 = new int[1];
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getPrintColNames();
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertFalse(resultMatrixHTML0.getShowAverage());
      assertFalse(resultMatrixHTML0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.33845583655607
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 97);
      double[][] doubleArray0 = new double[5][2];
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (double) 2;
      doubleArray1[1] = (double) 1;
      doubleArray1[2] = (double) 1;
      doubleArray1[3] = (double) 2;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) 2;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[5];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = 1311.68;
      doubleArray2[3] = (double) 2;
      doubleArray2[4] = (double) 0;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[5];
      doubleArray3[0] = (double) 0;
      doubleArray3[1] = 0.0;
      doubleArray3[2] = (double) 2;
      doubleArray3[3] = (double) 0;
      doubleArray2[0] = (double) 0;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[0];
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[5];
      doubleArray5[0] = (double) 2;
      doubleArray5[1] = 1960.026;
      doubleArray5[2] = (double) 2;
      doubleArray5[3] = (double) 2;
      doubleArray5[4] = (double) 0;
      doubleArray0[4] = doubleArray5;
      resultMatrixSignificance0.m_Mean = doubleArray0;
      resultMatrixSignificance0.setMeanWidth(0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.assign(resultMatrixSignificance0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=3.9390500091878207
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getShowStdDev();
      String[] stringArray0 = new String[4];
      stringArray0[0] = " ";
      stringArray0[1] = "$\bullet$";
      stringArray0[2] = ")";
      stringArray0[3] = " ";
      ResultMatrixGnuPlot.main(stringArray0);
      assertEquals(4, stringArray0.length);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=4.1082441158527825
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixCSV0.clearRanking();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getAverage(1);
      resultMatrixCSV0.stdDevWidthTipText();
      resultMatrixCSV0.getDisplayName();
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.1929638421348243
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixSignificance0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixCSV1);
      resultMatrixSignificance1.getDefaultMeanWidth();
      assertEquals(0, resultMatrixSignificance1.getSignificanceWidth());
      assertEquals(40, resultMatrixSignificance1.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance1.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance1.getCountWidth());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertFalse(resultMatrixSignificance1.getEnumerateRowNames());
      assertEquals(2, resultMatrixSignificance1.getStdDevPrec());
      
      String string0 = resultMatrixSignificance0.toStringKey();
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertFalse(resultMatrixSignificance0.getShowAverage());
      assertEquals("Key:\n(1) col0\n", string0);
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=4.081193357060762
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getStdDevWidth();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setColNameWidth(141);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      int[][] intArray0 = new int[0][3];
      resultMatrixCSV0.setRanking(intArray0);
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(resultMatrixCSV0);
      assertEquals(0, resultMatrixCSV2.getCountWidth());
      assertEquals(25, resultMatrixCSV2.getRowNameWidth());
      assertEquals(0, resultMatrixCSV2.getStdDevWidth());
      assertTrue(resultMatrixCSV2.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV2.getStdDevPrec());
      assertEquals(2, resultMatrixCSV2.getMeanPrec());
      assertEquals(1, resultMatrixCSV2.getRowCount());
      
      ResultMatrixCSV resultMatrixCSV3 = new ResultMatrixCSV(1, 0);
      resultMatrixCSV3.getDefaultPrintColNames();
      assertEquals(0, resultMatrixCSV3.getMeanWidth());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=4.080560358574454
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getStdDevWidth();
      resultMatrixCSV0.getOptions();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setColNameWidth(420);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixSignificance0);
      int[][] intArray0 = new int[8][5];
      resultMatrixCSV1.addHeader("#set xlabel \"Datasets\"\n", (String) null);
      resultMatrixCSV1.setRanking(intArray0);
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(resultMatrixCSV1);
      assertEquals(420, resultMatrixSignificance0.getColNameWidth());
      
      resultMatrixCSV0.getDefaultPrintColNames();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=3.2402244205585156
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      
      resultMatrixLatex0.setMeanWidth(1);
      resultMatrixLatex0.WIN_STRING = " ";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixLatex0.getAverage(2);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 2);
      resultMatrixGnuPlot0.toStringSummary();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=3.470816112834929
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth(1856);
      resultMatrixCSV0.getVisibleColCount();
      resultMatrixCSV0.getRowName(69);
      assertEquals(1856, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=3.495392721523166
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(22, 22);
      resultMatrixCSV0.toStringKey();
      resultMatrixCSV0.isAverage(1);
      String string0 = resultMatrixCSV0.toStringKey();
      assertEquals(22, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals("Key,\n[1],col0\n[2],col1\n[3],col2\n[4],col3\n[5],col4\n[6],col5\n[7],col6\n[8],col7\n[9],col8\n[10],col9\n[11],col10\n[12],col11\n[13],col12\n[14],col13\n[15],col14\n[16],col15\n[17],col16\n[18],col17\n[19],col18\n[20],col19\n[21],col20\n[22],col21\n", string0);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=3.56758963627982
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      String string0 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      resultMatrixCSV0.getEnumerateRowNames();
      resultMatrixCSV0.getColNameWidth();
      resultMatrixCSV0.toStringKey();
      resultMatrixCSV0.toStringKey();
      assertEquals(0, resultMatrixCSV0.getDefaultStdDevWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=4.01410916776347
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      int int0 = resultMatrixCSV1.getSignificanceCount((-970), (-970));
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertEquals(0, int0);
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=3.196827896676836
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.WIN_STRING = " ";
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.assign(resultMatrixPlainText0);
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(resultMatrixLatex0);
      boolean boolean0 = resultMatrixLatex1.isSignificance(5526);
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertFalse(resultMatrixLatex1.getShowStdDev());
      assertFalse(resultMatrixLatex1.getShowAverage());
      assertFalse(boolean0);
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
      assertEquals(1, resultMatrixLatex1.getVisibleRowCount());
      assertEquals(5, resultMatrixLatex1.getCountWidth());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
      assertTrue(resultMatrixLatex1.getPrintColNames());
      assertEquals(25, resultMatrixLatex1.getRowNameWidth());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=3.373283287640668
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth(5388);
      resultMatrixCSV0.isSignificance(475);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixCSV0.setRowNameWidth(0);
      resultMatrixSignificance0.getSummaryTitle(25);
      resultMatrixSignificance0.m_RemoveFilterName = true;
      resultMatrixSignificance0.setMeanWidth((-1));
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.assign(resultMatrixCSV0);
      assertEquals(5388, resultMatrixCSV0.getStdDevWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultMeanPrec();
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=4.188826358648293
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth(1);
      resultMatrixCSV0.setRowNameWidth(0);
      resultMatrixCSV0.toStringMatrix();
      String[] stringArray0 = new String[7];
      ResultMatrixPlainText.main(stringArray0);
      assertEquals(7, stringArray0.length);
  }

  /**
  //Test case number: 142
  /*Coverage entropy=4.053890335541892
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.setRemoveFilterName(true);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.setShowAverage(false);
      resultMatrixSignificance0.toArray();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.getPrintColNames();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(1, 0);
      ResultMatrixCSV resultMatrixCSV0 = null;
      try {
        resultMatrixCSV0 = new ResultMatrixCSV((ResultMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 143
  /*Coverage entropy=3.5414549530608452
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 1;
      resultMatrixHTML0.m_Counts = doubleArray0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setColOrder((int[]) null);
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=3.5866946272713576
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setShowAverage(false);
      resultMatrixCSV0.toStringKey();
      resultMatrixCSV0.setStdDevWidth(1);
      assertEquals(1, resultMatrixCSV0.getStdDevWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=3.7742834704231383
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      resultMatrixLatex0.WIN_STRING = " ";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.getSignificanceCount(0, 4604);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(5, resultMatrixCSV0.getCountWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=3.5372760609118274
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setCountWidth(114);
      resultMatrixLatex0.getAverage(0);
      int int0 = resultMatrixLatex0.getCountWidth();
      assertEquals(114, int0);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=3.7233837607403233
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringRanking();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      String string0 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 1);
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getAverage(1);
      int int0 = resultMatrixSignificance0.getCountWidth();
      assertEquals(0, int0);
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=3.448505614544631
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setColNameWidth(110);
      resultMatrixCSV0.clearRanking();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixCSV0.getVisibleColCount();
      assertEquals(110, resultMatrixCSV0.getColNameWidth());
      
      String string0 = resultMatrixHTML0.padString("v", (-1755));
      assertEquals("v", string0);
  }

  /**
  //Test case number: 149
  /*Coverage entropy=4.187386916800508
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(60, 2);
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getPrintColNames();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixHTML0.rowNameWidthTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      String[] stringArray0 = resultMatrixHTML1.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixHTML1);
      resultMatrixCSV1.setColName((-2), "{/2%8.hS = /");
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixHTML0);
      assertEquals(25, resultMatrixLatex1.getRowNameWidth());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
      
      double double0 = resultMatrixLatex0.getAverage(2547);
      assertEquals(0.0, double0, 0.01);
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(1, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=4.054056071825331
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixPlainText0.setCount(2, 2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      resultMatrixLatex0.toStringKey();
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=3.587897799270264
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixSignificance0.getDefaultPrintColNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.getPrintColNames();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearRanking();
      resultMatrixCSV0.setColName(2, "(");
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      assertFalse(resultMatrixLatex1.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
      
      resultMatrixLatex0.getAverage(87);
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(1, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=3.3152739318325937
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      int[][] intArray0 = new int[10][9];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      resultMatrixLatex0.rowNameWidthTipText();
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertFalse(resultMatrixLatex0.getShowAverage());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=3.3435470471826703
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[][] stringArray0 = new String[0][1];
      boolean boolean0 = true;
      resultMatrixCSV0.setRemoveFilterName(true);
      int int0 = 1355;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getColSize(stringArray0, 1355);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 154
  /*Coverage entropy=3.5384983413378794
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      int[][] intArray0 = new int[7][9];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.setRowName((-4121), "");
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 155
  /*Coverage entropy=4.080207680177965
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getStdDevWidth();
      resultMatrixCSV0.getOptions();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      resultMatrixSignificance0.setColNameWidth(1);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      int[][] intArray1 = new int[2][9];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setRanking(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 156
  /*Coverage entropy=3.6314291752787433
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.setRowName(19, "(");
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 157
  /*Coverage entropy=3.932429572086393
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 1);
      int[] intArray0 = new int[18];
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixCSV0.getDisplayName();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=3.488690020032864
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      
      int[] intArray0 = new int[0];
      resultMatrixHTML0.setRowOrder(intArray0);
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(1, resultMatrixHTML0.getRowCount());
  }

  /**
  //Test case number: 159
  /*Coverage entropy=3.463055755727146
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 160
  /*Coverage entropy=3.964107238304611
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearRanking();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(15, 0);
      int int0 = resultMatrixCSV1.getVisibleRowCount();
      assertEquals(0, int0);
      assertEquals(15, resultMatrixCSV1.getVisibleColCount());
      
      String string0 = resultMatrixCSV0.toString();
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
  }

  /**
  //Test case number: 161
  /*Coverage entropy=3.2886012080519564
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      int[] intArray0 = new int[1];
      resultMatrixLatex0.setEnumerateRowNames(true);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2001, 2);
      resultMatrixCSV0.toStringKey();
      // Undeclared exception!
      resultMatrixLatex0.assign(resultMatrixCSV0);
  }

  /**
  //Test case number: 162
  /*Coverage entropy=3.587774479502105
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.getSignificance(0, 97);
      resultMatrixSignificance0.setMeanWidth(0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.assign(resultMatrixLatex0);
      assertFalse(resultMatrixHTML0.getShowStdDev());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultMeanPrec();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=4.21351903881164
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth(1370);
      resultMatrixCSV0.setRowNameWidth(2);
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.getVisibleColCount();
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixCSV0.stdDevPrecTipText();
      assertEquals(1370, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 164
  /*Coverage entropy=3.2634978131488714
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      int[][] intArray0 = new int[10][9];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowNameWidth(40);
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      assertEquals(40, resultMatrixLatex0.getRowNameWidth());
  }

  /**
  //Test case number: 165
  /*Coverage entropy=3.5386400847822452
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.setRowNameWidth((-1531));
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixSignificance0);
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      assertEquals(0, resultMatrixLatex1.getRowNameWidth());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(1, resultMatrixLatex1.getVisibleRowCount());
      assertEquals(1, resultMatrixLatex1.getVisibleColCount());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
      assertFalse(resultMatrixLatex1.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
  }

  /**
  //Test case number: 166
  /*Coverage entropy=3.3946173106582624
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.toStringKey();
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultCountWidth());
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption (Key)}\n\\scriptsize\n{\\centering\n\\begin{tabular}{cl}\\\\\n(1) & col0 \\\\\n\\end{tabular}\n}\n\\end{table}\n", string0);
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 167
  /*Coverage entropy=3.53575050789886
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.getSummaryTitle(97);
      assertEquals("t", string0);
      
      double double0 = resultMatrixLatex0.getAverage(97);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
  }

  /**
  //Test case number: 168
  /*Coverage entropy=3.2887062889563237
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[0][4];
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 169
  /*Coverage entropy=3.2286443931453856
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearRanking();
      int int1 = resultMatrixCSV0.getRowNameWidth();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(25, int1);
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertFalse(resultMatrixCSV0.getShowAverage());
  }

  /**
  //Test case number: 170
  /*Coverage entropy=3.7637102865429743
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.toStringRanking();
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      
      resultMatrixLatex0.m_PrintRowNames = false;
      resultMatrixSignificance0.getSignificance(0, 97);
      resultMatrixSignificance0.getDefaultPrintColNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixLatex0.setColHidden((-1514), false);
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
  }

  /**
  //Test case number: 171
  /*Coverage entropy=4.082044012202424
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.getDisplayName();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixLatex0.WIN_STRING = " ";
      resultMatrixSignificance0.setPrintRowNames(true);
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String string0 = resultMatrixSignificance0.toString();
      assertEquals("Dataset (1) col0\n----------------\nrow0            \n", string0);
      
      resultMatrixSignificance0.setColHidden(0, false);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      int int0 = resultMatrixCSV0.getSignificanceCount(1, 1);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 172
  /*Coverage entropy=3.5374801842022947
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setPrintRowNames(true);
      resultMatrixLatex0.listOptions();
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertFalse(resultMatrixLatex0.getShowAverage());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(1, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 173
  /*Coverage entropy=3.5363257164119464
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 2);
      resultMatrixLatex0.WIN_STRING = "";
      resultMatrixLatex0.WIN_STRING = "";
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.setSize(3, 2414);
      resultMatrixLatex0.showAverageTipText();
      assertEquals(3, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 174
  /*Coverage entropy=3.630231058034413
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      String string0 = resultMatrixCSV0.getColName(1);
      assertNull(string0);
      
      String string1 = resultMatrixCSV0.getRowName(0);
      assertEquals("row0", string1);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixCSV0.showAverageTipText();
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
  }

  /**
  //Test case number: 175
  /*Coverage entropy=4.020742547088074
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getStdDevWidth();
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.padString("i.m^J", 26, false);
      resultMatrixCSV0.setSignificanceWidth(0);
      String[][] stringArray0 = new String[0][5];
      resultMatrixCSV0.m_PrintColNames = true;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getColSize(stringArray0, 0, false, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 176
  /*Coverage entropy=4.112892426919577
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixCSV0.clearRanking();
      resultMatrixCSV0.getVisibleRowCount();
      resultMatrixSignificance0.setOptions(stringArray0);
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      
      ResultMatrixSignificance.main(stringArray0);
      assertTrue(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 177
  /*Coverage entropy=3.900255762076467
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setSignificanceWidth(1856);
      assertEquals(1856, resultMatrixCSV0.getSignificanceWidth());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toArray();
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
  }

  /**
  //Test case number: 178
  /*Coverage entropy=3.1699021172713064
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultRemoveFilterName();
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
  }

  /**
  //Test case number: 179
  /*Coverage entropy=3.684600371432793
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixHTML0.getOptions();
      resultMatrixCSV0.getShowAverage();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader(")");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 180
  /*Coverage entropy=4.024793126497041
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1) col0\\\\\n\\hline\nrow0                      &         \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixLatex0.WIN_STRING = " ";
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      
      resultMatrixPlainText0.setCount(26, 0);
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
  }

  /**
  //Test case number: 181
  /*Coverage entropy=3.3155929110989417
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      int[][] intArray0 = new int[7][9];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.padString("", 709);
      assertEqualsstring0);
      
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      assertEquals(0, resultMatrixLatex0.getDefaultCountWidth());
      assertFalse(resultMatrixLatex0.getShowStdDev());
  }

  /**
  //Test case number: 182
  /*Coverage entropy=3.3445858615553106
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(30, 1);
      resultMatrixCSV0.toStringKey();
      resultMatrixSignificance0.setCountWidth(2);
      resultMatrixSignificance0.getDefaultStdDevWidth();
      assertEquals(2, resultMatrixSignificance0.getCountWidth());
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      double double0 = resultMatrixLatex1.getAverage(1);
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 183
  /*Coverage entropy=3.728554483485504
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      int int0 = resultMatrixSignificance0.getSignificance(0, 97);
      assertEquals(0, int0);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.setCountWidth(0);
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"(1)\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixCSV0.getDisplayName();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 184
  /*Coverage entropy=3.1913662210863785
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(1, resultMatrixLatex0.getColCount());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.setColNameWidth(0);
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(0, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      
      resultMatrixLatex0.getDefaultEnumerateColNames();
      assertEquals(1, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 185
  /*Coverage entropy=3.539027932228916
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevPrec((-193));
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      String string0 = resultMatrixCSV0.getColName(495);
      assertNull(string0);
      
      resultMatrixCSV0.getRowName(2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
  }

  /**
  //Test case number: 186
  /*Coverage entropy=3.5394719326729165
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      int[] intArray0 = new int[8];
      resultMatrixSignificance0.setColOrder(intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      int int0 = resultMatrixCSV0.getVisibleRowCount();
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(1, int0);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
  }

  /**
  //Test case number: 187
  /*Coverage entropy=3.994662543016295
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[10][9];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      
      String[][] stringArray0 = resultMatrixPlainText0.toArray();
      assertEquals(3, stringArray0.length);
      
      resultMatrixPlainText0.printColNamesTipText();
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
  }

  /**
  //Test case number: 188
  /*Coverage entropy=3.339150687523005
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      String string0 = resultMatrixCSV0.getColName(1);
      assertNull(string0);
      
      String string1 = resultMatrixCSV0.getRowName(0);
      assertEquals("row0", string1);
      assertNotNull(string1);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixCSV0.getEnumerateColNames();
      resultMatrixCSV0.stdDevPrecTipText();
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 189
  /*Coverage entropy=3.334406039045945
  */
  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setStdDevPrec(1124);
      int int0 = resultMatrixLatex0.getDisplayCol(0);
      assertEquals(1124, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 190
  /*Coverage entropy=3.2999713087454707
  */
  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.setColNameWidth(1);
      resultMatrixSignificance0.setCountWidth(2);
      resultMatrixSignificance0.getDefaultStdDevWidth();
      resultMatrixSignificance0.setRowHidden(110, false);
      assertEquals(1, resultMatrixSignificance0.getColNameWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex1.getAverage(2);
      assertEquals(0, resultMatrixLatex1.getRowCount());
  }

  /**
  //Test case number: 191
  /*Coverage entropy=3.447976142088113
  */
  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearRanking();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixCSV0.getDisplayName();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setCountWidth(30);
      resultMatrixSignificance0.getDefaultStdDevWidth();
      resultMatrixSignificance0.setRowHidden((-130), false);
      assertEquals(30, resultMatrixSignificance0.getCountWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getAverage(1298);
      assertEquals(0, resultMatrixLatex0.getDefaultCountWidth());
  }

  /**
  //Test case number: 192
  /*Coverage entropy=3.437192602354846
  */
  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRowNameWidth(3);
      resultMatrixGnuPlot0.setMeanPrec(1);
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      resultMatrixGnuPlot0.setCountWidth(3);
      resultMatrixGnuPlot0.m_RankingWins = intArray0;
      ResultMatrixPlainText resultMatrixPlainText0 = null;
      try {
        resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 193
  /*Coverage entropy=3.630907059965847
  */
  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.WIN_STRING = " ";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      int int0 = resultMatrixCSV0.getSignificanceCount(0, 0);
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, int0);
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(5, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      
      String string0 = resultMatrixPlainText0.getColName(0);
      assertEquals("(1) col0", string0);
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertFalse(resultMatrixPlainText0.getShowAverage());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 194
  /*Coverage entropy=4.0539706510210936
  */
  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 16);
      resultMatrixCSV0.toString();
      resultMatrixSignificance0.m_EnumerateColNames = true;
      resultMatrixSignificance0.getSignificance(0, 1);
      resultMatrixCSV0.getDefaultEnumerateColNames();
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowStdDev(true);
      double double0 = resultMatrixLatex0.getAverage(2);
      assertTrue(resultMatrixLatex0.getShowStdDev());
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 195
  /*Coverage entropy=3.99518130151953
  */
  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(30, 1);
      assertEquals(30, resultMatrixCSV0.getVisibleColCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth((-1127));
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
  }

  /**
  //Test case number: 196
  /*Coverage entropy=3.4866413644630816
  */
  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(26, 26);
      resultMatrixPlainText0.m_MeanPrec = (-1866);
      resultMatrixPlainText0.clearSummary();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSize(26, (-1517));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 197
  /*Coverage entropy=3.3916781122014164
  */
  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearRanking();
      int int0 = resultMatrixCSV0.getVisibleRowCount();
      assertEquals(1, int0);
      
      resultMatrixCSV0.m_StdDevWidth = 22;
      boolean boolean0 = resultMatrixCSV0.getRemoveFilterName();
      boolean boolean1 = resultMatrixCSV0.getPrintRowNames();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertFalse(boolean1 == boolean0);
      assertFalse(resultMatrixCSV0.getShowStdDev());
      assertTrue(boolean1);
  }

  /**
  //Test case number: 198
  /*Coverage entropy=3.5843757866916475
  */
  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[0];
      resultMatrixLatex0.listOptions();
      resultMatrixLatex0.m_RowOrder = intArray0;
      int int0 = resultMatrixLatex0.getDisplayCol(0);
      assertEquals(0, int0);
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertEquals(1, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 199
  /*Coverage entropy=3.3692248028566616
  */
  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[10][9];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      int int0 = resultMatrixLatex0.getRowCount();
      assertEquals(1, int0);
      assertFalse(resultMatrixLatex0.getShowAverage());
      assertEquals(1, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 200
  /*Coverage entropy=3.9641685046806026
  */
  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.setColNameWidth(1);
      resultMatrixSignificance0.setCountWidth(1);
      assertEquals(1, resultMatrixSignificance0.getColNameWidth());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.clearHeader();
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>($\\circ$/ /$\\bullet$)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
  }

  /**
  //Test case number: 201
  /*Coverage entropy=4.080594961847924
  */
  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getStdDevWidth();
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.setSignificanceWidth((-1701));
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(1460, 0);
      resultMatrixSignificance1.setCountWidth(1388);
      assertEquals(1388, resultMatrixSignificance1.getCountWidth());
      
      resultMatrixGnuPlot0.getCount(825);
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
  }

  /**
  //Test case number: 202
  /*Coverage entropy=3.263816792415219
  */
  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      int[][] intArray0 = new int[10][9];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      int int0 = resultMatrixLatex0.getDisplayRow(37);
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(0, resultMatrixLatex0.getDefaultCountWidth());
      assertEquals((-1), int0);
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 203
  /*Coverage entropy=3.2934275716557417
  */
  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth(1);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      int int0 = resultMatrixCSV1.getSignificanceCount(1, 0);
      assertEquals(1, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 204
  /*Coverage entropy=3.593335539132348
  */
  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String[][] stringArray0 = resultMatrixHTML0.toArray();
      assertEquals(3, stringArray0.length);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 1360);
      int int0 = resultMatrixCSV0.getVisibleRowCount();
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(1360, int0);
  }

  /**
  //Test case number: 205
  /*Coverage entropy=3.518938164216501
  */
  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.getColName(26);
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertFalse(resultMatrixPlainText0.getDefaultShowAverage());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertNull(string0);
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 206
  /*Coverage entropy=4.2135445078661915
  */
  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth(1);
      resultMatrixCSV0.setRowNameWidth(11);
      resultMatrixCSV0.toStringMatrix();
      String[] stringArray0 = new String[8];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixHTML.main(stringArray0);
      assertEquals(8, stringArray0.length);
  }

  /**
  //Test case number: 207
  /*Coverage entropy=3.5406464687311736
  */
  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertFalse(resultMatrixCSV0.getShowStdDev());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.assign(resultMatrixSignificance0);
      assertEquals(2, resultMatrixSignificance1.getMeanPrec());
      assertFalse(resultMatrixSignificance1.getShowStdDev());
      assertEquals(40, resultMatrixSignificance1.getRowNameWidth());
      assertFalse(resultMatrixSignificance1.getShowAverage());
      assertEquals(2, resultMatrixSignificance1.getStdDevPrec());
      assertFalse(resultMatrixSignificance1.getPrintColNames());
      assertTrue(resultMatrixSignificance1.getEnumerateColNames());
      assertTrue(resultMatrixSignificance1.getPrintRowNames());
      assertEquals(0, resultMatrixSignificance1.getCountWidth());
      assertEquals(0, resultMatrixSignificance1.getStdDevWidth());
      
      boolean boolean0 = resultMatrixSignificance0.isMean(0);
      assertFalse(boolean0);
      assertEquals(1, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 208
  /*Coverage entropy=3.9003029272793275
  */
  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_ShowStdDev = true;
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      assertFalse(resultMatrixHTML1.getShowStdDev());
      
      resultMatrixHTML0.toArray();
      resultMatrixHTML0.toStringMatrix();
      assertTrue(resultMatrixHTML0.getShowStdDev());
  }

  /**
  //Test case number: 209
  /*Coverage entropy=3.9320264201714212
  */
  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String[][] stringArray0 = resultMatrixHTML0.toArray();
      resultMatrixHTML0.globalInfo();
      int int0 = resultMatrixHTML0.getColSize(stringArray0, 48);
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(0, int0);
      assertEquals(3, stringArray0.length);
  }

  /**
  //Test case number: 210
  /*Coverage entropy=3.434635057597813
  */
  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.padString("", 3105, true);
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 211
  /*Coverage entropy=3.5843757866916475
  */
  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.padString("X2@.Vz)']egSaj%o3?b", 13);
      resultMatrixCSV0.setStdDevWidth(2);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 212
  /*Coverage entropy=3.6314942159291497
  */
  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.doubleToString(0, 2);
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 213
  /*Coverage entropy=3.435348070075531
  */
  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.getColName(1904);
      assertNull(string0);
      
      resultMatrixHTML0.getStdDev((-556), (-556));
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertFalse(resultMatrixHTML0.getShowStdDev());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 214
  /*Coverage entropy=3.4866413644630816
  */
  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setStdDev(97, 97, 97);
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getDefaultSignificanceWidth());
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 215
  /*Coverage entropy=3.1243658097838045
  */
  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setEnumerateRowNames(false);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader(")");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 216
  /*Coverage entropy=3.125588090209857
  */
  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setEnumerateColNames(false);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex0.assign(resultMatrixLatex1);
      assertFalse(resultMatrixLatex0.getEnumerateColNames());
  }

  /**
  //Test case number: 217
  /*Coverage entropy=3.5350884754592706
  */
  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getPrintRowNames();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
      assertEquals(0, resultMatrixLatex0.getDefaultCountWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 218
  /*Coverage entropy=3.4342348975337873
  */
  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int int0 = resultMatrixGnuPlot0.getColNameWidth();
      assertEquals(50, int0);
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 219
  /*Coverage entropy=3.127547145944993
  */
  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clear();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex0.assign(resultMatrixLatex1);
      resultMatrixLatex1.meanPrecTipText();
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertEquals(0, resultMatrixLatex1.getDefaultColNameWidth());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertFalse(resultMatrixLatex1.getDefaultShowAverage());
      assertEquals(0, resultMatrixLatex1.getDefaultMeanWidth());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
  }

  /**
  //Test case number: 220
  /*Coverage entropy=3.073291247675771
  */
  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.setMeanPrec((-460));
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader(")");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
