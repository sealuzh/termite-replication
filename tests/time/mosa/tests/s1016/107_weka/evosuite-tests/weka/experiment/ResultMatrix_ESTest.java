/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 03:00:32 GMT 2019
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.8392124562329597
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "v";
      stringArray0[1] = ")";
      stringArray0[2] = "*";
      stringArray0[3] = "]";
      stringArray0[4] = "-print-col-names";
      stringArray0[5] = ")";
      stringArray0[6] = "(";
      stringArray0[7] = "[";
      resultMatrixCSV0.setOptions(stringArray0);
      int[][] intArray0 = new int[0][8];
      resultMatrixSignificance0.setRanking(intArray0);
      resultMatrixSignificance0.getDisplayRow(0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.631790512225446
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_ShowStdDev = true;
      resultMatrixPlainText0.assign(resultMatrixSignificance0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixSignificance0.significanceWidthTipText();
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex((ResultMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.889845765731257
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("cQ-[2t!\"8", "cQ-[2t!\"8");
      resultMatrixGnuPlot0.getOptions();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringMatrix();
      resultMatrixLatex0.getStdDevWidth();
      resultMatrixLatex0.getDisplayCol(2);
      resultMatrixLatex0.getDefaultPrintRowNames();
  }

  /**
  //Test case number: 3
  /*Coverage entropy=4.054746376772205
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 2);
      resultMatrixSignificance0.m_RowNameWidth = 0;
      resultMatrixLatex0.toStringSummary();
      resultMatrixLatex0.m_ShowAverage = true;
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixLatex0.getDisplayName();
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixLatex0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader(" ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.723866351224565
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[1][0];
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = true;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = true;
      booleanArray0[6] = false;
      booleanArray0[7] = true;
      booleanArray0[8] = true;
      resultMatrixGnuPlot0.m_ColHidden = booleanArray0;
      int[] intArray1 = new int[7];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 1;
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray1[5] = 1;
      intArray1[6] = 0;
      intArray0[0] = intArray1;
      resultMatrixGnuPlot0.m_Significance = intArray0;
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.getRowOrder();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.2324603778814467
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clear();
      resultMatrixCSV0.m_EnumerateColNames = false;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.trimString((String) null, 92);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.585160100417138
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 1);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      boolean[] booleanArray0 = new boolean[1];
      booleanArray0[0] = true;
      resultMatrixPlainText0.m_RowHidden = booleanArray0;
      resultMatrixPlainText0.toStringKey();
      resultMatrixCSV0.setMeanWidth(2);
      resultMatrixCSV0.showStdDevTipText();
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex((-1695), 1);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=4.01171425119414
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(resultMatrixCSV1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.getColName(2);
      String[] stringArray0 = new String[9];
      stringArray0[0] = " ";
      stringArray0[1] = "*";
      stringArray0[2] = "[";
      stringArray0[3] = "*";
      stringArray0[4] = "[";
      stringArray0[5] = "]";
      stringArray0[6] = "[";
      stringArray0[7] = " ";
      stringArray0[8] = "*";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV3 = new ResultMatrixCSV(resultMatrixCSV2);
      resultMatrixCSV3.getDisplayCol(0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getStdDev(0, 0);
      resultMatrixCSV2.getColCount();
      resultMatrixCSV1.setRowOrder((int[]) null);
      String[] stringArray1 = new String[1];
      stringArray1[0] = null;
      ResultMatrixCSV.main(stringArray1);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=4.292140172919193
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowOrder((int[]) null);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      ResultMatrixHTML.main((String[]) null);
      resultMatrixCSV0.getColHidden((-762));
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.3691085883643503
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getColName(1);
      resultMatrixCSV0.getDisplayCol(3);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 0);
      resultMatrixPlainText0.getStdDev(0, 0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(1, 2);
      resultMatrixCSV1.getColCount();
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      intArray0[1] = (-1);
      intArray0[2] = 1;
      intArray0[3] = 0;
      intArray0[4] = 1;
      resultMatrixCSV0.setRowOrder(intArray0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=4.236809033085431
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      resultMatrixPlainText0.toString();
      intArray0[2] = 1;
      int[][] intArray1 = new int[9][8];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      intArray1[7] = intArray0;
      intArray1[8] = intArray0;
      resultMatrixPlainText0.setRanking(intArray1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(37, 0);
      resultMatrixGnuPlot0.setOptions((String[]) null);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.globalInfo();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clear();
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.394079242323584
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(76, 2);
      resultMatrixSignificance0.m_EnumerateRowNames = true;
      resultMatrixSignificance0.setStdDevPrec((-1324));
      boolean[] booleanArray0 = new boolean[6];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      booleanArray0[5] = true;
      resultMatrixSignificance0.m_RowHidden = booleanArray0;
      resultMatrixSignificance0.LEFT_PARENTHESES = "pb9c'3ca;q ";
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.RIGHT_PARENTHESES = "*3{Q{";
      resultMatrixSignificance0.setStdDevPrec(16);
      resultMatrixSignificance0.setStdDevWidth(125);
      resultMatrixSignificance0.getMeanPrec();
      resultMatrixSignificance0.getEnumerateRowNames();
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.877769266172234
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      intArray0[1] = 2754;
      resultMatrixPlainText0.toString();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDisplayRow(2);
      resultMatrixGnuPlot0.getVisibleRowCount();
      resultMatrixGnuPlot0.toStringRanking();
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.744085468251775
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      int[] intArray0 = new int[7];
      intArray0[0] = 1687;
      intArray0[1] = (-1331);
      intArray0[2] = 2;
      intArray0[3] = 2;
      intArray0[4] = 2;
      intArray0[5] = 1;
      intArray0[6] = 1;
      resultMatrixCSV1.m_RowOrder = intArray0;
      resultMatrixCSV1.padString("]", 1687, true);
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixCSV1.getMeanPrec();
      resultMatrixCSV0.padString("", (-3140));
      resultMatrixSignificance0.getAverage(1370);
      resultMatrixSignificance0.toStringKey();
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.3947832639304214
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      int[][] intArray0 = new int[8][6];
      int[] intArray1 = new int[9];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray1[4] = 2;
      intArray1[5] = (-1611);
      intArray1[6] = 1;
      intArray1[7] = 2;
      intArray1[8] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = 1;
      intArray2[1] = 26;
      intArray2[2] = 1;
      intArray2[3] = (-1611);
      intArray2[4] = (-1611);
      intArray2[5] = 1;
      intArray2[6] = 0;
      intArray2[7] = (-1611);
      intArray0[1] = intArray2;
      int[] intArray3 = new int[7];
      intArray3[0] = 0;
      intArray3[1] = 2;
      intArray3[2] = 2;
      intArray3[3] = (-744);
      intArray3[4] = 1;
      intArray3[5] = 2;
      intArray3[6] = 1;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[8];
      intArray4[0] = 1;
      intArray4[1] = 2;
      intArray4[2] = 2;
      intArray4[3] = 26;
      intArray4[4] = 1;
      intArray4[5] = 2;
      intArray4[6] = 26;
      intArray4[7] = 2;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[8];
      intArray5[0] = 1;
      intArray5[1] = 1;
      intArray5[2] = 0;
      intArray5[3] = 0;
      intArray5[4] = 0;
      intArray5[5] = 26;
      intArray5[6] = 2;
      intArray5[7] = 26;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[5];
      intArray6[0] = (-1611);
      intArray6[1] = 0;
      intArray6[2] = 0;
      intArray6[3] = 1;
      intArray6[4] = 1698;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[8];
      intArray7[0] = (-744);
      intArray7[1] = 1698;
      intArray7[2] = 39;
      intArray7[3] = 13;
      intArray7[4] = 2;
      intArray7[5] = 1;
      intArray7[6] = 2;
      intArray7[7] = 0;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[3];
      intArray8[0] = 13;
      intArray8[1] = 2;
      intArray8[2] = 0;
      intArray0[7] = intArray8;
      resultMatrixGnuPlot0.m_NonSigWins = intArray0;
      stringArray0[1] = "";
      stringArray0[2] = "v";
      stringArray0[3] = "v";
      stringArray0[4] = "v";
      stringArray0[5] = "";
      resultMatrixGnuPlot0.m_RowNames = stringArray0;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getVisibleRowCount();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.877184946264571
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setShowStdDev(true);
      resultMatrixPlainText0.toStringMatrix();
      int[] intArray0 = new int[1];
      resultMatrixPlainText0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.getDefaultRemoveFilterName();
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.0213463113353973
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      double[][] doubleArray0 = new double[5][1];
      double[] doubleArray1 = new double[0];
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = (double) 2;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = (double) 0;
      doubleArray2[4] = (double) 1;
      doubleArray2[5] = (double) 1;
      doubleArray2[6] = (double) 1;
      doubleArray2[7] = (double) 2;
      doubleArray2[8] = (double) 2;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[7];
      doubleArray3[0] = (double) 1;
      doubleArray3[1] = (double) 1;
      doubleArray3[2] = (double) 1;
      doubleArray3[3] = (double) 1;
      doubleArray3[4] = (double) 1;
      doubleArray3[5] = (double) 0;
      doubleArray3[6] = (double) 2;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[0];
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[7];
      doubleArray5[0] = (double) 2;
      doubleArray5[1] = (double) 0;
      doubleArray5[2] = (double) 1;
      doubleArray5[3] = (double) 0;
      doubleArray5[4] = (double) 2;
      doubleArray5[5] = (double) 2;
      doubleArray5[6] = (double) 2;
      doubleArray0[4] = doubleArray5;
      resultMatrixCSV0.m_Mean = doubleArray0;
      resultMatrixSignificance0.toStringRanking();
      resultMatrixCSV0.toStringSummary();
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.1753704443642983
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex0.setColNameWidth(1);
      resultMatrixLatex1.assign(resultMatrixLatex0);
      resultMatrixLatex1.clearRanking();
      resultMatrixLatex1.m_MeanPrec = 2546;
      resultMatrixLatex1.getDisplayName();
      resultMatrixLatex1.getMeanWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2550, 2546);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=4.064048244648635
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML.main((String[]) null);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.getDisplayName();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(808, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.getOptions();
      // Undeclared exception!
      resultMatrixGnuPlot0.toArray();
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.284884854181267
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setSignificance((-2405), 203, (-227));
      ResultMatrixHTML resultMatrixHTML0 = null;
      try {
        resultMatrixHTML0 = new ResultMatrixHTML((-2405), 2);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.541121077179204
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDisplayRow((-426));
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringRanking();
  }

  /**
  //Test case number: 21
  /*Coverage entropy=4.191586994812386
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setShowStdDev(true);
      resultMatrixPlainText0.assign(resultMatrixGnuPlot0);
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.addHeader("N", "9nC[4M}aJ/_X");
      int[] intArray0 = new int[1];
      resultMatrixPlainText0.setRowOrder(intArray0);
      resultMatrixCSV0.getDisplayCol(2);
      resultMatrixCSV0.setRowHidden((-669), false);
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance((-735), 1);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.1699021172713064
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      int[][] intArray0 = new int[0][8];
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultCountWidth();
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.671582944265558
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.rowNameWidthTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(2, 1);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixPlainText1);
      resultMatrixPlainText1.setPrintColNames(false);
      resultMatrixPlainText1.globalInfo();
      int[] intArray0 = new int[8];
      intArray0[1] = 1;
      intArray0[2] = (-2193);
      intArray0[3] = 1;
      intArray0[4] = 1896;
      intArray0[5] = 2;
      intArray0[7] = 1;
      resultMatrixPlainText0.setRowOrder(intArray0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance1.m_HeaderKeys = null;
      resultMatrixSignificance1.listOptions();
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV3 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV3.getSignificance(13, 2414);
      resultMatrixSignificance0.getColName(0);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixCSV0.getDisplayCol(436);
      resultMatrixPlainText1.getStdDev(1, 2);
      resultMatrixSignificance0.setColHidden(43, true);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixPlainText0.getDefaultCountWidth();
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.6746524698037284
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[7][9];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      intArray0[1] = intArray1;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.listOptions();
      resultMatrixCSV0.m_PrintRowNames = false;
      resultMatrixCSV0.setRowName((-309), "](@9");
      resultMatrixCSV0.getRevision();
      resultMatrixPlainText0.getAverage(0);
      resultMatrixGnuPlot0.stdDevWidthTipText();
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.2956154562448297
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixHTML0.setColHidden(306, false);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(13, 351);
      resultMatrixLatex0.getDefaultEnumerateColNames();
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.31341095220151
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      int[][] intArray0 = new int[1][3];
      int[] intArray1 = new int[9];
      resultMatrixPlainText0.setCountWidth(7);
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 0;
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      resultMatrixGnuPlot0.getVisibleRowCount();
      resultMatrixGnuPlot0.toStringRanking();
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.393155448540662
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      int[][] intArray0 = new int[0][8];
      resultMatrixSignificance0.setRanking(intArray0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.3922539687048423
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 2);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(2, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance1);
      resultMatrixCSV0.getDisplayCol(1);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.3125794394758654
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[7][9];
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 115);
      resultMatrixCSV0.setRowName(0, "");
      resultMatrixCSV0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText1.getAverage(2);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.619335531077413
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.rowNameWidthTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(2, 1);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixPlainText1);
      resultMatrixPlainText1.setPrintColNames(false);
      resultMatrixSignificance0.removeFilterName("");
      resultMatrixPlainText1.setRowOrder((int[]) null);
      resultMatrixSignificance0.listOptions();
      resultMatrixCSV0.getSignificance(1, 97);
      resultMatrixCSV0.getDisplayCol(0);
      resultMatrixCSV1.setRowHidden(0, false);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.4343670249929903
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowOrder((int[]) null);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixSignificance0.getColName(0);
      resultMatrixCSV2.getDisplayCol(1);
      resultMatrixPlainText0.getStdDev(2080, 4525);
      resultMatrixCSV0.getColCount();
      resultMatrixCSV1.setRowOrder((int[]) null);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.316168119612027
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_MeanPrec = 2;
      resultMatrixHTML0.m_PrintRowNames = false;
      resultMatrixHTML0.getRowName(0);
      resultMatrixHTML0.toStringSummary();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot((-161), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=4.083564327984137
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.m_RowNameWidth = 2;
      resultMatrixLatex0.toStringSummary();
      resultMatrixLatex0.getColName(47);
      resultMatrixLatex0.padString("v", 2, false);
      resultMatrixLatex0.setOptions((String[]) null);
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setMeanWidth(2);
      intArray0[0] = 1;
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getDisplayName();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 115);
      resultMatrixHTML0.m_PrintColNames = false;
      resultMatrixLatex0.RIGHT_PARENTHESES = "";
      resultMatrixHTML0.setPrintRowNames(false);
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixHTML0.getRowName(1);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringMatrix();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.073291247675771
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.rowNameWidthTipText();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.assign((ResultMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.3576645269349084
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot1.getVisibleRowCount();
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixSignificance0.isMean(2);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.9035166701247315
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.toStringRanking();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 2);
      resultMatrixGnuPlot0.setOptions((String[]) null);
      resultMatrixCSV1.setRemoveFilterName(true);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(1, 0);
      resultMatrixCSV2.toArray();
      resultMatrixHTML0.getColNameWidth();
  }

  /**
  //Test case number: 37
  /*Coverage entropy=4.1585113570202745
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setShowStdDev(true);
      resultMatrixPlainText0.toStringMatrix();
      int[] intArray0 = new int[1];
      resultMatrixCSV0.getDisplayCol((-994));
      resultMatrixPlainText0.getStdDev(0, (-2858));
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      int int0 = ResultMatrix.SIGNIFICANCE_WIN;
      resultMatrixCSV0.setRowOrder(intArray0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.5848696138521414
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[3][3];
      int[] intArray1 = new int[3];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 0;
      intArray2[1] = 2;
      intArray2[2] = 1;
      intArray2[3] = 1;
      intArray2[4] = 2;
      intArray2[5] = 0;
      intArray2[6] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[8];
      intArray3[0] = 1;
      intArray3[1] = 0;
      intArray3[2] = 2;
      intArray3[3] = 0;
      intArray3[4] = 2;
      intArray3[5] = 2;
      intArray3[6] = 1;
      intArray3[7] = 1;
      intArray0[2] = intArray3;
      resultMatrixSignificance0.m_Wins = intArray0;
      resultMatrixSignificance0.toStringKey();
      int[][] intArray4 = new int[4][3];
      resultMatrixSignificance0.setStdDevPrec(2);
      resultMatrixSignificance0.stdDevPrecTipText();
      resultMatrixSignificance0.getDefaultRowNameWidth();
  }

  /**
  //Test case number: 39
  /*Coverage entropy=4.13884063473806
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[8];
      stringArray0[0] = " ";
      stringArray0[1] = " ";
      stringArray0[2] = " ";
      stringArray0[3] = ")";
      stringArray0[4] = "*";
      stringArray0[5] = "*";
      stringArray0[6] = "*";
      stringArray0[7] = "*";
      resultMatrixSignificance0.setOptions(stringArray0);
      resultMatrixPlainText0.setShowStdDev(false);
      resultMatrixPlainText0.assign(resultMatrixSignificance0);
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.globalInfo();
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      intArray0[1] = 2;
      intArray0[2] = 0;
      intArray0[3] = 0;
      int[][] intArray1 = new int[7][8];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      resultMatrixSignificance0.setRanking(intArray1);
      resultMatrixSignificance0.getStdDevPrec();
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.9036083850400916
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getOptions();
      int[][] intArray0 = new int[7][9];
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      resultMatrixPlainText0.getColHidden(25);
      resultMatrixPlainText0.setMean((-90), 22, 0.0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=4.110074742323821
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setShowStdDev(true);
      resultMatrixPlainText0.assign(resultMatrixGnuPlot0);
      resultMatrixCSV0.globalInfo();
      int[] intArray0 = new int[1];
      resultMatrixPlainText0.setRowOrder(intArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray1 = new int[4][8];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixSignificance0.removeFilterName("S%");
      resultMatrixPlainText0.setRowOrder((int[]) null);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(2, 1);
      resultMatrixSignificance1.listOptions();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.getSignificance(0, 2);
      resultMatrixCSV0.getDisplayCol(2);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.632138511231163
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[9];
      intArray0[1] = 1;
      intArray0[7] = 617;
      intArray0[3] = 1;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearHeader();
      resultMatrixGnuPlot0.listOptions();
      resultMatrixCSV0.setRowName(0, "weka.core.Version");
      resultMatrixCSV0.getRevision();
      resultMatrixPlainText0.getAverage(0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.128688209987212
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "[";
      stringArray0[1] = " ";
      stringArray0[2] = "[";
      stringArray0[3] = " ";
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int int0 = 1839;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 1839);
      // Undeclared exception!
      resultMatrixPlainText0.assign(resultMatrixHTML0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.3018563576158324
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.rowNameWidthTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.getVisibleColCount();
      resultMatrixSignificance0.getEnumerateColNames();
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.8592060109442796
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringSummary();
      resultMatrixPlainText0.LEFT_PARENTHESES = "Problem reading local properties: ";
      resultMatrixPlainText0.getDefaultPrintColNames();
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.getCountWidth();
      resultMatrixPlainText0.getMeanPrec();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_ShowStdDev = false;
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 2;
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.getRevision();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.toStringKey();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "Plain Text";
      stringArray0[2] = "v";
      stringArray0[3] = "v";
      stringArray0[4] = "v";
      stringArray0[5] = " ";
      stringArray0[6] = "*";
      stringArray0[7] = "v";
      resultMatrixGnuPlot0.setOptions(stringArray0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=4.022896622632079
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML.main((String[]) null);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.setColNameWidth(0);
      resultMatrixCSV0.getMeanPrec();
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.659826928121245
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearHeader();
      resultMatrixGnuPlot0.listOptions();
      resultMatrixCSV0.setRowName(860, (String) null);
      resultMatrixCSV0.getRevision();
      resultMatrixPlainText0.getAverage(125);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.6294701195436074
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.rowNameWidthTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      int[][] intArray0 = new int[0][8];
      resultMatrixSignificance0.setRanking(intArray0);
      resultMatrixCSV0.toStringKey();
      resultMatrixCSV0.enumerateColNamesTipText();
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.5372760609118274
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[0];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixPlainText0.getAverage((-1986));
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.1444238654395598
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[7][9];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixPlainText0.assign(resultMatrixSignificance0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.getRowName(479);
      resultMatrixPlainText0.getDefaultMeanPrec();
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.659359009772997
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.clearHeader();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.listOptions();
      resultMatrixCSV0.setRowName(1, "(");
      resultMatrixCSV0.getRevision();
      resultMatrixPlainText0.getAverage(2);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.5372760609118274
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[7][9];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      intArray0[1] = intArray1;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.8135259641986705
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.addHeader("col", "-stddev-width");
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixSignificance0.removeFilterName((String) null);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(0, 2560);
      resultMatrixSignificance1.listOptions();
      int int0 = ResultMatrix.SIGNIFICANCE_WIN;
      resultMatrixCSV1.getDisplayCol(40);
      resultMatrixCSV0.getOptions();
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.0949180933653193
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixLatex0.getDisplayName();
      int[][] intArray1 = new int[2][9];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      resultMatrixSignificance0.setRanking(intArray1);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.855610643663251
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.m_RowNameWidth = 1;
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.toStringSummary();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setMeanWidth(2);
      intArray0[0] = 1;
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getDisplayName();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 115);
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixSignificance0.getVisibleColCount();
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixLatex0.getDefaultStdDevPrec();
  }

  /**
  //Test case number: 56
  /*Coverage entropy=4.110198488183794
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.rowNameWidthTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowOrder((int[]) null);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance1);
      resultMatrixLatex0.setColOrder((int[]) null);
      resultMatrixLatex0.getDisplayName();
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixLatex0.toStringMatrix();
      resultMatrixLatex0.getStdDevWidth();
      resultMatrixLatex0.getDisplayCol(2);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 1292);
      // Undeclared exception!
      resultMatrixGnuPlot0.clear();
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.588090255369752
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.m_RowNameWidth = 1;
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.toStringSummary();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setMeanWidth(2);
      intArray0[0] = 1;
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getDisplayName();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 115);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setMeanPrec((-3));
      resultMatrixCSV0.clear();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("Whether to output row names or just numbers representing them.");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.8135960106044138
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.rowNameWidthTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixCSV0.clear();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      resultMatrixGnuPlot0.getOptions();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.7426257757051182
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.rowNameWidthTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowOrder((int[]) null);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.listOptions();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV2.getSignificance((-1846), 2);
      resultMatrixSignificance0.getColName(0);
      resultMatrixCSV1.getDisplayCol(0);
      resultMatrixPlainText0.getStdDev(0, 1235);
      resultMatrixCSV0.getColCount();
      resultMatrixCSV1.setRowOrder((int[]) null);
      resultMatrixSignificance0.setStdDev(293, 1, 0.0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.271949875697273
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.clearHeader();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance1);
      resultMatrixPlainText0.setPrintColNames(false);
      int[] intArray0 = new int[6];
      intArray0[0] = 95;
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixCSV0.setMeanPrec(0);
      resultMatrixCSV0.clear();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("*");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.883076219506281
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "?=U3Sp\"[3";
      stringArray0[1] = "b";
      stringArray0[2] = "?=U3Sp\"[3";
      stringArray0[3] = "";
      stringArray0[4] = "}{c}{$circ$, $\bullet$";
      stringArray0[5] = "aDFFf,R6\"?gaPw$U";
      stringArray0[6] = "";
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setMeanWidth(1047);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(111, 41);
      int[] intArray0 = new int[8];
      intArray0[0] = 2;
      intArray0[1] = 41;
      intArray0[2] = 2;
      intArray0[3] = 111;
      intArray0[4] = 2;
      intArray0[5] = 1;
      intArray0[6] = 2;
      intArray0[7] = 1047;
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.getDefaultColNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(41, 1);
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixLatex0.getStdDevWidth();
      resultMatrixHTML0.getRowName(84);
      // Undeclared exception!
      resultMatrixLatex0.toStringMatrix();
  }

  /**
  //Test case number: 62
  /*Coverage entropy=4.190738272848815
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[8];
      stringArray0[0] = " ";
      stringArray0[1] = " ";
      stringArray0[2] = " ";
      stringArray0[3] = ")";
      stringArray0[4] = "*";
      stringArray0[5] = "*";
      stringArray0[6] = "*";
      stringArray0[7] = "*";
      resultMatrixSignificance0.setOptions(stringArray0);
      resultMatrixPlainText0.setShowStdDev(false);
      resultMatrixPlainText0.assign(resultMatrixSignificance0);
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.globalInfo();
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      intArray0[1] = 2;
      intArray0[2] = 0;
      intArray0[3] = 0;
      resultMatrixPlainText0.setRowOrder(intArray0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.listOptions();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getSignificance(1, 2);
      resultMatrixSignificance1.getColName(0);
      resultMatrixCSV0.getDisplayCol(1);
      resultMatrixPlainText0.getStdDev(1, 97);
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.3867280357036647
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.rowNameWidthTipText();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(resultMatrixCSV1);
      resultMatrixSignificance0.getDisplayName();
      assertTrue(resultMatrixSignificance0.getPrintColNames());
      assertEquals(5, resultMatrixSignificance0.getCountWidth());
      
      int int0 = resultMatrixCSV2.getDisplayCol(0);
      assertEquals(0, int0);
      
      resultMatrixPlainText0.getStdDev(1, 0);
      resultMatrixCSV2.getColCount();
      resultMatrixCSV2.setRowOrder((int[]) null);
      assertEquals(0, resultMatrixCSV2.getSignificanceWidth());
      assertTrue(resultMatrixCSV2.getPrintRowNames());
      assertEquals(25, resultMatrixCSV2.getRowNameWidth());
      assertEquals(0, resultMatrixCSV2.getDefaultColNameWidth());
      assertEquals(1, resultMatrixCSV2.getRowCount());
      assertEquals(0, resultMatrixCSV2.getMeanWidth());
      assertEquals(0, resultMatrixCSV2.getStdDevWidth());
      assertEquals(2, resultMatrixCSV2.getStdDevPrec());
      assertTrue(resultMatrixCSV2.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV2.getMeanPrec());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.394089155356722
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 2);
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      
      resultMatrixSignificance0.m_RowNameWidth = 0;
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(0, 1);
      int[][] intArray0 = new int[0][8];
      resultMatrixSignificance1.setRanking(intArray0);
      int int0 = resultMatrixSignificance1.getVisibleColCount();
      assertEquals(0, resultMatrixSignificance1.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance1.getSignificanceWidth());
      assertFalse(resultMatrixSignificance1.getEnumerateRowNames());
      assertTrue(resultMatrixSignificance1.getPrintRowNames());
      assertEquals(1, resultMatrixSignificance1.getVisibleRowCount());
      assertEquals(2, resultMatrixSignificance1.getDefaultStdDevPrec());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.240267704980452
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setShowStdDev(false);
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      
      resultMatrixPlainText0.assign(resultMatrixGnuPlot0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixPlainText0.getStdDev((-1074), 7);
      assertEquals(50, resultMatrixPlainText0.getRowNameWidth());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      
      int int0 = resultMatrixCSV0.getColCount();
      assertEquals(1, int0);
      
      int[] intArray0 = new int[0];
      resultMatrixCSV0.setRowOrder(intArray0);
      assertEquals(1, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.544814024090562
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[7][9];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      intArray0[1] = intArray1;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.removeFilterName("");
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.setRowOrder((int[]) null);
      resultMatrixSignificance0.listOptions();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText1);
      resultMatrixCSV0.getSignificance(0, 0);
      resultMatrixCSV0.getDisplayCol((-1824));
      resultMatrixCSV0.setRowHidden(2, true);
      // Undeclared exception!
      try { 
        resultMatrixPlainText1.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=4.21479726179847
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setShowStdDev(true);
      resultMatrixPlainText0.assign(resultMatrixGnuPlot0);
      resultMatrixPlainText0.toStringMatrix();
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(189, 0);
      resultMatrixSignificance0.listOptions();
      resultMatrixCSV0.getSignificance(1, 26);
      resultMatrixCSV0.getDisplayCol(0);
      resultMatrixCSV0.setRowHidden(1, false);
      assertTrue(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=4.1375787537453155
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setOptions((String[]) null);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 1043);
      resultMatrixCSV0.setRemoveFilterName(true);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.toStringSummary();
      // Undeclared exception!
      resultMatrixCSV0.toArray();
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.6753511276452437
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearHeader();
      resultMatrixGnuPlot0.listOptions();
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(5, resultMatrixGnuPlot0.getCountWidth());
      
      resultMatrixCSV0.setRowName((-2145), "v");
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.getRevision();
      double double0 = resultMatrixPlainText0.getAverage(1);
      assertEquals(0.0, double0, 0.01);
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.631844580892653
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixGnuPlot0.listOptions();
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(5, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      
      resultMatrixCSV0.setRowName(0, "-fuXg ,Yhqa\"9");
      resultMatrixCSV0.getRevision();
      double double0 = resultMatrixPlainText0.getAverage(10);
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.5404573970730153
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      double double0 = resultMatrixPlainText0.getStdDev(2, 2);
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0.0, double0, 0.01);
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(50, resultMatrixPlainText0.getRowNameWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 1);
      resultMatrixCSV0.getColCount();
      int[] intArray0 = new int[0];
      resultMatrixCSV0.setRowOrder(intArray0);
      assertEquals(0, resultMatrixCSV0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.9950748967100322
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setEnumerateColNames(true);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.setMean(1045, 1045, 1045);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.306596998318462
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[2][1];
      int[] intArray1 = new int[5];
      intArray1[0] = 0;
      intArray1[1] = 1243;
      intArray1[2] = 0;
      intArray1[3] = 1;
      intArray1[4] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 1;
      intArray2[1] = 1243;
      intArray2[2] = 2;
      intArray2[3] = 2964;
      intArray2[4] = 1243;
      intArray2[5] = (-880);
      intArray2[6] = 1243;
      intArray0[1] = intArray2;
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixPlainText0.setShowStdDev(false);
      resultMatrixPlainText0.m_PrintColNames = false;
      resultMatrixCSV0.setRemoveFilterName(true);
      resultMatrixCSV0.toStringKey();
      assertTrue(resultMatrixCSV0.getRemoveFilterName());
      
      resultMatrixPlainText0.isRowName(1);
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.288502144830571
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth((-487));
      resultMatrixCSV0.getDefaultPrintColNames();
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertFalse(resultMatrixCSV0.getShowAverage());
      assertTrue(resultMatrixCSV0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.4221997599204714
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.clear();
      resultMatrixGnuPlot0.padString("!", (-3651));
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 2;
      intArray0[4] = 1665;
      intArray0[5] = 1;
      intArray0[6] = 1;
      intArray0[7] = 0;
      intArray0[8] = (-3651);
      resultMatrixCSV0.m_RankingLosses = intArray0;
      resultMatrixCSV0.setStdDevWidth(2);
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixGnuPlot0.m_CountWidth = 0;
      resultMatrixGnuPlot0.getDisplayName();
      int[][] intArray1 = new int[1][1];
      int[] intArray2 = new int[2];
      intArray2[0] = 2;
      intArray2[1] = 1;
      resultMatrixGnuPlot0.clearSummary();
      intArray1[0] = intArray2;
      resultMatrixCSV0.setSummary(intArray1, intArray1);
      resultMatrixCSV0.isRowName(0);
      resultMatrixCSV0.removeFilterNameTipText();
      assertEquals(2, resultMatrixCSV0.getStdDevWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1067, 0);
      resultMatrixSignificance0.getDisplayName();
      assertEquals(1067, resultMatrixSignificance0.getColCount());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=4.022896622632079
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(1, 1);
      resultMatrixCSV0.setStdDevWidth(2);
      ResultMatrixHTML.main((String[]) null);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV1);
      resultMatrixGnuPlot0.setColNameWidth(1);
      assertEquals(1, resultMatrixGnuPlot0.getColNameWidth());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=4.1095480496305274
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.m_RowNameWidth = 1;
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.toStringSummary();
      int[] intArray0 = new int[1];
      String[] stringArray0 = new String[1];
      stringArray0[0] = " ";
      resultMatrixSignificance0.setOptions(stringArray0);
      resultMatrixSignificance0.setMeanWidth(2);
      intArray0[0] = 1;
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.getDefaultColNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 115);
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixLatex0.getStdDevWidth();
      resultMatrixHTML0.getRowName(0);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringMatrix();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.405197967615579
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[7][9];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getColHidden(1);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.setRowOrder(intArray1);
      assertEquals(0, resultMatrixCSV1.getDefaultMeanWidth());
      assertEquals(2, resultMatrixCSV1.getDefaultStdDevPrec());
      assertFalse(resultMatrixCSV1.getShowStdDev());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.8713182483095245
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixGnuPlot0.padString(")", 2, true);
      resultMatrixPlainText0.setShowStdDev(true);
      resultMatrixPlainText0.toStringMatrix();
      int[] intArray0 = new int[0];
      resultMatrixPlainText0.setRowOrder(intArray0);
      assertTrue(resultMatrixPlainText0.getShowStdDev());
      
      resultMatrixGnuPlot0.toStringRanking();
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.3655121313473804
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.getRowName(0);
      assertEquals("row0", string0);
      
      boolean boolean0 = resultMatrixHTML0.getShowAverage();
      assertFalse(boolean0);
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.5248844192193602
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(2, resultMatrixSignificance0.getVisibleColCount());
      
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      int int0 = resultMatrixSignificance1.getVisibleColCount();
      assertEquals(1, int0);
      
      resultMatrixCSV0.setMean(1, (-249), 2);
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=4.0537033517008725
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[7][9];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      intArray0[1] = intArray1;
      int[] intArray2 = new int[9];
      intArray2[1] = 1;
      intArray2[7] = 617;
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(2, 617);
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText();
      resultMatrixPlainText1.assign(resultMatrixPlainText2);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(617, 2);
      resultMatrixSignificance0.clear();
      resultMatrixPlainText2.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.getDefaultShowStdDev();
      resultMatrixLatex0.setColNameWidth(2);
      ResultMatrixPlainText resultMatrixPlainText3 = new ResultMatrixPlainText(102, 0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixPlainText3);
      resultMatrixLatex1.setCount((-1590), (-2998.9908029228));
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixLatex0.getRowNameWidth();
      resultMatrixLatex0.setRowNameWidth(102);
      resultMatrixLatex0.toStringRanking();
      // Undeclared exception!
      resultMatrixPlainText3.setSize(74, 617);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.506282824582503
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowOrder((int[]) null);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.listOptions();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV1.getSignificance(0, 0);
      String string0 = resultMatrixSignificance0.getColName(0);
      assertNotNull(string0);
      assertEquals("(1) col0", string0);
      
      int int0 = resultMatrixCSV1.getDisplayCol(3638);
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertEquals((-1), int0);
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertEquals(5, resultMatrixCSV1.getCountWidth());
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      
      resultMatrixPlainText0.getStdDev((-1), (-1));
      resultMatrixCSV0.getColCount();
      resultMatrixCSV0.setRowOrder((int[]) null);
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.5873387496546107
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.toStringSummary();
      resultMatrixSignificance0.setMeanWidth(2);
      resultMatrixLatex0.getDisplayName();
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 115);
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixLatex0.getStdDevWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixSignificance0.setCountWidth(0);
      assertEquals(2, resultMatrixSignificance0.getMeanWidth());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.4010455719132437
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(3, 3);
      resultMatrixGnuPlot0.m_ColHidden = null;
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getDisplayRow(3);
      resultMatrixGnuPlot0.getVisibleRowCount();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringRanking();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=4.361929586846781
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.showAverageTipText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixSignificance0.getDefaultEnumerateColNames();
      resultMatrixSignificance0.setSize(1, 0);
      resultMatrixHTML0.setSignificance(2003, 0, (-510));
      resultMatrixHTML0.setRemoveFilterName(true);
      resultMatrixHTML0.m_PrintColNames = false;
      resultMatrixHTML0.headerKeys();
      resultMatrixHTML0.getDefaultEnumerateRowNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.setRowNameWidth(2);
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "v";
      stringArray0[1] = "$circ$";
      stringArray0[2] = "*";
      stringArray0[3] = "*";
      stringArray0[4] = " ";
      stringArray0[5] = "(";
      stringArray0[6] = "v";
      stringArray0[7] = "$circ$";
      stringArray0[8] = "$\bullet$";
      ResultMatrixHTML.main(stringArray0);
      resultMatrixLatex0.RIGHT_PARENTHESES = "*";
      resultMatrixLatex0.toStringSummary();
      resultMatrixGnuPlot0.WIN_STRING = " ";
      resultMatrixHTML0.getDefaultEnumerateColNames();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.237081600349547
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultColNameWidth();
      resultMatrixCSV0.getDefaultEnumerateRowNames();
      resultMatrixCSV0.setSignificance(12, 0, 12);
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=4.110183698253624
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setShowStdDev(true);
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0   \n-------------------------------------\nrow0                       (0)      |\n-------------------------------------\n(v/ /*)                             |\n", string0);
      
      int[] intArray0 = new int[1];
      resultMatrixPlainText0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.countWidthTipText();
      resultMatrixPlainText0.getColOrder();
      resultMatrixCSV0.toStringMatrix();
      assertEquals(0, resultMatrixCSV0.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.9768921132230926
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 2);
      resultMatrixSignificance0.m_RowNameWidth = 0;
      resultMatrixLatex0.toStringSummary();
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getDisplayName();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.getRowName(2);
      String[] stringArray0 = new String[0];
      ResultMatrixLatex.main(stringArray0);
      resultMatrixSignificance0.getDefaultStdDevWidth();
      assertEquals(0, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.757765316965706
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("cQ-[2t!\"8", "cQ-[2t!\"8");
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(18, stringArray0.length);
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      resultMatrixGnuPlot0.toArray();
      resultMatrixGnuPlot0.meanPrecTipText();
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.6613493616267228
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 4531);
      resultMatrixSignificance0.listOptions();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      assertEquals(50, resultMatrixCSV1.getRowNameWidth());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertTrue(resultMatrixCSV1.getPrintColNames());
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
      assertTrue(resultMatrixCSV1.getPrintRowNames());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      
      resultMatrixCSV0.getSignificance(0, 1);
      String string0 = resultMatrixSignificance0.getColName(37);
      assertNull(string0);
      
      int int0 = resultMatrixCSV0.getDisplayCol((-2721));
      assertEquals((-1), int0);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      resultMatrixPlainText0.getStdDev(2, 1110);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=4.054507725354959
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 2);
      resultMatrixSignificance0.m_RowNameWidth = 0;
      resultMatrixLatex0.toStringSummary();
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.RIGHT_PARENTHESES = "";
      resultMatrixSignificance0.toStringMatrix();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringMatrix();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.9169260669225388
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_RowNameWidth = 0;
      resultMatrixSignificance0.setMeanWidth(3056);
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 3056;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 2);
      resultMatrixSignificance0.listOptions();
      assertEquals(3056, resultMatrixSignificance0.getMeanWidth());
      
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance1.toStringMatrix();
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance();
      resultMatrixSignificance2.getVisibleColCount();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      resultMatrixPlainText0.setStdDevPrec(2);
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col | (2)\n---------------------------------------\nrow0                       (0)    |    \n---------------------------------------\n                          (v/ /* (0/0/0\n", string0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.6948152035195907
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      int int0 = 0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.getRowName(762);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 88);
      resultMatrixHTML0.getSignificance(1, 0);
      resultMatrixLatex0.isAverage(1);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.816840654578174
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.m_RowNameWidth = 2;
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixSignificance0.getColName((-2487));
      resultMatrixLatex0.getDisplayName();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 0);
      resultMatrixHTML0.m_PrintColNames = false;
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixSignificance0.getVisibleColCount();
      assertEquals(2, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.520581809840058
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowOrder((int[]) null);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(resultMatrixPlainText0);
      String string0 = resultMatrixSignificance0.getColName(0);
      assertNotNull(string0);
      assertEquals("[1]", string0);
      
      int int0 = resultMatrixCSV1.getDisplayCol(0);
      assertEquals(0, int0);
      
      resultMatrixPlainText0.getStdDev(0, 2);
      resultMatrixCSV2.getColHidden(0);
      assertEquals(25, resultMatrixCSV2.getRowNameWidth());
      assertTrue(resultMatrixCSV2.getPrintColNames());
      assertEquals(0, resultMatrixCSV2.getMeanWidth());
      assertEquals(2, resultMatrixCSV2.getMeanPrec());
      assertEquals(1, resultMatrixCSV2.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV2.getStdDevPrec());
      assertEquals(5, resultMatrixCSV2.getCountWidth());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.8423249378875304
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.rowNameWidthTipText();
      resultMatrixCSV0.setPrintRowNames(true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & [1]\\\\\n\\hline\nrow0                      &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      int int0 = resultMatrixLatex0.getStdDevWidth();
      assertEquals(0, int0);
      
      int int1 = resultMatrixLatex0.getDisplayCol(1);
      assertEquals((-1), int1);
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.5374801842022947
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.rowNameWidthTipText();
      resultMatrixCSV0.getDisplayCol((-1));
      resultMatrixCSV0.getColCount();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.628894111084952
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "?=U3Sp\"[3";
      stringArray0[1] = "b";
      stringArray0[2] = "?=U3Sp\"[3";
      stringArray0[3] = "";
      stringArray0[4] = "}{c}{$circ$, $\bullet$";
      stringArray0[5] = "aDFFf,R6\"?gaPw$U";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(8, 124);
      resultMatrixLatex0.setColNameWidth(124);
      resultMatrixLatex0.setCount(8, 855.0182263964618);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixLatex0.getRowNameWidth();
      resultMatrixLatex0.setRowNameWidth(0);
      resultMatrixLatex0.toStringRanking();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setSize(2, 47);
      resultMatrixLatex0.setShowAverage(true);
      resultMatrixPlainText0.printColNamesTipText();
      resultMatrixSignificance0.getVisibleColCount();
      resultMatrixSignificance0.getDisplayName();
      boolean boolean0 = resultMatrixSignificance0.isSignificance(37);
      assertTrue(resultMatrixLatex0.getShowAverage());
      assertFalse(resultMatrixSignificance0.getDefaultShowAverage());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.861340483664453
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.clearRanking();
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      
      int[][] intArray0 = new int[7][9];
      String string0 = resultMatrixPlainText0.toString();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.371414035595477
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.getDefaultShowStdDev();
      resultMatrixLatex0.setColNameWidth(783);
      resultMatrixLatex0.setCount(0, 0.0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getDisplayName();
      resultMatrixLatex0.getRowNameWidth();
      resultMatrixLatex0.setRowNameWidth(283);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex1.toStringRanking();
      resultMatrixLatex1.setShowAverage(false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSize((-2936), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.6183981935354126
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setShowAverage(false);
      resultMatrixHTML0.m_MeanPrec = 2;
      resultMatrixHTML0.setRemoveFilterName(false);
      resultMatrixHTML0.m_EnumerateColNames = false;
      resultMatrixHTML0.toStringKey();
      resultMatrixHTML0.m_Mean = null;
      int[] intArray0 = new int[0];
      resultMatrixHTML0.m_RowOrder = intArray0;
      resultMatrixHTML0.setColOrder(intArray0);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setCount(0, 3274.950821443923);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.getDisplayName();
      resultMatrixLatex0.getRowNameWidth();
      resultMatrixLatex0.setRowNameWidth(2);
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.setShowAverage(false);
      resultMatrixSignificance0.setMeanWidth((-2111));
      assertEquals(2, resultMatrixLatex0.getRowNameWidth());
      
      boolean boolean0 = resultMatrixHTML0.isStdDev(637);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.9956919007813245
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.m_RowNameWidth = 0;
      resultMatrixSignificance0.toStringKey();
      resultMatrixLatex0.toStringSummary();
      resultMatrixSignificance0.setMeanWidth((-1919));
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0                                     &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      String string1 = resultMatrixSignificance1.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string1);
      
      resultMatrixSignificance0.getVisibleColCount();
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.6754083277024434
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.getDefaultShowStdDev();
      resultMatrixLatex0.setColNameWidth((-3026));
      resultMatrixLatex0.setCount(26, 1);
      resultMatrixLatex0.getRowNameWidth();
      resultMatrixLatex0.setRowNameWidth((-3026));
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex0.toStringRanking();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.printColNamesTipText();
      int int0 = resultMatrixLatex1.getColCount();
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(1, int0);
      assertFalse(resultMatrixLatex1.getDefaultShowAverage());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertEquals(1, resultMatrixLatex1.getRowCount());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.3977919138328656
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setPrintRowNames(false);
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.padString("-ranking data not set-", (-21));
      assertFalse(resultMatrixCSV0.getPrintRowNames());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(1, 0);
      assertEquals(0, resultMatrixCSV1.getDefaultCountWidth());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.4004067462048724
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixPlainText0.setShowStdDev(false);
      resultMatrixPlainText0.m_RowNameWidth = (-3117);
      resultMatrixSignificance0.clear();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.0198268431492625
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      resultMatrixGnuPlot0.setColNameWidth(37);
      resultMatrixGnuPlot0.toStringRanking();
      assertEquals(37, resultMatrixGnuPlot0.getColNameWidth());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.6405769831069885
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.m_RowNameWidth = 1;
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.toStringSummary();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setMeanWidth(2);
      intArray0[0] = 1;
      resultMatrixLatex0.m_RowOrder = intArray0;
      resultMatrixLatex0.setColOrder(intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 115);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(3, 2);
      resultMatrixPlainText0.setRowOrder(intArray0);
      resultMatrixSignificance0.listOptions();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.getSignificance((-3007), (-2245));
      resultMatrixSignificance0.getRowHidden(0);
      assertEquals(2, resultMatrixSignificance0.getMeanWidth());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.888428792054847
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixGnuPlot0.setSize(1, 49);
      resultMatrixCSV0.getDefaultPrintColNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setShowStdDev(true);
      resultMatrixPlainText0.assign(resultMatrixGnuPlot0);
      resultMatrixPlainText0.toStringMatrix();
      int[] intArray0 = new int[1];
      resultMatrixPlainText0.setRowOrder(intArray0);
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 1);
      assertFalse(resultMatrixHTML0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.5384983413378794
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.toStringKey();
      assertEquals("Key:\n(1) col0\n", string0);
      
      int[][] intArray0 = new int[4][3];
      resultMatrixSignificance0.clearRanking();
      resultMatrixSignificance0.setStdDevPrec((-35));
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.7549518839334333
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.rowNameWidthTipText();
      resultMatrixCSV0.addHeader("J:B,\"[,ATeg", (String) null);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixSignificance0);
      String string0 = resultMatrixSignificance0.removeFilterName("");
      assertEquals("", string0);
      
      resultMatrixSignificance0.listOptions();
      int int0 = resultMatrixCSV0.getSignificance((-715), 1);
      assertEquals(0, int0);
      
      int int1 = resultMatrixCSV1.getDisplayCol(1771);
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertFalse(resultMatrixCSV1.getEnumerateRowNames());
      assertTrue(resultMatrixCSV1.getPrintRowNames());
      assertEquals((-1), int1);
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertEquals(1, resultMatrixCSV1.getColCount());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      assertTrue(resultMatrixCSV1.getEnumerateColNames());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.2706925851583843
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.rowNameWidthTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowOrder((int[]) null);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      int[][] intArray0 = new int[1][5];
      intArray0[0] = null;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSummary(intArray0, intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=4.188823103387016
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      ResultMatrixHTML.main((String[]) null);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.getSummaryTitle(2);
      assertEquals("c", string0);
      
      resultMatrixHTML0.getDefaultEnumerateColNames();
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=3.582567877087128
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_RankingLosses = null;
      resultMatrixHTML0.printRowNamesTipText();
      resultMatrixHTML0.m_SignificanceWidth = 157;
      String string0 = resultMatrixHTML0.getRowName(0);
      assertEquals("row0", string0);
      assertNotNull(string0);
      
      resultMatrixHTML0.toStringSummary();
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getDefaultMeanWidth());
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertFalse(resultMatrixHTML0.getDefaultShowAverage());
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=3.380167676263512
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[1];
      try { 
        resultMatrixGnuPlot0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.1271874078343367
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      int[][] intArray0 = new int[0][2];
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=4.01882912550038
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "?=U3Sp\"[3";
      stringArray0[1] = "b";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "}{c}{$circ$, $\bullet$";
      stringArray0[5] = "aDFFf,R6\"?gaPw$U";
      stringArray0[6] = "";
      stringArray0[7] = "";
      ResultMatrixGnuPlot.main(stringArray0);
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringKey();
      resultMatrixSignificance0.toStringKey();
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=4.158146419133188
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultCountWidth();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(1, 19);
      resultMatrixPlainText1.removeFilterNameTipText();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      assertTrue(resultMatrixGnuPlot1.getPrintRowNames());
      
      resultMatrixGnuPlot1.setOptions(stringArray0);
      resultMatrixPlainText1.getEnumerateRowNames();
      resultMatrixPlainText1.getEnumerateRowNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getRevision();
      resultMatrixPlainText0.getPrintColNames();
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=3.9285660826755073
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.m_RowNameWidth = 1;
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.toStringSummary();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setMeanWidth(2);
      intArray0[0] = 1;
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getDisplayName();
      Vector<String> vector0 = new Vector<String>();
      resultMatrixLatex0.m_HeaderValues = vector0;
      resultMatrixLatex0.getDefaultColNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 115);
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixLatex0.getStdDevWidth();
      assertFalse(resultMatrixLatex0.getEnumerateColNames());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("D    (1) \n---------\nr(0)    |\n---------\n(v/ /*) |\n", string0);
      
      resultMatrixHTML0.getPrintColNames();
      assertEquals(115, resultMatrixHTML0.getVisibleRowCount());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=3.393781888770209
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setStdDevWidth((-667));
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      resultMatrixPlainText0.m_ColNames = null;
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.getRemoveFilterName();
      boolean boolean0 = resultMatrixPlainText0.isMean((-667));
      assertTrue(resultMatrixPlainText0.getDefaultPrintRowNames());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=3.715985651457794
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.setSignificanceWidth(2);
      boolean boolean0 = true;
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.setShowAverage(false);
      resultMatrixLatex0.globalInfo();
      int int0 = 2;
      resultMatrixLatex0.getRowName(0);
      resultMatrixLatex0.getDefaultSignificanceWidth();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.getDefaultShowStdDev();
      resultMatrixLatex1.setColNameWidth(6);
      resultMatrixLatex0.setCount(2, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex1);
      resultMatrixSignificance0.getDisplayName();
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(2, 2);
      // Undeclared exception!
      try { 
        resultMatrixLatex2.doubleToString((-1.0), (-588));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.435348070075531
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.doubleToString((-1.0), 46);
      resultMatrixCSV0.addHeader("", "");
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=4.1375612556072445
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowNameWidth(2);
      resultMatrixLatex0.LEFT_PARENTHESES = "B\"`\n-";
      resultMatrixLatex0.clear();
      resultMatrixLatex0.setColNameWidth(97);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 97);
      resultMatrixHTML0.getSignificance(1556, 32);
      resultMatrixLatex0.isAverage(3);
      resultMatrixHTML0.toString();
      resultMatrixLatex0.getDefaultShowAverage();
      resultMatrixHTML0.setShowStdDev(false);
      resultMatrixHTML0.setEnumerateRowNames(true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 2);
      resultMatrixSignificance0.toStringKey();
      resultMatrixLatex0.setColName((-1710), "0(($b=W:^$*\"VmJig4Q");
      assertEquals(97, resultMatrixLatex0.getColNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(111, 1);
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixGnuPlot0.colNameWidthTipText();
      resultMatrixGnuPlot0.toStringKey();
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=4.109773747884501
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText0.setShowStdDev(false);
      resultMatrixPlainText1.assign(resultMatrixCSV0);
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      int[] intArray0 = new int[0];
      resultMatrixPlainText0.setRowOrder(intArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      int[][] intArray1 = new int[5][4];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      resultMatrixSignificance0.setRanking(intArray1);
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      
      resultMatrixPlainText0.colNameWidthTipText();
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.6160898846290155
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.m_RowNameWidth = 1;
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.toStringSummary();
      assertFalse(resultMatrixLatex0.getEnumerateColNames());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 0);
      resultMatrixHTML0.getRowName(1);
      assertEquals(2, resultMatrixHTML0.getVisibleColCount());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.6325702393209625
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixPlainText0.setPrintColNames(true);
      int[] intArray0 = new int[0];
      resultMatrixPlainText0.setRowOrder(intArray0);
      resultMatrixSignificance0.listOptions();
      resultMatrixCSV0.getSignificance(0, (-1));
      String string0 = resultMatrixCSV1.toStringKey();
      assertEquals("Key,\n(1),col0\n", string0);
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      
      int int0 = resultMatrixCSV0.getDisplayCol((-1682));
      assertEquals((-1), int0);
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.354470215047869
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getColHidden(0);
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 2;
      intArray0[2] = 1;
      resultMatrixCSV0.setRowOrder(intArray0);
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(1, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=4.133081655221882
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      
      resultMatrixGnuPlot0.setOptions(stringArray0);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      assertEquals(0, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=3.825709450391509
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.m_RowNameWidth = 2;
      resultMatrixLatex0.setOptions((String[]) null);
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setMeanWidth(2);
      intArray0[0] = 1;
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getDisplayName();
      assertEquals(2, resultMatrixSignificance0.getMeanWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(40, 0);
      resultMatrixCSV0.getSignificance(0, 97);
      int int0 = resultMatrixCSV0.getDisplayCol(40);
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=4.13752923156972
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      
      ResultMatrixHTML.main((String[]) null);
      resultMatrixCSV0.getColCount();
      int[] intArray0 = new int[0];
      resultMatrixCSV0.setRowOrder(intArray0);
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.5413777836353715
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      resultMatrixSignificance0.setMeanWidth(2);
      assertEquals(2, resultMatrixSignificance0.getMeanWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      int[] intArray0 = new int[2];
      intArray0[0] = 2;
      intArray0[1] = (-4164);
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getRowHidden(1345);
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=3.7618624873289725
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixSignificance0);
      assertTrue(resultMatrixCSV1.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertFalse(resultMatrixCSV1.getEnumerateRowNames());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      assertEquals(40, resultMatrixCSV1.getRowNameWidth());
      assertTrue(resultMatrixCSV1.getPrintRowNames());
      
      int int0 = resultMatrixCSV0.getDisplayCol(0);
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(0, int0);
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=3.439584610234401
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setCountWidth((-2400));
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.getDisplayName();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot((-2400), 1);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=3.6689010204321955
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.m_RowNameWidth = 2;
      resultMatrixLatex0.setOptions((String[]) null);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=3.5868407726860454
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      int[][] intArray0 = new int[1][3];
      resultMatrixPlainText0.setCountWidth(7);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=3.630821318732888
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[0];
      resultMatrixSignificance0.m_RankingWins = intArray0;
      resultMatrixSignificance0.getRowName((-661));
      resultMatrixSignificance0.meanWidthTipText();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=3.4859283519853634
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(50, 50);
      resultMatrixSignificance0.enumerateRowNamesTipText();
      assertEquals(50, resultMatrixSignificance0.getRowCount());
      assertEquals(0, resultMatrixSignificance0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(50, resultMatrixSignificance0.getColCount());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=3.1441210416073244
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.clear();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.getRowHidden(0);
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=4.054094928657333
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixPlainText0.setShowStdDev(false);
      resultMatrixPlainText0.assign(resultMatrixSignificance0);
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.globalInfo();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot((-811), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=3.4859283519853634
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.enumerateRowNamesTipText();
      assertEquals("Whether to enumerate the row names (prefixing them with '(x)', with 'x' being the index).", string0);
      
      resultMatrixGnuPlot0.removeFilterNameTipText();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintRowNames());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=3.4169835932338453
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      intArray0[1] = 1;
      intArray0[2] = 32;
      intArray0[3] = 1;
      intArray0[4] = 0;
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      resultMatrixGnuPlot0.getRevision();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.setCount(0, 0);
      String[][] stringArray0 = new String[9][6];
      String[] stringArray1 = new String[7];
      stringArray1[0] = " ";
      stringArray1[1] = "*";
      stringArray1[2] = " ";
      stringArray1[3] = " ";
      stringArray1[4] = "v";
      stringArray1[5] = " ";
      stringArray1[6] = " ";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[8];
      stringArray2[0] = "{Z,tR1)k\"1}}a0L{PeF";
      stringArray2[1] = "*";
      stringArray2[2] = "";
      stringArray2[3] = "8034";
      stringArray2[4] = " ";
      stringArray2[5] = "v";
      stringArray2[6] = "";
      stringArray2[7] = "";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[9];
      stringArray3[0] = "{Z,tR1)k\"1}}a0L{PeF";
      stringArray3[1] = " ";
      stringArray3[2] = "8034";
      stringArray3[3] = "";
      stringArray3[4] = "8034";
      stringArray3[5] = "8034";
      stringArray3[6] = "";
      stringArray3[7] = "";
      stringArray3[8] = "";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[9];
      stringArray4[0] = "v";
      stringArray4[1] = "*";
      stringArray4[2] = "*";
      stringArray4[3] = "8034";
      stringArray4[4] = "v";
      stringArray4[5] = " ";
      stringArray4[6] = " ";
      stringArray4[7] = "8034";
      stringArray4[8] = "";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[9];
      stringArray5[0] = "row";
      stringArray5[1] = "v";
      stringArray5[2] = "";
      stringArray5[3] = "8034";
      stringArray5[4] = "{Z,tR1)k\"1}}a0L{PeF";
      stringArray5[5] = "v";
      stringArray5[6] = " ";
      stringArray5[7] = "";
      stringArray5[8] = "{Z,tR1)k\"1}}a0L{PeF";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[6];
      stringArray6[0] = "Xm";
      stringArray6[1] = "";
      stringArray6[2] = "";
      stringArray6[3] = "'Tx";
      stringArray6[4] = " ";
      stringArray6[5] = "";
      stringArray0[5] = stringArray6;
      String[] stringArray7 = new String[0];
      stringArray0[6] = stringArray7;
      String[] stringArray8 = new String[3];
      stringArray8[0] = "";
      stringArray8[1] = "*";
      stringArray8[2] = "Xm";
      stringArray0[7] = stringArray8;
      String[] stringArray9 = new String[4];
      stringArray9[0] = "";
      stringArray9[1] = "*";
      stringArray9[2] = "'Tx";
      stringArray9[3] = "Xm";
      stringArray0[8] = stringArray9;
      int int0 = resultMatrixGnuPlot0.getColSize(stringArray0, 10, true, false);
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(0, int0);
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=3.4342597622386712
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "?=U3Sp\"[3";
      stringArray0[1] = "b";
      stringArray0[2] = "?=U3Sp\"[3";
      stringArray0[3] = "";
      stringArray0[4] = "}{c}{$circ$, $\bullet$";
      stringArray0[5] = "aDFFf,R6\"?gaPw$U";
      stringArray0[6] = "";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(5, 5);
      resultMatrixLatex0.getDefaultShowStdDev();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex1.setColNameWidth(2);
      resultMatrixLatex0.setCount(5, Double.NaN);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex();
      resultMatrixLatex2.getRowNameWidth();
      resultMatrixLatex0.setRowNameWidth((-2581));
      resultMatrixLatex1.toStringRanking();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(45, 5);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSize((-2581), (-3098));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 143
  /*Coverage entropy=3.6149152212152624
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      int int0 = 4;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 4);
      resultMatrixGnuPlot0.removeFilterNameTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.globalInfo();
      resultMatrixGnuPlot0.setCountWidth(96);
      String[][] stringArray0 = new String[1][9];
      String[] stringArray1 = new String[3];
      resultMatrixLatex0.toStringRanking();
      stringArray1[0] = "";
      stringArray1[1] = "v";
      stringArray1[2] = "";
      stringArray0[0] = stringArray1;
      resultMatrixLatex0.getColSize(stringArray0, 290);
      resultMatrixGnuPlot0.isMean(0);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=3.3732331562637627
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[7][9];
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      String string0 = resultMatrixPlainText0.trimString(" ", 25);
      assertEquals(" ", string0);
      
      resultMatrixPlainText0.getEnumerateRowNames();
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=3.8660347587759856
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[7][9];
      int[] intArray1 = new int[4];
      intArray1[0] = 2;
      intArray1[1] = 2754;
      resultMatrixPlainText0.setRowNameWidth(2);
      resultMatrixPlainText0.toString();
      intArray1[2] = 1;
      intArray1[3] = 2;
      resultMatrixPlainText0.m_RankingWins = intArray1;
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 146
  /*Coverage entropy=3.240224420558516
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setCountWidth(1);
      resultMatrixPlainText0.setShowStdDev(true);
      resultMatrixPlainText0.assign(resultMatrixGnuPlot0);
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      
      resultMatrixCSV0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.getRowName(2);
      boolean boolean0 = resultMatrixHTML0.getDefaultShowStdDev();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=3.451807515043636
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 2);
      resultMatrixLatex0.getDefaultShowStdDev();
      resultMatrixLatex0.setColNameWidth(2);
      resultMatrixLatex0.setCount(283, 2);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getDisplayName();
      resultMatrixLatex0.getRowNameWidth();
      resultMatrixLatex0.setRowNameWidth(283);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixLatex0.setShowAverage(false);
      assertEquals(2, resultMatrixLatex0.getColNameWidth());
      
      resultMatrixGnuPlot0.printColNamesTipText();
      resultMatrixSignificance0.getRowHidden((-2571));
      assertEquals(50, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=3.5374801842022947
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[7][9];
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.setColNameWidth(0);
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(5, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(0, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=3.5879368632962025
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.getDefaultShowStdDev();
      resultMatrixLatex0.setColNameWidth(783);
      resultMatrixLatex0.setCount(0, 0.3311275009344569);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getDisplayName();
      resultMatrixLatex0.getRowNameWidth();
      resultMatrixLatex0.setRowNameWidth(283);
      assertEquals(283, resultMatrixLatex0.getRowNameWidth());
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex1.toStringRanking();
      resultMatrixLatex1.setShowAverage(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(0, 2);
      resultMatrixGnuPlot1.printColNamesTipText();
      boolean boolean0 = resultMatrixSignificance0.getRowHidden(2);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 150
  /*Coverage entropy=3.5858878141830566
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.getDefaultShowStdDev();
      resultMatrixLatex0.setColNameWidth(2);
      resultMatrixLatex0.setCount(283, 2);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getDisplayName();
      resultMatrixLatex0.getRowNameWidth();
      resultMatrixLatex0.setRowNameWidth(283);
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.setShowAverage(false);
      assertEquals(2, resultMatrixLatex0.getColNameWidth());
      
      resultMatrixGnuPlot0.printColNamesTipText();
      boolean boolean0 = resultMatrixSignificance0.getRowHidden((-2571));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 151
  /*Coverage entropy=3.295818956178466
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getRowName(0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 152
  /*Coverage entropy=3.6728991911726903
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[1];
      resultMatrixGnuPlot0.clearHeader();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      
      stringArray0[0] = "";
      resultMatrixGnuPlot0.setOptions(stringArray0);
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=3.4391651433925685
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1098);
      int int0 = resultMatrixLatex0.getStdDevWidth();
      assertEquals(0, int0);
      
      boolean boolean0 = resultMatrixLatex0.getShowStdDev();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(1098, resultMatrixLatex0.getRowCount());
      assertFalse(boolean0);
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=3.5376731226549287
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setMeanWidth(24);
      int[][] intArray0 = new int[7][9];
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.setColNameWidth(1);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      assertEquals(24, resultMatrixPlainText0.getMeanWidth());
      assertEquals(5, resultMatrixGnuPlot0.getCountWidth());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=3.994812646212242
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.m_RowNameWidth = 1;
      resultMatrixLatex0.toStringSummary();
      resultMatrixSignificance0.setMeanWidth(0);
      resultMatrixLatex0.getDisplayName();
      resultMatrixSignificance0.toStringMatrix();
      assertEquals(1, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 156
  /*Coverage entropy=3.1257298336542227
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 17);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      boolean boolean0 = resultMatrixLatex0.getPrintRowNames();
      assertEquals(5, resultMatrixGnuPlot0.getCountWidth());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertTrue(boolean0);
      assertEquals(17, resultMatrixPlainText0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(0, resultMatrixLatex0.getDefaultStdDevWidth());
      assertFalse(resultMatrixLatex0.getShowAverage());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
  }

  /**
  //Test case number: 157
  /*Coverage entropy=3.174015634790311
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.clearSummary();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(40, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      
      resultMatrixSignificance0.removeFilterName("");
      resultMatrixSignificance0.getShowStdDev();
      assertEquals(1, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=3.464781169341565
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.rowNameWidthTipText();
      resultMatrixCSV0.addHeader("The maximum width for the row names (0 = optimal).", (String) null);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixSignificance0);
      String string0 = resultMatrixSignificance0.removeFilterName(" ");
      assertEquals(" ", string0);
      
      resultMatrixSignificance0.listOptions();
      resultMatrixCSV1.getSignificance(97, 40);
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      assertFalse(resultMatrixCSV1.getEnumerateRowNames());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertTrue(resultMatrixCSV1.getEnumerateColNames());
      assertEquals(40, resultMatrixCSV1.getRowNameWidth());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      
      int int0 = resultMatrixCSV0.getDisplayCol(0);
      assertEquals(0, int0);
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 159
  /*Coverage entropy=3.341629132163693
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("cQ-[2t!\"8", "cQ-[2t!\"8");
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.getColOrder();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(0, resultMatrixHTML0.getDefaultStdDevWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertTrue(resultMatrixHTML0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=3.5860919583088093
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(20, 20);
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.getCount(3927);
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
  }

  /**
  //Test case number: 161
  /*Coverage entropy=4.21350478100925
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixGnuPlot0.clearRanking();
      resultMatrixGnuPlot0.setMeanPrec(2);
      resultMatrixGnuPlot0.getColCount();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=3.48629831128984
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      double double0 = resultMatrixPlainText0.getCount((-273));
      assertEquals(0.0, double0, 0.01);
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(1, resultMatrixPlainText0.getColCount());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=3.5350884754592706
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.TIE_STRING = "setRowOrder: length does not match (";
      int int0 = resultMatrixLatex0.getStdDevPrec();
      assertEquals(2, int0);
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      assertEquals(1, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 164
  /*Coverage entropy=3.5354315286325124
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setColNameWidth((-1314));
      resultMatrixLatex0.showAverageTipText();
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getDefaultStdDevWidth());
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 165
  /*Coverage entropy=3.3032385565687115
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      
      resultMatrixSignificance0.setEnumerateRowNames(true);
      resultMatrixGnuPlot0.getVisibleRowCount();
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultPrintColNames();
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 166
  /*Coverage entropy=3.45751657906716
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getRowName(0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.setShowAverage(true);
      resultMatrixLatex0.setPrintRowNames(false);
      resultMatrixLatex0.toStringKey();
      assertTrue(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(1, resultMatrixHTML0.getColCount());
  }

  /**
  //Test case number: 167
  /*Coverage entropy=4.054193327078328
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.clear();
      resultMatrixPlainText0.isAverage(1);
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 168
  /*Coverage entropy=3.0917558629288138
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_EnumerateRowNames = true;
      resultMatrixGnuPlot0.addHeader("cQ-[2t!\"8", "cQ-[2t!\"8");
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.getRowName(1);
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
      assertFalse(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertTrue(resultMatrixHTML0.getPrintColNames());
      
      boolean boolean0 = resultMatrixGnuPlot0.getDefaultShowAverage();
      assertFalse(boolean0);
      
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 169
  /*Coverage entropy=3.3456266988616434
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowOrder((int[]) null);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV1.getRowCount());
      
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(resultMatrixPlainText0);
      assertTrue(resultMatrixCSV2.getPrintColNames());
      
      int int0 = resultMatrixCSV1.getDisplayCol(0);
      assertEquals(0, int0);
      
      resultMatrixCSV0.getColCount();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV1);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      
      resultMatrixPlainText0.getSignificance(1, (-218));
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertFalse(resultMatrixPlainText0.getDefaultShowAverage());
  }

  /**
  //Test case number: 170
  /*Coverage entropy=4.110847360929819
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.setSignificanceWidth(2);
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.setShowAverage(false);
      resultMatrixLatex0.getRowName(0);
      resultMatrixHTML0.m_ShowStdDev = true;
      resultMatrixHTML0.getSignificance(1, 2);
      resultMatrixLatex0.isAverage(2006);
      resultMatrixHTML0.toString();
      resultMatrixLatex0.getDefaultShowAverage();
      resultMatrixHTML0.setShowStdDev(false);
      resultMatrixHTML0.setEnumerateRowNames(true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(666, 2);
      resultMatrixSignificance0.toStringKey();
      resultMatrixLatex0.setColName(103, ")");
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 2124);
  }

  /**
  //Test case number: 171
  /*Coverage entropy=4.162644214936982
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.setSignificanceWidth(2);
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.setShowAverage(false);
      resultMatrixLatex0.getRowName(0);
      resultMatrixHTML0.m_ShowStdDev = true;
      resultMatrixHTML0.getSignificance(1, 2);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.isAverage(2);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML1.toString();
      resultMatrixLatex0.getDefaultShowAverage();
      resultMatrixHTML0.setShowStdDev(false);
      resultMatrixHTML1.setEnumerateRowNames(false);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1);
      resultMatrixSignificance0.toStringKey();
      resultMatrixLatex0.setColName(1, ")");
      assertEquals(2, resultMatrixHTML0.getSignificanceWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(103, 2);
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixGnuPlot0.globalInfo();
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
  }

  /**
  //Test case number: 172
  /*Coverage entropy=3.8649484121460964
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 0);
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixHTML0.enumerateRowNamesTipText();
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 173
  /*Coverage entropy=4.08226580562403
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toString();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance1.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 174
  /*Coverage entropy=4.025366488830875
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(2, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1) (2)\n---------------\nrow0          \n", string0);
      
      resultMatrixSignificance0.getVisibleColCount();
      assertFalse(resultMatrixSignificance0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 175
  /*Coverage entropy=3.5412544638672125
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 1048);
      resultMatrixCSV0.getSignificance(1953, (-3796));
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(1048, resultMatrixCSV0.getRowCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      int int0 = resultMatrixPlainText0.getDefaultMeanWidth();
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, int0);
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getColCount());
      assertFalse(resultMatrixPlainText0.getShowAverage());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertFalse(resultMatrixPlainText0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 176
  /*Coverage entropy=4.136520061645363
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.setSignificanceWidth(2);
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.setShowAverage(false);
      String string0 = resultMatrixLatex0.getRowName(0);
      assertNotNull(string0);
      
      resultMatrixHTML0.m_ShowStdDev = true;
      resultMatrixHTML0.getSignificance(1, 2);
      resultMatrixLatex0.isAverage(1351);
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      String string1 = resultMatrixHTML0.toString();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"2\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string1);
      
      resultMatrixLatex0.getDefaultShowAverage();
      resultMatrixHTML0.setShowStdDev(true);
      resultMatrixHTML0.setEnumerateRowNames(false);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.toStringKey();
      resultMatrixLatex0.setColName(0, "}+[4NB(;");
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertFalse(resultMatrixLatex0.getShowAverage());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(934, 1);
      resultMatrixGnuPlot0.getDisplayName();
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(934, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 177
  /*Coverage entropy=3.192997046442502
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setShowStdDev(true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (double) 2;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      resultMatrixSignificance0.m_Counts = doubleArray0;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.assign(resultMatrixSignificance0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 178
  /*Coverage entropy=3.177048155965674
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_ShowStdDev = true;
      resultMatrixPlainText0.assign(resultMatrixSignificance0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader(")");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 179
  /*Coverage entropy=4.0539706510210936
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.getSummaryTitle(45);
      assertEquals("t", string0);
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      
      resultMatrixPlainText0.setShowStdDev(true);
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      String string1 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0   \n-------------------------------------\nrow0                       (0)      |\n-------------------------------------\n(v/ /*)                             |\n", string1);
      assertFalse(resultMatrixPlainText0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 180
  /*Coverage entropy=3.5185951110432594
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.padString("]", 0);
      assertEquals("]", string0);
      
      resultMatrixCSV0.getRevision();
      assertFalse(resultMatrixCSV0.getDefaultShowAverage());
      assertEquals(0, resultMatrixCSV0.getDefaultSignificanceWidth());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 181
  /*Coverage entropy=3.3417291421646933
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      int int0 = resultMatrixPlainText0.getSignificanceWidth();
      assertEquals(0, int0);
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringRanking();
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertTrue(resultMatrixCSV0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 182
  /*Coverage entropy=3.6794148310891286
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[1];
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 2;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      stringArray0[0] = "";
      resultMatrixGnuPlot0.setOptions(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      assertEquals(0, resultMatrixGnuPlot0.getStdDevPrec());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringSummary();
      assertFalse(resultMatrixCSV0.getDefaultShowAverage());
  }

  /**
  //Test case number: 183
  /*Coverage entropy=4.187691805657884
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.setShowStdDev(true);
      resultMatrixHTML0.getDefaultSignificanceWidth();
      resultMatrixHTML0.m_SignificanceWidth = (-1584);
      resultMatrixLatex0.listOptions();
      resultMatrixHTML0.padString("$\bullet$", 3315);
      resultMatrixLatex0.getRevision();
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 1;
      resultMatrixLatex0.setSignificanceWidth((-1116));
      resultMatrixHTML0.setColOrder(intArray0);
      resultMatrixLatex0.m_MeanPrec = 2;
      resultMatrixHTML0.setPrintColNames(false);
      resultMatrixHTML0.headerKeys();
      assertEquals((-1584), resultMatrixHTML0.getSignificanceWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixGnuPlot0.getSignificanceWidth();
      resultMatrixLatex0.headerKeys();
      resultMatrixGnuPlot0.toArray();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringKey();
      assertFalse(resultMatrixPlainText0.getShowStdDev());
  }

  /**
  //Test case number: 184
  /*Coverage entropy=3.7558340945825694
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setShowStdDev(true);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixPlainText0.assign(resultMatrixSignificance0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.getRowName(0);
      resultMatrixHTML0.headerKeys();
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
  }

  /**
  //Test case number: 185
  /*Coverage entropy=4.0537193969943
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(1, resultMatrixPlainText0.getColCount());
      
      int[] intArray0 = new int[0];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getDisplayName();
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1) col0\\\\\n\\hline\nrow0                      &         \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      int int0 = resultMatrixLatex0.getStdDevWidth();
      assertEquals(5, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, int0);
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
  }

  /**
  //Test case number: 186
  /*Coverage entropy=3.48629831128984
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setColNameWidth((-1305));
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0, resultMatrixLatex0.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 187
  /*Coverage entropy=4.163504795646413
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.listOptions();
      ResultMatrixHTML.main((String[]) null);
      resultMatrixCSV0.getColHidden(3076);
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
  }
}
