/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 28 00:07:24 GMT 2020
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.56525872196477
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_ShowAverage = true;
      resultMatrixGnuPlot0.toArray();
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.7603439605572
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      resultMatrixGnuPlot0.m_PrintColNames = false;
      intArray0[1] = 2;
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 916);
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.getColCount();
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.041480576700527
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setEnumerateRowNames(false);
      resultMatrixPlainText0.toStringRanking();
      resultMatrixPlainText0.RIGHT_PARENTHESES = "-ranking data not set-";
      resultMatrixPlainText0.headerKeys();
      resultMatrixPlainText0.removeFilterNameTipText();
      resultMatrixPlainText0.stdDevWidthTipText();
      resultMatrixPlainText0.getSummaryTitle(3);
      resultMatrixPlainText0.getStdDevWidth();
      resultMatrixPlainText0.rowNameWidthTipText();
      resultMatrixPlainText0.setStdDev(3, (-1609), 0.0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.690539055049096
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.padString("w}<x", 1229);
      resultMatrixCSV0.setStdDevPrec(0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("W=#Nz`/!~RJFaZ)$v$");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.419968017987226
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "v";
      resultMatrixSignificance0.setOptions(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.toArray();
      resultMatrixGnuPlot0.getStdDevPrec();
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.602380779932484
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      int[][] intArray0 = new int[9][9];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRanking(intArray0);
      resultMatrixGnuPlot0.getStdDevWidth();
      String[][] stringArray0 = new String[8][8];
      String[] stringArray1 = new String[9];
      stringArray1[0] = "";
      stringArray1[1] = "";
      stringArray1[2] = "v";
      stringArray1[3] = "v";
      stringArray1[4] = " ";
      stringArray1[5] = "";
      stringArray1[6] = "";
      stringArray1[7] = "*";
      stringArray1[8] = "";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[7];
      stringArray2[0] = "";
      stringArray2[1] = " ";
      stringArray2[2] = "v";
      stringArray2[3] = "";
      stringArray2[4] = "";
      stringArray2[5] = "v";
      stringArray2[6] = "";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[6];
      stringArray3[0] = "";
      stringArray3[1] = "The width of the mean (0 = optimal).";
      stringArray3[2] = " ";
      stringArray3[3] = "";
      stringArray3[4] = "";
      stringArray3[5] = "*";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[1];
      stringArray4[0] = "*";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[6];
      stringArray5[0] = "The width of the mean (0 = optimal).";
      stringArray5[1] = "The width of the mean (0 = optimal).";
      stringArray5[2] = "The width of the mean (0 = optimal).";
      stringArray5[3] = "*";
      stringArray5[4] = " ";
      stringArray5[5] = " ";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[7];
      stringArray6[0] = "*";
      stringArray6[1] = "*";
      stringArray6[2] = "";
      stringArray6[3] = "";
      stringArray6[4] = " ";
      stringArray6[5] = "v";
      stringArray6[6] = "";
      stringArray0[5] = stringArray6;
      String[] stringArray7 = new String[4];
      stringArray7[0] = "*";
      stringArray7[1] = "";
      stringArray7[2] = " ";
      stringArray7[3] = " ";
      stringArray0[6] = stringArray7;
      String[] stringArray8 = new String[6];
      stringArray8[0] = "";
      stringArray8[1] = "'<Dh^hG!Re>'jfx";
      stringArray8[2] = " ";
      stringArray8[3] = "";
      stringArray8[4] = "";
      stringArray8[5] = "";
      stringArray0[7] = stringArray8;
      resultMatrixGnuPlot0.getColSize(stringArray0, 0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.967388111291714
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      int[][] intArray0 = new int[9][9];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRanking(intArray0);
      resultMatrixGnuPlot0.setMean((-763), 523, 523);
      resultMatrixGnuPlot0.toStringRanking();
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.8191701950197325
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      double[][] doubleArray0 = new double[1][4];
      resultMatrixLatex0.m_Mean = doubleArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getAverage(0);
      resultMatrixLatex0.getAverage(0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.7458535301741085
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(4, 38);
      int[] intArray0 = new int[3];
      intArray0[0] = 4;
      intArray0[1] = 1;
      intArray0[2] = 4;
      resultMatrixSignificance0.m_ColOrder = intArray0;
      resultMatrixSignificance0.getDefaultStdDevWidth();
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 4;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 38;
      doubleArray0[4] = (-196.24917);
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 4;
      resultMatrixSignificance0.m_Counts = doubleArray0;
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixSignificance0.m_HeaderKeys = vector0;
      resultMatrixSignificance0.getStdDev(4, 34);
      resultMatrixSignificance0.getDefaultStdDevWidth();
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.773623487556094
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.clearRanking();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 1);
      resultMatrixCSV0.setRemoveFilterName(true);
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      resultMatrixSignificance0.setOptions(stringArray0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.isStdDev((-248));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.611886319454812
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_ColNameWidth = 1;
      String[] stringArray0 = new String[0];
      resultMatrixGnuPlot0.setOptions(stringArray0);
      resultMatrixGnuPlot0.getOptions();
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.873986707618567
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[5][2];
      int[] intArray1 = new int[5];
      intArray1[0] = 31;
      intArray1[1] = 1;
      intArray1[2] = 1;
      intArray1[3] = 2;
      intArray1[4] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[5];
      intArray2[0] = 1;
      intArray2[1] = (-599);
      intArray2[2] = 2;
      intArray2[3] = 31;
      intArray2[4] = 31;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[2];
      intArray3[0] = 1;
      intArray3[1] = 2;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[4];
      intArray4[0] = 1;
      intArray4[1] = 31;
      intArray4[2] = 31;
      intArray4[3] = 0;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[1];
      intArray5[0] = 0;
      intArray0[4] = intArray5;
      resultMatrixSignificance0.m_NonSigWins = intArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 0);
      int[][] intArray6 = new int[9][9];
      resultMatrixGnuPlot0.setRanking(intArray6);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(2, 0);
      int int0 = resultMatrixGnuPlot1.getColNameWidth();
      assertEquals(50, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.516329201889268
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      resultMatrixPlainText0.assign(resultMatrixGnuPlot0);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixPlainText0.LOSS_STRING = "rXf @cn>&U";
      resultMatrixSignificance0.getRevision();
      Vector<String> vector0 = new Vector<String>();
      resultMatrixSignificance0.m_HeaderKeys = vector0;
      String[] stringArray0 = null;
      resultMatrixSignificance0.m_RowNames = null;
      String[] stringArray1 = new String[0];
      ResultMatrixSignificance.main(stringArray1);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.getRowCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.3710496373258434
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("", "");
      resultMatrixGnuPlot0.getRevision();
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 94);
      String string0 = resultMatrixSignificance0.padString("", 476, false);
      assertEquals("                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ", string0);
      
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(18, stringArray0.length);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.8925266766348736
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      int[] intArray0 = new int[0];
      resultMatrixLatex0.setColOrder(intArray0);
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      
      resultMatrixSignificance0.getColHidden((-3903));
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.2313893106078018
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      resultMatrixSignificance0.getDefaultPrintRowNames();
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.9401437834560733
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 2);
      int[][] intArray0 = new int[4][9];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 0;
      intArray2[1] = 0;
      intArray2[2] = 2;
      intArray2[3] = (-5670);
      intArray2[4] = 2;
      intArray2[5] = 0;
      intArray2[6] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[0];
      intArray0[2] = intArray3;
      int[] intArray4 = new int[8];
      intArray4[0] = 0;
      intArray4[1] = (-5670);
      intArray4[2] = 2;
      intArray4[3] = (-5670);
      intArray4[4] = 1;
      intArray4[5] = 2;
      intArray4[6] = 1;
      intArray4[7] = 1;
      intArray0[3] = intArray4;
      resultMatrixGnuPlot0.m_NonSigWins = intArray0;
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getEnumerateRowNames();
      int int0 = resultMatrixPlainText0.getCountWidth();
      assertEquals(5, int0);
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      assertEquals(2, resultMatrixPlainText0.getRowCount());
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      assertEquals(0, resultMatrixPlainText0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.217562644885985
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("", "");
      resultMatrixGnuPlot0.m_RankingLosses = null;
      resultMatrixGnuPlot0.toArray();
      resultMatrixGnuPlot0.toStringHeader();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      assertFalse(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(1, resultMatrixHTML0.getRowCount());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.7430494002109462
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      
      resultMatrixGnuPlot0.setSize(3, 0);
      resultMatrixGnuPlot0.addHeader("", "");
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.getRowNameWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getDefaultShowStdDev();
      assertEquals(50, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.4693570653011054
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[9][9];
      resultMatrixGnuPlot0.setRanking(intArray0);
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.setSummary(intArray0, intArray0);
      double double0 = resultMatrixGnuPlot0.getAverage(0);
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(Double.NaN, double0, 0.01);
      
      int int0 = resultMatrixSignificance0.getSignificanceCount(46, 0);
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, int0);
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.06938175097516
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRowNameWidth(3);
      resultMatrixGnuPlot0.toArray();
      resultMatrixGnuPlot0.getDefaultStdDevWidth();
      assertEquals(3, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.8526379562735795
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      double double0 = resultMatrixLatex0.getAverage(1);
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.631612186595399
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.getEnumerateRowNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.setRowHidden((-1), false);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(40, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.500905218091064
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 2105);
      resultMatrixGnuPlot0.setRowNameWidth(1);
      // Undeclared exception!
      resultMatrixGnuPlot0.toArray();
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      double double0 = resultMatrixGnuPlot0.getAverage((-2022));
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
      assertEquals(0.0, double0, 0.01);
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.028029073307414
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[2];
      String[] stringArray0 = new String[7];
      stringArray0[0] = ")";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "(";
      stringArray0[4] = ")";
      stringArray0[5] = "(";
      stringArray0[6] = "-count-width";
      try { 
        resultMatrixGnuPlot0.setOptions(stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No value given for -count-width option.
         //
         verifyException("weka.core.Utils", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.618268371350764
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      double[][] doubleArray0 = new double[1][4];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultRemoveFilterName();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.0742266411952026
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      assertEquals(0, resultMatrixGnuPlot0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.8739867076185663
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      int[][] intArray0 = new int[9][9];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      
      int int0 = resultMatrixLatex0.getDefaultRowNameWidth();
      assertEquals(0, int0);
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.3635233891641696
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      assertFalse(resultMatrixLatex1.getShowAverage());
      assertFalse(resultMatrixLatex1.getPrintColNames());
      assertFalse(resultMatrixLatex1.getEnumerateRowNames());
      
      double double0 = resultMatrixGnuPlot0.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      int int0 = resultMatrixGnuPlot0.getMeanWidth();
      assertEquals(0, int0);
      
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.542102864605486
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.clearSummary();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.globalInfo();
      String[] stringArray0 = new String[6];
      stringArray0[0] = ")";
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixCSV0.getAverage(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      resultMatrixSignificance0.setShowStdDev(false);
      resultMatrixCSV0.getRevision();
      resultMatrixPlainText0.clearRanking();
      resultMatrixSignificance0.setColHidden(0, false);
      resultMatrixPlainText0.setColHidden(2, true);
      Vector<String> vector0 = new Vector<String>();
      resultMatrixPlainText0.m_HeaderKeys = vector0;
      resultMatrixSignificance0.getRevision();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixSignificance0.getRevision();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(30, 1);
      resultMatrixSignificance1.toStringMatrix();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.3113707751175445
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.LOSS_STRING = "<y54}";
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixSignificance0.getStdDev(3553, 85);
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.5187680060659807
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      resultMatrixLatex0.clear();
      intArray0[1] = 125;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 807;
      intArray0[7] = 0;
      intArray0[8] = 2;
      resultMatrixLatex0.m_RowOrder = intArray0;
      resultMatrixLatex0.setMeanPrec(125);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixLatex0.showAverageTipText();
      String[] stringArray0 = new String[2];
      stringArray0[0] = ")";
      stringArray0[1] = "$\bullet$";
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixLatex0.getColName(2);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.m_StdDevPrec = 2;
      resultMatrixGnuPlot0.getStdDev(0, 0);
      resultMatrixGnuPlot0.setStdDev(0, 2, 807);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.WIN_STRING = "";
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 807);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      assertEquals(0, resultMatrixCSV0.getRowNameWidth());
      
      resultMatrixCSV0.clear();
      resultMatrixLatex0.toStringRanking();
      assertFalse(resultMatrixLatex0.getShowStdDev());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.9288799345939394
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      int[][] intArray0 = new int[9][9];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      
      resultMatrixLatex0.getCount(9);
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.3493261243225767
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      int[][] intArray0 = new int[9][9];
      resultMatrixGnuPlot0.setRanking(intArray0);
      resultMatrixGnuPlot0.setShowStdDev(true);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixGnuPlot0.getOptions();
      assertTrue(resultMatrixGnuPlot0.getShowStdDev());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(1, 1);
      assertEquals(2, resultMatrixLatex1.getDefaultMeanPrec());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.6586920567575913
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.doubleToString((-551.45), 294);
      assertEquals("-551.450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", string0);
      
      resultMatrixGnuPlot0.setMeanPrec((-3531));
      resultMatrixGnuPlot0.toStringKey();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.RIGHT_PARENTHESES = "e=;D;mN%~DYTY[n^#R";
      resultMatrixSignificance0.padString(",SZi)*I`-t", (-1878));
      String string1 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset                 col0\n----------------------------\nrow0                        \n", string1);
      
      resultMatrixGnuPlot0.getMeanWidth();
      resultMatrixSignificance0.getDefaultShowAverage();
      resultMatrixGnuPlot0.m_EnumerateColNames = false;
      resultMatrixGnuPlot0.setSignificance(97, 20, (-487));
      resultMatrixSignificance0.getPrintColNames();
      resultMatrixGnuPlot0.addHeader("", "J1VrH");
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.toStringRanking();
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      double[][] doubleArray0 = new double[9][4];
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (double) (-3531);
      doubleArray1[1] = (double) 294;
      doubleArray1[2] = (double) 2;
      doubleArray1[3] = (double) 2;
      doubleArray1[4] = (double) 1;
      doubleArray1[5] = (double) 2;
      doubleArray1[6] = (double) 46;
      doubleArray1[7] = (double) 0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = (double) (-1878);
      doubleArray2[1] = (double) (-1878);
      doubleArray2[2] = (double) 2;
      doubleArray2[3] = (double) 0;
      doubleArray2[4] = (double) 46;
      doubleArray2[5] = (double) 0;
      doubleArray2[6] = (-551.45);
      doubleArray2[7] = 0.0;
      doubleArray2[8] = (double) 294;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[9];
      doubleArray3[0] = 1.0;
      doubleArray3[1] = 0.0;
      doubleArray3[2] = (double) 20;
      doubleArray3[3] = (double) 97;
      doubleArray3[4] = (double) (-3531);
      doubleArray3[5] = (double) 97;
      doubleArray3[6] = (double) 0;
      doubleArray3[7] = (double) 2;
      doubleArray3[8] = (double) (-487);
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[2];
      doubleArray4[0] = (double) 0;
      doubleArray4[1] = (double) 294;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[2];
      doubleArray5[0] = 0.0;
      doubleArray5[1] = (double) (-487);
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[8];
      doubleArray6[0] = 0.0;
      doubleArray6[1] = (double) 0;
      doubleArray6[2] = (-551.45);
      doubleArray6[4] = (double) 0;
      doubleArray6[5] = (double) 2;
      doubleArray6[6] = 0.0;
      doubleArray6[7] = (double) (-1878);
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[6];
      doubleArray7[0] = (-551.45);
      doubleArray7[1] = 1684.0;
      doubleArray7[2] = (double) 0;
      doubleArray7[3] = 3009.73559;
      doubleArray7[4] = (double) 294;
      doubleArray7[5] = 0.0;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[2];
      doubleArray8[0] = (double) 0;
      doubleArray8[1] = (double) 97;
      doubleArray0[7] = doubleArray8;
      double[] doubleArray9 = new double[6];
      doubleArray9[0] = (double) 0;
      doubleArray9[1] = 3009.73559;
      doubleArray9[2] = 0.0;
      doubleArray9[3] = (-2439.961521297844);
      doubleArray9[4] = (double) (-487);
      doubleArray9[5] = (double) 2;
      doubleArray0[8] = doubleArray9;
      resultMatrixHTML0.m_Mean = doubleArray0;
      resultMatrixHTML0.setRowName(46, "e=;D;mN%~DYTY[n^#R");
      resultMatrixHTML0.printRowNamesTipText();
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.7292670234547844
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      boolean boolean0 = resultMatrixGnuPlot0.isMean((-2086));
      assertFalse(boolean0);
      
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.4266690241880937
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.globalInfo();
      resultMatrixCSV1.getAverage(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 45);
      resultMatrixSignificance0.setShowStdDev(true);
      resultMatrixCSV0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 0);
      resultMatrixPlainText0.clearRanking();
      resultMatrixSignificance0.setColHidden(58, true);
      resultMatrixPlainText0.setColHidden((-1), false);
      resultMatrixSignificance0.getRevision();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixCSV1.getDisplayName();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      double double0 = resultMatrixGnuPlot0.getAverage(3);
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.266237661773797
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      String string1 = resultMatrixSignificance0.doubleToString((-1.0), 2);
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      assertEquals("-1.00", string1);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.875837087236038
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      int[] intArray0 = new int[0];
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.toStringKey();
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      
      double double0 = resultMatrixSignificance0.getMean(0, 40);
      assertEquals(0.0, double0, 0.01);
      assertEquals(1, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      int int0 = resultMatrixGnuPlot0.getColSize((String[][]) null, (-1888));
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getRowNameWidth());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, int0);
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      
      resultMatrixLatex0.getColCount();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
      assertFalse(resultMatrixLatex0.getShowStdDev());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.3189157223951002
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      int[][] intArray0 = new int[9][9];
      resultMatrixGnuPlot0.setRanking(intArray0);
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray1 = new int[5];
      intArray1[0] = 1;
      intArray1[1] = 2;
      intArray1[2] = (-404);
      intArray1[3] = 0;
      intArray1[4] = 0;
      resultMatrixGnuPlot0.setRowOrder(intArray1);
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getVisibleColCount());
      
      String[][] stringArray1 = new String[9][9];
      stringArray1[0] = stringArray0;
      stringArray1[1] = stringArray0;
      stringArray1[2] = stringArray0;
      String[] stringArray2 = new String[8];
      stringArray2[0] = "v";
      stringArray2[1] = "";
      stringArray2[2] = "v";
      stringArray2[3] = "";
      stringArray2[4] = " ";
      stringArray2[5] = "";
      stringArray2[6] = "$circ$";
      stringArray2[7] = ")";
      stringArray1[3] = stringArray2;
      String[] stringArray3 = new String[8];
      stringArray3[0] = "";
      stringArray3[1] = "(";
      stringArray3[2] = "";
      stringArray3[3] = "(";
      stringArray3[4] = "v";
      stringArray3[5] = "$\bullet$";
      stringArray3[6] = "";
      stringArray3[7] = ")";
      stringArray1[4] = stringArray3;
      stringArray1[5] = stringArray0;
      stringArray1[6] = stringArray0;
      stringArray1[7] = stringArray0;
      stringArray1[8] = stringArray0;
      int int0 = resultMatrixLatex0.getColSize(stringArray1, 1);
      assertFalse(resultMatrixLatex0.getShowAverage());
      assertEquals(1, int0);
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[0][7];
      resultMatrixGnuPlot0.setRanking(intArray0);
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.992400521059247
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDisplayRow((-433));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.6982155361548714
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("", "");
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.getHeader("");
      resultMatrixGnuPlot0.getDisplayName();
      boolean boolean0 = resultMatrixCSV0.isMean(2);
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertTrue(boolean0);
      assertFalse(resultMatrixCSV0.getShowAverage());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.967388111291714
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("", "");
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      boolean boolean0 = resultMatrixSignificance0.getEnumerateRowNames();
      boolean boolean1 = resultMatrixSignificance0.isMean(2313);
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getDefaultMeanWidth());
      assertTrue(boolean1 == boolean0);
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.093394272833746
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.getSummaryTitle((-537));
      assertEquals("P", string0);
      
      resultMatrixGnuPlot0.setRowNameWidth(3);
      String[][] stringArray0 = resultMatrixGnuPlot0.toArray();
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(3, stringArray0.length);
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.rowNameWidthTipText();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.1344130847086547
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[][] stringArray0 = resultMatrixGnuPlot0.toArray();
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertEquals(3, stringArray0.length);
      
      resultMatrixLatex0.getRemoveFilterName();
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.618268371350764
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int int0 = resultMatrixGnuPlot0.getDefaultStdDevPrec();
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowStdDev());
      assertEquals(2, int0);
      assertEquals(0, resultMatrixGnuPlot0.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.546725566899075
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setRowHidden(1, false);
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(50, resultMatrixPlainText0.getRowNameWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertFalse(resultMatrixPlainText0.getDefaultShowStdDev());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.6618403890648796
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.getDefaultPrintColNames();
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.4812329012959573
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      String[] stringArray0 = new String[4];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.globalInfo();
      resultMatrixSignificance0.getEnumerateRowNames();
      resultMatrixSignificance0.getDefaultPrintColNames();
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.2444926304072963
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      int[][] intArray0 = new int[14][9];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setStdDevWidth(2);
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      assertTrue(resultMatrixLatex2.getPrintColNames());
      assertFalse(resultMatrixLatex2.getEnumerateRowNames());
      assertEquals(2, resultMatrixLatex2.getStdDevWidth());
      assertEquals(0, resultMatrixLatex2.getSignificanceWidth());
      assertEquals(0, resultMatrixLatex2.getCountWidth());
      assertEquals(2, resultMatrixLatex2.getStdDevPrec());
      assertEquals(2, resultMatrixLatex2.getMeanPrec());
      assertEquals(50, resultMatrixLatex2.getRowNameWidth());
      assertEquals(0, resultMatrixLatex2.getMeanWidth());
      
      resultMatrixLatex0.setMean(1, (-210), 1);
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.enumerateColNamesTipText();
      assertEquals(0, resultMatrixGnuPlot0.getDefaultSignificanceWidth());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintRowNames());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.5805376244873655
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("", "");
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader((String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertFalse(resultMatrixSignificance0.getDefaultEnumerateRowNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("print-col-names", (String) null);
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.52751915084157
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.addHeader((String) null, "*");
      assertEquals(0, resultMatrixGnuPlot1.getMeanWidth());
      assertEquals(0, resultMatrixGnuPlot1.getStdDevWidth());
      assertTrue(resultMatrixGnuPlot1.getPrintColNames());
      assertEquals(50, resultMatrixGnuPlot1.getRowNameWidth());
      assertFalse(resultMatrixGnuPlot1.getShowStdDev());
      assertEquals(2, resultMatrixGnuPlot1.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot1.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot1.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot1.getSignificanceWidth());
      assertEquals(1, resultMatrixGnuPlot1.getVisibleRowCount());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.5986051779973063
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.setRowHidden(0, false);
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertFalse(resultMatrixPlainText0.getShowAverage());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(40, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.8526379562735795
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
      
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowHidden(24, true);
      assertTrue(resultMatrixPlainText0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.546725566899075
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setRowHidden(24, false);
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(50, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getDefaultStdDevWidth());
      assertEquals(1, resultMatrixPlainText0.getColCount());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.7284075400342926
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      int[][] intArray0 = new int[14][9];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex1.getSummaryTitle(0);
      assertEquals("a", string0);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      assertEquals(0, resultMatrixPlainText0.getRowCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      assertEquals(50, resultMatrixLatex2.getRowNameWidth());
      assertEquals(2, resultMatrixLatex2.getStdDevPrec());
      assertEquals(0, resultMatrixLatex2.getDefaultColNameWidth());
      assertEquals(0, resultMatrixLatex2.getCountWidth());
      assertEquals(1, resultMatrixLatex2.getRowCount());
      assertEquals(2, resultMatrixLatex2.getMeanPrec());
      assertTrue(resultMatrixLatex2.getPrintColNames());
      assertEquals(0, resultMatrixLatex2.getStdDevWidth());
      assertTrue(resultMatrixLatex2.getPrintRowNames());
      assertEquals(0, resultMatrixLatex2.getSignificanceWidth());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      int[] intArray0 = new int[0];
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.stdDevWidthTipText();
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getVisibleColCount());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.485779555868355
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      String[] stringArray0 = new String[4];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.globalInfo();
      resultMatrixSignificance0.getEnumerateRowNames();
      resultMatrixSignificance0.setColHidden(25, false);
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.762136040901145
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getVisibleColCount();
      resultMatrixSignificance0.setMeanWidth(1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.getDisplayName();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.trimString((String) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.69690085000884
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.globalInfo();
      String string0 = resultMatrixSignificance0.toStringKey();
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals("Key:\n(1) col0\n", string0);
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.729267023454784
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.setSignificance(4, 4, 50);
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.9486768446635363
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.toStringRanking();
      int int0 = 125;
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.m_ColNameWidth = (-968);
      resultMatrixCSV0.clearSummary();
      int int1 = (-896);
      resultMatrixCSV0.setSignificanceWidth((-896));
      resultMatrixCSV0.isAverage(125);
      resultMatrixCSV0.setRowNameWidth((-968));
      resultMatrixCSV0.stdDevPrecTipText();
      resultMatrixCSV0.meanPrecTipText();
      ResultMatrixCSV.main(stringArray0);
      int int2 = 1414;
      resultMatrixCSV0.setSignificance((-968), (-968), 1414);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("The number of decimals after the decimal point for the standard deviation.");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.2873481785640757
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      String string0 = resultMatrixSignificance0.toStringKey();
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals("Key:\n[1] col0\n", string0);
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      
      resultMatrixCSV0.addHeader("Key:\n[1] col0\n", "stddev-prec");
      resultMatrixCSV0.setSignificance((-1466), 0, 1);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(1, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRowOrder((int[]) null);
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.7650446362605217
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(53, 23);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.toStringSummary();
      resultMatrixSignificance0.setMeanWidth(0);
      resultMatrixLatex0.setColOrder((int[]) null);
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.trimString("(", 0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(2, 2);
      resultMatrixLatex1.setMeanWidth(1);
      resultMatrixLatex1.getDefaultPrintColNames();
      resultMatrixLatex1.getRowName(54);
      // Undeclared exception!
      resultMatrixSignificance1.toStringMatrix();
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.1826924929488762
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      
      String string0 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      resultMatrixCSV0.toStringKey();
      String string1 = resultMatrixSignificance0.padString("", 2);
      assertEquals("  ", string1);
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      String[] stringArray0 = new String[3];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      boolean boolean0 = resultMatrixSignificance0.getEnumerateRowNames();
      assertFalse(boolean0);
      
      resultMatrixSignificance0.setStdDev(0, 2482, (-347.1979));
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
      assertTrue(resultMatrixSignificance0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.128630568590545
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("", "");
      resultMatrixGnuPlot0.getColName(30);
      resultMatrixGnuPlot0.setRowNameWidth(3);
      resultMatrixGnuPlot0.toArray();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setStdDev(2817, (-234), 5.5);
      assertEquals(3, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.4061774521134605
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.TIE_STRING = "PIFftqFv{5";
      resultMatrixGnuPlot0.addHeader("v", "v");
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixGnuPlot0.setStdDev(45, 45, 45);
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.1170536073915236
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("", "");
      resultMatrixGnuPlot0.getSummaryTitle(3);
      resultMatrixGnuPlot0.setRowNameWidth(3);
      resultMatrixGnuPlot0.toArray();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      assertEquals(3, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(8, 8);
      resultMatrixSignificance0.addHeader(":.*ib", "");
      resultMatrixSignificance0.setSize(8, 18);
      resultMatrixSignificance0.significanceWidthTipText();
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixSignificance0.getStdDevPrec();
      resultMatrixSignificance0.getDefaultEnumerateColNames();
      resultMatrixSignificance0.getDisplayName();
      assertEquals(18, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.6833615354548526
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.LOSS_STRING = "K4#<XM!H&92lWNOw";
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      double double0 = resultMatrixGnuPlot2.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      String string0 = resultMatrixGnuPlot2.trimString("", 47);
      assertEquals(50, resultMatrixGnuPlot2.getRowNameWidth());
      assertEquals(2, resultMatrixGnuPlot2.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot2.getStdDevWidth());
      assertEquals(2, resultMatrixGnuPlot2.getMeanPrec());
      assertEquals("", string0);
      assertEquals(0, resultMatrixGnuPlot2.getMeanWidth());
      assertEquals(0, resultMatrixGnuPlot2.getCountWidth());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.271260033111007
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      resultMatrixLatex0.trimString("1(od*PXU", (-2266));
      resultMatrixLatex0.getDefaultPrintColNames();
      assertEquals(0, resultMatrixLatex0.getVisibleColCount());
      
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      resultMatrixLatex0.getRowHidden(0);
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.6618403890648796
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      int[][] intArray0 = new int[9][9];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRanking(intArray0);
      resultMatrixGnuPlot0.getDefaultCountWidth();
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultSignificanceWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      int[] intArray0 = new int[0];
      resultMatrixLatex0.setColOrder(intArray0);
      assertEquals(0, resultMatrixLatex0.getVisibleColCount());
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
      
      resultMatrixSignificance0.getDisplayName();
      resultMatrixSignificance0.getRowHidden((-1));
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(0, resultMatrixSignificance0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.52751915084157
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setCountWidth(0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.getDisplayName();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = null;
      try {
        resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(512, (-1436));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      double double0 = resultMatrixGnuPlot0.getAverage(997);
      assertEquals(0.0, double0, 0.01);
      
      resultMatrixGnuPlot0.showStdDevTipText();
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.950391601025311
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(36, 0);
      resultMatrixGnuPlot0.addHeader(" ", "(");
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 36;
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      
      resultMatrixSignificance0.getPrintColNames();
      assertTrue(resultMatrixSignificance0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixSignificance0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.8004698251768683
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("cQ-[2t!\"8", "cQ-[2t!\"8");
      int[] intArray0 = new int[4];
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.setColHidden(50, true);
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.printRowNamesTipText();
      resultMatrixGnuPlot0.getEnumerateColNames();
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.3693801921040074
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("v", "v");
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(18, stringArray0.length);
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 2);
      resultMatrixSignificance0.getRevision();
      boolean boolean0 = resultMatrixSignificance0.getEnumerateColNames();
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getColCount());
      assertTrue(boolean0);
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(2, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.618268371350764
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getColCount();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowStdDev());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.2313893106078018
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      resultMatrixSignificance0.getShowStdDev();
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.893242576192231
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.clear();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      String[] stringArray0 = new String[0];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 520);
      resultMatrixLatex0.setEnumerateRowNames(false);
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.clearHeader();
      resultMatrixLatex0.setRowName(2, "]");
      resultMatrixSignificance0.getDisplayRow(1);
      String string0 = resultMatrixSignificance0.getDisplayName();
      assertEquals("Significance only", string0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.8004698251768687
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.WIN_STRING = "|9ZvNTA'KvHj";
      int int0 = resultMatrixLatex0.getDisplayRow(42);
      assertEquals((-1), int0);
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.7458535301741085
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getColName(576);
      // Undeclared exception!
      resultMatrixSignificance0.setSize(904, 576);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.850517756600938
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setRemoveFilterName(false);
      int int0 = resultMatrixSignificance0.getVisibleColCount();
      assertEquals(1, int0);
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(0, resultMatrixSignificance0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.9383187699714615
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      int[] intArray0 = new int[0];
      resultMatrixLatex0.setColOrder(intArray0);
      assertEquals(1, resultMatrixLatex0.getRowCount());
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.isSignificance(2);
      assertFalse(resultMatrixLatex1.getDefaultEnumerateRowNames());
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      assertEquals(0, resultMatrixLatex1.getDefaultSignificanceWidth());
      assertEquals(0, resultMatrixLatex1.getRowNameWidth());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(1, resultMatrixLatex1.getColCount());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
      assertFalse(resultMatrixLatex1.getShowStdDev());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.338045568084704
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setPrintColNames(false);
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringSummary();
      resultMatrixPlainText0.isSignificance((-3114));
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.6486255461118287
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("", "");
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.getHeader("");
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      
      resultMatrixGnuPlot0.getColHidden(2);
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      int[][] intArray0 = new int[9][9];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      String string0 = resultMatrixLatex0.meanPrecTipText();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals("The number of decimals after the decimal point for the mean.", string0);
      assertEquals(0, resultMatrixLatex0.getDefaultSignificanceWidth());
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(1, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.760912200944244
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      int[][] intArray0 = new int[9][9];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(5, resultMatrixGnuPlot0.getCountWidth());
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintColNames());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.402998903268985
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(18, stringArray0.length);
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(0, resultMatrixGnuPlot0.getVisibleRowCount());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex0.setColName(1, "v");
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.943462857404525
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.m_RowNameWidth = 1;
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.toStringSummary();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setMeanWidth(2);
      intArray0[0] = 1;
      resultMatrixLatex0.m_RowOrder = intArray0;
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.getDefaultColNameWidth();
      assertFalse(resultMatrixLatex0.getEnumerateColNames());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 115);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixHTML0);
      int int0 = resultMatrixLatex1.getMeanWidth();
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      
      int int1 = resultMatrixHTML0.getVisibleColCount();
      assertTrue(int1 == int0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.921613496406035
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      int[][] intArray0 = new int[9][9];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(0, resultMatrixLatex0.getDefaultCountWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      resultMatrixPlainText0.setRowName((-1540), "Dataset");
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.7463206380153755
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getVisibleColCount();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.731290168575229
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("cQ-[2t!\"8", "cQ-[2t!\"8");
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      int[] intArray1 = new int[1];
      intArray1[0] = 2;
      resultMatrixGnuPlot0.setRowOrder(intArray1);
      resultMatrixGnuPlot0.setPrintRowNames(false);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.getRevision();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.6394191403189926
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("", "");
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setRowNameWidth(3);
      resultMatrixGnuPlot0.toArray();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.setRowOrder(intArray0);
      resultMatrixGnuPlot0.setCount((-2343), 3);
      assertEquals(3, resultMatrixGnuPlot0.getRowNameWidth());
      
      String string0 = resultMatrixGnuPlot1.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.967388111291714
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("cQ-[2t!\"8", "cQ-[2t!\"8");
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.isAverage((-3450));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDisplayName();
      assertFalse(resultMatrixLatex0.getShowAverage());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.2958368660043296
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      
      resultMatrixSignificance0.setRemoveFilterName(true);
      resultMatrixSignificance0.toStringKey();
      resultMatrixSignificance0.listOptions();
      assertTrue(resultMatrixSignificance0.getRemoveFilterName());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.0448204824645764
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      int[] intArray0 = new int[1];
      resultMatrixLatex0.setColOrder(intArray0);
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(40, resultMatrixLatex0.getRowNameWidth());
      assertFalse(resultMatrixLatex0.getShowAverage());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.2313893106078018
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      int int0 = resultMatrixSignificance0.getVisibleRowCount();
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.951540319448604
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("cQ-[2t!\"8", "cQ-[2t!\"8");
      int[][] intArray0 = new int[3][6];
      int[] intArray1 = new int[4];
      intArray1[0] = 1;
      intArray1[1] = 0;
      resultMatrixGnuPlot0.toStringHeader();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1742, 0);
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(1828, 2);
      resultMatrixPlainText1.setShowAverage(true);
      assertTrue(resultMatrixPlainText1.getShowAverage());
      
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getVisibleRowCount();
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int int0 = resultMatrixCSV0.getCountWidth();
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, int0);
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.950391601025311
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_SignificanceWidth = 673;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 0);
      resultMatrixLatex0.clear();
      resultMatrixLatex0.setColNameWidth((-1693));
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.setRowName(0, "/");
      assertEquals(0, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getDefaultCountWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("v", "");
      resultMatrixGnuPlot0.significanceWidthTipText();
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.6618403890648796
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      int[][] intArray0 = new int[9][9];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRanking(intArray0);
      resultMatrixGnuPlot0.getDefaultMeanPrec();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.842880615317132
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSize(173, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.888487304076087
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setStdDevWidth((-1779));
      double double0 = resultMatrixGnuPlot0.getAverage(0);
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(Double.NaN, double0, 0.01);
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.padString((String) null, (-2938));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.985880370076756
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[0] = 1;
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.setPrintRowNames(true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1);
      resultMatrixGnuPlot0.getRevision();
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      
      int int0 = resultMatrixSignificance0.getDisplayCol(0);
      assertEquals(0, int0);
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(0, resultMatrixSignificance0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.842880615317132
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      resultMatrixLatex0.setSize(0, 1);
      int[] intArray0 = new int[0];
      resultMatrixLatex0.setColOrder(intArray0);
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
      assertEquals(0, resultMatrixLatex0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixLatex0.getColCount());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.842880615317132
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 0);
      resultMatrixLatex0.getAverage(1);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setSize(0, (-3693));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSize((-383), (-383));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=3.1634240504234032
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(9, 5);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.setMean(1477, 9, 5);
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
      assertEquals(5, resultMatrixLatex1.getRowCount());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertEquals(0, resultMatrixLatex1.getRowNameWidth());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(9, resultMatrixLatex1.getVisibleColCount());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.6969008500088405
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowNameWidth(2);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "(";
      stringArray0[1] = ")";
      stringArray0[2] = ")";
      resultMatrixLatex0.m_RowNames = stringArray0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 97);
      resultMatrixCSV0.clear();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex0.setColName(0, (String) null);
      assertEquals(2, resultMatrixLatex0.getRowNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.globalInfo();
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.9970515958254382
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toArray();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.setOptions(stringArray0);
      resultMatrixSignificance1.getRowName(1);
      resultMatrixSignificance1.setCount((-3002), 2);
      assertEquals(25, resultMatrixSignificance1.getRowNameWidth());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("", "");
      int int0 = resultMatrixGnuPlot0.getMeanPrec();
      assertEquals(2, int0);
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.2661022040011227
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      int int0 = 97;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(12, 97);
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.meanWidthTipText();
      resultMatrixLatex0.addHeader("The width of the mean (0 = optimal).", "HZ*r)9hp");
      resultMatrixLatex0.getDefaultEnumerateColNames();
      // Undeclared exception!
      resultMatrixLatex0.toStringMatrix();
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.884541592422804
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      int[][] intArray0 = new int[14][9];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      assertFalse(resultMatrixLatex1.getPrintColNames());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      assertEquals(2, resultMatrixPlainText0.getVisibleColCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      assertEquals(0, resultMatrixLatex2.getMeanWidth());
      assertEquals(50, resultMatrixLatex2.getRowNameWidth());
      assertEquals(0, resultMatrixLatex2.getDefaultColNameWidth());
      assertEquals(0, resultMatrixLatex2.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex2.getMeanPrec());
      assertTrue(resultMatrixLatex2.getPrintRowNames());
      assertEquals(0, resultMatrixLatex2.getDefaultRowNameWidth());
      
      String string0 = resultMatrixGnuPlot0.getColName(0);
      assertEquals("col0", string0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getShowAverage();
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=3.0280290733074104
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getColName(26);
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.5734504974788237
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.listOptions();
      String[] stringArray0 = new String[0];
      resultMatrixGnuPlot0.setOptions(stringArray0);
      resultMatrixGnuPlot0.getMean(2118, 2118);
      assertFalse(resultMatrixGnuPlot0.getPrintRowNames());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=3.2958368660043296
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getVisibleColCount();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(6, 2);
      String string0 = resultMatrixLatex0.toStringKey();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption (Key)}\n\\scriptsize\n{\\centering\n\\begin{tabular}{cl}\\\\\n(1) & col0 \\\\\n(2) & col1 \\\\\n(3) & col2 \\\\\n(4) & col3 \\\\\n(5) & col4 \\\\\n(6) & col5 \\\\\n\\end{tabular}\n}\n\\end{table}\n", string0);
      
      resultMatrixLatex0.setColName((-1), "weka.experiment.ResultMatrixGnuPlot");
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.8526379562735795
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clear();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowName(371, "v");
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getDefaultCountWidth());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertFalse(resultMatrixGnuPlot0.getDefaultShowStdDev());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.clearRanking();
      resultMatrixSignificance0.getEnumerateRowNames();
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertTrue(resultMatrixSignificance0.getDefaultPrintRowNames());
      assertFalse(resultMatrixSignificance0.getDefaultShowAverage());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=2.7458535301741085
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("v", "");
      int int0 = resultMatrixGnuPlot0.getSignificanceCount(26, 26);
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(0, int0);
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.TIE_STRING = "8u}9.!li";
      int int0 = resultMatrixHTML0.getRowCount();
      assertFalse(resultMatrixHTML0.getDefaultEnumerateRowNames());
      assertEquals(1, int0);
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
      assertFalse(resultMatrixHTML0.getShowStdDev());
      assertEquals(0, resultMatrixHTML0.getDefaultSignificanceWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=3.5543688735963714
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      int int0 = resultMatrixSignificance0.getColNameWidth();
      assertEquals(0, int0);
      
      resultMatrixSignificance0.getSignificanceCount((-5906), (-622));
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=3.2313893106078018
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.clearRanking();
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      int int0 = resultMatrixSignificance0.getDefaultMeanWidth();
      assertEquals(0, int0);
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=3.1634240504234032
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRowName(4388, (String) null);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultMeanWidth();
      resultMatrixLatex0.setRowName(0, "");
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0, resultMatrixLatex0.getDefaultSignificanceWidth());
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertFalse(resultMatrixLatex0.getShowAverage());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clear();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setColName(0, "");
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.clear();
      resultMatrixSignificance0.setMeanPrec((-1005));
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=3.9573685181373097
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot1.setOptions((String[]) null);
      resultMatrixCSV0.toStringMatrix();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot1.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=3.126110265646969
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.setRowNameWidth(2);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 145
  /*Coverage entropy=2.6885678425123976
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=3.232492363742278
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      resultMatrixSignificance0.getColName((-4242));
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.removeFilterName("");
      assertEquals("", string0);
      
      resultMatrixCSV0.getDefaultColNameWidth();
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getDefaultShowAverage());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=2.818762871904427
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      int[][] intArray0 = new int[14][9];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      resultMatrixPlainText0.setMeanWidth(0);
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      boolean boolean0 = resultMatrixSignificance0.getEnumerateRowNames();
      assertTrue(resultMatrixSignificance0.getDefaultEnumerateColNames());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getRowNameWidth());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 149
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      int[][] intArray0 = new int[0][5];
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 150
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      int[] intArray1 = resultMatrixGnuPlot0.getRowOrder();
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintColNames());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
      assertNotNull(intArray1);
  }

  /**
  //Test case number: 151
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixSignificance0.m_EnumerateColNames = true;
      resultMatrixSignificance0.globalInfo();
      resultMatrixSignificance0.getEnumerateRowNames();
      resultMatrixSignificance0.headerKeys();
      resultMatrixSignificance0.getRowOrder();
      assertEquals(0, resultMatrixSignificance0.getDefaultColNameWidth());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertFalse(resultMatrixSignificance0.getShowAverage());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(1, resultMatrixSignificance0.getColCount());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("", "");
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.clear();
      String string0 = resultMatrixCSV0.getHeader("");
      assertNull(string0);
      
      resultMatrixCSV0.isStdDev(1);
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertFalse(resultMatrixCSV0.getShowStdDev());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertFalse(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=3.9512437185814298
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      resultMatrixSignificance0.getPrintRowNames();
      resultMatrixSignificance0.colNameWidthTipText();
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=3.3113707751175445
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 0;
      resultMatrixSignificance0.m_ColOrder = intArray0;
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixSignificance0.getSignificance(3, (-1));
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=2.858597056331374
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getVisibleColCount();
      int int0 = resultMatrixSignificance0.getDisplayCol(1);
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals((-1), int0);
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertTrue(resultMatrixSignificance0.getDefaultEnumerateColNames());
  }

  /**
  //Test case number: 156
  /*Coverage entropy=2.8720839929340602
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 157
  /*Coverage entropy=2.9683189136218826
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 158
  /*Coverage entropy=3.902912709762232
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.m_PrintColNames = false;
      resultMatrixSignificance0.printColNamesTipText();
      String[] stringArray0 = new String[5];
      stringArray0[0] = " ";
      stringArray0[1] = "Whether to output column names or just numbers representing them.";
      stringArray0[2] = "]";
      stringArray0[3] = "[";
      stringArray0[4] = "Whether to output column names or just numbers representing them.";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.setMeanWidth((-487));
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex2.addHeader("t(g*>78O,<QlL6_6", "]");
      resultMatrixLatex0.removeFilterName("]%-xuwl$q~");
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex1);
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(1, resultMatrixLatex1.getVisibleRowCount());
      assertEquals(1, resultMatrixLatex1.getVisibleColCount());
  }

  /**
  //Test case number: 159
  /*Coverage entropy=4.4426512564903184
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.clear();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      String[] stringArray0 = new String[0];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setMeanWidth(3);
      resultMatrixLatex0.addHeader("gRlKPKO2al", "]");
      resultMatrixLatex0.removeFilterName((String) null);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.setOptions(stringArray0);
      resultMatrixGnuPlot0.getRevision();
      int int0 = resultMatrixLatex0.getMeanWidth();
      assertEquals(3, int0);
  }

  /**
  //Test case number: 160
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1);
      String[] stringArray0 = new String[18];
      try { 
        resultMatrixSignificance0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 161
  /*Coverage entropy=3.2949489243911816
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      String string1 = resultMatrixGnuPlot0.doubleToString(2, 0);
      assertEquals("2.", string1);
      
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(40, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=2.942494171552879
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      double double0 = resultMatrixGnuPlot0.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      resultMatrixLatex0.getRowHidden(46);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getDefaultColNameWidth());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertFalse(resultMatrixPlainText0.getDefaultShowStdDev());
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=3.3617188928893302
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowNameWidth(2);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(resultMatrixLatex1);
      resultMatrixLatex2.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getSignificance(0, 2);
      resultMatrixLatex0.isAverage(1945);
      assertEquals(2, resultMatrixLatex0.getRowNameWidth());
      
      resultMatrixHTML0.toString();
      resultMatrixLatex2.getDefaultShowAverage();
      resultMatrixHTML0.setShowStdDev(false);
      resultMatrixHTML0.setEnumerateRowNames(true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 0);
      String string0 = resultMatrixSignificance0.toStringKey();
      assertEquals("Key:\n(1) col0\n(2) col1\n", string0);
  }

  /**
  //Test case number: 164
  /*Coverage entropy=3.7203873776445575
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setMeanWidth(18);
      resultMatrixSignificance0.getVisibleColCount();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 18;
      resultMatrixLatex0.m_RowOrder = intArray0;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringMatrix();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrixLatex", e);
      }
  }

  /**
  //Test case number: 165
  /*Coverage entropy=3.106417443743697
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 1);
      resultMatrixGnuPlot0.setRowNameWidth(0);
      String[][] stringArray0 = resultMatrixGnuPlot0.toArray();
      assertEquals(3, stringArray0.length);
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
  }

  /**
  //Test case number: 166
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.countWidthTipText();
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 167
  /*Coverage entropy=3.468061556686579
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertFalse(resultMatrixGnuPlot0.getEnumerateColNames());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 0);
      resultMatrixSignificance0.setPrintRowNames(true);
      assertEquals(2, resultMatrixSignificance0.getVisibleColCount());
      
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1) (2)\n---------------\n", string0);
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
  }

  /**
  //Test case number: 168
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setStdDevPrec(582);
      boolean boolean0 = resultMatrixSignificance0.getEnumerateRowNames();
      assertEquals(582, resultMatrixSignificance0.getStdDevPrec());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 169
  /*Coverage entropy=3.290833459281292
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setPrintRowNames(false);
      resultMatrixSignificance0.setMeanPrec(290);
      resultMatrixSignificance0.toStringMatrix();
      assertFalse(resultMatrixSignificance0.getPrintRowNames());
  }

  /**
  //Test case number: 170
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.getDisplayName();
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      
      resultMatrixSignificance0.setMeanPrec(1);
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 171
  /*Coverage entropy=3.75036168983309
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setStdDevPrec((-577));
      String[][] stringArray0 = resultMatrixHTML0.toArray();
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(3, stringArray0.length);
  }

  /**
  //Test case number: 172
  /*Coverage entropy=3.2514470009975125
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setStdDevWidth(2);
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
  }

  /**
  //Test case number: 173
  /*Coverage entropy=2.472422873542602
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringRanking();
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 174
  /*Coverage entropy=2.873986707618567
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 0);
      resultMatrixGnuPlot0.m_PrintColNames = true;
      resultMatrixGnuPlot0.setStdDevWidth(0);
      int[][] intArray0 = new int[9][9];
      resultMatrixGnuPlot0.setRanking(intArray0);
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 175
  /*Coverage entropy=3.2673290673038835
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      resultMatrixSignificance0.toStringSummary();
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getDefaultSignificanceWidth());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
  }

  /**
  //Test case number: 176
  /*Coverage entropy=3.2673468686248315
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.padString("\tWhether to show the row with averages.\n\t(default: no)", (-1272), true);
      resultMatrixSignificance0.toStringMatrix();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 177
  /*Coverage entropy=3.4812329012959573
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      String[] stringArray0 = new String[3];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getEnumerateRowNames();
      resultMatrixSignificance0.padString(",", 2527, false);
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 178
  /*Coverage entropy=3.2309669460490444
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[0][4];
      resultMatrixSignificance0.padString("}{c}{$circ$, $\bullet$", (-158));
      resultMatrixSignificance0.m_NonSigWins = intArray0;
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertFalse(resultMatrixSignificance0.getShowAverage());
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 179
  /*Coverage entropy=3.7267953482912386
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRowNameWidth((-1377));
      String[][] stringArray0 = resultMatrixGnuPlot0.toArray();
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
      assertEquals(3, stringArray0.length);
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
  }

  /**
  //Test case number: 180
  /*Coverage entropy=2.6800072369022314
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.doubleToString(0.0, 1);
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintRowNames());
      assertEquals("0.0", string0);
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 181
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.doubleToString(0.0, (-2380));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 182
  /*Coverage entropy=3.000830317041457
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringKey();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_ColOrder = null;
      String[] stringArray0 = new String[9];
      stringArray0[0] = "n{xud>_n|)1V";
      stringArray0[1] = ")";
      stringArray0[2] = "";
      stringArray0[3] = " ";
      stringArray0[4] = " ";
      stringArray0[5] = "v";
      stringArray0[6] = "*";
      resultMatrixHTML0.doubleToString(Double.NaN, (-202));
      stringArray0[7] = "v";
      stringArray0[8] = " ";
      resultMatrixSignificance0.m_RowNames = stringArray0;
      resultMatrixHTML0.m_RankingWins = null;
      resultMatrixSignificance0.m_MeanPrec = 1;
      int[][] intArray0 = new int[2][4];
      intArray0[0] = null;
      int[] intArray1 = new int[5];
      intArray1[0] = (-2400);
      intArray1[1] = 2;
      intArray1[2] = 1;
      intArray1[3] = 2;
      intArray1[4] = 2;
      intArray0[1] = intArray1;
      resultMatrixSignificance0.m_Wins = intArray0;
      resultMatrixSignificance0.setCountWidth(95);
      resultMatrixSignificance0.getDisplayName();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, (-127));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 183
  /*Coverage entropy=3.3472103211303126
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.setCountWidth(1);
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(0, 123);
      resultMatrixSignificance2.getDisplayName();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance1);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(1, 889);
      resultMatrixLatex1.removeFilterName(")");
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.setOptions((String[]) null);
      resultMatrixGnuPlot0.getRevision();
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex2.getMeanWidth();
      resultMatrixGnuPlot0.isAverage(0);
      assertEquals(1, resultMatrixSignificance1.getCountWidth());
  }

  /**
  //Test case number: 184
  /*Coverage entropy=2.6800072369022314
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      int[][] intArray0 = new int[5][9];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 185
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("", "");
      int[][] intArray0 = new int[2][9];
      int[] intArray1 = new int[2];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      resultMatrixGnuPlot0.setRanking(intArray0);
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
  }

  /**
  //Test case number: 186
  /*Coverage entropy=2.8739867076185663
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.getSummaryTitle(2);
      assertEquals("c", string0);
      
      resultMatrixLatex0.setColOrder(intArray0);
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getDefaultCountWidth());
  }

  /**
  //Test case number: 187
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setColOrder((int[]) null);
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 188
  /*Coverage entropy=3.2514470009975125
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setCountWidth((-845));
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 189
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(10);
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      assertEquals(10, resultMatrixGnuPlot0.getCountWidth());
  }

  /**
  //Test case number: 190
  /*Coverage entropy=3.3068849378916276
  */
  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_ShowAverage = true;
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.getRowName((-1962));
      assertTrue(resultMatrixSignificance0.getShowAverage());
  }

  /**
  //Test case number: 191
  /*Coverage entropy=3.2521674829051554
  */
  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int int0 = resultMatrixSignificance0.getVisibleColCount();
      assertEquals(1, int0);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 2);
      assertEquals(2, resultMatrixLatex0.getVisibleRowCount());
      
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lrr@{\\hspace{0.1cm}}c}\n\\\\\n\\hline\nDataset & (1)& (2) & \\\\\n\\hline\nrow0 &     &     &        \\\\\nrow1 &     &     &        \\\\\n\\hline\n\\multicolumn{4}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      resultMatrixLatex0.getRemoveFilterName();
      resultMatrixSignificance0.meanWidthTipText();
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
  }

  /**
  //Test case number: 192
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("v");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 193
  /*Coverage entropy=2.921613496406035
  */
  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      int[][] intArray0 = new int[9][9];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      resultMatrixPlainText0.printColNamesTipText();
      assertFalse(resultMatrixPlainText0.getDefaultRemoveFilterName());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertTrue(resultMatrixPlainText0.getPrintColNames());
  }

  /**
  //Test case number: 194
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(50, 50);
      resultMatrixSignificance0.enumerateRowNamesTipText();
      assertEquals(50, resultMatrixSignificance0.getColCount());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(50, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
  }

  /**
  //Test case number: 195
  /*Coverage entropy=3.2313893106078018
  */
  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.clear();
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 196
  /*Coverage entropy=3.2514470009975125
  */
  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.listOptions();
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      resultMatrixSignificance0.globalInfo();
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getDefaultSignificanceWidth());
      assertFalse(resultMatrixSignificance0.getDefaultShowAverage());
  }

  /**
  //Test case number: 197
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.removeFilterNameTipText();
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 198
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      String[] stringArray0 = new String[3];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 199
  /*Coverage entropy=2.898524611583721
  */
  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      double[][] doubleArray0 = new double[1][4];
      resultMatrixLatex0.m_Mean = doubleArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      Integer integer0 = new Integer(1);
      resultMatrixLatex0.getAverage(0);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getColSize((String[][]) null, 0, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 200
  /*Coverage entropy=3.3898835624651125
  */
  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.setSignificanceWidth(2);
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.setShowAverage(false);
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.getRowName(0);
      resultMatrixHTML0.m_ShowStdDev = true;
      resultMatrixHTML0.getSignificance(1, 2);
      resultMatrixLatex0.isAverage(2006);
      resultMatrixHTML0.toString();
      resultMatrixLatex0.getDefaultShowAverage();
      resultMatrixHTML0.setShowStdDev(false);
      resultMatrixHTML0.setEnumerateRowNames(true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(666, 2);
      resultMatrixSignificance0.toStringKey();
      resultMatrixHTML0.clearSummary();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      String[][] stringArray0 = new String[0][5];
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getColSize(stringArray0, 2671, true, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 201
  /*Coverage entropy=2.6806087753114367
  */
  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setColOrder(intArray0);
      String[][] stringArray0 = new String[3][1];
      String[] stringArray1 = new String[9];
      stringArray1[0] = "$\bullet$";
      stringArray1[1] = "";
      stringArray1[2] = ";K";
      stringArray1[3] = "v";
      stringArray1[4] = "$circ$";
      stringArray1[5] = "v";
      stringArray1[6] = "$\bullet$";
      stringArray1[7] = "";
      stringArray1[8] = "*";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[7];
      stringArray2[0] = ")";
      stringArray2[1] = "$circ$";
      stringArray2[2] = "Ap$h4:";
      stringArray2[3] = "";
      stringArray2[4] = " ";
      stringArray2[5] = "";
      stringArray2[6] = "$\bullet$";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[8];
      stringArray3[0] = "";
      stringArray3[1] = "";
      stringArray3[2] = "v";
      stringArray3[3] = "*";
      stringArray3[4] = "";
      stringArray3[5] = "";
      stringArray3[6] = "*";
      stringArray3[7] = "";
      stringArray0[2] = stringArray3;
      int int0 = resultMatrixLatex0.getColSize(stringArray0, 2, false, true);
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(7, int0);
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 202
  /*Coverage entropy=3.0280290733074104
  */
  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      intArray0[1] = 1;
      intArray0[2] = 32;
      intArray0[3] = 1;
      intArray0[4] = 0;
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      resultMatrixGnuPlot0.getRevision();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.setCount(0, 0);
      String[][] stringArray0 = new String[9][6];
      String[] stringArray1 = new String[7];
      stringArray1[0] = " ";
      stringArray1[1] = "*";
      stringArray1[2] = " ";
      stringArray1[3] = " ";
      stringArray1[4] = "v";
      stringArray1[5] = " ";
      stringArray1[6] = "";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[8];
      stringArray2[0] = "{Z,tR1)k\"1}}a0L{PeF";
      stringArray2[1] = "*";
      stringArray2[2] = "";
      stringArray2[3] = "8034";
      stringArray2[4] = " ";
      stringArray2[5] = "v";
      stringArray2[6] = "";
      stringArray2[7] = "";
      stringArray0[1] = stringArray2;
      stringArray0[2] = stringArray2;
      String[] stringArray3 = new String[9];
      stringArray3[0] = "v";
      stringArray3[1] = "*";
      stringArray3[2] = "*";
      stringArray3[3] = "8034";
      stringArray3[4] = "v";
      stringArray3[5] = " ";
      stringArray3[6] = " ";
      stringArray3[7] = "8034";
      stringArray3[8] = "";
      stringArray0[3] = stringArray3;
      String[] stringArray4 = new String[9];
      stringArray4[0] = "row";
      stringArray4[1] = "v";
      stringArray4[2] = "";
      stringArray4[3] = "8034";
      stringArray4[4] = "{Z,tR1)k\"1}}a0L{PeF";
      stringArray4[5] = "v";
      stringArray4[6] = " ";
      stringArray4[7] = "";
      stringArray4[8] = "{Z,tR1)k\"1}}a0L{PeF";
      stringArray0[4] = stringArray4;
      String[] stringArray5 = new String[6];
      stringArray5[0] = "Xm";
      stringArray5[1] = "";
      stringArray5[2] = "";
      stringArray5[3] = "'Tx";
      stringArray5[4] = " ";
      stringArray5[5] = "";
      stringArray0[5] = stringArray5;
      String[] stringArray6 = new String[0];
      stringArray0[6] = stringArray6;
      String[] stringArray7 = new String[3];
      stringArray7[0] = "";
      stringArray7[2] = "Xm";
      stringArray0[7] = stringArray7;
      String[] stringArray8 = new String[4];
      stringArray8[0] = "";
      stringArray8[2] = "'Tx";
      stringArray8[3] = "Xm";
      stringArray0[8] = stringArray8;
      int int0 = resultMatrixGnuPlot0.getColSize(stringArray0, 10, true, false);
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
      assertEquals(0, int0);
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultSignificanceWidth());
      assertEquals(0, resultMatrixGnuPlot0.getColCount());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 203
  /*Coverage entropy=3.2444926304072967
  */
  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      int[][] intArray0 = new int[9][9];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      String[][] stringArray0 = new String[1][2];
      String[] stringArray1 = new String[0];
      stringArray0[0] = stringArray1;
      int int0 = resultMatrixLatex0.getColSize(stringArray0, 16);
      assertEquals(0, int0);
      assertEquals(0, resultMatrixLatex0.getDefaultSignificanceWidth());
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
  }

  /**
  //Test case number: 204
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.TIE_STRING = "setRowOrder: length does not match (";
      resultMatrixLatex0.getDisplayName();
      int int0 = resultMatrixLatex0.getStdDevPrec();
      assertEquals(2, int0);
      assertEquals(0, resultMatrixLatex0.getDefaultStdDevWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultSignificanceWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultCountWidth());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
  }

  /**
  //Test case number: 205
  /*Coverage entropy=3.154491514347261
  */
  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      double[][] doubleArray0 = new double[1][4];
      resultMatrixLatex0.m_Mean = doubleArray0;
      assertFalse(resultMatrixLatex0.getShowAverage());
      assertFalse(resultMatrixLatex0.getPrintColNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      
      double double0 = resultMatrixGnuPlot0.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      String[][] stringArray0 = resultMatrixGnuPlot0.toArray();
      assertEquals(3, stringArray0.length);
      
      int int0 = resultMatrixGnuPlot0.getRowNameWidth();
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(50, int0);
  }

  /**
  //Test case number: 206
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.getEnumerateRowNames();
      resultMatrixGnuPlot0.getDefaultShowStdDev();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 207
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      String[] stringArray0 = new String[6];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clear();
      resultMatrixLatex0.setColNameWidth((-2051));
      resultMatrixLatex0.getDefaultSignificanceWidth();
      boolean boolean0 = resultMatrixLatex0.getDefaultShowStdDev();
      assertFalse(boolean0);
      
      int int0 = resultMatrixLatex0.getRowNameWidth();
      assertEquals(0, int0);
      
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.setShowAverage(false);
      assertFalse(resultMatrixLatex0.getShowAverage());
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 208
  /*Coverage entropy=2.921613496406035
  */
  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setColOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.globalInfo();
      resultMatrixPlainText0.setCount((-1843), 0.0);
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 209
  /*Coverage entropy=2.921613496406035
  */
  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      int[][] intArray0 = new int[9][9];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 3932);
      resultMatrixPlainText0.setColNameWidth(2);
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      assertEquals(2, resultMatrixPlainText0.getColNameWidth());
  }

  /**
  //Test case number: 210
  /*Coverage entropy=3.5246274206279216
  */
  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultMeanWidth();
      resultMatrixLatex0.setColNameWidth(0);
      resultMatrixLatex0.setCount(3, 2563.9769915345455);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(18, stringArray0.length);
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 211
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(2, 1);
      resultMatrixGnuPlot1.setRowNameWidth(2);
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.setCount(0, (-1508.4861662309));
      assertEquals(2, resultMatrixGnuPlot1.getRowNameWidth());
  }

  /**
  //Test case number: 212
  /*Coverage entropy=3.2673290673038835
  */
  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringMatrix();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 213
  /*Coverage entropy=3.2743324740937747
  */
  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearHeader();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getDefaultSignificanceWidth());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 214
  /*Coverage entropy=2.618268371350764
  */
  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDisplayName();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 215
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 605);
      int int0 = resultMatrixSignificance0.getStdDevWidth();
      assertEquals(0, int0);
      
      resultMatrixSignificance0.getDisplayName();
      assertEquals(605, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertTrue(resultMatrixSignificance0.getDefaultPrintRowNames());
      assertEquals(2, resultMatrixSignificance0.getColCount());
  }

  /**
  //Test case number: 216
  /*Coverage entropy=3.2313893106078018
  */
  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      resultMatrixSignificance0.getDefaultColNameWidth();
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      assertFalse(resultMatrixSignificance0.getShowStdDev());
  }

  /**
  //Test case number: 217
  /*Coverage entropy=3.8768331115296486
  */
  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      String[] stringArray0 = new String[3];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setMeanWidth(2192);
      resultMatrixSignificance0.getEnumerateRowNames();
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
  }

  /**
  //Test case number: 218
  /*Coverage entropy=3.5644360930288945
  */
  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("", "");
      resultMatrixGnuPlot0.setRowNameWidth(1);
      resultMatrixGnuPlot0.toArray();
      assertEquals(1, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 219
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.m_RankingWins = intArray0;
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      boolean boolean0 = resultMatrixGnuPlot0.getPrintRowNames();
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertTrue(boolean0);
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 220
  /*Coverage entropy=3.2313893106078018
  */
  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      resultMatrixSignificance0.removeFilterName((String) null);
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 221
  /*Coverage entropy=3.110913011410667
  */
  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 1);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(1, 0);
      String[][] stringArray0 = resultMatrixGnuPlot0.toArray();
      assertEquals(3, stringArray0.length);
      
      resultMatrixLatex1.globalInfo();
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      resultMatrixGnuPlot0.getColOrder();
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 222
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.removeFilterName("\r");
      assertEquals("\r", string0);
      
      resultMatrixGnuPlot0.addHeader("", "");
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 223
  /*Coverage entropy=3.0280290733074104
  */
  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultPrintColNames();
      int int0 = resultMatrixHTML0.getDisplayCol(1424);
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
      assertEquals((-1), int0);
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertFalse(resultMatrixHTML0.getDefaultShowAverage());
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
  }

  /**
  //Test case number: 224
  /*Coverage entropy=3.0280290733074104
  */
  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(30, 37);
      boolean boolean0 = resultMatrixCSV0.getRowHidden(37);
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
      assertEquals(30, resultMatrixCSV0.getVisibleColCount());
      assertEquals(37, resultMatrixCSV0.getRowCount());
      assertTrue(resultMatrixCSV0.getDefaultPrintRowNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertFalse(boolean0);
      assertEquals(0, resultMatrixCSV0.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 225
  /*Coverage entropy=2.899370419893724
  */
  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      int[] intArray0 = new int[0];
      resultMatrixLatex0.setColOrder(intArray0);
      String string0 = resultMatrixSignificance0.getRowName(1);
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertNull(string0);
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 226
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getCount((-273));
      assertEquals(0, resultMatrixPlainText0.getDefaultSignificanceWidth());
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
  }

  /**
  //Test case number: 227
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setMeanPrec(0);
      assertEquals(0, resultMatrixSignificance0.getMeanPrec());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 228
  /*Coverage entropy=3.6552465151835642
  */
  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 229
  /*Coverage entropy=3.0752205480543715
  */
  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      String[] stringArray0 = new String[4];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      boolean boolean0 = resultMatrixSignificance0.getEnumerateRowNames();
      assertFalse(boolean0);
      
      resultMatrixSignificance0.getRowName(59);
      assertEquals(0, resultMatrixSignificance0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getDefaultColNameWidth());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertFalse(resultMatrixSignificance0.getDefaultRemoveFilterName());
      assertFalse(resultMatrixSignificance0.getShowAverage());
      assertEquals(1, resultMatrixSignificance0.getColCount());
  }

  /**
  //Test case number: 230
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setColNameWidth((-1314));
      resultMatrixLatex0.showAverageTipText();
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertFalse(resultMatrixLatex0.getDefaultRemoveFilterName());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
  }

  /**
  //Test case number: 231
  /*Coverage entropy=2.921613496406035
  */
  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      int[][] intArray0 = new int[9][9];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      resultMatrixPlainText0.setEnumerateRowNames(false);
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(0, resultMatrixPlainText0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(0, resultMatrixPlainText0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertFalse(resultMatrixPlainText0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 232
  /*Coverage entropy=3.3693801921040074
  */
  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setEnumerateColNames(false);
      resultMatrixSignificance0.getOptions();
      assertFalse(resultMatrixSignificance0.getEnumerateColNames());
  }

  /**
  //Test case number: 233
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setShowAverage(true);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      boolean boolean0 = resultMatrixSignificance0.getEnumerateRowNames();
      assertTrue(resultMatrixSignificance0.getShowAverage());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 234
  /*Coverage entropy=2.888487304076087
  */
  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      double double0 = resultMatrixGnuPlot0.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      resultMatrixLatex0.getDefaultShowAverage();
      int int0 = resultMatrixLatex0.getDisplayCol((-3343));
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals((-1), int0);
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 235
  /*Coverage entropy=2.967388111291714
  */
  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      int[][] intArray0 = new int[9][9];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      resultMatrixPlainText0.isAverage(2217);
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertFalse(resultMatrixPlainText0.getShowAverage());
      assertEquals(0, resultMatrixPlainText0.getDefaultSignificanceWidth());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
  }

  /**
  //Test case number: 236
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 2559;
      intArray0[2] = 0;
      resultMatrixCSV0.m_RankingWins = intArray0;
      resultMatrixCSV0.getSignificance(787, 0);
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(5, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getDefaultShowAverage());
  }

  /**
  //Test case number: 237
  /*Coverage entropy=2.921613496406035
  */
  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      int[][] intArray0 = new int[9][9];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      Vector<String> vector0 = new Vector<String>();
      resultMatrixLatex0.m_HeaderKeys = vector0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      resultMatrixPlainText0.setEnumerateRowNames(true);
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      assertFalse(resultMatrixPlainText0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 238
  /*Coverage entropy=3.6888794541139402
  */
  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.setSignificanceWidth(2);
      resultMatrixLatex0.setEnumerateColNames(true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.getOptions();
      assertEquals(2, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
  }

  /**
  //Test case number: 239
  /*Coverage entropy=3.2514470009975125
  */
  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setShowAverage(false);
      resultMatrixSignificance0.m_RemoveFilterName = false;
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertFalse(resultMatrixSignificance0.getShowStdDev());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
  }

  /**
  //Test case number: 240
  /*Coverage entropy=2.8739867076185663
  */
  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowStdDev(false);
      resultMatrixLatex0.setColOrder(intArray0);
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(0, resultMatrixLatex0.getDefaultSignificanceWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
  }

  /**
  //Test case number: 241
  /*Coverage entropy=3.279030814499754
  */
  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toArray();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.setSignificanceWidth(2);
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.setShowAverage(false);
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.globalInfo();
      resultMatrixHTML0.m_ShowStdDev = true;
      resultMatrixHTML0.getSignificance(1, 2);
      resultMatrixLatex0.isAverage(0);
      resultMatrixHTML0.toString();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.getSignificance(1761, (-1751));
      assertEquals(2, resultMatrixHTML0.getSignificanceWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
  }

  /**
  //Test case number: 242
  /*Coverage entropy=3.4061093536128397
  */
  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_StdDevWidth = 6;
      resultMatrixGnuPlot0.setSignificanceWidth(6);
      resultMatrixGnuPlot0.addHeader("v", "v");
      resultMatrixGnuPlot0.getOptions();
      assertEquals(6, resultMatrixGnuPlot0.getSignificanceWidth());
  }

  /**
  //Test case number: 243
  /*Coverage entropy=3.646251865406898
  */
  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertFalse(resultMatrixLatex0.getShowStdDev());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      resultMatrixSignificance0.isStdDev(0);
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 244
  /*Coverage entropy=3.093394272833746
  */
  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRowNameWidth(3);
      resultMatrixGnuPlot0.toArray();
      resultMatrixGnuPlot0.getSignificance((-18), 123);
      assertEquals(3, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 245
  /*Coverage entropy=3.3712991425788372
  */
  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.m_ShowStdDev = true;
      resultMatrixGnuPlot0.toStringMatrix();
      intArray0[0] = 0;
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      boolean boolean0 = resultMatrixGnuPlot0.isMean(0);
      assertTrue(resultMatrixGnuPlot0.getShowStdDev());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 246
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      boolean boolean0 = resultMatrixPlainText1.isRowName(1);
      assertEquals(2, resultMatrixPlainText1.getStdDevPrec());
      assertTrue(resultMatrixPlainText1.getEnumerateColNames());
      assertEquals(0, resultMatrixPlainText1.getMeanWidth());
      assertTrue(resultMatrixPlainText1.getPrintColNames());
      assertFalse(resultMatrixPlainText1.getShowAverage());
      assertEquals(5, resultMatrixPlainText1.getCountWidth());
      assertFalse(boolean0);
      assertEquals(25, resultMatrixPlainText1.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText1.getStdDevWidth());
      assertEquals(0, resultMatrixPlainText1.getSignificanceWidth());
      assertTrue(resultMatrixPlainText1.getPrintRowNames());
  }

  /**
  //Test case number: 247
  /*Coverage entropy=3.2916387653464314
  */
  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      intArray0[1] = 1;
      intArray0[2] = 2;
      intArray0[3] = 0;
      resultMatrixSignificance0.m_ColOrder = intArray0;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringMatrix();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 248
  /*Coverage entropy=3.647046831657042
  */
  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = " ";
      ResultMatrixHTML.main(stringArray0);
      resultMatrixSignificance0.getDisplayRow(284);
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 249
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setColName(97, " ");
      assertEquals(0, resultMatrixLatex0.getDefaultStdDevWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
  }

  /**
  //Test case number: 250
  /*Coverage entropy=3.2514470009975125
  */
  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      resultMatrixSignificance0.toString();
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertFalse(resultMatrixSignificance0.getShowAverage());
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 251
  /*Coverage entropy=2.720887314357132
  */
  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[5];
      stringArray0[0] = ")";
      stringArray0[1] = "$\bullet$";
      stringArray0[2] = " ";
      stringArray0[3] = "*";
      stringArray0[4] = " ";
      int[] intArray0 = new int[1];
      int int0 = 1035;
      intArray0[0] = 1035;
      resultMatrixHTML0.m_RankingWins = intArray0;
      resultMatrixHTML0.m_ColNames = stringArray0;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.assign(resultMatrixHTML0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 252
  /*Coverage entropy=2.698215536154872
  */
  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      int[][] intArray0 = new int[9][9];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      resultMatrixPlainText0.assign(resultMatrixLatex0);
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      assertFalse(resultMatrixPlainText0.getPrintColNames());
  }

  /**
  //Test case number: 253
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      int[][] intArray0 = new int[9][9];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setPrintColNames(true);
      resultMatrixGnuPlot0.setRanking(intArray0);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowStdDev());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
  }

  /**
  //Test case number: 254
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_StdDevWidth = 2;
      resultMatrixGnuPlot0.setSignificanceWidth(0);
      resultMatrixGnuPlot0.addHeader("v", "v");
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
  }

  /**
  //Test case number: 255
  /*Coverage entropy=2.52751915084157
  */
  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      String[] stringArray0 = new String[1];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.getDefaultMeanWidth();
      resultMatrixSignificance0.getDefaultSignificanceWidth();
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 256
  /*Coverage entropy=3.2514470009975125
  */
  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      int int0 = resultMatrixSignificance0.getSignificanceWidth();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 257
  /*Coverage entropy=3.176979167655556
  */
  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.padString(" ", 3);
      assertEquals("   ", string0);
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      
      String[][] stringArray0 = resultMatrixGnuPlot0.toArray();
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(3, stringArray0.length);
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultSignificanceWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 258
  /*Coverage entropy=2.9963067983056164
  */
  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixLatex0.padString(" ", 0);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.getHeader("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 259
  /*Coverage entropy=3.4812329012959573
  */
  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      String[] stringArray0 = new String[3];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setPrintColNames(false);
      boolean boolean0 = resultMatrixSignificance0.getEnumerateRowNames();
      assertFalse(boolean0);
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
  }

  /**
  //Test case number: 260
  /*Coverage entropy=2.8739867076185663
  */
  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowStdDev(true);
      resultMatrixLatex0.setColOrder(intArray0);
      assertTrue(resultMatrixLatex0.getShowStdDev());
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
  }

  /**
  //Test case number: 261
  /*Coverage entropy=2.8004698251768687
  */
  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      int[] intArray0 = new int[2];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setColOrder(intArray0);
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertFalse(resultMatrixLatex0.getShowAverage());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
  }

  /**
  //Test case number: 262
  /*Coverage entropy=3.2514470009975125
  */
  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.setSignificanceWidth((-1475));
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
  }

  /**
  //Test case number: 263
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[0];
      resultMatrixLatex0.setColOrder(intArray0);
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertEquals(0, resultMatrixLatex0.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 264
  /*Coverage entropy=3.610917912644226
  */
  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixCSV0.headerKeys();
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
  }
}
