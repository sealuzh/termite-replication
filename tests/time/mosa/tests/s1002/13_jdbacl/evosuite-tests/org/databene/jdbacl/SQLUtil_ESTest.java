/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 16:09:56 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.PipedReader;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.io.StringWriter;
import java.util.List;
import java.util.Vector;
import javax.management.remote.JMXPrincipal;
import org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList;
import org.apache.derby.iapi.sql.dictionary.GenericDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBNotNullConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPackage;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBProcedure;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addRequiredCondition((String) null, stringBuilder0);
      assertEquals("null", stringBuilder0.toString());
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      String[] stringArray0 = new String[6];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = null;
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint((String) null, false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      dBForeignKeyConstraint0.isIdentical(defaultDBTable0);
      SQLUtil.typeAndName(dBForeignKeyConstraint0);
      String string0 = SQLUtil.leftJoin(stringArray0[3], stringArray0, "callselecr * from", "delete", stringArray0);
      assertEquals("left join callselecr * from as delete on null.null = delete.null and null.null = delete.null and null.null = delete.null and null.null = delete.null and null.null = delete.null and null.null = delete.null", string0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, (-1929), "");
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("alter in4dexy");
      DBDataType dBDataType0 = DBDataType.getInstance((-1572), "CLOB");
      Integer integer0 = new Integer((-1572));
      Integer integer1 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("CLOB", defaultDBTable0, dBDataType0, integer0, integer1);
      String string0 = defaultDBColumn0.toString();
      assertEquals("CLOB : CLOB", string0);
      
      String string1 = SQLUtil.removeComments("CLOB : CLOB");
      assertTrue(string1.equals((Object)string0));
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "@c@ #/>");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", (DBTable) null, 4227, "");
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      vector0.add((DBColumn) defaultDBColumn0);
      String string0 = SQLUtil.renderColumnNames((List<DBColumn>) vector0);
      assertEquals("", string0);
      
      boolean boolean0 = SQLUtil.isQuery("");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getUniqueConstraints(false);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("'E", defaultDBTable0, (-1870), "'E");
      DBNotNullConstraint dBNotNullConstraint0 = new DBNotNullConstraint(defaultDBTable0, "pSP", false, "'E");
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBNotNullConstraint0, nameSpec0);
      assertEquals("'E NOT NULL", string0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "pSP";
      stringArray0[1] = "'E";
      stringArray0[2] = "'E NOT NULL";
      stringArray0[3] = "'E";
      stringArray0[4] = "pSP";
      String string1 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("pSP = 'pSP' AND 'E = ''E' AND 'E NOT NULL = ''E NOT NULL' AND 'E = ''E' AND pSP = 'pSP'", string1);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("s ", (DBTable) null, 4227, "s ");
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      vector0.add((DBColumn) defaultDBColumn0);
      vector0.add((DBColumn) defaultDBColumn0);
      String string0 = SQLUtil.renderColumnNames((List<DBColumn>) vector0);
      assertEquals("s , s ", string0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, true);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("!uL!cO3<", (DBSchema) null);
      DBDataType dBDataType0 = DBDataType.getInstance(3, "UNIQUE ");
      Integer integer0 = new Integer((-1414));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("EiGGT!f", defaultDBTable0, dBDataType0, integer0);
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("org.databene.jdbacl.SQLUtil", defaultDBTable0, dBDataType0);
      defaultDBTable1.addColumn(defaultDBColumn1);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      assertEquals("create table null (\n\tEiGGT!f UNIQUE (-1414) NULL,\n\torg.databene.jdbacl.SQLUtil UNIQUE  NULL\n)", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("E", defaultDBTable0, (-1905), "E");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("E");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      assertNull(defaultDBTable0.getDoc());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.mutatesDataOrStructure("/*");
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      String string0 = SQLUtil.normalize("*/", true);
      assertEquals("*/", string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = SQLUtil.substituteMarkers("select", "select", stringBuilder0);
      assertEquals("", string0);
      
      boolean boolean0 = SQLUtil.isDDL("drop tablecannt cha)getconnec56");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.1432136814444385
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("alter index", 95);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      SQLUtil.isQuery("ShExLockable");
      SQLUtil.mutatesStructure("ShExLockable");
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("select into");
      genericDescriptorList0.add((Object) jMXPrincipal0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) genericDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.management.remote.JMXPrincipal cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.6440457402658093
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("callselect");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("callselect");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "callselect";
      stringArray0[1] = "callselect";
      stringArray0[2] = "callselect";
      stringArray0[3] = "+@Dv?S+<wp5K";
      defaultDBTable0.getReferrers();
      stringArray0[4] = "callselect";
      stringArray0[5] = "callselect";
      stringArray0[6] = "callselect";
      stringArray0[7] = "callselect";
      stringArray0[8] = "callselect";
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "callselect";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7315797140115936
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      boolean boolean0 = SQLUtil.isQuery("z9itmw&SAqYzo");
      boolean boolean1 = SQLUtil.isDML("z9itmw&SAqYzo");
      assertTrue(boolean1 == boolean0);
      
      String string0 = SQLUtil.renderValue(stringWriter0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      String[] stringArray0 = new String[11];
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.join("7Y6V", "7Y6V", stringArray0, "inner", "inner", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("RDMeqs:#]P_y", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      SQLUtil.isQuery("select into");
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.9085425248622063
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("");
      tableContainer0.getTable("");
      DBDataType dBDataType0 = DBDataType.getInstance((-3185), "");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(" error", (DBTable) null, dBDataType0);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("", string0);
      
      String string1 = SQLUtil.typeAndName(tableContainer0);
      assertEquals("container ", string1);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "container ";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = " error";
      stringArray0[6] = "";
      stringArray0[7] = "container ";
      stringArray0[8] = "";
      String string2 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("container  = 'container ' AND  = '' AND  = '' AND  = '' AND  = '' AND  error = ' error' AND  = '' AND container  = 'container ' AND  = ''", string2);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter session");
      assertNotNull(boolean0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(1548, "SELECT? * FROM ");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("SELECT? * FROM ", defaultDBTable0, dBDataType0);
      defaultDBColumn0.setDefaultValue("SELECT? * FROM ");
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("SELECT? * FROM  SELECT? * FROM  DEFAULT SELECT? * FROM  NULL", string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0010913480265513
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(2194);
      stringBuilder0.append('X');
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("#");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "SHA-256";
      stringArray0[2] = "UNIQUE ";
      stringArray0[3] = "UNIQUE ";
      stringArray0[4] = "#";
      String string0 = SQLUtil.normalize("--", false);
      assertEquals("--", string0);
      
      String string1 = SQLUtil.leftJoin("#", stringArray0, "", "", stringArray0);
      assertEquals("left join  as  on #. = . and #.SHA-256 = .SHA-256 and #.UNIQUE  = .UNIQUE  and #.UNIQUE  = .UNIQUE  and #.# = .# and #.null = .null", string1);
      
      String string2 = SQLUtil.renderValue(stringBuilder0);
      assertEquals("X", string2);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      String string0 = SQLUtil.renderValue(defaultDBTable0);
      assertNull(string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select into");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("(I\"xaI/6upz$g=F=zek");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (I\"xaI/6upz$g=F=zek
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      StringBuilder stringBuilder0 = new StringBuilder(2);
      StringBuilder stringBuilder1 = stringBuilder0.append((Object) null);
      SQLUtil.addOptionalCondition("select intoisvalid(int)", stringBuilder1);
      DBSchema dBSchema0 = new DBSchema((String) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("select intoisvalid(int)", dBSchema0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "alter table";
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = "select intoisvalid(int)";
      stringArray0[5] = null;
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, true, stringArray0);
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder1);
      String string0 = SQLUtil.removeComments("exectrunca");
      assertEquals("exectrunca", string0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(122);
      SQLUtil.normalize("w_X*#3SX#_{cS6)9h%3", true);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "8PQ11S`4&s;SW2";
      stringArray0[1] = "w_X * # 3SX # _ { cS6) 9h % 3";
      stringArray0[2] = "w_X * # 3SX # _ { cS6) 9h % 3";
      stringArray0[3] = "w_X * # 3SX # _ { cS6) 9h % 3";
      stringArray0[4] = "8PQ11S`4&s;SW2";
      stringArray0[5] = "8PQ11S`4&s;SW2";
      stringArray0[6] = "w_X*#3SX#_{cS6)9h%3";
      stringArray0[7] = "8PQ11S`4&s;SW2";
      stringArray0[8] = "8PQ11S`4&s;SW2";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "8PQ11S`4&s;SW2", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("w_X * # 3SX # _ { cS6) 9h % 3", true, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("8PQ11S`4&s;SW2");
      SQLUtil.renderCreateTable(dBTable0, true, nameSpec0, mockPrintWriter0);
      assertNull(dBTable0.getName());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("deletealter terializd ved%('&8i.4?@");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("truncatealterRte<iaiz ved%('&8i.&?@", dBSchema0);
      String[] stringArray0 = new String[0];
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("deletealter terializd ved%('&8i.4?@", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT \"deletealter terializd ved%('&8i.4?@\" FOREIGN KEY () REFERENCES truncatealterRte<iaiz ved%('&8i.&?@()", string0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("s ", (DBTable) null, 4227, "s ");
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      SQLUtil.parseColumnTypeAndSize("s ");
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("S ", stringBuilder0.toString());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("etTiestamp(String,Timestamp)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"String\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[5];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, true, stringArray0);
      String string0 = SQLUtil.constraintName(dBUniqueConstraint0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("DROP INDEX");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(2194);
      String[] stringArray0 = new String[0];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("", dBCatalog0);
      DBPackage dBPackage0 = new DBPackage("43Y13.U", dBSchema0);
      DBProcedure dBProcedure0 = new DBProcedure("43Y13.U", dBPackage0);
      dBPackage0.toString();
      DBProcedure dBProcedure1 = new DBProcedure("#", dBPackage0);
      dBProcedure1.toString();
      dBProcedure0.setOverload("43Y13.U");
      dBProcedure1.setOverload("create materialized view{{`cb<;u*@|t{f&h4b");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("create materialized view{{`cb<;u*@|t{f&h4b");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("mD(B7~J[ad+2~j(h", defaultDBTable0, (-136652406), "'X8~,@W@[:&z#");
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("alter tableisvalid(int)", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      CharArrayWriter charArrayWriter1 = charArrayWriter0.append((CharSequence) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter1, true);
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, mockPrintWriter0);
      assertEquals(135, charArrayWriter1.size());
      assertEquals("nullALTER TABLE create materialized view{{`cb<;u*@|t{f&h4b ADD \n\tFOREIGN KEY () REFERENCES create materialized view{{`cb<;u*@|t{f&h4b()", charArrayWriter0.toString());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.9402041423888609
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      SQLUtil.normalize("executese1lect", true);
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("5'.[x", true, "5'.[x", "updateTimestamp");
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder0 = SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, (StringBuilder) null, nameSpec0);
      assertNull(stringBuilder0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addRequiredCondition("tD~RqnzB1&`RYWUo*", stringBuilder0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("select intoisvalid(int)");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.7754337976947765
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("callselect");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.0066837630541423
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("RDMeqs:#]P_y");
      assertNull(boolean0);
      
      SQLUtil.isDDL("Y\"_}gx.wB`N:|s3/mq");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[5];
      stringArray0[0] = " join ";
      stringArray0[1] = " join ";
      stringArray0[2] = "org.apache.derby.diag.ErrorMessages";
      stringArray0[3] = "org.apache.derby.diag.ErrorMessages";
      stringArray0[4] = "";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, " join ", false, stringArray0);
      String string0 = SQLUtil.substituteMarkers(" join ", "org.apache.derby.diag.ErrorMessages", dBPrimaryKeyConstraint0);
      assertEquals(" join ", string0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) constraintDescriptorList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, false);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("SELECT *FROM", (DBSchema) null);
      NameSpec nameSpec0 = NameSpec.NEVER;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("updateruncate", defaultDBTable0, 95, "updateruncate");
      defaultDBColumn0.getForeignKeyConstraint();
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey((DBForeignKeyConstraint) null, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.NEVER;
      MockFile mockFile0 = new MockFile("CLOB", "CLOB");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      assertNull(defaultDBTable0.getName());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5813709093577648
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(2194);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("#");
      boolean boolean0 = SQLUtil.isQuery("6^4");
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "#";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "rename=qy-", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY (#)", string0);
      
      NameSpec nameSpec1 = NameSpec.ALWAYS;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("6^4");
      PrintWriter printWriter0 = mockPrintWriter0.format("#", (Object[]) stringArray0);
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec1, printWriter0);
      String string1 = SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      assertEquals("CONSTRAINT rename=qy- ", string1);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnListWithTableName(" D", stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.736495757583516
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = SQLUtil.normalize(",B&CL7/\"@69t)P~f/n", true);
      assertEquals(", B & CL7 / \"@69t)P~f/n\"", string0);
      
      Character character0 = new Character('i');
      String string1 = SQLUtil.renderValue(character0);
      assertEquals("'i'", string1);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.5669499167988556
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter}materializeQ vie:dZm(1&8#W.4l@");
      assertNull(boolean0);
      
      Character character0 = new Character('u');
      String string0 = SQLUtil.substituteMarkers("alter materialized view", "alter}materializeQ vie:dZm(1&8#W.4l@", character0);
      assertEquals("alter materialized view", string0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      String string0 = SQLUtil.normalize("", true);
      assertEquals("", string0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint((String) null, true, "DATABASE_PATH", "DATABASE_PATH");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      assertEquals("", stringBuilder1.toString());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[2] = "Hlter materialized view %m(1&8ij.4l?@";
      stringArray0[3] = "Hlter materialized view %m(1&8ij.4l?@";
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("Hlter materialized view %m(1&8ij.4l?@", stringArray0, "Hlter materialized view %m(1&8ij.4l?@", "Hlter materialized view %m(1&8ij.4l?@", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("alter materialized vied%m(1&8ij.4l?@");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: alter materialized vied%m(1&8ij.4l?@
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.4733064998116339
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      String[] stringArray0 = new String[6];
      String string0 = SQLUtil.join("inCUr", "inCUr", stringArray0, "inCUr", "inCUr", stringArray0);
      assertEquals("inCUr join inCUr as inCUr on inCUr.null = inCUr.null and inCUr.null = inCUr.null and inCUr.null = inCUr.null and inCUr.null = inCUr.null and inCUr.null = inCUr.null and inCUr.null = inCUr.null", string0);
      
      boolean boolean0 = SQLUtil.isProcedureCall("inCUr join inCUr as inCUr on inCUr.null = inCUr.null and inCUr.null = inCUr.null and inCUr.null = inCUr.null and inCUr.null = inCUr.null and inCUr.null = inCUr.null and inCUr.null = inCUr.null");
      assertFalse(boolean0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("inCUr join inCUr as inCUr on inCUr.null = inCUr.null and inCUr.null = inCUr.null and inCUr.null = inCUr.null and inCUr.null = inCUr.null and inCUr.null = inCUr.null and inCUr.null = inCUr.null", (DBSchema) null);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "%$h>x)xs", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string1 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY (, , , , , )", string1);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("select", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      String string0 = SQLUtil.normalize("update, b & cl7 / \"@69t)p~f/n\"", false);
      assertEquals("update, b & cl7 / \"@69t)p~f/n\"", string0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.4359838465843624
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("Hlter materialized view %m(1&8ij.4l?@");
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("select", true, "select", "select");
      SQLUtil.mutatesDataOrStructure("select");
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0);
      assertEquals("CONSTRAINT select ", stringBuilder0.toString());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "#EPl(6<&";
      stringArray0[1] = "alter terializd ved%m(1&8ij.4?@";
      stringArray0[0] = "#EPl(6<&";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "#EPl(6<&", false, stringArray0);
      dBUniqueConstraint0.equals(defaultDBTable0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE (#EPl(6<&, alter terializd ved%m(1&8ij.4?@, )", string0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("pos: ", (String[]) null, "pos: ", "pos: ", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("#");
      DBDataType dBDataType0 = DBDataType.getInstance((-747), "#");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("w_X*#3SX#_{cS6)9h%3", defaultDBTable0, dBDataType0, integer0, integer0);
      String string0 = defaultDBColumn0.toString();
      assertEquals("w_X*#3SX#_{cS6)9h%3 : #(2,2)", string0);
      
      boolean boolean0 = SQLUtil.isQuery("#");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      String string0 = SQLUtil.normalize("eZ(f?GD-Q&9Vr'y]-`", true);
      assertEquals("eZ (f ? GD - Q & 9Vr 'y]-`'", string0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("fk>LK");
      assertFalse(boolean0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("fk>LK", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY () REFERENCES null()", string0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.5834607735165944
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("cannt cha)getconnec56");
      assertNull(boolean0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "cannt cha)getconnec56", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE ()", string0);
      
      String string1 = SQLUtil.ownerDotComponent(defaultDBTable0);
      assertEquals("null", string1);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("u\u00011");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "u\u00011";
      stringArray0[1] = " hp";
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("calln`1.++:vdk");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("executeor");
      assertNull(boolean0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.5407108604577937
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("'E", defaultDBTable0, (-1870), "'E");
      defaultDBColumn0.toString();
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("'E");
      assertNull(boolean0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.renderColumnListWithTableName("NCLOB", stringArray0);
      assertEquals("NCLOB.null", string0);
      
      String[] stringArray1 = new String[0];
      String string1 = SQLUtil.leftJoin(">g(o", stringArray1, ">g(o", ">g(o", stringArray0);
      assertEquals("left join >g(o as >g(o on ", string1);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      String string0 = SQLUtil.normalize("select intoisvalid(int)", false);
      assertEquals("select intoisvalid (int)", string0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.typeAndName(defaultDBTable0);
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, (String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      String[] stringArray0 = new String[4];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM null WHERE null = null AND null = null AND null = null AND null = null", string0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.1641933683302232
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "inner";
      stringArray0[1] = "inner";
      stringArray0[2] = "hlter materialized view";
      stringArray0[3] = "hlter materialized view";
      String string0 = SQLUtil.join("inner", "hlter materialized view", stringArray0, "hlter materialized view", "inner", stringArray0);
      assertEquals("hlter materialized view as inner on hlter materialized view.inner = inner.inner and hlter materialized view.inner = inner.inner and hlter materialized view.hlter materialized view = inner.hlter materialized view and hlter materialized view.hlter materialized view = inner.hlter materialized view", string0);
      
      boolean boolean0 = SQLUtil.isQuery("hlter materialized view");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.6675530205253588
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Boolean boolean0 = new Boolean("SELECr * FROM ");
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("SELECr * FROM ", true, "SELECr * FROM ", "SELECr * FROM ");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("CONSTRAINT \"SELECr * FROM \" ", string0);
      
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBCheckConstraint0, nameSpec0);
      assertEquals("CONSTRAINT \"SELECr * FROM \" ", stringBuilder0.toString());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.325342919442848
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("SELECr * FROM ");
      assertNull(boolean0);
      
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("SELECr * FROM ", true, "SELECr * FROM ", "SELECr * FROM ");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("CONSTRAINT \"SELECr * FROM \" ", string0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.6912303236859587
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      String[] stringArray0 = new String[2];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("null = null AND null = null", stringArray0, "null = null AND null = null", "null = null AND null = null", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("select intoisvalid(int)");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("&RJ", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("select", false, "select", "select");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      assertEquals("", stringBuilder1.toString());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("EW.gc{Ph");
      assertFalse(boolean0);
      
      String string0 = SQLUtil.normalize("EW.gc{Ph", false);
      assertEquals("EW.gc { Ph", string0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("SELECT * FROM ", true, "truncate) )bz", "SELECT * FROM ");
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CONSTRAINT \"SELECT * FROM \" CHECK SELECT * FROM ", string0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "inCUr");
      SQLUtil.addRequiredCondition("inCUr", stringBuilder0);
      assertEquals("inCUr and inCUr", stringBuilder0.toString());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.1444465662389331
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance(2097152, "&");
      Integer integer0 = new Integer(2097152);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("&", (DBTable) null, dBDataType0, integer0);
      String string0 = defaultDBColumn0.toString();
      assertEquals("& : &(2097152)", string0);
      
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter index8qb");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("alter table#r7/(_w : csp!txz~mh?xpl(0,0)");
      DBDataType dBDataType0 = DBDataType.getInstance((-752518114), "alter table#r7/(_w : csp!txz~mh?xpl(0,0)");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter table#r7/(_w : csp!txz~mh?xpl(0,0)", defaultDBTable0, dBDataType0, integer0, integer0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("alter table#r7/(_w : csp!txz~mh?xpl(0,0) ALTER TABLE#R7/(_W : CSP!TXZ~MH?XPL(0,0)(2,2) NULL", string0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers("org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptorList", "Value of parameter ", "org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptorList");
      assertEquals("org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptorList", string0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("GX{cK}G4l@nC5`%mD", (String[]) null, "GX{cK}G4l@nC5`%mD", (String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.6851287363978404
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null", string0);
      
      String string1 = SQLUtil.leftJoin("null = null", stringArray0, "@_~M,:t-Oy^C9cY", "null = null", stringArray0);
      assertEquals("left join @_~M,:t-Oy^C9cY as null = null on null = null.null = null = null.null", string1);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("select", false, "select", "select");
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      assertEquals("", stringBuilder1.toString());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("select intoisvalid(int)");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("select", true, "select", "select");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      assertEquals("CONSTRAINT select ", stringBuilder0.toString());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("select", true, "select", "select");
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      assertEquals("CONSTRAINT select ", stringBuilder0.toString());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("hd4I?7+h#9");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "L010", true, (String[]) null);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY ()", string0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("alter in4dexy", "alter in4dexy", (String[]) null, "alter in4dexy", "alter in4dexy", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("select? * ", defaultDBTable0, 2097152, "select? * ");
      DBColumn[] dBColumnArray0 = new DBColumn[3];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("select? * ", defaultDBTable0, (-1850), "select? * ");
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("select? * ", string0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.1641933683302232
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      String[] stringArray0 = new String[7];
      String string0 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("(, , , , , , )", string0);
      
      String string1 = SQLUtil.innerJoin("(, , , , , , )", stringArray0, "(, , , , , , )", "create unique index", stringArray0);
      assertEquals("(, , , , , , ) as create unique index on (, , , , , , ).null = create unique index.null and (, , , , , , ).null = create unique index.null and (, , , , , , ).null = create unique index.null and (, , , , , , ).null = create unique index.null and (, , , , , , ).null = create unique index.null and (, , , , , , ).null = create unique index.null and (, , , , , , ).null = create unique index.null", string1);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.7653291326451686
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("SEqECT  FOM ");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("deleteunique");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter tableon");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.join((String) null, (String) null, stringArray0, (String) null, "2eK,2", stringArray0);
      assertEquals("null as 2eK,2 on ", string0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.6145591551764051
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      String string0 = SQLUtil.normalize("w_X*#3SX#_{cS6)9h%3", true);
      assertEquals("w_X * # 3SX # _ { cS6) 9h % 3", string0);
      
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("w_X*#3SX#_{cS6)9h%3", dBCatalog0);
      DBPackage dBPackage0 = new DBPackage("w_X * # 3SX # _ { cS6) 9h % 3", dBSchema0);
      DBProcedure dBProcedure0 = new DBProcedure("w_X * # 3SX # _ { cS6) 9h % 3", dBPackage0);
      String string1 = SQLUtil.ownerDotComponent(dBProcedure0);
      assertEquals("w_X * # 3SX # _ { cS6) 9h % 3.w_X * # 3SX # _ { cS6) 9h % 3", string1);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String string0 = SQLUtil.renderColumnListWithTableName("r.apache.dery.iapi.util.StringUtil", stringArray0);
      assertEquals("r.apache.dery.iapi.util.StringUtil.null, r.apache.dery.iapi.util.StringUtil.null", string0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String string0 = SQLUtil.renderValue("SE<ECTc * F{OM ");
      assertEquals("'SE<ECTc * F{OM '", string0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize(" ORDER BY ");
      assertEquals(1, objectArray0.length);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("#s7y.:o}", (DBTable) null, 42, "#s7y.:o}");
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("#S7Y.:O}", string0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("alter}materialized vie:dZm(1&8ij.4l?@");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter}materialized vie:dZm(1&8ij.4l?@", defaultDBTable0, (-1984122830), "drop tablelw84hi");
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("alter}materialized vie:dZm(1&8ij.4l?@ DROP TABLELW84HI NULL", string0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      String string0 = SQLUtil.removeComments("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("select", stringBuilder0);
      assertEquals("select", stringBuilder0.toString());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("select");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.6851287363978402
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null", string0);
      
      String string1 = SQLUtil.innerJoin("null = null", stringArray0, "create unique indexselect * from", "null = null", stringArray0);
      assertEquals("create unique indexselect * from as null = null on null = null.null = null = null.null", string1);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      String[] stringArray0 = new String[7];
      String string0 = SQLUtil.join("inCUr", "inCUr", stringArray0, stringArray0[3], "inCUr", stringArray0);
      assertEquals("inCUr join null as inCUr on inCUr.null = inCUr.null and inCUr.null = inCUr.null and inCUr.null = inCUr.null and inCUr.null = inCUr.null and inCUr.null = inCUr.null and inCUr.null = inCUr.null and inCUr.null = inCUr.null", string0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("'aX_oaP&h");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("select intoisvalid(int)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"int\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }
}
