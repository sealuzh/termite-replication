/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 27 11:55:23 GMT 2020
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldVisitor;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4361623253853443
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(13);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2802), "Drym]Ci;!o", "Drym]Ci;!o", "Drym]Ci;!o", "Drym]Ci;!o");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "^";
      stringArray0[1] = "$[";
      stringArray0[2] = "Drym]Ci;!o";
      stringArray0[3] = "^";
      classWriter0.visit(2254, 13, "$[", "^", "$[", stringArray0);
      ByteVector byteVector0 = new ByteVector(2254);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4361623253853443
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65561);
      classWriter0.index = (-981);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1156), "Signature", "", "Signature", "Signature");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2802), "Drm]Ci;!o", "Drm]Ci;!o", "Drm]Ci;!o", "Drm]Ci;!o");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Drm]Ci;!o";
      stringArray0[1] = "Drm]Ci;!o";
      classWriter0.visit(49, 7, "+><w", "1(L<|b-x(u|[", "Drm]Ci;!o", stringArray0);
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65561);
      classWriter0.index = (-981);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1156), "Signature", "", "Signature", "Signature");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1220);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1220, "-jb5)]ea%`e7", "-jb5)]ea%`e7", "-jb5)]ea%`e7", "-jb5)]ea%`e7");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1101);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "wheel.asm.FieldWriter", "wheel.asm.FieldWriter", "wheel.asm.FieldWriter", "wheel.asm.FieldWriter");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1108);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "wheel.asm.FieldWriter", "wheel.asm.FieldWriter", "wheel.asm.FieldWriter", "wheel.asm.FieldWriter");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1765);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1765, "Y0", "Y0", "Y0", "Y0");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = 251658240;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6615632381579821
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212676);
      classWriter0.index = 285212676;
      classWriter0.newFloat((-1586.727F));
      classWriter0.newFloat(0.0F);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 152, "ConstantValue", "", "", "ConstantValue");
      // Undeclared exception!
      fieldWriter0.getSize();
  }

  /**
  //Test case number: 9
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212676);
      classWriter0.index = 285212676;
      classWriter0.visitInnerClass("M:u|7e<C", "?eF5#(", "?eF5#(", (-3684));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 152, "ConstantValue", "g8WMDkq*!|T12R hsL'", "", "ConstantValue");
  }

  /**
  //Test case number: 10
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 4074, "-jb5)]a%`eg", "-jb5)]a%`eg", "-jb5)]a%`eg", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(791);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, "P<Rn%]#ryVc6zEH]#", "P<Rn%]#ryVc6zEH]#", "P<Rn%]#ryVc6zEH]#", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6546695645285008
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777222);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "wheel.m[.FieldWriter", "wheel.m[.FieldWriter", "wheel.m[.FieldWriter", "wheel.m[.FieldWriter");
      fieldWriter0.visitAnnotation("wheel.m[.FieldWriter", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4361623253853443
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2802), "Drm]Ci;!o", "Drm]Ci;!o", "Drm]Ci;!o", "Drm]Ci;!o");
      ByteVector byteVector0 = new ByteVector();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Drm]Ci;!o";
      stringArray0[1] = "Drm]Ci;!o";
      classWriter0.visit(49, 7, "+><w", "+><w", "Drm]Ci;!o", stringArray0);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4659992569610426
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1177);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "x*m4=", "x*m4=", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.8239592165010823
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1115));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", "", "");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.8239592165010823
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "hRQ3;Pc4&sKm.aAS", "hRQ3;Pc4&sKm.aAS", "hRQ3;Pc4&sKm.aAS", "hRQ3;Pc4&sKm.aAS");
      fieldWriter0.visitAnnotation("hRQ3;Pc4&sKm.aAS", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(42, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.8599672810355049
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1220);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1220, "Pjb5)]ea%`e7", "Pjb5)]ea%`e7", "Pjb5)]ea%`e7", "Pjb5)]ea%`e7");
      fieldWriter0.visitAnnotation("Pjb5)]ea%`e7", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.6108643020548935
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1099));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "hRQ3;Qc4&sKm.aAS", "hRQ3;Qc4&sKm.aAS", (String) null, "hRQ3;Qc4&sKm.aAS");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1155);
      classWriter0.version = 106;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1040), "", "", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.6108643020548935
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1220);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1220, "Pjb5)]ea%`e7", "Pjb5)]ea%`e7", "Pjb5)]ea%`e7", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65561);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1156), "Signature", "", "Signature", "Signature");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", true);
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.6128694524619496
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4109);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4109, "hRQ3;Pc4&sKm.aAS", "hRQ3;Pc4&sKm.aAS", "hRQ3;Pc4&sKm.aAS", "hRQ3;Pc4&sKm.aAS");
      fieldWriter0.visitAnnotation("hRQ3;Pc4&sKm.aAS", false);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1202);
      FieldVisitor fieldVisitor0 = classWriter0.visitField(1202, "", "", "", "");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "W<QSGc%_", "W<QSGc%_", "W<QSGc%_", "W<QSGc%_");
      assertFalse(fieldWriter0.equals((Object)fieldVisitor0));
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.6330395116644678
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1177);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "x*m4=", "x*m4=", (String) null, (Object) null);
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
