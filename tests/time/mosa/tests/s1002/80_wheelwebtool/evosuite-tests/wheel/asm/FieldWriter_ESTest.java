/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 16:08:43 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Item;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3622914870858265
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-109));
      classWriter0.index = (-109);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "The list of suffixes must not be null";
      stringArray0[1] = "jj8'jdJeV";
      stringArray0[2] = "InnerClasses";
      stringArray0[3] = "InnerClasses";
      classWriter0.visit(54, (-109), "InnerClasses", "InnerClasses", "wheel.asm.FieldWriter", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1234, "1I<#", "VG(EAt9`Y5~gv", "Signature", "jj8'jdJeV");
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-14));
      classWriter0.newClassItem("xDtd7`[|-}MnM8<$I");
      classWriter0.index = (-14);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-14), "The wildcard mustKnot be null", "The wildcard mustKnot be null", "The wildcard mustKnot be null", "The wildcard mustKnot be null");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3145127355809594
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212676);
      classWriter0.newClass("M:u|7e<C");
      FieldWriter fieldWriter0 = classWriter0.lastField;
      classWriter0.lastField = null;
      classWriter0.newInteger(2);
      Item item0 = classWriter0.key3;
      classWriter0.index = 285212676;
      String string0 = "?eF5#(";
      int int0 = (-3684);
      classWriter0.newClassItem("M:u|7e<C");
      classWriter0.newFloat(0.0F);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 285212676, "M:u|7e<C", "", "", "M:u|7e<C");
      fieldWriter1.getSize();
      fieldWriter1.getSize();
      fieldWriter1.getSize();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      // Undeclared exception!
      fieldWriter1.visitAnnotation("Ar\"$SX~;?", false);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.8227090878059908
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-10));
      classWriter0.version = (-10);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-10), "The wildcard must not e null", "The wildcard must not e null", "The wildcard must not e null", "The wildcard must not e null");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0615632381579823
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212676);
      classWriter0.newClass("M:u|7e<C");
      FieldWriter fieldWriter0 = classWriter0.lastField;
      classWriter0.lastField = null;
      classWriter0.newInteger(2);
      classWriter0.newFieldItem("RuntimeInvisibleAnnotations", "ConstantValue", "g8WMDkq*!|T12R hsL'");
      classWriter0.index = 285212676;
      String string0 = "?eF5#(";
      classWriter0.visitInnerClass("M:u|7e<C", "?eF5#(", "?eF5#(", (-3684));
      classWriter0.newClassItem("M:u|7e<C");
      classWriter0.newFloat(0.0F);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 285212676, "ConstantValue", "", "", "ConstantValue");
      // Undeclared exception!
      fieldWriter1.getSize();
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-14));
      classWriter0.version = 65535;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-14), "The wildcard mustKnot be null", "The wildcard mustKnot be null", "The wildcard mustKnot be null", "The wildcard mustKnot be null");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 7, "The wildcard must not be null", "The wildcard must not be null", "The wildcard must not be null", "The wildcard must not be null");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0829081047004716
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1174);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Zg_HNEW<hLvNmnQKV%", "Zg_HNEW<hLvNmnQKV%", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "LH-b\b!^2<=%", "LH-b\b!^2<=%", "LH-b\b!^2<=%", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.2239592165010822
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "Class not found", "Class not found", "Class not found", "Class not found");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.2525306450725109
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "Class not found", "Class not found", "Class not found", "Class not found");
      Attribute attribute0 = new Attribute("Class not found");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1174);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Zg_HNEW<hLvNmnQKV%", "Zg_HNEW<hLvNmnQKV%", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 7, "B{YsX-}", "B{YsX-}", "B{YsX-}", "B{YsX-}");
      fieldWriter0.visitAnnotation("B{YsX-}", false);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1174);
      FieldWriter fieldWriter0 = classWriter0.firstField;
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-1426), "QLk", "", "", "QLk");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter1.visitEnd();
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.039435730626322
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1174);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Zg_HNEW<hLvNmnQKV%", "Zg_HNEW<hLvNmnQKV%", "Zg_HNEW<hLvNmnQKV%", "Zg_HNEW<hLvNmnQKV%");
      fieldWriter0.visitAnnotation("Zg_HNEW<hLvNmnQKV%", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-10));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-10), "The wildcard must not be null", "The wildcard must not be null", "The wildcard must not be null", "The wildcard must not be null");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4120);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4120, "Class not found", "Class not found", "Class not found", "Class not found");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.length = 4120;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "Class not found", "Class not found", "Class not found", "Class not found");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.8647337539567728
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4120);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4120, "Class not found", "Class not found", "Class not found", "Class not found");
      fieldWriter0.visitAnnotation("Class not found", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-10));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-10), "The wildcard must not be null", "The wildcard must not be null", "The wildcard must not be null", "The wildcard must not be null");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 7, "The wildcard must not be null", "The wildcard must not be null", "The wildcard must not be null", "The wildcard must not be null");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 7, "The wildcard must not be null", "The wildcard must not be null", "The wildcard must not be null", "The wildcard must not be null");
      fieldWriter0.visitAnnotation("The wildcard must not be null", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "Class not found", "Class not found", "Class not found", "Class not found");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 7, "The wildcard must not be null", "The wildcard must not be null", "The wildcard must not be null", "The wildcard must not be null");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(742);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 742, "(3lass notfound", "(3lass notfound", "(3lass notfound", "(3lass notfound");
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 2, "(3lass notfound", "(3lass notfound", "(3lass notfound", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212676);
      classWriter0.newClass("M:u|7e<C");
      FieldWriter fieldWriter0 = classWriter0.lastField;
      classWriter0.lastField = null;
      classWriter0.newInteger(2);
      classWriter0.newFieldItem("RuntimeInvisibleAnnotations", "Ar\"$SX~;?", "g8WMDkq*!|T12R hsL'");
      classWriter0.index = 285212676;
      String string0 = "?eF5#(";
      classWriter0.visitInnerClass("M:u|7e<C", "?eF5#(", "?eF5#(", 1);
      classWriter0.newFloat(285212676);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 285212676, "ConstantValue", "", "", "ConstantValue");
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, (String) null, (String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
