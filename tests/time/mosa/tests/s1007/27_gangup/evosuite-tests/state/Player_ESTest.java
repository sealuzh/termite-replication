/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 19:39:11 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.997222513988791
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player((-2272), "Ma%h~,;vQP$f", (-2272));
      player0.pack();
      Player player1 = new Player((-2272), "Ma%h~,;vQP$f", (-2272));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ma%h~,;vQP$f");
      System.setCurrentTimeMillis((short)4919);
      player1.prev = (Party) player0;
      player1.head = (Party) player0;
      player1.setMoney((short)4919);
      player0.setDead(0L);
      System.setCurrentTimeMillis(0L);
      player0.setJoinOK(player1, false);
      player0.setDead(0L);
      player1.type();
      System.setCurrentTimeMillis((-1L));
      player0.setDead();
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(5);
      player1.setX(5);
      player1.type();
      System.setCurrentTimeMillis((-143L));
      player1.type();
      player0.isJoinOK(player1, true);
      System.setCurrentTimeMillis(15000L);
      player0.isJoinOK(player1, false);
      assertEquals(4919.0F, player1.getMoney(), 0.01F);
      
      Player player2 = new Player();
      int int0 = player2.type();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((-2291), "Ma%h~,;v8P$f", (-2291));
      player0.isBoss();
      player0.setMoney((short)4919);
      System.setCurrentTimeMillis((-2291));
      player0.setJoinOK(player0, true);
      player0.type();
      System.setCurrentTimeMillis(14999L);
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertEquals(4919.0F, player0.getMoney(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(887, "Player", "Player", (-1));
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2924), 1466);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player((-2167), "state.Party", "state.Party", (-2167));
      player0.setMoney((-2167));
      float float0 = player0.getMoney();
      assertEquals((-2167.0F), float0, 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.5651558273941215
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player((-5883), ".*[.]class$", (-2133));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player0.unpack(dataInputStream0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "1Q|");
      Player player1 = new Player((short)4919, ".*[.]class$", 2601);
      player0.isJoinOK(player1, true);
      player0.getZ();
      player1.setZ((-2133));
      player0.getZ();
      player1.getZ();
      player1.isJoinOK(player0, false);
      player0.getZ();
      player1.type();
      player1.type();
      player0.pack();
      System.setCurrentTimeMillis((-10L));
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertEquals((-2133.0F), player1.getZ(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      System.setCurrentTimeMillis(1265L);
      Player player0 = new Player(25033, (String) null, "", (-1787), (-4215));
      String string0 = player0.getIP();
      assertEquals((-4215), player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals((-1787), player0.getPictureId());
      assertNull(string0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(1830, "W!g=NBk", 1830);
      player0.setY(1830);
      Player player1 = new Player();
      player0.setMoney(0.2F);
      player0.isJoinOK(player1, true);
      float float0 = player0.getMoney();
      assertEquals(1830.0F, player0.getY(), 0.01F);
      assertEquals(0.2F, float0, 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Player player0 = new Player(257, "", "", 24886, 24886);
      player0.getIP();
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(24886, player0.getStrength());
      assertEquals(24886, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.2627848006711537
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player((-2333));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "cEA!*wso5");
      Player player1 = new Player();
      player0.isJoinOK(player1, true);
      player0.getSubparty();
      player0.next = (Party) player1;
      player0.setZ((short)4919);
      player0.setX((short)4919);
      byte[] byteArray0 = player1.pack();
      player0.id = (int) (short)4919;
      player1.isJoinOK(player0, false);
      player1.setJoinOK(player0, true);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player1.unpack(byteArray0);
      player0.setX(0.0F);
      System.setCurrentTimeMillis((-2333));
      player1.getZ();
      player1.getMoney();
      player0.getStrength();
      player1.getZ();
      player1.getIP();
      player1.getIP();
      player1.pack();
      player0.getX();
      System.setCurrentTimeMillis(1392409281320L);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 5;
      Player player0 = new Player(5, (String) null, 5);
      boolean boolean0 = false;
      player0.setConnected(false);
      player0.setDead((long) 5);
      player0.setDead(1392409281320L);
      player0.reset(true);
      player0.boss = null;
      player0.getSubparty();
      player0.head = null;
      player0.type();
      player0.toString();
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      Player player1 = new Player((short)4919, "cTS/Qg~\"'", "cTS/Qg~\"'", 23850);
      player1.setY(613.0F);
      player1.setY((-1530.0F));
      player1.isJoinOK(player0, false);
      player0.type();
      player1.setDead((long) 23850);
      float float0 = player1.getY();
      assertEquals(23850L, player1.getTimeOfDeath());
      assertEquals((-1530.0F), float0, 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "E", "E", (short)4919);
      player0.setJoinOK(player1, true);
      player0.setY((short)4919);
      player0.setY(0.1F);
      player0.setY(0.1F);
      player1.isJoinOK(player0, true);
      player0.type();
      player0.setDead((long) 5);
      float float0 = player0.getY();
      assertEquals(5L, player0.getTimeOfDeath());
      assertEquals(0.1F, float0, 0.01F);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(4919);
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      player0.setY((byte)5);
      Player player1 = new Player((-1270), (String) null, 4919);
      player1.isJoinOK(player0, false);
      player0.type();
      player0.getTimeOfDeath();
      assertEquals(5.0F, player0.getY(), 0.01F);
      
      player1.getName();
      assertEquals(5, player1.type());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(2930, "", "", 0, 2930);
      player0.toString();
      assertEquals(0, player0.getPictureId());
      assertEquals(2930, player0.getStrength());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "E=0hg*9YN0v\"2O", "", (-4250), 0);
      player1.setZ(0);
      int int0 = player1.gangStrength();
      assertEquals(0, int0);
      
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertFalse(boolean0);
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals((-4250), player1.getPictureId());
      assertFalse(player1.isDead());
      assertEquals("E=0hg*9YN0v\"2O", player1.getIP());
      assertEquals("Player-1", player0.getName());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player1.getZ(), 0.01F);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(770, "kX", "S=2Un:t=", 770, 770);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(2786, (String) null, 2786);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.048820325203473
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ(72.532F);
      player0.setY((-214.6123F));
      player0.setY(0.0F);
      player0.setX((-1.0F));
      Player player1 = new Player((-31115), "", "a6V\"D\"g(MXmeO1/D", 10, (short)4919);
      player0.isJoinOK(player1, false);
      player0.type();
      player0.pack();
      float float0 = player0.getX();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-1.0F), float0, 0.01F);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.5211797582389175
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(0, "&3.M1", 0);
      player0.setDead((long) 0);
      player0.getSubparty();
      player0.pack();
      player0.gangStrength();
      player0.isDead();
      player0.getX();
      player0.setDead();
      player0.getZ();
      Player player1 = new Player((-1089));
      byte[] byteArray0 = player1.pack();
      player0.isJoinOK(player1, true);
      player1.setZ(10.0F);
      player1.reset(false);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player1.unpack(dataInputStream0);
      Player player2 = new Player(3141, "&3.M1", 19);
      player0.isJoinOK(player2, true);
      player0.unpack(byteArray0);
      player2.type();
      player2.setDead(804L);
      player1.getTimeOfDeath();
      player2.getPictureId();
      player2.toString();
      boolean boolean0 = player2.unpack(dataInputStream0);
      assertEquals(804L, player2.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, false);
      player0.setDead((-1L));
      player0.getTimeOfDeath();
      player0.getPictureId();
      player0.setY((-2037.4961F));
      player0.pack();
      player0.pack();
      assertEquals((-2037.4961F), player0.getY(), 0.01F);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.9397928111645655
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(2268);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      player0.unpack(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      player0.setDead((long) (byte)54, false);
      player0.gangStrength();
      player0.pack();
      player0.setConnected(false);
      player0.getName();
      player0.isConnected();
      player0.setX((byte)54);
      player0.setY(0.0F);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      player0.type();
      long long0 = player0.getTimeOfDeath();
      assertEquals(1392409281320L, long0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(0.0F, player0.getZ(), 0.01F);
      
      player0.setZ(0.2F);
      player0.getSubparty();
      player0.getZ();
      int int0 = player0.type();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.6401461330725327
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "E=0hg*9YN0v\"2O", "7", (-4250), (-49));
      player0.setY((-1792.79F));
      player1.setZ((-49));
      player1.add(player0);
      player1.gangStrength();
      player0.isJoinOK(player1, true);
      assertEquals((-49.0F), player1.getZ(), 0.01F);
      assertEquals("Player-1", player0.toString());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(5, "JikBw:= 2yN(GN?", "JikBw:= 2yN(GN?", 5, 5);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)5;
      byteArray0[3] = (byte) (-123);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      assertEquals(2, byteArrayInputStream0.available());
      
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.038009341005529
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player();
      String string0 = player0.toString();
      assertEquals("Player-1", string0);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(true);
      int int0 = player0.type();
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(5, int0);
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player((-28), "", "", 746, (-28));
      player0.setConnected(true);
      player0.reset(true);
      player0.id = (-1440);
      player0.getName();
      player0.pack();
      assertEquals((-28), player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(746, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      int int0 = player0.type();
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(5, int0);
      assertEquals("Player-1", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.322102232945105
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead(583L);
      player0.setZ((-1461));
      Player player1 = new Player((-1461), "<'D*'", "<'D*'", (-1461), 0);
      player1.setZ((short)4919);
      player1.reset(false);
      player1.setMoney((short)4919);
      player0.add(player1);
      player0.setJoinOK(player1, false);
      player0.getMoney();
      player0.type();
      player1.pack();
      player1.head = (Party) player0;
      player1.setZ(0.0F);
      player0.getMoney();
      player1.getStrength();
      player1.getIP();
      assertEquals(0.0F, player1.getZ(), 0.01F);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player((-32034), "4(-e'S{", "4(-e'S{", (-32034), (-32034));
      int int0 = player0.getStrength();
      assertEquals((-32034), int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals((-32034), player0.getPictureId());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.75012938226178
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(3, "g;A`rIIDp`1(TX\">b", "g;A`rIIDp`1(TX\">b", 3, (-749));
      player0.setY(0.0F);
      player0.setY((-565.6757F));
      player0.gangStrength();
      player0.setDead((long) (-749));
      player0.getPictureId();
      player0.toString();
      assertEquals((-565.6757F), player0.getY(), 0.01F);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      player0.setJoinOK(player1, false);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(boolean0);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
      assertEquals(1, player1.getStrength());
      assertEquals("Player4919", player1.toString());
      assertEquals(0, player1.getPictureId());
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertTrue(boolean0);
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.getName());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)66;
      byteArray0[1] = (byte)94;
      player0.unpack(byteArray0);
      int int0 = player0.type();
      assertEquals(5, int0);
      
      long long0 = player0.getTimeOfDeath();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, long0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.getName());
      
      Player player1 = new Player((short)4919, "1~z[U'CO>ZPjoK}P6", "v6S'", (short)4919);
      assertEquals(4919, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals("1~z[U'CO>ZPjoK}P6", player1.getIP());
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.close();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      
      player0.pack();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.toString());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = player0.isConnected();
      assertTrue(boolean0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.toString());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player();
      player0.setConnected(true);
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player();
      float float0 = player0.getY();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, float0, 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead(15000L, true);
      float float0 = player0.getMoney();
      assertEquals(15000L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-q8CQ`60y:8Y.ge%-D");
      Player player0 = new Player((-949), "-q8CQ`60y:8Y.ge%-D", "l%w_g*\"B", (-949));
      player0.setY(0.0F);
      player0.setDead((long) (-949));
      player0.getPictureId();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player(1578, "wC5", "wC5", 1578, 1578);
      int int0 = player0.gangStrength();
      assertEquals(1578, int0);
      
      player0.toString();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1578, player0.getPictureId());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1817);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(29, byteArrayOutputStream0.size());
      
      player0.pack();
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.8148657896913192
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player();
      String string0 = player0.getName();
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", string0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      player0.setDead();
      player0.pack();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      player0.isDead();
      int int0 = player0.gangStrength();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      long long0 = player0.getTimeOfDeath();
      assertEquals(0.0F, player0.getZ(), 0.01F);
      assertEquals((-1), player0.getId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("Player-1", player0.toString());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, long0);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      byte[] byteArray0 = new byte[4];
      player0.setX((byte)1);
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[1] = (byte)1;
      player0.unpack(byteArray0);
      assertEquals(1.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player();
      float float0 = player0.getX();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, float0, 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = player0.isDead();
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(boolean0);
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }
}
