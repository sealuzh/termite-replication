/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 20:23:21 GMT 2019
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.1939068380327926
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 31;
      intArray0[4] = 1;
      intArray0[5] = 1;
      resultMatrixPlainText0.setColOrder(intArray0);
      resultMatrixPlainText0.globalInfo();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixPlainText0.getDefaultCountWidth();
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.144073801240875
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.getRowName(0);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.2864526549914244
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[1][0];
      resultMatrixHTML0.m_Significance = intArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 1);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.assign(resultMatrixHTML0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.417939089731013
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.toStringKey();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getSignificanceCount(0, 52);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.getDefaultRemoveFilterName();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      String[][] stringArray0 = new String[9][9];
      String[] stringArray1 = new String[4];
      stringArray1[0] = "v";
      stringArray1[1] = "";
      stringArray1[2] = "-count-width <int>";
      stringArray1[3] = " ";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[1];
      stringArray2[0] = "(";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[8];
      stringArray3[0] = "Key,\n(1),col0\n";
      stringArray3[1] = "v";
      stringArray3[2] = "v";
      stringArray3[3] = "Key,\n(1),col0\n";
      stringArray3[4] = "v";
      stringArray3[5] = "(";
      stringArray3[6] = " ";
      stringArray3[7] = ")";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[3];
      stringArray4[0] = "v";
      stringArray4[1] = "*";
      stringArray4[2] = "(";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[7];
      stringArray5[0] = "v";
      stringArray5[1] = "";
      stringArray5[2] = "v";
      stringArray5[3] = " ";
      stringArray5[4] = " ";
      stringArray5[5] = "";
      stringArray5[6] = "v";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[5];
      stringArray6[0] = ")";
      stringArray6[1] = "";
      stringArray6[2] = "(";
      stringArray6[3] = "";
      stringArray6[4] = "v";
      stringArray0[5] = stringArray6;
      String[] stringArray7 = new String[5];
      stringArray7[0] = "-ranking data not set-";
      stringArray7[1] = "v";
      stringArray7[2] = "(";
      stringArray7[3] = ")";
      stringArray7[4] = "Key,\n(1),col0\n";
      stringArray0[6] = stringArray7;
      String[] stringArray8 = new String[6];
      stringArray8[0] = "*";
      stringArray8[1] = " ";
      stringArray8[2] = ")";
      stringArray8[3] = "";
      stringArray8[4] = "v";
      stringArray8[5] = "*";
      stringArray0[7] = stringArray8;
      String[] stringArray9 = new String[0];
      stringArray0[8] = stringArray9;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getColSize(stringArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.257934360228876
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[1][0];
      resultMatrixPlainText0.setRanking(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixPlainText0.getRowCount();
      String[][] stringArray0 = new String[6][0];
      String[] stringArray1 = new String[1];
      stringArray1[0] = "";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[5];
      stringArray2[0] = "";
      stringArray2[1] = "Indices from sort (ints): ";
      stringArray2[2] = " ";
      stringArray2[3] = "v";
      stringArray2[4] = "*";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[4];
      stringArray3[0] = "v";
      stringArray3[1] = "";
      stringArray3[2] = "*";
      stringArray3[3] = "";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[9];
      stringArray4[0] = " ";
      stringArray4[1] = "";
      stringArray4[2] = ")";
      stringArray4[3] = "*";
      stringArray4[4] = " ";
      stringArray4[5] = ")";
      stringArray4[6] = " ";
      stringArray4[7] = "";
      stringArray4[8] = "*";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[4];
      stringArray5[0] = "(";
      stringArray5[1] = "";
      stringArray5[2] = "*";
      stringArray5[3] = ")";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[8];
      stringArray6[0] = "";
      stringArray6[1] = "";
      stringArray6[2] = "(";
      stringArray6[3] = "";
      stringArray6[4] = "";
      stringArray6[5] = "v";
      stringArray6[6] = ")";
      stringArray6[7] = "v";
      stringArray0[5] = stringArray6;
      resultMatrixPlainText0.getColSize(stringArray0, 1, false, false);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.0760331199828608
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.9949969874483524
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      resultMatrixGnuPlot0.getRowName(1780);
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      resultMatrixPlainText0.colNameWidthTipText();
      resultMatrixGnuPlot0.toStringMatrix();
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.8304623498964583
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[1][0];
      resultMatrixPlainText0.WIN_STRING = "(";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixPlainText0.setRanking(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 1893);
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      resultMatrixGnuPlot0.getDefaultSignificanceWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.2631547599756296
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[4];
      intArray0[1] = 0;
      intArray0[2] = 2;
      intArray0[3] = 0;
      resultMatrixHTML0.isMean(2);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.454266438889728
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 0);
      resultMatrixSignificance0.getVisibleColCount();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.getStdDev(1, (-2044));
      resultMatrixLatex0.toStringRanking();
  }

  /**
  //Test case number: 10
  /*Coverage entropy=4.052531865730689
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setShowAverage(true);
      resultMatrixPlainText0.globalInfo();
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      resultMatrixPlainText0.getDefaultRemoveFilterName();
      resultMatrixPlainText0.toString();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "v";
      stringArray0[1] = "";
      resultMatrixGnuPlot0.listOptions();
      stringArray0[2] = "Generates the output as plain text (for fixed width fonts).";
      stringArray0[3] = "";
      stringArray0[4] = "*";
      stringArray0[5] = " ";
      stringArray0[6] = " using 1:";
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixPlainText0.isAverage(27);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.413142056497917
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      int[] intArray0 = new int[0];
      resultMatrixLatex0.setRowOrder(intArray0);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=4.411109023397525
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "*";
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.toString();
      resultMatrixGnuPlot0.getRevision();
      resultMatrixPlainText0.getOptions();
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.8504928579006896
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV1.getOptions();
      resultMatrixCSV0.setMeanWidth(76);
      resultMatrixCSV1.setMeanPrec(3);
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV();
      resultMatrixCSV2.getColName(52);
      ResultMatrixCSV resultMatrixCSV3 = new ResultMatrixCSV(resultMatrixCSV2);
      resultMatrixCSV1.getMean(2, 48);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(68, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixHTML0.m_RankingDiff = intArray0;
      resultMatrixHTML0.toStringRanking();
      resultMatrixCSV3.toStringSummary();
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.952210978290041
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_RankingLosses = null;
      resultMatrixSignificance0.setEnumerateRowNames(false);
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixSignificance0.getSummaryTitle((-1));
      resultMatrixSignificance0.m_RankingWins = null;
      resultMatrixSignificance0.setMeanWidth((-1));
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.removeFilterNameTipText();
      resultMatrixSignificance0.globalInfo();
      resultMatrixSignificance0.setColOrder((int[]) null);
      resultMatrixSignificance0.showAverageTipText();
      resultMatrixSignificance0.getDefaultMeanPrec();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.getSummaryTitle(2410);
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixSignificance0.m_HeaderKeys = vector0;
      resultMatrixCSV0.toStringRanking();
      resultMatrixSignificance0.headerKeys();
      resultMatrixCSV0.toArray();
      resultMatrixSignificance0.doubleToString(Double.NaN, (-1278));
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.globalInfo();
      resultMatrixGnuPlot0.m_MeanWidth = 2;
      resultMatrixGnuPlot0.getVisibleColCount();
      resultMatrixGnuPlot0.getRemoveFilterName();
      resultMatrixCSV0.getDefaultPrintColNames();
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.271383640313224
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_ShowAverage = true;
      resultMatrixCSV0.toStringRanking();
      resultMatrixPlainText0.setShowAverage(true);
      resultMatrixPlainText0.globalInfo();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getStdDev((-2019), 1514);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.119766760221243
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "*";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "*";
      resultMatrixGnuPlot1.m_RowNames = stringArray0;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot1.getAverage(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.8363489448777246
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(599, 1);
      resultMatrixCSV0.toStringRanking();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixPlainText1);
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV();
      resultMatrixCSV2.getOptions();
      resultMatrixCSV1.setMeanWidth(795);
      resultMatrixCSV2.setMeanPrec(3086);
      resultMatrixPlainText0.setSignificanceWidth(30);
      resultMatrixPlainText1.getSignificance(0, 0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.2395716747532304
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setEnumerateColNames(false);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.getStdDev(0, 2);
      resultMatrixLatex0.toStringRanking();
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.316922838982754
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getVisibleColCount();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.getStdDev(0, 1);
      resultMatrixGnuPlot0.toStringSummary();
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.018085188577419
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setEnumerateColNames(false);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixSignificance0.getDefaultPrintColNames();
      String[][] stringArray0 = new String[8][1];
      String[] stringArray1 = new String[8];
      stringArray1[0] = "v";
      stringArray1[1] = "*";
      stringArray1[2] = "";
      stringArray1[3] = "(";
      stringArray1[4] = ")";
      stringArray1[5] = "(";
      stringArray1[6] = "";
      stringArray1[7] = " ";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[7];
      stringArray2[0] = "v";
      stringArray2[1] = "";
      stringArray2[2] = "";
      stringArray2[3] = "*";
      stringArray2[4] = "[c kP_io;P";
      stringArray2[5] = "*";
      stringArray2[6] = " ";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[7];
      stringArray3[0] = " ";
      stringArray3[1] = "[c kP_io;P";
      stringArray3[2] = "u4~";
      stringArray3[3] = "(";
      stringArray3[4] = "";
      stringArray3[5] = "";
      stringArray3[6] = "*";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[2];
      stringArray4[0] = "[c kP_io;P";
      stringArray4[1] = "";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[8];
      stringArray5[0] = "v";
      stringArray5[1] = "5vQ~V#LP+U'S+L4QK";
      stringArray5[2] = "[c kP_io;P";
      stringArray5[3] = "+Xc2)v(?OsKJ";
      stringArray5[4] = "*";
      stringArray5[5] = "";
      stringArray5[6] = "g5O&$K;Lxz#UI}DG";
      stringArray5[7] = "";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[8];
      stringArray6[0] = "";
      stringArray6[1] = "v";
      stringArray6[2] = "u4~";
      stringArray6[3] = " ";
      stringArray6[4] = "v";
      stringArray6[5] = " ";
      stringArray6[6] = "";
      stringArray6[7] = "*";
      stringArray0[5] = stringArray6;
      String[] stringArray7 = new String[8];
      stringArray7[0] = " ";
      stringArray7[1] = "[c kP_io;P";
      stringArray7[2] = "(";
      stringArray7[3] = "di|xbk{A(fX=:lt-";
      stringArray7[4] = "(";
      stringArray7[5] = "5vQ~V#LP+U'S+L4QK";
      stringArray7[6] = "";
      stringArray7[7] = "";
      stringArray0[6] = stringArray7;
      String[] stringArray8 = new String[4];
      stringArray8[0] = ")";
      stringArray8[1] = "";
      stringArray8[2] = "*";
      stringArray8[3] = "u4~";
      stringArray0[7] = stringArray8;
      resultMatrixSignificance0.getColSize(stringArray0, 0, false, false);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=4.134823728787159
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringRanking();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV1.getOptions();
      resultMatrixCSV0.setMeanWidth(2);
      resultMatrixCSV1.setMeanPrec(30);
      resultMatrixPlainText0.setSignificanceWidth((-1919));
      resultMatrixPlainText0.getSignificance(0, 1);
      resultMatrixPlainText0.setRowHidden(2, true);
      resultMatrixCSV0.getCount((-3588));
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.4866413644630816
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      int[] intArray0 = new int[6];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixLatex0.m_HeaderKeys = vector0;
      resultMatrixLatex0.getStdDev(870, 15);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=4.162748637999561
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.toStringRanking();
      resultMatrixPlainText0.setShowAverage(true);
      resultMatrixPlainText0.globalInfo();
      resultMatrixPlainText0.getSignificanceCount(0, 2);
      resultMatrixPlainText0.setShowStdDev(true);
      resultMatrixPlainText0.getDefaultRemoveFilterName();
      resultMatrixPlainText0.toString();
      resultMatrixCSV0.isAverage(1);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.6319481166383696
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringRanking();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixPlainText0.getDisplayCol(2);
      resultMatrixPlainText0.setSignificance(1, 0, 567);
      String[][] stringArray0 = new String[6][3];
      String[] stringArray1 = new String[3];
      stringArray1[0] = " ";
      stringArray1[1] = "*";
      stringArray1[2] = "]";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[7];
      stringArray2[0] = " ";
      stringArray2[1] = "]";
      stringArray2[2] = "(";
      stringArray2[3] = "[";
      stringArray2[4] = "]";
      stringArray2[5] = "*";
      stringArray2[6] = "\tThe width of the standard deviation (0 = optimal).\n\t(default: ";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[1];
      stringArray3[0] = "\tThe width of the standard deviation (0 = optimal).\n\t(default: ";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[1];
      stringArray4[0] = "*";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[2];
      stringArray5[0] = "dFim4l9/";
      stringArray5[1] = ")";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[5];
      stringArray6[0] = "LaTeX";
      stringArray6[1] = "*";
      stringArray6[2] = " ";
      stringArray6[3] = "*";
      stringArray6[4] = ")";
      stringArray0[5] = stringArray6;
      resultMatrixPlainText0.getColSize(stringArray0, (-1), true, true);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.5770361876519488
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 2);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.891781234847591
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1838, 2);
      // Undeclared exception!
      resultMatrixLatex0.toArray();
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.2364195679099574
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_MeanPrec = (-205);
      resultMatrixGnuPlot0.getSignificanceWidth();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getColHidden(0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.7162020280767543
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setEnumerateColNames(true);
      resultMatrixSignificance0.getVisibleColCount();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixSignificance0.getDefaultPrintColNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRemoveFilterName(true);
      resultMatrixGnuPlot0.toStringKey();
  }

  /**
  //Test case number: 29
  /*Coverage entropy=4.014483865344667
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.LEFT_PARENTHESES = " & - ";
      Vector<Object> vector0 = new Vector<Object>();
      vector0.add((Object) "5");
      resultMatrixCSV0.m_HeaderKeys = vector0;
      resultMatrixCSV0.m_StdDevPrec = 487;
      resultMatrixCSV0.padString("5", (-1860), false);
      vector0.add((Object) resultMatrixCSV0.m_HeaderKeys);
      resultMatrixCSV0.getRowHidden((-556));
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.getColHidden((-1860));
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.48629831128984
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearRanking();
      int[][] intArray0 = new int[6][2];
      int[] intArray1 = new int[1];
      intArray1[0] = (-1);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[5];
      intArray2[0] = 1602;
      intArray2[1] = 2;
      intArray2[2] = 3;
      intArray2[3] = 2;
      intArray2[4] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[7];
      intArray3[0] = (-3903);
      intArray3[1] = (-1945);
      intArray3[2] = (-1);
      intArray3[3] = 1602;
      intArray3[4] = (-1945);
      intArray3[5] = 1602;
      intArray3[6] = (-1);
      intArray0[2] = intArray3;
      int[] intArray4 = new int[7];
      intArray4[0] = (-1945);
      intArray4[1] = 2;
      intArray4[2] = 2;
      intArray4[3] = 3;
      intArray4[4] = 1;
      intArray4[5] = (-1945);
      intArray4[6] = (-3903);
      intArray0[3] = intArray4;
      int[] intArray5 = new int[0];
      intArray0[4] = intArray5;
      int[] intArray6 = new int[7];
      intArray6[0] = 3;
      intArray6[1] = 0;
      intArray6[2] = 3;
      intArray6[3] = (-1945);
      intArray6[4] = (-3903);
      intArray6[5] = 0;
      intArray6[6] = (-1945);
      intArray0[5] = intArray6;
      resultMatrixCSV0.m_Significance = intArray0;
      resultMatrixCSV0.setMean((-1945), (-1), Double.NaN);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.3942829624369697
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setMeanWidth(2);
      resultMatrixCSV0.setMeanPrec(30);
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 2;
      intArray0[2] = (-1162);
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 1;
      intArray0[7] = 11;
      resultMatrixCSV0.clearRanking();
      intArray0[8] = 0;
      resultMatrixCSV0.setColOrder(intArray0);
      resultMatrixPlainText0.getDisplayCol(2068);
      resultMatrixPlainText0.setSignificance(0, 1, 2068);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.5396680687913826
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDisplayCol((-2452));
      resultMatrixPlainText0.globalInfo();
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.7940754774136716
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringRanking();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV1.getOptions();
      resultMatrixCSV0.setMeanWidth(2);
      resultMatrixPlainText0.getDisplayCol(2);
      resultMatrixPlainText0.setSignificance((-1381), 0, 2);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.2138366159598175
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.getDefaultSignificanceWidth();
      resultMatrixGnuPlot1.getRowName(0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot1);
      resultMatrixPlainText0.setSignificance(0, (-2291), (-2160));
  }

  /**
  //Test case number: 35
  /*Coverage entropy=4.23764886192154
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(14, 14);
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRowNameWidth(14);
      String[] stringArray0 = new String[2];
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixPlainText0.headerKeys();
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(14, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.2241340357607884
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      int[] intArray0 = new int[0];
      resultMatrixCSV0.m_RowOrder = intArray0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.setRowNameWidth(2);
      resultMatrixSignificance0.getVisibleColCount();
      assertEquals(2, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.3019193497418162
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[1][0];
      resultMatrixHTML0.m_Significance = intArray0;
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      int int0 = resultMatrixHTML0.getDefaultMeanPrec();
      assertEquals(2, int0);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 2);
      String string0 = resultMatrixGnuPlot0.toStringKey();
      assertEquals("Key:\n1 col0\n", string0);
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
      assertEquals(2, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.40362077622947
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int int0 = resultMatrixPlainText0.getDisplayCol(2);
      assertEquals((-1), int0);
      
      String string0 = resultMatrixGnuPlot0.getRowName(1);
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertNull(string0);
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.58357976679115
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setPrintColNames(false);
      resultMatrixLatex0.setSignificanceWidth((-2160));
      resultMatrixLatex0.LEFT_PARENTHESES = null;
      resultMatrixLatex0.setRowNameWidth((-4874));
      resultMatrixLatex0.stdDevWidthTipText();
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.getColHidden(1095);
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.638305675937263
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.assign(resultMatrixGnuPlot0);
      boolean[] booleanArray0 = new boolean[3];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      resultMatrixGnuPlot0.m_RowNames = null;
      resultMatrixPlainText0.m_ColHidden = booleanArray0;
      resultMatrixPlainText0.setOptions((String[]) null);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText1.getDefaultPrintColNames();
      resultMatrixPlainText0.setSignificanceWidth(2);
      resultMatrixPlainText0.getPrintRowNames();
      assertEquals(5, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.5880838734766574
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.getAverage(1);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultSignificanceWidth();
      // Undeclared exception!
      resultMatrixGnuPlot0.setSize(3386, 316);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.8619547500715634
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1081, 1);
      // Undeclared exception!
      resultMatrixPlainText0.toString();
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.4949500104340445
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 1);
      assertEquals(2, resultMatrixHTML0.getColCount());
      
      int int0 = resultMatrixPlainText0.getVisibleRowCount();
      assertEquals(1, int0);
      
      resultMatrixPlainText0.clearHeader();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.padString("", 0, true);
      assertEquals("", string0);
      
      resultMatrixPlainText0.getDefaultPrintColNames();
      boolean boolean0 = resultMatrixPlainText0.getPrintRowNames();
      assertTrue(boolean0);
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=4.114822684566671
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixPlainText0.getRevision();
      int int0 = resultMatrixPlainText0.getSignificanceCount((-2296), 0);
      int int1 = resultMatrixPlainText0.getSignificanceCount((-2224), (-2296));
      assertTrue(int1 == int0);
      
      resultMatrixPlainText0.getDefaultRemoveFilterName();
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      
      String string0 = resultMatrixPlainText0.toString();
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.8863094516641365
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixGnuPlot0.m_RankingWins = intArray0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setMeanWidth(2);
      resultMatrixCSV0.setMeanPrec(1);
      resultMatrixCSV0.setOptions((String[]) null);
      resultMatrixCSV0.getColName(0);
      resultMatrixCSV0.setRowOrder(resultMatrixGnuPlot0.m_RankingWins);
      resultMatrixCSV0.getMean(2230, (-489));
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance((-1), 1);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.8989935407668233
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[6][7];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = 16;
      intArray2[1] = 1;
      intArray2[2] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[7];
      intArray3[0] = 2;
      intArray3[1] = 0;
      intArray3[2] = 1;
      intArray3[3] = 1;
      intArray3[4] = 16;
      intArray3[5] = 16;
      intArray3[6] = 16;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[4];
      intArray4[0] = 2;
      intArray4[1] = 16;
      intArray4[2] = 16;
      intArray4[3] = 2;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[4];
      intArray5[0] = 1;
      intArray5[1] = 16;
      intArray5[2] = 2;
      intArray5[3] = 0;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[1];
      intArray6[0] = 2;
      intArray0[5] = intArray6;
      resultMatrixGnuPlot0.setSummary(intArray0, intArray0);
      int[] intArray7 = new int[1];
      intArray7[0] = 1;
      resultMatrixGnuPlot0.m_RankingWins = intArray7;
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = null;
      try {
        resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=4.044422216016334
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.stdDevWidthTipText();
      resultMatrixHTML0.listOptions();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 0);
      resultMatrixPlainText0.setCount(0, 0);
      resultMatrixHTML0.toStringKey();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixPlainText0.setMeanWidth(1);
      resultMatrixPlainText0.getShowStdDev();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixPlainText0.assign(resultMatrixGnuPlot0);
      resultMatrixPlainText0.clearSummary();
      resultMatrixPlainText0.toStringSummary();
      resultMatrixLatex0.m_PrintColNames = false;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "v";
      stringArray0[2] = " ";
      stringArray0[3] = " ";
      stringArray0[4] = "";
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixPlainText0.setColName(1, "Variance: ");
      assertEquals(50, resultMatrixPlainText0.getRowNameWidth());
      
      resultMatrixLatex0.getMeanWidth();
      assertEquals(1, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.488736283888243
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 1);
      resultMatrixHTML0.m_PrintColNames = true;
      resultMatrixHTML0.getRowName(2998);
      assertEquals(1, resultMatrixHTML0.getRowCount());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(97, 6);
      resultMatrixSignificance0.toStringSummary();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.doubleToString(0.0, 1613);
      resultMatrixCSV0.getDefaultPrintColNames();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(5, resultMatrixCSV0.getCountWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 3);
      String string0 = resultMatrixLatex0.toStringKey();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption (Key)}\n\\scriptsize\n{\\centering\n\\begin{tabular}{cl}\\\\\n(1) & col0 \\\\\n(2) & col1 \\\\\n\\end{tabular}\n}\n\\end{table}\n", string0);
      
      resultMatrixSignificance0.getDefaultPrintColNames();
      String string1 = resultMatrixSignificance0.trimString("(", 1);
      assertEquals("(", string1);
      assertEquals(0, resultMatrixSignificance0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixSignificance0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.6251641757243473
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setEnumerateColNames(true);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixHTML0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 2);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.8751432653046667
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringRanking();
      resultMatrixPlainText0.globalInfo();
      int int0 = resultMatrixPlainText0.getSignificanceCount(0, 2);
      assertEquals(0, int0);
      
      resultMatrixPlainText0.getDefaultRemoveFilterName();
      String string0 = resultMatrixPlainText0.toString();
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.8437192228801664
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 1);
      resultMatrixPlainText0.globalInfo();
      resultMatrixPlainText0.getSignificanceCount(2, (-1));
      resultMatrixPlainText0.getDefaultRemoveFilterName();
      String string0 = resultMatrixPlainText0.toString();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixPlainText0.getDefaultCountWidth();
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=4.212699466355271
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.clearHeader();
      resultMatrixPlainText0.doubleToString(0.0, 0);
      boolean[] booleanArray0 = new boolean[2];
      resultMatrixPlainText0.LEFT_PARENTHESES = "l@V\"o";
      resultMatrixPlainText0.setCountWidth(2456);
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      resultMatrixPlainText0.m_ColHidden = booleanArray0;
      resultMatrixPlainText0.setShowAverage(true);
      resultMatrixPlainText0.globalInfo();
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.getSignificanceCount(17, 17);
      resultMatrixPlainText0.getDefaultRemoveFilterName();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(26, 0);
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.toStringKey();
      resultMatrixSignificance0.setShowStdDev(false);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.704880059188529
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.getDefaultPrintColNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixHTML0.getDisplayName();
      resultMatrixGnuPlot1.getDefaultCountWidth();
      assertTrue(resultMatrixGnuPlot1.getPrintColNames());
      assertTrue(resultMatrixGnuPlot1.getPrintRowNames());
      assertEquals(50, resultMatrixGnuPlot1.getRowNameWidth());
      assertEquals(2, resultMatrixGnuPlot1.getStdDevPrec());
      assertFalse(resultMatrixGnuPlot1.getEnumerateColNames());
      assertEquals(2, resultMatrixGnuPlot1.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot1.getSignificanceWidth());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.3454240763473875
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.globalInfo();
      int[][] intArray0 = new int[1][0];
      resultMatrixPlainText0.WIN_STRING = "Generates the output as plain text (for fixed width fonts).";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixPlainText0.setRanking(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixGnuPlot0.setStdDev(822, 1, 2);
      String string0 = resultMatrixCSV0.toStringKey();
      assertEquals("Key,\n[1],col0\n", string0);
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertTrue(resultMatrixCSV0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.3893419632590773
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 1);
      resultMatrixHTML0.m_PrintColNames = true;
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(2, resultMatrixHTML0.getColCount());
      
      int[][] intArray0 = new int[1][0];
      int[] intArray1 = new int[2];
      intArray1[0] = 2;
      intArray1[1] = 2;
      intArray0[0] = intArray1;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixPlainText0.m_NonSigWins = intArray0;
      resultMatrixLatex0.setSignificance(10, 68, 0);
      resultMatrixLatex0.setStdDev(0, (-594), 1511.31773);
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.5783785758767053
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.WIN_STRING = "(";
      resultMatrixPlainText0.m_ColNames = null;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.7258556329611996
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[1][9];
      int[] intArray1 = new int[2];
      intArray1[0] = 2;
      intArray1[1] = 2;
      intArray0[0] = intArray1;
      resultMatrixGnuPlot0.m_NonSigWins = intArray0;
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixPlainText0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(7, 0);
      resultMatrixSignificance0.setEnumerateColNames(false);
      resultMatrixSignificance0.getVisibleColCount();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixSignificance0.setRowNameWidth(7);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.getCount(0);
      assertEquals(7, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.488039965861683
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      
      String string0 = resultMatrixGnuPlot0.getRowName((-840));
      assertNull(string0);
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowStdDev());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=4.237614823762818
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.setOptions((String[]) null);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText(2, 0);
      resultMatrixPlainText2.toArray();
      resultMatrixPlainText2.setSignificanceWidth(2);
      resultMatrixPlainText0.getSignificance(2, 2);
      ResultMatrixHTML.main((String[]) null);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=4.188818840706254
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[4][0];
      int[] intArray1 = new int[9];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 1;
      intArray1[3] = 2;
      intArray1[4] = 1;
      intArray1[5] = 0;
      intArray1[6] = 2;
      intArray1[7] = 2;
      intArray1[8] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[6];
      intArray2[0] = 1;
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray2[3] = 2;
      intArray2[4] = 0;
      intArray2[5] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[3];
      intArray3[0] = 2;
      intArray3[1] = 44;
      intArray3[2] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[3];
      intArray4[0] = 44;
      intArray4[1] = 2;
      intArray4[2] = 1;
      intArray0[3] = intArray4;
      resultMatrixHTML0.m_Significance = intArray0;
      resultMatrixHTML0.LOSS_STRING = "5I=]4JZ";
      resultMatrixHTML0.m_SignificanceWidth = 2181;
      resultMatrixHTML0.setCount((-4748), (-4748));
      String[] stringArray0 = new String[0];
      ResultMatrixLatex.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.toStringKey();
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      assertEquals("Key:\n(1) col0\n", string0);
      assertFalse(resultMatrixSignificance0.getDefaultShowAverage());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=4.082429613837374
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[1][0];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 1);
      resultMatrixPlainText0.setRanking(intArray0);
      resultMatrixPlainText0.setShowStdDev(true);
      resultMatrixPlainText0.toString();
      resultMatrixPlainText0.globalInfo();
      assertTrue(resultMatrixPlainText0.getShowStdDev());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.1444493880953353
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.getDefaultSignificanceWidth();
      resultMatrixGnuPlot1.getRowName(0);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setSize(0, (-29));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=4.162729699374235
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[0];
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.toArray();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setEnumerateRowNames(true);
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.getOptions();
      assertTrue(resultMatrixGnuPlot0.getEnumerateRowNames());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.5709470437808677
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[1][0];
      resultMatrixHTML0.m_Significance = intArray0;
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.toStringKey();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption (Key)}\n\\scriptsize\n{\\centering\n\\begin{tabular}{cl}\\\\\n(1) & col0 \\\\\n\\end{tabular}\n}\n\\end{table}\n", string0);
      
      resultMatrixHTML0.setMean(2, (-3808), (-1467.3));
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(0, resultMatrixHTML0.getDefaultSignificanceWidth());
      assertEquals(1, resultMatrixHTML0.getRowCount());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.3324333426737254
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[1][0];
      resultMatrixPlainText0.WIN_STRING = "(";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixPlainText0.setRanking(intArray0);
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixCSV0.isStdDev(52);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(380, 2);
      resultMatrixHTML0.getDisplayName();
      int int0 = resultMatrixHTML0.getRowNameWidth();
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(25, int0);
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(380, resultMatrixHTML0.getColCount());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.2380411733421557
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setSignificanceWidth(97);
      resultMatrixLatex0.m_PrintRowNames = false;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.WIN_STRING = "";
      resultMatrixLatex1.m_StdDevWidth = 0;
      resultMatrixLatex1.toStringRanking();
      resultMatrixPlainText0.getDefaultPrintRowNames();
      resultMatrixLatex0.isSignificance(0);
      assertEquals(97, resultMatrixLatex0.getSignificanceWidth());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.144266739693509
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      String string0 = resultMatrixGnuPlot0.getRowName(0);
      assertNotNull(string0);
      
      int int0 = resultMatrixCSV0.getDefaultStdDevPrec();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.6139963082848356
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringSummary();
      resultMatrixPlainText0.removeFilterName("");
      resultMatrixPlainText0.getVisibleRowCount();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixPlainText0.setPrintColNames(false);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      boolean boolean0 = resultMatrixPlainText0.getDefaultPrintColNames();
      assertTrue(boolean0);
      
      boolean boolean1 = resultMatrixPlainText0.getPrintRowNames();
      assertFalse(resultMatrixPlainText0.getPrintColNames());
      assertTrue(boolean1);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.281605848690576
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[1][0];
      resultMatrixHTML0.m_Significance = intArray0;
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.setRowHidden((-3634), true);
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(0, resultMatrixHTML0.getDefaultStdDevWidth());
      assertEquals(1, resultMatrixHTML0.getColCount());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=4.144643097403542
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setRemoveFilterName(true);
      resultMatrixCSV0.globalInfo();
      resultMatrixCSV0.meanPrecTipText();
      resultMatrixCSV0.getDefaultRemoveFilterName();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      resultMatrixCSV0.setRowHidden(3, true);
      assertFalse(resultMatrixCSV0.getPrintColNames());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.9804994975666754
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(10, 10);
      String string0 = resultMatrixPlainText0.toStringMatrix();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRowNameWidth(0);
      resultMatrixGnuPlot0.toString();
      resultMatrixGnuPlot0.m_CountWidth = 26;
      assertEquals(0, resultMatrixGnuPlot0.getRowNameWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setMeanWidth(2);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV0.setMeanPrec(26);
      resultMatrixCSV0.getColName(0);
      int[] intArray0 = new int[8];
      intArray0[0] = 2;
      intArray0[1] = 1;
      intArray0[2] = (-1480);
      intArray0[3] = 26;
      intArray0[4] = 10;
      intArray0[5] = 2;
      intArray0[6] = 1;
      intArray0[7] = 26;
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.getMean(0, 123);
      String[][] stringArray0 = new String[3][4];
      String[] stringArray1 = new String[6];
      stringArray1[0] = "";
      stringArray1[1] = " ";
      stringArray1[2] = "*";
      stringArray1[3] = "\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n";
      stringArray1[4] = string0;
      stringArray1[5] = " ";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[7];
      stringArray2[0] = "]";
      stringArray2[1] = "\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n";
      stringArray2[2] = " ";
      stringArray2[3] = "[";
      stringArray2[4] = " ";
      stringArray2[5] = "[";
      stringArray2[6] = "[";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[1];
      stringArray3[0] = "";
      stringArray0[2] = stringArray3;
      int int0 = resultMatrixPlainText0.getColSize(stringArray0, 10);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=4.066314417849401
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowOrder(intArray0);
      String[][] stringArray0 = resultMatrixLatex0.toArray();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.setSize(0, 0);
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDisplayCol(0);
      resultMatrixPlainText0.setSignificanceWidth(0);
      resultMatrixPlainText0.getColSize(stringArray0, 4310, false, false);
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.192835809358434
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixGnuPlot0.getDefaultSignificanceWidth();
      resultMatrixGnuPlot0.getRowName(2);
      // Undeclared exception!
      resultMatrixGnuPlot0.setSize(44, 2012);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=4.1098954177567
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setShowAverage(true);
      resultMatrixPlainText0.globalInfo();
      int int0 = resultMatrixPlainText0.getSignificanceCount(1, 1);
      assertEquals(0, int0);
      
      resultMatrixPlainText0.getDefaultRemoveFilterName();
      String string0 = resultMatrixPlainText0.toString();
      assertEquals("Dataset                   (1) col0       \n-----------------------------------------\nrow0                       (0)          |\n-----------------------------------------\nAverage                          NaN.00 |\n-----------------------------------------\n(v/ /*)                                 |\n", string0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.4365024712299324
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.m_RankingWins = intArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = null;
      try {
        resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.6680978159168616
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 1);
      int int0 = resultMatrixPlainText0.getVisibleRowCount();
      assertEquals(1, int0);
      
      resultMatrixPlainText0.clearHeader();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.toStringRanking();
      String string0 = resultMatrixSignificance0.toStringKey();
      assertEquals("Key:\n(1) col0\n", string0);
      
      resultMatrixSignificance0.setShowStdDev(false);
      resultMatrixSignificance0.getDefaultStdDevWidth();
      assertTrue(resultMatrixSignificance0.getPrintColNames());
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toArray();
      resultMatrixGnuPlot0.toStringKey();
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      
      int int1 = resultMatrixHTML0.getMeanPrec();
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(2, int1);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.5283140191716797
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setEnumerateColNames(false);
      resultMatrixSignificance0.getVisibleColCount();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 2);
      resultMatrixGnuPlot0.setSize(2388, 2);
      int int1 = resultMatrixGnuPlot0.getDisplayRow(0);
      assertEquals(2388, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(0, int1);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.6413630520162736
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      Vector<String> vector0 = new Vector<String>();
      resultMatrixLatex0.m_HeaderKeys = vector0;
      resultMatrixLatex0.setRowNameWidth((-3730));
      resultMatrixLatex0.setRowOrder(intArray0);
      String[][] stringArray0 = resultMatrixLatex0.toArray();
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      assertEquals(3, stringArray0.length);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.5880838734766574
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.globalInfo();
      int[][] intArray0 = new int[1][0];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixPlainText0.setRanking(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixCSV0.setMean(0, 0, 2);
      resultMatrixCSV0.getDefaultPrintColNames();
      assertFalse(resultMatrixCSV0.getDefaultShowAverage());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=4.050193422314155
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixGnuPlot0.meanWidthTipText();
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.5374801842022947
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.getCount(13);
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(5, resultMatrixHTML0.getCountWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertTrue(resultMatrixHTML0.getPrintColNames());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.291622408595628
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getVisibleColCount();
      resultMatrixSignificance0.setPrintRowNames(true);
      boolean boolean0 = resultMatrixSignificance0.isMean(0);
      assertFalse(boolean0);
      assertFalse(resultMatrixSignificance0.getDefaultEnumerateRowNames());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(0, resultMatrixSignificance0.getDefaultMeanWidth());
      assertEquals(0, resultMatrixSignificance0.getDefaultColNameWidth());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.8561346468677775
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_EnumerateColNames = true;
      resultMatrixHTML0.addHeader(")", "");
      String string0 = resultMatrixHTML0.toString();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixHTML0.getShowStdDev();
      String string1 = resultMatrixHTML0.padString("", 23);
      assertEquals("                       ", string1);
      
      resultMatrixHTML0.getRowName(23);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1);
      resultMatrixSignificance0.toStringSummary();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      String string2 = resultMatrixCSV0.doubleToString(0.0, 23);
      assertEquals("0.00000000000000000000000", string2);
      
      resultMatrixCSV0.getDefaultPrintColNames();
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "*";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      resultMatrixLatex0.toStringKey();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      
      resultMatrixSignificance0.trimString("", 1);
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.840494614850236
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixGnuPlot0.globalInfo();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV1.getOptions();
      resultMatrixCSV1.setMeanWidth(2);
      resultMatrixCSV1.setMeanPrec(1);
      resultMatrixPlainText0.setSignificanceWidth(2788);
      resultMatrixPlainText0.getSignificance(1, 1195);
      int int0 = resultMatrixGnuPlot0.getDefaultStdDevPrec();
      assertEquals(2788, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.349282251575593
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getRowHidden(0);
      assertFalse(resultMatrixCSV0.getShowAverage());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixCSV0.getDefaultCountWidth());
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.3922219498135973
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixPlainText0.setColOrder(intArray0);
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixPlainText0.toStringRanking();
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      
      resultMatrixGnuPlot0.getRowHidden(3);
      assertEquals(0, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=4.0140820849558265
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.toArray();
      resultMatrixLatex0.setStdDevPrec((-2576));
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.getRowName(1);
      resultMatrixGnuPlot0.assign(resultMatrixLatex0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot1.toStringSummary();
      resultMatrixGnuPlot1.getDefaultSignificanceWidth();
      assertEquals(0, resultMatrixGnuPlot1.getMeanWidth());
      assertEquals(2, resultMatrixGnuPlot1.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot1.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot1.getCountWidth());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.1257298336542227
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "*";
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      // Undeclared exception!
      try { 
        resultMatrixPlainText1.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.48629831128984
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[1][4];
      int[] intArray1 = new int[2];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray0[0] = intArray1;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.3247218313863036
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setEnumerateRowNames(false);
      resultMatrixHTML0.setCountWidth((-456));
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.setCountWidth(1);
      resultMatrixHTML0.getColName(1);
      int[] intArray0 = new int[6];
      intArray0[0] = 1;
      intArray0[1] = (-300);
      intArray0[2] = 1;
      intArray0[3] = 2;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.setRowOrder(intArray0);
      double double0 = resultMatrixCSV0.getMean(1193, (-5883));
      assertEquals(1, resultMatrixHTML0.getCountWidth());
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.3417014852602414
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.getEnumerateRowNames();
      resultMatrixCSV0.getRowHidden(1);
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 2;
      resultMatrixPlainText0.setColOrder(intArray0);
      boolean boolean0 = resultMatrixPlainText0.isMean(1);
      assertTrue(boolean0);
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(1, resultMatrixPlainText0.getColCount());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.5886727851118687
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 2);
      int int0 = resultMatrixCSV0.getDisplayRow(0);
      assertEquals(0, int0);
      
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixCSV0.getRowHidden((-460));
      assertEquals(0, resultMatrixCSV0.getColCount());
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      int[] intArray0 = new int[0];
      resultMatrixPlainText1.setColOrder(intArray0);
      assertEquals(2, resultMatrixPlainText1.getDefaultStdDevPrec());
      assertTrue(resultMatrixPlainText1.getDefaultEnumerateColNames());
      assertFalse(resultMatrixPlainText1.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=4.076995395371064
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.setMeanWidth(1);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.setMeanPrec(2);
      resultMatrixCSV1.getColName((-1480));
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 26;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 30;
      intArray0[6] = (-1);
      intArray0[7] = 0;
      resultMatrixCSV0.setRowOrder(intArray0);
      double double0 = resultMatrixCSV0.getMean(0, (-2308));
      assertEquals(1, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultMeanWidth());
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.4356670493418786
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int int0 = resultMatrixCSV0.getDisplayRow((-3640));
      assertEquals((-1), int0);
      
      resultMatrixCSV0.getRowHidden(1);
      int int1 = resultMatrixCSV0.getColCount();
      assertEquals(0, resultMatrixCSV0.getDefaultCountWidth());
      assertEquals(1, int1);
      assertFalse(resultMatrixCSV0.getShowStdDev());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.6751636569375417
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 11);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.setStdDevPrec(822);
      resultMatrixCSV0.getDisplayRow(2);
      resultMatrixCSV0.getEnumerateRowNames();
      assertEquals(822, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.5915074803809155
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      resultMatrixPlainText0.toArray();
      int int0 = resultMatrixPlainText0.getVisibleRowCount();
      assertEquals(1, int0);
      
      resultMatrixPlainText0.getDefaultRemoveFilterName();
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.127338682321895
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 1);
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      resultMatrixPlainText0.getCountWidth();
      ResultMatrixCSV resultMatrixCSV0 = null;
      try {
        resultMatrixCSV0 = new ResultMatrixCSV(1392, (-2041));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.345543575645329
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      
      resultMatrixSignificance0.setEnumerateColNames(false);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getVisibleColCount();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(9, 2);
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      boolean boolean0 = resultMatrixSignificance1.getEnumerateColNames();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.3866466356222644
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setEnumerateColNames(true);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.getVisibleColCount();
      int int0 = resultMatrixSignificance1.getCountWidth();
      assertEquals(0, int0);
      
      int int1 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(2, 0);
      assertEquals(2, resultMatrixGnuPlot1.getVisibleColCount());
      assertEquals(0, resultMatrixGnuPlot1.getVisibleRowCount());
      
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(resultMatrixSignificance1);
      boolean boolean0 = resultMatrixSignificance1.getEnumerateColNames();
      assertEquals(0, resultMatrixSignificance1.getSignificanceWidth());
      assertTrue(resultMatrixSignificance1.getPrintRowNames());
      assertEquals(2, resultMatrixSignificance1.getMeanPrec());
      assertEquals(0, resultMatrixSignificance1.getMeanWidth());
      assertEquals(2, resultMatrixSignificance1.getStdDevPrec());
      assertTrue(boolean0);
      assertEquals(1, resultMatrixSignificance1.getVisibleRowCount());
      assertFalse(resultMatrixSignificance1.getDefaultEnumerateRowNames());
      assertEquals(40, resultMatrixSignificance1.getRowNameWidth());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=4.075908377413953
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.WIN_STRING = "(";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.getOptions();
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV();
      resultMatrixCSV2.setMeanWidth(0);
      resultMatrixCSV1.setMeanPrec(1);
      assertEquals(1, resultMatrixCSV1.getMeanPrec());
      
      resultMatrixPlainText0.setSignificanceWidth(0);
      resultMatrixPlainText0.getSignificance(0, 2);
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.712519766090069
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.stdDevWidthTipText();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 0);
      resultMatrixPlainText0.setCount(0, 0);
      resultMatrixHTML0.toStringKey();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixHTML0.toStringKey();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      Vector<Object> vector0 = new Vector<Object>();
      Vector<Object> vector1 = new Vector<Object>();
      vector1.stream();
      vector1.stream();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV0.m_Wins = resultMatrixCSV1.m_Significance;
      assertTrue(resultMatrixCSV1.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      
      resultMatrixCSV0.getSignificance(0, 2);
      resultMatrixPlainText0.getSignificance(0, (-2223));
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      
      resultMatrixHTML0.isSignificance(0);
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertTrue(resultMatrixHTML0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=4.10889362114625
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 1);
      int[][] intArray0 = new int[1][0];
      int[] intArray1 = new int[2];
      intArray1[0] = (-2667);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(264, 2);
      resultMatrixPlainText0.setRanking(intArray0);
      resultMatrixPlainText0.setRowName(0, " ");
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=4.237603958401554
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(14, 32);
      int[] intArray0 = new int[1];
      resultMatrixPlainText0.toStringKey();
      intArray0[0] = 2;
      intArray0[0] = 10;
      resultMatrixPlainText0.m_EnumerateColNames = true;
      resultMatrixPlainText0.m_PrintColNames = true;
      resultMatrixPlainText0.m_ColOrder = intArray0;
      resultMatrixPlainText0.setMeanWidth(14);
      resultMatrixPlainText0.getShowStdDev();
      assertEquals(14, resultMatrixPlainText0.getMeanWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_StdDevWidth = 32;
      resultMatrixPlainText0.assign(resultMatrixLatex0);
      resultMatrixPlainText0.clearSummary();
      resultMatrixPlainText0.toStringSummary();
      String[] stringArray0 = new String[0];
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixPlainText0.setColName(0, "-summary data not set-");
      resultMatrixLatex0.getMeanWidth();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=4.237603524430094
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.getAverage(1);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixPlainText0.assign(resultMatrixGnuPlot0);
      resultMatrixPlainText0.clearSummary();
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      
      resultMatrixPlainText0.setShowStdDev(true);
      resultMatrixPlainText0.toStringSummary();
      resultMatrixLatex0.m_MeanWidth = 1;
      ResultMatrixGnuPlot.main((String[]) null);
      resultMatrixPlainText0.setColName(1, (String) null);
      resultMatrixLatex0.getMeanWidth();
      assertEquals(1, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.8315561731814127
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixPlainText0);
      String[] stringArray0 = resultMatrixCSV1.getOptions();
      assertEquals(19, stringArray0.length);
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertEquals(5, resultMatrixCSV1.getCountWidth());
      
      resultMatrixCSV0.setMeanWidth((-1480));
      resultMatrixCSV0.getColName(2);
      int[] intArray0 = new int[1];
      intArray0[0] = (-1);
      double double0 = resultMatrixCSV0.getMean(0, 1);
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.447165794573698
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(3, 3);
      resultMatrixCSV0.setMeanWidth((-286));
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV0.getEnumerateRowNames();
      resultMatrixCSV0.getRowHidden(2);
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(3, resultMatrixCSV0.getVisibleColCount());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(3, resultMatrixCSV0.getRowCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertFalse(resultMatrixPlainText0.getDefaultShowAverage());
      assertTrue(resultMatrixPlainText0.getDefaultPrintRowNames());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.386024164411558
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setEnumerateColNames(true);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.getVisibleColCount();
      resultMatrixSignificance1.getCountWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixSignificance1);
      resultMatrixGnuPlot0.getDefaultSignificanceWidth();
      resultMatrixGnuPlot0.setSize(0, 1);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.padString((String) null, 1, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=4.131013999477167
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.getOptions();
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV();
      resultMatrixCSV2.setMeanWidth(2);
      resultMatrixCSV0.setMeanPrec(39);
      resultMatrixCSV0.getColName(1);
      resultMatrixCSV0.getMean(0, 2);
      assertEquals(39, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.341825268282159
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      int int0 = resultMatrixPlainText0.getVisibleRowCount();
      assertEquals(2, resultMatrixPlainText0.getColCount());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertFalse(resultMatrixPlainText0.getDefaultShowAverage());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.2389485228733585
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.removeFilterName("(");
      int int0 = resultMatrixPlainText0.getSignificanceCount(1, 1);
      resultMatrixPlainText0.getDefaultRemoveFilterName();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.toStringSummary();
      int int1 = resultMatrixGnuPlot0.getStdDevWidth();
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertTrue(int1 == int0);
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultSignificanceWidth());
      assertEquals(0, int1);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=4.1081554817049994
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[1][0];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 1);
      resultMatrixPlainText0.setRanking(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixGnuPlot0.countWidthTipText();
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      
      resultMatrixPlainText0.getRevision();
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.2845658749149194
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_MeanWidth = (-1965);
      int[][] intArray0 = new int[7][0];
      resultMatrixHTML0.setPrintColNames(true);
      resultMatrixHTML0.m_Significance = intArray0;
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.getRowOrder();
      resultMatrixHTML0.getDefaultPrintColNames();
      assertTrue(resultMatrixHTML0.getPrintColNames());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.3354887981671304
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.globalInfo();
      resultMatrixPlainText0.clear();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      double double0 = resultMatrixGnuPlot0.getAverage(1);
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultPrintColNames();
      resultMatrixPlainText0.getPrintRowNames();
      resultMatrixPlainText0.countWidthTipText();
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertFalse(resultMatrixPlainText0.getShowStdDev());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=3.715116426371958
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.setOptions((String[]) null);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText0.setSignificanceWidth(0);
      resultMatrixPlainText1.getSignificance((-42), 10);
      assertEquals(5, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=3.4367466714741326
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader(" ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.9784351204401243
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.m_RankingWins = intArray0;
      resultMatrixGnuPlot0.setShowStdDev(true);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(2, 2);
      resultMatrixGnuPlot0.getRowName(1);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot1.assign(resultMatrixGnuPlot0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.7560044878122785
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.assign(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.setStdDevPrec(0);
      resultMatrixPlainText0.setOptions((String[]) null);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray1 = new int[1][4];
      intArray1[0] = intArray0;
      resultMatrixPlainText0.setRanking(intArray1);
      assertFalse(resultMatrixPlainText0.getPrintRowNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.toStringSummary();
      assertEquals(2, resultMatrixGnuPlot1.getMeanPrec());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.5863695561620528
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      int[][] intArray1 = new int[1][0];
      intArray1[0] = intArray0;
      resultMatrixPlainText0.setRanking(intArray1);
      ResultMatrixPlainText resultMatrixPlainText1 = null;
      try {
        resultMatrixPlainText1 = new ResultMatrixPlainText(7, (-4049));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=4.212829124653791
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.m_EnumerateRowNames = true;
      intArray0[0] = 1;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setShowAverage(true);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.toStringKey();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      int[] intArray1 = new int[8];
      intArray1[0] = 0;
      intArray1[1] = 2;
      intArray1[2] = 2;
      intArray1[3] = 1;
      intArray1[4] = 1;
      intArray1[5] = 1;
      intArray1[6] = (-1073);
      intArray1[7] = 2;
      resultMatrixPlainText0.m_RowOrder = intArray1;
      resultMatrixGnuPlot0.toString();
      resultMatrixPlainText1.getDefaultPrintColNames();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixPlainText1.getRowNameWidth();
      resultMatrixPlainText0.getOptions();
      assertTrue(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=4.006358892793209
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(10, 10);
      assertEquals(10, resultMatrixPlainText0.getVisibleRowCount());
      
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRowNameWidth(10);
      String[] stringArray0 = new String[2];
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixGnuPlot0.getDefaultShowStdDev();
      resultMatrixGnuPlot0.getDefaultShowStdDev();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=3.9323478602228517
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowNameWidth(1);
      resultMatrixLatex0.setRowOrder((int[]) null);
      resultMatrixLatex0.toArray();
      assertEquals(1, resultMatrixLatex0.getRowNameWidth());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.4859283519853634
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      int[][] intArray0 = new int[3][0];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_PrintColNames = false;
      String string0 = resultMatrixCSV0.significanceWidthTipText();
      assertEquals("The width of the significance indicator (0 = optimal).", string0);
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertFalse(resultMatrixCSV0.getShowAverage());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertTrue(resultMatrixCSV0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getDefaultStdDevWidth());
      assertEquals(1, resultMatrixCSV0.getColCount());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=3.1929008500088405
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(1, 2144);
      resultMatrixGnuPlot0.getRowName(97);
      // Undeclared exception!
      resultMatrixGnuPlot0.assign(resultMatrixGnuPlot1);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=3.5593846461665715
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 2);
      resultMatrixCSV0.setMeanPrec(94);
      resultMatrixCSV0.getColName(1);
      assertEquals(94, resultMatrixCSV0.getMeanPrec());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(1, 94);
      resultMatrixCSV1.getDisplayRow(94);
      resultMatrixCSV1.getRowHidden(1);
      resultMatrixCSV1.getColCount();
      assertFalse(resultMatrixCSV1.getDefaultShowStdDev());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.4478274984612085
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(14, 32);
      int[] intArray0 = new int[1];
      resultMatrixPlainText0.toStringKey();
      intArray0[0] = 2;
      resultMatrixPlainText0.m_EnumerateColNames = true;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "(";
      stringArray0[2] = "v";
      stringArray0[3] = ")";
      try { 
        resultMatrixPlainText0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.5866946272713576
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_PrintColNames = true;
      int[][] intArray0 = new int[1][0];
      int[] intArray1 = new int[2];
      intArray1[0] = 2;
      intArray1[1] = 2;
      intArray0[0] = intArray1;
      resultMatrixHTML0.m_NonSigWins = intArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.747686976080177
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringMatrix();
      resultMatrixPlainText0.m_ShowAverage = true;
      resultMatrixCSV0.setMeanWidth((-1480));
      resultMatrixCSV0.setMeanPrec(30);
      resultMatrixCSV0.getColName(2);
      resultMatrixCSV0.padString("", (-1480));
      resultMatrixCSV0.getMean(0, 1);
      assertEquals(30, resultMatrixCSV0.getMeanPrec());
      
      resultMatrixPlainText0.toStringRanking();
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.2837934341431327
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      int[][] intArray0 = new int[1][0];
      resultMatrixHTML0.m_Significance = intArray0;
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.getDefaultPrintRowNames();
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(0, resultMatrixHTML0.getDefaultCountWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=4.2376048766026715
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixPlainText0.setMeanWidth(2);
      resultMatrixPlainText0.getShowStdDev();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixPlainText0.assign(resultMatrixHTML0);
      resultMatrixPlainText0.clearSummary();
      resultMatrixPlainText0.toStringSummary();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "$circ$";
      stringArray0[1] = ")";
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixPlainText0.setColName(2, "(");
      resultMatrixLatex0.getMeanWidth();
      resultMatrixPlainText0.toArray();
      assertFalse(resultMatrixPlainText0.getPrintColNames());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=3.3888825529417446
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.clearRanking();
      String string0 = resultMatrixPlainText0.removeFilterName("Whether to show the row with averages.");
      assertEquals("Whether to show the row with averages.", string0);
      
      resultMatrixPlainText0.getColNameWidth();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.630732311167245
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowOrder(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setEnumerateRowNames(true);
      int int0 = resultMatrixGnuPlot0.getColNameWidth();
      assertTrue(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(50, int0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=3.587816646906701
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 1);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setMeanWidth(1102);
      resultMatrixCSV0.setMeanPrec((-1783));
      resultMatrixCSV0.getColName((-1783));
      resultMatrixCSV0.getMean((-473), 30);
      assertEquals(1102, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=3.9320109199001667
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      int[][] intArray0 = new int[1][0];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.rowNameWidthTipText();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      String string0 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=3.3983244363866114
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setCount(2, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 0);
      String string0 = resultMatrixHTML0.toStringKey();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td colspan=\"2\"><b>Key</b></td></tr>\n   <tr><td><b>(1)</b></td><td>col0</td></tr>\n   <tr><td><b>(2)</b></td><td>col1</td></tr>\n</table>\n", string0);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.getRevision();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      Vector<Object> vector0 = new Vector<Object>();
      Vector<Object> vector1 = new Vector<Object>();
      vector0.stream();
      vector0.stream();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixGnuPlot1);
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(1, 0);
      int int1 = resultMatrixCSV2.getSignificance(1, (-1217));
      assertEquals(0, int1);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixCSV1.getColCount();
      assertFalse(resultMatrixCSV1.getEnumerateRowNames());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertTrue(resultMatrixCSV1.getPrintRowNames());
      assertFalse(resultMatrixCSV1.getShowAverage());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
      assertTrue(resultMatrixCSV1.getPrintColNames());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=3.4765725836352708
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setShowAverage(true);
      resultMatrixPlainText0.globalInfo();
      resultMatrixPlainText0.globalInfo();
      resultMatrixPlainText0.getSignificanceCount(2704, 335);
      resultMatrixPlainText0.getDefaultRemoveFilterName();
      resultMatrixPlainText0.getDisplayCol(25);
      resultMatrixPlainText0.setSignificance(0, 48, 2);
      assertTrue(resultMatrixPlainText0.getShowAverage());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=3.5418197350207192
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringSummary();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV1.setRowName(6, "");
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColNameWidth(102);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.setSignificance(286, 1, 0);
      resultMatrixGnuPlot1.globalInfo();
      assertEquals(102, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(2, resultMatrixGnuPlot1.getStdDevPrec());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=3.5876867486603277
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringSummary();
      int[][] intArray0 = new int[1][0];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixPlainText0.setRanking(intArray0);
      assertEquals(0, resultMatrixPlainText0.getDefaultColNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.getColName((-442));
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertNull(string0);
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=3.337930120267627
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 1);
      int[][] intArray0 = new int[1][0];
      resultMatrixPlainText0.WIN_STRING = ")";
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      
      resultMatrixHTML0.m_Significance = intArray0;
      int[] intArray1 = new int[2];
      intArray1[0] = (-2667);
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.getDefaultRowNameWidth();
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(2, resultMatrixHTML0.getVisibleColCount());
      assertEquals(0, resultMatrixHTML0.getDefaultCountWidth());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=3.622202171231699
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(14, 32);
      int[] intArray0 = new int[1];
      resultMatrixPlainText0.toStringKey();
      intArray0[0] = 2;
      intArray0[0] = 34;
      resultMatrixPlainText0.m_PrintColNames = true;
      resultMatrixPlainText0.m_ColOrder = intArray0;
      resultMatrixPlainText0.setMeanWidth(14);
      resultMatrixPlainText0.getShowStdDev();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(4, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.trimString((String) null, (-877));
      resultMatrixPlainText0.setSize(4, 1639);
      assertEquals(4, resultMatrixPlainText0.getVisibleColCount());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=4.162095370469818
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowOrder(intArray0);
      String[][] stringArray0 = resultMatrixLatex0.toArray();
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(3, stringArray0.length);
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray1 = resultMatrixGnuPlot0.getOptions();
      assertEquals(18, stringArray1.length);
      
      resultMatrixGnuPlot0.printRowNamesTipText();
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=3.4694175114363275
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int int0 = 45;
      resultMatrixHTML0.getRowName(45);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.trimString((String) null, 45);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 142
  /*Coverage entropy=3.394516050961684
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 1);
      int[][] intArray0 = new int[1][0];
      resultMatrixHTML0.m_Significance = intArray0;
      int[] intArray1 = new int[2];
      intArray1[0] = (-2667);
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      assertEquals(1, resultMatrixHTML0.getRowCount());
      
      resultMatrixPlainText0.trimString("v", 374);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getDefaultStdDevWidth());
      assertTrue(resultMatrixPlainText0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getDefaultColNameWidth());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=3.830221916403395
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.setMeanWidth(3);
      resultMatrixCSV0.getColName(0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      double double0 = resultMatrixCSV0.getMean(0, 0);
      assertEquals(3, resultMatrixCSV0.getMeanWidth());
      assertEquals(Double.NaN, double0, 0.01);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=3.5863695561620528
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[1][0];
      int[] intArray1 = new int[2];
      intArray1[0] = (-2667);
      resultMatrixPlainText0.m_PrintRowNames = false;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(264, 2);
      resultMatrixPlainText0.setRanking(intArray0);
      resultMatrixPlainText0.setRowName((-2340), ") - ignored!");
      ResultMatrixHTML resultMatrixHTML0 = null;
      try {
        resultMatrixHTML0 = new ResultMatrixHTML(577, (-2667));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 145
  /*Coverage entropy=3.2581990330271293
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 1);
      assertEquals(2, resultMatrixHTML0.getVisibleColCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      
      int int0 = resultMatrixPlainText0.getVisibleRowCount();
      assertEquals(1, int0);
      
      resultMatrixPlainText0.getDefaultEnumerateRowNames();
      assertFalse(resultMatrixPlainText0.getShowAverage());
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=3.0213463113353973
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.getDefaultEnumerateColNames();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertFalse(resultMatrixPlainText0.getDefaultShowAverage());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertFalse(resultMatrixPlainText0.getShowStdDev());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=3.5354315286325124
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.removeFilterName("Whether to show the row with averages.");
      assertEquals("Whether to show the row with averages.", string0);
      
      resultMatrixPlainText0.getDisplayName();
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=3.5875941774962454
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2399, 0);
      resultMatrixLatex0.removeFilterName((String) null);
      int[] intArray0 = new int[4];
      intArray0[0] = 32;
      intArray0[1] = 0;
      intArray0[2] = 2;
      intArray0[3] = 2;
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.setCountWidth(2406);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      assertEquals(2406, resultMatrixLatex0.getCountWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.setMeanPrec(2);
      resultMatrixCSV0.getColName(1544);
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.getMean(1673, 2);
      resultMatrixCSV0.getDefaultShowAverage();
      assertEquals(0, resultMatrixCSV0.getColCount());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=3.932086063800736
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      int[] intArray0 = new int[12];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowOrder(intArray0);
      String[][] stringArray0 = resultMatrixLatex0.toArray();
      assertEquals(3, stringArray0.length);
      
      resultMatrixLatex0.setSignificance(97, 97, 97);
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=3.1788241335322733
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 2);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.getDefaultShowStdDev();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.setCountWidth(2);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(0, 2);
      Vector<Object> vector0 = new Vector<Object>();
      assertEquals(10, vector0.capacity());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=3.4884858967423966
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.setCountWidth(0);
      resultMatrixPlainText0.addHeader("]", "*");
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertFalse(resultMatrixPlainText0.getDefaultShowAverage());
      assertEquals(0, resultMatrixPlainText0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=3.869069306665694
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getOptions();
      resultMatrixLatex0.padString("", 292, true);
      resultMatrixLatex0.setMeanWidth(26);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      double[][] doubleArray0 = new double[2][0];
      double[] doubleArray1 = new double[4];
      doubleArray1[1] = (double) 1;
      doubleArray1[2] = 600.0;
      doubleArray1[3] = 1.0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[8];
      doubleArray2[0] = (double) 292;
      doubleArray2[1] = 600.0;
      doubleArray2[2] = (double) 26;
      doubleArray2[3] = (double) 292;
      doubleArray2[4] = (double) 26;
      doubleArray2[5] = (double) 2;
      doubleArray2[6] = (double) 292;
      doubleArray2[7] = (double) 2;
      doubleArray0[1] = doubleArray2;
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.setRowName(1, "(");
      assertEquals(26, resultMatrixLatex0.getMeanWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColNameWidth(629);
      intArray0[0] = 746;
      resultMatrixGnuPlot0.m_RankingDiff = intArray0;
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.setSignificance(1, (-1440), 2);
      resultMatrixGnuPlot0.globalInfo();
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=3.5420098749093514
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertTrue(resultMatrixSignificance0.getDefaultEnumerateColNames());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.setRowName(1, "v");
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColNameWidth((-314));
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.setSignificance(2, 1, (-1));
      resultMatrixGnuPlot1.globalInfo();
      assertEquals(0, resultMatrixGnuPlot1.getMeanWidth());
      assertEquals(1, resultMatrixGnuPlot1.getRowCount());
      assertTrue(resultMatrixGnuPlot1.getDefaultPrintColNames());
      assertFalse(resultMatrixGnuPlot1.getShowAverage());
      assertEquals(2, resultMatrixGnuPlot1.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot1.getDefaultMeanPrec());
      assertEquals(1, resultMatrixGnuPlot1.getVisibleColCount());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=4.054187968681989
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      
      resultMatrixHTML0.stdDevWidthTipText();
      resultMatrixHTML0.listOptions();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1705);
      resultMatrixPlainText0.setCount(0, (-316.3839181));
      String string0 = resultMatrixHTML0.toStringKey();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td colspan=\"2\"><b>Key</b></td></tr>\n   <tr><td><b>(1)</b></td><td>col0</td></tr>\n</table>\n", string0);
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.getDefaultPrintColNames();
      String string1 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string1);
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=4.054149020722027
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.stdDevWidthTipText();
      resultMatrixHTML0.listOptions();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 0);
      resultMatrixPlainText0.setCount(0, 0);
      resultMatrixPlainText0.setShowAverage(false);
      assertEquals(0, resultMatrixPlainText0.getRowCount());
      
      String string0 = resultMatrixHTML0.toStringKey();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td colspan=\"2\"><b>Key</b></td></tr>\n   <tr><td><b>(1)</b></td><td>col0</td></tr>\n</table>\n", string0);
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.getDefaultPrintColNames();
      assertEquals(0, resultMatrixPlainText1.getColNameWidth());
      assertEquals(1, resultMatrixPlainText1.getVisibleColCount());
      
      String string1 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string1);
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
  }

  /**
  //Test case number: 156
  /*Coverage entropy=3.288502144830571
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[0][6];
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 157
  /*Coverage entropy=3.434635057597813
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray1 = new int[4][7];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      resultMatrixHTML0.setSummary(intArray1, intArray1);
      assertFalse(resultMatrixHTML0.getDefaultEnumerateRowNames());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getDefaultSignificanceWidth());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(0, resultMatrixHTML0.getDefaultStdDevWidth());
      assertFalse(resultMatrixHTML0.getShowStdDev());
      assertEquals(1, resultMatrixHTML0.getColCount());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=3.434635057597813
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 159
  /*Coverage entropy=3.265949768777685
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("", "");
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      String string0 = resultMatrixGnuPlot1.padString("v", 2);
      assertEquals("v ", string0);
      
      resultMatrixGnuPlot1.clear();
      double double0 = resultMatrixGnuPlot1.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      assertEquals(0, resultMatrixGnuPlot2.getMeanWidth());
      assertEquals(0, resultMatrixGnuPlot2.getCountWidth());
      assertFalse(resultMatrixGnuPlot2.getEnumerateColNames());
      assertTrue(resultMatrixGnuPlot2.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot2.getSignificanceWidth());
      
      resultMatrixGnuPlot0.toStringSummary();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=3.6182030786227553
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.toArray();
      resultMatrixLatex0.getDefaultShowAverage();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 161
  /*Coverage entropy=3.5880838734766574
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 1);
      resultMatrixHTML0.m_PrintColNames = true;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.setStdDevPrec(1);
      resultMatrixCSV0.getDisplayRow(2);
      assertEquals(1, resultMatrixCSV0.getStdDevPrec());
      
      resultMatrixSignificance0.getDefaultShowStdDev();
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=3.5394719326729165
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      assertEquals(2, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(0, resultMatrixGnuPlot0.getRowCount());
      
      boolean boolean0 = resultMatrixPlainText0.isRowName(6);
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertFalse(resultMatrixPlainText0.getDefaultShowStdDev());
      assertFalse(boolean0);
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=4.053864381964191
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[1];
      resultMatrixPlainText0.clearHeader();
      String string0 = resultMatrixPlainText0.toString();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixPlainText0.stdDevPrecTipText();
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixPlainText0.getColCount());
  }

  /**
  //Test case number: 164
  /*Coverage entropy=3.337588728123289
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[11][0];
      resultMatrixHTML0.m_Significance = intArray0;
      int int0 = resultMatrixHTML0.getMeanWidth();
      assertEquals(0, int0);
      
      resultMatrixHTML0.enumerateRowNamesTipText();
      boolean boolean0 = resultMatrixHTML0.getShowStdDev();
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertFalse(boolean0);
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertTrue(resultMatrixHTML0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 165
  /*Coverage entropy=3.5876867486603277
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setSignificanceWidth(2258);
      assertEquals(2258, resultMatrixPlainText0.getSignificanceWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 2);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(0, 1);
      resultMatrixGnuPlot0.isAverage(1);
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
  }

  /**
  //Test case number: 166
  /*Coverage entropy=3.5868407726860454
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int int0 = resultMatrixPlainText0.getDisplayCol(2);
      assertEquals((-1), int0);
      
      resultMatrixPlainText0.setSignificanceWidth((-1));
      assertFalse(resultMatrixPlainText0.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(0, resultMatrixPlainText0.getDefaultColNameWidth());
  }

  /**
  //Test case number: 167
  /*Coverage entropy=3.5843757866916475
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setStdDevWidth((-4798));
      resultMatrixLatex0.setStdDevWidth(1682);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 168
  /*Coverage entropy=3.48629831128984
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultColNameWidth();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getDefaultStdDevWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertFalse(resultMatrixLatex0.getShowAverage());
      assertFalse(resultMatrixLatex0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 169
  /*Coverage entropy=3.5400976589623596
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColNameWidth(92);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
  }

  /**
  //Test case number: 170
  /*Coverage entropy=3.0761128457263034
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 1);
      resultMatrixGnuPlot0.setStdDevPrec(0);
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      assertEquals(5, resultMatrixGnuPlot0.getCountWidth());
  }

  /**
  //Test case number: 171
  /*Coverage entropy=3.981408026350807
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = resultMatrixPlainText0.getOptions();
      assertEquals(19, stringArray0.length);
      
      int int0 = resultMatrixPlainText0.getDisplayCol(0);
      assertEquals(0, int0);
      
      resultMatrixPlainText0.globalInfo();
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      
      String string0 = resultMatrixGnuPlot0.showAverageTipText();
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals("Whether to show the row with averages.", string0);
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
  }

  /**
  //Test case number: 172
  /*Coverage entropy=4.243633672426737
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 1);
      resultMatrixHTML0.m_PrintColNames = true;
      resultMatrixPlainText0.getShowStdDev();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixPlainText0.assign(resultMatrixHTML0);
      resultMatrixPlainText0.clearSummary();
      resultMatrixPlainText0.toStringSummary();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "*";
      stringArray0[1] = "(";
      stringArray0[2] = "(";
      stringArray0[3] = " ";
      stringArray0[4] = ")";
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixPlainText0.setColName((-344), "*");
      resultMatrixLatex0.getMeanWidth();
      resultMatrixHTML0.getPrintColNames();
      resultMatrixPlainText0.addHeader("5%^1z>=KIu|:yuam", "wlk(GR`");
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
  }

  /**
  //Test case number: 173
  /*Coverage entropy=3.2282744338409093
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.doubleToString((-435.7717), (-2435));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 174
  /*Coverage entropy=3.7542797441283535
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setMeanWidth(0);
      resultMatrixSignificance0.setEnumerateColNames(false);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixSignificance0.doubleToString(0, 2);
      resultMatrixCSV0.clearSummary();
      resultMatrixCSV0.isAverage(1);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "v";
      stringArray0[1] = "v";
      stringArray0[2] = "0.00";
      stringArray0[3] = "*";
      double[][] doubleArray0 = new double[6][2];
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = 501.886462;
      doubleArray1[2] = (double) 2;
      doubleArray1[3] = (double) 2;
      doubleArray1[4] = (-1.0);
      doubleArray1[5] = (double) 2;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (-275.006);
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = (double) 0;
      doubleArray2[4] = (double) 0;
      doubleArray2[5] = 501.886462;
      doubleArray2[6] = (double) 2;
      doubleArray2[7] = (-1.0);
      doubleArray2[8] = (-1230.248);
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[5];
      doubleArray3[0] = (-275.006);
      doubleArray3[1] = (double) 0;
      doubleArray3[2] = (-1230.248);
      doubleArray3[3] = (-1230.248);
      doubleArray3[4] = (double) 0;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[8];
      doubleArray4[0] = (double) 0;
      doubleArray4[1] = (-1.0);
      doubleArray4[2] = (double) 0;
      doubleArray4[3] = (-1.0);
      doubleArray4[4] = 3481.03543671;
      doubleArray4[5] = (double) 0;
      doubleArray4[6] = (double) 0;
      doubleArray4[7] = (-275.006);
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[9];
      doubleArray5[0] = (double) 1;
      doubleArray5[1] = (-275.006);
      doubleArray5[2] = (double) 1;
      doubleArray5[3] = 612.2951458517414;
      doubleArray5[4] = (double) 2;
      doubleArray5[5] = 501.886462;
      doubleArray5[6] = (double) 0;
      doubleArray5[7] = 1655.984329756;
      doubleArray5[8] = 3481.03543671;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[3];
      doubleArray6[0] = (double) 0;
      doubleArray6[1] = (double) 0;
      doubleArray6[2] = (-1.0);
      doubleArray0[5] = doubleArray6;
      resultMatrixCSV0.m_Mean = doubleArray0;
      stringArray0[4] = "0.00";
      resultMatrixCSV0.m_ColNames = stringArray0;
      resultMatrixSignificance0.setMeanPrec(902);
      resultMatrixCSV0.printColNamesTipText();
      resultMatrixCSV0.padString(" ", 1, false);
      resultMatrixCSV0.getRowOrder();
      resultMatrixSignificance0.toStringKey();
      resultMatrixCSV0.getPrintColNames();
      ResultMatrixPlainText resultMatrixPlainText0 = null;
      try {
        resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 175
  /*Coverage entropy=3.4838989307621984
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int int0 = resultMatrixSignificance0.getVisibleColCount();
      assertEquals(1, int0);
      
      int int1 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixSignificance0.isStdDev(185);
      resultMatrixSignificance0.isAverage(1);
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 176
  /*Coverage entropy=3.2853500262431226
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.setStdDevPrec(1);
      resultMatrixGnuPlot1.getAverage(0);
      assertEquals(1, resultMatrixGnuPlot1.getStdDevPrec());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.doubleToString((-1.0), 1386);
      resultMatrixLatex0.getStdDev(2, 101);
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 177
  /*Coverage entropy=3.4355566274927716
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int int0 = resultMatrixPlainText0.getDisplayCol(0);
      assertEquals(0, int0);
      
      resultMatrixPlainText0.globalInfo();
      resultMatrixGnuPlot0.getRowOrder();
      int int1 = resultMatrixGnuPlot0.getDisplayRow(1);
      assertEquals((-1), int1);
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
  }

  /**
  //Test case number: 178
  /*Coverage entropy=4.16349548230802
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.m_EnumerateColNames = true;
      resultMatrixHTML0.addHeader("8034", "");
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String string0 = resultMatrixHTML0.toString();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixHTML0.getShowStdDev();
      String string1 = resultMatrixHTML0.padString("", 0);
      assertEquals("", string1);
      
      resultMatrixHTML0.getRowName(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.isStdDev(2);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      String string2 = resultMatrixCSV0.doubleToString(0.0, 0);
      assertEquals("0.", string2);
      
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixHTML0.getDefaultShowAverage();
      resultMatrixCSV0.getDisplayRow(50);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "*";
      stringArray0[1] = "8034";
      stringArray0[2] = "8034";
      stringArray0[4] = "v";
      stringArray0[5] = "*";
      stringArray0[6] = "*";
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixCSV0.getVisibleRowCount();
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      
      resultMatrixSignificance0.setCountWidth((-1));
      resultMatrixHTML0.printColNamesTipText();
      assertFalse(resultMatrixHTML0.getShowAverage());
  }

  /**
  //Test case number: 179
  /*Coverage entropy=3.8992365973484286
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      String string0 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      resultMatrixCSV0.setMeanWidth((-1480));
      resultMatrixCSV0.getColCount();
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
  }

  /**
  //Test case number: 180
  /*Coverage entropy=3.6312207116556454
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      
      resultMatrixSignificance0.setEnumerateColNames(false);
      resultMatrixSignificance0.getVisibleColCount();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 2);
      resultMatrixSignificance0.m_PrintRowNames = true;
      resultMatrixGnuPlot0.setSize(2388, 2);
      int int1 = ResultMatrix.SIGNIFICANCE_WIN;
      resultMatrixSignificance0.showStdDevTipText();
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 181
  /*Coverage entropy=3.5376731226549287
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth((-1178));
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      
      String string0 = resultMatrixGnuPlot0.getRowName(0);
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
      assertEquals("row0", string0);
  }

  /**
  //Test case number: 182
  /*Coverage entropy=3.2913621952206604
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.clearSummary();
      resultMatrixSignificance0.m_RowNameWidth = 10;
      int int0 = resultMatrixSignificance0.getVisibleColCount();
      assertEquals(1, int0);
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getDefaultMeanWidth());
      assertTrue(resultMatrixSignificance0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 183
  /*Coverage entropy=3.3337897062262227
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[1][0];
      resultMatrixHTML0.m_Significance = intArray0;
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      int int0 = resultMatrixHTML0.getMeanWidth();
      assertEquals(0, int0);
      
      resultMatrixHTML0.enumerateRowNamesTipText();
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getDefaultCountWidth());
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 184
  /*Coverage entropy=3.2440839413522906
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.globalInfo();
      int[][] intArray0 = new int[1][0];
      int[] intArray1 = new int[2];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixPlainText0.setRanking(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      int int0 = resultMatrixPlainText0.getStdDevPrec();
      assertEquals(2, int0);
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertEquals(0, resultMatrixPlainText0.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 185
  /*Coverage entropy=3.1777974651962273
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(5, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringRanking();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      resultMatrixCSV0.getColOrder();
      assertFalse(resultMatrixCSV0.getDefaultShowAverage());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
  }

  /**
  //Test case number: 186
  /*Coverage entropy=3.8923930484350926
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.setSize(0, 2);
      resultMatrixCSV0.getSummaryTitle(0);
      resultMatrixGnuPlot0.getRowName(0);
      assertEquals(0, resultMatrixGnuPlot0.getVisibleColCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toString();
      resultMatrixPlainText0.getDefaultMeanWidth();
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
  }

  /**
  //Test case number: 187
  /*Coverage entropy=3.1913662210863785
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      
      String string0 = resultMatrixGnuPlot0.getRowName(0);
      assertNotNull(string0);
      assertEquals("row0", string0);
      
      String string1 = resultMatrixGnuPlot0.getSummaryTitle(29);
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals("d", string1);
  }

  /**
  //Test case number: 188
  /*Coverage entropy=4.10726827760773
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixGnuPlot0.setRowNameWidth(0);
      resultMatrixPlainText0.getDisplayCol(0);
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(18, stringArray0.length);
  }

  /**
  //Test case number: 189
  /*Coverage entropy=3.343534983126148
  */
  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getRowCount();
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      
      resultMatrixGnuPlot1.listOptions();
      assertFalse(resultMatrixGnuPlot1.getShowStdDev());
      assertEquals(2, resultMatrixGnuPlot1.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot1.getDefaultMeanPrec());
  }

  /**
  //Test case number: 190
  /*Coverage entropy=3.53575050789886
  */
  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.clearHeader();
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      int int1 = ResultMatrix.SIGNIFICANCE_WIN;
      String string0 = resultMatrixSignificance0.padString("+.@~", 1);
      assertEquals("+", string0);
      
      String string1 = resultMatrixSignificance0.enumerateColNamesTipText();
      assertEquals("Whether to enumerate the column names (prefixing them with '(x)', with 'x' being the index).", string1);
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertFalse(resultMatrixSignificance0.getShowAverage());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
  }

  /**
  //Test case number: 191
  /*Coverage entropy=3.48629831128984
  */
  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(3, 3);
      resultMatrixHTML0.getDisplayName();
      String string0 = resultMatrixHTML0.padString("{iW&~^Z", 3, true);
      assertEquals("{iW", string0);
      
      resultMatrixHTML0.getRemoveFilterName();
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
      assertEquals(3, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertTrue(resultMatrixHTML0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 192
  /*Coverage entropy=3.7729862111630568
  */
  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(18, stringArray0.length);
      
      String string0 = resultMatrixGnuPlot0.padString("\tWhether to show the row with averages.\n\t(default: no)", (-1777), true);
      assertEquals("\tWhether to show the row with averages.\n\t(default: no)", string0);
      
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 193
  /*Coverage entropy=3.5396680687913826
  */
  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int int0 = resultMatrixPlainText0.getDisplayCol(1);
      assertEquals((-1), int0);
      
      resultMatrixPlainText0.globalInfo();
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertFalse(resultMatrixPlainText0.getDefaultShowAverage());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 194
  /*Coverage entropy=3.316477374919196
  */
  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      int int0 = resultMatrixPlainText0.getVisibleRowCount();
      assertEquals(1, int0);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.getStdDev(1, 1);
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(5, resultMatrixLatex0.getCountWidth());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertTrue(resultMatrixLatex0.getPrintColNames());
  }

  /**
  //Test case number: 195
  /*Coverage entropy=3.53984954052716
  */
  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      String string0 = resultMatrixCSV0.getColName(0);
      assertEquals("col0", string0);
      assertNotNull(string0);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV1.getMean(1, 0);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
  }

  /**
  //Test case number: 196
  /*Coverage entropy=3.258260071908897
  */
  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 2);
      int int0 = resultMatrixPlainText0.getVisibleRowCount();
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      assertFalse(resultMatrixPlainText0.getDefaultEnumerateRowNames());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 197
  /*Coverage entropy=3.4884858967423966
  */
  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      int[][] intArray0 = new int[1][0];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.getColHidden(1);
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(40, resultMatrixLatex0.getRowNameWidth());
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
  }

  /**
  //Test case number: 198
  /*Coverage entropy=3.281605848690576
  */
  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[1][0];
      resultMatrixHTML0.setMeanPrec(2744);
      resultMatrixHTML0.m_Significance = intArray0;
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      assertEquals(2744, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 199
  /*Coverage entropy=3.230141847473029
  */
  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int int0 = resultMatrixSignificance0.getVisibleColCount();
      assertEquals(1, int0);
      
      int int1 = ResultMatrix.SIGNIFICANCE_WIN;
      resultMatrixSignificance0.setColHidden(14, false);
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
  }

  /**
  //Test case number: 200
  /*Coverage entropy=4.076099296061091
  */
  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.setMeanWidth(3);
      resultMatrixCSV0.setMeanPrec(1);
      resultMatrixCSV0.getColName(0);
      assertEquals(3, resultMatrixCSV0.getMeanWidth());
      
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV2.getMean(1, 0);
      resultMatrixGnuPlot0.getAverage((-89));
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
  }

  /**
  //Test case number: 201
  /*Coverage entropy=3.936393249863821
  */
  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(10, 10);
      assertEquals(10, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(10, resultMatrixPlainText0.getColCount());
      
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRowNameWidth(10);
      assertEquals(10, resultMatrixGnuPlot0.getRowNameWidth());
      
      resultMatrixPlainText0.globalInfo();
      assertEquals(10, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(10, resultMatrixPlainText0.getRowCount());
  }

  /**
  //Test case number: 202
  /*Coverage entropy=3.7963076084215808
  */
  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot1);
      assertEquals(1, resultMatrixPlainText0.getColCount());
      
      String string0 = resultMatrixPlainText0.toString();
      assertEquals("Dataset                                               col0\n----------------------------------------------------------\nrow0                                              (0)    |\n----------------------------------------------------------\nv/ /*                                                    |\n", string0);
      
      resultMatrixPlainText0.toStringRanking();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
  }

  /**
  //Test case number: 203
  /*Coverage entropy=4.025432880831377
  */
  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 1);
      assertEquals(2, resultMatrixHTML0.getVisibleColCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      assertEquals(5, resultMatrixGnuPlot0.getCountWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      
      resultMatrixPlainText0.getVisibleRowCount();
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td><td align=\"center\" colspan=\"2\"><b>(2)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td><td align=\"right\">&nbsp;</td><td align=\"center\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td><td align=\"right\">&nbsp;</td><td align=\"center\">(0/0/0)</td></tr>\n</table>\n", string0);
  }

  /**
  //Test case number: 204
  /*Coverage entropy=4.078568443406605
  */
  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getOptions();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 205
  /*Coverage entropy=3.9321004120323164
  */
  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowOrder(intArray0);
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      String[][] stringArray0 = resultMatrixLatex0.toArray();
      assertEquals(3, stringArray0.length);
      
      resultMatrixLatex0.setSignificance(97, 97, 97);
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
  }

  /**
  //Test case number: 206
  /*Coverage entropy=3.58676894908481
  */
  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      double double0 = resultMatrixLatex0.getStdDev(0, 0);
      assertEquals(0.0, double0, 0.01);
      
      resultMatrixLatex0.toStringRanking();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
  }

  /**
  //Test case number: 207
  /*Coverage entropy=3.5862805485964095
  */
  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(1, resultMatrixPlainText0.getColCount());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      double double0 = resultMatrixLatex0.getStdDev(0, 2);
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getVisibleRowCount());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
  }

  /**
  //Test case number: 208
  /*Coverage entropy=3.438414882780898
  */
  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getAverage(2);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.toStringSummary();
      assertEquals(50, resultMatrixGnuPlot1.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot1.getMeanWidth());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(0, resultMatrixGnuPlot1.getStdDevWidth());
      assertTrue(resultMatrixGnuPlot1.getPrintColNames());
      assertFalse(resultMatrixGnuPlot1.getEnumerateColNames());
      assertEquals(0, resultMatrixGnuPlot1.getSignificanceWidth());
      assertEquals(1, resultMatrixGnuPlot1.getRowCount());
      assertEquals(0, resultMatrixGnuPlot1.getDefaultCountWidth());
      assertEquals(2, resultMatrixGnuPlot1.getStdDevPrec());
  }

  /**
  //Test case number: 209
  /*Coverage entropy=3.5363257164119464
  */
  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.getMean(33, 33);
      String string0 = resultMatrixLatex0.enumerateRowNamesTipText();
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertEquals("Whether to enumerate the row names (prefixing them with '(x)', with 'x' being the index).", string0);
  }

  /**
  //Test case number: 210
  /*Coverage entropy=3.434635057597813
  */
  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setColHidden((-1086), false);
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
  }

  /**
  //Test case number: 211
  /*Coverage entropy=3.487795765617483
  */
  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setPrintRowNames(false);
      int int0 = resultMatrixSignificance0.getVisibleColCount();
      assertFalse(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 212
  /*Coverage entropy=3.2372798489319927
  */
  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      String string0 = resultMatrixGnuPlot0.getRowName(0);
      assertNotNull(string0);
      assertEquals("row0", string0);
      
      resultMatrixGnuPlot0.removeFilterNameTipText();
      resultMatrixCSV0.isStdDev(2);
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertFalse(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 213
  /*Coverage entropy=3.438691852729659
  */
  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.setMeanWidth(1);
      resultMatrixCSV0.setMeanPrec(0);
      resultMatrixCSV0.getColName(2);
      assertEquals(0, resultMatrixCSV0.getMeanPrec());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
  }
}
