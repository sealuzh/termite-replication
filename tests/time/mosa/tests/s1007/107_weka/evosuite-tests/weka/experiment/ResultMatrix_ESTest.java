/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 27 15:34:17 GMT 2020
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.0899824785887566
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int int0 = 8;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 8);
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 1;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.getColCount();
      resultMatrixHTML0.setSize(48, 0);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.3626909365899262
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixHTML0.m_ColNameWidth = (-4440);
      resultMatrixPlainText1.getCount(0);
      resultMatrixPlainText1.getDisplayRow(0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.1917849962983
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(32, 26);
      resultMatrixHTML0.m_ColNameWidth = 32;
      resultMatrixHTML0.toString();
      // Undeclared exception!
      resultMatrixHTML0.toArray();
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.6023807799324836
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.getEnumerateColNames();
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.3356379301933217
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.m_RemoveFilterName = true;
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.getCount(0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.393143886712377
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixSignificance0.m_ShowAverage = true;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.setStdDevWidth(0);
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.getCount(2);
      resultMatrixPlainText0.getShowAverage();
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.004227225393763
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "Vd1J=qMZs`{pzBs(#K";
      stringArray0[1] = "yhk^UiWb^#Lq*/4e#Y";
      stringArray0[2] = "v";
      stringArray0[3] = "(";
      stringArray0[4] = "-stddev-width";
      stringArray0[5] = ")";
      try { 
        resultMatrixCSV0.setOptions(stringArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \")\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.897832993428929
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[20][0];
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixHTML0.getSignificanceCount(0, 0);
      resultMatrixHTML0.getColHidden(0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.508940662146934
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      String[] stringArray0 = new String[1];
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getStdDevWidth();
      resultMatrixCSV0.isMean(0);
      ResultMatrixHTML.main(stringArray0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      String[][] stringArray0 = new String[9][1];
      String[] stringArray1 = new String[3];
      stringArray1[0] = "*";
      stringArray1[1] = " ";
      stringArray1[2] = " ";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[4];
      stringArray2[0] = "\n5. last row missing, rows numbered too\n";
      stringArray2[1] = ")";
      stringArray2[2] = "(";
      stringArray2[3] = "row";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[6];
      stringArray3[0] = "\n5. last row missing, rows numbered too\n";
      stringArray3[1] = "\n5. last row missing, rows numbered too\n";
      stringArray3[2] = "\n5. last row missing, rows numbered too\n";
      stringArray3[3] = "*";
      stringArray3[4] = "row";
      stringArray3[5] = " ";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[0];
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[1];
      stringArray5[0] = "\n5. last row missing, rows numbered too\n";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[1];
      stringArray6[0] = "M^f5#LzWbfn_Z[N[!";
      stringArray0[5] = stringArray6;
      String[] stringArray7 = new String[7];
      stringArray7[0] = "v";
      stringArray7[1] = ")";
      stringArray7[2] = "v";
      stringArray7[3] = "row";
      stringArray7[4] = "B]7F|:q";
      stringArray7[5] = ")";
      stringArray7[6] = "*";
      stringArray0[6] = stringArray7;
      String[] stringArray8 = new String[1];
      stringArray8[0] = "\n5. last row missing, rows numbered too\n";
      stringArray0[7] = stringArray8;
      String[] stringArray9 = new String[6];
      stringArray9[0] = " ";
      stringArray9[1] = ")";
      stringArray9[2] = "\n5. last row missing, rows numbered too\n";
      stringArray9[3] = ")";
      stringArray9[4] = "(";
      stringArray9[5] = ")";
      stringArray0[8] = stringArray9;
      resultMatrixHTML0.getColSize(stringArray0, (-2166));
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.546725566899075
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.getCount(1);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.4201157898815353
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_MeanPrec = (-2992);
      resultMatrixSignificance0.m_ShowAverage = true;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      Vector<String> vector0 = new Vector<String>();
      resultMatrixGnuPlot0.m_HeaderKeys = vector0;
      resultMatrixGnuPlot0.setColOrder((int[]) null);
      resultMatrixGnuPlot0.trimString("v", 0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.575873103656227
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_ShowAverage = true;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.setShowStdDev(true);
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.getCount(2);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.4186834206781342
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.toStringMatrix();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[5];
      resultMatrixPlainText0.setEnumerateColNames(true);
      intArray0[0] = 5004;
      resultMatrixGnuPlot0.m_PrintColNames = false;
      intArray0[1] = 0;
      intArray0[2] = (-2917);
      intArray0[3] = 1;
      intArray0[4] = 0;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.getMeanWidth();
      resultMatrixPlainText1.trimString("Q", 1);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.63528734709751
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_ColNameWidth = 2;
      resultMatrixHTML0.toString();
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.512168324285829
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setSignificance(1, 2, 1);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.510305126649146
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getStdDevWidth();
      resultMatrixCSV0.getColHidden(0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.1634240504234032
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_ShowAverage = true;
      resultMatrixSignificance0.getVisibleRowCount();
      resultMatrixSignificance0.isAverage(1);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.782355920889567
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixHTML0.getDefaultPrintRowNames();
      resultMatrixHTML0.trimString("", 125);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.1278794104545113
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_MeanWidth = 1745;
      resultMatrixCSV0.setColName(1, "-mean-mr|c");
      resultMatrixCSV0.headerKeys();
      resultMatrixCSV0.toStringMatrix();
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.120291565301284
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(7, 7);
      resultMatrixCSV0.setColName(0, ") ");
      resultMatrixCSV0.headerKeys();
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getColNameWidth();
      resultMatrixHTML0.stdDevPrecTipText();
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setColName((-840), "K}j>]_gYp");
      resultMatrixCSV0.headerKeys();
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setColName(2, "");
      resultMatrixCSV0.headerKeys();
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.279991841188012
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_ShowAverage = true;
      resultMatrixSignificance0.getVisibleRowCount();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.getOptions();
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.229939865134008
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_ShowAverage = true;
      resultMatrixHTML0.toString();
      resultMatrixHTML0.countWidthTipText();
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.43698399347168
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      int[][] intArray0 = new int[30][3];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setShowStdDev(true);
      resultMatrixCSV0.setSummary(intArray0, intArray0);
      resultMatrixCSV0.getOptions();
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.7368184083473874
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[20][0];
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixHTML0.toStringSummary();
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.246601712090598
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setOptions((String[]) null);
      resultMatrixCSV0.getStdDevPrec();
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.044404464687264
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 0);
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.isSignificance((-1));
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.294780954659566
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      int[][] intArray0 = new int[16][3];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setSummary(intArray0, intArray0);
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.getEnumerateColNames();
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.513257425747965
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.padString("", (-2720));
      resultMatrixCSV0.getStdDevWidth();
      resultMatrixCSV0.removeFilterName("weka.core.RevisionUtils");
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.5764989156360785
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "v";
      resultMatrixHTML0.getRowName(2358);
      stringArray0[1] = "(";
      stringArray0[2] = "heade(r1";
      stringArray0[3] = "";
      stringArray0[4] = ")";
      stringArray0[5] = "heade(r1";
      stringArray0[6] = "heade(r1";
      resultMatrixHTML0.m_CountWidth = 25;
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getOptions();
      resultMatrixHTML0.getCountWidth();
      resultMatrixHTML0.getDefaultEnumerateColNames();
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.791039810954727
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[4][0];
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixHTML0.getShowAverage();
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.92887993459394
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "v";
      stringArray0[1] = "(";
      stringArray0[2] = "]";
      stringArray0[3] = "v";
      stringArray0[4] = ")";
      resultMatrixHTML0.m_ColNames = stringArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.removeFilterName("V[3");
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringKey();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.2270050582485554
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setEnumerateRowNames(false);
      resultMatrixHTML0.toString();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.getPrintRowNames();
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.5923581798360886
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[1][0];
      resultMatrixHTML0.setRanking(intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.toStringMatrix();
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.5805376244873655
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[0][0];
      resultMatrixHTML0.setRanking(intArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.2503943490116374
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_ShowAverage = true;
      resultMatrixHTML0.getSummaryTitle((-1252));
      resultMatrixHTML0.toString();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.4780207928048776
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getOptions();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixHTML0.clearHeader();
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixHTML0.toStringKey();
      resultMatrixGnuPlot0.getSignificance(0, 1);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.134162458586648
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixCSV0.setColOrder((int[]) null);
      resultMatrixGnuPlot0.setColOrder((int[]) null);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixGnuPlot0.setRowOrder((int[]) null);
      resultMatrixGnuPlot0.getSignificance(0, 2);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.4260759166155252
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      int[][] intArray0 = new int[32][3];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setRemoveFilterName(true);
      resultMatrixCSV0.setSummary(intArray0, intArray0);
      resultMatrixCSV0.getOptions();
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.2794518157267287
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setOptions((String[]) null);
      resultMatrixCSV0.setMean((-24), (-2070), (-24));
      resultMatrixCSV0.getPrintRowNames();
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.3898098232595575
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(6, 6);
      resultMatrixHTML0.toStringSummary();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.getDefaultPrintColNames();
      double[][] doubleArray0 = new double[1][5];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 2;
      doubleArray1[1] = (double) 1;
      doubleArray1[2] = (double) 1;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 6;
      doubleArray1[5] = (double) 0;
      doubleArray1[6] = (double) 2;
      doubleArray0[0] = doubleArray1;
      resultMatrixLatex0.m_StdDev = doubleArray0;
      resultMatrixHTML0.setMean(6, 0, 0.0);
      resultMatrixHTML0.getColHidden((-664));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "v";
      ResultMatrixCSV.main(stringArray0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.868132823350103
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      int[][] intArray0 = new int[1][3];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setSummary(intArray0, intArray0);
      resultMatrixCSV0.isMean(44);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[2];
      intArray0[1] = 0;
      resultMatrixHTML0.isMean(359);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.610917912644226
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setOptions((String[]) null);
      resultMatrixCSV0.getDisplayRow((-1));
      resultMatrixCSV0.meanPrecTipText();
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.216212376386898
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_EnumerateRowNames = false;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[6];
      intArray0[0] = 2;
      intArray0[1] = 1;
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[0] = 2;
      intArray0[5] = 1;
      resultMatrixHTML0.setRowOrder(intArray0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(1, 2);
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML1.setRowHidden(2, true);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.3884992840892463
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixHTML0.setStdDev(2, 0, 4471.11);
      resultMatrixPlainText0.setSignificanceWidth(2);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader("[");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.230106200174726
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.toStringSummary();
      resultMatrixPlainText0.setSize(1, 1);
      resultMatrixHTML0.toStringSummary();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex0.setEnumerateRowNames(true);
      resultMatrixLatex0.listOptions();
      resultMatrixLatex0.clear();
      resultMatrixHTML0.getSignificanceCount((-2301), 26);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.listOptions();
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance();
      resultMatrixSignificance2.getDefaultRowNameWidth();
      resultMatrixHTML0.getVisibleRowCount();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      // Undeclared exception!
      try { 
        resultMatrixPlainText1.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.369158353417408
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(3, 3);
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toArray();
      resultMatrixPlainText1.getCount(1669);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.globalInfo();
      resultMatrixHTML0.getSignificanceCount(1, 1);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.8526379562735795
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      int[][] intArray0 = new int[0][0];
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixHTML0.getSignificanceCount(33, 33);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.294331195628959
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.setStdDevWidth(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 2);
      resultMatrixSignificance0.globalInfo();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringMatrix();
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.2334701558228627
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(47, 47);
      // Undeclared exception!
      resultMatrixHTML0.toString();
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.0473077186890114
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(0, 938);
      // Undeclared exception!
      try { 
        resultMatrixHTML1.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[8];
      intArray0[0] = 2;
      intArray0[1] = 2;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 1;
      intArray0[5] = 1;
      intArray0[6] = 2;
      intArray0[7] = (-5526);
      resultMatrixHTML0.m_RankingDiff = intArray0;
      resultMatrixHTML0.m_MeanWidth = (-914);
      resultMatrixHTML0.setShowAverage(true);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.getMeanWidth();
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.6618403890648796
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.clearRanking();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.510305126649146
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "]";
      stringArray0[1] = "*";
      stringArray0[2] = " ";
      stringArray0[3] = "v";
      stringArray0[4] = "*";
      stringArray0[5] = "v";
      stringArray0[6] = "v";
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.getStdDevWidth();
      resultMatrixCSV0.getRowHidden(0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.2466017120905977
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setOptions((String[]) null);
      resultMatrixCSV0.addHeader("", "~F,jz1hCl");
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.510305126649146
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.addHeader((String) null, (String) null);
      resultMatrixCSV0.m_ShowAverage = true;
      resultMatrixCSV0.getStdDevWidth();
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      int[] intArray0 = new int[8];
      double[] doubleArray0 = new double[0];
      resultMatrixPlainText0.m_Counts = doubleArray0;
      intArray0[0] = 2;
      resultMatrixSignificance0.setStdDevPrec((-1));
      intArray0[1] = 30;
      intArray0[2] = 972;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 2;
      intArray0[6] = 2;
      intArray0[7] = 2;
      resultMatrixHTML0.setRowOrder(intArray0);
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(40, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.246601712090598
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setOptions((String[]) null);
      int int0 = resultMatrixCSV0.getMeanPrec();
      assertFalse(resultMatrixCSV0.getPrintRowNames());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.618268371350764
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      boolean boolean0 = resultMatrixGnuPlot0.getDefaultRemoveFilterName();
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
      assertFalse(boolean0);
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.316379479061607
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearHeader();
      resultMatrixCSV0.setOptions((String[]) null);
      resultMatrixCSV0.toStringKey();
      resultMatrixCSV0.setStdDevPrec(0);
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance(0, (-2028));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.992400521059247
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setStdDev((-2366), (-2366), (-2366));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixPlainText1);
      resultMatrixSignificance1.globalInfo();
      assertEquals(2, resultMatrixSignificance1.getStdDevPrec());
      assertEquals(5, resultMatrixSignificance1.getCountWidth());
      assertFalse(resultMatrixSignificance1.getEnumerateRowNames());
      assertEquals(25, resultMatrixSignificance1.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance1.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance1.getSignificanceWidth());
      assertEquals(2, resultMatrixSignificance1.getMeanPrec());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringRanking();
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.7292670234547844
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.getColHidden(3230);
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      int[][] intArray0 = new int[1][3];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(162, 1);
      resultMatrixSignificance0.globalInfo();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixSignificance0.getColHidden((-181));
      assertEquals(162, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getDefaultMeanWidth());
      assertFalse(resultMatrixSignificance0.getDefaultShowAverage());
      assertEquals(0, resultMatrixSignificance0.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.631612186595399
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.getColNameWidth();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance1);
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.getDefaultRowNameWidth();
      assertEquals(2, resultMatrixSignificance1.getMeanPrec());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(40, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.600705115688095
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setRowNameWidth(192);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.getRevision();
      resultMatrixLatex0.getDefaultRowNameWidth();
      resultMatrixLatex0.meanWidthTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.setRowNameWidth(0);
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.getStdDev(192, 0);
      resultMatrixSignificance0.trimString("(", 194);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 1607.037303;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (double) 194;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 2;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 2;
      doubleArray0[7] = (double) 0;
      doubleArray0[8] = (double) 0;
      resultMatrixGnuPlot0.m_Counts = doubleArray0;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringRanking();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      double double0 = resultMatrixSignificance0.getStdDev((-1), 906);
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(0.0, double0, 0.01);
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.624292229429033
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                                     (1) \n------------------------------------------------\nrow0                                    (0)    |\n------------------------------------------------\n(v/ /*)                                        |\n", string0);
      
      resultMatrixPlainText0.getCount((-2348));
      resultMatrixSignificance0.getStdDev(2, (-1781));
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.8027646048348562
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(12, 12);
      resultMatrixPlainText0.setStdDev(12, 12, 12);
      resultMatrixPlainText0.WIN_STRING = "";
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.globalInfo();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.toStringRanking();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.toStringRanking();
      resultMatrixLatex1.setRowHidden(0, true);
      assertEquals(0, resultMatrixLatex1.getVisibleRowCount());
      assertEquals(1, resultMatrixLatex1.getRowCount());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.791039810954727
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setStdDevPrec(3132);
      int[][] intArray0 = new int[20][0];
      resultMatrixHTML0.setRanking(intArray0);
      assertEquals(3132, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.356386261208737
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      int[][] intArray0 = new int[1][3];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.padString((String) null, 2377);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.409102890534597
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getOptions();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 2);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.9673881112917146
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(110, 2);
      resultMatrixPlainText1.setStdDev(1, 110, 1.0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance1.globalInfo();
      resultMatrixPlainText1.getDefaultPrintColNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[3][3];
      int[] intArray1 = new int[2];
      intArray1[0] = 2;
      intArray1[1] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[9];
      intArray2[0] = 110;
      intArray2[1] = 2;
      intArray2[2] = 0;
      intArray2[3] = 1;
      intArray2[4] = 110;
      intArray2[5] = 0;
      intArray2[6] = 1;
      intArray2[7] = 0;
      intArray2[8] = 1;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[5];
      intArray3[0] = 1;
      intArray3[1] = 1;
      intArray3[2] = 0;
      intArray3[3] = 0;
      intArray3[4] = 1;
      intArray0[2] = intArray3;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.408144226526651
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_ShowAverage = true;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                                     (1)       \n------------------------------------------------------\nrow0                                    (0)          |\n------------------------------------------------------\nAverage                                    NaN.00 |\n------------------------------------------------------\n(v/ /*)                                              |\n", string0);
      
      resultMatrixPlainText0.getCount(2);
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      
      resultMatrixSignificance0.setStdDev(0, 1, 0);
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.4370202792001927
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setMeanWidth(235);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.setColNameWidth(1087);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 235;
      resultMatrixSignificance0.m_Counts = doubleArray0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      resultMatrixPlainText0.toStringRanking();
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixGnuPlot0.enumerateRowNamesTipText();
      resultMatrixSignificance0.setCountWidth(0);
      resultMatrixSignificance0.m_ShowAverage = false;
      resultMatrixPlainText0.setRowNameWidth(1);
      resultMatrixSignificance0.LOSS_STRING = "LT:'}[";
      resultMatrixPlainText0.enumerateColNamesTipText();
      resultMatrixCSV0.padString("v", 2);
      resultMatrixPlainText0.WIN_STRING = "-ranking data not set-";
      resultMatrixPlainText0.colNameWidthTipText();
      resultMatrixCSV0.globalInfo();
      resultMatrixGnuPlot0.padString(")", 1, false);
      resultMatrixPlainText0.getDisplayCol(1);
      resultMatrixSignificance0.getSignificanceWidth();
      resultMatrixCSV0.setShowStdDev(false);
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixCSV0.getDisplayCol(189);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_SignificanceWidth = 1492;
      resultMatrixLatex0.toStringSummary();
      resultMatrixLatex0.toStringMatrix();
      resultMatrixGnuPlot0.enumerateColNamesTipText();
      assertEquals(235, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.99377256425345
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.listOptions();
      String string0 = resultMatrixPlainText0.toStringKey();
      assertEquals("Key:\n(1) col0\n", string0);
      
      String string1 = resultMatrixPlainText0.removeFilterNameTipText();
      assertEquals("Whether to remove the classname package prefixes from the filter names in datasets.", string1);
      
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      int[] intArray0 = new int[5];
      intArray0[1] = 0;
      intArray0[2] = 2424;
      intArray0[3] = 1;
      intArray0[4] = 0;
      resultMatrixPlainText0.toStringRanking();
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      
      boolean boolean0 = resultMatrixGnuPlot0.isStdDev((-3863));
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertFalse(boolean0);
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=4.139717819814237
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[1];
      intArray0[0] = (-1950);
      resultMatrixLatex0.setRowOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.setRemoveFilterName(false);
      resultMatrixLatex0.toArray();
      resultMatrixLatex1.setShowStdDev(false);
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
      
      resultMatrixLatex1.m_SignificanceWidth = 6;
      resultMatrixLatex0.setCountWidth(14);
      resultMatrixLatex1.setRowHidden(34, false);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 13);
      resultMatrixCSV0.WIN_STRING = "$\bullet$";
      resultMatrixCSV0.setColNameWidth(34);
      resultMatrixCSV0.getSummaryTitle(0);
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.setColHidden(2, false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "[";
      stringArray0[1] = "(";
      stringArray0[2] = "$circ$";
      stringArray0[3] = "*";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.setSize(9, 34);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      resultMatrixPlainText0.getDefaultPrintColNames();
      resultMatrixHTML0.toStringMatrix();
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setShowAverage(false);
      // Undeclared exception!
      resultMatrixHTML0.setSize(5157, 106);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.5829151342009973
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.setRemoveFilterName(false);
      String[][] stringArray0 = resultMatrixLatex0.toArray();
      resultMatrixLatex1.setShowStdDev(false);
      resultMatrixLatex1.m_SignificanceWidth = 6;
      resultMatrixLatex0.setCountWidth(14);
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex();
      resultMatrixLatex0.assign(resultMatrixLatex2);
      resultMatrixLatex1.setRowHidden(34, false);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 13);
      resultMatrixCSV0.WIN_STRING = "$\bullet$";
      resultMatrixCSV0.setColNameWidth(34);
      resultMatrixCSV0.getSummaryTitle(0);
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.setColHidden(2, false);
      String[] stringArray1 = new String[4];
      stringArray1[0] = "[";
      stringArray1[1] = "(";
      stringArray1[2] = "$circ$";
      stringArray1[3] = "*";
      ResultMatrixSignificance.main(stringArray1);
      resultMatrixLatex1.toStringKey();
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.getSignificanceWidth();
      resultMatrixLatex0.getDefaultStdDevPrec();
      resultMatrixCSV0.getDefaultMeanPrec();
      assertEquals(34, resultMatrixCSV0.getColNameWidth());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.globalInfo();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      int int0 = resultMatrixLatex2.getColSize(stringArray0, 0, true, false);
      assertEquals(21, int0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader((String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.6575690595282953
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String string0 = resultMatrixHTML0.toString();
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.774342220194881
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setEnumerateRowNames(true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getSummaryTitle(0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.5099160299624828
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.removeFilterName("@rvZ");
      resultMatrixCSV0.setRowHidden((-2893), false);
      resultMatrixCSV0.toArray();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.setShowAverage(false);
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixHTML0.m_HeaderValues = vector0;
      // Undeclared exception!
      try { 
        vector0.removeElementAt(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.2474824703049774
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setEnumerateRowNames(true);
      resultMatrixHTML0.toString();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.setStdDevWidth(3);
      int int0 = resultMatrixLatex0.getDisplayCol(0);
      assertEquals(3, resultMatrixLatex0.getStdDevWidth());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.4530423560316796
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setMeanWidth(235);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.setColNameWidth(1087);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 235;
      resultMatrixSignificance0.m_Counts = doubleArray0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.toStringRanking();
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixGnuPlot0.enumerateRowNamesTipText();
      resultMatrixSignificance0.setCountWidth(0);
      resultMatrixSignificance0.m_ShowAverage = true;
      resultMatrixPlainText0.setRowNameWidth(1);
      resultMatrixSignificance0.LOSS_STRING = "LT:'}[";
      resultMatrixPlainText0.enumerateColNamesTipText();
      resultMatrixCSV0.padString("v", 2);
      resultMatrixPlainText0.WIN_STRING = "-ranking data not set-";
      resultMatrixPlainText0.colNameWidthTipText();
      resultMatrixCSV0.globalInfo();
      resultMatrixGnuPlot0.padString("]", 1, true);
      resultMatrixPlainText0.getDisplayCol(1);
      resultMatrixSignificance0.getSignificanceWidth();
      resultMatrixCSV0.setShowStdDev(true);
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixCSV0.getDisplayCol(189);
      assertEquals(235, resultMatrixCSV0.getMeanWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringSummary();
      assertEquals("The maximum width of the column names (0 = optimal).", resultMatrixLatex0.colNameWidthTipText());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      
      int[] intArray0 = new int[1];
      int[][] intArray1 = new int[2][2];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      resultMatrixCSV0.setSummary(intArray1, intArray1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 2);
      resultMatrixGnuPlot0.getDisplayCol((-2764));
      assertEquals(0, resultMatrixGnuPlot0.getColCount());
      assertEquals(2, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.1634240504234032
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      int[][] intArray1 = new int[4][3];
      intArray1[0] = intArray0;
      String string0 = resultMatrixHTML0.getSummaryTitle(2);
      assertEquals("c", string0);
      
      intArray1[1] = intArray0;
      resultMatrixHTML0.m_NonSigWins = intArray1;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      resultMatrixHTML0.setRanking(intArray1);
      resultMatrixGnuPlot0.getDisplayCol(1);
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.3499606532240302
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                      (1) \n---------------------------------\nrow0                     (0)    |\n---------------------------------\n(v/ /*)                         |\n", string0);
      
      resultMatrixPlainText0.getCount(48);
      resultMatrixHTML0.setSignificanceWidth(0);
      resultMatrixPlainText0.isAverage(3);
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.778500265764325
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setPrintRowNames(false);
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.toStringMatrix();
      assertTrue(resultMatrixSignificance0.getEnumerateRowNames());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.6352912259154064
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setOptions((String[]) null);
      resultMatrixCSV0.getOptions();
      assertFalse(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.598435360689505
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      boolean boolean0 = true;
      resultMatrixHTML0.m_ShowAverage = true;
      double[] doubleArray0 = new double[0];
      resultMatrixHTML0.m_Counts = doubleArray0;
      resultMatrixHTML0.toString();
      resultMatrixHTML0.m_StdDevPrec = 391;
      resultMatrixHTML0.getRowName(97);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(97, 12);
      resultMatrixHTML0.m_RowNames = null;
      resultMatrixCSV0.setOptions((String[]) null);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV0.m_StdDevPrec = (-2338);
      resultMatrixCSV1.toStringSummary();
      ResultMatrixPlainText.main((String[]) null);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getRowCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.729267023454784
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.setStdDev(31, (-283), 31);
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowStdDev());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.26506530009311
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML0.toArray();
      String string0 = resultMatrixHTML1.toString();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      String string1 = resultMatrixHTML1.printColNamesTipText();
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
      assertEquals(2, resultMatrixHTML1.getStdDevPrec());
      assertEquals("Whether to output column names or just numbers representing them.", string1);
      
      resultMatrixHTML0.setMean(0, 0, 0);
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.9785084205272367
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setMean(3558, 983, 3558);
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintRowNames());
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.259782453100574
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 2);
      resultMatrixHTML0.setPrintRowNames(false);
      resultMatrixHTML0.toString();
      assertFalse(resultMatrixHTML0.getPrintRowNames());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringKey();
      assertTrue(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.874519625657589
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(18, 18);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixPlainText0.setShowAverage(false);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.toStringKey();
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(5, resultMatrixHTML0.getCountWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      
      String string0 = resultMatrixPlainText0.toStringKey();
      assertEquals("Key:\n(1) col0\n(2) col1\n(3) col2\n(4) col3\n(5) col4\n(6) col5\n(7) col6\n(8) col7\n(9) col8\n(10) col9\n(11) col10\n(12) col11\n(13) col12\n(14) col13\n(15) col14\n(16) col15\n(17) col16\n(18) col17\n", string0);
      
      resultMatrixPlainText0.removeFilterNameTipText();
      resultMatrixPlainText0.isRowName(17);
      assertFalse(resultMatrixPlainText0.getShowAverage());
      assertTrue(resultMatrixPlainText0.getPrintColNames());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setPrintColNames(true);
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintColNames());
      assertFalse(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.7368184083473874
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[20][0];
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixHTML0.getRowCount();
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getDefaultSignificanceWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.631612186595399
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(18, 12);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      assertEquals(5, resultMatrixGnuPlot0.getCountWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      
      boolean boolean0 = resultMatrixPlainText0.isRowName(0);
      assertEquals(18, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertFalse(resultMatrixPlainText0.getDefaultShowStdDev());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertTrue(boolean0);
      assertEquals(12, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.743535678836661
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.enumerateRowNamesTipText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[3];
      resultMatrixHTML0.setRowOrder(intArray0);
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 2;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      boolean boolean0 = resultMatrixPlainText0.isRowName((-1));
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(0, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertFalse(boolean0);
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_ShowAverage = true;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setSignificance(0, 54, 123);
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRemoveFilterName(true);
      resultMatrixGnuPlot0.getDefaultSignificanceWidth();
      assertTrue(resultMatrixGnuPlot0.getRemoveFilterName());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.5805376244873655
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(18, 18);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.toStringRanking();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setSize(10, (-1091));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.973971854832384
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      
      String string0 = resultMatrixHTML0.toStringKey();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td colspan=\"2\"><b>Key</b></td></tr>\n   <tr><td><b>(1)</b></td><td>col0</td></tr>\n</table>\n", string0);
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 1);
      resultMatrixGnuPlot0.getSignificance(0, 0);
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.5451622583775935
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setEnumerateRowNames(true);
      resultMatrixHTML0.toString();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(97, 1);
      resultMatrixGnuPlot0.padString("", 0, false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.getDefaultSignificanceWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 20;
      intArray0[2] = 1;
      intArray0[3] = 2;
      intArray0[4] = 2;
      intArray0[5] = 0;
      intArray0[6] = 97;
      intArray0[7] = 1293;
      resultMatrixGnuPlot0.m_RankingLosses = intArray0;
      resultMatrixGnuPlot1.getMean(0, 1);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "*";
      stringArray0[1] = "$circ$";
      stringArray0[2] = " ";
      stringArray0[3] = "(";
      stringArray0[4] = "";
      resultMatrixGnuPlot1.toArray();
      stringArray0[5] = "k%U~gMmWI7Fh2hAsz`";
      stringArray0[6] = ")";
      stringArray0[7] = "$circ$";
      stringArray0[8] = ")";
      ResultMatrixGnuPlot.main(stringArray0);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot1.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.246601712090598
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setOptions((String[]) null);
      resultMatrixCSV0.getEnumerateRowNames();
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertFalse(resultMatrixCSV0.getShowStdDev());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertFalse(resultMatrixCSV0.getShowAverage());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.0237334794589255
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      String string0 = resultMatrixHTML0.toStringKey();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td colspan=\"2\"><b>Key</b></td></tr>\n   <tr><td><b>(1)</b></td><td>col0</td></tr>\n</table>\n", string0);
      
      resultMatrixHTML0.getRowHidden(1);
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      
      resultMatrixGnuPlot0.showStdDevTipText();
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.791039810954727
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[20][0];
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixHTML0.getRowHidden((-364));
      assertEquals(0, resultMatrixHTML0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertFalse(resultMatrixHTML0.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.5805376244873655
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.setColOrder((int[]) null);
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      
      int int0 = resultMatrixHTML0.getDefaultMeanPrec();
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.173730847161735
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String string0 = resultMatrixHTML0.toString();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixHTML0.toStringRanking();
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.2847560449660964
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.padString("", (-37), true);
      resultMatrixCSV0.setOptions((String[]) null);
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.getMean(882, (-37));
      assertFalse(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.clear();
      resultMatrixHTML0.setPrintRowNames(true);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader(")");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=3.4340844044940764
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixHTML0.setRowOrder(intArray0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.9665903218785505
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1183);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      assertEquals(2, resultMatrixHTML1.getStdDevPrec());
      assertEquals(0, resultMatrixHTML1.getSignificanceWidth());
      assertEquals(25, resultMatrixHTML1.getRowNameWidth());
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.listOptions();
      String string0 = resultMatrixPlainText0.toStringKey();
      assertEquals("Key:\n(1) col0\n(2) col1\n", string0);
      
      resultMatrixPlainText1.globalInfo();
      resultMatrixPlainText0.removeFilterNameTipText();
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = 3357;
      intArray0[2] = 59;
      intArray0[3] = 0;
      intArray0[4] = 2;
      intArray0[5] = 1;
      intArray0[6] = 1;
      intArray0[7] = 1;
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixHTML0.globalInfo();
      resultMatrixPlainText1.toStringRanking();
      boolean boolean0 = resultMatrixPlainText1.getPrintColNames();
      assertTrue(boolean0);
      
      resultMatrixCSV0.setSize(2, 1);
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.8004698251768687
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 111);
      resultMatrixLatex0.m_EnumerateColNames = true;
      resultMatrixLatex0.getAverage(1);
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(111, resultMatrixLatex0.getVisibleRowCount());
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 1481);
      resultMatrixGnuPlot0.getCountWidth();
      assertEquals(2, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
      assertEquals(1481, resultMatrixGnuPlot0.getVisibleRowCount());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.6618403890648796
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.getDefaultShowStdDev();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.5805376244873655
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      int int0 = resultMatrixHTML1.getRowNameWidth();
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
      assertEquals(0, resultMatrixHTML1.getCountWidth());
      assertEquals(25, int0);
      assertEquals(0, resultMatrixHTML1.getMeanWidth());
      assertEquals(0, resultMatrixHTML1.getStdDevWidth());
      assertEquals(1, resultMatrixHTML1.getColCount());
      assertFalse(resultMatrixHTML1.getRemoveFilterName());
      assertEquals(0, resultMatrixHTML1.getSignificanceWidth());
      assertEquals(0, resultMatrixHTML1.getDefaultColNameWidth());
      assertEquals(1, resultMatrixHTML1.getRowCount());
      assertEquals(2, resultMatrixHTML1.getStdDevPrec());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.52751915084157
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.setSize(0, 0);
      assertEquals(0, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.510305126649146
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      String[] stringArray0 = new String[1];
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getStdDevWidth();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSize((-3893), 3051);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=3.3425359764412272
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.enumerateRowNamesTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.removeFilterName("");
      resultMatrixCSV0.setOptions((String[]) null);
      resultMatrixCSV0.toStringSummary();
      assertFalse(resultMatrixCSV0.getEnumerateColNames());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 1;
      resultMatrixCSV0.m_RankingLosses = intArray0;
      int[][] intArray1 = new int[2][7];
      intArray1[0] = resultMatrixCSV0.m_RankingLosses;
      intArray1[1] = intArray0;
      resultMatrixCSV0.setSummary(intArray1, intArray1);
      resultMatrixCSV0.getSignificance(1, (-755));
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.2444926304072963
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      String string0 = resultMatrixHTML0.toStringKey();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td colspan=\"2\"><b>Key</b></td></tr>\n   <tr><td><b>(1)</b></td><td>col0</td></tr>\n</table>\n", string0);
      
      resultMatrixGnuPlot0.getSignificance(2, 2);
      assertFalse(resultMatrixGnuPlot0.getDefaultShowStdDev());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.7016447597207263
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toString();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.clearHeader();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setCount((-1884), (-3259.9019373));
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      assertFalse(resultMatrixPlainText1.getShowAverage());
      
      resultMatrixPlainText1.setShowAverage(true);
      resultMatrixHTML0.toStringKey();
      resultMatrixSignificance0.getDefaultShowStdDev();
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.36243935453901
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      int[][] intArray0 = new int[30][3];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setSummary(intArray0, intArray0);
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixCSV0.getDefaultCountWidth();
      int int0 = resultMatrixCSV0.getVisibleColCount();
      assertEquals(1, int0);
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.3018097489200064
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 1;
      resultMatrixCSV0.m_RankingLosses = intArray0;
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.getOptions();
      int[][] intArray1 = new int[2][9];
      intArray1[0] = intArray0;
      intArray1[1] = resultMatrixCSV0.m_RankingLosses;
      resultMatrixCSV0.setSummary(intArray1, intArray1);
      resultMatrixCSV0.m_PrintColNames = false;
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.setStdDevWidth(1751);
      resultMatrixCSV0.getDefaultPrintColNames();
      assertEquals(1751, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setPrintColNames(false);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader(")");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=3.120291565301284
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(26, 171);
      String[][] stringArray0 = new String[5][4];
      String[] stringArray1 = new String[4];
      stringArray1[0] = ")";
      stringArray1[1] = "$\bullet$";
      stringArray1[2] = ")";
      stringArray1[3] = " ";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[2];
      stringArray2[0] = " ";
      stringArray2[1] = "$\bullet$";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[0];
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[2];
      stringArray4[0] = ")";
      stringArray4[1] = " ";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[3];
      stringArray5[0] = "h:qXc(cjA7h";
      stringArray5[1] = "(";
      stringArray5[2] = "$\bullet$";
      stringArray0[4] = stringArray5;
      int int0 = resultMatrixLatex0.getColSize(stringArray0, 172);
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertFalse(resultMatrixLatex0.getShowAverage());
      assertEquals(0, int0);
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertEquals(171, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.327351229461284
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 1;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 32);
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(32, 1);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.toStringRanking();
      String string0 = resultMatrixLatex0.toStringMatrix();
      String[][] stringArray0 = new String[9][4];
      String[] stringArray1 = new String[9];
      stringArray1[0] = "v";
      stringArray1[1] = "*";
      stringArray1[2] = "(";
      stringArray1[3] = "*";
      stringArray1[4] = "v";
      stringArray1[5] = "]";
      stringArray1[6] = "$\bullet$";
      stringArray1[7] = "(";
      stringArray1[8] = "Dataset (1)\n-----------\nrow0       \nrow1       \nrow2       \nrow3       \nrow4       \nrow5       \nrow6       \nrow7       \nrow8       \nrow9       \nrow10      \nrow11      \nrow12      \nrow13      \nrow14      \nrow15      \nrow16      \nrow17      \nrow18      \nrow19      \nrow20      \nrow21      \nrow22      \nrow23      \nrow24      \nrow25      \nrow26      \nrow27      \nrow28      \nrow29      \nrow30      \nrow31      \n";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[5];
      stringArray2[0] = "*";
      stringArray2[1] = "[";
      stringArray2[2] = "*";
      stringArray2[3] = "*";
      stringArray2[4] = "]";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[4];
      stringArray3[0] = string0;
      stringArray3[1] = "-ranking data not set-";
      stringArray3[2] = string0;
      stringArray3[3] = " ";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[6];
      stringArray4[0] = "";
      stringArray4[1] = " ";
      stringArray4[2] = " = ";
      stringArray4[3] = "v";
      stringArray4[4] = "*";
      stringArray4[5] = "v";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[4];
      stringArray5[0] = "[";
      stringArray5[1] = "*";
      stringArray5[2] = "Dataset (1)\n-----------\nrow0       \nrow1       \nrow2       \nrow3       \nrow4       \nrow5       \nrow6       \nrow7       \nrow8       \nrow9       \nrow10      \nrow11      \nrow12      \nrow13      \nrow14      \nrow15      \nrow16      \nrow17      \nrow18      \nrow19      \nrow20      \nrow21      \nrow22      \nrow23      \nrow24      \nrow25      \nrow26      \nrow27      \nrow28      \nrow29      \nrow30      \nrow31      \n";
      stringArray5[3] = "v";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[3];
      stringArray6[0] = "v";
      stringArray6[1] = ":,u[Ic)";
      stringArray6[2] = "v";
      stringArray0[5] = stringArray6;
      String[] stringArray7 = new String[9];
      stringArray7[0] = "]";
      stringArray7[1] = "]";
      stringArray7[2] = "v";
      stringArray7[3] = " ";
      stringArray7[4] = "[";
      stringArray7[5] = "(";
      stringArray7[6] = "$\bullet$";
      stringArray7[7] = " = ";
      stringArray7[8] = "";
      stringArray0[6] = stringArray7;
      String[] stringArray8 = new String[0];
      stringArray0[7] = stringArray8;
      String[] stringArray9 = new String[3];
      stringArray9[0] = "[";
      stringArray9[1] = "[";
      stringArray9[2] = "[";
      stringArray0[8] = stringArray9;
      // Undeclared exception!
      try { 
        resultMatrixLatex1.getColSize(stringArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.6989834248585205
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.toStringSummary();
      String[][] stringArray0 = new String[1][7];
      String[] stringArray1 = new String[3];
      stringArray1[0] = "(";
      stringArray1[1] = " ";
      stringArray1[2] = " ";
      String string0 = resultMatrixCSV0.padString(" ", 33, true);
      assertEquals("                                 ", string0);
      
      stringArray0[0] = stringArray1;
      int int0 = resultMatrixSignificance0.getColSize(stringArray0, 1);
      assertEquals(1, int0);
      
      String string1 = resultMatrixCSV0.getColName((-139));
      assertEquals(40, resultMatrixCSV0.getRowNameWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertNull(string1);
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=3.530588479322165
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      String[][] stringArray0 = resultMatrixGnuPlot0.toArray();
      assertEquals(3, stringArray0.length);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultStdDevWidth();
      int int0 = resultMatrixHTML0.getDefaultMeanWidth();
      assertEquals(0, int0);
      assertFalse(resultMatrixHTML0.getShowStdDev());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=4.1848076180631795
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(18, 18);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.getMean(1, 866);
      ResultMatrixGnuPlot.main((String[]) null);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=3.286147085564247
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setSignificanceWidth(1326);
      resultMatrixCSV0.setOptions((String[]) null);
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      
      int int0 = resultMatrixHTML0.getVisibleRowCount();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=3.8501476017100575
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.setColName(100, "");
      resultMatrixCSV0.headerKeys();
      resultMatrixCSV0.significanceWidthTipText();
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=3.5151184554079893
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.padString("", 850);
      ResultMatrixHTML.main((String[]) null);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader("-stddev-prec <int>");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=2.842880615317132
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(30, 30);
      boolean boolean0 = resultMatrixPlainText0.isSignificance(49);
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertTrue(boolean0);
      assertEquals(30, resultMatrixPlainText0.getRowCount());
      assertEquals(30, resultMatrixPlainText0.getColCount());
      assertEquals(0, resultMatrixPlainText0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=3.6611281021611792
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_RowNameWidth = 2267;
      resultMatrixHTML0.toString();
      resultMatrixHTML0.getAverage(2267);
      assertEquals(2267, resultMatrixHTML0.getRowNameWidth());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=3.931825632724322
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.toString();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      String string1 = resultMatrixLatex0.rowNameWidthTipText();
      assertEquals("The maximum width for the row names (0 = optimal).", string1);
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      double double0 = resultMatrixPlainText0.getCount((-1170));
      assertEquals(0.0, double0, 0.01);
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      assertFalse(resultMatrixPlainText0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=3.534218897531526
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[][] stringArray1 = new String[4][1];
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixHTML0.m_HeaderValues = vector0;
      resultMatrixHTML0.setColOrder(intArray0);
      stringArray1[0] = stringArray0;
      stringArray1[1] = stringArray0;
      stringArray1[2] = stringArray0;
      stringArray1[3] = stringArray0;
      int int0 = 1631;
      resultMatrixHTML0.getColSize(stringArray1, 1631, true, true);
      int[] intArray1 = new int[0];
      resultMatrixHTML0.m_MeanPrec = 0;
      resultMatrixHTML0.m_RankingWins = intArray1;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=3.271260033111007
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringMatrix();
      String[][] stringArray0 = new String[0][3];
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 2;
      resultMatrixSignificance0.setEnumerateColNames(false);
      resultMatrixSignificance0.m_RankingLosses = intArray0;
      resultMatrixSignificance0.setPrintRowNames(true);
      String[] stringArray1 = new String[2];
      stringArray1[0] = "Dataset (1)\n-----------\nrow0       \n";
      stringArray1[1] = " ";
      resultMatrixSignificance0.m_RowNames = stringArray1;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.getColSize(stringArray0, 2311, false, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 145
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.toStringSummary();
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(0, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      
      String[][] stringArray0 = new String[1][0];
      String[] stringArray1 = new String[0];
      stringArray0[0] = stringArray1;
      int int0 = resultMatrixLatex0.getColSize(stringArray0, (-1628), false, false);
      assertEquals(0, int0);
      assertEquals(0, resultMatrixLatex0.getColCount());
      
      resultMatrixHTML0.setColOrder((int[]) null);
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(0);
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=3.246601712090598
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      
      resultMatrixCSV0.setOptions((String[]) null);
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.getColName((-4752));
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=3.4975662355554515
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[0];
      ResultMatrixHTML.main(stringArray0);
      int[] intArray0 = new int[1];
      resultMatrixHTML0.getDefaultStdDevPrec();
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=3.126906336003093
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      int int0 = 0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 32);
      int[] intArray0 = new int[1];
      resultMatrixPlainText0.m_StdDevPrec = 0;
      resultMatrixPlainText0.toStringKey();
      intArray0[0] = 0;
      resultMatrixPlainText0.m_ColNameWidth = 10;
      resultMatrixPlainText0.m_EnumerateColNames = false;
      resultMatrixPlainText0.m_ColOrder = intArray0;
      resultMatrixPlainText0.setMeanWidth(0);
      resultMatrixPlainText0.getShowStdDev();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_StdDevWidth = 32;
      resultMatrixPlainText0.assign(resultMatrixLatex0);
      resultMatrixPlainText0.clearSummary();
      resultMatrixPlainText0.toStringSummary();
      resultMatrixPlainText0.getVisibleRowCount();
      resultMatrixPlainText0.clearHeader();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRevision();
      resultMatrixGnuPlot0.meanPrecTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 16);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 150
  /*Coverage entropy=3.1336164914477678
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      int[][] intArray0 = new int[2][3];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setSummary(intArray0, intArray0);
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixCSV0.isAverage((-1007));
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=3.510305126649146
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      String[] stringArray0 = new String[1];
      ResultMatrixHTML.main((String[]) null);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      try { 
        resultMatrixCSV0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 152
  /*Coverage entropy=2.743535678836661
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(18, 12);
      resultMatrixPlainText0.getColName(18);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.setCountWidth((-110));
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.padString((String) null, 239, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 153
  /*Coverage entropy=2.7368184083473874
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[1][0];
      resultMatrixHTML0.setRanking(intArray0);
      int int0 = resultMatrixHTML0.getColCount();
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(1, int0);
      assertFalse(resultMatrixHTML0.getShowAverage());
      assertFalse(resultMatrixHTML0.getShowStdDev());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=2.90255381859477
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 1;
      resultMatrixCSV0.m_RankingLosses = intArray0;
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.setRowName(3, (String) null);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColNameWidth(1);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.setSignificance(1, 2, 1);
      resultMatrixGnuPlot0.globalInfo();
      assertEquals(1, resultMatrixGnuPlot0.getColNameWidth());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=3.6656396887638856
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[0][9];
      resultMatrixHTML0.setRanking(intArray0);
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixSignificance0.setRowHidden(2, true);
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertEquals(0, resultMatrixSignificance0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
  }

  /**
  //Test case number: 156
  /*Coverage entropy=3.9214464993152647
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 2);
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.setRowNameWidth(0);
      resultMatrixCSV0.getMeanWidth();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(14, 200);
      // Undeclared exception!
      resultMatrixCSV1.toStringMatrix();
  }

  /**
  //Test case number: 157
  /*Coverage entropy=3.248737912656905
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      double[] doubleArray0 = new double[0];
      resultMatrixCSV0.m_Counts = doubleArray0;
      resultMatrixCSV0.setColName(100, "");
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      
      resultMatrixHTML0.setRowNameWidth(0);
      String string0 = resultMatrixHTML0.toString();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>[1]</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>[v/ /*]</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
  }

  /**
  //Test case number: 158
  /*Coverage entropy=3.7683677286143142
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 2);
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.setRowNameWidth(0);
      resultMatrixPlainText0.padString("]5~cJ&z1(mu>6WmD]7U", 0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.setRowName(0, "\\\nend{tabular} ");
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColNameWidth(2);
      resultMatrixCSV0.getDefaultPrintColNames();
      assertEquals(0, resultMatrixCSV0.getRowNameWidth());
      
      resultMatrixGnuPlot0.setSignificance(1253, 63, 0);
      resultMatrixGnuPlot0.globalInfo();
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 159
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setMeanWidth((-1));
      resultMatrixPlainText0.toStringSummary();
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 161
  /*Coverage entropy=3.0583220244863525
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(18, 12);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      int[] intArray0 = new int[0];
      int[] intArray1 = new int[2];
      intArray1[0] = 12;
      resultMatrixGnuPlot0.getAverage(0);
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.globalInfo();
      resultMatrixPlainText0.removeFilterNameTipText();
      resultMatrixGnuPlot0.padString("MGidy#%/", 0, false);
      resultMatrixPlainText0.getDefaultSignificanceWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringSummary();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 73);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 162
  /*Coverage entropy=2.818762871904427
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultMeanWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixSignificance0.setColNameWidth(0);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.significanceWidthTipText();
      resultMatrixHTML0.isAverage((-449));
      assertFalse(resultMatrixHTML0.getShowStdDev());
      
      resultMatrixSignificance0.showStdDevTipText();
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=3.3109944815410413
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_ShowAverage = true;
      double[] doubleArray0 = new double[0];
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML1.clearHeader();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 2);
      resultMatrixPlainText0.setCount(2, 0);
      resultMatrixHTML1.listOptions();
      assertEquals(0, resultMatrixHTML1.getStdDevWidth());
      assertEquals(0, resultMatrixHTML1.getMeanWidth());
      assertFalse(resultMatrixHTML1.getEnumerateRowNames());
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
      
      resultMatrixHTML0.toStringKey();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      resultMatrixPlainText0.getDefaultPrintColNames();
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertEquals(2, resultMatrixPlainText0.getVisibleRowCount());
      
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>Average</td><td align=\"right\">NaN.00</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
  }

  /**
  //Test case number: 164
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(32, 1);
      resultMatrixGnuPlot0.setSignificance((-809), 0, (-809));
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(32, resultMatrixGnuPlot0.getColCount());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
  }

  /**
  //Test case number: 165
  /*Coverage entropy=3.347093949418807
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringRanking();
      int[] intArray0 = new int[0];
      resultMatrixHTML0.setRowOrder(intArray0);
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      String string0 = resultMatrixHTML0.getColName(1);
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertNull(string0);
  }

  /**
  //Test case number: 166
  /*Coverage entropy=3.282693997278065
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.stdDevWidthTipText();
      resultMatrixHTML0.padString("[<;G84RL:Gh)l!I0", 0, true);
      resultMatrixHTML0.listOptions();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 167
  /*Coverage entropy=2.9785084205272367
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 168
  /*Coverage entropy=2.6618403890648796
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 169
  /*Coverage entropy=2.950391601025311
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      int int0 = 0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2866, 0);
      resultMatrixGnuPlot0.WIN_STRING = "Qm02(";
      resultMatrixGnuPlot0.clearSummary();
      resultMatrixGnuPlot0.setMeanPrec(0);
      resultMatrixGnuPlot0.m_SignificanceWidth = 0;
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 170
  /*Coverage entropy=3.2880877378199433
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.setStdDevWidth((-1033));
      resultMatrixGnuPlot0.getRevision();
      resultMatrixGnuPlot0.getShowStdDev();
      resultMatrixGnuPlot0.setColHidden((-1033), true);
      resultMatrixGnuPlot0.isAverage((-1033));
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getSignificanceCount((-1033), (-1033));
      resultMatrixGnuPlot0.getSignificanceWidth();
      resultMatrixGnuPlot0.getColHidden(0);
      resultMatrixGnuPlot0.toArray();
      resultMatrixGnuPlot0.trimString("8034", (-2171));
      String string0 = resultMatrixGnuPlot0.toString();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      String string1 = resultMatrixGnuPlot0.toStringKey();
      assertEquals("Key:\n1 col0\n", string1);
      
      resultMatrixGnuPlot0.setStdDev((-2171), 0, (-2171));
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      resultMatrixGnuPlot0.addHeader("", "\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n");
      resultMatrixGnuPlot0.getAverage((-1033));
      int int0 = resultMatrixGnuPlot0.getDisplayRow((-914));
      assertEquals((-1), int0);
      
      resultMatrixGnuPlot0.toStringSummary();
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 171
  /*Coverage entropy=3.215523396158552
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_RowNameWidth = (-588);
      resultMatrixHTML0.m_ShowAverage = true;
      double[] doubleArray0 = new double[0];
      resultMatrixHTML0.m_Counts = doubleArray0;
      resultMatrixHTML0.toString();
      resultMatrixHTML0.m_StdDevPrec = 391;
      resultMatrixHTML0.getRowName(391);
      assertEquals((-588), resultMatrixHTML0.getRowNameWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringRanking();
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 172
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringRanking();
      String string0 = resultMatrixPlainText0.printRowNamesTipText();
      assertEquals("Whether to output row names or just numbers representing them.", string0);
      assertFalse(resultMatrixPlainText0.getDefaultShowAverage());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixPlainText0.getColCount());
  }

  /**
  //Test case number: 173
  /*Coverage entropy=2.850517756600938
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int int0 = resultMatrixCSV0.getVisibleColCount();
      assertEquals(1, int0);
      
      resultMatrixCSV0.getRemoveFilterName();
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getDefaultStdDevWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getDefaultCountWidth());
  }

  /**
  //Test case number: 174
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDisplayName();
      assertEquals(0, resultMatrixCSV0.getDefaultStdDevWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getDefaultMeanWidth());
      assertFalse(resultMatrixCSV0.getShowAverage());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 175
  /*Coverage entropy=3.4975662355554515
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.trimString("ef9,}q", 711);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals("ef9,}q", string0);
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 176
  /*Coverage entropy=2.8004698251768687
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getRowName(45);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.trimString((String) null, 45);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 177
  /*Coverage entropy=3.728960711946591
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixHTML0.setRowOrder(intArray0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 178
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 5;
      intArray0[2] = 2;
      intArray0[3] = 0;
      intArray0[4] = (-18);
      intArray0[5] = 1;
      intArray0[6] = 1;
      intArray0[7] = 2;
      intArray0[8] = 0;
      resultMatrixSignificance0.m_RowOrder = intArray0;
      resultMatrixSignificance0.getDefaultEnumerateColNames();
      resultMatrixSignificance0.setRowName((-1875), "");
      resultMatrixSignificance0.listOptions();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2719, 2);
  }

  /**
  //Test case number: 179
  /*Coverage entropy=3.3276698862269427
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 95);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixPlainText0.padString("#set ylabel \"Accuracy in %\"\n", 2);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.setRowName((-1206), ",d!'?e4%n");
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColNameWidth(2);
      assertEquals(2, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(95, resultMatrixPlainText0.getRowCount());
      
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixGnuPlot1.setSignificance(4, 4, 95);
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot(4, 1);
      resultMatrixGnuPlot1.toStringSummary();
      assertEquals(1, resultMatrixGnuPlot1.getVisibleColCount());
  }

  /**
  //Test case number: 180
  /*Coverage entropy=2.729267023454784
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.setColHidden(14, false);
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 181
  /*Coverage entropy=2.648625546111829
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(14, 14);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      int[][] intArray0 = new int[0][9];
      resultMatrixLatex0.setRanking(intArray0);
      resultMatrixLatex0.setColHidden(2, true);
      resultMatrixLatex0.getDefaultShowAverage();
      assertEquals(13, resultMatrixLatex0.getVisibleColCount());
  }

  /**
  //Test case number: 182
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(3, 3);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      
      resultMatrixSignificance0.m_StdDevWidth = (-3713);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) (-3713);
      doubleArray0[1] = (-1881.38);
      doubleArray0[2] = (-1095.629);
      doubleArray0[3] = 1434.23698467;
      doubleArray0[4] = (double) 1;
      doubleArray0[5] = (double) 2;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = (double) (-3713);
      resultMatrixSignificance0.m_Counts = doubleArray0;
      resultMatrixLatex0.m_EnumerateRowNames = true;
      resultMatrixSignificance0.setShowStdDev(false);
      resultMatrixLatex0.clear();
      resultMatrixSignificance0.setColHidden((-3713), true);
      assertEquals(3, resultMatrixLatex0.getRowCount());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
  }

  /**
  //Test case number: 183
  /*Coverage entropy=2.618268371350764
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 184
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      boolean boolean0 = resultMatrixPlainText0.getDefaultEnumerateRowNames();
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertFalse(boolean0);
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
  }

  /**
  //Test case number: 185
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.removeFilterName("Whether to show the row with averages.");
      assertEquals("Whether to show the row with averages.", string0);
      
      resultMatrixPlainText0.getDisplayName();
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertFalse(resultMatrixPlainText0.getDefaultShowAverage());
      assertEquals(0, resultMatrixPlainText0.getDefaultMeanWidth());
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 186
  /*Coverage entropy=3.510305126649146
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      String[] stringArray0 = new String[1];
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.removeFilterName((String) null);
      ResultMatrixCSV.main(stringArray0);
      resultMatrixCSV0.getStdDevWidth();
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
  }

  /**
  //Test case number: 187
  /*Coverage entropy=3.43698399347168
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      int[][] intArray0 = new int[30][3];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setColNameWidth((-1701));
      resultMatrixCSV0.setSummary(intArray0, intArray0);
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(18, stringArray0.length);
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
  }

  /**
  //Test case number: 188
  /*Coverage entropy=3.223831190470797
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.padString("", 3, true);
      resultMatrixCSV0.setOptions((String[]) null);
      assertFalse(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 189
  /*Coverage entropy=2.8925266766348736
  */
  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_ShowAverage = true;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setSignificance(0, (-3204), 0);
      resultMatrixGnuPlot0.showStdDevTipText();
      resultMatrixGnuPlot0.stdDevPrecTipText();
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintRowNames());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 190
  /*Coverage entropy=3.3487673641474585
  */
  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      int[][] intArray0 = new int[2][3];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setSummary(intArray0, intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.setColNameWidth(44);
      resultMatrixPlainText0.toStringMatrix();
      assertEquals(44, resultMatrixPlainText0.getColNameWidth());
  }

  /**
  //Test case number: 191
  /*Coverage entropy=3.359985895062486
  */
  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 95);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(5, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      
      String string0 = resultMatrixPlainText0.padString(" ", 2);
      assertEquals("  ", string0);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowOrder((int[]) null);
      resultMatrixLatex0.getDefaultColNameWidth();
      String string1 = resultMatrixLatex0.enumerateRowNamesTipText();
      assertEquals("Whether to enumerate the row names (prefixing them with '(x)', with 'x' being the index).", string1);
      
      boolean boolean0 = resultMatrixLatex0.isAverage(0);
      assertFalse(boolean0);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 2);
      resultMatrixHTML0.getDisplayName();
      resultMatrixLatex0.setRowName(1, "(");
      assertEquals(1, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 192
  /*Coverage entropy=3.2062651007397753
  */
  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.toStringKey();
      resultMatrixPlainText0.getDefaultPrintColNames();
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1) col0</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
  }

  /**
  //Test case number: 193
  /*Coverage entropy=3.9051619677830303
  */
  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 2);
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixPlainText0.setShowAverage(false);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.toStringRanking();
      resultMatrixHTML0.clearSummary();
      boolean boolean0 = resultMatrixHTML0.isAverage(2);
      assertFalse(boolean0);
      
      resultMatrixHTML0.clearHeader();
      resultMatrixPlainText0.setCount(0, 0.0);
      resultMatrixPlainText0.setShowAverage(true);
      resultMatrixHTML0.toStringKey();
      resultMatrixPlainText0.getDefaultPrintColNames();
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>[1]</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>row1</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>[v/ /*]</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
  }

  /**
  //Test case number: 194
  /*Coverage entropy=3.746645731582466
  */
  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.clearHeader();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 4);
      resultMatrixPlainText0.setCount(1, Double.NaN);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.setShowAverage(true);
      assertTrue(resultMatrixPlainText1.getShowAverage());
      
      resultMatrixHTML0.toStringKey();
      resultMatrixPlainText0.getDefaultPrintColNames();
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>[1]</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>[v/ /*]</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
  }

  /**
  //Test case number: 195
  /*Coverage entropy=3.746645731582466
  */
  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.clearHeader();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setCount(2, 1.2);
      resultMatrixPlainText0.setShowAverage(true);
      String string0 = resultMatrixHTML0.toStringKey();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td colspan=\"2\"><b>Key</b></td></tr>\n   <tr><td><b>(1)</b></td><td>col0</td></tr>\n</table>\n", string0);
      
      resultMatrixPlainText0.getDefaultPrintColNames();
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      String string1 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string1);
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
  }

  /**
  //Test case number: 196
  /*Coverage entropy=3.1824451341194315
  */
  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setOptions((String[]) null);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 197
  /*Coverage entropy=2.6969008500088405
  */
  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setStdDevWidth(18);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 198
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setStdDevWidth((-4798));
      resultMatrixLatex0.setStdDevWidth(1682);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 199
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[0][7];
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 200
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getRowName((-743));
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      assertFalse(resultMatrixHTML0.getDefaultEnumerateRowNames());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertFalse(resultMatrixHTML0.getDefaultRemoveFilterName());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
      assertFalse(resultMatrixHTML0.getDefaultShowAverage());
      assertEquals(0, resultMatrixHTML0.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 201
  /*Coverage entropy=3.1202915653012844
  */
  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.getRowName(19);
      assertNull(string0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "v";
      stringArray0[1] = "[";
      resultMatrixCSV0.isStdDev(0);
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertFalse(resultMatrixCSV0.getShowStdDev());
  }

  /**
  //Test case number: 202
  /*Coverage entropy=2.8526379562735795
  */
  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.toStringKey();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td colspan=\"2\"><b>Key</b></td></tr>\n   <tr><td><b>(1)</b></td><td>col0</td></tr>\n</table>\n", string0);
      
      resultMatrixHTML0.getDefaultShowAverage();
      assertTrue(resultMatrixHTML0.getDefaultPrintRowNames());
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 203
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.addHeader("log2(4.6): ", "");
      resultMatrixLatex0.setSignificanceWidth((-166));
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 204
  /*Coverage entropy=3.3676030412464937
  */
  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      assertEquals(1, resultMatrixPlainText1.getVisibleColCount());
      
      String string0 = resultMatrixPlainText1.toStringMatrix();
      assertEquals("Dataset                      (1) \n---------------------------------\nrow0                     (0)    |\n---------------------------------\n(v/ /*)                         |\n", string0);
      
      resultMatrixPlainText0.getCount(17);
      resultMatrixPlainText0.isStdDev(11);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getRevision();
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 205
  /*Coverage entropy=3.267702965736289
  */
  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(1, resultMatrixPlainText0.getColCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String string0 = resultMatrixHTML0.toString();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1) col0</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixHTML0.getRowName(0);
      assertEquals(5, resultMatrixHTML0.getCountWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringRanking();
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
  }

  /**
  //Test case number: 206
  /*Coverage entropy=4.0604430105464155
  */
  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixSignificance0.globalInfo();
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
  }

  /**
  //Test case number: 207
  /*Coverage entropy=2.745853530174108
  */
  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      boolean boolean0 = resultMatrixHTML0.isMean((-3579));
      assertFalse(boolean0);
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertFalse(resultMatrixHTML0.getShowStdDev());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 208
  /*Coverage entropy=3.4061774521134605
  */
  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixCSV0.getShowAverage();
      int int0 = resultMatrixCSV0.getDisplayRow(1658);
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals((-1), int0);
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 209
  /*Coverage entropy=3.308856711772279
  */
  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.clearHeader();
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals("Dataset                                               col0\n----------------------------------------------------------\nrow0                                              (0)    |\n----------------------------------------------------------\nv/ /*                                                    |\n", string0);
      
      resultMatrixGnuPlot0.toStringSummary();
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
  }

  /**
  //Test case number: 210
  /*Coverage entropy=2.8526379562735795
  */
  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[0];
      resultMatrixHTML0.setRowOrder(intArray0);
      int int0 = resultMatrixHTML0.getColNameWidth();
      assertEquals(0, int0);
      
      boolean boolean0 = resultMatrixHTML0.getShowStdDev();
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertFalse(boolean0);
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertFalse(resultMatrixHTML0.getDefaultRemoveFilterName());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
  }

  /**
  //Test case number: 211
  /*Coverage entropy=3.2128189783784378
  */
  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 0);
      String[] stringArray0 = new String[0];
      resultMatrixCSV0.setOptions(stringArray0);
      assertEquals(0, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 212
  /*Coverage entropy=3.1095546356203583
  */
  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.toStringSummary();
      String[] stringArray0 = new String[0];
      resultMatrixGnuPlot0.setOptions(stringArray0);
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
  }

  /**
  //Test case number: 213
  /*Coverage entropy=3.246601712090598
  */
  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setOptions((String[]) null);
      resultMatrixCSV0.showAverageTipText();
      assertFalse(resultMatrixCSV0.getPrintRowNames());
      
      resultMatrixCSV0.clear();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
  }

  /**
  //Test case number: 214
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.doubleToString((-1.0), (-1941));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 215
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setEnumerateColNames(true);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader(")");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 216
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setMeanWidth(2597);
      resultMatrixPlainText0.stdDevWidthTipText();
      assertEquals(2597, resultMatrixPlainText0.getMeanWidth());
  }

  /**
  //Test case number: 217
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixSignificance0.setMeanPrec((-1366));
      resultMatrixGnuPlot0.TIE_STRING = " ";
      resultMatrixGnuPlot0.setSignificance(0, 1, 0);
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(40, resultMatrixGnuPlot0.getRowNameWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 218
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[2];
      intArray0[1] = 2;
      resultMatrixGnuPlot0.getRowOrder();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
  }

  /**
  //Test case number: 219
  /*Coverage entropy=3.357766506300086
  */
  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 1;
      resultMatrixCSV0.m_RankingLosses = intArray0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 2);
      resultMatrixSignificance0.setColOrder(resultMatrixCSV0.m_RankingLosses);
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(2, resultMatrixSignificance0.getRowCount());
      
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \nrow1       \n", string0);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex0.setRowName(0, "'");
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixSignificance0.getDisplayName();
      resultMatrixPlainText0.getPrintColNames();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(40, resultMatrixPlainText0.getRowNameWidth());
      
      resultMatrixLatex0.getColNameWidth();
      assertTrue(resultMatrixLatex0.getPrintRowNames());
  }

  /**
  //Test case number: 220
  /*Coverage entropy=2.6042175808819583
  */
  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.doubleToString(728.46866, 1734);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
  }

  /**
  //Test case number: 221
  /*Coverage entropy=3.522952859275876
  */
  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintColNames());
      
      String[] stringArray0 = new String[0];
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getStdDevWidth();
      String string0 = resultMatrixCSV0.doubleToString(0, 0);
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertEquals("0.", string0);
  }

  /**
  //Test case number: 222
  /*Coverage entropy=3.2128189783784378
  */
  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateColNames(false);
      resultMatrixCSV0.setOptions((String[]) null);
      assertFalse(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 223
  /*Coverage entropy=3.301908328278199
  */
  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setEnumerateRowNames(true);
      resultMatrixHTML0.toString();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.setMeanWidth(0);
      resultMatrixHTML0.padString("heade(r1", 1);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.getRevision();
      assertTrue(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 224
  /*Coverage entropy=3.229939865134008
  */
  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.setMeanPrec(4907);
      resultMatrixHTML0.m_ShowAverage = true;
      resultMatrixHTML0.toString();
      int int0 = resultMatrixHTML0.getVisibleRowCount();
      assertTrue(resultMatrixHTML0.getShowAverage());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 225
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixHTML0.printColNamesTipText();
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
  }

  /**
  //Test case number: 226
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.getColName(0);
      assertEquals("[1]", string0);
      
      resultMatrixCSV0.toStringSummary();
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertFalse(resultMatrixCSV0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 227
  /*Coverage entropy=3.0752205480543715
  */
  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getColName(15);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader(" ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 228
  /*Coverage entropy=4.269318945902872
  */
  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setCountWidth((-88));
      resultMatrixCSV0.setOptions((String[]) null);
      ResultMatrixLatex.main((String[]) null);
  }

  /**
  //Test case number: 229
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.assign((ResultMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 230
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.clearSummary();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertFalse(resultMatrixHTML0.getDefaultShowAverage());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
  }

  /**
  //Test case number: 231
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setRowNameWidth((-1265));
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader(")");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 232
  /*Coverage entropy=3.7497218606402334
  */
  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[3];
      resultMatrixHTML0.getSignificance((-1337), (-1337));
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getDefaultMeanWidth());
      assertEquals(0, resultMatrixHTML0.getDefaultCountWidth());
  }

  /**
  //Test case number: 233
  /*Coverage entropy=2.791039810954727
  */
  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[19][0];
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixHTML0.getColOrder();
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertTrue(resultMatrixHTML0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 234
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int int0 = resultMatrixCSV0.getStdDevPrec();
      assertEquals(2, int0);
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 235
  /*Coverage entropy=3.2128189783784378
  */
  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setRowNameWidth(69);
      resultMatrixCSV0.setOptions((String[]) null);
      resultMatrixCSV0.toStringSummary();
      assertFalse(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 236
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 2);
      String string0 = resultMatrixLatex0.getSummaryTitle(2);
      assertEquals("c", string0);
      
      resultMatrixLatex0.globalInfo();
      assertEquals(2, resultMatrixLatex0.getColCount());
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      assertEquals(2, resultMatrixLatex0.getVisibleRowCount());
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 237
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      boolean boolean0 = resultMatrixCSV0.getRemoveFilterName();
      assertFalse(boolean0);
      
      resultMatrixHTML0.enumerateRowNamesTipText();
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
  }

  /**
  //Test case number: 238
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setShowAverage(true);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader(")");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 239
  /*Coverage entropy=2.7368184083473874
  */
  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[5][0];
      resultMatrixHTML0.setRanking(intArray0);
      int int0 = resultMatrixHTML0.getDefaultSignificanceWidth();
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(0, int0);
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
  }

  /**
  //Test case number: 240
  /*Coverage entropy=2.777050329206674
  */
  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      int[][] intArray0 = new int[1][3];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.setSummary(intArray0, intArray0);
      String string0 = resultMatrixCSV1.padString("OH", 2, false);
      assertEquals(0, resultMatrixCSV1.getDefaultSignificanceWidth());
      assertEquals(0, resultMatrixCSV1.getDefaultMeanWidth());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertEquals(1, resultMatrixCSV1.getRowCount());
      assertEquals(1, resultMatrixCSV1.getColCount());
      assertEquals("OH", string0);
  }

  /**
  //Test case number: 241
  /*Coverage entropy=2.7292670234547844
  */
  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_CountWidth = (-2351);
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      String string0 = resultMatrixGnuPlot0.padString("Get position of option -o: ", (-2351), false);
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals("Get position of option -o: ", string0);
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintColNames());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 242
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(3, 3);
      resultMatrixHTML0.getDisplayName();
      String string0 = resultMatrixHTML0.padString("{iW&~^Z", 3, true);
      assertEquals("{iW", string0);
      
      resultMatrixHTML0.getRemoveFilterName();
      assertEquals(3, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(3, resultMatrixHTML0.getColCount());
  }

  /**
  //Test case number: 243
  /*Coverage entropy=3.287525722359293
  */
  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.padString(")", 13);
      resultMatrixCSV0.setOptions((String[]) null);
      resultMatrixCSV0.getCountWidth();
      assertFalse(resultMatrixCSV0.getEnumerateColNames());
  }

  /**
  //Test case number: 244
  /*Coverage entropy=2.8023124626719724
  */
  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      String string0 = resultMatrixGnuPlot0.padString(" ", 0, true);
      assertEquals(" ", string0);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultSignificanceWidth();
      double double0 = resultMatrixGnuPlot0.getMean(0, 0);
      assertEquals(Double.NaN, double0, 0.01);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixGnuPlot0.getRemoveFilterName();
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintColNames());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
  }

  /**
  //Test case number: 245
  /*Coverage entropy=3.196188468051917
  */
  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.setShowAverage(false);
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(18, stringArray0.length);
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 246
  /*Coverage entropy=2.8004698251768687
  */
  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.padString("<td>", (-65));
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals("<td>", string0);
      assertEquals(0, resultMatrixCSV0.getDefaultCountWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 247
  /*Coverage entropy=4.21039655529066
  */
  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 2);
      resultMatrixGnuPlot0.padString(" ", 198, true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(198, 2);
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixPlainText0.getDefaultSignificanceWidth();
      resultMatrixGnuPlot0.getMean(0, 0);
      ResultMatrixGnuPlot.main((String[]) null);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 248
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int int0 = ResultMatrix.SIGNIFICANCE_WIN;
      resultMatrixHTML0.getMean((-1738), 1);
      assertEquals(0, resultMatrixHTML0.getDefaultCountWidth());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(1, resultMatrixHTML0.getColCount());
  }

  /**
  //Test case number: 249
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 2);
      resultMatrixGnuPlot0.setSignificance(0, 1, 0);
      assertEquals(2, resultMatrixGnuPlot0.getVisibleColCount());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 250
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      String[] stringArray0 = new String[1];
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getAverage((-2102));
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(0, resultMatrixHTML0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixHTML0.getColCount());
  }

  /**
  //Test case number: 251
  /*Coverage entropy=3.9258981068180074
  */
  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      resultMatrixPlainText0.toStringMatrix();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader("v");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 252
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.padString("(", 0);
      assertEquals("(", string0);
      
      resultMatrixGnuPlot0.setSignificance(0, 1, 0);
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 253
  /*Coverage entropy=2.8332133440562166
  */
  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      int[][] intArray0 = new int[1][3];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.setSummary(intArray0, intArray0);
      resultMatrixCSV0.getMean(2, 2);
      int int0 = resultMatrixCSV0.getColNameWidth();
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
      assertEquals(0, int0);
      assertTrue(resultMatrixCSV0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }
}
