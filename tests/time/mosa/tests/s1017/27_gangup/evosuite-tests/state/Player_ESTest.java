/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 03:03:09 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.UnsupportedEncodingException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(295);
      assertEquals(0L, player0.getTimeOfDeath());
      
      player0.setDead((-1L));
      player0.pack();
      int int0 = Packable.GAME_STATE;
      long long0 = player0.getTimeOfDeath();
      assertEquals((-1L), long0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      player1.isConnected();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)101;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte) (-108);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1094), (byte)101);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      byteArrayInputStream0.mark(2366);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      player0.setY((-2793.0F));
      Player player1 = new Player((-1061), "m6", "m6", (-1061));
      player0.pack();
      player0.getY();
      int int0 = player0.type();
      assertEquals((-2793.0F), player0.getY(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.448437455613918
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player((-5));
      player0.pack();
      Party party0 = new Party();
      player0.head = party0;
      Player player1 = new Player((-5), "", 2686);
      player0.setJoinOK(player1, false);
      player0.isJoinOK(player1, true);
      player1.gangStrength();
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      boolean boolean0 = false;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      System.setCurrentTimeMillis((-3130L));
      Player player0 = new Player();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      player0.setMoney((-3130L));
      Party party0 = player0.gangBoss();
      player0.prev = party0;
      Party party1 = new Party((short)4919);
      player0.head = party1;
      player0.setDead(15000L, false);
      player0.getSubparty();
      player0.getTimeOfDeath();
      player0.getMoney();
      player0.pack();
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.748058988887039
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((-1622), (String) null, (-1622));
      player0.setDead((long) (-1622), true);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)95;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-77);
      byteArray0[6] = (byte)5;
      byteArray0[7] = (byte) (-66);
      player0.unpack(byteArray0);
      player0.reset(true);
      player0.type();
      player0.gangStrength();
      player0.toString();
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.0248847886694654
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player((-1070));
      player0.setZ(2467.1614F);
      player0.getIP();
      Player player1 = new Player((-1070), ".*[.]class$", "", 815, 0);
      player1.setJoinOK(player0, true);
      player0.isJoinOK(player1, true);
      assertEquals(2467.1614F, player0.getZ(), 0.01F);
      
      Player player2 = new Player();
      player2.isDead();
      player2.gangStrength();
      player2.isConnected();
      int int0 = player1.gangStrength();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = false;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.7518685126965625
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(4919);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-47);
      byteArray0[1] = (byte) (-36);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.setMoney((byte) (-47));
      byteArray0[2] = (byte) (-83);
      byteArray0[3] = (byte)55;
      byteArray0[4] = (byte)113;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player1 = new Player((-342), (String) null, (short)4919);
      player0.setDead(1392409281320L, false);
      player1.gangStrength();
      player0.isJoinOK(player1, false);
      player1.remove(player0);
      player0.pack();
      player0.getTimeOfDeath();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      
      player1.gangStrength();
      player1.getName();
      assertEquals(4919, player1.getPictureId());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, true);
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip(1L);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      assertEquals(26, byteArrayInputStream0.available());
      
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.04497334728722
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player(10, "FKh, ?U$'5U", "FKh, ?U$'5U", 4919, (-869));
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, true);
      Player player2 = new Player(2658, "Xo{Cja)^", "Xo{Cja)^", 517, (-17408));
      boolean boolean1 = player2.isDead();
      assertFalse(boolean1 == boolean0);
      
      int int0 = player2.gangStrength();
      assertEquals((-17408), int0);
      
      player0.isConnected();
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.getName());
      assertEquals("0.0.0.0", player0.getIP());
      
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte) (-116);
      player1.unpack(byteArray0);
      int int1 = player2.getPictureId();
      assertEquals(517, int1);
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals(10.0F, player2.getX(), 0.01F);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player();
      player0.setX(0.0F);
      player0.setZ((-0.14599542F));
      float float0 = player0.getZ();
      assertEquals((-0.14599542F), float0, 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player((-5));
      byte[] byteArray0 = player0.pack();
      Player player1 = new Player((-5), "", 2686);
      player0.setJoinOK(player1, false);
      player0.unpack(byteArray0);
      player1.getName();
      Player player2 = new Player(1320, "", "cm#eFz*Z$wPr'F=", 1320);
      int int0 = player2.type();
      assertEquals(1320, player2.getPictureId());
      assertEquals(5, int0);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, player0.getPictureId());
      assertFalse(boolean0);
      assertEquals("Player-5", player0.getName());
      assertEquals(0.0F, player0.getZ(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertEquals((-5), player0.getId());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.052128844641025
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.setX(0.0F);
      player0.type();
      player1.isConnected();
      player0.setZ(0.0F);
      player0.getIP();
      player1.setJoinOK(player0, false);
      Player player2 = new Player((short)4919, "0.0.0.0", (-1700));
      player2.isJoinOK(player0, true);
      Player player3 = new Player(109, "0.0.0.0", (String) null, (short)4919);
      player1.setZ(109);
      float float0 = player1.getZ();
      assertEquals(109.0F, float0, 0.01F);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.4869603437294296
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      player0.remove((Party) null);
      Player player1 = new Player((byte)0, ".G>gp,+*", "state.Party", (-102), (byte)0);
      player0.reset(false);
      player0.pack();
      player0.gangBoss();
      player1.getSubparty();
      player0.remove((Party) null);
      player1.remove((Party) null);
      player1.setDead(1392409281320L, true);
      player0.getStrength();
      player0.setX((-102));
      player1.pack();
      byte[] byteArray1 = player0.pack();
      player0.setDead((-614L));
      player0.getIP();
      player1.type();
      player0.setY(1.0F);
      player0.unpack(byteArray1);
      player1.setMoney(5);
      player0.getX();
      player0.setZ((-1.0F));
      assertTrue(player0.isDead());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.242232654667365
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player((-1650), "", "PlayDer", (-1650));
      player0.gangStrength();
      Player player1 = (Player)player0.gangBoss();
      player1.id = 1;
      player0.remove(player1);
      Player player2 = new Player((-1650), "", "", 2372, 0);
      player2.reset(false);
      player1.next = (Party) player2;
      player0.pack();
      Player player3 = (Player)player2.gangBoss();
      player3.getSubparty();
      player0.remove(player3);
      player0.remove(player2);
      player2.setMoney(1);
      player0.getStrength();
      player2.setX(0.0F);
      player0.pack();
      player3.setDead(1392409296304L);
      player0.setJoinOK(player1, true);
      player2.pack();
      player0.setY(2990.984F);
      player3.getStrength();
      player0.setJoinOK(player1, true);
      assertEquals(2990.984F, player1.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player();
      player0.getSubparty();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player((-8448), "^+", "", (-726));
      Player player1 = new Player();
      player0.setX(0.1F);
      player0.type();
      player0.getIP();
      Player player2 = new Player((-726), "T.6ROfO!u'", 2527);
      player0.setJoinOK(player2, true);
      player0.isDead();
      player0.isConnected();
      int int0 = player0.getPictureId();
      assertEquals(0.1F, player0.getX(), 0.01F);
      assertEquals((-726), int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.9417429777213613
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player1.setJoinOK(player0, true);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(1, player1.getStrength());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(player1.isDead());
      assertFalse(boolean0);
      assertEquals("Player-1", player1.toString());
      assertEquals(0, player1.getPictureId());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(1272, (String) null, "", 0);
      boolean boolean0 = player0.isConnected();
      String string0 = player0.getIP();
      assertNull(string0);
      
      boolean boolean1 = player0.isDead();
      assertFalse(boolean1 == boolean0);
      
      int int0 = player0.gangStrength();
      assertEquals(0, player0.getPictureId());
      assertEquals(1, int0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.324122434965307
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(5, "state.Party", 4919);
      player0.setY(4919);
      Player player1 = new Player(5, "M5wkrlCc52U``HwC#", (-1943));
      player0.prev = (Party) player1;
      player0.setDead((long) 4919);
      player0.pack();
      Player player2 = new Player(25600, "state.Party", "", (-726));
      player2.isJoinOK(player0, true);
      Player player3 = new Player();
      player3.setX(0.0F);
      player2.type();
      player2.isConnected();
      player0.setZ(2467.1614F);
      player2.getIP();
      player3.toString();
      Player player4 = new Player(5, "state.Party", "", 24415);
      player4.id = 1928;
      player4.setY(0.0F);
      player0.isJoinOK(player2, true);
      assertEquals(4919.0F, player0.getY(), 0.01F);
      
      float float0 = player3.getX();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Player player0 = new Player(1573);
      Player player1 = new Player(1573);
      player1.next = (Party) player0;
      player1.setY(2642.132F);
      player0.prev = (Party) player1;
      player1.setY(1573);
      player0.setDead();
      player0.head = (Party) player1;
      // Undeclared exception!
      player0.gangStrength();
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.047707978151193
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(4175);
      player0.setY(0.0F);
      player0.setMoney(4175);
      player0.setDead();
      player0.head = null;
      player0.isDead();
      player0.getIP();
      player0.setX(4175);
      player0.setY(4175);
      player0.id = 0;
      player0.reset(true);
      player0.isConnected();
      player0.id = 0;
      player0.toString();
      player0.getY();
      MockFile mockFile0 = new MockFile("0.0.0.0", "Player.unpck(): *** WARNING *** [IO failed to unpack data: ");
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(mockFile0, "");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // 
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player((-11264), "", "", (-11264), (-11264));
      player0.pack();
      int int0 = player0.getStrength();
      int int1 = player0.gangStrength();
      assertEquals((-11264), int1);
      assertEquals((-11264), player0.getPictureId());
      assertTrue(int1 == int0);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(5, (String) null, 5);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      assertEquals(29, byteArrayInputStream0.available());
      
      boolean boolean0 = player1.unpack(dataInputStream0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(29, byteArrayOutputStream0.size());
      
      player0.setJoinOK(player0, false);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(1342);
      player0.id = 1342;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)45;
      player0.unpack(byteArray0);
      player0.setMoney(1342);
      float float0 = player0.getMoney();
      assertEquals(1342.0F, float0, 0.01F);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(5, "", "", 5, 5);
      int int0 = player0.gangStrength();
      assertEquals(5, int0);
      assertEquals(5, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((-31853), "A`Be0?^", (short)4919);
      player0.add(player1);
      player0.pack();
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      
      int int0 = player1.gangStrength();
      assertFalse(player1.isDead());
      assertEquals(2, int0);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(player1.isConnected());
      assertEquals(4919, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(854, "X|_8`n5^iwP+FO[fy", 854);
      player0.setDead();
      long long0 = player0.getTimeOfDeath();
      assertEquals(1392409281320L, long0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player();
      long long0 = player0.getTimeOfDeath();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, long0);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(17);
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player17", player0.getName());
      
      Player player1 = new Player(17, "", "", 17);
      player1.toString();
      assertEquals(17, player1.getPictureId());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(player1.isConnected());
      assertFalse(player1.isDead());
      assertEquals(1, player1.getStrength());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.4986122886681095
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player(0);
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player(14335, "M-C<R!]RLM`>i", "kBs`3", (short)4919);
      player0.setZ(0.0F);
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getZ(), 0.01F);
      assertEquals("Player-1", player0.getName());
      
      float float0 = player1.getZ();
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(1, player1.getStrength());
      assertEquals(4919, player1.getPictureId());
      assertFalse(player1.isDead());
      assertEquals("M-C<R!]RLM`>i", player1.getIP());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player((-11264));
      Player player1 = new Player();
      player0.remove(player1);
      int int0 = player0.getPictureId();
      assertEquals(0, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals("Player-11264", player0.toString());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead((-1L));
      player0.setConnected(false);
      player0.getMoney();
      player0.isConnected();
      player0.setDead(1688L);
      assertEquals(1688L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player();
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      float float0 = player0.getY();
      assertFalse(player0.isConnected());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)6;
      byteArray0[3] = (byte)32;
      player0.unpack(byteArray0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-1", player0.toString());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(14310);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)99;
      byteArray0[1] = (byte)0;
      player0.unpack(byteArray0);
      int int0 = player0.type();
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player14310", player0.toString());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(5, int0);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.8836095585126564
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ((-1790.0875F));
      Player player1 = new Player((short)4919, "", (String) null, 0, 0);
      player1.getIP();
      Player player2 = new Player();
      player1.setJoinOK(player2, true);
      player2.isJoinOK(player0, true);
      assertEquals((-1790.0875F), player0.getZ(), 0.01F);
      
      player2.isDead();
      Player player3 = new Player((short)4919, (String) null, "Od2xY", (short)4919);
      assertEquals(4919, player3.getPictureId());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      int int0 = player0.type();
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.getName());
      assertEquals(5, int0);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(228, "RF`(pE+k-JAT;ba~oc", "RF`(pE+k-JAT;ba~oc", 228, 228);
      player0.getSubparty();
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      assertEquals((-28), player0.getId());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = player0.isDead();
      assertFalse(boolean0);
      
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      System.setCurrentTimeMillis(5);
      float float1 = player0.getY();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, float1, 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(2147340491);
      player0.setJoinOK(player0, false);
      String string0 = player0.getIP();
      assertEquals("0.0.0.0", string0);
      
      long long0 = player0.getTimeOfDeath();
      assertEquals(1, player0.getStrength());
      assertEquals(0L, long0);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player2147340491", player0.toString());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(true);
      player0.pack();
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead(0L);
      player0.isDead();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)55;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[1] = (byte)55;
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(boolean0);
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      player0.pack();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player((-782));
      player0.setX((-782));
      int int0 = player0.gangStrength();
      assertEquals((-782.0F), player0.getX(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player(248);
      Party party0 = player0.head;
      player0.prev = null;
      player0.setX(248);
      player0.getName();
      assertEquals(248.0F, player0.getX(), 0.01F);
  }
}
