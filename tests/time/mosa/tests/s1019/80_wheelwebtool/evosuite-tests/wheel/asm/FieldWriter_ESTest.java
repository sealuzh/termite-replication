/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 04:41:07 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldVisitor;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.4001443355569787
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2939));
      classWriter0.newInteger((-2939));
      String[] stringArray0 = new String[0];
      classWriter0.visit(49, 49, "3Dp?P/m]7M%yJ9.", "VL", "3Dp?P/m]7M%yJ9.", stringArray0);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-2939), "3Dp?P/m]7M%yJ9.", "3Dp?P/m]7M%yJ9.", "VL", "3Dp?P/m]7M%yJ9.");
      fieldWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      FieldVisitor fieldVisitor0 = null;
      try {
        fieldVisitor0 = new FieldWriter(classWriter0, 49, "3Dp?P/m]7M%yJ9.", "_", "_", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2940));
      String[] stringArray0 = new String[0];
      classWriter0.visit(1749, 962, "", "9Y%BbJ:9'", "p 8ss<1T5zOY<", stringArray0);
      FieldVisitor fieldVisitor0 = classWriter0.visitField((-250), "9Y%BbJ:9'", "p 8ss<1T5zOY<", "9Y%BbJ:9'", "");
      ByteVector byteVector0 = new ByteVector();
      FieldWriter fieldWriter0 = classWriter0.lastField;
      fieldWriter0.put(byteVector0);
      assertSame(fieldWriter0, fieldVisitor0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65535);
      classWriter0.newInteger(65535);
      String[] stringArray0 = new String[0];
      classWriter0.visit(62597, 62597, "3D#?iP/m]7M%yJ9.", "", "3D#?iP/m]7M%yJ9.", stringArray0);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(65535, "3D#?iP/m]7M%yJ9.", "3D#?iP/m]7M%yJ9.", "", "3D#?iP/m]7M%yJ9.");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0615632381579823
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2940));
      classWriter0.visitField((-2940), "wheel.asm.Label", "wheel.asm.Label", (String) null, "wheel.asm.Label");
      FieldWriter fieldWriter0 = classWriter0.firstField;
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0615632381579823
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2940));
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-2940), "wheel.asm.Label", "wheel.asm.Label", (String) null, "wheel.asm.Label");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = (-2922);
      ClassWriter classWriter0 = new ClassWriter((-2922));
      FieldVisitor fieldVisitor0 = classWriter0.visitField(1, "?&>?R$", "?&>?R$", "?&>?R$", "?&>?R$");
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldVisitor0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3622914870858265
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2926));
      classWriter0.index = (-2926);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(1, "?&>?R$", "?&>?R$", "?&>?R$", "?&>?R$");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2958));
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-2958), "Q&9UOeT]H\"", "Q&9UOeT]H\"", "Q&9UOeT]H\"", (Object) null);
      Attribute attribute0 = new Attribute("Q&9UOeT]H\"");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector(1);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1180);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(1, "AnnotationDefault", "AnnotationDefault", "AnnotationDefault", "AnnotationDefault");
      ByteVector byteVector0 = new ByteVector(2);
      byteVector0.length = 4096;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1202);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(1, "Z)XZS", "Z)XZS", "Z)XZS", "Z)XZS");
      fieldWriter0.visitAnnotation("Z)XZS", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2940));
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-2940), "?&>]m$", "?&>]m$", "?&>]m$", (Object) null);
      fieldWriter0.visitAnnotation("?&>]m$", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(40, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-36));
      FieldVisitor fieldVisitor0 = classWriter0.visitField(1, "U!#w)Ot]4|~|K@\"H", "U!#w)Ot]4|~|K@\"H", "U!#w)Ot]4|~|K@\"H", "U!#w)Ot]4|~|K@\"H");
      // Undeclared exception!
      try { 
        fieldVisitor0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2940));
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-2940), "n ?_Rm>V2[rXTQeiMm|", "n ?_Rm>V2[rXTQeiMm|", "n ?_Rm>V2[rXTQeiMm|", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2940));
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-2940), "$\"yxPCNC0", "$\"yxPCNC0", "$\"yxPCNC0", (Object) null);
      fieldWriter0.visitAnnotation("$\"yxPCNC0", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2940));
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-2940), "wheel.asm.Label", "wheel.asm.Label", "wheel.asm.Label", "wheel.asm.Label");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2940));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "?&>?R$", "?&>?R$", "`{bcca+v<{*r5", "?&>?R$");
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("`{bcca+v<{*r5", true);
      fieldWriter0.visitAnnotation("", true);
      fieldWriter0.visitEnd();
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1303);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(1, "?&>?R$", "?&>?R$", "?&>?R$", "?&>?R$");
      fieldWriter0.visitAnnotation("?&>?R$", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2946));
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(1, "?&>?R$", "?&>?R$", "?&>?R$", "?&>?R$");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2940));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "?&>]m$", "?&>]m$", "?&>]m$", "?&>]m$");
      FieldWriter fieldWriter1 = (FieldWriter)classWriter0.visitField((-2940), "?&>]m$", "?&>]m$", "?&>]m$", (Object) null);
      int int0 = fieldWriter1.getSize();
      assertEquals(28, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2940));
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, "?&>?R$", "?&>?R$", (String) null, object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@5f752435
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2926));
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(1, "n", "n", "n", "n");
      Attribute attribute0 = new Attribute("n");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-36));
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(1, "U!#w)Ot]4|~|K@\"H", "U!#w)Ot]4|~|K@\"H", "U!#w)Ot]4|~|K@\"H", "U!#w)Ot]4|~|K@\"H");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2946));
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(1, "?&>?R$", "?&>?R$", "?&>?R$", "?&>?R$");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, (-2938), "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
