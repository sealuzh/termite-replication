/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 04:25:44 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.876156142363588
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setPhotoWidth((-1913));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getVideoHeight();
      int int0 = homeEnvironment1.getCeillingLightColor();
      assertEquals((-1913), homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (String) null, uRLContent0, 0.0F, 8, "[ffG!5vG%", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(8, homeTexture0, 361, homeTexture0, 361, (-1422.34F));
      homeEnvironment0.getSkyTexture();
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(320, int0);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(8, homeEnvironment0.getGroundColor());
      assertEquals(361, homeEnvironment0.getLightColor());
      assertEquals(361, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-1422.34F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getCeillingLightColor();
      assertEquals(13684944, int0);
      
      int int1 = homeEnvironment0.getLightColor();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(0, int1);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("temporarySubFolder", (Content) null, (-2001), 0.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2001), homeTexture0, (-934), 2790, 0.0F);
      homeEnvironment0.setSkyColor(5201);
      homeEnvironment0.getGroundTexture();
      assertEquals(5201, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.getPhotoHeight();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0o_8wBVOi");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoCameraPath();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment0.setPhotoWidth((-2076));
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getVideoAspectRatio();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      HomeEnvironment.Property.values();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getDrawingMode();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf(">E44/O-X5T|eH");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.>E44/O-X5T|eH
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("FREE_RATIO", "FREE_RATIO", temporaryURLContent0, 0.0F, (-73.628F), "com.eteks.sweethome3d.io.HomeURLContent", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2146946698, homeTexture0, 2146946698, 2146946698, 0.0F);
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertNotNull(homeTexture1);
      assertEquals(2146946698, homeEnvironment0.getGroundColor());
      assertEquals(2146946698, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(2146946698, homeEnvironment0.getSkyColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.026522790307467
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Random.setNextRandom(4428);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setPhotoWidth((-925));
      homeEnvironment0.setPhotoQuality((-925));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      homeEnvironment0.setVideoFrameRate((-3614));
      homeEnvironment0.setLightColor((-925));
      homeEnvironment0.setVideoWidth(4428);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setPhotoQuality((-925));
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getSkyTexture();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf(",wg.tb{K");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.,wg.tb{K
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality((-348));
      homeEnvironment0.getVideoCameraPath();
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals((-348), int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.9713931362744876
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.setVideoQuality((-1280));
      System.setCurrentTimeMillis(0);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getVideoFrameRate();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoQuality(0);
      homeEnvironment1.getVideoCameraPath();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.getLightColor();
      homeEnvironment1.setVideoQuality((-2018));
      homeEnvironment1.getVideoQuality();
      HomeEnvironment.Property.values();
      homeEnvironment1.getCeillingLightColor();
      homeEnvironment1.getVideoQuality();
      homeEnvironment0.getVideoCameraPath();
      assertEquals((-1280), homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", uRLContent0, (-436.0F), (-436.0F), false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(340, homeTexture0, 340, homeTexture0, 340, (-436.0F));
      homeEnvironment0.getSkyTexture();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(340, homeEnvironment0.getGroundColor());
      assertEquals(340, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(340, homeEnvironment0.getSkyColor());
      assertEquals((-436.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(0L);
      CatalogTexture catalogTexture0 = new CatalogTexture("EL%b^s", (Content) null, 1, 0L, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1, homeTexture0, 148, homeTexture0, 148, 1);
      homeEnvironment0.getSkyTexture();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(148, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(148, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(1, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(1.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("fRG-k", (Content) null, 643, 643, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(643, homeTexture0, (-307), homeTexture0, (-307), 0.0F);
      homeEnvironment0.getSkyTexture();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-307), homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(643, homeEnvironment0.getGroundColor());
      assertEquals((-307), homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", (Content) null, 1555.9F, (-5643.7F), "", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2492, homeTexture0, 2492, homeTexture0, 2492, (-5643.7F));
      homeEnvironment0.getSkyTexture();
      assertEquals((-5643.7F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(2492, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(2492, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(2492, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", uRLContent0, (-1), (-1), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1), homeTexture0, (-1), homeTexture0, 1, 1764.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getGroundColor();
      assertEquals(1764.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(1, homeEnvironment1.getLightColor());
      assertEquals((-1), homeEnvironment1.getSkyColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals((-1), int0);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(320, homeEnvironment1.getVideoWidth());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-154));
      homeEnvironment0.clone();
      assertEquals((-154), homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-1419));
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals((-1419), int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-2765));
      homeEnvironment0.clone();
      assertEquals((-2765), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1030), (HomeTexture) null, (-1030), (-1030), (-1030));
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-1030), homeEnvironment0.getGroundColor());
      assertEquals((-1030.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-1030), homeEnvironment0.getSkyColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals((-1030), int0);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor((-1));
      int int0 = homeEnvironment1.getSkyColor();
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(8192);
      homeEnvironment0.clone();
      assertEquals(8192, homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.8797790870358644
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getWallsAlpha();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setPhotoWidth(0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "NLW3`5\"ip");
      homeEnvironment0.getPhotoWidth();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.clone();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homeEnvironment0.getGroundTexture();
      int int0 = homeEnvironment1.getPhotoWidth();
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment0.getDrawingMode());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 724, 724, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(724, homeTexture0, 724, 2395, 2395);
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertNotNull(homeTexture1);
      
      homeEnvironment0.getPhotoAspectRatio();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(724, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(724, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(2395, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(2395.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(320, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", uRLContent0, (-63.8991F), (-4298), "");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-4298), homeTexture0, (-4298), homeTexture0, (-4298), 1180.786F);
      homeEnvironment0.getGroundTexture();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(1180.786F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals((-4298), homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals((-4298), homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-4298), homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      // Undeclared exception!
      try { 
        homeEnvironment0.addPropertyChangeListener((HomeEnvironment.Property) null, (PropertyChangeListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality((-2050));
      homeEnvironment0.clone();
      assertEquals((-2050), homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-291));
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals((-291), homeEnvironment0.getVideoWidth());
      assertEquals((-218), int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      
      homeEnvironment0.setPhotoWidth((-1));
      homeEnvironment0.clone();
      assertEquals((-1), homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(3538);
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(3538, int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.7873780055103268
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getWallsAlpha();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setPhotoWidth(0);
      homeEnvironment0.getPhotoWidth();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment0.setSkyColor((-39));
      boolean boolean0 = homeEnvironment2.isAllLevelsVisible();
      assertEquals((-39), homeEnvironment0.getSkyColor());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(13427964);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment1.getLightColor());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-863));
      homeEnvironment0.setSubpartSizeUnderLight((-1.0F));
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals((-1.0F), float0, 0.01F);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setPhotoWidth(11);
      assertEquals(0, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(2.0F);
      homeEnvironment0.setSubpartSizeUnderLight(1341.0112F);
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(2.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(1341.0112F, float0, 0.01F);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setLightColor(20);
      homeEnvironment1.setVideoQuality(1083);
      homeEnvironment0.setLightColor(1083);
      homeEnvironment1.setSubpartSizeUnderLight(0);
      homeEnvironment1.setVideoFrameRate(0);
      homeEnvironment1.setPhotoQuality(0);
      homeEnvironment0.setPhotoWidth(1083);
      int int0 = homeEnvironment1.getVideoQuality();
      assertEquals(1083, homeEnvironment0.getPhotoWidth());
      assertEquals(1083, int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(400);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(13684944);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(11053224);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor((-2313));
      homeEnvironment0.clone();
      assertEquals((-2313), homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor((-661));
      homeEnvironment0.clone();
      assertEquals((-661), homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-328));
      homeEnvironment0.clone();
      assertEquals((-328), homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setVideoFrameRate(12);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setPhotoWidth(13684944);
      homeEnvironment0.getGroundColor();
      int int0 = homeEnvironment0.getSkyColor();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(513);
      homeEnvironment0.setVideoQuality(513);
      homeEnvironment0.clone();
      System.setCurrentTimeMillis(513);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-4255));
      homeEnvironment0.clone();
      assertEquals((-4255), homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-3136));
      homeEnvironment0.getGroundTexture();
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals((-3136), int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-17), (HomeTexture) null, (-17), 850, 850);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.getWallsAlpha();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      assertFalse(homeEnvironment1.isObserverCameraElevationAdjusted());
      
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(1227133529);
      homeEnvironment0.getDrawingMode();
      assertEquals(1227133529, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getLightColor());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(300);
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(300, homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = homeEnvironment0.getPhotoAspectRatio();
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.clone();
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
      
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(2144681607);
      homeEnvironment0.clone();
      assertEquals(2144681607, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(850, (HomeTexture) null, 20, (HomeTexture) null, (-3090), (-1141.1F));
      homeEnvironment0.getWallsAlpha();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment1.clone();
      homeEnvironment0.setSkyColor(4026);
      assertEquals(4026, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.9954171502194566
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.getWallsAlpha();
      homeEnvironment1.setCeillingLightColor(8);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getPhotoWidth();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(0, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      boolean boolean0 = homeEnvironment1.isObserverCameraElevationAdjusted();
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 1.0F, 0.0F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 3, homeTexture0, 0, 0);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      // Undeclared exception!
      try { 
        homeEnvironment0.setSkyTexture(homeTexture1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(8192);
      homeEnvironment0.clone();
      assertEquals(8192, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", (Content) null, 2488.0F, 2488.0F, "");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture("#uLVR>p{Jt{})", "#uLVR>p{Jt{})", (Content) null, 1.0F, 1.0F, "#uLVR>p{Jt{})");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((-1.0F));
      homeEnvironment0.clone();
      assertEquals((-1.0F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("WALLS_ALPHA", ".`E4", (Content) null, 0, 0, "", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 1, homeTexture0, 1, 1);
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(0, int0);
      assertEquals(1, homeEnvironment0.getSkyColor());
      assertEquals(1.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(1, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(2.0F);
      homeEnvironment0.clone();
      assertEquals(2.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha((-3253.452F));
      homeEnvironment0.clone();
      assertEquals((-3253.452F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-2331));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getVideoWidth();
      assertEquals((-1748), homeEnvironment0.getVideoHeight());
      assertEquals((-2331), int0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(2146543721);
      homeEnvironment0.clone();
      assertEquals(2146543721, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(300);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(320);
      homeEnvironment0.setSkyColor(320);
      homeEnvironment0.clone();
      assertEquals(320, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.isAllLevelsVisible();
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-1702));
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals((-1702), homeEnvironment0.getVideoFrameRate());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(25);
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      float float0 = homeEnvironment1.getWallsAlpha();
      assertEquals(0.0F, float0, 0.01F);
      
      float float1 = homeEnvironment1.getSubpartSizeUnderLight();
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(0.0F, float1, 0.01F);
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(240, homeEnvironment1.getVideoHeight());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1102, (HomeTexture) null, 1102, (HomeTexture) null, 1102, 1102);
      int int0 = homeEnvironment0.getVideoHeight();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(1102, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(1102, homeEnvironment0.getLightColor());
      assertEquals(1102.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, int0);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(1102, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(19);
      homeEnvironment0.clone();
      assertEquals(19, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(3431);
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(2573, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getLightColor());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-145), (HomeTexture) null, (-145), (-145), (-145));
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-145.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-145), homeEnvironment0.getSkyColor());
      assertEquals((-145), homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-145), homeEnvironment0.getGroundColor());
      assertEquals(240, int0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(1684.5F);
      homeEnvironment0.clone();
      assertEquals(1684.5F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(1);
      homeEnvironment0.getGroundTexture();
      assertEquals(1, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.clone();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(13427978);
      homeEnvironment0.clone();
      assertEquals(13427978, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(3417);
      homeEnvironment0.setPhotoQuality(3417);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(3417, homeEnvironment0.getPhotoQuality());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(13684944);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.clone();
      assertEquals(AspectRatio.RATIO_16_9, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getSkyColor();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13427964, int0);
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_WIDTH;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertNotSame(homeEnvironment1, homeEnvironment0);
  }
}
