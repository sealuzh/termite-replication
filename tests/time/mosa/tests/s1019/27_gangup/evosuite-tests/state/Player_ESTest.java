/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 04:51:49 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "state.Player";
      Player player0 = new Player((-1070), "state.Player", "", 1);
      player0.pack();
      int int0 = 1;
      Player player1 = new Player(1);
      Player player2 = new Player();
      boolean boolean0 = true;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player2.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((-3828), "&&", "module.ModuleBrowserDialog$ModuleFilter", 0, 0);
      player0.pack();
      System.setCurrentTimeMillis(2252L);
      int int0 = player0.getStrength();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("&&", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.786456060735981
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "module.ModuleBrowserDialog$ModuleFilter";
      Player player0 = new Player(7939, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 7939);
      boolean boolean0 = false;
      player0.setConnected(false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.setDead((long) 7939);
      Player player1 = new Player(7939, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 713, 176);
      player0.add(player1);
      player0.setMoney(232.5891F);
      player0.getMoney();
      player0.getStrength();
      player0.getMoney();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.7874335778425303
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, false);
      player0.pack();
      player0.type();
      Player player1 = new Player();
      player1.getZ();
      player1.getZ();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.setZ(1.0F);
      player0.getZ();
      assertEquals(1.0F, player0.getZ(), 0.01F);
      
      System.setCurrentTimeMillis(5);
      player1.pack();
      float float0 = player1.getMoney();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.519382346735597
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player((-2192), (String) null, (String) null, (-5328), (-5328));
      player0.setDead();
      Party party0 = new Party(2564);
      player0.boss = party0;
      boolean boolean0 = true;
      Player player1 = new Player((-2192), "a#7oMp{-Sfyeda29", (-5328));
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((-512), ".H6QvM", "N5m", (-512));
      player0.setX((-512));
      float float0 = player0.getX();
      assertEquals((-512.0F), float0, 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      player0.getName();
      int int0 = (-27136);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-31);
      byteArray0[1] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-27136), 1229);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Player player0 = new Player((-5174), "", "", (-5174), (-5174));
      int int0 = player0.getStrength();
      assertEquals((-5174), int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals((-5174), player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(2773, "", "", 2773, (-680));
      byte[] byteArray0 = new byte[4];
      Party party0 = player0.next;
      player0.boss = null;
      byteArray0[0] = (byte) (-38);
      byteArray0[1] = (byte)47;
      byteArray0[2] = (byte)60;
      player0.getSubparty();
      player0.setConnected(false);
      byteArray0[3] = (byte)108;
      player0.unpack(byteArray0);
      player0.setX(0.0F);
      player0.getX();
      PushbackInputStream pushbackInputStream0 = null;
      try {
        pushbackInputStream0 = new PushbackInputStream((InputStream) null, (-1148));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)95;
      byteArray0[1] = (byte)124;
      byteArray0[2] = (byte) (-51);
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte) (-100);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player((-491), "", (-491));
      player0.toString();
      player0.pack();
      player0.toString();
      float float0 = player0.getMoney();
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals((-491), player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player();
      player0.type();
      player0.setDead();
      player0.getTimeOfDeath();
      System.setCurrentTimeMillis(1392409281320L);
      Player player1 = new Player(5, "", (-850));
      player0.isJoinOK(player1, false);
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      
      player1.pack();
      assertEquals(5, player1.type());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.6959678633352593
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      player0.setMoney((short)4919);
      player0.isJoinOK(player1, false);
      assertEquals(4919.0F, player0.getMoney(), 0.01F);
      
      Player player2 = new Player();
      player1.setJoinOK(player2, false);
      Player player3 = new Player((-5120), (String) null, (short)4919);
      player3.isConnected();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte) (-104);
      byteArray0[6] = (byte)4;
      byteArray0[7] = (byte)1;
      byteArray0[8] = (byte)4;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player1.unpack(dataInputStream0);
      player3.getName();
      assertEquals(0.0F, player3.getY(), 0.01F);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.321136508685147
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      Player player1 = new Player(437, "state.Party", "2&4(Vck5}&T", 437, (short)4919);
      player0.setConnected(true);
      player1.setJoinOK(player0, true);
      player0.pack();
      player1.getIP();
      player1.setX((-1.0F));
      player1.isJoinOK(player0, true);
      player0.getZ();
      player0.setDead();
      player1.getIP();
      player0.setConnected(true);
      player1.setDead((long) (short)4919, false);
      int int0 = player1.getPictureId();
      assertEquals(4919L, player1.getTimeOfDeath());
      assertEquals(437, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.4690744582630857
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player((-173), "w&atXmVx~fczFD", "]U.vG", 0, 0);
      player0.setConnected(false);
      player0.setZ(0.0F);
      player0.toString();
      Player player1 = new Player((short)4919);
      player0.isJoinOK(player1, true);
      player0.setJoinOK(player1, false);
      player0.gangStrength();
      player1.setJoinOK(player0, true);
      player1.pack();
      player0.getIP();
      player1.setX(0.0F);
      player0.setDead((long) (short)4919, false);
      player1.setDead();
      player0.getX();
      player1.setConnected(false);
      player0.setDead((long) (short)4919, false);
      int int0 = player1.getPictureId();
      assertEquals(1392409281320L, player1.getTimeOfDeath());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player((-5328), (String) null, 940);
      player0.toString();
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(940, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.969755134636486
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player((-1));
      player0.getY();
      player0.setMoney((-1));
      Player player1 = new Player();
      player1.getY();
      Player player2 = new Player((short)4919, "h!>v", "]#ooX#9#y0C:u", (-294));
      player0.pack();
      player2.setDead((-1L), false);
      player1.isJoinOK(player2, false);
      player0.getTimeOfDeath();
      player2.getTimeOfDeath();
      int int0 = player0.type();
      assertEquals((-1.0F), player0.getMoney(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player((-587), (String) null, "module.ModuleBrowserDialog$ModuleFilter", 1, 0);
      Party party0 = player0.next;
      player0.remove((Party) null);
      Player player1 = new Player(1);
      player0.add(player1);
      String string0 = player0.getIP();
      assertNull(string0);
      
      Player player2 = new Player(1);
      player2.prev = (Party) player0;
      player2.prev.head = null;
      boolean boolean0 = player0.isJoinOK(player2, true);
      assertEquals(0, player0.getStrength());
      assertEquals(1, player0.getPictureId());
      assertFalse(boolean0);
      
      int int0 = player2.type();
      assertEquals(5, int0);
      
      float float0 = player2.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      player2.pack();
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertTrue(player2.isConnected());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals(0, player2.getPictureId());
      assertEquals(0L, player2.getTimeOfDeath());
      assertFalse(player2.isDead());
      assertEquals("Player1", player2.getName());
      assertEquals("0.0.0.0", player2.getIP());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.5681782945332445
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player((-1), "module.ModuleBrowserDialog$ModuleFilter", (-1));
      player0.setMoney((-1));
      player0.isConnected();
      player0.setY((-1));
      player0.getSubparty();
      player0.getMoney();
      player0.setMoney((-1.0F));
      player0.setY(0L);
      player0.setDead(0L);
      byte[] byteArray0 = player0.pack();
      player0.setConnected(false);
      player0.setDead();
      player0.toString();
      player0.getX();
      Player player1 = new Player((-1), "module.ModuleBrowserDialog$ModuleFilter", (-4841));
      player1.setY((-1));
      player1.setX((-4841));
      player1.setDead((long) (-1), false);
      player0.unpack(byteArray0);
      player0.gangStrength();
      player0.isDead();
      player1.setDead(300L);
      player0.type();
      player1.getY();
      player1.isConnected();
      float float0 = player1.getY();
      assertEquals((-1.0F), float0, 0.01F);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player((-2513), (String) null, (-2513));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player((-51), "state.Party", "state.Party", (-51));
      player0.setDead();
      player0.setMoney((-51));
      player0.getMoney();
      player0.getStrength();
      System.setCurrentTimeMillis(1720L);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((-1957), (String) null, (-1957));
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      player0.unpack(dataInputStream0);
      player0.reset(true);
      int int0 = player0.getPictureId();
      assertFalse(player0.isConnected());
      assertEquals((-1957), int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "3b7\"e-v<pG", (short)4919);
      player1.setJoinOK(player0, true);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)99;
      byteArray0[1] = (byte) (-51);
      player1.unpack(byteArray0);
      // Undeclared exception!
      try { 
        player1.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.3889133672295046
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player((-4286), "", "", (-4286));
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)31;
      Party party0 = new Party(5);
      party0.remove(player0);
      player0.add(party0);
      player0.unpack(byteArray0);
      byteArray0[1] = (byte) (-31);
      player0.unpack(byteArray0);
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte)119;
      player0.unpack(byteArray0);
      player0.id = (-4286);
      Player player1 = new Player();
      player0.unpack(byteArray0);
      player0.add(player1);
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player((-2192), (String) null, (String) null, (-5328), (-5328));
      player0.remove((Party) null);
      player0.gangStrength();
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.124771615329544
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(3, "", "", (-1));
      player0.reset(true);
      Party party0 = player0.gangBoss();
      player0.boss = party0;
      player0.setDead((long) (-1), true);
      player0.setY(610.1778F);
      party0.id = 582;
      player0.prev = party0;
      party0.remove((Party) null);
      player0.getZ();
      player0.prev = party0;
      player0.getMoney();
      player0.getStrength();
      byte[] byteArray0 = player0.pack();
      player0.setX(1899.3866F);
      player0.getName();
      player0.unpack(byteArray0);
      assertEquals((-1L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.0506636431758234
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(2026);
      player0.setX(2026);
      player0.setDead();
      Player player1 = new Player(559, "^z:=C", "^z:=C", (short)4919, (short)4919);
      player1.next = (Party) player0;
      Player player2 = new Player(2026);
      byte[] byteArray0 = player2.pack();
      player0.remove(player1.next);
      player0.unpack(byteArray0);
      float float0 = player0.getY();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      player0.pack();
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((-1719), "", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", (short)4919, 3351);
      player1.pack();
      player1.next = (Party) player0;
      player1.getIP();
      player1.setConnected(true);
      player1.setDead((long) 3351, true);
      player1.pack();
      assertEquals(3351L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(3281);
      Player player1 = new Player(0);
      player0.head = (Party) player1;
      player0.pack();
      player0.remove(player1);
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      float float0 = player0.getY();
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player3281", player0.getName());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = player0.isJoinOK(player0, true);
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (short)4919, 1025);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean1 = player0.unpack(dataInputStream0);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertTrue(boolean1 == boolean0);
      assertEquals(1, player0.getStrength());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player();
      assertFalse(player0.isDead());
      
      player0.setDead(0L, false);
      int int0 = player0.getStrength();
      assertTrue(player0.isDead());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.325034967464351
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player();
      player0.setConnected(false);
      player0.setZ(0.0F);
      player0.toString();
      Player player1 = new Player(3);
      Player player2 = new Player(4919);
      player1.isJoinOK(player2, true);
      player0.setJoinOK(player2, false);
      player0.gangStrength();
      player0.setJoinOK(player1, true);
      player2.pack();
      player1.getIP();
      player2.setX(0.2F);
      player0.setDead((-503L), true);
      player1.setDead();
      player2.getX();
      player0.isConnected();
      player0.isJoinOK(player2, true);
      Player player3 = new Player(4919, "](", 1);
      player0.setX(1.0F);
      assertEquals(1.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player((-1));
      int int0 = player0.getPictureId();
      assertEquals(0, int0);
      
      float float0 = player0.getMoney();
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-1", player0.toString());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player((-5328), (String) null, 940);
      String string0 = player0.getIP();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(940, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("0.0.0.0", string0);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(false);
      player0.pack();
      player0.setDead(0L);
      boolean boolean0 = player0.isDead();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isDead();
      assertFalse(boolean0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(boolean0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player();
      float float0 = player0.getX();
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, float0, 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player();
      player0.setY((-973.52F));
      assertEquals((-973.52F), player0.getY(), 0.01F);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(false);
      player0.setJoinOK(player0, false);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertTrue(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(true);
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.getName());
      assertEquals("0.0.0.0", player0.getIP());
  }
}
