/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 07:19:30 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 0, 0);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 14, homeTexture0, (-1826), 1740.0026F);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.getSkyTexture();
      assertEquals(14, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(1740.0026F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals((-1826), homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.8331547833861124
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality((-834));
      homeEnvironment0.setPhotoQuality((-834));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      String string0 = null;
      homeEnvironment0.setPhotoQuality((-834));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      homeEnvironment1.getPhotoQuality();
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth((-6));
      homeEnvironment1.setAllLevelsVisible(true);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_TEXTURE;
      homeEnvironment2.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      Random.setNextRandom((-834));
      homeEnvironment0.getPhotoAspectRatio();
      String string1 = "com.eteks.sweethome3d.tools.URLContent";
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("com.eteks.sweethome3d.tools.URLContent");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.com.eteks.sweethome3d.tools.URLContent
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.007081920694827
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-551));
      homeEnvironment0.setVideoFrameRate(23);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setVideoWidth((-1606));
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setVideoWidth((-1606));
      homeEnvironment0.setVideoQuality(23);
      homeEnvironment0.setWallsAlpha(175.97136F);
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio((AspectRatio) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      
      homeEnvironment1.setPhotoHeight(0);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      int int0 = homeEnvironment2.getPhotoHeight();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", uRLContent0, 1408.6F, 0.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeTexture homeTexture1 = homeEnvironment0.getSkyTexture();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertNotNull(homeTexture1);
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((-396));
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals((-396), int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      CatalogTexture catalogTexture0 = new CatalogTexture(" e+G/SqLS", " e+G/SqLS", (Content) null, 0L, 0L, " e+G/SqLS");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1), homeTexture0, 6, homeTexture0, 11053224, 11053224);
      homeEnvironment0.getGroundTexture();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.023907271562916
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(7);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte) (-40);
      homeEnvironment0.setVideoFrameRate(1258);
      homeEnvironment0.getGroundTexture();
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setGroundColor((byte)14);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode1);
      homeEnvironment1.setLightColor(0);
      Random.setNextRandom(1258);
      homeEnvironment1.getLightColor();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getVideoHeight();
      Random.setNextRandom(534);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha((-1337.1F));
      float float0 = homeEnvironment0.getWallsAlpha();
      assertEquals((-1337.1F), float0, 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2494), (HomeTexture) null, 0, (HomeTexture) null, (-2494), 1.5F);
      assertEquals((-2494), homeEnvironment0.getGroundColor());
      
      homeEnvironment0.setGroundColor(0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.listIterator();
      Camera camera0 = new Camera((-2494), (-2494), 1.5F, 0, (-2494), 1.5F);
      Camera camera1 = camera0.clone();
      Camera.convertTimeToTimeZone(0, "");
      linkedList0.add(camera0);
      linkedList0.add(camera1);
      homeEnvironment0.getVideoCameraPath();
      linkedList0.removeLast();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.getLightColor();
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getGroundColor();
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture(":CC<~JD_WW26e{a_'D", (Content) null, (-1527.79F), (-1527.79F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(13684944, int0);
      
      HomeTexture homeTexture1 = homeEnvironment0.getSkyTexture();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertNotNull(homeTexture1);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (Content) null, 2216, 0.0F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2216, homeTexture0, 2216, 2216, 0.0F);
      homeEnvironment0.getVideoCameraPath();
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals(2216, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(2216, homeEnvironment0.getGroundColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(2216, homeEnvironment0.getLightColor());
      assertNotNull(homeTexture1);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("T T$/<ZM]&>?)@];u", (Content) null, 882, 882);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(882, homeTexture0, (-1517), homeTexture0, (-297), (-1517));
      homeEnvironment0.getSkyTexture();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-1517), homeEnvironment0.getSkyColor());
      assertEquals((-1517.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-297), homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(882, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-344));
      homeEnvironment0.getVideoHeight();
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals((-258), homeEnvironment0.getVideoHeight());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.238846104111004
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setSubpartSizeUnderLight(1465.642F);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getSubpartSizeUnderLight();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setSkyColor((-4105));
      homeEnvironment0.getSubpartSizeUnderLight();
      HomeEnvironment.Property.values();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getLightColor();
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getWallsAlpha();
      HomeEnvironment.Property.values();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getVideoCameraPath();
      assertEquals(1465.642F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality((-1077));
      homeEnvironment0.clone();
      assertEquals((-1077), homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((-1770.0F));
      homeEnvironment0.clone();
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals((-1770.0F), float0, 0.01F);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(2271);
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(2271, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture(".Xj='j<{JPF>IC", (Content) null, (-546), (-2541.373F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-546), homeTexture0, (-546), (-546), 1.7777778F);
      homeEnvironment0.getGroundTexture();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("|gV~", (Content) null, 10, 10);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(10, homeTexture0, 10, 4, 4);
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(4.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertNotNull(homeTexture1);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(10, homeEnvironment0.getGroundColor());
      assertEquals(4, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(10, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = (-551);
      int int1 = (-1);
      homeEnvironment0.setVideoFrameRate((-1));
      homeEnvironment0.getVideoCameraPath();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("SKY_TEXTURE", propertyChangeListener0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "SKY_TEXTURE", (Object) null, homeEnvironment0);
      propertyChangeEvent0.toString();
      // Undeclared exception!
      try { 
        homeEnvironment0.addPropertyChangeListener((HomeEnvironment.Property) null, propertyChangeListenerProxy0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(46, (HomeTexture) null, 46, (HomeTexture) null, (-2693), (-1571));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setCeillingLightColor(11);
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.setVideoFrameRate((-1571));
      homeEnvironment1.setVideoQuality(0);
      homeEnvironment1.getVideoWidth();
      homeEnvironment1.clone();
      assertEquals(11, homeEnvironment0.getCeillingLightColor());
      assertEquals(46, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(2190);
      homeEnvironment0.clone();
      assertEquals(2190, homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.0742874483964036
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-551));
      homeEnvironment0.setVideoFrameRate(23);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoFrameRate(23);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setVideoWidth((-1606));
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setVideoWidth((-1606));
      homeEnvironment0.setVideoQuality(8);
      homeEnvironment0.setWallsAlpha(176.0F);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      boolean boolean0 = homeEnvironment0.isAllLevelsVisible();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(320);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(320, homeEnvironment0.getVideoWidth());
      
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1571), (HomeTexture) null, (-1571), (HomeTexture) null, 3974, 0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setCeillingLightColor((-20));
      homeEnvironment1.setVideoQuality((-4292));
      homeEnvironment0.setCeillingLightColor(7);
      homeEnvironment1.getPhotoHeight();
      homeEnvironment1.setPhotoHeight((-4292));
      int int0 = homeEnvironment1.getSkyColor();
      assertEquals((-4292), homeEnvironment1.getVideoQuality());
      assertEquals((-1571), int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(13684944);
      homeEnvironment0.setPhotoHeight(13684944);
      homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality((-83));
      homeEnvironment0.clone();
      assertEquals((-83), homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-330));
      homeEnvironment0.clone();
      assertEquals((-330), homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-1576));
      homeEnvironment0.getGroundColor();
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals((-1576), homeEnvironment0.getGroundColor());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setVideoWidth((-1365));
      homeEnvironment0.setVideoQuality((-1526));
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getPhotoHeight();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(2145567824);
      homeEnvironment0.clone();
      assertEquals(2145567824, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(2146556079);
      homeEnvironment0.clone();
      assertEquals(2146556079, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getDrawingMode();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 1.7777778F, 1.7777778F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0, int0);
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertNotSame(homeEnvironment0, homeEnvironment1);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.574464215715726
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoQuality((-3586));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setWallsAlpha(156.1F);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment1.setVideoAspectRatio(aspectRatio1);
      int int0 = homeEnvironment1.getVideoQuality();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment1.getVideoAspectRatio());
      assertEquals((-3586), int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.3087432950398514
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, (-1161.8807F), 1010.815F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, 0, 0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment1.setAllLevelsVisible(true);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment1.setVideoFrameRate(0);
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.getSkyColor();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("VIEW_3D_RATIO", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("~)JO`*j^:l", propertyChangeListenerProxy0);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getVideoQuality();
      float float0 = homeEnvironment0.getWallsAlpha();
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(13427964);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(1100.9181F);
      homeEnvironment0.clone();
      assertEquals(1100.9181F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-475));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getPhotoHeight();
      assertEquals((-475), int0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(2145073453);
      homeEnvironment0.clone();
      assertEquals(2145073453, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(2033);
      homeEnvironment0.clone();
      assertEquals(2033, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor((-416));
      homeEnvironment0.clone();
      assertEquals((-416), homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.clone();
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.0248847886694654
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.setPhotoWidth(0);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment1.setPhotoWidth(0);
      homeEnvironment1.setGroundColor(0);
      homeEnvironment0.setWallsAlpha(0);
      homeEnvironment1.getGroundTexture();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      homeEnvironment1.getPhotoHeight();
      Object object0 = new Object();
      homeEnvironment1.clone();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.setLightColor(1131);
      assertEquals(0, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-588));
      homeEnvironment0.setVideoFrameRate((-1238));
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals((-588), homeEnvironment0.getCeillingLightColor());
      assertEquals((-1238), int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(25);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.5280403553936055
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-551));
      homeEnvironment0.setVideoFrameRate((-1));
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoFrameRate((-1));
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setVideoWidth((-902));
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setVideoWidth((-915));
      homeEnvironment0.setVideoQuality((-551));
      homeEnvironment0.setWallsAlpha(176.0F);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      assertEquals((-551), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(2146872720);
      homeEnvironment0.clone();
      assertEquals(2146872720, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-351));
      homeEnvironment0.clone();
      assertEquals((-351), homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.366590399694106
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("VIDEO_FRAME_RATE", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("^V?_}[G5bh><=", propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.GROUND_COLOR;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setCeillingLightColor((-576));
      homeEnvironment0.setAllLevelsVisible(false);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setVideoQuality(46);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment0.setVideoFrameRate(46);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.getSkyColor();
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy2);
      homeEnvironment1.getCeillingLightColor();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      homeEnvironment1.getPhotoWidth();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(classLoader0, "^V?_}[G5bh><=");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource ^V?_}[G5bh><=
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.clone();
      Random.setNextRandom(1827);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(2143399418);
      homeEnvironment0.clone();
      assertEquals(2143399418, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(0, homeEnvironment1.getPhotoQuality());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(11053224);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.isAllLevelsVisible();
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(11053224, homeEnvironment1.getGroundColor());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(11053224, int0);
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-902));
      homeEnvironment0.clone();
      assertEquals((-902), homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(7, (HomeTexture) null, 7, 10, 10);
      float float0 = homeEnvironment0.getWallsAlpha();
      assertEquals(10.0F, float0, 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(7, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(7, homeEnvironment0.getSkyColor());
      assertEquals(10, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getSkyTexture();
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoQuality(14);
      assertEquals(14, homeEnvironment1.getPhotoQuality());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-3452));
      homeEnvironment0.clone();
      assertEquals((-3452), homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getLightColor();
      homeEnvironment0.setVideoWidth(13684944);
      assertEquals(10263708, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setPhotoHeight(2347);
      assertEquals(2347, homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setPhotoHeight(300);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(13684944);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(520);
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(520, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(0, int0);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(1070);
      homeEnvironment0.clone();
      assertEquals(1070, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((-99.0F));
      homeEnvironment0.clone();
      assertEquals((-99.0F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(14, (HomeTexture) null, (-3003), 14, 14);
      homeEnvironment2.setSkyTexture((HomeTexture) null);
      int int0 = homeEnvironment1.getCeillingLightColor();
      assertEquals(13684944, int0);
      
      homeEnvironment1.setVideoCameraPath((List<Camera>) null);
      int int1 = homeEnvironment1.getPhotoWidth();
      assertEquals(400, int1);
      
      int int2 = homeEnvironment2.getVideoFrameRate();
      assertEquals(25, int2);
      
      HomeEnvironment homeEnvironment3 = homeEnvironment1.clone();
      assertEquals(300, homeEnvironment3.getPhotoHeight());
      assertEquals(240, homeEnvironment3.getVideoHeight());
      assertEquals(13427964, homeEnvironment3.getSkyColor());
      assertEquals(0.0F, homeEnvironment3.getWallsAlpha(), 0.01F);
      assertEquals(11053224, homeEnvironment3.getGroundColor());
      assertEquals(13684944, homeEnvironment3.getLightColor());
      assertNotSame(homeEnvironment3, homeEnvironment1);
      assertTrue(homeEnvironment3.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.5651558273941215
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.setPhotoWidth(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment1.setPhotoWidth(0);
      homeEnvironment1.setGroundColor(0);
      homeEnvironment0.setWallsAlpha(0);
      homeEnvironment1.getGroundTexture();
      homeEnvironment1.getVideoQuality();
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.setVideoQuality(1602);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setWallsAlpha(156.1F);
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      int int0 = homeEnvironment1.getVideoQuality();
      assertEquals(156.1F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((-396));
      homeEnvironment0.clone();
      assertEquals((-396), homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha((-239.44402F));
      homeEnvironment0.clone();
      assertEquals((-239.44402F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-551));
      homeEnvironment0.setVideoFrameRate((-1));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homeEnvironment0.setVideoWidth((-913));
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setVideoWidth((-915));
      homeEnvironment0.setVideoQuality((-551));
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.clone();
      assertEquals((-915), homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      assertEquals(AspectRatio.RATIO_16_9, homeEnvironment1.getVideoAspectRatio());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.clone();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.getDrawingMode();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(1.0F);
      homeEnvironment0.clone();
      assertEquals(1.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor((-271));
      homeEnvironment0.clone();
      assertEquals((-271), homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(320, int0);
      
      int int1 = homeEnvironment0.getPhotoHeight();
      assertEquals(300, int1);
      
      int int2 = homeEnvironment0.getPhotoQuality();
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0, int2);
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }
}
