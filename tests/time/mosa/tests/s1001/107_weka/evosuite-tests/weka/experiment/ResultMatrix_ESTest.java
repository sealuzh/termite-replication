/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 27 10:51:36 GMT 2020
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[7][0];
      int[] intArray1 = new int[2];
      intArray1[0] = 1;
      intArray1[1] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = 1;
      intArray2[1] = 1;
      intArray2[2] = 1;
      intArray2[3] = 0;
      intArray2[4] = 2;
      intArray2[5] = 2;
      intArray2[6] = (-2149);
      intArray2[7] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[9];
      intArray3[0] = 1;
      intArray3[1] = 0;
      intArray3[2] = 0;
      intArray3[3] = 0;
      intArray3[4] = (-2149);
      intArray3[5] = 2782;
      intArray3[6] = 0;
      intArray3[7] = (-2149);
      intArray3[8] = 1;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[2];
      intArray4[0] = 0;
      intArray4[1] = 1;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[3];
      intArray5[0] = (-2149);
      intArray5[1] = (-2149);
      intArray5[2] = 0;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[4];
      intArray6[0] = 2;
      intArray6[1] = 2782;
      intArray6[2] = 2762;
      intArray6[3] = 1;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[4];
      intArray7[0] = (-2149);
      intArray7[1] = (-2149);
      intArray7[2] = 2;
      intArray7[3] = 2782;
      intArray0[6] = intArray7;
      resultMatrixGnuPlot0.m_Wins = intArray0;
      resultMatrixGnuPlot0.getColHidden((-801));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.3314435619785363
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(7, 7);
      resultMatrixGnuPlot0.getAverage(7);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "v";
      stringArray0[3] = "";
      stringArray0[4] = "*";
      resultMatrixGnuPlot0.m_ColNames = stringArray0;
      int[] intArray0 = new int[7];
      intArray0[0] = 7;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 2;
      intArray0[4] = 1;
      intArray0[5] = 1;
      intArray0[6] = 0;
      resultMatrixGnuPlot0.m_RankingDiff = intArray0;
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.m_PrintColNames = false;
      String[] stringArray1 = resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.m_ColNames = stringArray1;
      resultMatrixGnuPlot0.setSignificance(16, (-1294), 2);
      resultMatrixGnuPlot0.getMeanWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(16, 16);
      resultMatrixHTML0.setStdDevPrec(180);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixHTML0.getDefaultRowNameWidth();
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.0575511999534277
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-sig-width";
      stringArray0[1] = "<td><b>(No. of datasets where [col] &gt;&gt; [row])</b></td></tr>\n";
      stringArray0[2] = "Whether to enumerate the column names (prefixing them with '(x)', with 'x' being the index).";
      stringArray0[3] = ")";
      stringArray0[4] = ")";
      stringArray0[5] = ")";
      stringArray0[6] = " ";
      try { 
        resultMatrixGnuPlot0.setOptions(stringArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"<td><b>(No. of datasets where [col] &gt;&gt; [row])</b></td></tr>
         // \"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.7458535301741085
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getCount(1);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.5986051779973063
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixGnuPlot0.isSignificance((-2064));
      resultMatrixGnuPlot0.globalInfo();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getDisplayName();
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.doubleToString(1483.0, (-1046));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.888487304076087
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getAverage(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 1);
      resultMatrixLatex0.getRemoveFilterName();
      resultMatrixLatex0.getColCount();
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.743535678836661
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1553, 2);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex0.setEnumerateRowNames(false);
      resultMatrixLatex1.getRowName(2);
      resultMatrixLatex1.getDefaultMeanPrec();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 1);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixLatex1.getRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = null;
      try {
        resultMatrixPlainText0 = new ResultMatrixPlainText((-4492), 46);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.8820050860883244
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 2);
      int[][] intArray0 = new int[1][2];
      resultMatrixGnuPlot0.setSummary(intArray0, intArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.globalInfo();
      resultMatrixSignificance0.clearSummary();
      resultMatrixSignificance0.getSignificanceCount(1, 1424);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.730113963040933
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 2);
      resultMatrixGnuPlot0.assign(resultMatrixHTML0);
      int[][] intArray0 = new int[1][2];
      resultMatrixGnuPlot0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.padString("*", (-2132), true);
      resultMatrixGnuPlot0.getDisplayCol(1);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.176082814659591
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getRevision();
      resultMatrixLatex0.clearSummary();
      resultMatrixLatex0.getAverage(0);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixLatex0.getSignificance(1932, 102);
      String[][] stringArray0 = new String[5][0];
      String[] stringArray1 = new String[2];
      stringArray1[0] = "$circ$";
      stringArray1[1] = " ";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[7];
      stringArray2[0] = "$circ$";
      stringArray2[1] = "$\bullet$";
      stringArray2[2] = "$\bullet$";
      stringArray2[3] = " ";
      stringArray2[4] = "8034";
      stringArray2[5] = "$\bullet$";
      stringArray2[6] = ")";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[3];
      stringArray3[0] = "$\bullet$";
      stringArray3[1] = ")";
      stringArray3[2] = "$\bullet$";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[5];
      stringArray4[0] = "8034";
      stringArray4[1] = "(";
      stringArray4[2] = "$\bullet$";
      stringArray4[3] = "8034";
      stringArray4[4] = "$\bullet$";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[1];
      stringArray5[0] = "$\bullet$";
      stringArray0[4] = stringArray5;
      resultMatrixLatex0.getColSize(stringArray0, (-1164));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.69690085000884
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = 2;
      intArray0[2] = 2;
      intArray0[3] = 0;
      intArray0[4] = 1;
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 1;
      intArray0[8] = 1;
      resultMatrixHTML1.setRowOrder(intArray0);
      resultMatrixHTML1.getColNameWidth();
      resultMatrixHTML0.isRowName((-705));
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.504242186827959
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(22, 22);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixCSV0.clearSummary();
      int int0 = 48;
      resultMatrixGnuPlot0.setSignificance(3985, 48, 85);
      ResultMatrixSignificance.main((String[]) null);
      resultMatrixCSV0.getVisibleColCount();
      String[][] stringArray0 = new String[4][9];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getColSize(stringArray0, 46, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5643075947917504
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.m_ColNameWidth = 1;
      resultMatrixLatex0.globalInfo();
      String[][] stringArray0 = new String[8][7];
      String[] stringArray1 = new String[2];
      stringArray1[0] = "*";
      stringArray1[1] = " ";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[8];
      stringArray2[0] = "";
      stringArray2[1] = "v";
      stringArray2[2] = "v";
      stringArray2[3] = "";
      stringArray2[4] = "(";
      stringArray2[5] = "*";
      stringArray2[6] = " ";
      stringArray2[7] = "v";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[3];
      stringArray3[0] = "v";
      stringArray3[1] = " ";
      stringArray3[2] = ")";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[2];
      stringArray4[0] = ")";
      stringArray4[1] = " ";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[8];
      stringArray5[0] = "Generates the matrix output in LaTeX-syntax.";
      stringArray5[1] = "";
      stringArray5[2] = "*";
      stringArray5[3] = " ";
      stringArray5[4] = "v";
      stringArray5[5] = " ";
      stringArray5[6] = "";
      stringArray5[7] = "";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[5];
      stringArray6[0] = "*";
      stringArray6[1] = "";
      stringArray6[2] = "v";
      stringArray6[3] = "(";
      stringArray6[4] = "Generates the matrix output in LaTeX-syntax.";
      stringArray0[5] = stringArray6;
      String[] stringArray7 = new String[9];
      stringArray7[0] = "";
      stringArray7[1] = "";
      stringArray7[2] = "(";
      stringArray7[3] = "v";
      stringArray7[4] = " ";
      stringArray7[5] = " ";
      stringArray7[6] = "";
      stringArray7[7] = "";
      stringArray7[8] = "";
      stringArray0[6] = stringArray7;
      String[] stringArray8 = new String[0];
      stringArray0[7] = stringArray8;
      resultMatrixHTML0.getColSize(stringArray0, 0, false, true);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.7284075400342926
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.getRemoveFilterName();
      resultMatrixLatex0.getStdDevPrec();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.973971854832384
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[1][8];
      int[] intArray1 = new int[7];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 2;
      resultMatrixHTML0.toStringKey();
      intArray1[3] = 1;
      intArray1[4] = 0;
      intArray1[5] = 0;
      intArray1[6] = 2;
      intArray0[0] = intArray1;
      resultMatrixGnuPlot0.setSummary(intArray0, intArray0);
      resultMatrixPlainText0.getDefaultPrintColNames();
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.95604681268449
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.clearHeader();
      resultMatrixSignificance0.setRowName(16, (String) null);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "*";
      stringArray0[1] = " ";
      resultMatrixGnuPlot0.m_ShowAverage = true;
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixGnuPlot0.setRowName(20, "");
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 1;
      intArray0[4] = 20;
      resultMatrixSignificance0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.getDisplayCol(569);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.globalInfo();
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.8423966757706127
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setColOrder(intArray0);
      resultMatrixHTML0.getSignificanceCount(964, 964);
      resultMatrixHTML0.getColHidden(26);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.076595013395783
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 3);
      resultMatrixLatex0.m_StdDevWidth = 0;
      resultMatrixLatex0.isSignificance(2813);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      boolean[] booleanArray0 = new boolean[6];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      resultMatrixGnuPlot0.m_MeanWidth = 0;
      resultMatrixLatex0.toStringRanking();
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      booleanArray0[5] = true;
      resultMatrixGnuPlot0.m_RowHidden = booleanArray0;
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixLatex0.getSignificance(0, 0);
      resultMatrixLatex0.getSignificanceCount((-682), 452);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.727255564123057
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML(1, 0);
      resultMatrixHTML2.padString("(", 2, false);
      int[][] intArray1 = new int[1][5];
      intArray1[0] = intArray0;
      resultMatrixHTML2.setRanking(intArray1);
      resultMatrixHTML0.trimString("v", 1);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.7258202337243733
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML2.toArray();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.setRowName(0, "(");
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.113837077825646
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray1 = new int[9][5];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      int[] intArray2 = new int[1];
      intArray2[0] = 1002;
      intArray1[2] = intArray2;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      intArray1[7] = intArray0;
      intArray1[8] = intArray0;
      resultMatrixCSV0.m_Wins = intArray1;
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.toStringRanking();
      resultMatrixHTML0.getRowOrder();
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.761403969737852
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_RemoveFilterName = true;
      int[] intArray0 = new int[1];
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML0.setColOrder(intArray0);
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 1006);
      resultMatrixGnuPlot0.getDisplayName();
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.assign((ResultMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.8364597609393054
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getOptions();
      resultMatrixHTML0.WIN_STRING = "-row-name-width";
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.getDefaultPrintColNames();
      int[] intArray0 = new int[0];
      resultMatrixHTML0.m_ColOrder = intArray0;
      resultMatrixCSV0.setRowName((-1), "*");
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.367429686986578
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixCSV1.setRowName(2, (String) null);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.330883734665733
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getAverage(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixCSV0.setRowName(990, "$circ$");
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.935710131412482
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.getOptions();
      resultMatrixCSV1.toArray();
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixCSV0.setRowName(1, "]");
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.06938175097516
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.m_HeaderValues = null;
      resultMatrixHTML1.toArray();
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML(0, 45);
      resultMatrixHTML0.getDefaultPrintColNames();
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.1509699624985
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_PrintColNames = true;
      resultMatrixSignificance0.m_EnumerateColNames = true;
      resultMatrixSignificance0.m_StdDevWidth = (-94);
      resultMatrixSignificance0.m_CountWidth = (-2308);
      resultMatrixSignificance0.setShowStdDev(true);
      resultMatrixSignificance0.getDefaultShowAverage();
      resultMatrixSignificance0.m_EnumerateRowNames = false;
      resultMatrixSignificance0.getCountWidth();
      resultMatrixSignificance0.setRowHidden((-685), true);
      resultMatrixSignificance0.padString("L|)0lFq\"/x|$>/=D", (-1), true);
      resultMatrixSignificance0.toArray();
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.3905969923317016
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColHidden(1, true);
      resultMatrixGnuPlot0.rowNameWidthTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toArray();
      resultMatrixHTML0.padString(" ", 2, false);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "]";
      ResultMatrixCSV.main(stringArray0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.7740207410164643
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixHTML0.m_EnumerateColNames = false;
      resultMatrixHTML0.setRowOrder(intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.setCount(0, 2);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      resultMatrixGnuPlot0.setSignificance(1924, (-1924), 50);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setColOrder(intArray0);
      resultMatrixHTML0.getRowCount();
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.6982155361548714
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      int[][] intArray0 = new int[5][5];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_ColNameWidth = 60;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.getRowName(0);
      resultMatrixCSV0.getDefaultSignificanceWidth();
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.367429686986578
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.setStdDevPrec(1);
      resultMatrixCSV0.getOptions();
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(resultMatrixCSV1);
      resultMatrixCSV2.toArray();
      resultMatrixCSV2.setCount(1, 0.0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setSignificance(1534, 0, 1);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.4713461110204076
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getAverage(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.listOptions();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toArray();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "*";
      stringArray0[2] = "]";
      stringArray0[3] = " ";
      resultMatrixCSV0.m_MeanPrec = (-1592);
      stringArray0[4] = "";
      stringArray0[5] = " ";
      stringArray0[6] = "";
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixCSV0.isStdDev((-157));
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2512, 0);
      resultMatrixPlainText0.removeFilterNameTipText();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertFalse(resultMatrixPlainText0.getDefaultShowStdDev());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setColOrder((int[]) null);
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertFalse(resultMatrixHTML0.getShowAverage());
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      assertEquals(0, resultMatrixHTML0.getDefaultCountWidth());
      assertTrue(resultMatrixHTML0.getDefaultPrintRowNames());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.2188758248682
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_CountWidth = 12;
      resultMatrixGnuPlot0.setOptions((String[]) null);
      resultMatrixGnuPlot0.getDisplayCol(12);
      assertEquals(0, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.7497218606402334
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.toArray();
      resultMatrixHTML0.setColOrder(intArray0);
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML(0, 45);
      resultMatrixHTML2.m_RankingWins = intArray0;
      resultMatrixHTML0.setEnumerateRowNames(false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(45, 2);
      resultMatrixPlainText0.getDefaultCountWidth();
      assertEquals(2, resultMatrixPlainText0.getVisibleRowCount());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      
      int int0 = resultMatrixHTML1.getDisplayCol((-790));
      assertEquals(0, resultMatrixHTML1.getColNameWidth());
      assertEquals((-1), int0);
      assertFalse(resultMatrixHTML1.getShowAverage());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.134162458586648
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setStdDevPrec((-3001));
      resultMatrixLatex0.getAverage(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader(")");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.8004698251768687
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      resultMatrixLatex0.toStringRanking();
      double double0 = resultMatrixLatex0.getAverage(1);
      assertEquals(0, resultMatrixLatex0.getVisibleColCount());
      assertEquals(0.0, double0, 0.01);
      
      resultMatrixCSV0.getDefaultPrintColNames();
      assertEquals(0, resultMatrixCSV0.getDefaultSignificanceWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
      assertFalse(resultMatrixCSV0.getDefaultShowAverage());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.52751915084157
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.2437383599150444
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      String[][] stringArray1 = resultMatrixCSV0.toArray();
      assertEquals(3, stringArray1.length);
      
      resultMatrixCSV0.getDefaultStdDevPrec();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.8526379562735795
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.toStringKey();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td colspan=\"2\"><b>Key</b></td></tr>\n   <tr><td><b>(1)</b></td><td>col0</td></tr>\n</table>\n", string0);
      
      resultMatrixHTML0.toStringSummary();
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      assertEquals(0, resultMatrixHTML0.getDefaultStdDevWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertTrue(resultMatrixHTML0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.659322697709516
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = new String[2];
      stringArray0[0] = ")";
      stringArray0[1] = "(";
      resultMatrixLatex0.m_RowNames = stringArray0;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 18);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.assign(resultMatrixLatex0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.1536817275549054
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.trimString("", 2);
      resultMatrixCSV0.setColNameWidth(2);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      assertEquals(2, resultMatrixCSV0.getColNameWidth());
      
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV();
      resultMatrixCSV2.toArray();
      assertEquals(2, resultMatrixCSV2.getStdDevPrec());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setColOrder(intArray0);
      resultMatrixHTML0.meanPrecTipText();
      assertEquals(0, resultMatrixHTML0.getDefaultStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.3589092667561466
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateColNames(true);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColName(1, "*");
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(1, 13);
      String[] stringArray0 = resultMatrixCSV1.getOptions();
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertEquals(18, stringArray0.length);
      
      String[][] stringArray1 = resultMatrixCSV0.toArray();
      assertEquals(3, stringArray1.length);
      
      resultMatrixCSV0.getDefaultColNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultRemoveFilterName();
      resultMatrixCSV0.toStringSummary();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.8443053266982625
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML0.getEnumerateRowNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixGnuPlot0.stdDevWidthTipText();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = (-1983);
      intArray0[3] = 0;
      intArray0[4] = 1938;
      intArray0[5] = 0;
      resultMatrixHTML1.setRowOrder(intArray0);
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.getSignificance(0, 1);
      String string0 = resultMatrixHTML1.trimString((String) null, 0);
      assertNull(string0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.colNameWidthTipText();
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertEquals("The maximum width of the column names (0 = optimal).", string0);
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertFalse(resultMatrixCSV0.getShowAverage());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.7725887222397803
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      int[] intArray0 = new int[1];
      String[] stringArray0 = new String[1];
      stringArray0[0] = ")";
      resultMatrixHTML0.m_ColNames = stringArray0;
      int[][] intArray1 = new int[12][9];
      intArray1[0] = intArray0;
      resultMatrixHTML0.setRanking(intArray1);
      resultMatrixHTML0.getEnumerateColNames();
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(0, resultMatrixHTML0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.7284075400342926
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringRanking();
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.isAverage((-525));
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintRowNames());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.8565066234227334
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.isAverage(0);
      resultMatrixHTML0.globalInfo();
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      
      resultMatrixGnuPlot0.setStdDev(0, 2, 1);
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.2711123181407666
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.m_EnumerateRowNames = true;
      double[][] doubleArray0 = new double[1][6];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (double) 1;
      doubleArray0[0] = doubleArray1;
      resultMatrixHTML0.m_StdDev = doubleArray0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColName(0, "");
      resultMatrixPlainText0.getSummaryTitle(0);
      resultMatrixPlainText0.setPrintColNames(true);
      resultMatrixHTML0.getDefaultShowAverage();
      ResultMatrixPlainText resultMatrixPlainText1 = null;
      try {
        resultMatrixPlainText1 = new ResultMatrixPlainText(2, (-4000));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.2945992363420884
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevPrec(1);
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.setCount(0, (-4897.372337792458));
      assertEquals(1, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.706413864146669
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 2);
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.setCount(1, 1);
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.7376696182833657
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(18, stringArray0.length);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 2);
      resultMatrixHTML0.setStdDevWidth(0);
      int[][] intArray0 = new int[1][2];
      resultMatrixGnuPlot0.setSummary(intArray0, intArray0);
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      
      resultMatrixHTML0.showStdDevTipText();
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.710517548876238
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_EnumerateRowNames = true;
      resultMatrixCSV0.getOptions();
      assertTrue(resultMatrixCSV0.getEnumerateRowNames());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.2770082047340865
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.m_EnumerateRowNames = true;
      double[][] doubleArray0 = new double[1][6];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (double) 1;
      doubleArray0[0] = doubleArray1;
      resultMatrixHTML0.m_StdDev = doubleArray0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int int0 = 13;
      resultMatrixPlainText0.setColName(13, (String) null);
      resultMatrixPlainText0.setPrintColNames(true);
      ResultMatrixPlainText resultMatrixPlainText1 = null;
      try {
        resultMatrixPlainText1 = new ResultMatrixPlainText((-443), 2);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.5603034559678974
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      resultMatrixLatex0.getAverage(1);
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      double double0 = resultMatrixLatex0.getAverage((-848));
      assertEquals(0.0, double0, 0.01);
      
      resultMatrixLatex0.getRemoveFilterName();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(0, resultMatrixLatex0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.enumerateRowNamesTipText();
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.311370775117544
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.padString("", (-921), true);
      assertEquals("", string0);
      
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultCountWidth());
      assertEquals(18, stringArray0.length);
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.277922384787935
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 2);
      int[][] intArray0 = new int[1][2];
      resultMatrixGnuPlot0.setSummary(intArray0, intArray0);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.8501476017100575
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColHidden(0, false);
      resultMatrixGnuPlot0.rowNameWidthTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      String[][] stringArray0 = resultMatrixCSV0.toArray();
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(3, stringArray0.length);
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.3068849378916276
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.m_MeanWidth = (-2410);
      resultMatrixCSV0.getSummaryTitle((-408));
      assertEquals((-2410), resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.8501274359005797
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevPrec(0);
      resultMatrixCSV0.trimString("# file: plot.dat #\n", (-2834));
      resultMatrixCSV0.setColNameWidth(56);
      resultMatrixCSV0.padString("# file: plot.dat #\n", 56, true);
      boolean boolean0 = resultMatrixCSV0.getDefaultShowStdDev();
      assertEquals(56, resultMatrixCSV0.getColNameWidth());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.8606234575716956
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV1.setMeanWidth(0);
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(resultMatrixCSV1);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.setColName((-1208), "*");
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText(287, 0);
      assertEquals(287, resultMatrixPlainText2.getVisibleColCount());
      assertFalse(resultMatrixPlainText2.getShowAverage());
      
      resultMatrixCSV1.toArray();
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      
      resultMatrixCSV0.getDefaultColNameWidth();
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.7127291374784415
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      int[] intArray0 = new int[5];
      intArray0[1] = 0;
      intArray0[2] = 2;
      intArray0[4] = 26;
      resultMatrixHTML0.setColOrder(intArray0);
      resultMatrixCSV0.getDefaultPrintRowNames();
      resultMatrixLatex0.toStringSummary();
      boolean boolean0 = resultMatrixHTML0.isMean((-773));
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.714277730720821
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.getAverage(1);
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      boolean boolean0 = resultMatrixCSV1.isMean(2);
      assertTrue(boolean0);
      assertFalse(resultMatrixCSV1.getShowAverage());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.117053607391523
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getRevision();
      String[][] stringArray0 = resultMatrixCSV0.toArray();
      assertEquals(3, stringArray0.length);
      
      resultMatrixHTML0.getDefaultCountWidth();
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.7458535301741085
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[0];
      resultMatrixHTML0.setColOrder(intArray0);
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(1, resultMatrixHTML0.getRowCount());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.882005086088324
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixHTML0.getColNameWidth();
      String string0 = resultMatrixHTML0.padString("SeJ^a/#cO@pb:.dP9", 0);
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals("SeJ^a/#cO@pb:.dP9", string0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.279365647082219
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowNameWidth((-160));
      resultMatrixLatex0.toStringMatrix();
      resultMatrixLatex0.getAverage(0);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.getHeader("\begin{table}[thb]\ncaption{label{labelname}Table Caption}\n\footnotesize\n{centering \begin{tabular}{lr}\n\\\nhline\nDataset & (1)\\\nhline\nrow0 &    \\\nhline\nmulticolumn{2}{c}{$circ$, $\bullet$ statistically significant improvement or degradation}\\\nend{tabular} \footnotesize par}\nend{table}\n");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(18, 9);
      int int0 = resultMatrixSignificance0.getSignificanceWidth();
      assertEquals(9, resultMatrixSignificance0.getRowCount());
      assertEquals(18, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(0, int0);
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertFalse(resultMatrixSignificance0.getDefaultShowAverage());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.8133554045006153
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixHTML0.addHeader("Sorted array (ints): ", (String) null);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixHTML0.setColOrder(intArray0);
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.5805376244873655
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.getRevision();
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(40, resultMatrixPlainText0.getRowNameWidth());
      
      boolean boolean0 = resultMatrixSignificance0.getShowStdDev();
      assertFalse(boolean0);
      assertFalse(resultMatrixSignificance0.getDefaultShowAverage());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_EnumerateRowNames = false;
      // Undeclared exception!
      resultMatrixHTML0.setSize(126, 304);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.3693801921040074
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixCSV0.assign(resultMatrixGnuPlot0);
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.setMean((-60), (-60), Double.NaN);
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.120291565301284
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 2);
      int[][] intArray0 = new int[1][2];
      resultMatrixGnuPlot0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.TIE_STRING = " ";
      resultMatrixCSV0.setMean(3, 991, 1);
      assertFalse(resultMatrixCSV0.getDefaultRemoveFilterName());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getColCount());
      assertEquals(1, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.1634240504234032
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.m_PrintColNames = true;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringSummary();
      resultMatrixHTML0.setMean(1, 2, (-157.514));
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.8918202981106305
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[7];
      resultMatrixHTML0.setColOrder(intArray0);
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixHTML0.significanceWidthTipText();
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.648625546111829
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      
      resultMatrixCSV0.m_StdDevPrec = 10;
      resultMatrixCSV0.padString("[", 0, true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringSummary();
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.1319241330811747
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.trimString("*", 0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.setColNameWidth(1);
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(resultMatrixHTML1);
      ResultMatrixCSV resultMatrixCSV3 = new ResultMatrixCSV();
      resultMatrixCSV0.toArray();
      ResultMatrixPlainText resultMatrixPlainText0 = null;
      try {
        resultMatrixPlainText0 = new ResultMatrixPlainText((-940), 2);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.6916937946297352
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      int[][] intArray0 = new int[3][5];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setSummary(intArray0, intArray0);
      resultMatrixGnuPlot0.padString("", 1030, false);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.743535678836661
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.setMeanWidth(64);
      resultMatrixCSV0.trimString("5.5 rounded: ", 1);
      resultMatrixCSV0.setColNameWidth(1);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.padString((String) null, (-154), false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.8004698251768687
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.trimString("P)kfTv 2Ocmr!$", 7);
      resultMatrixCSV0.setColNameWidth(7);
      assertEquals(7, resultMatrixCSV0.getColNameWidth());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.getDefaultShowStdDev();
      assertEquals(2, resultMatrixCSV1.getDefaultMeanPrec());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(20, 13);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      assertEquals(13, resultMatrixGnuPlot0.getRowCount());
      assertEquals(20, resultMatrixGnuPlot0.getColCount());
      
      resultMatrixHTML0.addHeader("", "~gZH}<]J&c]_d^+9");
      assertEquals(0, resultMatrixHTML0.getDefaultMeanWidth());
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
      assertFalse(resultMatrixHTML0.getShowStdDev());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertFalse(resultMatrixHTML0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.588867109548153
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 2);
      resultMatrixCSV0.setSize(2, 2);
      resultMatrixCSV0.setColNameWidth((-454));
      resultMatrixCSV0.toArray();
      assertEquals(2, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.5805376244873655
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSize((-939), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.8592321198097737
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[11];
      intArray0[0] = 2;
      resultMatrixHTML0.setRowOrder(intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixHTML0.setColOrder(intArray0);
      resultMatrixCSV0.addHeader(" ", "");
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getDefaultShowAverage());
      assertEquals(0, resultMatrixCSV0.getDefaultCountWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.6796891436424146
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.doubleToString(3.4, 167);
      assertEquals("3.40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", string0);
      
      resultMatrixHTML0.RIGHT_PARENTHESES = "\"R4Vk'A";
      resultMatrixHTML0.addHeader("v", "");
      String string1 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1\"R4Vk'A</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*\"R4Vk'A</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string1);
      
      resultMatrixHTML0.setRemoveFilterName(false);
      resultMatrixPlainText0.getPrintRowNames();
      resultMatrixPlainText0.toStringSummary();
      resultMatrixPlainText0.stdDevPrecTipText();
      resultMatrixPlainText0.setSignificance((-373), 2, 111);
      resultMatrixPlainText0.toStringKey();
      resultMatrixCSV1.getDefaultRowNameWidth();
      assertTrue(resultMatrixCSV1.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertEquals(1, resultMatrixCSV1.getVisibleRowCount());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertFalse(resultMatrixCSV1.getRemoveFilterName());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.5320302582605256
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_RemoveFilterName = false;
      String[] stringArray0 = new String[2];
      resultMatrixGnuPlot0.m_CountWidth = (-241);
      stringArray0[0] = "wk7N`EUm)Bc!?*{O";
      stringArray0[1] = "v";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringRanking();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals((-241), resultMatrixHTML0.getCountWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      
      resultMatrixPlainText0.stdDevPrecTipText();
      resultMatrixPlainText0.setSignificance(1, 97, 1);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.7284075400342926
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixPlainText0);
      assertEquals(0, resultMatrixHTML1.getStdDevWidth());
      assertTrue(resultMatrixHTML1.getPrintColNames());
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
      assertEquals(2, resultMatrixHTML1.getStdDevPrec());
      assertFalse(resultMatrixHTML1.getEnumerateRowNames());
      assertEquals(5, resultMatrixHTML1.getCountWidth());
      assertEquals(0, resultMatrixHTML1.getSignificanceWidth());
      assertEquals(25, resultMatrixHTML1.getRowNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.isAverage(2);
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintColNames());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.950391601025311
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      
      resultMatrixCSV0.m_StdDevWidth = 2;
      resultMatrixCSV0.setCount(0, 0.0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setMeanWidth(3139);
      resultMatrixHTML0.getDefaultPrintColNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setSignificance(599, 51, (-3517));
      assertEquals(0, resultMatrixPlainText0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.3765888874282592
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      resultMatrixCSV0.m_StdDevWidth = 5;
      resultMatrixPlainText0.setSignificanceWidth(575);
      resultMatrixPlainText0.m_RankingDiff = null;
      resultMatrixPlainText0.getColName(575);
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.m_RankingDiff = null;
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.setPrintRowNames(false);
      resultMatrixPlainText0.enumerateColNamesTipText();
      resultMatrixCSV0.setCount(0, 0.0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.setRowNameWidth(14);
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixPlainText0.setSignificance(0, 13, 0);
      resultMatrixGnuPlot0.setStdDev(596, (-1873), 0.0);
      assertTrue(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(575, resultMatrixPlainText0.getSignificanceWidth());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.879995244549605
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColName(0, ")");
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(0, 0);
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.getDefaultColNameWidth();
      resultMatrixHTML0.getDefaultRemoveFilterName();
      resultMatrixPlainText0.padString("{dIY4cwq&ys2oz$w", 1817);
      resultMatrixCSV0.setStdDev(1812, 2028, 481.3346);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.746645731582466
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.setStdDevPrec(2);
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixCSV0.toArray();
      resultMatrixCSV1.setCount((-1440), 0.0);
      assertEquals(0, resultMatrixCSV1.getColNameWidth());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertEquals(1, resultMatrixCSV1.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.1638983626951367
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixCSV0.m_StdDevWidth = 5;
      resultMatrixPlainText0.setSignificanceWidth(575);
      resultMatrixPlainText0.m_RankingDiff = null;
      resultMatrixPlainText0.getColName(575);
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.m_RankingDiff = null;
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.setPrintRowNames(false);
      resultMatrixPlainText0.enumerateColNamesTipText();
      resultMatrixCSV0.setCount(0, 0.0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixPlainText0.getPrintRowNames();
      resultMatrixPlainText0.toStringSummary();
      resultMatrixPlainText0.stdDevPrecTipText();
      resultMatrixPlainText0.setSignificance(2, 2580, 575);
      assertTrue(resultMatrixPlainText0.getEnumerateRowNames());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.9079575486106544
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML1.getRowCount());
      assertFalse(resultMatrixHTML1.getPrintColNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(3051, 1);
      int[][] intArray1 = new int[1][7];
      String string0 = resultMatrixGnuPlot0.getColName(1);
      assertEquals("col1", string0);
      
      intArray1[0] = intArray0;
      resultMatrixGnuPlot0.setSummary(intArray1, intArray1);
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.221352567968736
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_RemoveFilterName = false;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setSignificanceWidth(40);
      resultMatrixPlainText0.getColName(0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText1.toStringKey();
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText1.setPrintRowNames(true);
      resultMatrixPlainText0.enumerateColNamesTipText();
      int int0 = 22;
      resultMatrixCSV0.setCount(22, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.setRowNameWidth(2);
      resultMatrixGnuPlot0.getDisplayName();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML1.getDefaultPrintColNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[0][4];
      resultMatrixHTML1.setRanking(intArray0);
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText(resultMatrixLatex0);
      String[][] stringArray0 = new String[0][9];
      // Undeclared exception!
      try { 
        resultMatrixPlainText2.getColSize(stringArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.507129807329839
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getStdDevWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_PrintColNames = true;
      resultMatrixHTML0.globalInfo();
      String[] stringArray0 = new String[4];
      stringArray0[0] = " ";
      String string0 = resultMatrixHTML0.getSummaryTitle(1324);
      assertEquals("y", string0);
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      stringArray0[1] = "*";
      stringArray0[2] = " ";
      stringArray0[3] = "v";
      ResultMatrixPlainText.main(stringArray0);
      String string1 = resultMatrixHTML0.getColName(0);
      assertEquals("(1) col0", string1);
      assertNotNull(string1);
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.9512437185814298
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.getSummaryTitle(10);
      assertEquals("k", string0);
      
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      String[][] stringArray1 = resultMatrixCSV0.toArray();
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(3, stringArray1.length);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.2958368660043296
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixHTML0.getEnumerateRowNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixGnuPlot0.stdDevWidthTipText();
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 1;
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixLatex0.getSignificance(0, 60);
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.1064969046460247
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.padString("P)kfTv 2Ocmr!$", 7, false);
      assertEquals("P)kfTv ", string0);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(1431, 1);
      int int0 = resultMatrixLatex1.getSignificance(1, 1);
      assertEquals(0, resultMatrixLatex1.getColNameWidth());
      assertEquals(0, int0);
      assertEquals(1431, resultMatrixLatex1.getColCount());
      assertEquals(1, resultMatrixLatex1.getVisibleRowCount());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.6901239564811923
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_RemoveFilterName = false;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.setMeanWidth((-373));
      resultMatrixCSV0.setEnumerateColNames(true);
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      
      resultMatrixCSV0.m_SignificanceWidth = 1;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.getStdDev((-1), 16);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 0);
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixLatex0.removeFilterName("");
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.listOptions();
      resultMatrixCSV0.removeFilterName(")");
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setCountWidth((-4259));
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader(" ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.445111601943664
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1383, 2);
      resultMatrixCSV0.getOptions();
      // Undeclared exception!
      resultMatrixCSV0.toArray();
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.5805376244873655
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      int[][] intArray1 = new int[1][5];
      intArray1[0] = intArray0;
      resultMatrixHTML0.setRanking(intArray1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.getDefaultPrintColNames();
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.1963471515298663
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV1.setMeanWidth(0);
      resultMatrixCSV1.setEnumerateColNames(true);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      String[][] stringArray0 = resultMatrixHTML0.toArray();
      assertEquals(3, stringArray0.length);
      assertEquals(5, resultMatrixHTML0.getCountWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixHTML0.getPrintColNames());
      
      resultMatrixPlainText0.getDefaultCountWidth();
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.668078702217483
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML(1, 0);
      int[][] intArray1 = new int[1][5];
      intArray1[0] = intArray0;
      resultMatrixHTML2.setRanking(intArray1);
      assertEquals(1, resultMatrixHTML2.getVisibleColCount());
      
      String string0 = resultMatrixHTML1.doubleToString((-4.57826535), 0);
      assertEquals(0, resultMatrixHTML1.getMeanWidth());
      assertEquals("-5.", string0);
      assertEquals(0, resultMatrixHTML1.getCountWidth());
      assertEquals(25, resultMatrixHTML1.getRowNameWidth());
      assertEquals(0, resultMatrixHTML1.getSignificanceWidth());
      assertEquals(2, resultMatrixHTML1.getStdDevPrec());
      assertTrue(resultMatrixHTML1.getEnumerateColNames());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1004);
      boolean boolean0 = resultMatrixPlainText0.getPrintColNames();
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertTrue(boolean0);
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      assertEquals(1004, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=3.2273511876673835
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.rowNameWidthTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.toArray();
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      
      boolean boolean0 = resultMatrixHTML0.getPrintColNames();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.4844496430362213
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      String[][] stringArray0 = new String[3][6];
      String[] stringArray1 = new String[3];
      stringArray1[0] = "";
      stringArray1[1] = "";
      stringArray1[2] = "*";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[2];
      stringArray2[0] = "";
      stringArray2[1] = "";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[9];
      stringArray3[0] = "row-name-width";
      stringArray3[1] = "Min index (doubles): ";
      stringArray3[2] = "";
      stringArray3[3] = "q9@{Ci|.x&!m3;/";
      stringArray3[4] = "";
      stringArray3[5] = "";
      stringArray3[6] = "v";
      stringArray3[7] = "v";
      stringArray3[8] = " ";
      stringArray0[2] = stringArray3;
      int int0 = resultMatrixPlainText0.getColSize(stringArray0, 0);
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(14, int0);
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(50, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.3137578280388014
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(5, 564);
      resultMatrixCSV0.m_StdDevWidth = 5;
      resultMatrixPlainText0.setSignificanceWidth(564);
      resultMatrixPlainText0.m_RankingDiff = null;
      resultMatrixPlainText0.getColName(1527);
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.m_RankingDiff = null;
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.enumerateColNamesTipText();
      resultMatrixCSV0.setCount(0, 0.0);
      resultMatrixCSV0.setCountWidth(851);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixPlainText0.addHeader((String) null, "gbcYcR<\"bSvr");
      String[][] stringArray0 = new String[1][6];
      String[] stringArray1 = new String[0];
      stringArray0[0] = stringArray1;
      resultMatrixPlainText0.getColSize(stringArray0, 97);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader((String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.637586159726386
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      String[] stringArray0 = new String[0];
      resultMatrixGnuPlot0.setOptions(stringArray0);
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixGnuPlot0.listOptions();
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.431521310892892
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.getEnumerateRowNames();
      resultMatrixLatex0.getStdDev(581, 2);
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixLatex0.removeFilterName("W'");
      resultMatrixCSV0.setColNameWidth(516);
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.getDefaultMeanPrec();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      int int0 = resultMatrixCSV0.getColNameWidth();
      assertEquals(516, int0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      String[] stringArray0 = new String[15];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertFalse(resultMatrixPlainText0.getShowAverage());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.getShowAverage();
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertFalse(resultMatrixSignificance0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.7368184083473874
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[1][4];
      int[] intArray1 = new int[5];
      intArray1[0] = 2;
      intArray1[1] = 1;
      intArray1[2] = 1350;
      intArray1[3] = 2;
      intArray1[4] = 0;
      intArray0[0] = intArray1;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[1][9];
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.8004698251768687
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColHidden(2, true);
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setColOrder(intArray0);
      resultMatrixHTML0.getDisplayName();
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertTrue(resultMatrixHTML0.getDefaultPrintRowNames());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertFalse(resultMatrixHTML0.getShowAverage());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.8004698251768687
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[3];
      resultMatrixHTML0.setColOrder(intArray0);
      resultMatrixHTML0.setRowOrder(intArray0);
      assertTrue(resultMatrixHTML0.getDefaultPrintRowNames());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.3068849378916276
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixCSV0.stdDevWidthTipText();
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.090332249381018
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      resultMatrixGnuPlot0.m_ColOrder = null;
      resultMatrixGnuPlot0.clearSummary();
      resultMatrixGnuPlot0.setRowOrder((int[]) null);
      resultMatrixGnuPlot0.clearSummary();
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      double[][] doubleArray0 = new double[2][3];
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = 1.0;
      doubleArray1[1] = (double) 2;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[5];
      doubleArray2[0] = (double) 2;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = 0.0;
      doubleArray2[3] = (double) 2;
      doubleArray2[4] = (double) 0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.assign(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.getRowHidden(2);
      resultMatrixCSV0.getDefaultShowStdDev();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.1417077210676436
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 2);
      resultMatrixGnuPlot0.m_EnumerateRowNames = true;
      int[][] intArray0 = new int[1][2];
      resultMatrixGnuPlot0.setSummary(intArray0, intArray0);
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - 1 row0\n# 2 - 2 row1\n\n# data for the plot\n1 '' ''\n2 '' ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:3]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\nreplot \"plot.dat\" using 1:3 with lines title \"col1\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.6969008500088405
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.getCount(0);
      resultMatrixHTML0.getRowOrder();
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      
      resultMatrixCSV0.getMean((-1), (-1080));
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=3.0280290733074104
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      int[][] intArray0 = new int[1][5];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setSummary(intArray0, intArray0);
      double double0 = resultMatrixGnuPlot0.getMean(6, 6);
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(0.0, double0, 0.01);
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.52751915084157
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      String[] stringArray0 = new String[1];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      try { 
        resultMatrixGnuPlot1.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Utils", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.4654510666417884
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_RemoveFilterName = false;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.setMeanWidth((-373));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String[][] stringArray0 = resultMatrixHTML0.toArray();
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(3, stringArray0.length);
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertTrue(resultMatrixHTML0.getPrintColNames());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      
      resultMatrixGnuPlot0.getShowAverage();
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=3.50843656622287
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      String[] stringArray0 = new String[1];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.m_RowOrder = intArray0;
      intArray0[0] = 1;
      resultMatrixHTML0.setColOrder(intArray0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getColSize((String[][]) null, 502);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.973971854832384
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      int int0 = resultMatrixHTML0.getColNameWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1);
      resultMatrixSignificance0.toStringSummary();
      String[][] stringArray0 = new String[1][0];
      String[] stringArray1 = new String[5];
      stringArray1[0] = "(";
      stringArray1[1] = ")";
      stringArray1[2] = " ";
      stringArray1[3] = "*";
      stringArray1[4] = "(";
      stringArray0[0] = stringArray1;
      int int1 = resultMatrixHTML0.getColSize(stringArray0, 1032, false, false);
      assertTrue(int1 == int0);
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertFalse(resultMatrixHTML0.getDefaultRemoveFilterName());
      assertEquals(0, int1);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=3.2646905982784578
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      String[][] stringArray1 = resultMatrixCSV0.toArray();
      assertEquals(3, stringArray1.length);
      
      resultMatrixCSV0.getDefaultRowNameWidth();
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=2.7458535301741085
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int int0 = resultMatrixCSV0.getSignificanceCount(1351, (-1));
      assertEquals(0, int0);
      assertFalse(resultMatrixCSV0.getDefaultRemoveFilterName());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=3.0008303170414576
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.getColName(64);
      assertNull(string0);
      
      resultMatrixHTML0.getColNameWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringRanking();
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      
      int int0 = resultMatrixHTML0.getSignificanceCount(64, 0);
      assertEquals(0, int0);
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=3.2058057100897455
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[7];
      intArray0[0] = 726;
      intArray0[1] = 2;
      intArray0[2] = 1663;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 1;
      intArray0[6] = 2;
      resultMatrixHTML0.setRowOrder(intArray0);
      int int0 = resultMatrixHTML0.getColNameWidth();
      int int1 = resultMatrixHTML0.getSignificanceCount(0, (-868));
      assertTrue(int1 == int0);
      
      String[][] stringArray0 = new String[1][5];
      String[] stringArray1 = new String[0];
      stringArray0[0] = stringArray1;
      resultMatrixCSV0.getColSize(stringArray0, 1);
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixCSV0.getDefaultStdDevWidth());
      assertTrue(resultMatrixCSV0.getDefaultPrintRowNames());
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.9458755173797666
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 1);
      resultMatrixHTML0.setEnumerateColNames(true);
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      
      resultMatrixGnuPlot0.isAverage(0);
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=3.2047775241322567
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 2);
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.setRowHidden((-748), true);
      resultMatrixLatex0.setRowNameWidth(1);
      resultMatrixLatex0.getRowHidden(1);
      ResultMatrixPlainText resultMatrixPlainText0 = null;
      try {
        resultMatrixPlainText0 = new ResultMatrixPlainText((-3787), 515);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=3.941465651505618
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getStdDev(0, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixLatex0.setEnumerateColNames(false);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.setRowHidden(0, false);
      resultMatrixLatex0.setRowNameWidth(1);
      resultMatrixLatex0.getRowHidden(279);
      resultMatrixPlainText0.setMeanPrec(4538);
      resultMatrixLatex1.getMeanPrec();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(26, 2);
      ResultMatrixSignificance resultMatrixSignificance1 = null;
      try {
        resultMatrixSignificance1 = new ResultMatrixSignificance((-2805), (-811));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 141
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int int0 = resultMatrixLatex0.getColNameWidth();
      assertEquals(0, int0);
      
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixLatex0.getDefaultColNameWidth();
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(1, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=3.2306489433011714
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_RowNames = null;
      resultMatrixCSV0.getOptions();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 143
  /*Coverage entropy=3.3427206851593945
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getOptions();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 0);
      int[][] intArray0 = new int[0][9];
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixHTML0.getRowHidden(0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1124, 573);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=3.4532288071039066
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      String[] stringArray0 = new String[1];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toArray();
      resultMatrixPlainText0.getRowName(1);
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=2.782355920889567
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.getRowName(95);
      assertNull(string0);
      
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setColOrder(intArray0);
      assertEquals(0, resultMatrixHTML0.getDefaultCountWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=2.6316121865953988
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 0);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 147
  /*Coverage entropy=3.2945992363420884
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      
      resultMatrixCSV0.setStdDevPrec(1);
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.setCount(0, 0);
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=3.0280290733074104
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 11);
      assertEquals(11, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(2, resultMatrixHTML0.getColCount());
      
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      String string0 = resultMatrixCSV0.getColName(39);
      assertNull(string0);
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=3.4339872044851467
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(5, 564);
      resultMatrixCSV0.m_StdDevWidth = 5;
      resultMatrixPlainText0.setSignificanceWidth(564);
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.setPrintRowNames(true);
      resultMatrixPlainText0.enumerateColNamesTipText();
      assertEquals(564, resultMatrixPlainText0.getSignificanceWidth());
      
      resultMatrixCSV0.setCount(3, 1557.8184);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 5);
      resultMatrixSignificance0.toStringKey();
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=3.565056577877724
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setRowOrder((int[]) null);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[][] stringArray0 = resultMatrixCSV0.toArray();
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(0, resultMatrixCSV0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertEquals(3, stringArray0.length);
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 2);
      int[][] intArray0 = new int[0][7];
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 152
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setMeanPrec(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(2, 50);
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot2.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 153
  /*Coverage entropy=3.912023005428145
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColHidden((-3354), false);
      resultMatrixGnuPlot0.rowNameWidthTipText();
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      String[][] stringArray0 = resultMatrixCSV1.toArray();
      assertEquals(3, stringArray0.length);
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertTrue(resultMatrixCSV1.getPrintRowNames());
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      assertTrue(resultMatrixCSV1.getEnumerateColNames());
      
      resultMatrixCSV0.setCount(2, (-2268.6));
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertFalse(resultMatrixCSV0.getDefaultRemoveFilterName());
      assertFalse(resultMatrixCSV0.getPrintColNames());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=2.8505177566009374
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultRemoveFilterName();
      assertFalse(resultMatrixCSV0.getShowStdDev());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultRowNameWidth();
      int int0 = resultMatrixSignificance0.getVisibleRowCount();
      assertEquals(1, int0);
      assertTrue(resultMatrixSignificance0.getDefaultEnumerateColNames());
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=2.8004698251768687
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.WIN_STRING = "(*}~T'40<Y?3E;14l";
      resultMatrixHTML0.setRemoveFilterName(false);
      int[] intArray0 = new int[12];
      resultMatrixHTML0.setColOrder(intArray0);
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixHTML0.getDefaultStdDevWidth());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
  }

  /**
  //Test case number: 156
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.setMeanWidth(376);
      resultMatrixHTML1.getDefaultPrintColNames();
      assertEquals(376, resultMatrixHTML1.getMeanWidth());
  }

  /**
  //Test case number: 157
  /*Coverage entropy=3.332204510175204
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 0);
      boolean boolean0 = resultMatrixLatex0.isSignificance(2813);
      assertTrue(boolean0);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixLatex0.getSignificance((-1892), (-1892));
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getDefaultStdDevWidth());
      assertFalse(resultMatrixLatex0.getShowStdDev());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=3.2958368660043296
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.getEnumerateRowNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixGnuPlot0.stdDevWidthTipText();
      resultMatrixHTML1.setRowOrder((int[]) null);
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.getSignificance(0, 0);
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(1, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 159
  /*Coverage entropy=3.509451482801342
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      
      ResultMatrixHTML.main((String[]) null);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[6];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[5] = 2;
      resultMatrixCSV0.m_ColOrder = intArray0;
      resultMatrixCSV0.toArray();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.toStringKey();
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=3.0280290733074104
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      int[][] intArray0 = new int[6][4];
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getSignificance(104, 104);
      resultMatrixHTML0.getDefaultEnumerateRowNames();
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(0, resultMatrixHTML0.getDefaultCountWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 161
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int int0 = resultMatrixPlainText0.getCountWidth();
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(5, int0);
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getAverage((-1700));
      resultMatrixLatex0.getRowOrder();
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=3.37507764992262
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getAverage(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 50);
      resultMatrixCSV0.setStdDevPrec(2441);
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.setCount(2, 50);
      resultMatrixCSV0.getCountWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.globalInfo();
      assertEquals(2441, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 164
  /*Coverage entropy=2.8655977892817734
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      int[][] intArray1 = new int[1][5];
      intArray1[0] = intArray0;
      resultMatrixHTML0.setRanking(intArray1);
      int int0 = resultMatrixHTML0.getMeanWidth();
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(0, int0);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      assertEquals(0, resultMatrixSignificance0.getColCount());
      
      resultMatrixSignificance0.toStringRanking();
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertFalse(resultMatrixSignificance0.getDefaultShowAverage());
      assertFalse(resultMatrixSignificance0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 165
  /*Coverage entropy=3.6121399616777863
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.setColNameWidth(1);
      resultMatrixCSV0.toArray();
      assertEquals(1, resultMatrixCSV0.getColNameWidth());
  }

  /**
  //Test case number: 166
  /*Coverage entropy=4.343805421853679
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_StdDevPrec = 97;
      resultMatrixCSV0.setColNameWidth(50);
      resultMatrixCSV0.setShowAverage(true);
      resultMatrixCSV0.m_ColNameWidth = 0;
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.getCountWidth();
      resultMatrixCSV0.getMeanWidth();
      resultMatrixCSV0.getRowOrder();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      ResultMatrixLatex.main(stringArray0);
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.getPrintRowNames();
      assertEquals(97, resultMatrixCSV0.getStdDevPrec());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringKey();
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
  }

  /**
  //Test case number: 167
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.RIGHT_PARENTHESES = "";
      resultMatrixSignificance0.meanWidthTipText();
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertTrue(resultMatrixSignificance0.getDefaultEnumerateColNames());
      assertFalse(resultMatrixSignificance0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 168
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.printColNamesTipText();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 169
  /*Coverage entropy=3.9512437185814298
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      double double0 = resultMatrixLatex0.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      resultMatrixLatex0.getRemoveFilterName();
      resultMatrixLatex0.countWidthTipText();
      assertEquals(1, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 170
  /*Coverage entropy=2.651116054762002
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML(resultMatrixHTML0);
      assertEquals(2, resultMatrixHTML2.getStdDevPrec());
      
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixHTML1.setStdDevPrec(0);
      assertEquals(0, resultMatrixHTML1.getStdDevPrec());
  }

  /**
  //Test case number: 171
  /*Coverage entropy=3.9512437185814298
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      
      resultMatrixCSV0.setStdDevPrec(0);
      resultMatrixCSV0.m_RemoveFilterName = true;
      resultMatrixCSV0.m_ColNameWidth = 0;
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.getDefaultColNameWidth();
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 172
  /*Coverage entropy=3.635107297422165
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setRemoveFilterName(true);
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot((-4082), (-1606));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 173
  /*Coverage entropy=3.9972431788356126
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixPlainText1);
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText();
      resultMatrixPlainText2.setColName(3494, "");
      resultMatrixPlainText1.setPrintColNames(true);
      ResultMatrixPlainText resultMatrixPlainText3 = new ResultMatrixPlainText(3298, 0);
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixCSV1.toArray();
      assertEquals(5, resultMatrixCSV1.getCountWidth());
      assertTrue(resultMatrixCSV1.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertTrue(resultMatrixCSV1.getPrintColNames());
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      
      resultMatrixCSV0.getDefaultColNameWidth();
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 174
  /*Coverage entropy=3.9745170417680735
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(2, 2);
      resultMatrixPlainText1.setColName(2638, " ");
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText(1, 1);
      assertEquals(5, resultMatrixPlainText2.getCountWidth());
      
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.getDefaultColNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultRemoveFilterName();
      resultMatrixCSV0.toStringSummary();
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 175
  /*Coverage entropy=2.8004698251768687
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      int int0 = resultMatrixCSV0.getDisplayRow(3);
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertFalse(resultMatrixCSV0.getDefaultRemoveFilterName());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals((-1), int0);
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 176
  /*Coverage entropy=3.9512437185814298
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.showAverageTipText();
      resultMatrixCSV0.toStringSummary();
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 177
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getColCount());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 1);
      resultMatrixCSV0.setColNameWidth(0);
      resultMatrixCSV0.getRevision();
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixCSV0.getVisibleColCount());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 178
  /*Coverage entropy=2.8421151244608924
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setPrintColNames(true);
      double double0 = resultMatrixLatex0.getAverage(0);
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals(Double.NaN, double0, 0.01);
  }

  /**
  //Test case number: 179
  /*Coverage entropy=2.631612186595399
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.removeFilterName((String) null);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("*");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 180
  /*Coverage entropy=3.279365647082219
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setPrintColNames(false);
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      double double0 = resultMatrixLatex0.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  /**
  //Test case number: 181
  /*Coverage entropy=3.239990235491762
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clearRanking();
      resultMatrixLatex0.m_MeanPrec = (-1599);
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      double double0 = resultMatrixLatex0.getAverage(0);
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(Double.NaN, double0, 0.01);
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
  }

  /**
  //Test case number: 182
  /*Coverage entropy=2.5805376244873655
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixHTML0.assign(resultMatrixPlainText0);
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      
      resultMatrixHTML0.setSignificance(3, 32, 40);
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
  }

  /**
  //Test case number: 183
  /*Coverage entropy=2.950391601025311
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringKey();
      resultMatrixCSV0.setRemoveFilterName(true);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("n;:F YY}4[cR3<");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 184
  /*Coverage entropy=3.756376009506909
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevPrec(2);
      resultMatrixCSV0.getOptions();
      String[][] stringArray0 = resultMatrixCSV0.toArray();
      assertEquals(3, stringArray0.length);
      
      resultMatrixCSV0.setCount(0, 1);
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      
      resultMatrixGnuPlot0.setSignificance(0, 32, 0);
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
  }

  /**
  //Test case number: 185
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setCountWidth((-459));
      resultMatrixHTML0.clearHeader();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setColOrder(intArray0);
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
      assertTrue(resultMatrixHTML0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 186
  /*Coverage entropy=3.395020539929304
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setSize(1832, 1);
      resultMatrixCSV0.setColNameWidth(1);
      // Undeclared exception!
      resultMatrixCSV0.toArray();
  }

  /**
  //Test case number: 187
  /*Coverage entropy=2.6808649498588037
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringRanking();
      resultMatrixPlainText0.addHeader("-ranking data not set-", "-ranking data not set-");
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixPlainText0.assign(resultMatrixLatex0);
      assertEquals(0, resultMatrixPlainText0.getRowNameWidth());
  }

  /**
  //Test case number: 188
  /*Coverage entropy=3.2062651007397753
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.setSignificanceWidth(0);
      resultMatrixCSV0.toArray();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.toArray();
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      
      resultMatrixCSV0.toArray();
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 189
  /*Coverage entropy=3.5088514644610385
  */
  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[1][2];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.setStdDevWidth((-6537));
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"(1)\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 190
  /*Coverage entropy=2.52751915084157
  */
  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.clearSummary();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot1);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getHeader("*");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 191
  /*Coverage entropy=2.743535678836661
  */
  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      resultMatrixPlainText0.toStringRanking();
      boolean boolean0 = resultMatrixPlainText0.getPrintRowNames();
      assertTrue(boolean0);
      
      resultMatrixPlainText0.setRowHidden(3, true);
      resultMatrixPlainText0.getRevision();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      String string0 = resultMatrixLatex0.toStringKey();
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption (Key)}\n\\scriptsize\n{\\centering\n\\begin{tabular}{cl}\\\\\n1 & col0 \\\\\n\\end{tabular}\n}\n\\end{table}\n", string0);
      assertEquals(0, resultMatrixLatex0.getCountWidth());
  }

  /**
  //Test case number: 192
  /*Coverage entropy=2.52751915084157
  */
  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixLatex0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML1);
      resultMatrixPlainText0.getDefaultMeanWidth();
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
  }

  /**
  //Test case number: 193
  /*Coverage entropy=3.912023005428145
  */
  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.padString("", 3);
      assertEquals("   ", string0);
      
      resultMatrixLatex0.setCountWidth(0);
      resultMatrixLatex0.m_PrintColNames = false;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      String[][] stringArray0 = resultMatrixHTML0.toArray();
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(3, stringArray0.length);
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertFalse(resultMatrixHTML0.getShowStdDev());
  }

  /**
  //Test case number: 194
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setCountWidth(716);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("n;:F YY}4[cR3<");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 195
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setPrintRowNames(false);
      int int0 = resultMatrixCSV0.getRowNameWidth();
      assertTrue(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(25, int0);
  }

  /**
  //Test case number: 196
  /*Coverage entropy=2.8786789928758862
  */
  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixHTML0.setColOrder(intArray0);
      int int0 = resultMatrixHTML0.getVisibleColCount();
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(1, int0);
      assertFalse(resultMatrixHTML0.getShowAverage());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 197
  /*Coverage entropy=2.888487304076087
  */
  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      double double0 = resultMatrixLatex0.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      
      boolean boolean0 = resultMatrixLatex0.getRemoveFilterName();
      assertFalse(boolean0);
      
      resultMatrixLatex0.globalInfo();
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 198
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.removeFilterName("V>");
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("v");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 199
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth(738);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("(");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 200
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setPrintRowNames(true);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getHeader(" ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 201
  /*Coverage entropy=3.06938175097516
  */
  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.getColOrder();
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 202
  /*Coverage entropy=2.6219954666905596
  */
  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      int int0 = resultMatrixLatex0.getVisibleRowCount();
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals(1, int0);
      assertFalse(resultMatrixLatex0.getDefaultRemoveFilterName());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 203
  /*Coverage entropy=3.2062651007397753
  */
  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.toArray();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      
      resultMatrixHTML0.headerKeys();
      assertFalse(resultMatrixHTML0.getDefaultRemoveFilterName());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 204
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setSize(125, (-28));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 205
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 2);
      int[][] intArray0 = new int[6][2];
      resultMatrixGnuPlot0.setSummary(intArray0, intArray0);
      resultMatrixGnuPlot0.setSize(0, 0);
      assertEquals(0, resultMatrixGnuPlot0.getVisibleColCount());
  }

  /**
  //Test case number: 206
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 1);
      resultMatrixCSV0.setRowNameWidth(2);
      assertEquals(2, resultMatrixCSV0.getRowNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 2);
      int[][] intArray0 = new int[1][2];
      resultMatrixGnuPlot0.setSummary(intArray0, intArray0);
      assertEquals(2, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 207
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.getRowName((-15));
      assertNull(string0);
      
      int int0 = resultMatrixSignificance0.getMeanPrec();
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(2, int0);
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
  }

  /**
  //Test case number: 208
  /*Coverage entropy=3.855916232561759
  */
  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getAverage(0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = " ";
      ResultMatrixLatex.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertFalse(resultMatrixGnuPlot0.getEnumerateColNames());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.toArray();
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      
      resultMatrixLatex0.getStdDev(1, 1);
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
  }

  /**
  //Test case number: 209
  /*Coverage entropy=2.743535678836661
  */
  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.setEnumerateColNames(false);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 210
  /*Coverage entropy=3.121542847623463
  */
  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixCSV0.m_StdDevWidth = 5;
      resultMatrixPlainText0.setSignificanceWidth(575);
      resultMatrixPlainText0.m_RankingDiff = null;
      resultMatrixPlainText0.getColName(575);
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.m_RankingDiff = null;
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.setPrintRowNames(false);
      resultMatrixPlainText0.enumerateColNamesTipText();
      resultMatrixCSV0.setCount(0, 2);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.setRowNameWidth(0);
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixGnuPlot0.listOptions();
      assertFalse(resultMatrixPlainText0.getPrintRowNames());
      
      String string0 = resultMatrixCSV0.removeFilterName(")");
      assertEquals(")", string0);
  }

  /**
  //Test case number: 211
  /*Coverage entropy=3.1403685488429787
  */
  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setMeanPrec(2);
      resultMatrixCSV0.toArray();
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      
      resultMatrixPlainText0.getDefaultMeanPrec();
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
  }

  /**
  //Test case number: 212
  /*Coverage entropy=3.4815801849669
  */
  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toArray();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(26, 2);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "v";
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixLatex0.toStringSummary();
      assertFalse(resultMatrixLatex0.getEnumerateColNames());
  }

  /**
  //Test case number: 213
  /*Coverage entropy=3.5553480614894135
  */
  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setOptions((String[]) null);
      resultMatrixGnuPlot0.getRowHidden((-801));
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      resultMatrixGnuPlot0.getDefaultShowStdDev();
      assertFalse(resultMatrixGnuPlot0.getPrintColNames());
  }

  /**
  //Test case number: 214
  /*Coverage entropy=3.920702180300306
  */
  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      String[] stringArray0 = new String[2];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray1 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray1.length);
      
      resultMatrixCSV0.setRowHidden(25, true);
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
  }

  /**
  //Test case number: 215
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 1);
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(0, resultMatrixCSV0.getColCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 2);
      int[][] intArray0 = new int[1][2];
      resultMatrixGnuPlot0.setSummary(intArray0, intArray0);
      resultMatrixGnuPlot0.getStdDev(110, 0);
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintRowNames());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
  }

  /**
  //Test case number: 216
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixHTML0.getCount(2);
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertFalse(resultMatrixHTML0.getShowAverage());
      assertFalse(resultMatrixHTML0.getShowStdDev());
  }

  /**
  //Test case number: 217
  /*Coverage entropy=3.854456111219337
  */
  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toString();
      resultMatrixGnuPlot0.setOptions((String[]) null);
      assertEquals(0, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 218
  /*Coverage entropy=3.6888794541139402
  */
  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.getRowHidden(5);
      resultMatrixLatex0.setStdDevWidth((-95));
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 1);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 219
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setShowAverage(true);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("*");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 220
  /*Coverage entropy=2.52751915084157
  */
  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.getDefaultSignificanceWidth();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertFalse(resultMatrixPlainText0.getShowAverage());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(1, resultMatrixPlainText0.getColCount());
  }

  /**
  //Test case number: 221
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 2);
      boolean boolean0 = resultMatrixGnuPlot0.isStdDev(16);
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertFalse(boolean0);
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
  }

  /**
  //Test case number: 222
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.padString((String) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 223
  /*Coverage entropy=3.1278794104545113
  */
  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[][] stringArray0 = resultMatrixCSV0.toArray();
      assertEquals(3, stringArray0.length);
      
      String string0 = resultMatrixCSV0.padString("][ FmR", (-606));
      assertFalse(resultMatrixCSV0.getShowStdDev());
      assertFalse(resultMatrixCSV0.getDefaultRemoveFilterName());
      assertEquals("][ FmR", string0);
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 224
  /*Coverage entropy=3.178053830347948
  */
  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setShowAverage(false);
      resultMatrixGnuPlot0.setOptions((String[]) null);
      resultMatrixGnuPlot0.getDefaultSignificanceWidth();
      assertEquals(0, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 225
  /*Coverage entropy=2.8004698251768687
  */
  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      boolean boolean0 = resultMatrixLatex0.getColHidden(2);
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertFalse(boolean0);
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 226
  /*Coverage entropy=3.0149971107174998
  */
  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(0, 2);
      // Undeclared exception!
      try { 
        resultMatrixCSV1.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 227
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getStdDev((-2934), 0);
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 228
  /*Coverage entropy=3.536271269437867
  */
  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.setStdDev((-1328), (-1328), (-83.53424182174));
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
  }

  /**
  //Test case number: 229
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColHidden(2, false);
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintColNames());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getDefaultCountWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 230
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      boolean boolean0 = resultMatrixHTML0.isRowName(97);
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertFalse(boolean0);
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
  }

  /**
  //Test case number: 231
  /*Coverage entropy=3.9702919135521193
  */
  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevPrec(1);
      assertEquals(1, resultMatrixCSV0.getStdDevPrec());
      
      resultMatrixCSV1.getOptions();
      resultMatrixCSV1.toArray();
      resultMatrixCSV1.setCount(0, 2);
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
  }

  /**
  //Test case number: 232
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      assertEquals(0, resultMatrixHTML1.getStdDevWidth());
      assertEquals(0, resultMatrixHTML1.getMeanWidth());
      assertEquals(25, resultMatrixHTML1.getRowNameWidth());
      assertEquals(0, resultMatrixHTML1.getSignificanceWidth());
      assertTrue(resultMatrixHTML1.getPrintRowNames());
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
      assertEquals(2, resultMatrixHTML1.getStdDevPrec());
      assertTrue(resultMatrixHTML1.getEnumerateColNames());
      
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML();
      boolean boolean0 = resultMatrixHTML2.isSignificance(2);
      assertEquals(0, resultMatrixHTML2.getColNameWidth());
      assertFalse(resultMatrixHTML2.getShowStdDev());
      assertEquals(1, resultMatrixHTML2.getColCount());
      assertEquals(1, resultMatrixHTML2.getRowCount());
      assertFalse(boolean0);
      assertFalse(resultMatrixHTML2.getDefaultRemoveFilterName());
      assertEquals(0, resultMatrixHTML2.getCountWidth());
  }

  /**
  //Test case number: 233
  /*Coverage entropy=4.018946730253296
  */
  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      
      ResultMatrixHTML.main((String[]) null);
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setColOrder(intArray0);
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getDefaultCountWidth());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
  }

  /**
  //Test case number: 234
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int int0 = resultMatrixHTML0.getColNameWidth();
      assertEquals(0, int0);
      
      resultMatrixHTML0.isStdDev(0);
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getDefaultSignificanceWidth());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertFalse(resultMatrixHTML0.getDefaultRemoveFilterName());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertFalse(resultMatrixHTML0.getShowStdDev());
  }

  /**
  //Test case number: 235
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 2);
      int[][] intArray0 = new int[1][2];
      resultMatrixGnuPlot0.setSummary(intArray0, intArray0);
      String string0 = resultMatrixHTML0.printRowNamesTipText();
      assertEquals("Whether to output row names or just numbers representing them.", string0);
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 236
  /*Coverage entropy=3.1319241330811747
  */
  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      
      resultMatrixCSV0.setSignificanceWidth(1);
      resultMatrixCSV0.toArray();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      assertEquals(0, resultMatrixHTML0.getDefaultCountWidth());
  }

  /**
  //Test case number: 237
  /*Coverage entropy=3.9110376687702724
  */
  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setSignificanceWidth((-2910));
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      
      ResultMatrixHTML.main((String[]) null);
      int[] intArray0 = new int[1];
      resultMatrixHTML0.getDefaultColNameWidth();
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
  }

  /**
  //Test case number: 238
  /*Coverage entropy=3.7255934311365855
  */
  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      int[] intArray0 = new int[6];
      resultMatrixHTML0.m_RowOrder = intArray0;
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      resultMatrixHTML0.addHeader("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", " ");
      String string1 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>col0</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>v/ /*</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string1);
      
      resultMatrixHTML0.setRemoveFilterName(false);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      double double0 = resultMatrixGnuPlot0.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      resultMatrixHTML0.getDefaultPrintColNames();
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 239
  /*Coverage entropy=3.9702919135521193
  */
  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getRowCount());
      
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 25);
      int[][] intArray0 = new int[1][2];
      resultMatrixGnuPlot0.setSummary(intArray0, intArray0);
      resultMatrixGnuPlot0.stdDevPrecTipText();
      resultMatrixGnuPlot0.toStringMatrix();
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
  }

  /**
  //Test case number: 240
  /*Coverage entropy=3.2437383599150444
  */
  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(18, stringArray0.length);
      
      String[][] stringArray1 = resultMatrixCSV0.toArray();
      assertEquals(3, stringArray1.length);
      
      resultMatrixCSV0.toStringKey();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 241
  /*Coverage entropy=3.1319241330811747
  */
  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML(resultMatrixHTML0);
      assertEquals(1, resultMatrixHTML2.getColCount());
      
      String[][] stringArray0 = resultMatrixHTML2.toArray();
      assertEquals(3, stringArray0.length);
      
      ResultMatrixHTML resultMatrixHTML3 = new ResultMatrixHTML(1, 0);
      resultMatrixHTML1.setEnumerateRowNames(false);
      assertTrue(resultMatrixHTML1.getEnumerateColNames());
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
      assertEquals(0, resultMatrixHTML1.getStdDevWidth());
      assertEquals(2, resultMatrixHTML1.getStdDevPrec());
      assertEquals(0, resultMatrixHTML1.getCountWidth());
      assertEquals(0, resultMatrixHTML1.getMeanWidth());
  }

  /**
  //Test case number: 242
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setShowStdDev(false);
      resultMatrixHTML0.clear();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setColOrder(intArray0);
      assertFalse(resultMatrixHTML0.getDefaultEnumerateRowNames());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
  }

  /**
  //Test case number: 243
  /*Coverage entropy=3.120291565301284
  */
  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      
      String string0 = resultMatrixCSV0.getColName(1);
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
      assertNull(string0);
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertFalse(resultMatrixCSV0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 244
  /*Coverage entropy=3.1509699624985004
  */
  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toArray();
      resultMatrixHTML0.getDefaultPrintRowNames();
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
  }

  /**
  //Test case number: 245
  /*Coverage entropy=3.4527403389672653
  */
  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      String[] stringArray0 = new String[1];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.getDefaultStdDevWidth();
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(1, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 246
  /*Coverage entropy=2.8592321198097737
  */
  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 2);
      String string0 = resultMatrixLatex0.doubleToString(0, 0);
      assertEquals("0.", string0);
      
      double double0 = resultMatrixLatex0.getAverage(52);
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(2, resultMatrixLatex0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(0.0, double0, 0.01);
      assertFalse(resultMatrixLatex0.getShowAverage());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 247
  /*Coverage entropy=2.8274467288059117
  */
  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 2);
      int[][] intArray0 = new int[1][2];
      resultMatrixGnuPlot0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.doubleToString(2, 1563);
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
  }

  /**
  //Test case number: 248
  /*Coverage entropy=3.2062651007397753
  */
  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(45, 45);
      resultMatrixHTML0.setEnumerateRowNames(true);
      assertTrue(resultMatrixHTML0.getEnumerateRowNames());
  }

  /**
  //Test case number: 249
  /*Coverage entropy=3.4437463805078017
  */
  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      String[] stringArray0 = new String[1];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setShowStdDev(true);
      resultMatrixCSV0.toArray();
      assertTrue(resultMatrixCSV0.getShowStdDev());
  }

  /**
  //Test case number: 250
  /*Coverage entropy=3.611886319454812
  */
  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      
      resultMatrixGnuPlot0.setOptions((String[]) null);
      resultMatrixGnuPlot0.getOptions();
      assertFalse(resultMatrixGnuPlot0.getPrintColNames());
  }

  /**
  //Test case number: 251
  /*Coverage entropy=3.6635616461296423
  */
  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevPrec(1);
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.setCount(2, 2);
      assertEquals(1, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 252
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setMeanPrec((-1087));
      int int0 = resultMatrixHTML0.getColNameWidth();
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertTrue(resultMatrixHTML0.getDefaultPrintRowNames());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(0, resultMatrixHTML0.getDefaultMeanWidth());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 253
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.getColName((-505));
      assertNull(string0);
      
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setColOrder(intArray0);
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 254
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[0];
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixHTML0.getColNameWidth();
      resultMatrixHTML0.showStdDevTipText();
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
  }
}
