/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 15:55:58 GMT 2019
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.9771327137502626
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(10, 1);
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = (-2829);
      intArray0[2] = 0;
      intArray0[3] = 1;
      intArray0[4] = 10;
      intArray0[5] = 1;
      intArray0[6] = 1;
      intArray0[7] = 0;
      intArray0[8] = 1;
      resultMatrixPlainText0.m_ColOrder = intArray0;
      resultMatrixPlainText0.m_CountWidth = (-2829);
      resultMatrixPlainText0.setSignificance(1, 1, 10);
      resultMatrixPlainText0.rowNameWidthTipText();
      String[] stringArray0 = new String[1];
      stringArray0[0] = " ";
      ResultMatrixLatex.main(stringArray0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=4.318204204349363
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.removeFilterName("*");
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML.main((String[]) null);
      resultMatrixCSV0.getDefaultColNameWidth();
      resultMatrixHTML0.getStdDev((-2441), 0);
      resultMatrixHTML0.getDefaultEnumerateRowNames();
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.2714182435866936
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(9, 9);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[4] = false;
      booleanArray0[5] = false;
      booleanArray0[6] = true;
      booleanArray0[7] = true;
      resultMatrixSignificance0.m_RowHidden = booleanArray0;
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.m_MeanPrec = 26;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      resultMatrixSignificance0.getDefaultCountWidth();
      resultMatrixSignificance0.removeFilterNameTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.globalInfo();
      resultMatrixSignificance0.getRowOrder();
      resultMatrixPlainText0.getRevision();
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.867199716676978
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixCSV0.setPrintRowNames(true);
      resultMatrixGnuPlot0.getRowName(2);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.getOptions();
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV1);
      resultMatrixLatex0.addHeader("*", "F-yG>ikwp$&Om#WC");
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.setSignificanceWidth(2);
      resultMatrixLatex0.getAverage(0);
      resultMatrixCSV0.meanPrecTipText();
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.275068199595409
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRowName(2);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.setSignificanceWidth(1);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.getAverage(97);
      String[][] stringArray0 = new String[2][5];
      String[] stringArray1 = new String[4];
      stringArray1[0] = "*";
      stringArray1[1] = " ";
      stringArray1[2] = "$circ$";
      stringArray1[3] = " ";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[7];
      stringArray2[0] = "]";
      stringArray2[1] = "";
      stringArray2[2] = "v";
      stringArray2[3] = " ";
      stringArray2[4] = "";
      stringArray2[5] = ")";
      stringArray2[6] = "*";
      stringArray0[1] = stringArray2;
      resultMatrixCSV1.getColSize(stringArray0, 0, false, false);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.2693207483835716
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getStdDev(0, 2);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.9240679553958535
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(4, 4);
      resultMatrixCSV0.getDisplayCol(2);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.getOptions();
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.288502144830571
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.m_RankingWins = intArray0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setSignificanceWidth(2);
      resultMatrixPlainText0.assign(resultMatrixGnuPlot0);
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.getAverage((-3154));
  }

  /**
  //Test case number: 8
  /*Coverage entropy=4.109943253774831
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.assign(resultMatrixLatex0);
      resultMatrixPlainText0.m_ShowAverage = true;
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringMatrix();
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.6132820738796054
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringSummary();
      resultMatrixLatex0.assign(resultMatrixHTML0);
      resultMatrixHTML0.m_ShowStdDev = true;
      resultMatrixHTML0.removeFilterName("*");
      resultMatrixLatex0.isSignificance(563);
      resultMatrixHTML0.setColNameWidth(2);
      resultMatrixLatex0.globalInfo();
      resultMatrixHTML0.trimString("(", 2);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 1);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.3516532143953954
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getSignificanceCount(0, 1);
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.getAverage(1);
      resultMatrixCSV0.getDisplayName();
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.154897918948454
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.RIGHT_PARENTHESES = "3V.7j)9Ux";
      resultMatrixLatex0.m_RowHidden = null;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.assign(resultMatrixLatex0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.7100755039528424
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setColNameWidth(2);
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.LEFT_PARENTHESES = "";
      resultMatrixCSV0.setPrintRowNames(false);
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.toStringRanking();
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.178007807001661
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText1.setSignificanceWidth((-1739));
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2068, 2);
      // Undeclared exception!
      resultMatrixPlainText2.assign(resultMatrixSignificance0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=4.1698656570504244
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixCSV0.toStringMatrix();
      int[][] intArray0 = new int[0][3];
      resultMatrixCSV0.m_Significance = intArray0;
      resultMatrixCSV0.getDisplayCol(0);
      resultMatrixCSV0.RIGHT_PARENTHESES = "*";
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.getOptions();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.getColHidden((-1884));
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.1614326836838877
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.m_RankingWins = intArray0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setSignificanceWidth(2);
      resultMatrixPlainText0.assign(resultMatrixGnuPlot0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setRowOrder(intArray0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.9901589360017384
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.assign(resultMatrixLatex0);
      resultMatrixLatex0.toArray();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixGnuPlot0.setMean(0, 17, 0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=4.1468059084673055
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(1, 92);
      resultMatrixLatex0.assign(resultMatrixLatex1);
      intArray0[1] = 0;
      intArray0[2] = 1;
      String[] stringArray0 = new String[6];
      stringArray0[0] = ")";
      stringArray0[1] = ")";
      stringArray0[2] = "$circ$";
      stringArray0[3] = "?WYi";
      stringArray0[4] = "(";
      stringArray0[5] = "$\bullet$";
      ResultMatrixLatex.main(stringArray0);
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.getDisplayRow((-325));
      resultMatrixLatex0.getSignificanceWidth();
      int[] intArray1 = new int[1];
      intArray1[0] = 1;
      resultMatrixLatex1.setRowOrder(intArray1);
      resultMatrixLatex1.getShowStdDev();
  }

  /**
  //Test case number: 18
  /*Coverage entropy=4.163505078644633
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.removeFilterName("*");
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML.main((String[]) null);
      resultMatrixCSV0.getDefaultColNameWidth();
      resultMatrixCSV0.removeFilterNameTipText();
      resultMatrixHTML0.getColName(0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.85971714628616
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultStdDevWidth();
      resultMatrixPlainText0.m_EnumerateColNames = false;
      resultMatrixPlainText0.getColName(0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setOptions((String[]) null);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(3978, 3976);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.4531860169028907
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getStdDev(1, 2);
      resultMatrixCSV0.removeFilterName("s-Sw1:n\"kxS<wo<Kp}?");
      resultMatrixCSV0.getDisplayCol(1);
      resultMatrixCSV0.getRevision();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixCSV0.getDisplayRow(1);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.437189147059528
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_StdDevWidth = 0;
      resultMatrixHTML0.setStdDevWidth(0);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.setShowStdDev(true);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixHTML0.m_ColOrder = intArray0;
      int[] intArray1 = new int[7];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.toStringKey();
      resultMatrixHTML0.setRowOrder(intArray1);
      resultMatrixHTML0.getDisplayRow(0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=4.013676950161693
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toString();
      resultMatrixCSV0.setCountWidth(1);
      resultMatrixCSV0.m_ShowStdDev = false;
      resultMatrixCSV0.getRevision();
      resultMatrixCSV0.setStdDevPrec((-788));
      resultMatrixCSV0.isStdDev(92);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.587857739982518
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getStdDev(0, 1);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 1073);
      resultMatrixCSV0.setColOrder((int[]) null);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.6526797235468895
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.getVisibleColCount();
      resultMatrixCSV0.toStringMatrix();
      resultMatrixPlainText0.toStringSummary();
      resultMatrixHTML0.isMean(1);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.7248589304190185
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_ColNames = null;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 2);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateRowNames(true);
      resultMatrixCSV0.toStringMatrix();
      int[][] intArray0 = new int[2][3];
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      resultMatrixLatex0.setCountWidth(1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.getColCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.1380768419422003
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultPrintColNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixSignificance0.clearRanking();
      resultMatrixSignificance0.toStringSummary();
      String string0 = resultMatrixHTML0.padString("v", 102);
      assertEquals("v                                                                                                     ", string0);
      
      resultMatrixHTML0.getDefaultEnumerateColNames();
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertFalse(resultMatrixHTML0.getShowAverage());
      assertFalse(resultMatrixHTML0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.723654044585221
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[1];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getStdDev(0, 0);
      resultMatrixCSV0.removeFilterName("s-Sw1:n\"kxS<o<p}?");
      int int0 = resultMatrixCSV0.getDisplayCol((-850));
      assertEquals((-1), int0);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixPlainText0.toStringRanking();
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      String string0 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      resultMatrixPlainText0.getDefaultPrintColNames();
      assertEquals(0, resultMatrixPlainText0.getDefaultStdDevWidth());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.540174611636465
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.enumerateRowNamesTipText();
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.615612685201322
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.doubleToString(1187.5, (-3944));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.7275329078460464
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 2);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 0);
      resultMatrixCSV0.setEnumerateRowNames(true);
      resultMatrixCSV0.toStringMatrix();
      int[][] intArray0 = new int[2][3];
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      resultMatrixLatex0.setCountWidth(1);
      assertEquals(1, resultMatrixLatex0.getCountWidth());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray1 = new int[6];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 0;
      intArray1[3] = 1;
      intArray1[4] = 2;
      intArray1[5] = 0;
      resultMatrixHTML0.setRowOrder(intArray1);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.toStringRanking();
      resultMatrixCSV0.getRowCount();
      resultMatrixPlainText0.getDisplayName();
      assertFalse(resultMatrixPlainText0.getShowStdDev());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.9280170736912248
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getVisibleRowCount();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(26, 97);
      resultMatrixCSV0.getOptions();
      // Undeclared exception!
      resultMatrixCSV1.toArray();
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.194150495504466
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.getDisplayName();
      double double0 = resultMatrixLatex0.getStdDev(0, 0);
      assertEquals(0.0, double0, 0.01);
      
      Vector<Vector<Object>> vector0 = new Vector<Vector<Object>>();
      resultMatrixCSV0.m_HeaderValues = vector0;
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixLatex0.isAverage(1);
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertFalse(resultMatrixLatex0.getShowAverage());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.846000593600985
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.getDisplayName();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.padString(" ", 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setColNameWidth(1);
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.setPrintRowNames(true);
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      String string0 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,[\nrow0,''\n'[v/ /*]',''\n", string0);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      int[] intArray0 = new int[9];
      intArray0[0] = (-1);
      intArray0[1] = 1;
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex0.getSignificance(712, 2);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      String string1 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>($\\circ$/ /$\\bullet$)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string1);
      
      boolean boolean0 = resultMatrixCSV1.getEnumerateColNames();
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertEquals(50, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.9949969874483524
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[1];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setColNameWidth(8);
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.setPrintRowNames(true);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      resultMatrixCSV0.setColOrder(intArray0);
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.toArray();
      assertEquals(8, resultMatrixCSV0.getColNameWidth());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.5420834133331778
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getStdDev(0, 0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      int int0 = resultMatrixCSV0.getDefaultColNameWidth();
      assertEquals(0, int0);
      
      String string0 = resultMatrixCSV0.significanceWidthTipText();
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals("The width of the significance indicator (0 = optimal).", string0);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 0);
      resultMatrixHTML0.getDefaultRowNameWidth();
      assertEquals(0, resultMatrixHTML0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.208674304698806
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.m_RankingWins = intArray0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 2);
      resultMatrixPlainText0.setSignificanceWidth(2);
      resultMatrixPlainText0.assign(resultMatrixGnuPlot0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.setColOrder(intArray0);
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=4.024812537000065
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setColNameWidth(2);
      resultMatrixCSV0.getDisplayName();
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      
      resultMatrixCSV0.setPrintRowNames(false);
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.toStringRanking();
      assertTrue(resultMatrixCSV0.getEnumerateRowNames());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.7189065209477787
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      resultMatrixLatex0.getStdDevPrec();
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.9002962005662827
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 2);
      int int0 = resultMatrixPlainText0.getSignificanceCount(133, 133);
      assertEquals(0, int0);
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(18, stringArray0.length);
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(1, resultMatrixCSV0.getColCount());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.400090764407578
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 1);
      assertEquals(0, resultMatrixHTML0.getColCount());
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      int int0 = resultMatrixPlainText1.getSignificanceCount(1, 2);
      assertEquals(0, int0);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.241648886383831
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      resultMatrixPlainText0.getDefaultStdDevWidth();
      resultMatrixPlainText0.setColName(1, "");
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      String string0 = resultMatrixLatex0.toStringKey();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption (Key)}\n\\scriptsize\n{\\centering\n\\begin{tabular}{cl}\\\\\n\\end{tabular}\n}\n\\end{table}\n", string0);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(0, 1161);
      assertEquals(1161, resultMatrixGnuPlot1.getRowCount());
      
      resultMatrixGnuPlot0.toStringSummary();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=4.18784425742657
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "x)9D";
      stringArray0[1] = "x)9D";
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getColName(34);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.toStringKey();
      resultMatrixPlainText0.toStringKey();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText1);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[8][8];
      int[] intArray1 = new int[5];
      intArray1[0] = 2;
      intArray1[1] = 2;
      intArray1[2] = 0;
      intArray1[3] = 1;
      intArray1[4] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[5];
      intArray2[0] = 1;
      intArray2[1] = 1;
      intArray2[2] = 0;
      intArray2[3] = 1;
      intArray2[4] = 1;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[3];
      intArray3[0] = 1;
      intArray3[1] = 2;
      intArray3[2] = 34;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[8];
      intArray4[0] = 2;
      intArray4[1] = 2;
      intArray4[2] = 1;
      intArray4[3] = 1;
      intArray4[4] = 2;
      intArray4[5] = 1;
      intArray4[6] = 34;
      intArray4[7] = 1016;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[6];
      intArray5[0] = 2;
      intArray5[1] = 1;
      intArray5[2] = 2;
      intArray5[3] = 2;
      intArray5[4] = 2;
      intArray5[5] = 1;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[5];
      intArray6[0] = 639;
      intArray6[1] = 1018;
      intArray6[2] = 2;
      intArray6[3] = 2;
      intArray6[4] = 2;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[1];
      intArray7[0] = 0;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[6];
      intArray8[0] = 0;
      intArray8[1] = 34;
      intArray8[2] = 2;
      intArray8[3] = 2;
      intArray8[4] = 1;
      intArray8[5] = (-4480);
      intArray0[7] = intArray8;
      resultMatrixPlainText1.setRanking(intArray0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      
      resultMatrixLatex1.setEnumerateColNames(false);
      resultMatrixLatex1.setRowHidden((-1719), false);
      resultMatrixCSV0.setStdDevPrec(2);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixPlainText1);
      resultMatrixCSV1.getOptions();
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV2.toArray();
      assertEquals(0, resultMatrixCSV2.getSignificanceWidth());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.864991682521034
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setOptions((String[]) null);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixLatex0.getColCount();
      resultMatrixCSV0.setRowName((-1871), ")");
      assertFalse(resultMatrixCSV0.getPrintRowNames());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 1);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      assertEquals(0, resultMatrixHTML0.getVisibleColCount());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.3928137261327227
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.getRevision();
      resultMatrixCSV0.m_MeanWidth = 0;
      resultMatrixCSV0.setStdDevPrec(0);
      assertEquals(0, resultMatrixCSV0.getStdDevPrec());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 125);
      int int0 = resultMatrixLatex0.getColCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.7557080345191824
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 2);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      
      resultMatrixCSV0.setEnumerateRowNames(true);
      resultMatrixCSV0.toStringMatrix();
      int[][] intArray0 = new int[2][3];
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      resultMatrixLatex0.setCountWidth(1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      assertTrue(resultMatrixCSV0.getEnumerateRowNames());
      
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.toArray();
      resultMatrixHTML1.getDefaultShowAverage();
      resultMatrixLatex0.getEnumerateColNames();
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.3855884345640637
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.getDisplayName();
      resultMatrixCSV0.getDisplayCol(0);
      String string0 = resultMatrixLatex0.toStringKey();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption (Key)}\n\\scriptsize\n{\\centering\n\\begin{tabular}{cl}\\\\\n[1] & col0 \\\\\n\\end{tabular}\n}\n\\end{table}\n", string0);
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixLatex0.getPrintColNames();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      
      resultMatrixCSV0.getRowOrder();
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.4356670493418786
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      int[] intArray0 = new int[11];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setColNameWidth(1);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixCSV0.setColOrder(intArray0);
      assertEquals(1, resultMatrixCSV0.getColNameWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.435348070075531
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setColNameWidth(1);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixCSV0.setColOrder(intArray0);
      assertEquals(1, resultMatrixCSV0.getColNameWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.258136040901145
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.toStringSummary();
      resultMatrixLatex0.setShowAverage(true);
      resultMatrixLatex0.getDisplayName();
      assertTrue(resultMatrixLatex0.getShowAverage());
      
      resultMatrixCSV0.getDisplayCol(0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV0.getColHidden(1838);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.5414549530608452
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getStdDev(1, 2);
      resultMatrixCSV0.removeFilterName("s-Sw1:n\"kxS<wo<Kp}?");
      int int0 = resultMatrixCSV0.getDisplayCol(1);
      assertEquals((-1), int0);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixCSV0.getColHidden(1);
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertFalse(resultMatrixCSV0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.6750952504662893
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.toStringKey();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setEnumerateRowNames(false);
      resultMatrixLatex0.setRowHidden(0, true);
      resultMatrixLatex0.setRowNameWidth(2);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex0.getSignificance(1, 1);
      assertEquals(0, resultMatrixLatex0.getVisibleRowCount());
      
      resultMatrixLatex1.getDefaultPrintColNames();
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.4882695869868265
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      int[][] intArray0 = new int[1][2];
      int[] intArray1 = new int[2];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray0[0] = intArray1;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.234767097131391
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.getDefaultRowNameWidth();
      assertTrue(resultMatrixLatex1.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixLatex1.getDefaultColNameWidth());
      assertEquals(1, resultMatrixLatex1.getColCount());
      assertEquals(1, resultMatrixLatex1.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex1.getDefaultStdDevPrec());
      assertFalse(resultMatrixLatex1.getShowAverage());
      assertFalse(resultMatrixLatex1.getDefaultRemoveFilterName());
      assertEquals(2, resultMatrixLatex1.getDefaultMeanPrec());
      assertFalse(resultMatrixLatex1.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.823279847170732
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getStdDev(0, 0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixCSV1.getDefaultRowNameWidth();
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertEquals(0, resultMatrixCSV1.getColNameWidth());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertEquals(1, resultMatrixCSV1.getVisibleRowCount());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.633593075244739
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.toStringKey();
      resultMatrixHTML0.getVisibleRowCount();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(1, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(1, 0);
      resultMatrixGnuPlot0.toStringSummary();
      // Undeclared exception!
      try { 
        resultMatrixHTML1.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.630583650507448
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      
      String string0 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      resultMatrixCSV0.getDisplayCol(0);
      resultMatrixCSV0.RIGHT_PARENTHESES = "*";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixCSV0.getDefaultEnumerateRowNames();
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.3979666626314677
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRevision();
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.m_RankingWins = intArray0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.toStringKey();
      assertEquals("Key,\n[1],col0\n", string0);
      
      resultMatrixCSV0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=4.003235961675642
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.setColNameWidth(0);
      resultMatrixCSV0.setOptions((String[]) null);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixLatex0.getColCount();
      resultMatrixCSV0.setRowName(3, "44sL|\"Ruz1c");
      assertEquals(0, resultMatrixCSV0.getStdDevPrec());
      
      resultMatrixHTML0.getDefaultEnumerateColNames();
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.58379607654672
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      int int0 = resultMatrixLatex0.getRowNameWidth();
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(25, int0);
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(5, resultMatrixLatex0.getCountWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.9182814348013246
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int int0 = resultMatrixHTML0.getVisibleRowCount();
      assertEquals(1, int0);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 203);
      int[][] intArray0 = new int[1][3];
      int[] intArray1 = new int[1];
      intArray1[0] = 1;
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      assertEquals(18, stringArray0.length);
      
      intArray0[0] = intArray1;
      resultMatrixLatex0.setRanking(intArray0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex0.clear();
      assertEquals(203, resultMatrixLatex0.getVisibleRowCount());
      
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      assertEquals(25, resultMatrixHTML1.getRowNameWidth());
      
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex();
      assertEquals(0, resultMatrixLatex2.getMeanWidth());
      assertEquals(0, resultMatrixLatex2.getStdDevWidth());
      assertEquals(2, resultMatrixLatex2.getStdDevPrec());
      assertEquals(2, resultMatrixLatex2.getMeanPrec());
      assertEquals(0, resultMatrixLatex2.getSignificanceWidth());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.6738521496756773
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "x)9D";
      stringArray0[1] = "--";
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColName((-1587), "Illegal options: ");
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringKey();
      ResultMatrixHTML resultMatrixHTML0 = null;
      try {
        resultMatrixHTML0 = new ResultMatrixHTML((-1587), (-2242));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.6325356360474927
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      int int0 = resultMatrixCSV0.getDisplayCol(2);
      assertEquals((-1), int0);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixCSV0.getDefaultRowNameWidth();
      assertEquals(5, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertFalse(resultMatrixCSV0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.920672043735983
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixCSV0.setOptions((String[]) null);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixLatex0.getColCount();
      resultMatrixCSV0.setRowName(1, "*");
      assertEquals(0, resultMatrixCSV0.getStdDevPrec());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 395);
      resultMatrixHTML0.getDefaultShowAverage();
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.8303594917250194
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultStdDevWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setOptions((String[]) null);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixPlainText0);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixLatex0.getColCount();
      resultMatrixCSV0.setRowName(0, "*");
      assertFalse(resultMatrixCSV0.getEnumerateColNames());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 0);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      assertEquals(0, resultMatrixHTML0.getRowCount());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.852611940536815
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_ShowAverage = false;
      resultMatrixLatex0.getSummaryTitle((-521));
      String[] stringArray0 = null;
      resultMatrixLatex0.setOptions((String[]) null);
      resultMatrixLatex0.m_RemoveFilterName = true;
      resultMatrixLatex0.m_ColHidden = null;
      resultMatrixLatex0.setPrintColNames(true);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.getVisibleColCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.779735417396408
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[9];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      double double0 = resultMatrixLatex0.getStdDev(25, (-1585));
      assertEquals(0.0, double0, 0.01);
      
      resultMatrixPlainText0.toStringSummary();
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.setRowHidden(1232, true);
      resultMatrixLatex0.setRowNameWidth((-1585));
      resultMatrixLatex0.getRowHidden(0);
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      
      resultMatrixPlainText0.setEnumerateRowNames(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex1.getSignificance((-556), (-1585));
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      assertEquals(25, resultMatrixLatex1.getRowNameWidth());
      assertEquals(5, resultMatrixLatex1.getCountWidth());
      assertEquals(1, resultMatrixLatex1.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertEquals(2, resultMatrixLatex1.getDefaultStdDevPrec());
      assertTrue(resultMatrixLatex1.getPrintColNames());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.6324267312665732
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.setEnumerateRowNames(false);
      resultMatrixLatex0.setRowNameWidth((-415));
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.getDefaultEnumerateColNames();
      assertFalse(resultMatrixCSV1.getDefaultShowAverage());
      assertEquals(1, resultMatrixCSV1.getVisibleRowCount());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.5185951110432594
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[][] stringArray0 = new String[9][2];
      String[] stringArray1 = new String[0];
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[5];
      stringArray2[0] = "(";
      stringArray2[1] = ")";
      stringArray2[2] = ")";
      stringArray2[3] = ")";
      stringArray2[4] = "$\bullet$";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[0];
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[8];
      stringArray4[0] = "(";
      stringArray4[1] = "$\bullet$";
      stringArray4[2] = "$\bullet$";
      stringArray4[3] = "$circ$";
      stringArray4[4] = ")";
      stringArray4[5] = "(";
      stringArray4[6] = ")";
      stringArray4[7] = " ";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[2];
      stringArray5[0] = "$circ$";
      stringArray5[1] = ")";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[6];
      stringArray6[0] = " ";
      stringArray6[1] = ")";
      stringArray6[2] = ")";
      stringArray6[3] = "(";
      stringArray6[4] = " ";
      stringArray6[5] = ")";
      stringArray0[5] = stringArray6;
      String[] stringArray7 = new String[5];
      stringArray7[0] = "(";
      stringArray7[1] = "$\bullet$";
      stringArray7[2] = "$circ$";
      stringArray7[3] = "$\bullet$";
      stringArray7[4] = " ";
      stringArray0[6] = stringArray7;
      String[] stringArray8 = new String[2];
      stringArray8[0] = ")";
      stringArray8[1] = ")";
      stringArray0[7] = stringArray8;
      String[] stringArray9 = new String[1];
      stringArray9[0] = " ";
      stringArray0[8] = stringArray9;
      int int0 = resultMatrixLatex0.getColSize(stringArray0, 1120, true, false);
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertEquals(0, int0);
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.3787945597505553
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 1);
      int int0 = resultMatrixHTML0.getVisibleColCount();
      assertEquals(0, int0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.removeFilterName(" ");
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      
      boolean boolean0 = resultMatrixPlainText0.getShowStdDev();
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.3941724158371347
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 2454);
      resultMatrixLatex0.getDisplayName();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 0);
      resultMatrixHTML0.getVisibleRowCount();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(1, 163);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.474952538425649
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.toStringKey();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixPlainText0.setEnumerateRowNames(true);
      resultMatrixLatex0.setRowHidden(1, true);
      resultMatrixLatex0.setRowNameWidth(2);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex0.getSignificance(32, 32);
      resultMatrixLatex0.getDefaultPrintColNames();
      assertEquals(2, resultMatrixLatex0.getRowNameWidth());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.7351288690905142
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      int[][] intArray0 = new int[0][6];
      resultMatrixCSV0.setEnumerateRowNames(true);
      int[] intArray1 = new int[8];
      intArray1[0] = 0;
      intArray1[1] = 2;
      intArray1[2] = 1;
      intArray1[3] = 1;
      intArray1[4] = 0;
      intArray1[5] = 0;
      intArray1[6] = 2;
      intArray1[7] = 2;
      resultMatrixCSV0.m_RankingWins = intArray1;
      resultMatrixCSV0.toStringMatrix();
      resultMatrixLatex0.m_StdDevPrec = 1478;
      resultMatrixLatex0.setRanking(intArray0);
      resultMatrixLatex0.clear();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(474, 1);
      resultMatrixGnuPlot0.getRowName(2);
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixLatex0.getSignificance(0, 0);
      assertTrue(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.638944047418477
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.toStringMatrix();
      String[] stringArray0 = new String[4];
      stringArray0[1] = "[";
      stringArray0[2] = " ";
      stringArray0[3] = "]";
      try { 
        resultMatrixCSV0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.6674643030882264
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setColNameWidth(97);
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.setPrintRowNames(true);
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.getVisibleColCount();
      resultMatrixCSV0.removeFilterName("");
      int int0 = resultMatrixHTML0.getStdDevWidth();
      assertEquals(97, resultMatrixCSV0.getColNameWidth());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.392502760280892
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.padString((String) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.540174611636465
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.getDisplayName();
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      
      int int0 = resultMatrixCSV0.getDisplayCol((-804));
      assertEquals((-1), int0);
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV1.getColCount());
      assertFalse(resultMatrixCSV1.getDefaultShowStdDev());
      assertEquals(1, resultMatrixCSV1.getRowCount());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=4.050397566439909
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      
      int int0 = resultMatrixCSV0.getDisplayCol(1);
      assertEquals((-1), int0);
      
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.424207037397678
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 2);
      int[][] intArray0 = new int[2][3];
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      resultMatrixPlainText0.setMean(1, 0, 3310.034);
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(2, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(0, resultMatrixPlainText0.getVisibleColCount());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.6576113424379293
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2127, 1);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixLatex0.setEnumerateRowNames(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.getRowName(0);
      assertEquals("row0", string0);
      assertNotNull(string0);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(2, 1);
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixLatex0.getSignificance(1380, 1);
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      
      resultMatrixGnuPlot1.setPrintColNames(true);
      assertTrue(resultMatrixGnuPlot1.getPrintColNames());
      assertFalse(resultMatrixGnuPlot1.getRemoveFilterName());
      assertEquals(2, resultMatrixGnuPlot1.getVisibleColCount());
      assertEquals(2, resultMatrixGnuPlot1.getStdDevPrec());
      assertFalse(resultMatrixGnuPlot1.getDefaultShowAverage());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.541074161861353
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertFalse(resultMatrixHTML0.getDefaultEnumerateRowNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.colNameWidthTipText();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=4.134883457023683
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      int[][] intArray0 = new int[0][6];
      resultMatrixCSV0.setEnumerateRowNames(true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.getOptions();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.setColHidden(1, true);
      resultMatrixGnuPlot1.rowNameWidthTipText();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.5866176745972522
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.getRevision();
      assertTrue(resultMatrixHTML0.getPrintColNames());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultCountWidth();
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(0, resultMatrixPlainText0.getDefaultColNameWidth());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.348050800310277
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(29, 29);
      resultMatrixLatex0.toStringSummary();
      resultMatrixLatex0.setStdDev(29, 29, 29);
      resultMatrixLatex0.getDefaultColNameWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      int[][] intArray0 = new int[2][6];
      int[] intArray1 = new int[1];
      intArray1[0] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[5];
      intArray2[0] = 0;
      intArray2[1] = 2;
      intArray2[2] = 29;
      intArray2[3] = 0;
      intArray2[4] = 2;
      intArray0[1] = intArray2;
      resultMatrixGnuPlot0.setSummary(intArray0, intArray0);
      int[] intArray3 = new int[0];
      resultMatrixGnuPlot0.m_RowOrder = intArray3;
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      resultMatrixGnuPlot0.getRevision();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = null;
      try {
        resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(3, (-1601));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.755239395164341
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      double double0 = resultMatrixLatex0.getStdDev(1, 2);
      assertEquals(0.0, double0, 0.01);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixPlainText0.setEnumerateRowNames(false);
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      
      String[][] stringArray0 = new String[6][6];
      String[] stringArray1 = new String[2];
      stringArray1[0] = "$\bullet$";
      stringArray1[1] = " ";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[9];
      stringArray2[0] = " ";
      stringArray2[1] = "$\bullet$";
      stringArray2[2] = "$circ$";
      stringArray2[3] = "*";
      stringArray2[4] = "$\bullet$";
      stringArray2[5] = "]";
      stringArray2[6] = " ";
      stringArray2[7] = "]";
      stringArray2[8] = " ";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[7];
      stringArray3[0] = "]";
      stringArray3[1] = "]";
      stringArray3[2] = "(";
      stringArray3[3] = "(";
      stringArray3[4] = "$circ$";
      stringArray3[5] = "$circ$";
      stringArray3[6] = "";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[8];
      stringArray4[0] = "(";
      stringArray4[1] = "(";
      stringArray4[2] = "*";
      stringArray4[3] = "$\bullet$";
      stringArray4[4] = "]";
      stringArray4[5] = ")";
      stringArray4[6] = " ";
      stringArray4[7] = "v";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[9];
      stringArray5[0] = "(";
      stringArray5[1] = "$circ$";
      stringArray5[2] = "]";
      stringArray5[3] = "";
      stringArray5[4] = "v";
      stringArray5[5] = "v";
      stringArray5[6] = " ";
      stringArray5[7] = "[";
      stringArray5[8] = "$circ$";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[1];
      stringArray6[0] = "a|r%IGIx";
      stringArray0[5] = stringArray6;
      int int0 = resultMatrixLatex1.getColSize(stringArray0, (-834));
      assertEquals(0, int0);
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(1, resultMatrixLatex1.getColCount());
      assertEquals(0, resultMatrixLatex1.getRowNameWidth());
      assertFalse(resultMatrixLatex1.getEnumerateRowNames());
      assertFalse(resultMatrixLatex1.getShowAverage());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=4.08140923381476
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getStdDev(0, 0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      String[][] stringArray1 = new String[9][4];
      stringArray1[0] = stringArray0;
      stringArray1[1] = stringArray0;
      stringArray1[2] = stringArray0;
      stringArray1[3] = stringArray0;
      stringArray1[4] = stringArray0;
      stringArray1[5] = stringArray0;
      stringArray1[6] = stringArray0;
      stringArray1[7] = stringArray0;
      stringArray1[8] = stringArray0;
      resultMatrixCSV1.getColSize(stringArray1, (-3130), false, false);
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertEquals(2, resultMatrixCSV1.getDefaultMeanPrec());
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      assertEquals(1, resultMatrixCSV1.getRowCount());
      assertEquals(0, resultMatrixCSV1.getColNameWidth());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=4.048849581250627
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setStdDevPrec(4);
      resultMatrixGnuPlot0.clearSummary();
      int[] intArray0 = new int[6];
      intArray0[0] = 2;
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.clearSummary();
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixPlainText0.toStringRanking();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.toStringSummary();
      // Undeclared exception!
      resultMatrixLatex0.setSize(588, 1768);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.6755662681588914
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 2);
      resultMatrixCSV0.setStdDevPrec(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getColName(2119);
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.setPrintRowNames(true);
      resultMatrixPlainText0.enumerateColNamesTipText();
      resultMatrixCSV0.setCount((-2), (-8.354433281188));
      resultMatrixCSV0.getDefaultMeanPrec();
      assertEquals(0, resultMatrixCSV0.getStdDevPrec());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 1);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=4.213144338277241
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.removeFilterName("*");
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML.main((String[]) null);
      resultMatrixCSV0.getDefaultColNameWidth();
      resultMatrixHTML0.setStdDev(32, 1965, 2);
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(1, resultMatrixHTML0.getRowCount());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.6210482194046087
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.clearSummary();
      int[] intArray0 = new int[6];
      intArray0[0] = 2;
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.stdDevWidthTipText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.setRowOrder(intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(835, 1);
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixGnuPlot0.assign(resultMatrixHTML0);
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.assign(resultMatrixHTML0);
      resultMatrixGnuPlot0.getRowHidden((-673));
      int[][] intArray1 = new int[6][3];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      resultMatrixGnuPlot0.setSummary(intArray1, intArray1);
      resultMatrixHTML0.toStringKey();
      resultMatrixGnuPlot0.rowNameWidthTipText();
      resultMatrixGnuPlot0.setStdDev((-673), 2, 0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(834, 835);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.3381260538846185
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(3, 3);
      resultMatrixCSV0.m_ShowStdDev = true;
      int[] intArray0 = new int[8];
      resultMatrixCSV0.clearHeader();
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 1;
      resultMatrixCSV0.setSize(2, 853);
      intArray0[3] = 3;
      intArray0[4] = 3;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      resultMatrixCSV0.assign(resultMatrixGnuPlot0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixGnuPlot0.setCountWidth(9);
      resultMatrixLatex0.setMeanWidth((-967));
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(2, resultMatrixCSV0.getVisibleColCount());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.2262048968624866
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 2);
      resultMatrixPlainText0.assign(resultMatrixGnuPlot0);
      assertFalse(resultMatrixPlainText0.getEnumerateColNames());
      
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getShowAverage();
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.3958739163972202
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColNameWidth((-1427));
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_SignificanceWidth = 0;
      int int0 = resultMatrixHTML0.getVisibleRowCount();
      assertEquals(1, int0);
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      
      resultMatrixGnuPlot0.clear();
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.673780326074442
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      boolean boolean0 = resultMatrixHTML0.getEnumerateRowNames();
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertFalse(boolean0);
      assertEquals(0, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixGnuPlot0.stdDevWidthTipText();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.541528425747374
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      resultMatrixGnuPlot0.setMeanPrec(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.setColNameWidth(0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.getDisplayName();
      resultMatrixCSV0.getDefaultMeanPrec();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getDefaultStdDevPrec();
      assertEquals(0, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.9950666392762777
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.assign(resultMatrixGnuPlot0);
      assertEquals(50, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toArray();
      resultMatrixHTML0.getDefaultShowAverage();
      resultMatrixHTML0.showAverageTipText();
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.6739215989429876
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 2);
      assertEquals(2, resultMatrixPlainText0.getRowCount());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      
      int[][] intArray0 = new int[2][3];
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.enumerateRowNamesTipText();
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=4.135238741886011
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 2271);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixCSV0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.getRowName((-1237));
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertNull(string0);
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV1.getOptions();
      assertEquals(18, stringArray0.length);
      assertEquals(1, resultMatrixCSV1.getVisibleColCount());
      
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      double double0 = resultMatrixLatex1.getAverage((-6166));
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(0, resultMatrixLatex1.getColNameWidth());
      assertEquals(0.0, double0, 0.01);
      assertEquals(2271, resultMatrixLatex1.getRowCount());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      assertEquals(0, resultMatrixLatex1.getRowNameWidth());
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.5192571434828492
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int int0 = resultMatrixLatex0.getSignificance(0, 123);
      assertEquals(0, int0);
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.488064729480525
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.setMeanWidth(1);
      resultMatrixPlainText0.m_MeanWidth = 2;
      resultMatrixPlainText0.m_ShowAverage = false;
      assertEquals(1, resultMatrixGnuPlot0.getMeanWidth());
      
      resultMatrixGnuPlot0.m_MeanWidth = 0;
      resultMatrixPlainText0.m_EnumerateRowNames = true;
      resultMatrixPlainText0.setEnumerateRowNames(true);
      resultMatrixPlainText0.m_StdDev = null;
      resultMatrixGnuPlot0.getDisplayName();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.setColNameWidth(1);
      resultMatrixCSV0.WIN_STRING = "v";
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.getSignificance(0, (-1168));
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.9196517730755014
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clearRanking();
      resultMatrixLatex0.getRowHidden((-18));
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 1);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.850623602123762
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      resultMatrixGnuPlot0.setMeanPrec(0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.getOptions();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      int[] intArray0 = new int[9];
      intArray0[0] = 292;
      intArray0[1] = 2;
      intArray0[2] = 2;
      intArray0[3] = 0;
      intArray0[4] = 1;
      intArray0[5] = 1399;
      intArray0[6] = (-1552);
      intArray0[7] = 1;
      intArray0[8] = 1;
      resultMatrixGnuPlot1.m_RankingWins = intArray0;
      resultMatrixGnuPlot1.rowNameWidthTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.getDefaultShowStdDev();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.7164690494646435
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 2);
      int[][] intArray0 = new int[2][3];
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      int[] intArray1 = new int[3];
      intArray1[0] = (-603);
      intArray1[1] = 2;
      intArray1[2] = 1;
      resultMatrixPlainText0.setRowOrder(intArray1);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=4.108753410479724
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      int[][] intArray0 = new int[0][6];
      resultMatrixLatex0.setRanking(intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getOptions();
      int int0 = ResultMatrix.SIGNIFICANCE_WIN;
      assertEquals(1, int0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.4882695869868265
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=4.054007578915687
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getColCount());
      
      String string0 = resultMatrixHTML0.toString();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixHTML0.getVisibleRowCount();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.toStringRanking();
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.7434613399506875
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.padString("tnD@$-Y~F/GNu#", 272, true);
      assertEquals("                                                                                                                                                                                                                                                                  tnD@$-Y~F/GNu#", string0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(5, resultMatrixLatex0.getCountWidth());
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(18, stringArray0.length);
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=4.053750617399957
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getSummaryTitle(25);
      resultMatrixGnuPlot0.toArray();
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      resultMatrixGnuPlot0.isSignificance(7);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      String string0 = resultMatrixGnuPlot0.padString("K4'(9CLR/Ax.$]", 1510, false);
      resultMatrixGnuPlot0.addHeader("z", string0);
      resultMatrixGnuPlot0.padString(string0, 114, true);
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.globalInfo();
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.9946760596349775
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.padString("$\bullet$", 3);
      assertEquals("$\bu", string0);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.toArray();
      resultMatrixHTML0.toStringSummary();
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(0, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      
      resultMatrixLatex0.globalInfo();
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.8624656947047367
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixHTML0.m_RowOrder = intArray0;
      resultMatrixHTML0.m_Wins = null;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.498460648795012
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.setRowHidden(2100, false);
      resultMatrixLatex0.setRowNameWidth(183);
      resultMatrixLatex0.getRowHidden(1);
      assertFalse(resultMatrixLatex0.getEnumerateColNames());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(2100, 1);
      resultMatrixCSV1.setColNameWidth(26);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      assertEquals(1, resultMatrixLatex1.getVisibleRowCount());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.145558061449252
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      String string0 = resultMatrixGnuPlot0.getRowName(0);
      assertNull(string0);
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV1.getVisibleColCount());
      assertEquals(1, resultMatrixCSV1.getVisibleRowCount());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=4.082555547319309
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.setOptions((String[]) null);
      resultMatrixCSV0.toArray();
      assertEquals(0, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.5860919583088093
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getRevision();
      String string0 = resultMatrixCSV0.getSummaryTitle((-166));
      assertEquals("W", string0);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      
      resultMatrixCSV0.toStringRanking();
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=3.8554630117692366
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[1];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixCSV0.setColOrder(intArray0);
      int[][] intArray1 = new int[1][6];
      intArray1[0] = intArray0;
      resultMatrixLatex0.setRanking(intArray1);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV1.getColName(1941);
      assertNull(string0);
      
      String[] stringArray0 = resultMatrixCSV1.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixLatex0.getAverage(1);
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(5, resultMatrixLatex0.getCountWidth());
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=3.4632558798867557
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 2);
      int[][] intArray0 = new int[2][3];
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.getRevision();
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(5, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      
      resultMatrixPlainText0.getDisplayName();
      assertEquals(2, resultMatrixPlainText0.getRowCount());
      
      resultMatrixLatex0.enumerateColNamesTipText();
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(0, resultMatrixLatex0.getDefaultStdDevWidth());
      assertFalse(resultMatrixLatex0.getShowStdDev());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.8538221586446344
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.removeFilterName("*");
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      resultMatrixGnuPlot0.setSize(2, 1258);
      resultMatrixGnuPlot0.getRowName(0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV0.getOptions();
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      assertEquals(2, int0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.439584610234401
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML1.getRowName(2);
      assertNull(string0);
      
      resultMatrixHTML1.setRowOrder((int[]) null);
      assertEquals(1, resultMatrixHTML1.getRowCount());
      assertEquals(2, resultMatrixHTML1.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixHTML1.getVisibleColCount());
      assertTrue(resultMatrixHTML1.getPrintRowNames());
      assertFalse(resultMatrixHTML1.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.4191744720157913
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getStdDev(0, 1);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[0][9];
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=3.6782972152264297
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      int int0 = resultMatrixCSV0.getDisplayCol(26);
      assertEquals((-1), int0);
      
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(18, stringArray0.length);
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(1, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=4.221994020661301
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setMeanPrec(114);
      resultMatrixGnuPlot0.setMeanPrec(0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.setColHidden((-247), false);
      resultMatrixGnuPlot0.rowNameWidthTipText();
      assertEquals(0, resultMatrixGnuPlot0.getMeanPrec());
      
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 2;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 4);
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.getDefaultColNameWidth();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=3.490781778504486
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 2);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.8122652907253687
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixHTML0.rowNameWidthTipText();
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=4.135073596912315
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 2);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(5, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(19, stringArray0.length);
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=4.024812537000065
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixCSV0.removeFilterName("*");
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader("*");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.0770893486252966
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.assign(resultMatrixGnuPlot0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.getDefaultColNameWidth();
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      
      boolean boolean0 = resultMatrixHTML0.getDefaultRemoveFilterName();
      assertFalse(boolean0);
      assertEquals(1, resultMatrixHTML0.getRowCount());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=4.108093053887164
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setMeanWidth(1495);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.getDefaultCountWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.getOptions();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.630732311167245
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 3);
      resultMatrixLatex0.m_StdDevWidth = 0;
      boolean boolean0 = resultMatrixLatex0.isSignificance(2813);
      assertEquals(3, resultMatrixLatex0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getVisibleColCount());
      assertTrue(boolean0);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringRanking();
      assertFalse(resultMatrixPlainText0.getDefaultEnumerateRowNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.761352553095037
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex0.getSignificance(1, 0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixPlainText0);
      assertEquals(5, resultMatrixCSV1.getCountWidth());
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex1);
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>($\\circ$/ /$\\bullet$)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=3.369313810422305
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 1);
      resultMatrixHTML0.clearSummary();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      int[] intArray1 = resultMatrixHTML0.getRowOrder();
      assertNotNull(intArray1);
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getVisibleColCount());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=3.3911736985822483
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(11, 32);
      int int0 = resultMatrixHTML0.getDisplayRow(25);
      assertEquals(25, int0);
      
      resultMatrixHTML0.getRowOrder();
      boolean boolean0 = resultMatrixHTML0.isSignificance((-1894));
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertFalse(boolean0);
      assertEquals(11, resultMatrixHTML0.getVisibleColCount());
      assertFalse(resultMatrixHTML0.getShowAverage());
      assertFalse(resultMatrixHTML0.getShowStdDev());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=4.28412921095754
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_StdDevPrec = 97;
      resultMatrixCSV0.setColNameWidth(50);
      resultMatrixCSV0.setShowAverage(true);
      resultMatrixCSV0.m_ColNameWidth = 0;
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.getCountWidth();
      resultMatrixCSV0.getMeanWidth();
      resultMatrixCSV0.getRowOrder();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      ResultMatrixLatex.main(stringArray0);
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.getPrintRowNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.toStringKey();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td colspan=\"2\"><b>Key</b></td></tr>\n   <tr><td><b>(1)</b></td><td>col0</td></tr>\n</table>\n", string0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=3.878843593157141
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_ShowAverage = true;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getSignificanceCount(0, 1);
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(19, stringArray0.length);
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(1, resultMatrixCSV0.getColCount());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=3.4859283519853634
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.RIGHT_PARENTHESES = "(";
      resultMatrixSignificance0.meanWidthTipText();
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=3.4724452697332073
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      double double0 = resultMatrixLatex0.getStdDev(0, 1);
      assertEquals(0.0, double0, 0.01);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getVisibleRowCount();
      resultMatrixLatex0.getDefaultShowStdDev();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=3.369224802856662
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 1);
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      assertEquals(0, resultMatrixHTML0.getColCount());
      assertEquals(0, resultMatrixHTML0.getDefaultCountWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      
      String string0 = resultMatrixPlainText0.printColNamesTipText();
      assertEquals("Whether to output column names or just numbers representing them.", string0);
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixGnuPlot0.clearSummary();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.clearRanking();
      resultMatrixLatex0.countWidthTipText();
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
      assertFalse(resultMatrixLatex0.getEnumerateColNames());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=3.817477850357864
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.setStdDevPrec(0);
      resultMatrixCSV0.getOptions();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=4.052932602552215
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 2);
      resultMatrixCSV0.setStdDevPrec(0);
      resultMatrixCSV0.m_RemoveFilterName = true;
      resultMatrixCSV0.m_ColNameWidth = 1334;
      resultMatrixCSV0.getOptions();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=3.817477850357864
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.m_RemoveFilterName = true;
      resultMatrixCSV0.setStdDevPrec(0);
      resultMatrixCSV0.getOptions();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=3.541074161861353
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.clear();
      resultMatrixGnuPlot0.listOptions();
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=4.186955899491206
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.setOptions((String[]) null);
      resultMatrixLatex0.getColCount();
      resultMatrixCSV0.setColHidden(73, false);
      assertEquals(0, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=4.108405349830155
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex0.m_StdDevWidth = 0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixCSV0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.toStringSummary();
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      
      resultMatrixCSV0.setColName(34, "$\bullet$");
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(1, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=4.135902658042885
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.globalInfo();
      resultMatrixPlainText0.getDefaultStdDevWidth();
      resultMatrixPlainText0.setColName(0, "Generates the output as plain text (for fixed width fonts).");
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertFalse(resultMatrixPlainText0.getShowAverage());
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      
      String string0 = resultMatrixLatex0.toStringKey();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption (Key)}\n\\scriptsize\n{\\centering\n\\begin{tabular}{cl}\\\\\n(1) & col0 \\\\\n\\end{tabular}\n}\n\\end{table}\n", string0);
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 0);
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixCSV0.toArray();
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=3.369313810422305
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 1);
      resultMatrixPlainText0.setColNameWidth(2);
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixPlainText0.showAverageTipText();
      assertEquals(2, resultMatrixPlainText0.getColNameWidth());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=3.58676894908481
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      
      resultMatrixCSV0.setColNameWidth(1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=3.5863695561620528
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setPrintColNames(true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 2);
      resultMatrixLatex0.getAverage(2);
      assertTrue(resultMatrixLatex0.getPrintColNames());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=4.022896546628055
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.removeFilterName((String) null);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      
      ResultMatrixHTML.main((String[]) null);
      resultMatrixCSV0.getDefaultColNameWidth();
      assertFalse(resultMatrixCSV0.getShowStdDev());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=3.6323095025533534
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.padString("", (-19));
      assertEquals("", string0);
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.setCountWidth((-19));
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      assertEquals(0, resultMatrixLatex1.getDefaultRowNameWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultCountWidth();
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(0, resultMatrixPlainText0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=3.319602936161598
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.clearRanking();
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 1);
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(0, resultMatrixHTML0.getVisibleColCount());
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=3.351295611873266
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[7];
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixHTML0.getDefaultEnumerateRowNames();
      resultMatrixHTML0.setShowAverage(false);
      resultMatrixHTML0.setSignificance(44, (-1335), (-1896));
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getDefaultSignificanceWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertFalse(resultMatrixHTML0.getShowAverage());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=3.14442386543956
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixCSV0.setRemoveFilterName(true);
      resultMatrixLatex0.getDisplayName();
      resultMatrixCSV0.getDisplayCol(47);
      assertTrue(resultMatrixCSV0.getRemoveFilterName());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV1.getVisibleColCount());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=3.361532748631367
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.setCountWidth(2449);
      resultMatrixCSV0.getRevision();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setSignificance(0, 394, 41);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      assertEquals(2449, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=3.341629132163693
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_EnumerateRowNames = true;
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.clearHeader();
      resultMatrixLatex0.setRemoveFilterName(true);
      assertTrue(resultMatrixLatex0.getRemoveFilterName());
      
      resultMatrixLatex0.clear();
      int int0 = resultMatrixLatex0.getRowCount();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 154
  /*Coverage entropy=3.539367798548164
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      resultMatrixPlainText0.toStringRanking();
      boolean boolean0 = resultMatrixPlainText0.getPrintRowNames();
      assertTrue(boolean0);
      
      resultMatrixPlainText0.setRowHidden(3, true);
      resultMatrixPlainText0.getRevision();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      String string0 = resultMatrixLatex0.toStringKey();
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption (Key)}\n\\scriptsize\n{\\centering\n\\begin{tabular}{cl}\\\\\n1 & col0 \\\\\n\\end{tabular}\n}\n\\end{table}\n", string0);
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=4.100348562440256
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1197, 0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText1.setEnumerateColNames(false);
      resultMatrixPlainText1.isSignificance(0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      resultMatrixPlainText1.getOptions();
      ResultMatrixHTML.main(stringArray0);
      resultMatrixPlainText1.isMean(97);
      resultMatrixPlainText1.getDefaultMeanWidth();
  }

  /**
  //Test case number: 156
  /*Coverage entropy=3.1476198037748353
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[0];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.setCountWidth(0);
      resultMatrixLatex0.setColNameWidth(0);
      int[][] intArray1 = new int[1][7];
      intArray1[0] = intArray0;
      resultMatrixLatex0.setSummary(intArray1, intArray1);
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals(50, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 157
  /*Coverage entropy=3.435005016902289
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.setCountWidth(2449);
      resultMatrixCSV0.getRevision();
      resultMatrixCSV0.setStdDevPrec(0);
      assertEquals(2449, resultMatrixCSV0.getCountWidth());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=4.081214790990673
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(18, stringArray0.length);
      
      String string0 = resultMatrixGnuPlot0.getRowName(1);
      assertNull(string0);
      
      resultMatrixCSV0.setStdDevWidth(0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      String[] stringArray1 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray1.length);
      
      resultMatrixCSV1.getDefaultColNameWidth();
      resultMatrixCSV0.showStdDevTipText();
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 159
  /*Coverage entropy=3.8984946789594517
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.getRowHidden(5);
      resultMatrixLatex0.setStdDevWidth((-95));
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 1);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 160
  /*Coverage entropy=3.567784306885703
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      String string0 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      resultMatrixHTML0.getVisibleColCount();
      resultMatrixCSV0.removeFilterName("v");
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 161
  /*Coverage entropy=3.3461699305139807
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int int0 = resultMatrixHTML0.getVisibleRowCount();
      int int1 = resultMatrixGnuPlot0.getVisibleColCount();
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertTrue(int1 == int0);
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintRowNames());
      assertEquals(1, int1);
  }

  /**
  //Test case number: 162
  /*Coverage entropy=3.14442386543956
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.getDisplayName();
      double double0 = resultMatrixLatex1.getStdDev(1, 413);
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(0, resultMatrixLatex1.getRowNameWidth());
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
      assertEquals(0.0, double0, 0.01);
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixLatex0.globalInfo();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=3.964821826017275
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_StdDevWidth = 0;
      resultMatrixHTML0.setStdDevWidth(576);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.setShowStdDev(true);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      resultMatrixHTML0.toStringRanking();
      resultMatrixHTML0.toStringMatrix();
      intArray0[1] = 0;
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (-1790.0);
      doubleArray0[5] = (double) 576;
      doubleArray0[6] = (double) 0;
      resultMatrixHTML0.m_Counts = doubleArray0;
      resultMatrixCSV0.setPrintRowNames(true);
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 1;
      intArray0[5] = 2;
      resultMatrixCSV0.m_ColNameWidth = 0;
      intArray0[6] = 0;
      resultMatrixCSV0.m_RankingDiff = intArray0;
      resultMatrixCSV0.toStringMatrix();
      resultMatrixHTML0.getVisibleColCount();
      String string0 = resultMatrixCSV0.removeFilterName("v");
      assertEquals(576, resultMatrixHTML0.getStdDevWidth());
      assertEquals("v", string0);
  }

  /**
  //Test case number: 164
  /*Coverage entropy=3.7921872309678335
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixHTML0.m_PrintColNames = false;
      resultMatrixPlainText0.setStdDevPrec(1488);
      resultMatrixPlainText0.toStringKey();
      resultMatrixHTML0.getVisibleRowCount();
      resultMatrixLatex0.getColNameWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixLatex0.setEnumerateRowNames(false);
      resultMatrixPlainText0.headerKeys();
      resultMatrixPlainText0.getDefaultEnumerateColNames();
      resultMatrixPlainText0.getColOrder();
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance((-558), 3);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 165
  /*Coverage entropy=4.010248495094044
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setRowOrder((int[]) null);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      
      ResultMatrixHTML.main((String[]) null);
      resultMatrixCSV0.getDefaultColNameWidth();
      int int0 = resultMatrixHTML0.getColNameWidth();
      assertEquals(0, int0);
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 166
  /*Coverage entropy=3.932314963682471
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.setColNameWidth(0);
      resultMatrixCSV0.getDisplayName();
      int int0 = resultMatrixCSV0.getDefaultMeanPrec();
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, int0);
      
      resultMatrixHTML0.getDefaultEnumerateColNames();
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
  }

  /**
  //Test case number: 167
  /*Coverage entropy=3.6329816531150794
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      int int0 = resultMatrixHTML1.getVisibleRowCount();
      assertEquals(0, resultMatrixHTML1.getSignificanceWidth());
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
      assertTrue(resultMatrixHTML1.getEnumerateColNames());
      assertEquals(0, resultMatrixHTML1.getMeanWidth());
      assertEquals(1, int0);
      assertEquals(0, resultMatrixHTML1.getCountWidth());
      assertTrue(resultMatrixHTML1.getPrintRowNames());
      assertEquals(25, resultMatrixHTML1.getRowNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.toStringKey();
      assertEquals("Key:\n1 col0\n", string0);
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      
      resultMatrixHTML0.headerKeys();
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      assertEquals(1, resultMatrixHTML0.getRowCount());
  }

  /**
  //Test case number: 168
  /*Coverage entropy=3.766383704522568
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setColNameWidth(2);
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.setPrintRowNames(false);
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.isSignificance((-1340));
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSize((-1), 2);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 169
  /*Coverage entropy=4.021463814024924
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setSize(0, 1);
      resultMatrixPlainText0.getSignificanceCount((-449), 2);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getOptions();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 170
  /*Coverage entropy=3.3692248028566616
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 1);
      resultMatrixHTML0.setRowNameWidth(1261);
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      assertEquals(1261, resultMatrixHTML0.getRowNameWidth());
  }

  /**
  //Test case number: 171
  /*Coverage entropy=3.3692248028566616
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 1);
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixHTML0.getEnumerateRowNames();
      assertFalse(resultMatrixHTML0.getDefaultShowAverage());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixHTML0.getVisibleColCount());
  }

  /**
  //Test case number: 172
  /*Coverage entropy=3.1243658097838045
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[1];
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.getDefaultPrintColNames();
      int int1 = resultMatrixSignificance0.getMeanPrec();
      assertEquals(2, int1);
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertTrue(resultMatrixSignificance0.getDefaultEnumerateColNames());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(5, resultMatrixSignificance0.getCountWidth());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
  }

  /**
  //Test case number: 173
  /*Coverage entropy=3.14442386543956
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      assertEquals(0, resultMatrixLatex1.getRowNameWidth());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      
      resultMatrixLatex0.getStdDev(2, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      assertFalse(resultMatrixCSV0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 174
  /*Coverage entropy=3.631361984524191
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML1.toStringRanking();
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
      assertEquals(0, resultMatrixHTML1.getMeanWidth());
      assertTrue(resultMatrixHTML1.getPrintRowNames());
      assertEquals(25, resultMatrixHTML1.getRowNameWidth());
      assertEquals(2, resultMatrixHTML1.getStdDevPrec());
      
      double double0 = resultMatrixHTML0.getCount(2);
      assertEquals(0.0, double0, 0.01);
      
      int int0 = resultMatrixHTML0.getSignificanceWidth();
      assertEquals(0, int0);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDisplayName();
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
  }

  /**
  //Test case number: 175
  /*Coverage entropy=3.9363177748885523
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      resultMatrixCSV0.toStringMatrix();
      resultMatrixLatex0.setOptions((String[]) null);
      resultMatrixLatex0.WIN_STRING = "Dataset,[1]\nrow0,''\n'[v/ /*]',''\n";
      resultMatrixCSV0.removeFilterName("");
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      
      resultMatrixCSV0.setOptions((String[]) null);
      resultMatrixLatex0.getColCount();
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
  }

  /**
  //Test case number: 176
  /*Coverage entropy=4.163494486962416
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "]";
      resultMatrixCSV0.setStdDevPrec(2);
      stringArray0[1] = "]";
      ResultMatrixGnuPlot.main(stringArray0);
      assertEquals(2, stringArray0.length);
  }

  /**
  //Test case number: 177
  /*Coverage entropy=3.4925064671023778
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      double double0 = resultMatrixLatex0.getStdDev(0, 0);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, resultMatrixLatex0.getColCount());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.getRowHidden(16);
      assertFalse(resultMatrixCSV1.getDefaultEnumerateRowNames());
      assertEquals(2, resultMatrixCSV1.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertEquals(1, resultMatrixCSV1.getRowCount());
      assertTrue(resultMatrixCSV1.getDefaultPrintRowNames());
      assertEquals(1, resultMatrixCSV1.getColCount());
  }

  /**
  //Test case number: 178
  /*Coverage entropy=3.6312207116556454
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(50, resultMatrixPlainText0.getRowNameWidth());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 11);
      resultMatrixHTML0.setShowAverage(false);
      resultMatrixHTML0.setRowOrder((int[]) null);
      resultMatrixHTML0.getColOrder();
      assertFalse(resultMatrixHTML0.getShowAverage());
      assertEquals(11, resultMatrixHTML0.getRowCount());
      assertEquals(0, resultMatrixHTML0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 179
  /*Coverage entropy=4.082643281713554
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 2);
      resultMatrixCSV0.setStdDevPrec(2);
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      String[][] stringArray1 = resultMatrixCSV0.toArray();
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixCSV0.getVisibleColCount());
      assertEquals(4, stringArray1.length);
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 180
  /*Coverage entropy=3.8427530508079646
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getVisibleRowCount();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 1);
      resultMatrixGnuPlot0.m_StdDevPrec = (-1707);
      resultMatrixHTML0.isStdDev((-1707));
      resultMatrixCSV0.getOptions();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 181
  /*Coverage entropy=3.5396680687913826
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.padString("", 69);
      assertEquals("                                                                     ", string0);
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 182
  /*Coverage entropy=3.4619352697034635
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(14, 14);
      resultMatrixCSV0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(26, 26);
      resultMatrixPlainText0.getSignificanceCount(0, 1);
      resultMatrixPlainText0.setStdDevWidth(7);
      resultMatrixPlainText0.getDefaultSignificanceWidth();
      resultMatrixCSV0.setStdDevPrec(29);
      assertEquals(29, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 183
  /*Coverage entropy=3.435005016902289
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int int0 = resultMatrixCSV0.getDisplayRow(566);
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertEquals((-1), int0);
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
  }

  /**
  //Test case number: 184
  /*Coverage entropy=3.434635057597813
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      boolean boolean0 = resultMatrixHTML0.isRowName(97);
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertFalse(boolean0);
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getDefaultCountWidth());
      assertEquals(0, resultMatrixHTML0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 185
  /*Coverage entropy=4.0249754830649165
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.assign(resultMatrixLatex0);
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals("Dataset (1) \n------------\nrow0(0)    |\n------------\n($\\circ$/  |\n", string0);
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertFalse(resultMatrixPlainText0.getPrintColNames());
  }

  /**
  //Test case number: 186
  /*Coverage entropy=3.5865379488538096
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int int0 = resultMatrixHTML0.getVisibleRowCount();
      assertEquals(1, int0);
      
      resultMatrixHTML0.printRowNamesTipText();
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(0, resultMatrixHTML0.getDefaultCountWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 187
  /*Coverage entropy=3.5866946272713576
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.m_RankingWins = intArray0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setSignificanceWidth(3);
      assertEquals(3, resultMatrixPlainText0.getSignificanceWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 188
  /*Coverage entropy=3.3953328377149554
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setSignificanceWidth((-799));
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 1);
      assertEquals(0, resultMatrixHTML0.getColCount());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getRevision();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(0, resultMatrixLatex0.getDefaultCountWidth());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 189
  /*Coverage entropy=3.9311623457280844
  */
  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_ShowStdDev = true;
      resultMatrixPlainText0.RIGHT_PARENTHESES = "";
      resultMatrixPlainText0.m_EnumerateRowNames = false;
      resultMatrixPlainText0.stdDevPrecTipText();
      resultMatrixPlainText0.getDefaultPrintRowNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[0];
      resultMatrixSignificance0.setSignificanceWidth((-644));
      resultMatrixSignificance0.m_RowOrder = intArray0;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 190
  /*Coverage entropy=3.6316774220360197
  */
  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(1, resultMatrixPlainText0.getColCount());
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText0.assign(resultMatrixPlainText1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixPlainText1.stdDevPrecTipText();
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertTrue(resultMatrixPlainText1.getEnumerateColNames());
      assertTrue(resultMatrixPlainText1.getPrintRowNames());
      assertEquals(25, resultMatrixPlainText1.getRowNameWidth());
      assertTrue(resultMatrixPlainText1.getPrintColNames());
      assertEquals(0, resultMatrixPlainText1.getStdDevWidth());
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      assertEquals(1, resultMatrixPlainText1.getRowCount());
      assertEquals(2, resultMatrixPlainText1.getMeanPrec());
      assertFalse(resultMatrixPlainText0.getShowAverage());
      assertFalse(resultMatrixPlainText1.getEnumerateRowNames());
      assertEquals(5, resultMatrixPlainText1.getCountWidth());
      assertFalse(resultMatrixPlainText1.getRemoveFilterName());
      assertEquals(2, resultMatrixPlainText1.getStdDevPrec());
  }

  /**
  //Test case number: 191
  /*Coverage entropy=3.2972018513206596
  */
  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.getRevision();
      int int0 = resultMatrixCSV0.getDisplayCol(26);
      assertEquals((-1), int0);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixCSV0.toStringKey();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 192
  /*Coverage entropy=3.4170263404427326
  */
  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 1);
      resultMatrixHTML0.setMeanPrec(0);
      int[] intArray0 = new int[1];
      resultMatrixPlainText0.m_RankingLosses = intArray0;
      resultMatrixHTML0.setRowOrder(intArray0);
      int int0 = resultMatrixHTML0.getVisibleColCount();
      assertEquals(0, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 193
  /*Coverage entropy=3.371075182474134
  */
  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.doubleToString((-2751.736949501), 100);
      assertEquals("-2751.7369495010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", string0);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 1);
      resultMatrixHTML0.RIGHT_PARENTHESES = "(";
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setRowOrder(intArray0);
      assertEquals(0, resultMatrixHTML0.getColCount());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getDefaultCountWidth());
  }

  /**
  //Test case number: 194
  /*Coverage entropy=3.61785254091104
  */
  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultStdDevWidth();
      String string0 = resultMatrixPlainText0.getColName(1);
      assertNull(string0);
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(1, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 195
  /*Coverage entropy=3.867433031590713
  */
  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.clear();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRowName(2);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.getOptions();
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV1);
      resultMatrixLatex0.setMeanWidth(2);
      resultMatrixLatex0.setSignificanceWidth(2);
      resultMatrixLatex0.getAverage(0);
      assertEquals(2, resultMatrixLatex0.getMeanWidth());
      
      resultMatrixGnuPlot0.getDefaultPrintRowNames();
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
  }

  /**
  //Test case number: 196
  /*Coverage entropy=3.582845732046839
  */
  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultStdDevWidth();
      String string0 = resultMatrixPlainText0.getColName(0);
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertNotNull(string0);
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals("(1) col0", string0);
  }

  /**
  //Test case number: 197
  /*Coverage entropy=3.666401267646859
  */
  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[6] = "x)9D";
      stringArray0[1] = "--";
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getColName(34);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.toStringKey();
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText1.setPrintRowNames(false);
      resultMatrixPlainText0.getColName(2);
      resultMatrixPlainText1.enumerateColNamesTipText();
      assertFalse(resultMatrixPlainText1.getPrintRowNames());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setCount(2, 34);
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 198
  /*Coverage entropy=4.212337498803077
  */
  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setColNameWidth(2);
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.setPrintRowNames(false);
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixCSV0.getOptions();
      assertEquals(2, resultMatrixCSV0.getColNameWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(1, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 199
  /*Coverage entropy=3.633727431476853
  */
  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.clearSummary();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.getColName(34);
      assertNull(string0);
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringKey();
      String string1 = resultMatrixPlainText1.toStringKey();
      assertEquals("Key:\n(1) col0\n", string1);
      
      resultMatrixPlainText1.setPrintRowNames(true);
      assertFalse(resultMatrixPlainText1.getEnumerateRowNames());
      assertTrue(resultMatrixPlainText1.getPrintRowNames());
      
      resultMatrixPlainText0.enumerateColNamesTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setCount(1, 1);
      int int0 = resultMatrixCSV0.getDefaultMeanPrec();
      assertEquals(2, int0);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 2);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      assertEquals(2, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(0, resultMatrixHTML0.getDefaultCountWidth());
  }

  /**
  //Test case number: 200
  /*Coverage entropy=3.6734666743846436
  */
  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[2] = (-247);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setMeanPrec((-1342));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getMeanPrec();
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance((-855), (-1342));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 201
  /*Coverage entropy=3.6757064125075707
  */
  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.getColName((-203));
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(50, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertFalse(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      assertTrue(resultMatrixPlainText1.getEnumerateColNames());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 1);
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixLatex0.getColCount());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
  }

  /**
  //Test case number: 202
  /*Coverage entropy=3.755726869775038
  */
  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(1, resultMatrixPlainText0.getColCount());
      
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.setPrintColNames(false);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.setPrintRowNames(false);
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText(resultMatrixPlainText1);
      resultMatrixPlainText2.getColName(15);
      assertTrue(resultMatrixPlainText1.getEnumerateRowNames());
      
      ResultMatrixPlainText resultMatrixPlainText3 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText3.enumerateColNamesTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setCount(0, 2);
      resultMatrixCSV0.globalInfo();
      assertTrue(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 203
  /*Coverage entropy=4.110775520993345
  */
  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      
      resultMatrixPlainText0.getSignificanceCount(0, 1);
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      ResultMatrixCSV.main(stringArray0);
      assertEquals(18, stringArray0.length);
      
      resultMatrixCSV0.showStdDevTipText();
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
  }
}
