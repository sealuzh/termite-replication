/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 15:32:37 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.markSupported();
      sequenceInputStream0.skip((byte)31);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 1, (byte)31);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.backup(1);
      javaCharStream0.BeginToken();
      sequenceInputStream0.read();
      javaCharStream0.inBuf = 1;
      javaCharStream0.readChar();
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 5511, (byte)10);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 3, 3);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1, (byte)10, 5511);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.backup(2048);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.7586891892950743
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      JavaCharStream.hexval('b');
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)1, 'b', 'b');
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.backup(1395);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1297
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.close();
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 330, 330);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("x,e]9mgA5Ia");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.buffer = null;
      javaCharStream0.available = (-435);
      javaCharStream0.ReInit((Reader) stringReader0, 2400, 6, 2400);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      mockFileInputStream0.markSupported();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, (-1826), (-2305), 49);
      javaCharStream0.available = 0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.ReInit((InputStream) mockFileInputStream0, 760, 49, 2048);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.9069611899142007
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("eG]T)<&!:j$rs2");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-2);
      byteArray0[2] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      byteArrayInputStream0.close();
      byteArrayInputStream0.close();
      StringReader stringReader1 = new StringReader("eG]T)<&!:j$rs2");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReadByte();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader2 = new StringReader(".");
      javaCharStream0.GetImage();
      javaCharStream0.ReInit((Reader) stringReader0, 364, (int) (byte)0);
      javaCharStream0.backup(123);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      javaCharStream0.getLine();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3164250323253432
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      char[] charArray0 = new char[1];
      charArray0[0] = '@';
      stringReader0.read(charArray0);
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2954), 94, 2616);
      javaCharStream0.nextCharInd = 960;
      javaCharStream0.readChar();
      JavaCharStream.hexval('c');
      int int0 = javaCharStream0.getLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-2954), int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.3798389570661653
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      char[] charArray0 = new char[1];
      charArray0[0] = 'D';
      stringReader0.read(charArray0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 5511, (byte)9);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 3, 3);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)10, 750);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream2.close();
      StringReader stringReader1 = new StringReader(" column ");
      byteArrayInputStream1.read(byteArray0);
      javaCharStream0.backup(72);
      javaCharStream0.readChar();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream2);
      javaCharStream1.tokenBegin = (-3047);
      StringReader stringReader2 = new StringReader("Cndo^,HzVZ5}y");
      // Undeclared exception!
      try { 
        javaCharStream1.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.580093770149591
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.skip((byte)31);
      StringReader stringReader0 = new StringReader("W");
      StringReader stringReader1 = new StringReader("!<u+j#NBTD8q{Nk8R3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (byte)31, (byte)31, 1);
      javaCharStream0.ReadByte();
      javaCharStream0.ReInit((Reader) stringReader0, 1, 11);
      javaCharStream0.backup(1);
      javaCharStream0.readChar();
      javaCharStream0.bufsize = 11;
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      JavaCharStream.hexval('1');
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.backup(10);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      assertEquals(1, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.8687638971704073
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)74;
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte)12;
      byteArray0[3] = (byte)55;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)118;
      byteArray0[6] = (byte)5;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-113), (-113));
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray1);
      byteArrayInputStream0.close();
      StringReader stringReader0 = new StringReader("!<u+j#NBTD8q{Nk8R3");
      StringReader stringReader1 = new StringReader("!<u+j#NBTD8q{Nk8R3");
      javaCharStream0.ReInit((Reader) stringReader0, (-113), 553);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      javaCharStream1.backup((-113));
      javaCharStream1.readChar();
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream1, (-113), 100);
      javaCharStream2.AdjustBuffSize();
      javaCharStream0.getEndLine();
      javaCharStream2.ReInit((Reader) stringReader1, 0, 100, (int) (byte)12);
      assertEquals(0, javaCharStream2.getBeginColumn());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[4];
      charArray0[0] = '@';
      charArray0[1] = '<';
      charArray0[2] = '@';
      charArray0[3] = '@';
      stringReader0.read(charArray0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-53);
      byteArray0[1] = (byte) (-53);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1), 0);
      int int0 = 16;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (-1), 16);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1, (-2189), (-1627));
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.close();
      String string0 = "\\!<u+j#NBTD8q{Nk8R3";
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.2419749665951307
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      JavaCharStream.hexval('1');
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.backup(10);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getEndLine();
      assertEquals(9, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.5231920444148086
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)64;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, (byte)0, 226);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      StringReader stringReader0 = new StringReader("!<u+j#NBTD8q{Nyk8R3");
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte)0, (int) (byte)64);
      javaCharStream0.backup((byte)0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "!<u+j#NBTD8q{Nyk8R3");
      javaCharStream0.getLine();
      javaCharStream0.ReadByte();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      char[] charArray0 = new char[1];
      charArray0[0] = 'D';
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      int int0 = JavaCharStream.hexval('6');
      assertEquals(6, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.787138819780121
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.markSupported();
      sequenceInputStream0.skip((byte)31);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 1, (byte)31);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.backup(1);
      javaCharStream0.BeginToken();
      javaCharStream0.inBuf = 1;
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getColumn();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8662943611198906
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringReader stringReader0 = new StringReader("eG]T)<&!:j$rs2");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-2);
      byteArray0[2] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      byteArrayInputStream0.close();
      byteArrayInputStream0.close();
      StringReader stringReader1 = new StringReader("eG]T)<&!:j$rs2");
      StringReader stringReader2 = new StringReader("C) }]Xd/2u=NEm");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader3 = new StringReader(".");
      javaCharStream0.GetImage();
      javaCharStream0.ReInit((Reader) stringReader3, (int) (byte)0, 123);
      javaCharStream0.backup(1440);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn((-1279), (byte)0);
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1279), javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1184011927383564
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1396, 1396, 1396);
      javaCharStream0.adjustBeginLineColumn(1396, 11);
      StringReader stringReader1 = new StringReader("2ZyH");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 11, 0, 90);
      javaCharStream1.BeginToken();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.964532478280498
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("!<u+j#NBTD8q{Nk8R3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      int int0 = JavaCharStream.hexval('5');
      assertEquals(5, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)89;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.skip((-799L));
      StringReader stringReader0 = new StringReader("");
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      JavaCharStream.hexval('e');
      JavaCharStream.hexval('d');
      try { 
        JavaCharStream.hexval('}');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.2801315622513108
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      char[] charArray0 = new char[1];
      stringReader0.read(charArray0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)4;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 5511, (byte)9);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 3, (-1627));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)90, (-1627));
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream2.close();
      StringReader stringReader1 = new StringReader(" column ");
      StringReader stringReader2 = new StringReader(" column ");
      javaCharStream0.ReInit((Reader) stringReader2, (int) (byte)9, 3);
      byteArrayInputStream1.read(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream2);
      javaCharStream1.backup(72);
      javaCharStream1.readChar();
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream2);
      javaCharStream2.BeginToken();
      StringReader stringReader3 = new StringReader("Cndo^,HzVZ5}y");
      char char0 = javaCharStream2.readChar();
      assertEquals(1, javaCharStream2.getBeginColumn());
      assertEquals('\t', char0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      byte[] byteArray0 = new byte[3];
      stringReader0.skip((byte)10);
      byteArray0[0] = (byte)10;
      StringReader stringReader1 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, 7, (int) (byte)10);
      javaCharStream0.backup((byte)10);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 10, 4288, 4288);
      char char0 = javaCharStream1.readChar();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals('\n', char0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.2774737549423403
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 5511, (byte)9);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 3, 3);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)10, 750);
      byteArrayInputStream1.mark((byte)10);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream2.close();
      StringReader stringReader0 = new StringReader(" column ");
      byteArrayInputStream1.read(byteArray0);
      javaCharStream0.backup((byte)9);
      javaCharStream0.readChar();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream2);
      StringReader stringReader1 = new StringReader("Cndo^,HzVZ5}y");
      javaCharStream1.readChar();
      javaCharStream1.GetImage();
      javaCharStream0.getEndLine();
      assertEquals(4087, javaCharStream0.bufpos);
      
      char char0 = javaCharStream1.readChar();
      assertEquals('\t', char0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      int int0 = JavaCharStream.hexval('D');
      assertEquals(13, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.3809682098476954
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("1-dus.]:Amk.");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginColumn();
      char char0 = javaCharStream0.ReadByte();
      assertEquals((-1), javaCharStream0.bufpos);
      assertEquals('1', char0);
      
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$Ig@@3@J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2939, (-1));
      javaCharStream0.nextCharInd = 2939;
      javaCharStream0.Done();
      javaCharStream0.column = (-1);
      javaCharStream0.bufpos = (-1);
      StringReader stringReader1 = new StringReader("");
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5748027648585858
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      char[] charArray0 = new char[1];
      charArray0[0] = '@';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2931), 94, 2616);
      javaCharStream0.readChar();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      javaCharStream0.ExpandBuff(true);
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 1, (-434));
      char[] charArray1 = javaCharStream1.GetSuffix(532);
      assertNotSame(charArray1, charArray0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5848550690169674
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.adjustBeginLineColumn((-1), (-1));
      javaCharStream0.GetImage();
      assertEquals((-1), javaCharStream0.getBeginColumn());
      
      int int0 = JavaCharStream.hexval('F');
      assertEquals(15, int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip((-3565L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream.hexval('3');
      javaCharStream0.line = 94;
      javaCharStream0.Done();
      stringReader0.reset();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " column ");
      javaCharStream0.nextCharInd = 66;
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.backup(10);
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.AdjustBuffSize();
      assertEquals(10, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.148995889711742
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 0);
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.bufcolumn = null;
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      int int0 = JavaCharStream.hexval('B');
      assertEquals(11, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5169457286769186
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)14;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1), (-1762));
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)14, (-1762));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1, (-1762), (-1));
      byteArrayInputStream0.close();
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      javaCharStream0.ReInit((Reader) stringReader0, 1208, (-2756));
      byteArrayInputStream1.read(byteArray0);
      javaCharStream0.backup((-1762));
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.4434606788422255
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      JavaCharStream.hexval('b');
      StringReader stringReader0 = new StringReader(" column ");
      stringReader0.markSupported();
      stringReader0.skip((-4345L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, (-1));
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(1, javaCharStream0.getBeginLine());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)14;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1), (-1762));
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)14, (-1762));
      JavaCharStream.hexval('E');
      try { 
        JavaCharStream.hexval('s');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.skip((byte)31);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      int int0 = JavaCharStream.hexval('4');
      assertEquals(4, int0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      sequenceInputStream0.skip(2997L);
      Enumeration<SequenceInputStream> enumeration1 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.6619395666756522
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      JavaCharStream.hexval('b');
      StringReader stringReader0 = new StringReader("Y");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 96, (-166), 1);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(96);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      int int0 = JavaCharStream.hexval('0');
      assertEquals(0, int0);
      
      int int1 = JavaCharStream.hexval('9');
      assertEquals(9, int1);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      JavaCharStream.hexval('0');
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      char char0 = 'L';
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.9732617547983051
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.markSupported();
      sequenceInputStream0.skip((byte)31);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 1, (byte)31);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.backup(1);
      javaCharStream0.BeginToken();
      javaCharStream0.UpdateLineColumn('\u0000');
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(31, javaCharStream0.getBeginColumn());
      assertEquals(31, int0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.8059602990100263
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[0] = (byte)64;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, (byte)0, 228);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("<u+j#NBTD8q{yk8R3");
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte)0, (int) (byte)64);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn(228, (-186));
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      sequenceInputStream0.skip(2997L);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(dataInputStream0, sequenceInputStream0);
      Enumeration<SequenceInputStream> enumeration1 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(enumeration1);
      int int0 = JavaCharStream.hexval('7');
      assertEquals(7, int0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      int int0 = JavaCharStream.hexval('A');
      assertEquals(10, int0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.getBeginColumn();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      int int0 = 0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-5315), 13);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)74, (byte) (-86));
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte) (-86), (-5315));
      javaCharStream1.backup(0);
      stringReader0.ready();
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      String string0 = "$Ig@@3@J";
      StringReader stringReader0 = new StringReader("$Ig@@3@J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 59, 59);
      char[] charArray0 = new char[3];
      char char0 = 'N';
      charArray0[0] = 'N';
      charArray0[1] = '[';
      charArray0[2] = ':';
      javaCharStream0.nextCharBuf = charArray0;
      stringReader0.read(charArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      int int0 = JavaCharStream.hexval('C');
      assertEquals(12, int0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.8662943611198906
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("!<u+j#NBTD8q{Nk8R3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      stringReader0.markSupported();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      assertEquals(2, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = JavaCharStream.hexval('8');
      assertEquals(8, int0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 0);
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      JavaCharStream.hexval('0');
      StringReader stringReader0 = new StringReader("9Q]c72^=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-1), 86);
      javaCharStream0.prevCharIsLF = true;
      javaCharStream0.readChar();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(92);
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.977500522076773
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2939, (-1));
      javaCharStream0.nextCharInd = 2939;
      javaCharStream0.bufpos = (-1);
      char[] charArray0 = new char[2];
      stringReader0.read(charArray0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.getBeginLine();
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, dataInputStream0);
      sequenceInputStream1.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, (-1434), 0, 1991);
      javaCharStream1.adjustBeginLineColumn(0, 1991);
      // Undeclared exception!
      try { 
        javaCharStream1.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)76;
      StringReader stringReader1 = new StringReader("a@IPy5o");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)76, 1684, 2027);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      assertEquals(76, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.skip(0L);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 2296, 2296);
      javaCharStream0.backup(2296);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      assertEquals(1802, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.353363451324745
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-2);
      byteArray0[2] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      byteArrayInputStream0.close();
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 3651, (byte)0, 3651);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ReInit((Reader) null, (int) (byte) (-2), (int) (byte) (-2));
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 1);
      javaCharStream0.ReInit((Reader) stringReader0, 1, 1);
      javaCharStream0.backup(1);
      javaCharStream0.readChar();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.355825830420688
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Q<R5tr");
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.backup((-1));
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      char char0 = '>';
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)76;
      byteArray0[1] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("!<u+j#NBTD8q{Nk8R3");
      StringReader stringReader1 = new StringReader("!<u+j#NBTD8q{Nk8R3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)0, (-1172), 0);
      int int0 = 1960;
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(87, 1960);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      int int0 = JavaCharStream.hexval('a');
      assertEquals(10, int0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte) (-86), 12);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1, 0, 0);
      byteArrayInputStream0.close();
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 4003);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, (-48), 4497, 15);
      javaCharStream0.ReInit((InputStream) mockFileInputStream0, (-48), 3879);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.3735580433042474
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)1, (byte)1, (byte)1);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte)1, (int) (byte)1);
      javaCharStream0.readChar();
      javaCharStream0.UpdateLineColumn('%');
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 117, 66);
      javaCharStream0.bufpos = 117;
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringReader stringReader0 = new StringReader("21I&vkbg");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.FillBuff();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.3711882790083436
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)76;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("!-u+j#NBTD8q{Nk8R3");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginColumn();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.5996811926805745
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      JavaCharStream.hexval('1');
      StringReader stringReader0 = new StringReader("s(p:1v~Og_jH");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 144, 90);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      int int0 = javaCharStream0.getEndLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(144, int0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.090919393915582
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("wi04w @");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)74;
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[1];
      charArray0[0] = 'W';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (byte)7);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.0676032882216056
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader("wi04w @");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1259), 61);
      javaCharStream0.adjustBeginLineColumn(61, (-1259));
      assertEquals((-1259), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      JavaCharStream.hexval('9');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 9, (-3045));
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 381);
      javaCharStream0.FillBuff();
      char char0 = javaCharStream0.ReadByte();
      assertEquals('%', char0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)74;
      byteArray0[4] = (byte) (-86);
      byteArray0[5] = (byte)59;
      byteArray0[6] = (byte)25;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)55, 0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, (byte)25, (-1617), (byte) (-86));
      javaCharStream0.tokenBegin = (int) (byte)59;
      javaCharStream0.adjustBeginLineColumn((byte)25, (byte)74);
      assertEquals(25, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[7];
      charArray0[0] = 'J';
      charArray0[1] = 'L';
      charArray0[2] = ' ';
      charArray0[3] = 'A';
      charArray0[4] = 'v';
      charArray0[5] = 'V';
      charArray0[6] = 'C';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[0];
      stringReader0.mark(0);
      javaCharStream0.maxNextCharInd = (-917);
      javaCharStream0.bufcolumn = intArray0;
      javaCharStream0.ReInit((Reader) stringReader0, (-2782), 0);
      javaCharStream0.inBuf = (-917);
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      int int0 = JavaCharStream.hexval('0');
      assertEquals(0, int0);
      
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.getBeginColumn();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 155, 155);
      javaCharStream0.AdjustBuffSize();
      stringReader0.markSupported();
      char[] charArray0 = new char[8];
      charArray0[0] = 'L';
      charArray0[1] = 'U';
      charArray0[2] = 'l';
      charArray0[3] = 'V';
      charArray0[4] = 'f';
      charArray0[5] = '*';
      charArray0[6] = '';
      charArray0[7] = 'J';
      stringReader0.read(charArray0);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(5, 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.4787896066478488
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringReader stringReader0 = new StringReader("eG]T)<&!:j$rs2");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1830), (-1830));
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-1829), int0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.4629221249986673
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)31;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)40;
      byteArray0[4] = (byte)72;
      byteArray0[5] = (byte) (-14);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)31, (byte) (-14));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1574), (byte)40);
      byteArrayInputStream0.close();
      javaCharStream0.bufsize = (int) (byte)31;
      byteArrayInputStream0.read(byteArray0);
      javaCharStream0.backup((byte)13);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((byte)1, 0);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.2518308931332816
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      JavaCharStream.hexval('1');
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, 7, 93);
      javaCharStream0.backup(7);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      assertEquals(4090, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-36), 99);
      javaCharStream0.adjustBeginLineColumn(0, 0);
      assertEquals(0, javaCharStream0.getBeginLine());
      assertEquals(0, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.0018442867649786
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.markSupported();
      sequenceInputStream0.skip((byte)31);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 1, (byte)31);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.backup(1);
      javaCharStream0.BeginToken();
      javaCharStream0.inBuf = 1;
      javaCharStream0.adjustBeginLineColumn(1, (-182));
      assertEquals(1, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.460685998915806
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StringReader stringReader0 = new StringReader("eG]T)<&!:j$rs2");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1830), (-1830));
      javaCharStream0.backup((-1830));
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.0287375017310743
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StringReader stringReader0 = new StringReader("wi04w @");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1147), (-1259));
      javaCharStream0.bufsize = (-1259);
      javaCharStream0.adjustBeginLineColumn((-1259), (-1259));
      assertEquals(0, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.backup(10);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 0);
      javaCharStream0.adjustBeginLineColumn(2528, (-3831));
      assertEquals((-3831), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      javaCharStream0.adjustBeginLineColumn((-1), (-1));
      assertEquals((-1), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.864555230685108
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("eG]T)<&!:j$rs2");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1830), 589);
      javaCharStream0.readChar();
      javaCharStream0.GetSuffix(1953);
      javaCharStream0.readChar();
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals((-1830), int0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.backup(10);
      javaCharStream0.readChar();
      javaCharStream0.UpdateLineColumn('\u0000');
      assertEquals(4086, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$Ig@@3@J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2939, (-1));
      javaCharStream0.readChar();
      javaCharStream0.GetSuffix(2939);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$Ig@@3@J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2939, (-1));
      char[] charArray0 = new char[2];
      stringReader0.read(charArray0);
      javaCharStream0.readChar();
      javaCharStream0.GetSuffix(369);
      javaCharStream0.getColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.3810838649119437
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      char[] charArray0 = new char[1];
      charArray0[0] = '@';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2931), 94, 2616);
      javaCharStream0.readChar();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(2616);
      JavaCharStream.hexval('c');
      javaCharStream0.GetImage();
      int int0 = javaCharStream0.getColumn();
      assertEquals((-2931), javaCharStream0.getBeginLine());
      assertEquals(94, int0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 0);
      StringReader stringReader0 = new StringReader("wLu5PjHFLGI8*EGcj");
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 0, 0, 0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (-2847), 56, (-2847));
      javaCharStream0.nextCharBuf = null;
      javaCharStream0.backup(70);
      javaCharStream0.GetSuffix(70);
      assertEquals(4025, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringReader stringReader0 = new StringReader("~=5k!`6u");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1953, 2199);
      javaCharStream0.readChar();
      javaCharStream0.GetSuffix(2199);
      assertEquals(1953, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.3342185879961668
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 0);
      StringReader stringReader0 = new StringReader("wLu5PjHFLGI8*EGcj");
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 3167, 0, 3167);
      char[] charArray0 = javaCharStream0.GetSuffix(0);
      assertEquals((-1), javaCharStream0.bufpos);
      assertEquals(0, charArray0.length);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1691, (-6));
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.4904032277870636
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 1, 1);
      javaCharStream0.ReInit((Reader) null, (-3446), (-4299));
      javaCharStream0.backup((-4299));
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.3604548990578045
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, (-2650), (-2650), 81);
      javaCharStream0.ReInit((InputStream) mockFileInputStream0, 7, 6, 6);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      assertEquals((-1), javaCharStream0.bufpos);
      
      char[] charArray0 = javaCharStream0.GetSuffix(87);
      assertEquals(87, charArray0.length);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.9269954962744
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0);
      javaCharStream0.adjustBeginLineColumn((-2329), (-2329));
      javaCharStream0.GetImage();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/NS|zid?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("f+-spSh*n&fE@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.2814326612302802
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = 12;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 12);
      javaCharStream0.tokenBegin = 12;
      javaCharStream0.Done();
      char[] charArray0 = new char[4];
      charArray0[0] = '1';
      charArray0[3] = 'a';
      stringReader0.read(charArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('h');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$Ig@@3@J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2939, (-1));
      javaCharStream0.nextCharInd = 2939;
      javaCharStream0.Done();
      javaCharStream0.bufpos = (-1);
      StringReader stringReader1 = new StringReader("");
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, 92, 4096, (-536));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.3810838649119437
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StringReader stringReader0 = new StringReader("eG]T)<&!:j$rs2");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      JavaCharStream.hexval('e');
      int int0 = javaCharStream0.getLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      int int0 = JavaCharStream.hexval('1');
      assertEquals(1, int0);
      
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, 4096, 12, 4096);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.664754796649453
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      JavaCharStream.hexval('b');
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)1, 'b', 'b');
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, (int) 'b', (int) 'b');
      javaCharStream0.readChar();
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.UpdateLineColumn(' ');
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StringReader stringReader0 = new StringReader("eG]T)<&!:j$rs2");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      JavaCharStream.hexval('e');
      int int0 = javaCharStream0.getLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('a');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Bz)y(NX$x8I(C5W");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 13, 13);
      char char0 = javaCharStream0.ReadByte();
      assertEquals((-1), javaCharStream0.bufpos);
      assertEquals('B', char0);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1649, 3370, 3370);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 1);
      javaCharStream0.ReInit((Reader) stringReader0, 1, 1);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StringReader stringReader0 = new StringReader("eG]T)<&!:j$rs2");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1830), 540);
      javaCharStream0.ReInit((Reader) stringReader0, 540, (-1830), 540);
      assertEquals(0, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StringReader stringReader0 = new StringReader("eG]T)<&!:j$rs2");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1830), (-1830));
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, (-1830), (-1830), (-1830));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(1646);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 561, (-609));
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 150
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L+J8%hmOXyel(K5vx[[");
      int int0 = (-30);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 3167, 3167, (-30));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 151
  /*Coverage entropy=0.6024679790977038
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      int int0 = JavaCharStream.hexval('1');
      assertEquals(1, int0);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream(1);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1, 1, 1);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 153
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      int int0 = JavaCharStream.hexval('f');
      assertEquals(15, int0);
  }

  /**
  //Test case number: 154
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 155
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, (-558), (-558));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 156
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      int int0 = (-191);
      int int1 = (-1563);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, (-191), (-1563));
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }
}
