/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 11:26:25 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.OutputStream;
import java.io.PipedReader;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.util.List;
import java.util.Vector;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.apache.derby.impl.io.vfmem.DataStore;
import org.apache.derby.impl.io.vfmem.VirtualFile;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBNonUniqueIndex;
import org.databene.jdbacl.model.DBNotNullConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.jca.FBManagedConnectionFactory;
import org.h2.jdbcx.JdbcDataSource;
import org.junit.runner.RunWith;
import org.postgresql.ds.PGConnectionPoolDataSource;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.43763321312024
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-1616905636), "{!bZ~");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("{)jkYyR*S", defaultDBTable0, dBDataType0);
      DataStore dataStore0 = new DataStore("{)jkYyR*S");
      VirtualFile virtualFile0 = new VirtualFile("{!bZ~", dataStore0);
      VirtualFile virtualFile1 = new VirtualFile("G@", dataStore0);
      OutputStream outputStream0 = virtualFile1.getOutputStream(true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(outputStream0);
      virtualFile1.exists();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      DBNotNullConstraint dBNotNullConstraint0 = new DBNotNullConstraint(defaultDBTable0, "!fn wBtP\"<Lt27H", false, "{)jkYyR*S");
      defaultDBColumn0.setNotNullConstraint(dBNotNullConstraint0);
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      Boolean boolean0 = Boolean.FALSE;
      assertFalse(boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = SQLUtil.normalize("*/", true);
      assertEquals("*/", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.4662665178647387
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("WTi-Ua+ZfA%lq#vx");
      assertNull(boolean0);
      
      String string0 = SQLUtil.renderValue(stringBuilder0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType.getInstance(21, "call");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, 21, "call");
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      vector0.add((DBColumn) defaultDBColumn0);
      String string0 = SQLUtil.renderColumnNames((List<DBColumn>) vector0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(":}|", defaultDBTable0, 45, ":}|");
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      vector0.add((DBColumn) defaultDBColumn0);
      SQLUtil.renderColumnNames((List<DBColumn>) vector0);
      assertEquals("[:}| : :}|]", vector0.toString());
      
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals(":}| :}| NULL", string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType.getInstance(21, "call");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("call", defaultDBTable0, (-174134656), "call");
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      vector0.add((DBColumn) defaultDBColumn0);
      String string0 = SQLUtil.renderColumnNames((List<DBColumn>) vector0);
      assertEquals("call", string0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0033891361038862
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      SQLUtil.isDDL("create unique indexjlm7zeaqdr");
      SQLUtil.removeComments("s_z]/y&]\u00018");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "s_z]/y&]\u00018";
      stringArray0[1] = "create unique indexjlm7zeaqdr";
      stringArray0[2] = "/*";
      stringArray0[3] = "create unique indexjlm7zeaqdr";
      SQLUtil.innerJoin("N55", stringArray0, "fn ", "wH8{<,.`<UFK", stringArray0);
      // Undeclared exception!
      SQLUtil.isQuery("/*");
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.5669499167988556
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("random()");
      VersionNumber versionNumber0 = VersionNumber.valueOf("zr4EU#|;,gg}@wj9%");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("random()", "random()", versionNumber0);
      defaultDatabase0.getTable(", ", false);
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("random()", (DBTable) null, (DBDataType) null, integer0, integer1);
      // Undeclared exception!
      try { 
        SQLUtil.renderValue(defaultDBColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("create materialized viewderby.version.mai~nt", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      FileSystemHandling.shouldAllThrowIOExceptions();
      SQLUtil.mutatesDataOrStructure("call");
      String string0 = SQLUtil.renderValue(defaultDBTable0);
      assertNull(string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8438614379613667
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("updazeo.gDK'(pdn:");
      // Undeclared exception!
      SQLUtil.mutatesStructure("/*ldf");
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("updae.tgt'k'(9pdn:g");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: updae.tgt'k'(9pdn:g
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter sessiono||.");
      assertFalse(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("(*j0>%iH{%?!G;+*");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (*j0>%iH{%?!G;+*
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6358885264021619
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      String string0 = SQLUtil.normalize("create unique indexjlm7zeaqdr", true);
      assertEquals("create unique indexjlm7zeaqdr", string0);
      
      boolean boolean0 = SQLUtil.isQuery("s_z]/y&]\u00018");
      assertFalse(boolean0);
      
      String string1 = SQLUtil.normalize("/*", false);
      assertEquals("/*", string1);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBNonUniqueIndex dBNonUniqueIndex0 = new DBNonUniqueIndex("", false, defaultDBTable0, (String[]) null);
      defaultDBTable0.addIndex(dBNonUniqueIndex0);
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      columnDescriptorList0.add((Object) defaultDBTable0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.databene.jdbacl.model.DefaultDBTable cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0910596228402674
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(21, "call");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("call", defaultDBTable0, dBDataType0, integer0);
      Integer integer1 = RawTransaction.COMMIT;
      defaultDBColumn0.setFractionDigits(integer1);
      defaultDBColumn0.toString();
      SQLUtil.isProcedureCall("call : CALL(2,0)");
      Character character0 = new Character('n');
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers("call", (String) null, character0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "s_z]/y&]\u00018", false, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "s_z]/y&]\u00018");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("s_z]/y&]\u00018");
      assertEquals(1, objectArray0.length);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "//", true, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "//");
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      assertEquals("//", stringBuilder1.toString());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "s_z]/y&]\u00018", false, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "s_z]/y&]\u00018");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      assertEquals("s_z]/y&]\u00018", stringBuilder1.toString());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.3010386369482903
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, 5, "create table ");
      String string0 = SQLUtil.substituteMarkers("", "", defaultDBColumn0);
      assertEquals(" : CREATE TABLE ", string0);
      
      boolean boolean0 = SQLUtil.isDML("create table");
      assertFalse(boolean0);
      
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-2926), "\"Y6sGk#qH");
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("", defaultDBTable0, dBDataType0);
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn1;
      String string1 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("", string1);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.8662943611198906
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "truncateleft join null as null on !_i~w1tqr.null = null.null and !_i~w1tqr.null = null.null and !_i~w1tqr.null = null.null and !_i~w1tqr.null = null.null", true, stringArray0);
      CompositeDBObject<DBNotNullConstraint> compositeDBObject0 = (CompositeDBObject<DBNotNullConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("DU&'", compositeDBObject0);
      tableContainer0.isIdentical(defaultDBTable0);
      tableContainer0.getSchema();
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      SQLUtil.isQuery("o@UfG.G?[e3:jV?@b*g");
      SQLUtil.normalize("SELECT * FROM null WHERE null = null", true);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      File file0 = MockFile.createTempFile("DU&'", "a4 pA%JlfI");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      assertNull(defaultDBTable0.getDoc());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = "table ";
      SQLUtil.removeComments("%!A2(dd*uD_");
      String string1 = "Hb_[]963:9/*|C5,Kh";
      // Undeclared exception!
      SQLUtil.isDML("Hb_[]963:9/*|C5,Kh");
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint((String) null, false, (String) null, "2");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("execute");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "2{u2^Q6}<WRt%";
      stringArray0[1] = "execute";
      stringArray0[2] = "execute";
      stringArray0[3] = "execute";
      stringArray0[4] = "execute";
      stringArray0[5] = "._&NPD,$3";
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("execute", stringArray0, "execute", "._&NPD,$3", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("create table");
      String[] stringArray0 = new String[1];
      String[] stringArray1 = new String[8];
      stringArray1[0] = "YK^$XA";
      stringArray1[1] = "updatederby.access.conglomerate.type";
      String string0 = SQLUtil.innerJoin("updatederby.access.conglomerate.type", stringArray0, "YK^$XA", "updatederby.access.conglomerate.type", stringArray1);
      assertEquals("YK^$XA as updatederby.access.conglomerate.type on updatederby.access.conglomerate.type.null = updatederby.access.conglomerate.type.YK^$XA", string0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      SQLUtil.isDDL("breate tabre");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      String[] stringArray1 = new String[3];
      stringArray1[0] = "l!q;nZ+lq";
      stringArray1[1] = "l!q;nZ+lq";
      stringArray1[2] = null;
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin((String) null, stringArray0, "l!q;nZ+lq", (String) null, stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      String string0 = SQLUtil.normalize(".tgt'FK'(9pdN:g", true);
      assertEquals(".tgt 'FK' (9pdN : g", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.4359838465843624
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("alter tabl^ta");
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.5407108604577937
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.mutatesDataOrStructure("/C");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("/C", (DBTable) null, 3430, "/C");
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("/C", stringBuilder0.toString());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-1616905636), "{!bZ~");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("{)jkYyR*S", defaultDBTable0, dBDataType0);
      DataStore dataStore0 = new DataStore("{)jkYyR*S");
      VirtualFile virtualFile0 = new VirtualFile("{!bZ~", dataStore0);
      VirtualFile virtualFile1 = new VirtualFile("G@", dataStore0);
      OutputStream outputStream0 = virtualFile1.getOutputStream(true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(outputStream0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      Boolean boolean0 = Boolean.FALSE;
      assertFalse(boolean0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.8438614379613667
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("alter tabl^ta");
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuffer stringBuffer0 = new StringBuffer();
      stringBuilder0.append((CharSequence) stringBuffer0);
      SQLUtil.addRequiredCondition("create table", stringBuilder0);
      assertEquals("create table", stringBuilder0.toString());
      
      Character character0 = new Character('K');
      String string0 = SQLUtil.renderValue(character0);
      assertEquals("'K'", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Character character0 = Character.valueOf('K');
      String string0 = SQLUtil.substituteMarkers("updaze.gtK'(pdn:", "updaze.gtK'(pdn:", character0);
      assertEquals("'K'", string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize(".tgt$'FK'(9pdN:g");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: .tgt$'FK'(9pdN:g
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("random()");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("alter materialized viewselect * from null where null = null and null = null and null = null and null = null and null = null and null = null and null = null and null = null and null = null");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.6293518436122202
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      String[] stringArray0 = new String[6];
      String string0 = "XSLAF.D";
      stringArray0[1] = "XSLAF.D";
      stringArray0[3] = "`W`N";
      stringArray0[4] = "`W`N";
      stringArray0[5] = "alter tabletable %)vq";
      String string1 = "?C~&}Z=sYS<";
      SQLUtil.normalize("?C~&}Z=sYS<", true);
      SQLUtil.normalize("-- [", false);
      SQLUtil.isQuery("+ S(}Qg");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      DBUniqueIndex dBUniqueIndex0 = null;
      try {
        dBUniqueIndex0 = new DBUniqueIndex("`W`N", true, (DBUniqueConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBUniqueIndex", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = "<\\$u,E!_i2'?r B?";
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(21, "call");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("call", defaultDBTable0, dBDataType0, integer0);
      String string0 = defaultDBColumn0.toString();
      assertEquals("call : CALL(2)", string0);
      
      boolean boolean0 = SQLUtil.isProcedureCall("call : CALL(2)");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.659334098393565
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      String[] stringArray0 = new String[11];
      SQLUtil.renderColumnListWithTableName((String) null, stringArray0);
      SQLUtil.parseColumnTypeAndSize("insert");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("insert");
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.7754337976947765
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("callse");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("exec");
      assertNull(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.8624848373103666
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      String string0 = SQLUtil.typeAndName(defaultDBTable1);
      assertEquals("table null", string0);
      
      DBCatalog dBCatalog0 = new DBCatalog("table null");
      TableContainer tableContainer0 = new TableContainer(stringArray0[0], defaultDBTable1);
      tableContainer0.getSchema();
      dBCatalog0.isIdentical((DBObject) null);
      String string1 = SQLUtil.normalize("e5LwB.EmOdsRz#laN", false);
      assertEquals("e5LwB.EmOdsRz # laN", string1);
      
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "eh2Dt<_q#[c\"QUTLk]7", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string2 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT eh2Dt<_q#[c\"QUTLk]7 PRIMARY KEY ()", string2);
      
      String string3 = SQLUtil.leftJoin("f0NHbK`b*_Kev__A?P", stringArray0, " REFERENCES ", "e5LwB.EmOdsRz#laN", stringArray0);
      assertEquals("left join  REFERENCES  as e5LwB.EmOdsRz#laN on f0NHbK`b*_Kev__A?P.null = e5LwB.EmOdsRz#laN.null", string3);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.6061920506332319
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      SQLUtil.removeComments("k?c ?Dh*%");
      String string0 = SQLUtil.normalize("k?c ?Dh*%", true);
      assertEquals("k ? c ? Dh * %", string0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnListWithTableName((String) null, stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.0941693886928134
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "{aaYaM`z";
      stringArray0[1] = "{aaYaM`z";
      stringArray0[2] = "{aaYaM`z";
      stringArray0[3] = "{aaYaM`z";
      stringArray0[4] = "{aaYaM`z";
      DBNonUniqueIndex dBNonUniqueIndex0 = new DBNonUniqueIndex("{aaYaM`z", false, defaultDBTable0, stringArray0);
      defaultDBTable0.addIndex(dBNonUniqueIndex0);
      String[] stringArray1 = new String[1];
      SQLUtil.renderQuery(defaultDBTable0, stringArray1, stringArray1);
      SQLUtil.isQuery("select into");
      String string0 = SQLUtil.removeComments("vUD0=v#");
      assertEquals("vUD0=v#", string0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.199663191579221
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("SELECT 1 FROM (SELET ");
      assertFalse(boolean0);
      assertNotNull(boolean0);
      
      boolean boolean1 = SQLUtil.isQuery("SELECT 1 FROM (SELET ");
      assertTrue(boolean1);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select into");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      String string0 = SQLUtil.normalize("", false);
      assertEquals("", string0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      SQLUtil.removeComments("v\"~b++xj");
      SQLUtil.normalize("v\"~b++xj", true);
      String string0 = SQLUtil.normalize("v\"~b++xj", true);
      assertEquals("v \"~b++xj\"", string0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "SELECT * FROM ");
      SQLUtil.addOptionalCondition("SELECT * FROM ", stringBuilder0);
      assertEquals("SELECT * FROM  or SELECT * FROM ", stringBuilder0.toString());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("drop index", false, "drop index", "insertceiling");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("CONSTRAINT \"drop index\" ", string0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.322230210050763
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("truncate");
      assertTrue(boolean0);
      assertNotNull(boolean0);
      
      boolean boolean1 = SQLUtil.isDML("truncate");
      assertTrue(boolean1);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("updateArray");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      String string0 = SQLUtil.normalize("/;eC!", false);
      assertEquals("/ ; eC !", string0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.8624848373103666
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("random", defaultDBTable0, 1000000, "random");
      SQLUtil.renderColumn(defaultDBColumn0);
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("alter table");
      mockPrintWriter0.print(1000000);
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[1];
      stringArray1[0] = "callcalltable null";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("callcalltable null", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray1);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, mockPrintWriter0);
      assertEquals("foreign key constraint", dBForeignKeyConstraint0.getObjectType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.8438614379613667
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("updazeo.gtK'(pdn:");
      // Undeclared exception!
      SQLUtil.isProcedureCall("/*");
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("\n/* distinct */");
      assertNull(boolean0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      String string0 = SQLUtil.renderValue(" NOT");
      assertEquals("' NOT'", string0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      String string0 = SQLUtil.normalize("execrandom()", false);
      assertEquals("execrandom ()", string0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      String[] stringArray0 = new String[16];
      Object[] objectArray0 = new Object[1];
      Object object0 = new Object();
      objectArray0[0] = object0;
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      String string0 = SQLUtil.normalize("org.h2.jdbc.JdbcCallableStatement", true);
      assertEquals("org.h2.jdbc.JdbcCallableStatement", string0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[9];
      String string0 = SQLUtil.renderColumnListWithTableName((String) null, stringArray0);
      assertEquals("null.null, null.null, null.null, null.null, null.null, null.null, null.null, null.null, null.null", string0);
      
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("L';&Do/", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string1 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT L';&Do/ FOREIGN KEY (, , , , , , , , ) REFERENCES null(, , , , , , , , )", string1);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.5722964991944255
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      SQLUtil.typeAndName((DBObject) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint(" NULL", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      String string0 = dBForeignKeyConstraint0.toString();
      assertEquals("CONSTRAINT \" NULL\" FOREIGN KEY () REFERENCES null()", string0);
      
      String string1 = SQLUtil.constraintName(dBForeignKeyConstraint0);
      assertEquals("CONSTRAINT \" NULL\" ", string1);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      String string0 = SQLUtil.normalize("insert492o{b.w<l o-s!hx@", false);
      assertEquals("insert492o { b.w < l o - s ! hx @", string0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      String string0 = SQLUtil.normalize("<$u,e!_i2'?r b?", true);
      assertEquals("<  $ u, e ! _i2 '?r b?'", string0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.093308880176036
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-1616905636), "{!bZ~");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("{)jkYyR*S", defaultDBTable0, dBDataType0);
      DataStore dataStore0 = new DataStore("{)jkYyR*S");
      VirtualFile virtualFile0 = new VirtualFile("{!bZ~", dataStore0);
      VirtualFile virtualFile1 = new VirtualFile("G@", dataStore0);
      OutputStream outputStream0 = virtualFile1.getOutputStream(true);
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "G@", true, stringArray0);
      defaultDBTable0.addUniqueConstraint(dBPrimaryKeyConstraint0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(outputStream0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      Boolean boolean0 = Boolean.FALSE;
      assertFalse(boolean0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addRequiredCondition("create unique index", stringBuilder0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("create unique index");
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      assertNull(defaultDBTable0.getName());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      jdbcDataSource0.getLogWriter();
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, true, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.782221977728629
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      String string0 = SQLUtil.join("Uh|dL", "Uh|dL", stringArray0, "Uh|dL", "Uh|dL", stringArray0);
      assertEquals("Uh|dL join Uh|dL as Uh|dL on Uh|dL.null = Uh|dL.null and Uh|dL.null = Uh|dL.null", string0);
      
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("Uh|dL join Uh|dL as Uh|dL on Uh|dL.null = Uh|dL.null and Uh|dL.null = Uh|dL.null");
      assertNull(boolean0);
      
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "Uh|dL", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string1 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY (, )", string1);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      SQLUtil.typeAndName((DBObject) null);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, false, (String[]) null);
      String string0 = SQLUtil.renderValue(dBPrimaryKeyConstraint0);
      assertEquals("PRIMARY KEY ()", string0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      StringBuilder stringBuilder0 = new StringBuilder();
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, false, stringArray0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable((String) null);
      defaultDBTable1.setName((String) null);
      DefaultDBTable defaultDBTable2 = new DefaultDBTable();
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0);
      assertEquals("", stringBuilder0.toString());
      
      String string0 = SQLUtil.join("- ", "addMeta id=", stringArray0, "u-w5!/(G28h@EO-,->", "a7;Qi}ul/9Sm", stringArray0);
      assertEquals("-  join u-w5!/(G28h@EO-,-> as a7;Qi}ul/9Sm on ", string0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      String string0 = "truncateleft join null as null on !_i~w1tqr.null = null.null and !_i~w1tqr.null = null.null and !_i~w1tqr.null = null.null and !_i~w1tqr.null = null.null";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "truncateleft join null as null on !_i~w1tqr.null = null.null and !_i~w1tqr.null = null.null and !_i~w1tqr.null = null.null and !_i~w1tqr.null = null.null", true, stringArray0);
      defaultDBTable0.setName("truncateleft join null as null on !_i~w1tqr.null = null.null and !_i~w1tqr.null = null.null and !_i~w1tqr.null = null.null and !_i~w1tqr.null = null.null");
      String string1 = "addMeta id=";
      SQLUtil.isProcedureCall("addMeta id=");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.325342919442848
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("random()");
      assertNull(boolean0);
      
      TableContainer tableContainer0 = new TableContainer("random()");
      tableContainer0.getTable("random()");
      DBDataType dBDataType0 = DBDataType.getInstance((-89303774), "random()");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("random()", (DBTable) null, dBDataType0, integer0, integer0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("random() RANDOM()(3,3) NULL", string0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-2654), "c*{}1G'jPTW[lnW$Z");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("c*{}1G'jPTW[lnW$Z", defaultDBTable0, dBDataType0, integer0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "4XGV";
      stringArray0[2] = "c*{}1G'jPTW[lnW$Z";
      stringArray0[3] = stringArray0[1];
      stringArray0[4] = "inner";
      stringArray0[5] = "c*{}1G'jPTW[lnW$Z";
      stringArray0[6] = "inner";
      stringArray0[7] = "inner";
      String string0 = SQLUtil.join("inner", "4XGV", stringArray0, "c*{}1G'jPTW[lnW$Z", "c*{}1G'jPTW[lnW$Z", stringArray0);
      assertEquals("c*{}1G'jPTW[lnW$Z as c*{}1G'jPTW[lnW$Z on 4XGV.4XGV = c*{}1G'jPTW[lnW$Z.4XGV and 4XGV.null = c*{}1G'jPTW[lnW$Z.null and 4XGV.c*{}1G'jPTW[lnW$Z = c*{}1G'jPTW[lnW$Z.c*{}1G'jPTW[lnW$Z and 4XGV.null = c*{}1G'jPTW[lnW$Z.null and 4XGV.inner = c*{}1G'jPTW[lnW$Z.inner and 4XGV.c*{}1G'jPTW[lnW$Z = c*{}1G'jPTW[lnW$Z.c*{}1G'jPTW[lnW$Z and 4XGV.inner = c*{}1G'jPTW[lnW$Z.inner and 4XGV.inner = c*{}1G'jPTW[lnW$Z.inner", string0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "s_z]/y&]\u00018", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "s_z]/y&]\u00018");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      assertEquals("s_z]/y&]\u00018CONSTRAINT s_z]/y&]\u00018 ", stringBuilder0.toString());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("2", false, "2", "2");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBCheckConstraint0, nameSpec0);
      assertEquals("CONSTRAINT 2 ", stringBuilder0.toString());
      
      String string0 = SQLUtil.normalize("2", false);
      assertEquals("2", string0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) ".tgt$'FK'(9pfdN:g");
      SQLUtil.addRequiredCondition(".tgt$'FK'(9pfdN:g", stringBuilder0);
      assertEquals(".tgt$'FK'(9pfdN:g and .tgt$'FK'(9pfdN:g", stringBuilder0.toString());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.8294660148233555
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("hreate");
      assertNull(boolean0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("hreate");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "inner";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "inner", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("CONSTRAINT inner UNIQUE (inner)", string0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.1156634559514
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("2", true, "2", "2");
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBCheckConstraint0, nameSpec0);
      assertEquals("", stringBuilder0.toString());
      
      String string0 = SQLUtil.normalize("2", true);
      assertEquals("2", string0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("D", false, "D", "D");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CHECK D", string0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[17];
      NameSpec nameSpec0 = NameSpec.NEVER;
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "drop index", false, stringArray0);
      String string0 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE (, , , , , , , , , , , , , , , , )", string0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String string0 = SQLUtil.renderColumnNames((String[]) null);
      assertEquals("()", string0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("drop tablehreate tabre", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("EING");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("2", false, "2", "2");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("CONSTRAINT 2 ", string0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.535837785854851
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("updaze.gtK'(pdn:");
      assertNull(boolean0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "updaze.gtK'(pdn:";
      String[] stringArray1 = new String[3];
      stringArray1[0] = "create tablederby";
      stringArray1[1] = "create tablederby";
      stringArray1[2] = "create tablederby";
      String string0 = SQLUtil.leftJoin("updaze.gtK'(pdn:", stringArray0, "updaze.gtK'(pdn:", "create tablederby", stringArray1);
      assertEquals("left join updaze.gtK'(pdn: as create tablederby on updaze.gtK'(pdn:.updaze.gtK'(pdn: = create tablederby.create tablederby", string0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      SQLUtil.isDML("isc_info_sql_field ");
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("b6V{[?o^}[p.E`~", (String[]) null, "'TVBaU\"*NGg\"|F=_IR", "'TVBaU\"*NGg\"|F=_IR", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("/t2R$$)H&@7");
      String string0 = SQLUtil.typeAndName(dBCatalog0);
      assertEquals("catalog /t2R$$)H&@7", string0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.48000000000000004
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[10];
      String string0 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM null WHERE null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", string0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      String[] stringArray0 = new String[11];
      String string0 = "6I";
      String[] stringArray1 = new String[1];
      stringArray1[0] = "gk%&@5E0f'%\u0000-";
      // Undeclared exception!
      try { 
        SQLUtil.join("6I", "gk%&@5E0f'%\u0000-", stringArray0, "gk%&@5E0f'%\u0000-", "alter tablederby.version.maint", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.7653291326451686
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("D'T");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.2653188729187956
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable1, "", true, stringArray0);
      boolean boolean0 = SQLUtil.isProcedureCall("addMeta id=");
      assertFalse(boolean0);
      
      DefaultDBTable defaultDBTable2 = new DefaultDBTable();
      String string0 = SQLUtil.renderColumnListWithTableName("", stringArray0);
      assertEquals(".null", string0);
      
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("addMeta id=", defaultDBTable1, 436, "");
      String string1 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("", string1);
      
      String string2 = SQLUtil.removeComments("");
      assertFalse(string2.equals((Object)string0));
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      String[] stringArray0 = new String[11];
      // Undeclared exception!
      try { 
        SQLUtil.join("Uh|dL", "Uh|dL", stringArray0, (String) null, "Uh|dL", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("create unique index");
      assertFalse(boolean0);
      
      String string0 = SQLUtil.normalize("create unique index", false);
      assertEquals("create unique index", string0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(21, "");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, dBDataType0);
      DBColumn[] dBColumnArray0 = new DBColumn[11];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(37, "c%ll");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("c%ll", defaultDBTable0, dBDataType0);
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("c%ll", string0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "4|<8hVO]?kj&R";
      stringArray0[1] = "4|<8hVO]?kj&R";
      stringArray0[2] = "4|<8hVO]?kj&R";
      stringArray0[4] = "4|<8hVO]?kj&R";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("4|<8hVO]?kj&R", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource0.getLogWriter();
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.slashSlashComments(true);
      SQLUtil.renderNumber(streamTokenizer0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      fBManagedConnectionFactory0.getLogWriter();
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey((DBForeignKeyConstraint) null, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      String[] stringArray0 = new String[16];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize("create materialized view");
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("Z%`0t7I\\6IT\"s3jU");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      SQLUtil.substituteMarkers("", "CEILING", "");
      SQLUtil.isProcedureCall("CEILING");
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("");
      assertEquals(1, objectArray0.length);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers("2", "05wxX%sEq{=r(!", "05wxX%sEq{=r(!");
      assertEquals("2", string0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.437465328065844
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("derby.version.mai~nt");
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("derby.version.mai~nt", (String[]) null, "derby.version.mai~nt", "alter table", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getUniqueConstraint((String[]) null);
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("CEILING", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("random", defaultDBTable0, 1000000, "random");
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("random RANDOM NULL", string0);
      
      SQLUtil.parseColumnTypeAndSize("random");
      String string1 = SQLUtil.ownerDotComponent(defaultDBColumn0);
      assertEquals("null.random", string1);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.ownerDotComponent(defaultDBTable0);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition(" on ", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.6714599763614508
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      String[] stringArray0 = new String[4];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null AND null = null AND null = null AND null = null", string0);
      
      String string1 = SQLUtil.innerJoin("null = null AND null = null AND null = null AND null = null", stringArray0, "mMlDa1z", "null = null AND null = null AND null = null AND null = null", stringArray0);
      assertEquals("mMlDa1z as null = null AND null = null AND null = null AND null = null on null = null AND null = null AND null = null AND null = null.null = null = null AND null = null AND null = null AND null = null.null and null = null AND null = null AND null = null AND null = null.null = null = null AND null = null AND null = null AND null = null.null and null = null AND null = null AND null = null AND null = null.null = null = null AND null = null AND null = null AND null = null.null and null = null AND null = null AND null = null AND null = null.null = null = null AND null = null AND null = null AND null = null.null", string1);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      String[] stringArray0 = new String[15];
      String string0 = SQLUtil.join("Uh|dL", "Uh|dL", stringArray0, "", "", stringArray0);
      assertEquals("Uh|dL join  as  on Uh|dL.null = .null and Uh|dL.null = .null and Uh|dL.null = .null and Uh|dL.null = .null and Uh|dL.null = .null and Uh|dL.null = .null and Uh|dL.null = .null and Uh|dL.null = .null and Uh|dL.null = .null and Uh|dL.null = .null and Uh|dL.null = .null and Uh|dL.null = .null and Uh|dL.null = .null and Uh|dL.null = .null and Uh|dL.null = .null", string0);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("u[", (String[]) null, "u[", "C:", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        SQLUtil.join((String) null, (String) null, (String[]) null, (String) null, (String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("@xe_J0cJ<^cwQ", stringBuilder0);
      assertEquals("@xe_J0cJ<^cwQ", stringBuilder0.toString());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-2654), "c*{}1G'jPTW[lnW$Z");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("c*{}1G'jPTW[lnW$Z", defaultDBTable0, dBDataType0, integer0);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("C*{}1G'JPTW[LNW$Z(3)", string0);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=0.4827586206896552
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("CEILING");
      assertNull(boolean0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("CEILING", defaultDBTable0, 168, "CEILING");
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("CEILING", string0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("STATEMENT_DURATION");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("altr materialize view");
      assertNull(boolean0);
  }

  /**
  //Test case number: 142
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select:d3}~va.7-x`@q/z");
      assertFalse(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter materialized view");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }
}
