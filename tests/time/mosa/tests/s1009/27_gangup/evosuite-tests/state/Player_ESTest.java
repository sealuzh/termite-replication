/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 21:34:55 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.480308765854967
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(2, "U2wNQ';)RC8", "", 0, 0);
      byte[] byteArray0 = player0.pack();
      player0.setZ((-3591.8308F));
      player0.getStrength();
      player0.type();
      player0.setDead((long) 2, true);
      player0.getY();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 5, (short)4919);
      byteArrayInputStream0.read();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      Player player1 = new Player(2, "Y+1*q\"FIO[23yF;bFp", 2);
      player1.setDead((long) (short)4919);
      dataInputStream0.readByte();
      player1.boss = (Party) player0;
      player0.setJoinOK(player1, true);
      player0.getName();
      Player player2 = new Player();
      player2.gangStrength();
      player1.isJoinOK(player2, false);
      player0.isJoinOK(player1, true);
      player1.unpack(byteArray0);
      player2.isConnected();
      Player player3 = new Player();
      player1.unpack(dataInputStream0);
      assertTrue(player1.isDead());
      
      float float0 = player2.getMoney();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(27041, (String) null, (String) null, (-1));
      player0.getIP();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.1737502027185687
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      player0.setZ(1789.6426F);
      player0.getStrength();
      player0.type();
      player0.type();
      player0.getY();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 5, 4015);
      byteArrayInputStream0.read();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      player0.getName();
      Player player1 = new Player();
      player1.next = (Party) player0;
      player0.isDead();
      player1.gangStrength();
      player1.isJoinOK(player0, false);
      player0.isConnected();
      player0.unpack(dataInputStream0);
      player0.gangStrength();
      float float0 = player0.getZ();
      assertEquals(1789.6426F, float0, 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.380151596023726
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(0, "", "U2wNQ';)RC8", 2);
      byte[] byteArray0 = player0.pack();
      player0.setZ((-3591.8308F));
      player0.getStrength();
      player0.type();
      player0.type();
      player0.setDead((long) 2, false);
      player0.getY();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 5, (short)4919);
      byteArrayInputStream0.read();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.setConnected(false);
      player0.unpack(dataInputStream0);
      Player player1 = new Player(2, "Y+1*q\"FIO[23yF;bFp", 2);
      player1.setDead((long) (short)4919);
      player1.boss = (Party) player0;
      player0.setJoinOK(player1, false);
      player0.getName();
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      player0.gangStrength();
      player0.isJoinOK(player1, true);
      player1.isJoinOK(player0, true);
      player0.isConnected();
      Player player2 = new Player();
      player2.add(player1);
      boolean boolean0 = player2.unpack(dataInputStream0);
      assertTrue(player0.isDead());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.0248847886694654
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      String string0 = "\\]l cwsq;O[y";
      Player player0 = new Player((-4), "]l cwsq;O[y", (-4));
      player0.setMoney((-4));
      player0.pack();
      player0.pack();
      player0.reset(true);
      player0.id = (-4);
      player0.setDead((long) (-4));
      player0.gangStrength();
      player0.getTimeOfDeath();
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = true;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      player0.setY(499.8F);
      player0.getMoney();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      player0.getMoney();
      player0.getIP();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        dataOutputStream0.flush();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(280);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(6512, "KXx_;j\"MqBIf", 6512);
      player0.setY(6512);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)64;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)117;
      byteArray0[5] = (byte) (-11);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player0.getMoney();
      player0.setDead((long) 6512, true);
      player0.getStrength();
      player0.getStrength();
      float float0 = player0.getY();
      assertEquals(6512L, player0.getTimeOfDeath());
      assertEquals(6512.0F, float0, 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(2561, "S", "Ps=@uGLL7^R;@d7j", (-2466));
      player0.setMoney(2561);
      player0.getMoney();
      player0.type();
      int int0 = player0.gangStrength();
      assertEquals(2561.0F, player0.getMoney(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.8493821196946767
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Player");
      Player player0 = new Player((-1341), "", "", 1, 1);
      player0.setX((-1341));
      player0.gangStrength();
      player0.getX();
      player0.reset(false);
      player0.getX();
      player0.pack();
      long long0 = player0.getTimeOfDeath();
      assertEquals((-1341.0F), player0.getX(), 0.01F);
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((-19039), "03An}", 512);
      player0.isJoinOK(player1, false);
      player0.isConnected();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte) (-76);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-19039), 10);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player1.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      player0.setJoinOK(player1, false);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertTrue(player1.isConnected());
      assertEquals(0, player1.getPictureId());
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals("Player4919", player1.getName());
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(3, (String) null, 3);
      player0.setJoinOK(player0, false);
      player0.toString();
      int int0 = player0.getStrength();
      assertEquals(3, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, int0);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(3, (String) null, 3);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(0, player1.getPictureId());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(player1.isConnected());
      assertFalse(player1.isDead());
      assertEquals(1, player1.getStrength());
      assertTrue(boolean0);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals("Player4919", player1.getName());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = null;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.7518685126965625
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player((-2811), "", "", (-2407), (-2811));
      player0.reset(false);
      int int0 = player0.type();
      assertEquals(5, int0);
      
      int int1 = player0.getPictureId();
      assertEquals((-2407), int1);
      
      int int2 = player0.getStrength();
      assertEquals((-2811), int2);
      
      player0.reset(true);
      Player player1 = new Player((short)4919);
      player0.setJoinOK(player1, true);
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals(0, player1.getPictureId());
      assertEquals("Player4919", player1.toString());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player1.getStrength());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(3754, "", "", (-28882), (-28882));
      player0.toString();
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals((-28882), player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-28882), player0.getStrength());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ(1.0F);
      player0.getMoney();
      player0.getSubparty();
      player0.setDead(0L, false);
      player0.setX(0.0F);
      player0.toString();
      player0.getX();
      player0.getPictureId();
      player0.setDead((long) 0, true);
      player0.getIP();
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(3006, "&?# u", (-936));
      player0.setY((-936));
      player0.setMoney(1125.4623F);
      Player player1 = new Player((-936), "", "&?# u", 3);
      player1.getPictureId();
      player0.getIP();
      player0.getIP();
      Player player2 = new Player((-1), "&?# u", 3);
      boolean boolean0 = player0.isJoinOK(player2, true);
      assertEquals((-936.0F), player0.getY(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.102810064207038
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(3006, "&?# u", "&?# u", 3006, (-936));
      player0.setY((-936));
      player0.setDead(0L, false);
      player0.getY();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-82);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 5, (byte) (-82));
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Player player1 = new Player((short)4919);
      player1.unpack(dataInputStream0);
      Player player2 = new Player((short)4919, "&?# u", (short)4919);
      player2.setJoinOK(player1, true);
      player0.getName();
      player1.getSubparty();
      player1.setDead((long) (short)4919);
      player1.isDead();
      player1.toString();
      int int0 = player0.gangStrength();
      assertEquals((-936.0F), player0.getY(), 0.01F);
      assertEquals((-936), int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player();
      player0.toString();
      player0.isBoss();
      String string0 = player0.toString();
      assertEquals("Player-1", string0);
      
      Player player1 = new Player((short)4919, "Player-1", "gui.ModuleBrowserDialog$ModuleFilter", (short)4919, (short)4919);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertFalse(boolean0);
      
      int int0 = player1.getStrength();
      assertEquals("Player-1", player1.getIP());
      assertEquals(4919, player1.getPictureId());
      assertEquals(4919, int0);
      
      System.setCurrentTimeMillis((short)4919);
      int int1 = player0.getStrength();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, int1);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      System.setCurrentTimeMillis((short)4919);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(577, "", "", (-533), (-2440));
      int int0 = player0.gangStrength();
      assertEquals((-2440), int0);
      
      float float0 = player0.getMoney();
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
      assertEquals((-533), player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player();
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      boolean boolean0 = player0.isConnected();
      assertTrue(boolean0);
      
      float float0 = player0.getZ();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.getName());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.850863601176158
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setY(0);
      int int0 = 1;
      Player player1 = new Player(1, (String) null, (String) null, (short)4919, 0);
      player1.gangStrength();
      player1.setX(0);
      player1.head = (Party) player0;
      boolean boolean0 = false;
      player1.setJoinOK(player0, false);
      player0.remove(player1);
      player0.setY(0);
      player0.getIP();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player((-525), (String) null, (String) null, 4919, 4919);
      int int0 = player0.gangStrength();
      assertEquals(4919, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(4919, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(0, "SOyKxn}?(>`%r", "SOyKxn}?(>`%r", 0, 0);
      player0.pack();
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, player0.getStrength());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.6454371383635378
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player();
      player0.getName();
      Player player1 = new Player();
      boolean boolean0 = player1.isDead();
      String string0 = player0.toString();
      assertEquals("Player-1", string0);
      
      int int0 = player0.gangStrength();
      Player player2 = new Player((short)4919);
      player0.isConnected();
      boolean boolean1 = player0.isJoinOK(player1, true);
      assertFalse(boolean1);
      
      boolean boolean2 = player0.isConnected();
      assertFalse(boolean2 == boolean0);
      
      int int1 = player2.getStrength();
      assertEquals(0, player2.getPictureId());
      assertEquals("0.0.0.0", player2.getIP());
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(1, int1);
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertTrue(int1 == int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream((short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      
      player0.pack();
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.8542306045431616
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(548);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      Player player0 = new Player(548);
      player0.unpack(dataInputStream0);
      assertEquals(0L, player0.getTimeOfDeath());
      
      Player player1 = new Player((short)4919, "", (short)4919);
      Player player2 = new Player(548, "Player.unpack(): *** WARNING *** data is not of proper type!", "", 4143);
      player1.setJoinOK(player2, false);
      player2.getName();
      player1.getSubparty();
      player0.setDead(1L);
      player0.toString();
      player0.isDead();
      player0.toString();
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.855868606181163
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "", (short)4919);
      player1.setDead((long) (short)4919);
      player1.setJoinOK(player0, true);
      player1.getName();
      Player player2 = new Player();
      player1.gangStrength();
      assertEquals(4919L, player1.getTimeOfDeath());
      
      player2.isJoinOK(player0, true);
      player0.isJoinOK(player2, true);
      player2.isConnected();
      Player player3 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player0.unpack(dataInputStream0);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(4919, (String) null, (String) null, 4919);
      Player player1 = new Player();
      assertEquals(0, player1.getPictureId());
      assertEquals("Player-1", player1.getName());
      
      player0.getName();
      assertEquals(4919, player0.getPictureId());
      
      int int0 = Packable.ACTION;
      Player player2 = new Player((short)4919, "#hpdG", 2);
      assertEquals(2, player2.getPictureId());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(0L, player2.getTimeOfDeath());
      assertTrue(player2.isConnected());
      assertEquals(1, player2.getStrength());
      assertFalse(player2.isDead());
      assertEquals("0.0.0.0", player2.getIP());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = true;
      player0.setJoinOK(player0, true);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(23, "", ".*[.]class$", 23, 23);
      String string0 = player0.getIP();
      assertFalse(player0.isDead());
      assertEquals(23, player0.getStrength());
      assertEquals("", string0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(23, player0.getPictureId());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.138526235860879
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party(1348);
      player0.boss = party0;
      player0.setJoinOK(player0, true);
      player0.isJoinOK(player0, true);
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.6311316878233564
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      String string0 = player1.getName();
      assertEquals("Player-1", string0);
      
      Player player2 = new Player();
      player0.add(player2);
      int int0 = player2.gangStrength();
      assertEquals(2, int0);
      
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertTrue(boolean0);
      
      player0.pack();
      Player player3 = new Player((short)4919);
      player0.isJoinOK(player3, true);
      player0.isConnected();
      Player player4 = new Player(1);
      player4.pack();
      assertEquals(10.0F, player4.getX(), 0.01F);
      assertEquals(0L, player4.getTimeOfDeath());
      assertEquals(0.0F, player4.getY(), 0.01F);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      player0.pack();
      assertFalse(player0.isConnected());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ((-35.21427F));
      Player player1 = new Player((short)4919, "", "", (short)4919, (short)4919);
      player0.next = (Party) player1;
      player0.setMoney((short)4919);
      player1.id = (-2740);
      player0.getZ();
      player1.getTimeOfDeath();
      player1.getX();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)56;
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals((-35.21427F), player0.getZ(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player();
      player0.setMoney(1593.0F);
      player0.pack();
      assertEquals(1593.0F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.getName());
      
      Player player1 = new Player(261, (String) null, (String) null, 261, (short)4919);
      assertTrue(player1.isConnected());
      assertEquals(261, player1.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(4919, player1.getStrength());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      MockFile mockFile0 = new MockFile("NE-^%CCr?ERyXF");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockFileOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(objectOutputStream0);
      player0.pack(dataOutputStream0);
      String string0 = player0.getIP();
      assertEquals("0.0.0.0", string0);
      
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("Player-1", player0.toString());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player(2794, " ", "module.ModuleBrowserDialog$ModuleFilter", 0, 2794);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(" ", player0.getIP());
      assertEquals(2794, player0.getStrength());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      player0.pack();
      player0.pack();
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      player0.setJoinOK(player1, true);
      player0.pack();
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(false);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.toString());
      assertEquals(0L, player0.getTimeOfDeath());
      
      Player player1 = new Player((short)4919, "]Eg},6(S", (short)4919);
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(4919, player1.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player();
      String string0 = player0.getIP();
      assertEquals("0.0.0.0", string0);
      
      float float0 = player0.getZ();
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, float0, 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.getName());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead(2570L, false);
      player0.pack();
      assertEquals(2570L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player(0, "state.Player$JoinInfo", 4065);
      Player player1 = new Player();
      player1.setY(0);
      player0.setMoney(0.0F);
      int int0 = player1.getPictureId();
      assertEquals(0, int0);
      
      int int1 = player1.getStrength();
      assertEquals(1, int1);
      
      player1.reset(false);
      assertFalse(player1.isDead());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      
      Player player2 = new Player((short)4919);
      player2.setJoinOK(player0, false);
      assertEquals(4065, player0.getPictureId());
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals("Player4919", player2.getName());
      assertEquals("0.0.0.0", player2.getIP());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertTrue(player2.isConnected());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player();
      player0.gangStrength();
      player0.getStrength();
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(1);
      assertEquals(1.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      String string0 = player0.getIP();
      assertEquals("0.0.0.0", string0);
      
      player0.pack();
      float float0 = player0.getX();
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(10.0F, float0, 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-1", player0.getName());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player((-2811), "", "", (-2407), (-2811));
      int int0 = player0.type();
      assertEquals(5, int0);
      
      int int1 = player0.getPictureId();
      assertEquals((-2407), int1);
      
      player0.id = (-2407);
      player0.getIP();
      assertEquals((-2811), player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      long long0 = player0.getTimeOfDeath();
      assertEquals(1392409281320L, long0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(true);
      player0.pack();
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
  }
}
