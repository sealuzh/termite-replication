/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 19:29:33 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.218839396646019
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2));
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2), "H9NUm#9.qCgpreD1", "H9NUm#9.qCgpreD1", "H9NUm#9.qCgpreD1", "H9NUm#9.qCgpreD1");
      fieldWriter0.getSize();
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-8));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classWriter0.version = 3724;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-8), "YQ[Q5CYFodkCvy", "YQ[Q5CYFodkCvy", "YQ[Q5CYFodkCvy", "YQ[Q5CYFodkCvy");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.343193896232072
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-21));
      classWriter0.index = (-21);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-19), "wTm8A7Kx?;-I8N2|}_", "wTm8A7Kx?;-I8N2|}_", "wTm8A7Kx?;-I8N2|}_", "wTm8A7Kx?;-I8N2|}_");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0991140089729452
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(34);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "wTm8A7Kx?;-I8N2|}_", "wTm8A7Kx?;-I8N2|}_", "wTm8A7Kx?;-I8N2|}_", (Object) null);
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-8));
      classWriter0.version = (-8);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-8), "Signature", "Signature", "Signature", "Signature");
      fieldWriter0.getSize();
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("Signature", true);
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3451);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "void", "void", (String) null, "void");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0829081047004716
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "F(X$ J3_", "F(X$ J3_", (String) null, "F(X$ J3_");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "wTm8A7Kx?;-I8N2|}_", "wTm8A7Kx?;-I8N2|}_", "wTm8A7Kx?;-I8N2|}_", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(14);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "wTm8A7Kx?;-I8N2|}_", "wTm8A7Kx?;-I8N2|}_", "wTm8A7Kx?;-I8N2|}_", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-8));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "1o", "1o", "1o", "1o");
      ByteVector byteVector0 = classWriter0.pool;
      FieldWriter fieldWriter1 = fieldWriter0.next;
      fieldWriter0.next = null;
      byteVector0.length = (-8);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.8647337539567728
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-8));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-8), "lwM&L#66<wchUKE [b?", "lwM&L#66<wchUKE [b?", "lwM&L#66<wchUKE [b?", "lwM&L#66<wchUKE [b?");
      fieldWriter0.visitAnnotation("lwM&L#66<wchUKE [b?", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-8));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-8), "Signature", "Signature", "Signature", "Signature");
      fieldWriter0.visitAnnotation("Signature", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3451);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "void", "void", (String) null, "void");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1840);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "4t{x\"Q66iaDL-", "4t{x\"Q66iaDL-", "4t{x\"Q66iaDL-", "4t{x\"Q66iaDL-");
      Attribute attribute0 = new Attribute("fz\"h~{%w4)Y&N1G5C");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "{!", "{!", "{!", "{!");
      fieldWriter0.visitAnnotation("{!", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(14);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "wTm8A7Kx?;-I8N2|}_", "wTm8A7Kx?;-I8N2|}_", "wTm8A7Kx?;-I8N2|}_", (Object) null);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 2, "wTm8A7Kx?;-I8N2|}_", "wTm8A7Kx?;-I8N2|}_", "wTm8A7Kx?;-I8N2|}_", "wTm8A7Kx?;-I8N2|}_");
      int int0 = fieldWriter1.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-8));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", "", "");
      fieldWriter0.visitAnnotation("", true);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-8));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-8), "lwM&L#66<wchUKE [b?", "lwM&L#66<wchUKE [b?", "lwM&L#66<wchUKE [b?", "lwM&L#66<wchUKE [b?");
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "{!", "{!", "{!", "{!");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(697);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 718, "W%Zdc,OCb3/t4", "PZdRlct", "W%Zdc,OCb3/t4", "W%Zdc,OCb3/t4");
      fieldWriter0.visitEnd();
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1883);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "1o", "1o", "1o", "1o");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-8));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-8), "lwM&L#66<wchUKE [b?", "lwM&L#66<wchUKE [b?", "lwM&L#66<wchUKE [b?", "lwM&L#66<wchUKE [b?");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-8));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-8), "lM&L#&6<wqhUKE [?", "lM&L#&6<wqhUKE [?", "lM&L#&6<wqhUKE [?", "lM&L#&6<wqhUKE [?");
      Attribute attribute0 = new Attribute("lM&L#&6<wqhUKE [?");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 1024, "ConstantValue", "ConstantValue", "ConstantValue", "ConstantValue");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(34);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 34, "wheel.asm.Attribute", "wheel.asm.Attribute", "wheel.asm.Attribute", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }
}
