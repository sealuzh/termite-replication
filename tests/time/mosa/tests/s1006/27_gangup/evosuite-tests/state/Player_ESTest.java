/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 19:05:29 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.UnsupportedEncodingException;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.8827437576468555
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(514);
      Player player1 = new Player(5, "", "V", 514, 2778);
      player0.isJoinOK(player1, false);
      player1.setJoinOK(player0, false);
      player0.isJoinOK(player1, false);
      player0.getY();
      Player player2 = new Player(61, "", 4919);
      player2.setX((short)4919);
      player2.getY();
      System.setCurrentTimeMillis(1381L);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.24319204066033
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "", 4);
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      player0.isJoinOK(player1, false);
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      Player player2 = new Player((-3484), (String) null, "af(RJqK", 4);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player1.setConnected(false);
      player1.getPictureId();
      Player player3 = new Player();
      Player player4 = new Player(1, "", 197);
      player1.setJoinOK(player0, false);
      assertEquals(0, player0.getPictureId());
      assertEquals((-1), player0.getId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      Player player5 = new Player((short)4919);
      boolean boolean0 = player4.isJoinOK(player5, false);
      assertFalse(boolean0);
      assertEquals("Player4919", player5.toString());
      
      player4.pack();
      assertEquals(197, player4.getPictureId());
      assertEquals("0.0.0.0", player4.getIP());
      
      String string0 = player2.getIP();
      assertNull(string0);
      assertEquals(0L, player2.getTimeOfDeath());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.9417429777213613
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertFalse(player1.isDead());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-1", player1.toString());
      assertEquals(0, player1.getPictureId());
      assertFalse(boolean0);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(player1.isConnected());
      assertEquals(1, player1.getStrength());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(0.0F, player0.getZ(), 0.01F);
      
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)5;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player0.setZ(0.1F);
      player0.getZ();
      player0.getZ();
      player0.getIP();
      player0.getY();
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.9417429777213613
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0, player1.getPictureId());
      assertEquals("Player-1", player1.getName());
      assertTrue(boolean0);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(1, player1.getStrength());
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.753349994178044
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.head = (Party) player1;
      player1.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertFalse(boolean0);
      
      Player player2 = new Player(196, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", 5, 3828);
      player2.add(player0);
      assertEquals("Player-1", player0.getName());
      
      float float0 = player2.getY();
      assertEquals(0.0F, float0, 0.01F);
      
      int int0 = player2.gangStrength();
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(5, player2.getPictureId());
      assertEquals(0L, player2.getTimeOfDeath());
      assertTrue(player2.isConnected());
      assertEquals(3830, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.786456060735981
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(5, "state.Party", "state.Party", (-1), (-1));
      Player player1 = new Player(1376, "gui.ModuleBrowserDialog$ModuleFilter", ".*[.]class$", 246, (-225));
      player0.prev = (Party) player1;
      player1.getSubparty();
      player1.next = (Party) player0;
      player0.setDead(0L);
      player0.setDead((-3314L), true);
      player0.getTimeOfDeath();
      player1.pack();
      player0.getZ();
      MockFile mockFile0 = new MockFile("state.Party", "");
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(mockFile0, ".*[.]class$");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // .*[.]class$
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player((-2077), (String) null, (String) null, (-2077), (-2077));
      player0.setMoney((-2077));
      player0.toString();
      assertEquals((-2077.0F), player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player((-2065), (String) null, (String) null, (-2065), (-2065));
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
      
      int int0 = player0.getStrength();
      assertEquals((-2065), int0);
      
      Player player1 = new Player(2877, "", 4);
      Player player2 = new Player((short)4919, "", "", 1034);
      boolean boolean0 = player1.isJoinOK(player2, false);
      assertFalse(player2.isDead());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(1034, player2.getPictureId());
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals(1, player2.getStrength());
      assertTrue(player2.isConnected());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.048820325203473
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(94, "1ye%", (-4457));
      player0.setX((-4457));
      player0.getTimeOfDeath();
      player0.getStrength();
      player0.getTimeOfDeath();
      player0.setConnected(true);
      player0.pack();
      player0.toString();
      player0.isDead();
      player0.getY();
      player0.type();
      player0.getX();
      int int0 = player0.getStrength();
      assertEquals((-4457.0F), player0.getX(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-30647), ".*[.]class$", "s4/soc ", 4, (-30647));
      player0.setY((-30647));
      player0.getY();
      float float0 = player0.getY();
      assertEquals((-30647.0F), float0, 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(0, "R.qCYzM", 0);
      player0.getSubparty();
      Player player1 = new Player(3061, "R.qCYzM", "?", (-439), (-1628));
      player1.pack();
      player1.setMoney((-1475.7615F));
      player1.getMoney();
      player0.setMoney(10.0F);
      player1.isJoinOK(player0, false);
      System.setCurrentTimeMillis(3471L);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.022794924510636
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(2767, "state.Player$JoinInfo", "jw/6XbA9", 0);
      Player player1 = (Player)player0.gangBoss();
      player1.id = 0;
      player0.prev = (Party) player1;
      player0.getTimeOfDeath();
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0L);
      player0.setZ(0.0F);
      player0.gangStrength();
      player0.type();
      player1.setJoinOK(player0, true);
      player1.reset(true);
      player0.type();
      player0.getX();
      int int0 = player1.getStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.174317417693044
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(0);
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertFalse(boolean0);
      
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      Player player1 = new Player(0, " ", "N", (short)4919);
      int int1 = player1.getPictureId();
      assertEquals(4919, int1);
      
      Player player2 = new Player();
      Player player3 = new Player((short)4919, "N", 4);
      player3.setJoinOK(player0, false);
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player0", player0.toString());
      assertEquals(0, player0.getId());
      
      player2.getIP();
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals("Player-1", player2.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((-3219), "", "", (-617), (-3219));
      int int0 = player1.getPictureId();
      assertEquals((-617), int0);
      
      Player player2 = new Player(4, "h", 10);
      player2.setJoinOK(player1, false);
      assertEquals((-3219), player1.getStrength());
      
      Player player3 = new Player((-3219));
      boolean boolean0 = player3.isJoinOK(player2, false);
      assertTrue(player3.isConnected());
      assertEquals("0.0.0.0", player3.getIP());
      assertEquals("Player-3219", player3.toString());
      assertFalse(boolean0);
      assertEquals(0, player3.getPictureId());
      assertEquals(10.0F, player3.getX(), 0.01F);
      assertEquals(0.0F, player3.getY(), 0.01F);
      assertEquals(0L, player3.getTimeOfDeath());
      assertFalse(player3.isDead());
      assertEquals(1, player3.getStrength());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player((-838), "EZxV%gZ}^Pd", "", (-838), 1392);
      player0.reset(true);
      player0.reset(false);
      player0.gangBoss();
      int int0 = player0.getStrength();
      assertEquals(1392, int0);
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals("EZxV%gZ}^Pd", player0.getIP());
      assertEquals((-838), player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player1.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(1625, "", "", 1625, 1625);
      player0.getIP();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1625, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(1625, player0.getStrength());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.850863601176158
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(0, "state.Player$JoinInfo", "jw/6XbA9", 0, 2767);
      Player player1 = (Player)player0.gangBoss();
      player1.id = (int) (short)4919;
      player0.prev = (Party) player1;
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      
      player1.toString();
      player1.gangStrength();
      player0.toString();
      player0.getName();
      player1.setJoinOK(player0, false);
      int int0 = player1.gangStrength();
      int int1 = player1.getStrength();
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0, player1.getPictureId());
      assertEquals(2767, int1);
      assertTrue(int1 == int0);
      assertEquals("state.Player$JoinInfo", player1.getIP());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = null;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(29, byteArrayOutputStream0.size());
      assertEquals("\u00137\uFFFD\u0000\u0001\u0000\u0000A \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\bPlayer-1", byteArrayOutputStream0.toString());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((-3633), "q3\"|N3)yzH}", 132);
      player0.setZ((-3633));
      player0.setY(0.0F);
      player0.setY(1647.67F);
      player0.type();
      player0.getZ();
      System.setCurrentTimeMillis((-3633));
      System.setCurrentTimeMillis((-414L));
      Enumeration<PushbackInputStream> enumeration0 = (Enumeration<PushbackInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals((-3633.0F), player0.getZ(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(0);
      Player player1 = new Player(0, "state.Player$JoinInfo", (-103));
      byte[] byteArray0 = new byte[2];
      player0.boss = (Party) player1;
      player1.pack();
      byteArray0[0] = (byte)98;
      byteArray0[1] = (byte) (-10);
      player1.unpack(byteArray0);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertFalse(boolean0);
      assertEquals((-103), player1.getPictureId());
      
      player0.pack();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals("Player0", player0.toString());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0.0F);
      player0.pack();
      int int0 = player0.type();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(10);
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)2;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("Player10", player0.toString());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(0);
      Player player1 = new Player(0, "state.Player$JoinInfo", (-103));
      player0.boss = (Party) player1;
      player1.pack();
      player0.pack();
      player0.setMoney(1293.7557F);
      player0.getMoney();
      player0.setMoney((-384.84F));
      assertEquals((-384.84F), player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertFalse(boolean0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "state.Player$JoinInfo", "Xf<<E:", (short)4919, (short)4919);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals("Player-1", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertFalse(boolean0);
      assertEquals(0, player0.getPictureId());
      
      player1.toString();
      assertEquals(4919, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals(4919, player1.getPictureId());
      assertFalse(player1.isDead());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("state.Player$JoinInfo", player1.getIP());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.171659610384074
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(10, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", 0, 0);
      player0.gangStrength();
      player0.setConnected(false);
      player0.setY(1528.2786F);
      player0.getIP();
      player0.setDead((long) 0);
      player0.setMoney(0);
      player0.getPictureId();
      player0.getX();
      player0.getStrength();
      Player player1 = new Player(0, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (short)4919);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(1528.2786F, player0.getY(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player((-2077), (String) null, (String) null, (-2077), (-2077));
      player0.setMoney((-2077));
      int int0 = player0.gangStrength();
      assertEquals((-2077.0F), player0.getMoney(), 0.01F);
      assertEquals((-2077), int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.2265351295364386
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player((-1612), "EZxV%gZ}^Pd", (-1612));
      player0.setDead();
      player0.isDead();
      Player player1 = new Player((-838), "EZxV%gZ}^Pd", "EZxV%gZ}^Pd", (-838), 1382);
      player1.reset(false);
      player0.head = (Party) player1;
      player1.setDead((long) (-1612));
      player0.reset(true);
      player0.getMoney();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Player player2 = new Player((short)4919, "EZxV%gZ}^Pd", (-838));
      player1.boss = (Party) player2;
      player1.remove(player0);
      player2.getTimeOfDeath();
      player0.setX((-1910.3102F));
      player1.setZ((-1493.65F));
      player1.gangStrength();
      player1.type();
      player2.setDead(0L);
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player1.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(0);
      Party party0 = player0.gangBoss();
      player0.add(party0);
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      int int0 = player0.getStrength();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1, int0);
      assertEquals("Player0", player0.toString());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.getZ();
      player0.gangStrength();
      player1.getPictureId();
      player1.setDead((-387L), true);
      player1.getX();
      player0.pack();
      player0.remove(player1);
      player1.setDead((long) (short)4919);
      assertTrue(player1.isDead());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party();
      player0.add(party0);
      player0.setJoinOK(player0, false);
      boolean boolean0 = player0.isDead();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertFalse(boolean0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player();
      Party party0 = player0.prev;
      player0.next = null;
      Party party1 = new Party((short)4919);
      party1.head = null;
      player0.head = party1;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".c7");
      party1.head = null;
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.3630015417836807
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player(10, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", 0, 0);
      player0.gangStrength();
      player0.setConnected(false);
      player0.setY(1528.2786F);
      player0.getIP();
      player0.setDead((long) 0);
      player0.setMoney(561.7067F);
      player0.getPictureId();
      player0.getX();
      player0.getTimeOfDeath();
      Player player1 = new Player(0, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (short)4919, 0);
      player0.prev = (Party) player1;
      player0.getZ();
      Player player2 = new Player((-3901), "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "1Zucc:+", 10, 2805);
      player0.setJoinOK(player2, false);
      player0.setJoinOK(player1, true);
      Player player3 = new Player((short)4919);
      boolean boolean0 = player0.isConnected();
      assertEquals(561.7067F, player0.getMoney(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(1.0F);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-90);
      player0.unpack(byteArray0);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(838, (String) null, (String) null, 838);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.852140740384332
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(0, "", 2404);
      player0.getSubparty();
      Player player1 = new Player((short)4919);
      player0.boss = (Party) player1;
      player0.setMoney(0.2F);
      player0.getY();
      player0.toString();
      player0.gangStrength();
      player0.toString();
      player0.getName();
      player1.setJoinOK(player0, false);
      assertEquals(0.2F, player0.getMoney(), 0.01F);
      
      player1.gangStrength();
      player1.setConnected(true);
      int int0 = player1.getStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(34, "", 34);
      player0.toString();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(34, player0.getPictureId());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(2896, (String) null, 0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player0.id = (-1090);
      player0.unpack(dataInputStream0);
      player0.setMoney(0);
      boolean boolean0 = player0.isDead();
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      boolean boolean1 = player0.unpack(dataInputStream1);
      assertTrue(boolean1 == boolean0);
      
      player0.getName();
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      player0.boss = null;
      player0.pack();
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      player0.getTimeOfDeath();
      float float0 = player0.getZ();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ(0.0F);
      player0.pack();
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getZ(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player();
      int int0 = player0.getStrength();
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-1", player0.getName());
      assertEquals(1, int0);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player();
      long long0 = player0.getTimeOfDeath();
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0L, long0);
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.getName());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = (Player)player0.gangBoss();
      boolean boolean0 = player1.isConnected();
      assertEquals(1, player1.getStrength());
      assertTrue(boolean0);
      assertEquals("Player-1", player1.toString());
      assertEquals(0, player1.getPictureId());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player();
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.reset(true);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      player0.pack();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player((-2077), (String) null, (String) null, (-2077), (-2077));
      player0.getMoney();
      assertEquals((-2077), player0.getPictureId());
      assertEquals((-2077), player0.getStrength());
      
      Player player1 = new Player(246);
      player1.setMoney(0.0F);
      assertEquals(0, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertFalse(player1.isDead());
      assertEquals("Player246", player1.getName());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0.0F, player1.getMoney(), 0.01F);
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(false);
      player0.pack();
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-1", player0.getName());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(0.0F);
      player0.setDead();
      int int0 = player0.gangStrength();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney(0.0F);
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Player player0 = new Player();
      player0.setConnected(true);
      int int0 = player0.type();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(5, int0);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.toString());
      assertFalse(player0.isDead());
  }
}
