/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 12:31:37 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.196664918501384
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("{8!tkP_d}Gfx<i");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2336), 613, 95);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.line = 1;
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.bufpos = (-2336);
      char[] charArray0 = new char[3];
      stringReader0.skip((-3437L));
      charArray0[0] = 'c';
      charArray0[1] = '#';
      charArray0[2] = '?';
      javaCharStream0.nextCharBuf = charArray0;
      stringReader0.ready();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.567944147734173
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 17, 1);
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)1;
      byte[] byteArray1 = new byte[7];
      byteArray1[1] = (byte)1;
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[LTS+qK YTcAbT^+L9");
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.7222994413830599
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = JavaCharStream.hexval('d');
      assertEquals(13, int0);
      
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)66;
      byteArray0[2] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.GetImage();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      int int0 = JavaCharStream.hexval('B');
      assertEquals(11, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      int int0 = JavaCharStream.hexval('2');
      assertEquals(2, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.7903364014227225
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      StringReader stringReader1 = new StringReader("jq&KWiynber)L|GML");
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte)3;
      byteArray0[2] = (byte)1;
      byte[] byteArray1 = new byte[7];
      byteArray1[1] = (byte)1;
      byteArray1[4] = (byte)1;
      byteArray1[6] = (byte)3;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, (-674), (-1));
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      int int0 = JavaCharStream.hexval('E');
      assertEquals(14, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0115053753997263
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      byte[] byteArray0 = new byte[13];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)74;
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)8;
      byteArray0[5] = (byte)3;
      byteArray0[6] = (byte)3;
      byteArray0[7] = (byte)3;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream.hexval('A');
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)3, 2966, (byte)74);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6647967756059925
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int int0 = 10;
      javaCharStream0.backup(10);
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.445805476579477
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("G2!i/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1716), (-1716));
      javaCharStream0.line = (-1716);
      javaCharStream0.BeginToken();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.getColumn();
      javaCharStream0.ReInit((Reader) stringReader0, 86, (-1716), 86);
      javaCharStream0.bufsize = (-1483);
      stringReader0.skip(342L);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.8702928936830259
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte)3;
      byteArray0[2] = (byte)1;
      byte[] byteArray1 = new byte[7];
      byteArray1[1] = (byte)1;
      byteArray1[4] = (byte)1;
      byteArray1[6] = (byte)3;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      StringReader stringReader1 = new StringReader("jq&KWiynber)L|GML");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (byte)1, (-1));
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      int int0 = JavaCharStream.hexval('1');
      assertEquals(1, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      int int0 = JavaCharStream.hexval('9');
      assertEquals(9, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      int int0 = JavaCharStream.hexval('8');
      assertEquals(8, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 383);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 383, 383);
      assertEquals((-1), javaCharStream0.bufpos);
      
      int int0 = JavaCharStream.hexval('a');
      assertEquals(10, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.9395615067539149
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)74;
      byteArray0[3] = (byte)92;
      byteArray0[5] = (byte)3;
      byteArray0[6] = (byte)3;
      byteArray0[7] = (byte)3;
      byteArray0[8] = (byte)3;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1584), (byte)92);
      javaCharStream0.GetImage();
      javaCharStream0.backup((byte)3);
      javaCharStream0.GetImage();
      JavaCharStream.hexval('3');
      javaCharStream0.GetImage();
      javaCharStream0.getLine();
      assertEquals(4092, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      StringReader stringReader1 = new StringReader("jq&KWiynber)L|GML");
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte)3;
      byteArray0[2] = (byte)1;
      byte[] byteArray1 = new byte[7];
      byteArray1[1] = (byte)1;
      byteArray1[4] = (byte)1;
      byteArray1[6] = (byte)3;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 3249, 0);
      stringReader0.close();
      javaCharStream0.backup((-3525));
      assertEquals(3524, javaCharStream0.bufpos);
      
      int int0 = JavaCharStream.hexval('0');
      int int1 = javaCharStream1.getBeginColumn();
      assertTrue(int1 == int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.741975398544682
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader(".+v=:y");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2865, (-1584));
      javaCharStream0.backup((-1383));
      javaCharStream0.GetImage();
      JavaCharStream javaCharStream1 = new JavaCharStream(dataInputStream0, (-1584), 117, 1);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((-1383), 1);
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream1.UpdateLineColumn('.');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.8686985429648904
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 383);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 383, 383);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)91;
      pipedOutputStream0.flush();
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      JavaCharStream.hexval('4');
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.580093770149591
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("U>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2085, 2085, 2085);
      StringReader stringReader1 = new StringReader("*^");
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      StringReader stringReader2 = new StringReader("*^");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, (-1), (byte)1);
      javaCharStream0.backup(1);
      javaCharStream0.GetImage();
      JavaCharStream javaCharStream2 = new JavaCharStream(dataInputStream0, (-1141), (-1), (byte)1);
      javaCharStream1.BeginToken();
      assertEquals((-1), javaCharStream1.getBeginLine());
      
      int int0 = JavaCharStream.hexval('7');
      assertEquals(7, int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.5297406947194283
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      StringReader stringReader1 = new StringReader("jq&KWiynber)L|GML");
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte)3;
      byteArray0[2] = (byte)1;
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.2961408970315507
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-20);
      byteArray0[1] = (byte) (-7);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)50;
      byteArray0[4] = (byte) (-96);
      byteArray0[5] = (byte)15;
      byteArray0[6] = (byte) (-51);
      byteArray0[8] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)50);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1, (byte)46, (-1122));
      javaCharStream0.BeginToken();
      javaCharStream0.getLine();
      int int0 = javaCharStream0.getColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(46, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      char char0 = '`';
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.521452740110338
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 1);
      StringReader stringReader1 = new StringReader("jq&KWiynber)L|GML");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)3;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), 1);
      javaCharStream1.backup((-1));
      javaCharStream1.nextCharInd = (-855);
      javaCharStream0.GetImage();
      JavaCharStream javaCharStream2 = new JavaCharStream(dataInputStream0, (byte)8, 74, (byte)3);
      javaCharStream2.backup((-311));
      // Undeclared exception!
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -854
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.6908972399640176
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      JavaCharStream.hexval('3');
      StringReader stringReader0 = new StringReader("I^U,abx*o-(+");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 73, 85);
      javaCharStream0.BeginToken();
      stringReader0.markSupported();
      javaCharStream0.adjustBeginLineColumn(405, 8);
      javaCharStream0.AdjustBuffSize();
      assertEquals(8, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5656706343766116
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringReader stringReader0 = new StringReader("I,=k{J#|0J`;");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-452), 1);
      StringReader stringReader1 = new StringReader("I,=k{J#|0J`;");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte) (-77);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)8;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte) (-20);
      byteArray0[7] = (byte)1;
      byteArray0[8] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 4902, 519);
      javaCharStream1.backup((byte) (-20));
      javaCharStream1.GetImage();
      javaCharStream1.available = (-1497);
      JavaCharStream javaCharStream2 = new JavaCharStream(dataInputStream0, (-41), 19, 4);
      javaCharStream1.BeginToken();
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.3628433742803376
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)74;
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)8;
      byteArray0[5] = (byte)3;
      byteArray0[6] = (byte)3;
      byteArray0[7] = (byte)3;
      byteArray0[8] = (byte)3;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1584), (byte)92);
      javaCharStream0.backup((byte)3);
      javaCharStream0.GetImage();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 88, (byte)3, (-2676));
      javaCharStream0.BeginToken();
      javaCharStream1.GetImage();
      int int0 = javaCharStream0.getEndLine();
      assertEquals(4093, javaCharStream0.bufpos);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.5269305453414023
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1538), 1309, 1309);
      javaCharStream0.nextCharInd = 72;
      StringReader stringReader1 = new StringReader("");
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)74;
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)8;
      byteArray0[5] = (byte)3;
      byteArray0[6] = (byte)3;
      byteArray0[8] = (byte)3;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)8);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)8, 1);
      javaCharStream0.backup(87);
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      assertEquals(4009, javaCharStream0.bufpos);
      
      int int0 = JavaCharStream.hexval('5');
      assertEquals(5, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5748027648585858
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      StringReader stringReader1 = new StringReader("jq&KWiynber)L|GML");
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte)3;
      byteArray0[2] = (byte)1;
      byte[] byteArray1 = new byte[7];
      byteArray1[1] = (byte)1;
      byteArray1[4] = (byte)1;
      byteArray1[6] = (byte)3;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 3249, 0);
      stringReader0.close();
      javaCharStream1.backup(312);
      javaCharStream1.GetImage();
      JavaCharStream javaCharStream2 = new JavaCharStream(dataInputStream0, (byte)0, (byte)0, (byte)0);
      javaCharStream1.BeginToken();
      javaCharStream0.adjustBeginLineColumn((-1), 73);
      javaCharStream1.AdjustBuffSize();
      assertEquals(0, javaCharStream1.bufpos);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)74;
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)8;
      byteArray0[5] = (byte)3;
      byteArray0[6] = (byte)3;
      byteArray0[7] = (byte)3;
      byteArray0[8] = (byte)3;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byteArrayInputStream0.read(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1584), (byte)92);
      javaCharStream0.backup((byte)3);
      javaCharStream0.GetImage();
      javaCharStream0.bufsize = (int) (byte)3;
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 88, (byte)3, (-2676));
      char char0 = javaCharStream0.BeginToken();
      assertEquals(4093, javaCharStream0.bufpos);
      assertEquals('\u0000', char0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      StringReader stringReader1 = new StringReader("jq&KWiynber)L|GML");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 699, 1);
      byteArrayInputStream0.reset();
      javaCharStream0.backup(1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.adjustBeginLineColumn((byte)8, (-2910));
      assertEquals(8, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.7519464314225139
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 383);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 383, 383);
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.3199044298479494
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-1), (byte) (-1));
      javaCharStream0.backup((byte) (-1));
      javaCharStream0.GetImage();
      javaCharStream0.GetImage();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.604816366749657
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader("K^yEk%vL* :F@");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)92, (byte)92);
      javaCharStream0.backup((-3189));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.GetImage();
      JavaCharStream javaCharStream2 = new JavaCharStream(dataInputStream0, (-39), 2732, 2732);
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(false);
      assertEquals(92, javaCharStream0.getEndLine());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.8677758426013722
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader(" rl#I~A_%i28@;l_");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.read();
      javaCharStream0.BeginToken();
      javaCharStream0.getLine();
      javaCharStream0.ReadByte();
      javaCharStream0.UpdateLineColumn('l');
      char char0 = javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals('#', char0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      JavaCharStream.hexval('C');
      JavaCharStream.hexval('e');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1056, 14, 96);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)92;
      byteArray0[5] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      StringReader stringReader2 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 3737, (byte)92);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream0.tokenBegin = (-1015);
      javaCharStream1.backup((-3235));
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5531577432135644
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      stringReader0.read();
      stringReader0.read();
      StringReader stringReader1 = new StringReader("");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte)8;
      byteArray0[4] = (byte)92;
      byteArray0[5] = (byte)8;
      byteArray0[6] = (byte)92;
      byteArray0[7] = (byte)8;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2068), 459);
      javaCharStream0.backup((byte)8);
      javaCharStream0.UpdateLineColumn('\"');
      int int0 = javaCharStream0.getEndLine();
      assertEquals(4087, javaCharStream0.bufpos);
      assertEquals((-2068), int0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1241, 1241, (-738));
      javaCharStream0.backup(1241);
      javaCharStream0.adjustBeginLineColumn(1241, (-1));
      assertEquals(2854, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 77, 71, 92);
      StringReader stringReader1 = new StringReader(" column ");
      javaCharStream0.backup(865);
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.3342185879961668
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      stringReader0.read();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.readChar();
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 73, 73);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      mockFileInputStream0.markSupported();
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(246, (-1));
      assertEquals((-1), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1241, 1241, (-738));
      javaCharStream0.backup(1241);
      javaCharStream0.GetSuffix(859);
      assertEquals(2854, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.8688245196701632
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      stringReader0.skip(0L);
      stringReader0.skip((-1L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn(0, (-4129));
      stringReader0.mark(2544);
      StringReader stringReader1 = new StringReader("PfP _Z!PI;");
      javaCharStream0.ReInit((Reader) stringReader0, 289, 271, 271);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(4060);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1241, 1241, (-738));
      javaCharStream0.backup(1241);
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      assertEquals(2855, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "D$ag\"2qXMTPvT");
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, 97);
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.4312811742066356
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      StringReader stringReader1 = new StringReader("jq&KWiynber)L|GML");
      javaCharStream0.AdjustBuffSize();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-815), 0, 1);
      javaCharStream1.ReInit((Reader) stringReader1, 871, (-1), 1);
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream1.tokenBegin = (-2182);
      javaCharStream1.ReInit((Reader) stringReader1, (-815), 0, 1903);
      char char0 = javaCharStream1.readChar();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals('j', char0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      JavaCharStream.hexval('F');
      StringReader stringReader0 = new StringReader("$P rMI{uc`W.@&#;,P");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals('$', char0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Qcj(:7ul]K>Dp[!B-");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, 827, 827, (-352));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.265443679754371
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 100, 1);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ReadByte();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("NUt~b");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-106);
      byteArray0[2] = (byte)70;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-106);
      byteArray0[5] = (byte) (-106);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte) (-106);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-106), 923);
      PipedInputStream pipedInputStream0 = new PipedInputStream(83);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1241, 1241, (-738));
      javaCharStream0.backup(1241);
      javaCharStream0.GetImage();
      javaCharStream0.UpdateLineColumn('+');
      assertEquals(2854, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0287375017310743
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('i');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.2986471626957115
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      StringReader stringReader1 = new StringReader("jq&KWiynber)L|GML");
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte)3;
      javaCharStream0.prevCharIsLF = false;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 2738, (byte) (-31), (-1));
      javaCharStream1.BeginToken();
      javaCharStream0.getBeginLine();
      int int0 = javaCharStream1.getEndColumn();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals((-31), int0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.47222146214867
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      StringReader stringReader1 = new StringReader("jq&KWiynber)L|GML");
      char[] charArray0 = new char[8];
      charArray0[0] = 'y';
      charArray0[1] = 'Q';
      charArray0[2] = 'o';
      charArray0[3] = '^';
      charArray0[4] = 'O';
      charArray0[5] = '_';
      charArray0[6] = '!';
      charArray0[7] = 'C';
      stringReader1.read(charArray0);
      javaCharStream0.inBuf = 344;
      javaCharStream0.ReInit((Reader) stringReader1, 0, 3558, 0);
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(3558, javaCharStream0.getBeginColumn());
      assertEquals(3558, int0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      javaCharStream0.adjustBeginLineColumn(1, 1);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 1865);
      javaCharStream1.GetImage();
      javaCharStream0.GetImage();
      javaCharStream1.GetSuffix(0);
      // Undeclared exception!
      try { 
        javaCharStream1.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, 0, 1421, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(70);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.5601507502065712
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 4083, 4083, 4083);
      javaCharStream0.adjustBeginLineColumn(4083, 4083);
      javaCharStream0.GetImage();
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(1);
      assertEquals(4084, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@+mT(s");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.ExpandBuff(false);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 383);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 383, 383);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 78);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader1, 4, (-522), (-522));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      StringReader stringReader1 = new StringReader("jq&KWiynber)L|GML");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1, 0, 175);
      javaCharStream1.ReInit((Reader) stringReader0);
      StringReader stringReader2 = new StringReader("");
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.0921965331237558
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      StringReader stringReader1 = new StringReader("jq&KWiynber)L|GML");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), 0);
      javaCharStream1.backup((-1));
      javaCharStream0.GetImage();
      JavaCharStream javaCharStream2 = new JavaCharStream(dataInputStream0, (byte)8, 74, (byte)3);
      javaCharStream1.BeginToken();
      JavaCharStream.hexval('D');
      // Undeclared exception!
      try { 
        javaCharStream2.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.7013090971439206
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("1Y4ZGZi#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, (-2057));
      javaCharStream0.backup((-2057));
      assertEquals(2056, javaCharStream0.bufpos);
      
      int int0 = JavaCharStream.hexval('c');
      assertEquals(12, int0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = 5;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 5);
      InputStream inputStream0 = null;
      int int1 = 11;
      javaCharStream0.inputStream = (Reader) stringReader0;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 0, 11);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1, (-1551), (-4188));
      javaCharStream0.backup((-738));
      javaCharStream0.adjustBeginLineColumn(4071, (-1));
      assertEquals(737, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Z%72Z4rk-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn((-1), (-1));
      assertEquals((-1), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader2 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader2, 1, 10, 1);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, 0, 1421, 0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.close();
      javaCharStream0.AdjustBuffSize();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "D$ag\"2qXMTPvT");
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 1411, 1922);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      stringReader0.read();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginColumn();
      javaCharStream0.GetSuffix(73);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 383);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 383, 383);
      pipedOutputStream0.close();
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 383, (-1273));
      int int0 = JavaCharStream.hexval('6');
      assertEquals(6, int0);
      
      javaCharStream0.getBeginLine();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.3533634513247454
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) null, 1, 1421, 3558);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ux2G[a");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginColumn();
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.8662943611198906
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      stringReader0.read();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 1);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ReadByte();
      javaCharStream0.BeginToken();
      char char0 = javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals('l', char0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.0957074289137867
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 1);
      StringReader stringReader1 = new StringReader("jq&KWiynber)L|GML");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)1;
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte)8, (int) (byte)1, (int) (byte)8);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('D', char0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.8624848373103666
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringReader stringReader0 = new StringReader("n");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.mark(94);
      javaCharStream0.BeginToken();
      char char0 = javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals('', char0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DUat~)");
      StringReader stringReader1 = new StringReader("DUat~)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('D', char0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.buffer = null;
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 520, 520);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 0, (-935), 0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      javaCharStream0.ReInit((InputStream) mockFileInputStream0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 4052, 4052, 4052);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      try { 
        JavaCharStream.hexval('g');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("K^yEk%vL* :F@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-1472), (-113));
      javaCharStream0.getBeginLine();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(1353);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1353, (-1), (-1));
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, 0, 0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[9];
      charArray0[0] = 'Y';
      charArray0[1] = 'z';
      charArray0[2] = 'F';
      charArray0[3] = '+';
      charArray0[4] = 'n';
      charArray0[5] = '4';
      charArray0[6] = '7';
      charArray0[7] = 'a';
      charArray0[8] = '.';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.column = 10;
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[2];
      charArray0[0] = '%';
      charArray0[1] = '(';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2120, 62, 62);
      javaCharStream0.Done();
      stringReader0.skip(2120);
      javaCharStream0.ReInit((Reader) stringReader0, 99, 62, 99);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }
}
