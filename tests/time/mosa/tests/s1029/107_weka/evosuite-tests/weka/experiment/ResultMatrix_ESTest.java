/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 28 11:32:47 GMT 2020
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.8428806153171315
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[4][7];
      int[] intArray1 = new int[9];
      intArray1[0] = 1;
      intArray1[1] = 2;
      intArray1[2] = 2;
      intArray1[3] = 0;
      intArray1[4] = 2;
      intArray1[5] = 2;
      resultMatrixLatex0.setMeanPrec(0);
      intArray1[6] = 1;
      intArray1[7] = 1;
      intArray1[8] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 2;
      intArray2[1] = 0;
      intArray2[2] = 1;
      intArray2[3] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[2];
      intArray3[0] = 2;
      intArray3[1] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[1];
      intArray4[0] = 1;
      intArray0[3] = intArray4;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.addHeader(" ", " ");
      resultMatrixCSV0.getHeader(" ");
      String[][] stringArray0 = new String[4][2];
      String[] stringArray1 = new String[7];
      stringArray1[0] = "]";
      stringArray1[1] = " ";
      stringArray1[2] = "[";
      stringArray1[3] = "]";
      stringArray1[4] = " ";
      stringArray1[5] = "]";
      stringArray1[6] = "[";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[1];
      stringArray2[0] = "v";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[6];
      stringArray3[0] = " ";
      stringArray3[1] = "-show-avg";
      stringArray3[2] = "*";
      stringArray3[3] = "v";
      stringArray3[4] = "*";
      stringArray3[5] = " ";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[4];
      stringArray4[0] = "4Vem)+l2Ig)<MI(|/j";
      stringArray4[1] = "v";
      stringArray4[2] = ")?).M:r|-";
      stringArray4[3] = "*";
      stringArray0[3] = stringArray4;
      resultMatrixCSV0.getColSize(stringArray0, (-2138), false, false);
      ResultMatrixHTML resultMatrixHTML0 = null;
      try {
        resultMatrixHTML0 = new ResultMatrixHTML((-2138), 47);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.6888794541139402
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[0][2];
      resultMatrixHTML0.setRanking(intArray0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "v";
      stringArray0[1] = ")";
      stringArray0[2] = "*";
      stringArray0[3] = "*";
      stringArray0[4] = "*";
      stringArray0[5] = ")";
      stringArray0[6] = "*";
      stringArray0[7] = "(";
      stringArray0[8] = "v";
      resultMatrixHTML0.setOptions(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.globalInfo();
      String[][] stringArray1 = new String[5][9];
      stringArray1[0] = stringArray0;
      stringArray1[1] = stringArray0;
      stringArray1[2] = stringArray0;
      stringArray1[3] = stringArray0;
      stringArray1[4] = stringArray0;
      resultMatrixPlainText0.getColSize(stringArray1, (-1));
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.561176523837603
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "*";
      stringArray0[1] = "(";
      stringArray0[2] = ")";
      stringArray0[3] = ")";
      stringArray0[4] = "*";
      stringArray0[5] = "24 F&rUg!";
      ResultMatrixGnuPlot.main(stringArray0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.setOptions(stringArray0);
      resultMatrixHTML0.setMean(1, 0, 0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.483158008909034
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getStdDev(7, 7);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.3427206851593945
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getOptions();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_ShowAverage = true;
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.setSignificance(1, (-1604), (-821));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 100);
      resultMatrixSignificance0.setShowStdDev(false);
      resultMatrixSignificance0.getDefaultStdDevWidth();
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.648625546111829
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.clear();
      resultMatrixLatex0.getStdDev(3730, (-5179));
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.addHeader(" ", " ");
      resultMatrixCSV0.getHeader(" ");
      resultMatrixCSV0.meanWidthTipText();
      resultMatrixCSV0.getCount((-452));
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.5735011123752147
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixGnuPlot.main(stringArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setOptions(stringArray0);
      resultMatrixHTML0.rowNameWidthTipText();
      resultMatrixHTML0.getSignificance((-1012), (-1012));
      resultMatrixHTML0.getMean((-1012), (-2030));
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.3427206851593945
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getOptions();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV0.globalInfo();
      resultMatrixHTML0.getCountWidth();
      resultMatrixCSV0.isMean((-997));
      resultMatrixHTML0.isAverage(2);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.8720312139206605
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixLatex0.assign(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixLatex0.WIN_STRING = "$circ$";
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setRowOrder(intArray0);
      resultMatrixPlainText0.getSummaryTitle(0);
      resultMatrixLatex0.significanceWidthTipText();
      resultMatrixPlainText0.getRemoveFilterName();
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.462151589586505
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRemoveFilterName(true);
      resultMatrixGnuPlot0.setMeanWidth((-1626));
      resultMatrixGnuPlot0.m_PrintColNames = true;
      resultMatrixGnuPlot0.setMeanPrec(10);
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.m_MeanWidth = (-1626);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      resultMatrixPlainText0.setPrintColNames(true);
      resultMatrixGnuPlot0.getStdDev(1, 21);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clearSummary();
      resultMatrixLatex0.getDefaultPrintColNames();
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixPlainText0.getDisplayName();
      resultMatrixLatex0.toStringRanking();
      String[][] stringArray1 = new String[3][0];
      stringArray1[0] = stringArray0;
      resultMatrixLatex0.setRowNameWidth(2863);
      stringArray1[1] = stringArray0;
      stringArray1[2] = stringArray0;
      resultMatrixLatex0.getColSize(stringArray1, 0, false, false);
      resultMatrixPlainText0.getEnumerateRowNames();
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.6593226977095163
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_Counts = null;
      resultMatrixHTML0.setEnumerateRowNames(true);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = new String[6];
      stringArray0[0] = " ";
      resultMatrixCSV0.m_EnumerateColNames = true;
      stringArray0[1] = "*";
      stringArray0[2] = "";
      stringArray0[3] = " ";
      stringArray0[4] = "]";
      stringArray0[5] = "]";
      resultMatrixCSV0.m_RowNames = stringArray0;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.assign(resultMatrixCSV0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.removeFilterNameTipText();
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.852105192158921
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 26);
      int[][] intArray0 = new int[4][0];
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.getSignificance(26, 26);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.6291069744170983
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      resultMatrixHTML0.TIE_STRING = "SQtO22;v";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixHTML0.setOptions(stringArray0);
      resultMatrixHTML0.setSignificance(1, 175, 175);
      resultMatrixHTML0.getDefaultMeanWidth();
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.8998105932736866
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 26);
      resultMatrixHTML0.m_PrintRowNames = true;
      int[][] intArray0 = new int[5][0];
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringSummary();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrixHTML", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = " ";
      // Undeclared exception!
      try { 
        resultMatrixCSV0.padString((String) null, 30, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.4061774521134605
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_ShowAverage = true;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 2);
      resultMatrixHTML0.getOptions();
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.clearHeader();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.getDefaultCountWidth();
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.8428806153171315
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[0][2];
      resultMatrixHTML0.doubleToString(0.0, 799);
      resultMatrixHTML0.setRanking(intArray0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.1343617096659826
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.assign(resultMatrixPlainText0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      resultMatrixPlainText0.m_MeanWidth = 2;
      Vector<Integer> vector0 = new Vector<Integer>(linkedList0);
      resultMatrixPlainText0.m_HeaderValues = vector0;
      resultMatrixPlainText0.doubleToString(0.0, 1);
      resultMatrixPlainText0.setPrintRowNames(false);
      resultMatrixSignificance0.setMeanPrec(1474);
      resultMatrixSignificance0.clearRanking();
      resultMatrixPlainText0.setStdDev(0, 789, 0);
      resultMatrixPlainText0.toStringRanking();
      resultMatrixSignificance0.getStdDev((-1), 2281);
      resultMatrixPlainText0.setSignificanceWidth(789);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.1343617096659826
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.assign(resultMatrixPlainText0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      resultMatrixPlainText0.m_MeanWidth = 2;
      Vector<Integer> vector0 = new Vector<Integer>(linkedList0);
      resultMatrixPlainText0.m_HeaderValues = vector0;
      resultMatrixPlainText0.doubleToString(0.0, 1);
      resultMatrixPlainText0.setPrintRowNames(false);
      resultMatrixSignificance0.setMeanPrec(1474);
      resultMatrixPlainText0.setStdDev(0, 1, 0);
      resultMatrixPlainText0.toStringRanking();
      resultMatrixSignificance0.getStdDev((-1), 2281);
      resultMatrixPlainText0.setSignificanceWidth(2);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.844305326698263
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixLatex0.assign(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixLatex0.LEFT_PARENTHESES = "$circ$";
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setRowOrder(intArray0);
      resultMatrixSignificance0.padString("7V?0.g~3", 0, false);
      resultMatrixSignificance0.getSummaryTitle(2);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColName((-1738), "]");
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.774342220194881
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixLatex0.m_CountWidth = 0;
      resultMatrixSignificance0.RIGHT_PARENTHESES = "$\bullet$";
      resultMatrixSignificance0.isRowName(0);
      resultMatrixLatex0.getShowStdDev();
      resultMatrixLatex0.getDefaultRowNameWidth();
      resultMatrixSignificance0.getDisplayName();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.LOSS_STRING = "Sa$?i[}EFC4";
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixSignificance0.headerKeys();
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixCSV0.stdDevWidthTipText();
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.559502735548486
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = new String[0];
      ResultMatrixGnuPlot.main(stringArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      booleanArray0[2] = true;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = false;
      booleanArray0[6] = false;
      resultMatrixHTML0.m_RowHidden = booleanArray0;
      resultMatrixHTML0.setOptions(stringArray0);
      resultMatrixHTML0.removeFilterName((String) null);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.3229127882951666
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(14, 14);
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.getRevision();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int int0 = 15;
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.setRowNameWidth(15);
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.5986051779973063
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.RIGHT_PARENTHESES = null;
      resultMatrixPlainText0.setColName(1, (String) null);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.2103568639745723
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.clear();
      resultMatrixHTML0.m_ShowAverage = true;
      resultMatrixHTML0.setShowStdDev(true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      resultMatrixHTML0.toStringMatrix();
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.8526379562735795
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.addHeader("`g!BwFe%w6;@uTn", "`g!BwFe%w6;@uTn");
      resultMatrixCSV0.getHeader("`g!BwFe%w6;@uTn");
      resultMatrixCSV0.getSignificance(3, (-1316));
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.946271959759045
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 26);
      int[][] intArray0 = new int[5][0];
      resultMatrixHTML0.setRanking(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.getDefaultRemoveFilterName();
  }

  /**
  //Test case number: 32
  /*Coverage entropy=4.063102250069548
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[0];
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixHTML0.m_PrintColNames = true;
      resultMatrixHTML0.setOptions(stringArray0);
      resultMatrixHTML0.getSignificance((-1519), 84);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.9025538185947704
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.addHeader("v", "(");
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = 1;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "v";
      resultMatrixCSV0.m_RowNames = stringArray0;
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[4] = 0;
      intArray0[5] = 2;
      intArray0[6] = 2;
      intArray0[7] = 0;
      resultMatrixSignificance0.setRowOrder(intArray0);
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      resultMatrixHTML0.trimString("#set ylabel \"Accuracy in %\"\n", 0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.762136040901145
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(6, 6);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 6);
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 1;
      resultMatrixSignificance0.setRowOrder(intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.getDisplayRow(1);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.996306798305616
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      boolean[] booleanArray0 = new boolean[3];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      resultMatrixHTML0.m_ColHidden = booleanArray0;
      resultMatrixPlainText0.setRowNameWidth(134);
      resultMatrixPlainText0.setColName(0, "");
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML0.getSummaryTitle(2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 2);
      resultMatrixLatex0.toStringKey();
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.5177998018149177
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.getPrintRowNames();
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.9555334347432662
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.addHeader(")", " ");
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[4];
      intArray0[0] = (-1602);
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 1;
      resultMatrixSignificance0.setRowOrder(intArray0);
      resultMatrixCSV0.getDisplayRow(1);
      resultMatrixHTML0.getSummaryTitle((-1483));
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 26);
      int[][] intArray0 = new int[5][0];
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.enumerateColNamesTipText();
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.addHeader(")", " ");
      resultMatrixCSV0.getHeader(")");
      resultMatrixCSV0.getColName((-873));
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.47123583205829
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDisplayRow(2);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultMeanWidth();
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.610917912644226
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getOptions();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.colNameWidthTipText();
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.2743324740937747
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.getShowStdDev();
  }

  /**
  //Test case number: 44
  /*Coverage entropy=4.257531193080346
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.WIN_STRING = "";
      resultMatrixHTML0.isMean(137);
      resultMatrixGnuPlot0.TIE_STRING = "Generates the matrix output as HTML.";
      resultMatrixHTML0.getColName(1009);
      resultMatrixHTML0.setSignificanceWidth(137);
      resultMatrixHTML0.toStringRanking();
      resultMatrixHTML0.getMeanPrec();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getRevision();
      resultMatrixHTML0.showStdDevTipText();
      resultMatrixCSV0.TIE_STRING = "";
      resultMatrixGnuPlot0.listOptions();
      resultMatrixCSV0.getMean(0, 2);
      resultMatrixGnuPlot0.toStringRanking();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "v";
      ResultMatrixGnuPlot.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      Vector<Object> vector0 = new Vector<Object>();
      vector0.add((Object) "v");
      resultMatrixPlainText0.m_HeaderValues = vector0;
      resultMatrixPlainText0.setEnumerateRowNames(false);
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.showStdDevTipText();
      resultMatrixPlainText0.getAverage(2);
      resultMatrixGnuPlot0.getShowStdDev();
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixGnuPlot0.getMeanPrec();
      resultMatrixCSV0.toStringKey();
      resultMatrixHTML0.getDisplayCol(0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.2743324740937747
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getOptions();
      // Undeclared exception!
      resultMatrixHTML0.setSize(1015, 884);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getEnumerateColNames();
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.printRowNamesTipText();
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.4812329012959573
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultColNameWidth();
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1);
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setRowOrder(intArray0);
      resultMatrixSignificance0.getSignificanceWidth();
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.2699040290208936
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(60, 60);
      int[] intArray0 = new int[5];
      resultMatrixSignificance0.m_CountWidth = 0;
      intArray0[0] = 2;
      intArray0[1] = 1;
      intArray0[2] = 60;
      intArray0[3] = 2;
      // Undeclared exception!
      resultMatrixSignificance0.toArray();
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.5301703824676576
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixPlainText0.setStdDevWidth(0);
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.getMeanWidth();
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.2404460979393903
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_ShowAverage = true;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.getDefaultPrintColNames();
      String[][] stringArray0 = new String[7][9];
      String[] stringArray1 = new String[9];
      stringArray1[0] = "(";
      stringArray1[1] = ")";
      stringArray1[2] = ")";
      stringArray1[3] = " ";
      stringArray1[4] = "v";
      stringArray1[5] = "(";
      stringArray1[6] = " ";
      stringArray1[7] = " ";
      stringArray1[8] = " ";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[5];
      stringArray2[0] = " ";
      stringArray2[1] = " ";
      stringArray2[2] = "";
      stringArray2[3] = ")";
      stringArray2[4] = "v";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[6];
      stringArray3[0] = "<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>Average</td><td align=\"right\">NaN.00</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n";
      stringArray3[1] = "*";
      stringArray3[2] = "*";
      stringArray3[3] = "*";
      stringArray3[4] = " ";
      stringArray3[5] = "";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[9];
      stringArray4[0] = "(";
      stringArray4[1] = "(";
      stringArray4[2] = " ";
      stringArray4[3] = "*";
      stringArray4[4] = " ";
      stringArray4[5] = "";
      stringArray4[6] = "v";
      stringArray4[7] = "<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>Average</td><td align=\"right\">NaN.00</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n";
      stringArray4[8] = "\"rlt?{H";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[7];
      stringArray5[0] = ")";
      stringArray5[1] = "d^I;3~C[^";
      stringArray5[2] = "";
      stringArray5[3] = " ";
      stringArray5[4] = ")";
      stringArray5[5] = "*";
      stringArray5[6] = "<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>Average</td><td align=\"right\">NaN.00</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[2];
      stringArray6[0] = ")";
      stringArray6[1] = "-u%:_X1sn;,j\"yN!T2p";
      stringArray0[5] = stringArray6;
      String[] stringArray7 = new String[2];
      stringArray7[0] = "(";
      stringArray7[1] = ")";
      stringArray0[6] = stringArray7;
      resultMatrixSignificance0.getColSize(stringArray0, 0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.2211929520624283
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixLatex0.toArray();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.padString("", 141, true);
      resultMatrixCSV0.addHeader(" ", "*");
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader(")");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.5986051779973063
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      String[][] stringArray0 = new String[4][2];
      String[] stringArray1 = new String[7];
      stringArray1[0] = ")";
      stringArray1[1] = "(";
      stringArray1[2] = " ";
      stringArray1[3] = "(";
      stringArray1[4] = ")";
      stringArray1[5] = "(";
      stringArray1[6] = "";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[0];
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[3];
      stringArray3[0] = " ";
      stringArray3[1] = ")";
      stringArray3[2] = "*";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[4];
      stringArray4[0] = "v";
      stringArray4[1] = "*";
      stringArray4[2] = "v";
      stringArray4[3] = ")";
      stringArray0[3] = stringArray4;
      resultMatrixLatex0.getColSize(stringArray0, 63, false, false);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1);
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setRowOrder(intArray0);
      resultMatrixCSV0.getDefaultSignificanceWidth();
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.8505177566009374
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 26);
      int[][] intArray0 = new int[5][0];
      resultMatrixHTML0.setRanking(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.setRowHidden(0, false);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.376342306072053
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringKey();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringRanking();
      resultMatrixPlainText0.setRowNameWidth(7);
      resultMatrixPlainText0.toStringMatrix();
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.7931637673246072
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_ShowAverage = true;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.getDefaultStdDevWidth();
      resultMatrixHTML0.printRowNamesTipText();
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.9458755173797666
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 26);
      int[][] intArray0 = new int[1][0];
      resultMatrixHTML0.setRanking(intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.setCount((-1363), 1);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.8739867076185663
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.setEnumerateColNames(false);
      resultMatrixSignificance0.setSize(1, 11);
      resultMatrixSignificance0.trimString((String) null, (-1));
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.2993257728013057
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[7];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = (-681);
      intArray0[5] = 2;
      intArray0[6] = 0;
      resultMatrixHTML0.m_ColOrder = intArray0;
      resultMatrixHTML0.getOptions();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixHTML0.toStringMatrix();
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.561176523837603
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[0];
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixHTML0.setOptions((String[]) null);
      resultMatrixHTML0.setSignificance(16, 1146, (-556));
      resultMatrixHTML0.toStringSummary();
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.addHeader(")", " ");
      resultMatrixCSV0.getHeader(")");
      resultMatrixHTML0.getMeanPrec();
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.583518938456111
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.LEFT_PARENTHESES = "4<$ s";
      String[] stringArray0 = new String[0];
      resultMatrixCSV0.setEnumerateColNames(false);
      resultMatrixCSV0.setOptions(stringArray0);
      resultMatrixCSV0.setStdDevPrec((-1));
      resultMatrixCSV0.getMeanPrec();
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixCSV0.clear();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot((-314), (-1920));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.8561010731103025
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.setColName(1478, "v");
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.25842157605242
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.getOptions();
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.8871876276384962
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringKey();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringRanking();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowHidden(2, false);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.4829871063856004
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.setMeanWidth(0);
      resultMatrixHTML0.getAverage(0);
      resultMatrixHTML0.getVisibleColCount();
      resultMatrixLatex0.getEnumerateRowNames();
      resultMatrixHTML0.getDisplayCol(0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.571868883314915
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      
      String[] stringArray0 = new String[0];
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixHTML0.setOptions(stringArray0);
      resultMatrixHTML0.isAverage((-1323));
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.698215536154872
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      int[][] intArray1 = new int[6][2];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      resultMatrixCSV0.m_RemoveFilterName = true;
      intArray1[3] = intArray0;
      resultMatrixHTML0.setRemoveFilterName(true);
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      resultMatrixHTML0.setSummary(intArray1, intArray1);
      assertTrue(resultMatrixHTML0.getRemoveFilterName());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 26);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixHTML0.getDefaultEnumerateRowNames();
      assertEquals(26, resultMatrixHTML0.getRowCount());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getRevision();
      String string0 = resultMatrixHTML0.showAverageTipText();
      assertFalse(resultMatrixHTML0.getShowAverage());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(0, resultMatrixHTML0.getDefaultSignificanceWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals("Whether to show the row with averages.", string0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=4.262679877041316
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.showStdDevTipText();
      String[] stringArray0 = new String[0];
      ResultMatrixLatex.main(stringArray0);
      assertEquals(0, stringArray0.length);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.8243648409235025
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[2][8];
      int[] intArray1 = new int[2];
      intArray1[0] = 1554;
      intArray1[1] = (-1);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      resultMatrixHTML0.setRanking(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDisplayName();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(0, 26);
      resultMatrixLatex1.setRowHidden((-610), true);
      assertEquals(26, resultMatrixLatex1.getRowCount());
      assertEquals(0, resultMatrixLatex1.getColCount());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.getDefaultStdDevPrec();
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(1, resultMatrixHTML0.getRowCount());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.8132685393790524
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 6);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      int[] intArray0 = new int[2];
      intArray0[0] = 97;
      intArray0[1] = 2690;
      resultMatrixCSV0.m_ColOrder = intArray0;
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.globalInfo();
      resultMatrixCSV0.setColName(0, "Generates the matrix in CSV ('comma-separated values') format.");
      resultMatrixLatex0.countWidthTipText();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Generates the matrix in CSV ('comma-separated values') format.";
      String[][] stringArray1 = new String[9][2];
      String[] stringArray2 = new String[3];
      stringArray2[0] = "(";
      stringArray2[1] = "The width of the counts (0 = optimal).";
      stringArray2[2] = " ";
      stringArray1[0] = stringArray2;
      stringArray1[1] = stringArray0;
      stringArray1[2] = stringArray0;
      stringArray1[3] = stringArray0;
      stringArray1[4] = stringArray0;
      stringArray1[5] = stringArray0;
      stringArray1[6] = stringArray0;
      stringArray1[7] = stringArray0;
      stringArray1[8] = stringArray0;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getColSize(stringArray1, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.1417070364814808
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setOptions(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.m_SignificanceWidth = 0;
      resultMatrixCSV0.getDisplayName();
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevPrec());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      
      resultMatrixHTML0.stdDevPrecTipText();
      resultMatrixHTML0.getDefaultPrintColNames();
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertFalse(resultMatrixHTML0.getShowAverage());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 26);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int int0 = resultMatrixHTML0.getCountWidth();
      assertFalse(resultMatrixHTML0.getShowStdDev());
      assertFalse(resultMatrixHTML0.getDefaultRemoveFilterName());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(26, resultMatrixHTML0.getRowCount());
      assertEquals(0, int0);
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.4596339812355787
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[0];
      resultMatrixHTML0.m_PrintColNames = false;
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixHTML0.setCount(1, 1);
      resultMatrixHTML0.isRowName((-596));
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.7284075400342926
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(5, 5);
      resultMatrixSignificance0.getDefaultPrintColNames();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      
      resultMatrixCSV0.m_PrintRowNames = true;
      resultMatrixCSV0.globalInfo();
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultPrintColNames();
      int int0 = resultMatrixLatex0.getColNameWidth();
      assertEquals(0, int0);
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      
      boolean boolean0 = resultMatrixSignificance0.isRowName(3387);
      assertEquals(5, resultMatrixSignificance0.getRowCount());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.7775531319494733
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 6);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      int[] intArray0 = new int[2];
      intArray0[0] = 97;
      intArray0[1] = 2690;
      resultMatrixCSV0.m_ColOrder = intArray0;
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.globalInfo();
      resultMatrixLatex0.countWidthTipText();
      String[][] stringArray0 = new String[1][8];
      String[] stringArray1 = new String[2];
      stringArray1[0] = "Generates the matrix in CSV ('comma-separated values') format.";
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getColSize(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.0024574211812665
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 6);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      int[] intArray0 = new int[2];
      intArray0[0] = 97;
      intArray0[1] = 2690;
      resultMatrixCSV0.m_ColOrder = intArray0;
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.globalInfo();
      resultMatrixCSV0.setColName(0, "Generates the matrix in CSV ('comma-separated values') format.");
      resultMatrixLatex0.countWidthTipText();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Generates the matrix in CSV ('comma-separated values') format.";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(97, 0);
      resultMatrixHTML0.doubleToString(2, 0);
      resultMatrixHTML0.getAverage(1);
      resultMatrixHTML0.getVisibleColCount();
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance(97, (-44));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.0863741003285914
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 26);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      intArray0[1] = 26;
      intArray0[2] = 0;
      intArray0[3] = 26;
      resultMatrixSignificance0.setColOrder(intArray0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML0.setMeanWidth(125);
      resultMatrixHTML1.getAverage(1);
      int int0 = resultMatrixHTML0.getVisibleColCount();
      assertEquals(26, int0);
      assertEquals(0, resultMatrixHTML0.getDefaultCountWidth());
      
      resultMatrixPlainText0.setColHidden((-2318), true);
      assertEquals(0, resultMatrixPlainText0.getDefaultStdDevWidth());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int int0 = resultMatrixHTML0.getDisplayCol((-1225));
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals((-1), int0);
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertFalse(resultMatrixHTML0.getShowAverage());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.4842760245692808
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDisplayCol(26);
      resultMatrixHTML0.getRowCount();
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.33844099508693
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      boolean boolean0 = resultMatrixSignificance0.getColHidden(18);
      assertFalse(boolean0);
      
      resultMatrixSignificance0.setRowName(2, (String) null);
      resultMatrixSignificance0.getRowHidden(0);
      int[] intArray0 = new int[7];
      intArray0[0] = 26;
      intArray0[1] = 0;
      intArray0[2] = 26;
      intArray0[3] = 1;
      intArray0[4] = 313;
      intArray0[5] = 18;
      intArray0[6] = (-949);
      resultMatrixSignificance0.setRowOrder(intArray0);
      resultMatrixSignificance0.stdDevWidthTipText();
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[1][5];
      int[] intArray1 = new int[2];
      intArray1[0] = 0;
      intArray1[1] = 2;
      intArray0[0] = intArray1;
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.setCount((-1360), (-1360));
      assertEquals(0, resultMatrixHTML0.getDefaultStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.3427206851593945
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      assertEquals(18, stringArray0.length);
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.setRowHidden(2, true);
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.6219954666905596
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      int int0 = resultMatrixGnuPlot1.getVisibleRowCount();
      assertEquals(2, resultMatrixGnuPlot1.getStdDevPrec());
      assertFalse(resultMatrixGnuPlot1.getEnumerateColNames());
      assertEquals(50, resultMatrixGnuPlot1.getRowNameWidth());
      assertFalse(resultMatrixGnuPlot1.getEnumerateRowNames());
      assertEquals(2, resultMatrixGnuPlot1.getMeanPrec());
      assertTrue(resultMatrixGnuPlot1.getPrintColNames());
      assertTrue(resultMatrixGnuPlot1.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot1.getMeanWidth());
      assertEquals(1, int0);
      assertEquals(0, resultMatrixGnuPlot1.getCountWidth());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.9972431788356126
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      resultMatrixHTML0.setMeanWidth(0);
      resultMatrixHTML0.getAverage(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[][] stringArray1 = new String[1][8];
      stringArray1[0] = stringArray0;
      resultMatrixCSV0.getColSize(stringArray1, 1518);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.setOptions(stringArray0);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.1634240504234032
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(0, resultMatrixCSV0.getDefaultCountWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.setColName(1, "(");
      resultMatrixPlainText0.rowNameWidthTipText();
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 26);
      int[][] intArray0 = new int[5][0];
      resultMatrixHTML0.setRanking(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDisplayName();
      resultMatrixHTML0.setStdDevPrec(0);
      assertEquals(0, resultMatrixHTML0.getStdDevPrec());
      
      resultMatrixLatex0.setRowHidden(1, true);
      String string0 = resultMatrixLatex0.stdDevWidthTipText();
      assertEquals("The width of the standard deviation (0 = optimal).", string0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.addHeader("`g!BwFe%w6;@uTn", "`g!BwFe%w6;@uTn");
      String string0 = resultMatrixCSV0.getHeader("`g!BwFe%w6;@uTn");
      assertNull(string0);
      
      resultMatrixCSV0.getColNameWidth();
      resultMatrixCSV0.getDefaultRowNameWidth();
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertTrue(resultMatrixCSV0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getDefaultStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultCountWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.2466017120905977
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setOptions(stringArray0);
      resultMatrixHTML0.getStdDevWidth();
      assertEquals(0, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setColOrder((int[]) null);
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.323658258865119
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 26);
      int[][] intArray0 = new int[1][0];
      resultMatrixHTML0.setRanking(intArray0);
      Vector<Vector<Object>> vector0 = new Vector<Vector<Object>>();
      resultMatrixHTML0.m_HeaderKeys = vector0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(26, 26);
      resultMatrixCSV1.setEnumerateRowNames(true);
      resultMatrixCSV1.globalInfo();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixCSV1.setSignificance(3, 0, 2);
      assertTrue(resultMatrixCSV1.getEnumerateRowNames());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.2423606966230087
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixLatex0.assign(resultMatrixSignificance0);
      resultMatrixSignificance0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixLatex0.LEFT_PARENTHESES = "v";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.setOptions((String[]) null);
      resultMatrixHTML0.setCount(1178, 0.0);
      assertFalse(resultMatrixHTML0.getPrintRowNames());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.5474147063793424
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixLatex0.assign(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixLatex0.LEFT_PARENTHESES = "$circ$";
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setRowOrder(intArray0);
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String[][] stringArray0 = resultMatrixSignificance0.toArray();
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(3, stringArray0.length);
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertTrue(resultMatrixSignificance0.getDefaultEnumerateColNames());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 2);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixLatex0.LEFT_PARENTHESES = "v";
      assertFalse(resultMatrixLatex0.getShowStdDev());
      
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setRowOrder(intArray0);
      resultMatrixSignificance0.setMean((-938), 1, 2);
      assertEquals(0, resultMatrixSignificance0.getDefaultColNameWidth());
      assertFalse(resultMatrixSignificance0.getShowAverage());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(2, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.4061093536128397
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixHTML0.setCount(93, 93);
      int int0 = resultMatrixHTML0.getCountWidth();
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, int0);
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.1417070364814808
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 26);
      int[][] intArray0 = new int[1][0];
      resultMatrixHTML0.setRanking(intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixHTML0.setOptions((String[]) null);
      assertEquals(0, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.631612186595399
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[0][2];
      resultMatrixHTML0.setRanking(intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("*");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.3068849378916276
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_RowNameWidth = 575;
      resultMatrixHTML0.getOptions();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevPrec(45);
      resultMatrixCSV0.toStringSummary();
      assertEquals(45, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.2139558881867223
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_ShowAverage = true;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      assertEquals(1, resultMatrixSignificance0.getColCount());
      
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>Average</td><td align=\"right\">NaN.00</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixSignificance0.isMean(0);
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.873986707618567
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.addHeader("", "");
      String string0 = resultMatrixCSV0.getHeader("");
      assertNull(string0);
      
      boolean boolean0 = resultMatrixCSV0.getDefaultPrintRowNames();
      boolean boolean1 = resultMatrixCSV0.isMean(110);
      assertTrue(boolean1 == boolean0);
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertTrue(boolean1);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.539407231628755
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixHTML0.isMean(101);
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.8432074050441813
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 26);
      int[][] intArray0 = new int[4][0];
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixHTML0.getPrintColNames();
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(26, resultMatrixHTML0.getVisibleRowCount());
      assertFalse(resultMatrixHTML0.getShowAverage());
      assertEquals(26, resultMatrixHTML0.getVisibleColCount());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.385871973441454
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultCountWidth();
      int[] intArray0 = new int[4];
      resultMatrixPlainText0.m_RankingDiff = intArray0;
      intArray0[0] = 2;
      intArray0[1] = 5;
      resultMatrixPlainText0.LOSS_STRING = "gE2s>J";
      intArray0[2] = 2;
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /gE2s>J)                      |\n", string0);
      
      intArray0[3] = (-1130);
      resultMatrixPlainText0.m_RankingWins = intArray0;
      resultMatrixPlainText0.setStdDevWidth((-1130));
      String string1 = resultMatrixPlainText0.trimString("gE2s>J", 1);
      assertEquals("g", string1);
      
      resultMatrixPlainText0.getPrintColNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1398, 2);
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.headerKeys();
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixSignificance0.getDefaultRemoveFilterName();
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(0, resultMatrixSignificance0.getDefaultMeanWidth());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertFalse(resultMatrixSignificance0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.631612186595399
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.addHeader("(", (String) null);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader((String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.6591973119499297
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 2;
      intArray0[6] = 0;
      resultMatrixSignificance0.setColOrder(intArray0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      resultMatrixCSV1.m_Counts = doubleArray0;
      resultMatrixCSV1.setMean(0, (-3912), 0);
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      assertEquals(1, resultMatrixCSV1.getVisibleRowCount());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertTrue(resultMatrixCSV1.getPrintRowNames());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.2047775241322567
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 26);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1);
      resultMatrixSignificance0.setRowName(9, "");
      resultMatrixSignificance0.getRowHidden(26);
      resultMatrixSignificance0.setRowOrder((int[]) null);
      String string0 = resultMatrixSignificance0.stdDevWidthTipText();
      assertEquals("The width of the standard deviation (0 = optimal).", string0);
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
      assertFalse(resultMatrixSignificance0.getDefaultShowAverage());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=3.2381333372272585
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_ShowAverage = true;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixHTML0.padString("v", 7, true);
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.toStringKey();
      assertTrue(resultMatrixHTML0.getShowAverage());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=3.4808918621286775
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.padString("jHe]#Q9l$5j7t", (-819), false);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.9555334347432654
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 2);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixLatex0.LEFT_PARENTHESES = "v";
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setRowOrder(intArray0);
      resultMatrixSignificance0.setMean(10, 1, 2);
      assertEquals(0, resultMatrixSignificance0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(0, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertTrue(resultMatrixSignificance0.getDefaultEnumerateColNames());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.610375441241441
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 3);
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.setEnumerateColNames(true);
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      resultMatrixSignificance0.m_MeanWidth = (-1075);
      intArray0[1] = (-2168);
      intArray0[2] = 2;
      resultMatrixSignificance0.m_ColNameWidth = 3;
      resultMatrixSignificance0.RIGHT_PARENTHESES = "6O7{\"-wE:F:";
      resultMatrixSignificance0.getColHidden((-1));
      resultMatrixSignificance0.setRowName((-657), "aq%j#oZkzj");
      resultMatrixSignificance0.getRowHidden(0);
      resultMatrixSignificance0.setRowOrder(intArray0);
      resultMatrixSignificance0.m_RowNameWidth = 1552;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1858, 0);
      resultMatrixSignificance0.stdDevWidthTipText();
      assertEquals(3, resultMatrixSignificance0.getColNameWidth());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.038623830464067
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 123);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 26);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getColHidden(474);
      resultMatrixSignificance0.setRowName(474, ")");
      resultMatrixSignificance0.getRowHidden(0);
      resultMatrixSignificance0.setRowOrder((int[]) null);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(37, 0);
      assertEquals(37, resultMatrixHTML1.getVisibleColCount());
      
      resultMatrixSignificance0.stdDevWidthTipText();
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getDefaultColNameWidth());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=4.317488113536302
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String[] stringArray0 = new String[0];
      ResultMatrixGnuPlot.main(stringArray0);
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixHTML0.stdDevWidthTipText();
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.9458755173797666
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setPrintColNames(false);
      assertFalse(resultMatrixPlainText0.getPrintColNames());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDisplayName();
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(0, resultMatrixLatex0.getDefaultCountWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[11];
      resultMatrixPlainText0.getRowOrder();
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertFalse(resultMatrixPlainText0.getDefaultRemoveFilterName());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertTrue(resultMatrixPlainText0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=3.7720827541674367
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(32, 32);
      int[] intArray0 = new int[3];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.setRowNameWidth(32);
      resultMatrixSignificance0.setRowName(1, "-mean-width");
      resultMatrixSignificance0.getRowHidden(26);
      resultMatrixSignificance0.setRowOrder(intArray0);
      // Undeclared exception!
      resultMatrixSignificance0.toStringMatrix();
  }

  /**
  //Test case number: 124
  /*Coverage entropy=3.9312516566300704
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(5, 5);
      resultMatrixSignificance0.setPrintRowNames(true);
      resultMatrixSignificance0.m_MeanWidth = (-2050);
      resultMatrixSignificance0.setRowName((-984), "z(5?6DH_,Wk");
      String[] stringArray0 = new String[4];
      ResultMatrixPlainText.main(stringArray0);
      assertEquals(4, stringArray0.length);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.044820482464577
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.setMean(0, 1878, 0.0);
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.4942288589873125
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getSummaryTitle(591);
      int int0 = resultMatrixPlainText0.getMeanWidth();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.7329837931139935
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[0];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 2);
      int int0 = resultMatrixHTML0.getVisibleColCount();
      assertEquals(1, int0);
      
      resultMatrixHTML0.getColHidden(1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.618268371350764
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      int[] intArray0 = new int[9];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultEnumerateColNames();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertFalse(resultMatrixLatex0.getDefaultRemoveFilterName());
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      assertEquals(1, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=4.243049106985175
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String[] stringArray0 = new String[0];
      ResultMatrixGnuPlot.main(stringArray0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML1.toStringMatrix();
      assertEquals(0, resultMatrixHTML1.getMeanWidth());
      
      resultMatrixHTML1.setMeanWidth(40);
      resultMatrixHTML0.getAverage(0);
      resultMatrixHTML1.setCountWidth(0);
      assertFalse(resultMatrixHTML0.getShowAverage());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=4.199727103856589
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      
      String[] stringArray0 = new String[0];
      ResultMatrixGnuPlot.main(stringArray0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML0.setMeanWidth(97);
      double double0 = resultMatrixHTML1.getAverage((-1239));
      assertEquals(0.0, double0, 0.01);
      
      resultMatrixHTML0.getVisibleColCount();
      resultMatrixHTML1.setCountWidth((-534));
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
      assertEquals(0, resultMatrixHTML1.getColNameWidth());
      assertEquals(0, resultMatrixHTML1.getMeanWidth());
      assertFalse(resultMatrixHTML1.getEnumerateRowNames());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=3.1634240504234032
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.getCount(2);
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      
      resultMatrixCSV0.getStdDev(1, 2);
      assertEquals(0, resultMatrixCSV0.getDefaultSignificanceWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=3.869492931583822
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      Vector<Vector<Object>> vector0 = new Vector<Vector<Object>>();
      resultMatrixLatex0.m_HeaderKeys = vector0;
      resultMatrixLatex0.getStdDev((-883), (-883));
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertFalse(resultMatrixCSV0.getShowStdDev());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setRowOrder(intArray0);
      int int0 = resultMatrixSignificance0.getStdDevPrec();
      assertEquals(2, int0);
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertFalse(resultMatrixSignificance0.getDefaultShowAverage());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=3.1737308471617354
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_ShowAverage = false;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixSignificance0.getColCount();
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      resultMatrixHTML0.getDefaultRowNameWidth();
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.meanWidthTipText();
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertFalse(resultMatrixSignificance0.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.7544378064979576
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixHTML0.m_ColNameWidth = 27;
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(0, 1245);
      resultMatrixHTML1.setMeanWidth(1245);
      resultMatrixHTML0.getAverage(0);
      int int0 = resultMatrixHTML1.getVisibleColCount();
      assertEquals(1245, resultMatrixHTML1.getMeanWidth());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setCountWidth(4383);
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      assertEquals(4383, resultMatrixSignificance0.getCountWidth());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=2.717850627199457
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(1, 2);
      int int0 = resultMatrixHTML1.getSignificanceCount(0, 845);
      assertEquals(1, resultMatrixHTML1.getVisibleColCount());
      assertEquals(0, int0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.globalInfo();
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=3.9745170417680735
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 2);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.setRowNameWidth(1);
      resultMatrixPlainText0.toStringMatrix();
      assertEquals(1, resultMatrixPlainText0.getRowNameWidth());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=3.2958368660043296
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 26);
      int[][] intArray0 = new int[5][0];
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixHTML0.setMeanWidth(26);
      resultMatrixHTML0.getAverage(22);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.setMean((-4060), (-790), 26);
      assertEquals(26, resultMatrixHTML0.getMeanWidth());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setRemoveFilterName(false);
      resultMatrixCSV0.addHeader("I*Z", ")");
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader(" ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=3.8170856899981245
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setOptions(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(19, 1319);
  }

  /**
  //Test case number: 145
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setRowName(26, "z(5?6DH_,Wk");
      resultMatrixSignificance0.getRowHidden((-984));
      int[] intArray0 = new int[0];
      resultMatrixSignificance0.setRowOrder(intArray0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.stdDevWidthTipText();
      assertEquals(0, resultMatrixSignificance1.getCountWidth());
      assertEquals(0, resultMatrixSignificance1.getDefaultMeanWidth());
      assertEquals(1, resultMatrixSignificance1.getVisibleRowCount());
      assertEquals(1, resultMatrixSignificance1.getVisibleColCount());
      assertEquals(2, resultMatrixSignificance1.getDefaultMeanPrec());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=3.3068849378916276
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getOptions();
      ResultMatrix resultMatrix0 = null;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.assign((ResultMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 147
  /*Coverage entropy=3.5841479724504954
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[0];
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixHTML0.listOptions();
      resultMatrixHTML0.clearRanking();
      resultMatrixHTML0.setOptions(stringArray0);
      resultMatrixHTML0.headerKeys();
      assertEquals(0, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=2.921613496406035
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertFalse(resultMatrixCSV0.getShowStdDev());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1);
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setRowOrder(intArray0);
      resultMatrixSignificance0.meanPrecTipText();
      resultMatrixSignificance0.isStdDev(3258);
      assertEquals(0, resultMatrixSignificance0.getDefaultColNameWidth());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertFalse(resultMatrixSignificance0.getShowAverage());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=2.9401437834560733
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(5, 5);
      resultMatrixSignificance0.setPrintRowNames(true);
      int[] intArray0 = new int[5];
      boolean boolean0 = resultMatrixSignificance0.isSignificance(5);
      assertTrue(boolean0);
      
      int int0 = resultMatrixSignificance0.getSignificanceWidth();
      assertEquals(0, int0);
      
      String string0 = resultMatrixSignificance0.meanWidthTipText();
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertFalse(resultMatrixSignificance0.getShowAverage());
      assertEquals("The width of the mean (0 = optimal).", string0);
      assertFalse(resultMatrixSignificance0.getShowStdDev());
      assertEquals(5, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(90, 0);
      String string0 = resultMatrixCSV0.toStringKey();
      assertEquals("Key,\n[1],col0\n[2],col1\n[3],col2\n[4],col3\n[5],col4\n[6],col5\n[7],col6\n[8],col7\n[9],col8\n[10],col9\n[11],col10\n[12],col11\n[13],col12\n[14],col13\n[15],col14\n[16],col15\n[17],col16\n[18],col17\n[19],col18\n[20],col19\n[21],col20\n[22],col21\n[23],col22\n[24],col23\n[25],col24\n[26],col25\n[27],col26\n[28],col27\n[29],col28\n[30],col29\n[31],col30\n[32],col31\n[33],col32\n[34],col33\n[35],col34\n[36],col35\n[37],col36\n[38],col37\n[39],col38\n[40],col39\n[41],col40\n[42],col41\n[43],col42\n[44],col43\n[45],col44\n[46],col45\n[47],col46\n[48],col47\n[49],col48\n[50],col49\n[51],col50\n[52],col51\n[53],col52\n[54],col53\n[55],col54\n[56],col55\n[57],col56\n[58],col57\n[59],col58\n[60],col59\n[61],col60\n[62],col61\n[63],col62\n[64],col63\n[65],col64\n[66],col65\n[67],col66\n[68],col67\n[69],col68\n[70],col69\n[71],col70\n[72],col71\n[73],col72\n[74],col73\n[75],col74\n[76],col75\n[77],col76\n[78],col77\n[79],col78\n[80],col79\n[81],col80\n[82],col81\n[83],col82\n[84],col83\n[85],col84\n[86],col85\n[87],col86\n[88],col87\n[89],col88\n[90],col89\n", string0);
      
      resultMatrixCSV0.countWidthTipText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.toStringRanking();
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=3.265186496807687
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertFalse(resultMatrixHTML0.getShowAverage());
      
      resultMatrixHTML0.m_ShowAverage = true;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.padString(")", 1);
      assertTrue(resultMatrixHTML0.getPrintRowNames());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(2, 1);
      int[][] intArrayArray0 = null;
      // Undeclared exception!
      try { 
        resultMatrixHTML1.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 153
  /*Coverage entropy=2.5986051779973063
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(5, 5);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 2);
      resultMatrixSignificance0.assign(resultMatrixHTML0);
      resultMatrixSignificance0.setMean(5, 1351, (-3448.8419112907695));
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(5, 5);
      resultMatrixCSV0.setStdDevWidth((-280));
      resultMatrixCSV0.setSignificanceWidth(3413);
      resultMatrixCSV0.addHeader("`g!BwFe%w6;@uTn", "`g!BwFe%w6;@uTn");
      resultMatrixCSV0.getHeader("`g!BwFe%w6;@uTn");
      assertEquals(3413, resultMatrixCSV0.getSignificanceWidth());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=3.369611075943323
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getOptions();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      resultMatrixHTML0.toString();
      resultMatrixHTML0.getAverage(0);
      resultMatrixHTML0.getVisibleColCount();
      resultMatrixHTML0.setSize(815, 0);
      assertFalse(resultMatrixHTML0.getShowAverage());
  }

  /**
  //Test case number: 156
  /*Coverage entropy=3.637586159726386
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      int[][] intArray0 = new int[5][0];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.LEFT_PARENTHESES = "er6 5'HYdy:,/)5r";
      resultMatrixSignificance0.colNameWidthTipText();
      resultMatrixSignificance0.getDefaultPrintColNames();
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixSignificance0.getMean(30, 25);
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
  }

  /**
  //Test case number: 157
  /*Coverage entropy=3.642229973171509
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      String string0 = resultMatrixSignificance0.toString();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      resultMatrixSignificance0.getStdDev(17, 17);
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=3.0280290733074104
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(32, 32);
      resultMatrixSignificance0.getSignificance(97, 97);
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(32, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(32, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 159
  /*Coverage entropy=3.120291565301284
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 26);
      int[][] intArray0 = new int[2][0];
      resultMatrixHTML0.clearHeader();
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.getMean(26, 26);
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(26, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertFalse(resultMatrixHTML0.getDefaultRemoveFilterName());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(26, resultMatrixHTML0.getVisibleColCount());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=3.3631024045101916
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringKey();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringRanking();
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      
      resultMatrixPlainText0.setRowNameWidth(0);
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Data (1) col0 \n--------------\nrow0  (0)    |\n--------------\n(v/ /*)      |\n", string0);
  }

  /**
  //Test case number: 161
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[0][2];
      resultMatrixHTML0.clearRanking();
      resultMatrixHTML0.setRanking(intArray0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 162
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.removeFilterName("v");
      assertEquals("v", string0);
      
      resultMatrixPlainText0.getShowAverage();
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(1, resultMatrixPlainText0.getColCount());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=3.035301707870085
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultPrintRowNames();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 1);
      String string0 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,[1],[2],''\nrow0,'','',''\n'[v/ /*]','','',[0/0/0]\n", string0);
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 164
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      assertTrue(resultMatrixSignificance0.getDefaultEnumerateColNames());
      
      resultMatrixCSV0.getDefaultShowAverage();
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
  }

  /**
  //Test case number: 165
  /*Coverage entropy=3.559502735548486
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[0];
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixHTML0.setOptions(stringArray0);
      int int0 = resultMatrixHTML0.getRowNameWidth();
      assertFalse(resultMatrixHTML0.getPrintRowNames());
      assertEquals(25, int0);
  }

  /**
  //Test case number: 166
  /*Coverage entropy=3.931825632724322
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.removeFilterName("");
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 167
  /*Coverage entropy=3.230978805414519
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 0);
      resultMatrixHTML0.toStringMatrix();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.trimString((String) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 168
  /*Coverage entropy=3.9702919135521193
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.toString();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      resultMatrixLatex0.trimString("\begin{table}[thb]\ncaption{label{labelname}Table Caption}\n\footnotesize\n{centering \begin{tabular}{lr}\n\\\nhline\nDataset & (1)\\\nhline\nrow0 &    \\\nhline\nmulticolumn{2}{c}{$circ$, $\bullet$ statistically significant improvement or degradation}\\\nend{tabular} \footnotesize par}\nend{table}\n", (-2256));
      resultMatrixLatex0.getDefaultCountWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.globalInfo();
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 169
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.meanPrecTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.getDefaultShowStdDev();
      int int0 = resultMatrixSignificance0.getMeanWidth();
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertTrue(resultMatrixSignificance0.getDefaultPrintRowNames());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(0, int0);
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
  }

  /**
  //Test case number: 170
  /*Coverage entropy=3.284756044966096
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setOptions(stringArray0);
      resultMatrixHTML0.isSignificance(1);
      assertFalse(resultMatrixHTML0.getPrintRowNames());
  }

  /**
  //Test case number: 171
  /*Coverage entropy=3.7577284829261233
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 26);
      int[][] intArray0 = new int[1][0];
      resultMatrixHTML0.setRanking(intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowNameWidth((-3198));
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
  }

  /**
  //Test case number: 172
  /*Coverage entropy=3.5181586074550264
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.getRowName(1);
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
  }

  /**
  //Test case number: 173
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.addHeader("`g!BwFe%w6;@uTn", "`g!BwFe%w6;@uTn");
      String string0 = resultMatrixCSV0.getHeader("`g!BwFe%w6;@uTn");
      assertNull(string0);
      
      int int0 = resultMatrixCSV0.getSignificanceCount((-451), (-451));
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(0, resultMatrixCSV0.getDefaultSignificanceWidth());
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 174
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setShowAverage(false);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.addHeader(")", " ");
      resultMatrixCSV0.getHeader(")");
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
  }

  /**
  //Test case number: 175
  /*Coverage entropy=3.4183685675159614
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[1];
      stringArray0[0] = " ";
      resultMatrixCSV0.m_ColNames = stringArray0;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML0.setPrintRowNames(false);
      resultMatrixHTML0.getOptions();
      assertFalse(resultMatrixHTML0.getDefaultEnumerateRowNames());
      assertTrue(resultMatrixHTML0.getEnumerateRowNames());
  }

  /**
  //Test case number: 176
  /*Coverage entropy=2.8526379562735795
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.clearSummary();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColName(0, "v");
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
  }

  /**
  //Test case number: 177
  /*Coverage entropy=2.8004698251768687
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(6, 6);
      int[][] intArray0 = new int[4][0];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 6);
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.setSignificance(17, 1, 1);
      assertEquals(6, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertFalse(resultMatrixCSV0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 178
  /*Coverage entropy=2.6808649498588037
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_ShowAverage = false;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      resultMatrixSignificance0.setRemoveFilterName(false);
      resultMatrixSignificance0.assign(resultMatrixHTML0);
      resultMatrixSignificance0.toStringRanking();
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      
      resultMatrixHTML0.setSignificance((-2690), 40, 0);
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
  }

  /**
  //Test case number: 179
  /*Coverage entropy=2.648625546111829
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.padString("Mn|E", (-21));
      assertEquals("Mn|E", string0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
  }

  /**
  //Test case number: 180
  /*Coverage entropy=2.788626037967038
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixHTML0.assign(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.addHeader(")", " ");
      resultMatrixCSV0.getHeader(")");
      String string0 = resultMatrixCSV0.padString("*", 0);
      assertEquals("*", string0);
      
      resultMatrixHTML0.getDefaultMeanPrec();
      resultMatrixPlainText0.listOptions();
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertFalse(resultMatrixHTML0.getShowStdDev());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
  }

  /**
  //Test case number: 181
  /*Coverage entropy=3.300432668335416
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(52, 52);
      resultMatrixGnuPlot0.padString("", (-190));
      // Undeclared exception!
      resultMatrixGnuPlot0.toStringMatrix();
  }

  /**
  //Test case number: 182
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setPrintColNames(true);
      resultMatrixLatex0.getDisplayName();
      assertTrue(resultMatrixLatex0.getPrintColNames());
  }

  /**
  //Test case number: 183
  /*Coverage entropy=4.019048200954924
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      resultMatrixHTML0.setMeanWidth(0);
      double double0 = resultMatrixHTML0.getAverage(0);
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(Double.NaN, double0, 0.01);
      
      int int0 = ResultMatrix.SIGNIFICANCE_WIN;
      ResultMatrixHTML.main(stringArray0);
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(18, stringArray0.length);
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
  }

  /**
  //Test case number: 184
  /*Coverage entropy=3.507129807329839
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.printColNamesTipText();
      assertEquals("Whether to output column names or just numbers representing them.", string0);
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 185
  /*Coverage entropy=2.5805376244873655
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.setSize(6, 6);
      assertEquals(6, resultMatrixHTML0.getVisibleColCount());
  }

  /**
  //Test case number: 186
  /*Coverage entropy=2.762136040901145
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setMeanWidth((-743));
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      double double0 = resultMatrixHTML1.getAverage((-2488));
      assertEquals(0.0, double0, 0.01);
      
      int int0 = resultMatrixHTML1.getVisibleColCount();
      assertEquals(0, resultMatrixHTML1.getCountWidth());
      assertEquals(1, int0);
      assertTrue(resultMatrixHTML1.getEnumerateColNames());
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
      assertEquals(0, resultMatrixHTML1.getMeanWidth());
      assertEquals(0, resultMatrixHTML1.getStdDevWidth());
      assertEquals(0, resultMatrixHTML1.getSignificanceWidth());
      assertEquals(25, resultMatrixHTML1.getRowNameWidth());
      assertEquals(2, resultMatrixHTML1.getStdDevPrec());
      assertFalse(resultMatrixHTML1.getDefaultShowAverage());
  }

  /**
  //Test case number: 187
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getAverage((-4517));
      boolean boolean0 = resultMatrixSignificance0.isAverage(1360);
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getDefaultMeanWidth());
      assertEquals(0, resultMatrixSignificance0.getDefaultSignificanceWidth());
      assertFalse(boolean0);
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
  }

  /**
  //Test case number: 188
  /*Coverage entropy=2.8428806153171315
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 26);
      int[][] intArray0 = new int[1][0];
      resultMatrixHTML0.setMeanPrec(26);
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.setStdDevWidth(26);
      assertEquals(26, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 189
  /*Coverage entropy=3.1253243271306963
  */
  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 0);
      resultMatrixSignificance0.setPrintRowNames(false);
      resultMatrixSignificance0.getColHidden(19);
      resultMatrixSignificance0.setRowName(0, "");
      resultMatrixSignificance0.getRowHidden(2);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 2;
      resultMatrixSignificance1.setRowOrder(intArray0);
      resultMatrixSignificance0.stdDevWidthTipText();
      assertFalse(resultMatrixSignificance0.getDefaultEnumerateRowNames());
      assertTrue(resultMatrixSignificance0.getEnumerateRowNames());
  }

  /**
  //Test case number: 190
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertFalse(resultMatrixLatex0.getShowStdDev());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.setRowName(2, "^_k%_\"e3X*7");
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setRowOrder(intArray0);
      resultMatrixSignificance0.stdDevWidthTipText();
      assertFalse(resultMatrixSignificance0.getDefaultRemoveFilterName());
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 191
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[0];
      resultMatrixPlainText0.getRowHidden(1486);
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 192
  /*Coverage entropy=3.411121681339632
  */
  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setMeanWidth(98);
      resultMatrixHTML0.setMeanWidth(98);
      resultMatrixHTML0.getAverage((-511));
      int int0 = resultMatrixHTML0.getVisibleColCount();
      assertEquals(1, int0);
      
      ResultMatrixCSV.main((String[]) null);
      resultMatrixHTML0.toStringRanking();
      resultMatrixHTML0.toStringRanking();
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
  }

  /**
  //Test case number: 193
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(5, 5);
      resultMatrixSignificance0.setMean(5, 1351, (-3447.69212736));
      assertEquals(5, resultMatrixSignificance0.getColCount());
      assertFalse(resultMatrixSignificance0.getDefaultRemoveFilterName());
      assertEquals(5, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 194
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertFalse(resultMatrixCSV0.getShowStdDev());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setPrintRowNames(true);
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setRowOrder(intArray0);
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
  }

  /**
  //Test case number: 195
  /*Coverage entropy=2.7458535301741085
  */
  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getColHidden(5);
      String[] stringArray0 = new String[1];
  }

  /**
  //Test case number: 196
  /*Coverage entropy=3.056384991694323
  */
  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[6];
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      Vector<Object> vector0 = new Vector<Object>();
      booleanArray0[5] = false;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 3);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 197
  /*Coverage entropy=4.430816798843309
  */
  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.significanceWidthTipText();
      resultMatrixGnuPlot0.setEnumerateRowNames(false);
      resultMatrixGnuPlot0.setColHidden(1, false);
      resultMatrixGnuPlot0.setPrintRowNames(false);
      String[] stringArray0 = new String[1];
      stringArray0[0] = " ";
      resultMatrixGnuPlot0.setOptions(stringArray0);
      resultMatrixGnuPlot0.toArray();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.padString("", 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot(0, 876);
      resultMatrixGnuPlot2.setPrintColNames(true);
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot3 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot3.setOptions(stringArray0);
      assertEquals(50, resultMatrixGnuPlot3.getColNameWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex1.toStringRanking();
      resultMatrixLatex0.printColNamesTipText();
      resultMatrixLatex0.setEnumerateRowNames(true);
      String string0 = resultMatrixGnuPlot0.getColName(0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 198
  /*Coverage entropy=2.6316121865953988
  */
  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.setColNameWidth(1);
      resultMatrixPlainText0.getDefaultCountWidth();
      assertEquals(1, resultMatrixPlainText0.getColNameWidth());
  }

  /**
  //Test case number: 199
  /*Coverage entropy=3.1690190686939794
  */
  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 1;
      resultMatrixSignificance0.setColOrder(intArray0);
      assertTrue(resultMatrixSignificance0.getPrintColNames());
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(5, resultMatrixSignificance0.getCountWidth());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.TIE_STRING = " ";
      resultMatrixHTML0.setMeanWidth((-701));
      resultMatrixHTML0.getAverage(1);
      int int0 = resultMatrixHTML0.getVisibleColCount();
      assertEquals(1, int0);
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      
      resultMatrixPlainText0.setColHidden(1511, true);
      resultMatrixHTML1.getRowCount();
      assertFalse(resultMatrixHTML1.getShowStdDev());
  }

  /**
  //Test case number: 200
  /*Coverage entropy=3.571868883314915
  */
  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      
      String[] stringArray0 = new String[0];
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.setOptions(stringArray0);
      resultMatrixHTML0.significanceWidthTipText();
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertFalse(resultMatrixHTML0.getPrintColNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
  }

  /**
  //Test case number: 201
  /*Coverage entropy=2.6535021567160118
  */
  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      String string0 = resultMatrixPlainText0.doubleToString(2, 1);
      assertEquals("2.0", string0);
      
      resultMatrixHTML0.assign(resultMatrixPlainText0);
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertFalse(resultMatrixHTML0.getShowStdDev());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertFalse(resultMatrixHTML0.getShowAverage());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertFalse(resultMatrixLatex0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 202
  /*Coverage entropy=3.561176523837603
  */
  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        resultMatrixHTML0.doubleToString((-3020.0), (-1309));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 203
  /*Coverage entropy=3.4596339812355787
  */
  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[0];
      resultMatrixHTML0.m_PrintColNames = false;
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixHTML0.setCount(0, 2);
      resultMatrixHTML0.enumerateRowNamesTipText();
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(0, resultMatrixHTML0.getDefaultStdDevWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 204
  /*Coverage entropy=3.2444926304072967
  */
  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      
      resultMatrixHTML0.getAverage(2);
      int int0 = resultMatrixHTML0.getVisibleColCount();
      assertEquals(1, int0);
      
      String string0 = resultMatrixHTML0.getColName(90);
      assertNull(string0);
      assertEquals(1, resultMatrixHTML0.getRowCount());
  }

  /**
  //Test case number: 205
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 26);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.addHeader((String) null, "~TS}_>R");
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV1.getHeader(" ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 206
  /*Coverage entropy=3.1113968379912524
  */
  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixLatex0.assign(resultMatrixSignificance0);
      resultMatrixSignificance0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixLatex0.LEFT_PARENTHESES = "$circ$";
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setMeanWidth(1511);
      resultMatrixPlainText0.getColName(0);
      resultMatrixHTML0.getAverage(2);
      int int0 = resultMatrixHTML0.getVisibleColCount();
      assertEquals(1, int0);
      
      resultMatrixPlainText0.setColHidden(0, true);
      assertEquals(0, resultMatrixPlainText0.getVisibleColCount());
  }

  /**
  //Test case number: 207
  /*Coverage entropy=3.189550866482298
  */
  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.globalInfo();
      resultMatrixCSV0.setMeanPrec((-26));
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
  }

  /**
  //Test case number: 208
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 209
  /*Coverage entropy=3.1509699624985004
  */
  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getRowName(0);
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
  }

  /**
  //Test case number: 210
  /*Coverage entropy=2.4618997385678365
  */
  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[3][3];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[5];
      intArray2[0] = 2;
      intArray2[1] = 1;
      intArray2[2] = 1;
      intArray2[3] = 0;
      intArray2[4] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[0];
      intArray0[2] = intArray3;
      resultMatrixHTML0.m_NonSigWins = intArray0;
      resultMatrixHTML0.m_ShowAverage = true;
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 211
  /*Coverage entropy=2.670473769392508
  */
  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(6, 6);
      int[][] intArray0 = new int[5][0];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      boolean boolean0 = resultMatrixCSV0.isStdDev(2);
      assertFalse(boolean0);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.globalInfo();
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(6, resultMatrixLatex0.getVisibleColCount());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
  }

  /**
  //Test case number: 212
  /*Coverage entropy=2.7589950955642646
  */
  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setRowOrder(intArray0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 213
  /*Coverage entropy=2.9470047701612976
  */
  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      int[] intArray0 = new int[9];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(47, 0);
      boolean boolean0 = resultMatrixGnuPlot0.isAverage(47);
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertFalse(boolean0);
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
      assertEquals(47, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 214
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int int0 = resultMatrixHTML0.getDisplayRow((-2447));
      assertEquals((-1), int0);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      String string0 = resultMatrixLatex0.toStringKey();
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption (Key)}\n\\scriptsize\n{\\centering\n\\begin{tabular}{cl}\\\\\n(1) & col0 \\\\\n\\end{tabular}\n}\n\\end{table}\n", string0);
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
  }

  /**
  //Test case number: 215
  /*Coverage entropy=3.2743324740937747
  */
  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixHTML0.clear();
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 216
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      int[] intArray0 = new int[0];
      resultMatrixSignificance0.setColOrder(intArray0);
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getColCount());
  }

  /**
  //Test case number: 217
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRowName(97);
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 218
  /*Coverage entropy=3.5194890385129485
  */
  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixLatex.main(stringArray0);
      assertEquals(0, stringArray0.length);
  }

  /**
  //Test case number: 219
  /*Coverage entropy=3.4812329012959573
  */
  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      ResultMatrixPlainText.main((String[]) null);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getRevision();
      resultMatrixCSV0.getColOrder();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 220
  /*Coverage entropy=2.8428806153171315
  */
  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.addHeader(")", " ");
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[4];
      intArray0[0] = (-1602);
      int[][] intArray1 = new int[2][8];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 221
  /*Coverage entropy=2.7458535301741085
  */
  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[1][2];
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 222
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultShowStdDev();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 0);
      resultMatrixHTML0.toStringRanking();
      assertEquals(2, resultMatrixHTML0.getVisibleColCount());
      assertFalse(resultMatrixHTML0.getDefaultRemoveFilterName());
      assertFalse(resultMatrixHTML0.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixHTML0.getDefaultCountWidth());
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
  }

  /**
  //Test case number: 223
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = " ";
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSize((-3475), 2265);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 224
  /*Coverage entropy=3.967742041308413
  */
  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getRowName(97);
      resultMatrixHTML0.m_RowNameWidth = (-98);
      resultMatrixHTML0.getRowName((-98));
      resultMatrixHTML0.getStdDevPrec();
      resultMatrixHTML0.getDisplayName();
      String[] stringArray0 = new String[0];
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      boolean boolean0 = false;
      resultMatrixCSV0.m_EnumerateRowNames = false;
      resultMatrixCSV0.globalInfo();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.setMeanWidth(39);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSize(0, (-640));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 225
  /*Coverage entropy=3.2437383599150444
  */
  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.clearHeader();
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      assertEquals(18, stringArray0.length);
      
      String[][] stringArray1 = resultMatrixHTML0.toArray();
      assertEquals(3, stringArray1.length);
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 226
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateRowNames(false);
      resultMatrixCSV0.addHeader(")", " ");
      resultMatrixCSV0.getHeader(")");
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertFalse(resultMatrixCSV0.getShowStdDev());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getDefaultShowAverage());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 227
  /*Coverage entropy=2.631612186595399
  */
  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 26);
      int[] intArray0 = new int[3];
      intArray0[2] = 26;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.setSignificanceWidth(26);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("v");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 228
  /*Coverage entropy=2.631612186595399
  */
  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixLatex0.assign(resultMatrixSignificance0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader(" ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 229
  /*Coverage entropy=3.2128189783784378
  */
  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setEnumerateRowNames(true);
      resultMatrixHTML0.LOSS_STRING = "5.7 < 5.70001 ? ";
      resultMatrixHTML0.setOptions(stringArray0);
      assertEquals(0, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 230
  /*Coverage entropy=3.3068849378916276
  */
  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setStdDevWidth(18);
      resultMatrixHTML0.getOptions();
      assertEquals(18, resultMatrixHTML0.getStdDevWidth());
  }

  /**
  //Test case number: 231
  /*Coverage entropy=3.0370801618679657
  */
  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_RemoveFilterName = true;
      resultMatrixGnuPlot0.LEFT_PARENTHESES = "[!(P:#}0";
      resultMatrixGnuPlot0.getRowNameWidth();
      resultMatrixGnuPlot0.getShowAverage();
      resultMatrixGnuPlot0.setStdDev(50, 50, 10.0);
      resultMatrixGnuPlot0.setSignificanceWidth((-630));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.m_MeanPrec = 2;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 232
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setEnumerateColNames(false);
      resultMatrixPlainText0.clearHeader();
      resultMatrixPlainText0.getDisplayName();
      assertFalse(resultMatrixPlainText0.getEnumerateColNames());
  }

  /**
  //Test case number: 233
  /*Coverage entropy=3.559502735548486
  */
  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixGnuPlot.main(stringArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setShowStdDev(true);
      resultMatrixHTML0.setOptions(stringArray0);
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 234
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.isSignificance((-3912));
      resultMatrixGnuPlot0.getDefaultShowStdDev();
      resultMatrixGnuPlot0.rowNameWidthTipText();
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
  }

  /**
  //Test case number: 235
  /*Coverage entropy=2.9746844484603128
  */
  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixLatex0.assign(resultMatrixSignificance0);
      resultMatrixLatex0.stdDevPrecTipText();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.getSignificanceCount(1511, (-1075));
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getRemoveFilterName();
      resultMatrixCSV0.isSignificance(0);
      resultMatrixSignificance0.setShowStdDev(false);
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(0, resultMatrixSignificance0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 236
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(25, 6);
      int int0 = resultMatrixHTML0.getSignificanceCount((-2), 25);
      assertEquals(0, int0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(6, resultMatrixCSV0.getVisibleRowCount());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(25, resultMatrixCSV0.getVisibleColCount());
  }

  /**
  //Test case number: 237
  /*Coverage entropy=3.189550866482298
  */
  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.globalInfo();
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 238
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setShowAverage(true);
      assertTrue(resultMatrixGnuPlot0.getShowAverage());
      
      resultMatrixGnuPlot0.clear();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 239
  /*Coverage entropy=3.4812329012959573
  */
  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[1];
      resultMatrixHTML0.setShowStdDev(false);
      stringArray0[0] = "v";
      ResultMatrixPlainText.main(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  /**
  //Test case number: 240
  /*Coverage entropy=2.8322602295395347
  */
  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringKey();
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.globalInfo();
      resultMatrixPlainText0.setRowNameWidth(2);
      assertEquals(2, resultMatrixPlainText0.getRowNameWidth());
  }

  /**
  //Test case number: 241
  /*Coverage entropy=2.8004698251768687
  */
  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[2];
      intArray0[1] = 0;
      resultMatrixSignificance0.setColOrder(intArray0);
      assertTrue(resultMatrixSignificance0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
  }

  /**
  //Test case number: 242
  /*Coverage entropy=2.5986051779973063
  */
  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 26);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      int[] intArray0 = new int[0];
      resultMatrixSignificance0.setRowOrder(intArray0);
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(26, resultMatrixSignificance0.getRowCount());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(26, resultMatrixSignificance0.getColCount());
  }

  /**
  //Test case number: 243
  /*Coverage entropy=2.85263795627358
  */
  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      int int0 = resultMatrixHTML1.getSignificanceCount(2, 0);
      assertEquals(0, int0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV0.globalInfo();
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 244
  /*Coverage entropy=3.075220548054372
  */
  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getColCount());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertFalse(resultMatrixSignificance0.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 245
  /*Coverage entropy=2.996306798305616
  */
  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowNameWidth(2);
      resultMatrixPlainText0.setColName(0, "v");
      assertEquals(2, resultMatrixPlainText0.getRowNameWidth());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixSignificance0.isStdDev((-1751));
      assertEquals(1, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 246
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setMeanPrec((-220));
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(2449, 1);
      resultMatrixGnuPlot1.setRowNameWidth(25);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot1);
      resultMatrixHTML0.getRevision();
      boolean boolean0 = resultMatrixHTML0.isStdDev(0);
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertTrue(resultMatrixHTML0.getPrintColNames());
      assertEquals(2449, resultMatrixGnuPlot1.getColCount());
      assertFalse(boolean0);
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
  }

  /**
  //Test case number: 247
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setMeanWidth(0);
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setRowOrder(intArray0);
      assertEquals(0, resultMatrixSignificance0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
  }

  /**
  //Test case number: 248
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 26);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML0.setMeanWidth(1);
      assertEquals(1, resultMatrixHTML0.getMeanWidth());
      
      double double0 = resultMatrixHTML1.getAverage(1);
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 249
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      String[] stringArray0 = new String[1];
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      try { 
        resultMatrixHTML0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 250
  /*Coverage entropy=3.405764794763148
  */
  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.setMeanWidth(23);
      resultMatrixHTML0.getAverage(23);
      resultMatrixHTML0.getVisibleColCount();
      resultMatrixHTML0.toStringSummary();
      assertEquals(23, resultMatrixHTML0.getMeanWidth());
  }
}
