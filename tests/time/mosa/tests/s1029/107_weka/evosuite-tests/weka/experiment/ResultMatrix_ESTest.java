/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 12:16:16 GMT 2019
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.020056464274406
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      int[][] intArray0 = new int[5][6];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(3, 25);
      resultMatrixSignificance0.getDefaultColNameWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
  }

  /**
  //Test case number: 1
  /*Coverage entropy=4.014192596410467
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 97);
      resultMatrixHTML0.TIE_STRING = "*";
      resultMatrixHTML0.meanWidthTipText();
      resultMatrixHTML0.getSignificanceCount(1, 26);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixHTML0.getSignificance(24, 15);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "*";
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixCSV0.globalInfo();
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.6325702393209625
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(103, 26);
      resultMatrixGnuPlot0.m_ShowAverage = false;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 2);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRowName((-960));
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      // Undeclared exception!
      resultMatrixGnuPlot0.toStringRanking();
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.798240008544246
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowStdDev(false);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setShowAverage(false);
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.padString("$\bullet$", (-2149), true);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.toStringSummary();
      resultMatrixLatex0.getStdDev(0, 46);
      resultMatrixLatex2.getColName(0);
      int[] intArray0 = new int[3];
      intArray0[0] = 115;
      intArray0[1] = 1386;
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex2.toArray();
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.9812525030051047
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[2] = "n{v^y>7yh%#v&ec.,1";
      stringArray0[3] = "a$Lr6l#Y!B7 ";
      stringArray0[4] = "*8Ea7t{lb";
      ResultMatrixGnuPlot.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setShowAverage(false);
      resultMatrixPlainText0.toStringKey();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.toStringSummary();
      resultMatrixLatex0.getStdDev(0, 1);
      resultMatrixLatex0.getColName(115);
      resultMatrixLatex0.removeFilterName("-@3G84[S_t");
      try { 
        resultMatrixLatex0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=4.263764820548965
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.removeFilterName("");
      resultMatrixSignificance0.m_MeanWidth = (-1028);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance0.setSignificance((-798), 100, 1);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = " ";
      stringArray0[2] = "";
      ResultMatrixLatex.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.2079672327165367
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.setEnumerateRowNames(true);
      resultMatrixGnuPlot0.setColHidden(59, true);
      int[][] intArray0 = new int[1][9];
      int[] intArray1 = new int[6];
      intArray1[0] = 0;
      intArray1[1] = 59;
      intArray1[2] = 1;
      intArray1[3] = 0;
      intArray1[4] = 59;
      intArray1[5] = 585;
      intArray0[0] = intArray1;
      resultMatrixCSV0.m_Wins = intArray0;
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV0.trimString("[", 1);
      resultMatrixGnuPlot0.getRevision();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.globalInfo();
  }

  /**
  //Test case number: 7
  /*Coverage entropy=4.162339152242112
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.meanWidthTipText();
      resultMatrixHTML0.getSignificanceCount((-284), (-284));
      resultMatrixHTML0.meanPrecTipText();
      resultMatrixHTML0.setStdDevWidth(77);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setRowNameWidth(1);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixCSV0.getOptions();
      resultMatrixSignificance0.getMean(2, 0);
      resultMatrixCSV0.toArray();
  }

  /**
  //Test case number: 8
  /*Coverage entropy=4.052615299748439
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(97, 15);
      String[] stringArray0 = resultMatrixLatex0.getOptions();
      resultMatrixLatex0.getDefaultStdDevWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setColNameWidth(0);
      resultMatrixLatex0.setStdDevWidth((-4025));
      resultMatrixCSV0.toStringKey();
      ResultMatrixLatex.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      resultMatrixPlainText0.m_EnumerateColNames = true;
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.setStdDevPrec(1);
      resultMatrixPlainText0.m_ShowAverage = false;
      resultMatrixPlainText0.headerKeys();
      resultMatrixLatex0.isAverage(0);
      // Undeclared exception!
      resultMatrixLatex0.toString();
  }

  /**
  //Test case number: 9
  /*Coverage entropy=4.109947038857818
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixLatex0.assign(resultMatrixSignificance0);
      resultMatrixLatex0.stdDevPrecTipText();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixSignificance0.m_HeaderKeys = null;
      resultMatrixPlainText0.m_PrintRowNames = true;
      resultMatrixSignificance0.getRevision();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(resultMatrixSignificance1);
      resultMatrixSignificance2.toStringSummary();
      resultMatrixSignificance2.getMean((-1230), (-328));
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.getDefaultSignificanceWidth();
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.542229808889447
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 97);
      resultMatrixHTML0.TIE_STRING = "*";
      resultMatrixHTML0.meanWidthTipText();
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      resultMatrixHTML0.setMeanWidth(26);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(26, 0);
      resultMatrixHTML0.setStdDev(59, 0, (-153.1770133));
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.getMean(0, 1404);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=4.083193205557088
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(5, 2);
      resultMatrixLatex0.stdDevPrecTipText();
      resultMatrixLatex0.clearRanking();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.m_StdDevWidth = 2;
      resultMatrixSignificance0.m_EnumerateColNames = false;
      String[] stringArray0 = new String[0];
      resultMatrixSignificance0.m_RowNames = stringArray0;
      resultMatrixLatex0.setShowStdDev(true);
      resultMatrixSignificance0.getColName(5);
      resultMatrixSignificance0.getRowName(1);
      resultMatrixSignificance0.globalInfo();
      resultMatrixLatex0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(12, 3331);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=4.082246673825067
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowStdDev(false);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.toStringMatrix();
      resultMatrixLatex1.setMeanWidth(18);
      resultMatrixLatex1.listOptions();
      resultMatrixLatex1.setColName(3316, "-count-width");
      resultMatrixLatex0.getAverage(0);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=4.020609948879159
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[2] = "n{v^y>7yh%#v&ec.,1";
      stringArray0[3] = "a$Lr6l#Y!B7 ";
      stringArray0[4] = "*8Ea7t{lb";
      ResultMatrixGnuPlot.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixLatex0.toString();
      resultMatrixPlainText0.setShowAverage(false);
      resultMatrixPlainText0.toStringKey();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.toStringSummary();
      resultMatrixLatex0.getStdDev(0, (-661));
      resultMatrixLatex0.m_ShowStdDev = true;
      resultMatrixHTML0.getEnumerateRowNames();
      resultMatrixHTML0.toStringMatrix();
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.865676488400304
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.setMeanWidth(0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(3284, 0);
      int[][] intArray0 = new int[1][7];
      int[] intArray1 = new int[4];
      intArray1[0] = 1;
      resultMatrixLatex0.RIGHT_PARENTHESES = ")";
      intArray1[1] = 1;
      intArray1[2] = 0;
      intArray1[3] = 3284;
      intArray0[0] = intArray1;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setSummary(intArray0, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.2393339981643923
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_ShowAverage = false;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColHidden(1770, true);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.trimString((String) null, 1770);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=4.1316458732800365
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      Integer integer0 = new Integer(2592);
      resultMatrixCSV0.setOptions((String[]) null);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(0, 1886);
      resultMatrixCSV1.clear();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.setRowNameWidth(1715);
      resultMatrixHTML0.getSignificance(1, 2);
      ResultMatrixSignificance.main((String[]) null);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 2);
      resultMatrixLatex0.clear();
      resultMatrixGnuPlot0.toStringMatrix();
      // Undeclared exception!
      try { 
        resultMatrixCSV1.doubleToString(0.0, (-1850));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.1257298336542223
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.setEnumerateRowNames(true);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.trimString("-show-stddev", (-494));
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.522499666692321
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML0.getSignificanceCount(3, 25);
      int[][] intArray0 = new int[5][6];
      int[] intArray1 = new int[2];
      intArray1[0] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 0;
      intArray2[2] = 0;
      intArray2[3] = 0;
      intArray0[1] = intArray2;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=4.213503470189014
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = ">";
      stringArray0[1] = "$circ$";
      stringArray0[2] = ") - ignored!";
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 0;
      resultMatrixSignificance0.m_RankingWins = intArray0;
      stringArray0[3] = "$circ$";
      stringArray0[4] = " ";
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixSignificance0.setOptions(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.getDefaultShowAverage();
      resultMatrixSignificance0.enumerateColNamesTipText();
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.200376336618864
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 97);
      resultMatrixHTML0.TIE_STRING = "*";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.padString("*", 26, true);
      resultMatrixHTML0.setRowHidden(0, true);
      resultMatrixHTML0.significanceWidthTipText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot((-3073), 3251);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.754911824645687
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixLatex0.assign(resultMatrixSignificance0);
      resultMatrixLatex0.stdDevPrecTipText();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_PrintRowNames = true;
      resultMatrixSignificance0.getRevision();
      resultMatrixPlainText0.addHeader("The number of decimals after the decimal point for the standard deviation.", " ");
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.globalInfo();
      resultMatrixCSV0.trimString("", 2);
      resultMatrixSignificance0.stdDevWidthTipText();
      resultMatrixPlainText0.rowNameWidthTipText();
  }

  /**
  //Test case number: 22
  /*Coverage entropy=4.251397596849111
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      resultMatrixHTML0.meanPrecTipText();
      resultMatrixHTML0.setStdDevWidth((-1058));
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.setRowNameWidth((-1058));
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixCSV resultMatrixCSV3 = new ResultMatrixCSV(0, 1030);
      String[][] stringArray1 = new String[3][9];
      stringArray1[0] = stringArray0;
      String[] stringArray2 = new String[8];
      stringArray2[0] = "]";
      stringArray2[1] = " ";
      stringArray2[2] = " ";
      stringArray2[3] = "[";
      stringArray2[4] = "QN''3*R96< tvH";
      stringArray2[5] = "[";
      stringArray2[6] = "v";
      stringArray2[7] = " ";
      stringArray1[1] = stringArray2;
      stringArray1[2] = stringArray0;
      resultMatrixCSV1.getColSize(stringArray1, 2894, true, true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 25);
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixCSV1.isMean((-1058));
      resultMatrixCSV3.setOptions(stringArray0);
      resultMatrixCSV2.clear();
      resultMatrixCSV1.isAverage((-22));
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.764415153017615
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clearRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 104);
      resultMatrixLatex0.getRevision();
      resultMatrixLatex0.padString("(", 1, false);
      resultMatrixHTML0.setRowHidden(1, false);
      resultMatrixLatex0.toStringSummary();
      resultMatrixHTML0.toString();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot((-1), 2);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=4.022299262970009
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.meanWidthTipText();
      resultMatrixHTML0.getSignificanceCount((-284), (-284));
      resultMatrixHTML0.meanPrecTipText();
      resultMatrixHTML0.setStdDevWidth(77);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setRowNameWidth(1);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixCSV0.getOptions();
      resultMatrixSignificance0.setShowStdDev(false);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixSignificance0.getColHidden((-900));
  }

  /**
  //Test case number: 25
  /*Coverage entropy=4.133117092046724
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.setEnumerateRowNames(true);
      resultMatrixGnuPlot0.setColHidden(2, true);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "[";
      stringArray0[1] = " ";
      stringArray0[2] = "";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1168, 1);
      resultMatrixSignificance0.setMean(97, (-884), 1);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=4.081391278881643
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getSignificanceCount((-1011), 578);
      resultMatrixHTML0.meanPrecTipText();
      resultMatrixHTML0.setStdDevWidth((-1011));
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.setRowNameWidth((-1542));
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(resultMatrixCSV1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV1);
      resultMatrixCSV2.getOptions();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.setShowStdDev(true);
      resultMatrixCSV0.setRowOrder((int[]) null);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.4020987039774067
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(123, 26);
      resultMatrixGnuPlot0.m_ShowAverage = false;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 2);
      resultMatrixGnuPlot0.setEnumerateRowNames(true);
      resultMatrixGnuPlot0.setColHidden(0, true);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.trimString("8D9@/ig,d'jZ>wJ", 139);
      resultMatrixLatex0.getSignificanceWidth();
  }

  /**
  //Test case number: 28
  /*Coverage entropy=4.137575184946431
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.setMeanWidth(0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(3284, 0);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixLatex0.m_RankingWins = intArray0;
      int[][] intArray1 = new int[1][7];
      int[] intArray2 = new int[4];
      intArray2[0] = 1;
      intArray2[1] = 1;
      intArray2[2] = 0;
      intArray2[3] = 3284;
      intArray1[0] = intArray2;
      resultMatrixHTML0.setSummary(intArray1, intArray1);
      resultMatrixHTML0.setStdDev(3378, 0, 2261.88200763554);
      // Undeclared exception!
      resultMatrixLatex0.toString();
  }

  /**
  //Test case number: 29
  /*Coverage entropy=4.186233951468438
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      resultMatrixHTML0.meanWidthTipText();
      resultMatrixHTML0.getSignificanceCount(1, 1);
      resultMatrixHTML0.meanPrecTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.getDefaultEnumerateColNames();
      String[][] stringArray1 = new String[2][9];
      stringArray1[0] = stringArray0;
      stringArray1[1] = stringArray0;
      resultMatrixCSV0.getColSize(stringArray1, 95);
      resultMatrixCSV0.colNameWidthTipText();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML1.getRevision();
      // Undeclared exception!
      try { 
        resultMatrixHTML1.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.840959413209771
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.meanWidthTipText();
      resultMatrixHTML0.getSignificanceCount((-284), (-284));
      resultMatrixHTML0.meanPrecTipText();
      resultMatrixHTML0.setStdDevWidth(77);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setRowNameWidth(1);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixCSV0.getOptions();
      int[] intArray0 = new int[7];
      intArray0[0] = 1;
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixHTML0.getDefaultPrintColNames();
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.5847133394342636
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 66);
      int[][] intArray0 = new int[17][3];
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixHTML0.clearSummary();
      resultMatrixHTML0.meanWidthTipText();
      resultMatrixHTML0.setStdDev(26, 66, 66);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.4255215723825683
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.m_HeaderValues = null;
      resultMatrixCSV0.globalInfo();
      resultMatrixCSV0.getMeanWidth();
  }

  /**
  //Test case number: 33
  /*Coverage entropy=4.110433477036148
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.setEnumerateRowNames(true);
      int int0 = (-2326);
      resultMatrixGnuPlot0.setColHidden((-2326), true);
      resultMatrixGnuPlot0.toArray();
      int int1 = (-1361);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.padString((String) null, 97);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=4.328575719357869
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      resultMatrixHTML0.setMeanWidth(0);
      ResultMatrixGnuPlot.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setShowAverage(true);
      resultMatrixPlainText0.toStringKey();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.toStringSummary();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(2, 2);
      resultMatrixLatex1.getStdDev(2, 0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.967804923748427
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[2] = "n{v^y>7yh%#v&ec.,1";
      stringArray0[3] = "a$Lr6l#Y!B7 ";
      stringArray0[4] = "*8Ea7t{lb";
      ResultMatrixGnuPlot.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setShowAverage(false);
      resultMatrixPlainText0.toStringKey();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.toStringSummary();
      resultMatrixLatex0.getStdDev(0, (-661));
      resultMatrixHTML0.getEnumerateRowNames();
  }

  /**
  //Test case number: 36
  /*Coverage entropy=4.110849146312222
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 66);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML0.getSignificance(37, 37);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "(";
      stringArray0[1] = "v";
      stringArray0[2] = "(";
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixCSV0.globalInfo();
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.224393730168732
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[2] = "n{v^y>7yh%#v&ec.,1";
      stringArray0[3] = "a$Lr6l#Y!B7 ";
      Integer integer0 = new Integer(2692);
      Vector<Integer> vector0 = new Vector<Integer>(2692);
      Integer integer1 = new Integer(87);
      vector0.add(integer1);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 349);
      // Undeclared exception!
      resultMatrixCSV0.setSize(87, 3545);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.255599030619244
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML0.getRowName(2722);
      resultMatrixHTML0.getSignificanceCount(3, 25);
      int[][] intArray0 = new int[5][6];
      int[] intArray1 = new int[2];
      intArray1[0] = 0;
      intArray0[0] = intArray1;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringRanking();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRowName(1);
      resultMatrixGnuPlot0.setEnumerateRowNames(false);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixHTML0.toStringSummary();
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.773057421324253
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(5, 5);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 15);
      resultMatrixGnuPlot0.setColHidden(15, false);
      resultMatrixGnuPlot0.toArray();
      resultMatrixGnuPlot0.padString("", 15);
      resultMatrixGnuPlot0.getDefaultRemoveFilterName();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(1, 1);
      resultMatrixLatex1.toStringRanking();
      resultMatrixLatex1.printColNamesTipText();
      resultMatrixLatex0.setEnumerateRowNames(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.getColName(0);
      assertEquals(50, resultMatrixGnuPlot1.getRowNameWidth());
      assertEquals(1, resultMatrixGnuPlot1.getVisibleRowCount());
      assertFalse(resultMatrixGnuPlot1.getShowStdDev());
      assertEquals(50, resultMatrixGnuPlot1.getColNameWidth());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=4.108592331248877
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.setMeanWidth(0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(3284, 0);
      assertEquals(0, resultMatrixLatex0.getVisibleRowCount());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.setStdDev(1, 0, 0);
      resultMatrixCSV0.getDefaultShowAverage();
      resultMatrixHTML1.headerKeys();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.6750598183718983
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 1;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setCountWidth(2);
      resultMatrixPlainText0.setShowAverage(true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getRevision();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.toStringSummary();
      resultMatrixPlainText0.rowNameWidthTipText();
      assertTrue(resultMatrixPlainText0.getShowAverage());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.2100836348329387
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      
      resultMatrixGnuPlot0.setEnumerateRowNames(true);
      resultMatrixGnuPlot0.setColHidden(2, true);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      assertTrue(resultMatrixGnuPlot0.getEnumerateRowNames());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.setStdDev(2, 28, 0.0);
      boolean boolean0 = resultMatrixCSV0.getDefaultShowAverage();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.1921389452469358
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 66);
      int[] intArray0 = new int[3];
      intArray0[0] = 66;
      intArray0[1] = 26;
      intArray0[2] = 66;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.setEnumerateRowNames(true);
      resultMatrixGnuPlot0.setColHidden(26, true);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      String string0 = resultMatrixCSV0.trimString("", (-721));
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals("", string0);
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(66, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=4.031286319687961
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[1] = "n{v^y>7yh%#v&ec.,1";
      stringArray0[2] = "F";
      stringArray0[3] = "a$Lr6l#Y!B7 ";
      stringArray0[4] = "*8Ea7t{lb";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.setMean(12, 2, 1);
      resultMatrixSignificance0.getColCount();
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      
      resultMatrixPlainText0.getRevision();
      assertFalse(resultMatrixPlainText0.getShowAverage());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.487795765617483
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      boolean[] booleanArray0 = new boolean[6];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      Vector<Object> vector0 = new Vector<Object>();
      booleanArray0[4] = false;
      booleanArray0[1] = false;
      resultMatrixSignificance0.m_ColHidden = booleanArray0;
      resultMatrixSignificance0.isSignificance((-628));
      resultMatrixSignificance0.m_MeanPrec = 48;
      resultMatrixSignificance0.setRowName(0, ":8@}'yhpeU'.B ");
      resultMatrixSignificance0.addHeader(":8@}'yhpeU'.B ", "A_WyRFO5Pz$j");
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(48, 393);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.9964993465646472
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 97);
      resultMatrixHTML0.TIE_STRING = "*";
      resultMatrixHTML0.meanWidthTipText();
      resultMatrixHTML0.getSignificanceCount(1, 26);
      resultMatrixHTML0.setMeanWidth(26);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(34, 34);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixHTML0.setStdDev(1, 1974, 1);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML1);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.getMean(1, 3273);
      // Undeclared exception!
      resultMatrixCSV0.toArray();
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.4929496021874633
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      Vector<Object> vector0 = new Vector<Object>();
      Vector<String> vector1 = new Vector<String>();
      vector0.retainAll(vector1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 381);
      resultMatrixCSV0.setShowStdDev(false);
      resultMatrixSignificance0.isSignificance(1857);
      resultMatrixSignificance0.setRowName(1857, "[eRp$!cCe(4O dM6");
      resultMatrixSignificance0.getRowHidden(6);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(3068, 1748);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.806742654714448
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "(";
      stringArray0[1] = "$\bullet$";
      stringArray0[2] = "$circ$";
      stringArray0[3] = "";
      stringArray0[4] = "stddev-prec";
      stringArray0[5] = "$\bullet$";
      stringArray0[6] = " ";
      stringArray0[7] = "";
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixLatex0.addHeader("", "");
      resultMatrixLatex0.toStringRanking();
      int int0 = resultMatrixLatex0.getStdDevPrec();
      assertFalse(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.6767275704009967
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(25, 0);
      boolean[] booleanArray0 = new boolean[6];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixSignificance0.m_HeaderValues = vector0;
      booleanArray0[4] = false;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.padString("*", (-1529));
      resultMatrixPlainText0.toStringKey();
      resultMatrixSignificance0.getColOrder();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setCountWidth((-1529));
      resultMatrixHTML0.globalInfo();
      resultMatrixPlainText0.clearHeader();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getHeader("*");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.631292535256881
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[3];
      stringArray0[0] = " ";
      stringArray0[2] = "v";
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setCountWidth(0);
      resultMatrixPlainText0.setShowAverage(true);
      resultMatrixSignificance0.getRevision();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.toStringSummary();
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.716363262054128
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(5, 5);
      String[] stringArray0 = new String[3];
      stringArray0[0] = " ";
      stringArray0[1] = " ";
      stringArray0[2] = "*";
      resultMatrixSignificance0.setOptions(stringArray0);
      assertEquals(0, resultMatrixSignificance0.getStdDevPrec());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringSummary();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getStdDev(111, 1);
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=4.0792454341826065
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      resultMatrixSignificance0.listOptions();
      intArray0[1] = 0;
      intArray0[2] = 1;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "*";
      stringArray0[1] = " ";
      stringArray0[2] = ")";
      stringArray0[3] = "*";
      resultMatrixSignificance0.m_RowNames = stringArray0;
      intArray0[3] = 0;
      intArray0[4] = 1;
      boolean boolean0 = false;
      resultMatrixSignificance0.m_EnumerateColNames = false;
      resultMatrixSignificance0.m_RankingLosses = intArray0;
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.getStdDev((-224), 1699);
      resultMatrixSignificance0.doubleToString(1699, 1);
      ResultMatrixPlainText resultMatrixPlainText0 = null;
      try {
        resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.590644046983812
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 97);
      resultMatrixHTML0.TIE_STRING = "*";
      resultMatrixHTML0.WIN_STRING = "";
      String string0 = resultMatrixHTML0.meanWidthTipText();
      assertEquals("The width of the mean (0 = optimal).", string0);
      
      int int0 = resultMatrixHTML0.getSignificanceCount(1, 26);
      assertEquals(0, int0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.listOptions();
      resultMatrixCSV0.globalInfo();
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      
      resultMatrixHTML0.getDefaultPrintRowNames();
      assertEquals(97, resultMatrixHTML0.getRowCount());
      assertFalse(resultMatrixHTML0.getDefaultRemoveFilterName());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(26, resultMatrixHTML0.getVisibleColCount());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.2282744338409093
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.getColNameWidth();
      assertEquals(0, resultMatrixHTML0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.0754871194368603
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[2] = "n{v^y>7yh%#v&ec.,1";
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.setStdDevWidth((-1));
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixCSV0);
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixHTML0.getDefaultPrintColNames();
      assertEquals(40, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertFalse(resultMatrixHTML0.getDefaultShowAverage());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=4.322352662558294
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(5, 5);
      String[] stringArray0 = new String[3];
      resultMatrixSignificance0.setPrintColNames(true);
      stringArray0[0] = " ";
      stringArray0[1] = " ";
      stringArray0[2] = "*";
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixSignificance0.setOptions(stringArray0);
      assertFalse(resultMatrixSignificance0.getEnumerateColNames());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=4.137530684301999
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.setEnumerateRowNames(true);
      resultMatrixGnuPlot0.setColHidden(2, false);
      resultMatrixGnuPlot0.toArray();
      resultMatrixGnuPlot0.padString("%aDDwG!chl7vVyS|H", (-1361));
      resultMatrixGnuPlot0.getDefaultRemoveFilterName();
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = new Integer(166);
      vector0.add(integer0);
      resultMatrixCSV0.setSize(1, 186);
      resultMatrixCSV0.toStringRanking();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-ranking data not set-";
      stringArray0[1] = "%aDDwG!chl7vVyS|H";
      stringArray0[2] = "*";
      stringArray0[3] = "uP4E,nu";
      stringArray0[4] = "v";
      stringArray0[5] = "[";
      ResultMatrixHTML.main(stringArray0);
      assertEquals(6, stringArray0.length);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=4.029812496411625
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setSignificanceWidth(17);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixLatex0.assign(resultMatrixSignificance0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.globalInfo();
      ResultMatrixSignificance.main((String[]) null);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.232923716234279
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(43, 43);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      int int0 = resultMatrixHTML0.getSignificanceCount((-958), 4729);
      assertEquals(0, int0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.globalInfo();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getRevision();
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(50, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertTrue(resultMatrixSignificance0.getPrintColNames());
      assertEquals(43, resultMatrixGnuPlot0.getRowCount());
      assertEquals(43, resultMatrixSignificance0.getColCount());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.1699021172713064
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 95);
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = new Integer(9);
      vector0.add((Integer) 1);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSize((-1955), 2380);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.337907707389637
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_ShowStdDev = false;
      resultMatrixHTML0.m_SignificanceWidth = 0;
      resultMatrixHTML0.setEnumerateColNames(false);
      resultMatrixHTML0.m_MeanPrec = 2449;
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.isStdDev(2449);
      resultMatrixHTML0.getShowStdDev();
      assertFalse(resultMatrixHTML0.getEnumerateColNames());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=4.188289135341803
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.setMeanWidth(0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 2);
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.toArray();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.getRowName(95);
      resultMatrixLatex0.clearHeader();
      resultMatrixSignificance0.setColOrder((int[]) null);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance1.getDefaultShowStdDev();
      resultMatrixSignificance0.clear();
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.4204216060693207
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 97);
      resultMatrixHTML0.TIE_STRING = "*";
      resultMatrixHTML0.meanWidthTipText();
      int int0 = resultMatrixHTML0.getSignificanceCount(1, 26);
      assertEquals(0, int0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      
      resultMatrixHTML0.setStdDev(2, 97, 0.0);
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      assertEquals(97, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(26, resultMatrixHTML0.getColCount());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.3976033235452654
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 2;
      resultMatrixGnuPlot0.m_RankingDiff = intArray0;
      resultMatrixGnuPlot0.m_RowOrder = intArray0;
      resultMatrixGnuPlot0.setRowHidden(1103, false);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setRemoveFilterName(false);
      resultMatrixSignificance0.getDefaultPrintColNames();
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertFalse(resultMatrixSignificance0.getDefaultShowAverage());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.5881853105011716
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(123, 26);
      int[][] intArray0 = new int[3][9];
      resultMatrixGnuPlot0.m_ShowAverage = false;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 2);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(5, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.541211179445276
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      int int0 = 5;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(5, 5);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setMeanWidth(2);
      resultMatrixSignificance0.m_SignificanceWidth = 887;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 64);
      int[][] intArray0 = new int[0][2];
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.756055721694953
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.printRowNamesTipText();
      resultMatrixLatex0.clearRanking();
      String string0 = resultMatrixHTML0.padString(")", 0);
      assertEquals(")", string0);
      
      String string1 = resultMatrixLatex0.padString(")", 1, false);
      assertEquals(")", string1);
      
      resultMatrixHTML0.setRowHidden(1, false);
      resultMatrixHTML0.significanceWidthTipText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 8);
      resultMatrixGnuPlot0.LOSS_STRING = "$circ$";
      resultMatrixGnuPlot0.getRevision();
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.globalInfo();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      String string2 = resultMatrixCSV1.trimString("9SX(HZ3Sh$=sx", 0);
      assertEquals("9SX(HZ3Sh$=sx", string2);
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
      assertEquals(8, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      assertEquals(50, resultMatrixCSV1.getRowNameWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultCountWidth();
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertFalse(resultMatrixPlainText0.getDefaultShowAverage());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=4.0025997559600155
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      int int0 = 5;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(5, 5);
      int int1 = 1351;
      String[] stringArray0 = new String[20];
      stringArray0[0] = " ";
      stringArray0[0] = " ";
      stringArray0[2] = "*";
      ResultMatrixSignificance.main(stringArray0);
      try { 
        resultMatrixSignificance0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.567284040117864
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(5, 5);
      String[] stringArray0 = new String[3];
      stringArray0[0] = " ";
      Vector<Object> vector0 = new Vector<Object>();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      vector0.retainAll(linkedList0);
      resultMatrixSignificance0.isSignificance(3273);
      resultMatrixSignificance0.setRowName((-1153), "F3'Xxx%N>(# 8t_6_ZY");
      resultMatrixSignificance0.getRowHidden(3258);
      ResultMatrixHTML resultMatrixHTML0 = null;
      try {
        resultMatrixHTML0 = new ResultMatrixHTML(4935, (-4625));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.5394719326729165
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_EnumerateColNames = true;
      resultMatrixSignificance0.isSignificance((-628));
      String string0 = ":8\\@}'yhpeU'.B ";
      resultMatrixSignificance0.setRowName((-628), "");
      resultMatrixSignificance0.getRowHidden((-628));
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(3457, 2);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.2286443931453856
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_RowNameWidth = 32;
      int int0 = resultMatrixSignificance0.getMeanPrec();
      assertEquals(2, int0);
      
      resultMatrixSignificance0.getDefaultCountWidth();
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertFalse(resultMatrixSignificance0.getDefaultShowAverage());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=4.261133564382504
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[2] = "n{v^y>7yh%#v&ec.,1";
      stringArray0[3] = "a$Lr6l#Y!B7 ";
      stringArray0[4] = "*8Ea7t{lb";
      ResultMatrixGnuPlot.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setShowAverage(false);
      resultMatrixPlainText0.toStringKey();
      resultMatrixLatex0.printColNamesTipText();
      resultMatrixLatex0.setEnumerateRowNames(true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getColName((-505));
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.632138511231163
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_SignificanceWidth = 0;
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 2449;
      intArray0[2] = 0;
      intArray0[3] = (-2358);
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 0;
      intArray0[8] = (-1);
      resultMatrixHTML0.setColOrder(intArray0);
      resultMatrixHTML0.addHeader("", "");
      resultMatrixHTML0.getColName(790);
      resultMatrixHTML0.toStringHeader();
      resultMatrixHTML0.getRowName(1790);
      resultMatrixHTML0.getCount(2449);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowNameWidth((-1));
      resultMatrixLatex0.toStringRanking();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, (-2779));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.2824531984608654
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.getSummaryTitle((-2447));
      assertEquals("^", string0);
      
      int int0 = resultMatrixHTML0.getDisplayRow((-2447));
      assertEquals((-1), int0);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      String string1 = resultMatrixLatex0.toStringKey();
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption (Key)}\n\\scriptsize\n{\\centering\n\\begin{tabular}{cl}\\\\\n(1) & col0 \\\\\n\\end{tabular}\n}\n\\end{table}\n", string1);
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.5582722042913244
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML0.getSignificanceCount(3, 25);
      int[][] intArray0 = new int[5][6];
      int[] intArray1 = new int[2];
      intArray1[0] = 0;
      intArray0[0] = intArray1;
      resultMatrixHTML0.setMeanWidth(3);
      resultMatrixHTML0.getAverage(12);
      resultMatrixHTML0.getVisibleColCount();
      boolean boolean0 = resultMatrixHTML0.isMean(0);
      assertEquals(3, resultMatrixHTML0.getMeanWidth());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=4.08143111317877
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[2] = "n{v^y>7yh%#v&ec.,1";
      stringArray0[3] = "a$Lr6l#Y!B7 ";
      stringArray0[4] = "*8Ea7t{lb";
      ResultMatrixGnuPlot.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setShowAverage(false);
      String string0 = resultMatrixPlainText0.toStringKey();
      assertEquals("Key:\n(1) col0\n", string0);
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.toStringSummary();
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      
      resultMatrixLatex0.getStdDev(0, 1);
      resultMatrixLatex0.getColName(115);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      double double0 = resultMatrixLatex0.getAverage(1);
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=4.050923282728352
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.setMeanWidth(1);
      resultMatrixHTML0.getAverage(722);
      int int0 = resultMatrixHTML0.getVisibleColCount();
      assertEquals(1, resultMatrixHTML0.getMeanWidth());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=4.021097366721427
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixHTML0.setMeanWidth((-3564));
      double double0 = resultMatrixHTML0.getAverage((-3564));
      assertEquals(0.0, double0, 0.01);
      
      int int0 = resultMatrixHTML0.getVisibleColCount();
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(1, int0);
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.488039965861683
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(5, 5);
      Vector<Object> vector0 = new Vector<Object>();
      Vector<String> vector1 = new Vector<String>();
      Vector<String> vector2 = new Vector<String>(vector1);
      vector0.retainAll(vector2);
      resultMatrixSignificance0.isSignificance(0);
      resultMatrixSignificance0.setRowName(3683, "\n");
      resultMatrixSignificance0.getRowHidden(1351);
      ResultMatrixHTML resultMatrixHTML0 = null;
      try {
        resultMatrixHTML0 = new ResultMatrixHTML(1, (-1674));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.414822893183663
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(25, 0);
      boolean[] booleanArray0 = new boolean[6];
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixSignificance0.toStringRanking();
      booleanArray0[4] = false;
      resultMatrixSignificance0.m_ColHidden = booleanArray0;
      resultMatrixSignificance0.setRowName(0, ":8@}'yhpeU'.B ");
      resultMatrixSignificance0.addHeader("", "7");
      assertFalse(resultMatrixSignificance0.getDefaultShowAverage());
      assertEquals(0, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(25, resultMatrixSignificance0.getColCount());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.9804853591436764
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_EnumerateColNames = true;
      resultMatrixSignificance0.setPrintRowNames(true);
      resultMatrixSignificance0.getColHidden(40);
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "38|q)IAV|m,EE";
      stringArray0[1] = "=,0E.I0dSnWbu(I%";
      ResultMatrixLatex.main(stringArray0);
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.getAverage(2);
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.435964402895254
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_EnumerateColNames = true;
      resultMatrixSignificance0.setPrintRowNames(true);
      resultMatrixSignificance0.getColHidden(40);
      resultMatrixSignificance0.setMean(757, 757, (-917.4));
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.96588409498086
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[2] = "n{v^y>7yh%#v&ec.,1";
      stringArray0[3] = "a$Lr6l#Y!B7 ";
      stringArray0[4] = "*8Ea.t{lb";
      ResultMatrixGnuPlot.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setShowAverage(false);
      resultMatrixPlainText0.toStringKey();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.toStringSummary();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 46);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.4638916077952113
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.setEnumerateRowNames(true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setStdDevWidth(0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(97, 2);
      resultMatrixPlainText1.setColNameWidth(2);
      resultMatrixPlainText0.setStdDev(0, 2, 1);
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertTrue(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.5396680687913826
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setPrintRowNames(true);
      resultMatrixLatex0.significanceWidthTipText();
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getRevision();
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getDefaultCountWidth());
      assertEquals(0, resultMatrixHTML0.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.868478667917637
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 97);
      resultMatrixHTML0.TIE_STRING = "*";
      resultMatrixHTML0.meanWidthTipText();
      int int0 = resultMatrixHTML0.getSignificanceCount(1, 26);
      assertEquals(0, int0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      String string0 = resultMatrixCSV0.doubleToString(0, 61);
      assertEquals("0.0000000000000000000000000000000000000000000000000000000000000", string0);
      
      resultMatrixCSV0.getDefaultShowAverage();
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getRowOrder();
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      assertEquals(18, stringArray0.length);
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.3774179301250213
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      int int0 = resultMatrixHTML0.getSignificanceCount(3, 25);
      assertEquals(0, int0);
      
      int[][] intArray0 = new int[5][6];
      int[] intArray1 = new int[2];
      intArray1[0] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_SignificanceWidth = 58;
      String string0 = resultMatrixCSV0.getColName(0);
      assertNotNull(string0);
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getDefaultMeanWidth());
      assertEquals("[1]", string0);
      assertEquals(0, resultMatrixCSV0.getDefaultStdDevWidth());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertFalse(resultMatrixCSV0.getShowAverage());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.6270196396579633
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.setMeanPrec((-20));
      resultMatrixHTML0.m_ColNameWidth = (-20);
      resultMatrixHTML0.setMeanWidth(0);
      resultMatrixHTML0.TIE_STRING = "";
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.isStdDev(2414);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.assign((ResultMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=4.080207680177965
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.setMeanWidth((-5));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.3273362104712714
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setSignificanceWidth((-3848));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixLatex0.assign(resultMatrixSignificance0);
      assertEquals(0, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertFalse(resultMatrixLatex0.getPrintColNames());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 7);
      String string0 = resultMatrixGnuPlot0.getRowName(2);
      assertEquals("row2", string0);
      
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.toStringRanking();
      assertEquals(7, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.4365024712299324
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      int int0 = 123;
      int int1 = 26;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(123, 26);
      int[][] intArray0 = new int[3][9];
      resultMatrixGnuPlot0.m_ShowAverage = false;
      int[] intArray1 = new int[3];
      intArray1[0] = 26;
      intArray1[1] = 26;
      intArray1[2] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 26;
      intArray2[1] = 123;
      intArray2[2] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[3];
      intArray3[0] = 0;
      intArray3[2] = 123;
      intArray0[2] = intArray3;
      resultMatrixGnuPlot0.m_NonSigWins = intArray0;
      ResultMatrixHTML resultMatrixHTML0 = null;
      try {
        resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.6754083277024434
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setMeanWidth(0);
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(3284, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML1);
      resultMatrixSignificance0.setMean((-265), 97, 0);
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      
      resultMatrixHTML1.getStdDevPrec();
      boolean boolean0 = resultMatrixHTML1.isAverage(0);
      assertFalse(resultMatrixHTML1.getDefaultEnumerateRowNames());
      assertEquals(1, resultMatrixHTML1.getVisibleColCount());
      assertFalse(boolean0);
      assertFalse(resultMatrixHTML1.getDefaultShowAverage());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=4.2376028358605
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "n{v^y>7yh%#v&ec.,1";
      ResultMatrixGnuPlot.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setShowAverage(false);
      resultMatrixPlainText0.toStringKey();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.toStringSummary();
      resultMatrixLatex0.getStdDev(0, 0);
      resultMatrixHTML0.getDisplayRow(587);
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixHTML0.getDefaultPrintRowNames());
      assertFalse(resultMatrixHTML0.getShowAverage());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=4.211462362062961
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      resultMatrixHTML0.setMeanWidth((-5));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV1.setOptions(stringArray0);
      resultMatrixCSV1.clear();
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.302764144158971
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(5, 5);
      String[] stringArray0 = new String[3];
      stringArray0[0] = " ";
      stringArray0[1] = " ";
      stringArray0[2] = "*";
      int[] intArray0 = new int[3];
      intArray0[0] = (-1);
      intArray0[1] = 0;
      intArray0[2] = 5;
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixSignificance0.clear();
      resultMatrixSignificance0.setColHidden(0, true);
      assertEquals(4, resultMatrixSignificance0.getVisibleColCount());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.964335342575635
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.setEnumerateRowNames(true);
      resultMatrixGnuPlot0.setColHidden(2, true);
      assertTrue(resultMatrixGnuPlot0.getEnumerateRowNames());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.getMean(439, 1);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.toArray();
      assertEquals(1, resultMatrixCSV1.getVisibleColCount());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.1936750435572274
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 97);
      resultMatrixHTML0.TIE_STRING = "*";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 13);
      resultMatrixLatex0.clearHeader();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      int[] intArray0 = new int[1];
      intArray0[0] = 13;
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.getDefaultShowStdDev();
      // Undeclared exception!
      resultMatrixSignificance0.clear();
  }

  /**
  //Test case number: 98
  /*Coverage entropy=4.021856020111659
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixHTML0.setMeanWidth(0);
      double double0 = resultMatrixHTML0.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      int int0 = resultMatrixHTML0.getVisibleColCount();
      assertEquals(1, int0);
      
      boolean boolean0 = resultMatrixHTML0.isMean(566);
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.5866946272713576
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clearRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 104);
      resultMatrixHTML0.padString(" \"plot.dat\"", 1);
      resultMatrixHTML0.meanWidthTipText();
      resultMatrixHTML0.getSignificanceCount((-118), 1814);
      resultMatrixHTML0.setMeanWidth(1);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(34, 568);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=4.083356863901816
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(5, 5);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.setMeanWidth(1351);
      resultMatrixSignificance0.getRevision();
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toArray();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.meanWidthTipText();
      resultMatrixHTML0.getSignificanceCount(1351, 45);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.globalInfo();
      assertEquals(1351, resultMatrixPlainText0.getMeanWidth());
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.637433532207976
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      Integer integer0 = new Integer(2592);
      resultMatrixCSV0.setOptions((String[]) null);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.m_StdDevPrec = 1;
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixHTML0.getColOrder();
      assertFalse(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(1, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.2775015519575277
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      int int0 = 0;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML0.getSignificanceCount(3, 25);
      int[][] intArray0 = new int[5][6];
      int[] intArray1 = new int[2];
      intArray1[0] = 0;
      intArray0[0] = intArray1;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.3667403308069725
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 66);
      int[][] intArray0 = new int[17][3];
      int[] intArray1 = new int[3];
      intArray1[0] = 66;
      intArray1[1] = 26;
      intArray1[2] = 66;
      resultMatrixHTML0.m_HeaderValues = null;
      resultMatrixHTML0.TIE_STRING = "\tThe number of decimals after the decimal point for the mean.\n\t(default: ";
      intArray0[0] = intArray1;
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixHTML0.meanWidthTipText();
      ResultMatrixCSV resultMatrixCSV0 = null;
      try {
        resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.5869102219533557
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 66);
      int[][] intArray0 = new int[17][3];
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixHTML0.meanWidthTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(66, 26);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader(")");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.490577634378733
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultShowStdDev();
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 0);
      resultMatrixHTML0.toStringRanking();
      assertEquals(0, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertTrue(resultMatrixHTML0.getDefaultPrintRowNames());
      assertFalse(resultMatrixHTML0.getDefaultRemoveFilterName());
      assertEquals(0, resultMatrixHTML0.getDefaultStdDevWidth());
      assertEquals(2, resultMatrixHTML0.getColCount());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.894933035449122
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.setMeanWidth(0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(3284, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.RIGHT_PARENTHESES = "$circ$";
      resultMatrixHTML1.addHeader("v", "");
      resultMatrixHTML1.setStdDev(1, 0, 0);
      // Undeclared exception!
      resultMatrixCSV0.clear();
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.20735279339242
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getRowCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.setEnumerateRowNames(true);
      resultMatrixCSV0.clearRanking();
      resultMatrixGnuPlot0.setColHidden(2, true);
      assertTrue(resultMatrixGnuPlot0.getEnumerateRowNames());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV1.trimString(" ", 2);
      assertFalse(resultMatrixCSV1.getEnumerateRowNames());
      
      resultMatrixCSV0.getDefaultMeanPrec();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.5870424533583143
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.meanWidthTipText();
      resultMatrixHTML0.getSignificanceCount(2, 2);
      resultMatrixHTML0.meanPrecTipText();
      resultMatrixHTML0.setStdDevWidth(77);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.setStdDev((-540), 0, 2);
      assertEquals(77, resultMatrixHTML0.getStdDevWidth());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=4.171248766438647
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setSignificanceWidth((-3848));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixLatex0.assign(resultMatrixSignificance0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.globalInfo();
      String[] stringArray0 = new String[0];
      ResultMatrixSignificance.main(stringArray0);
      assertEquals(0, stringArray0.length);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.5372760609118274
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.padString("5E*w5x8/)#)pNglt", 2506, true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.setShowAverage(false);
      resultMatrixPlainText0.globalInfo();
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.435005016902289
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setRowNameWidth(450);
      resultMatrixCSV0.globalInfo();
      resultMatrixCSV0.trimString("", 1);
      assertEquals(450, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=4.00215538526247
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML0.getSignificanceCount(3, 25);
      resultMatrixHTML0.getSignificanceCount(0, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(0, 37);
      resultMatrixCSV1.clear();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixCSV1);
      resultMatrixHTML0.getSignificance(3703, 95);
      ResultMatrixSignificance.main((String[]) null);
      resultMatrixCSV0.globalInfo();
      resultMatrixHTML0.getRemoveFilterName();
      resultMatrixHTML1.getPrintColNames();
      assertEquals(25, resultMatrixHTML1.getRowNameWidth());
      assertEquals(2, resultMatrixHTML1.getDefaultMeanPrec());
      assertEquals(0, resultMatrixCSV1.getColNameWidth());
      assertFalse(resultMatrixHTML1.getShowAverage());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.5861880844262752
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.enumerateRowNamesTipText();
      assertFalse(resultMatrixGnuPlot0.getDefaultShowStdDev());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[6];
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 0;
      intArray0[4] = 1;
      intArray0[5] = 2;
      resultMatrixSignificance0.setColOrder(intArray0);
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=3.635121915110088
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 97);
      resultMatrixHTML0.TIE_STRING = "*";
      resultMatrixHTML0.meanWidthTipText();
      resultMatrixHTML0.getSignificanceCount(1, 26);
      resultMatrixHTML0.setMeanWidth(26);
      assertEquals(26, resultMatrixHTML0.getMeanWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(34, 34);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setShowStdDev(false);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixCSV0.setRowOrder(intArray0);
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=3.2282744338409093
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.globalInfo();
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getDefaultStdDevWidth());
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getDefaultCountWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.020056464274406
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 97);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.globalInfo();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      
      int int0 = resultMatrixHTML0.getRowCount();
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
      assertFalse(resultMatrixHTML0.getShowAverage());
      assertEquals(97, int0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.9557268990616636
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 1;
      resultMatrixSignificance1.m_RankingLosses = intArray0;
      intArray0[3] = 0;
      resultMatrixSignificance0.LEFT_PARENTHESES = " ";
      intArray0[4] = 82;
      intArray0[5] = 2;
      intArray0[6] = 2;
      intArray0[7] = 2;
      intArray0[8] = 2;
      resultMatrixSignificance1.m_RankingWins = intArray0;
      // Undeclared exception!
      try { 
        resultMatrixSignificance1.toStringSummary();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=4.188812420999581
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultCountWidth();
      int[] intArray0 = new int[7];
      intArray0[0] = 2;
      intArray0[1] = 5;
      intArray0[2] = 1;
      intArray0[3] = 0;
      intArray0[4] = 1;
      intArray0[5] = 1322;
      intArray0[6] = 5;
      resultMatrixGnuPlot0.m_RankingLosses = intArray0;
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = " ";
      stringArray0[2] = "*";
      stringArray0[3] = "";
      stringArray0[4] = "h$t[|j:};kukcgs";
      stringArray0[5] = ")";
      stringArray0[6] = "v";
      stringArray0[7] = " ";
      ResultMatrixGnuPlot.main(stringArray0);
      assertEquals(8, stringArray0.length);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=3.5877311950801687
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(5, 5);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      String string0 = resultMatrixGnuPlot0.getSummaryTitle(1);
      assertEquals("b", string0);
      
      String string1 = resultMatrixGnuPlot0.toStringKey();
      assertEquals("Key:\n(1) col0\n(2) col1\n(3) col2\n(4) col3\n(5) col4\n", string1);
      
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.toStringRanking();
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=3.5405224377234217
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 97);
      Vector<Object> vector0 = new Vector<Object>();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      vector0.retainAll(linkedList0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.isSignificance(0);
      resultMatrixSignificance0.setRowName(246, " ");
      boolean boolean0 = resultMatrixSignificance0.getRowHidden(97);
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(26, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertFalse(boolean0);
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(0, 2);
      assertEquals(2, resultMatrixHTML1.getVisibleRowCount());
      assertTrue(resultMatrixHTML1.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=3.5350884754592706
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.getRowOrder();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=4.023567228526778
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(0, 1);
      resultMatrixCSV1.globalInfo();
      assertEquals(1, resultMatrixCSV1.getRowCount());
      
      resultMatrixCSV0.getStdDev((-1), (-1292));
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=4.0834495614615225
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(5, 5);
      String[] stringArray0 = new String[3];
      stringArray0[1] = " ";
      stringArray0[2] = "*";
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixSignificance0.setMean(5, 1351, (-3447.69212736));
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=3.5354315286325124
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setEnumerateColNames(false);
      resultMatrixPlainText0.clearHeader();
      resultMatrixPlainText0.getDisplayName();
      assertFalse(resultMatrixPlainText0.getEnumerateColNames());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=4.0248590231146615
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultStdDevPrec();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals(0, resultMatrixLatex0.getDefaultStdDevWidth());
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.4882695869868265
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }
}
