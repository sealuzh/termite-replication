/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 22:47:20 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.519382346735597
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(137, "", "/ztui dYry", (-2049));
      player0.setZ((-2618.2095F));
      player0.setConnected(false);
      player0.getZ();
      player0.type();
      player0.gangStrength();
      System.setCurrentTimeMillis((-1L));
      player0.gangStrength();
      Player player1 = null;
      player0.add((Party) null);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((-2629), (String) null, (String) null, (-2629), 0);
      int int0 = player0.getStrength();
      assertEquals(0, int0);
      
      int int1 = player0.type();
      assertEquals(5, int1);
      assertTrue(player0.isConnected());
      assertEquals((-2629), player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7941820653816287
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      player0.isConnected();
      player0.pack();
      Player player1 = new Player((short)4919, (String) null, (short)4919);
      player1.setJoinOK(player0, true);
      player1.setY((short)4919);
      player1.isJoinOK(player0, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player1.getY();
      assertEquals(4919.0F, player1.getY(), 0.01F);
      
      player0.pack();
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, (String) null, "D5r-/AE)eT:bt2<(", (short)4919, (short)4919);
      player0.isJoinOK(player1, true);
      player0.isJoinOK(player1, false);
      player1.setX((-767.882F));
      player0.getX();
      player1.getX();
      player0.getStrength();
      float float0 = player1.getX();
      assertEquals((-767.882F), float0, 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(812, "gui.ModuleBrowserDialog$ModuleFilter", "Player.unpack(): *** WARNING *** data is not of proper type!", 812, (-2020));
      int int0 = player0.getStrength();
      assertEquals((-2020), int0);
      
      int int1 = player0.gangStrength();
      assertFalse(player0.isDead());
      assertEquals((-2020), int1);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("gui.ModuleBrowserDialog$ModuleFilter", player0.getIP());
      assertEquals(812, player0.getPictureId());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.576534609090467
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      Player player1 = new Player((short)4919);
      player1.setJoinOK(player0, false);
      player1.isJoinOK(player0, false);
      player1.getTimeOfDeath();
      long long0 = player0.getTimeOfDeath();
      assertEquals(1392409281320L, long0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ(1259.4F);
      player0.pack();
      float float0 = player0.getZ();
      assertEquals(1259.4F, float0, 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(0, player1.getPictureId());
      assertFalse(boolean0);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(player1.isConnected());
      assertEquals(1, player1.getStrength());
      assertEquals("Player4919", player1.getName());
      assertFalse(player1.isDead());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Player player0 = new Player();
      player0.setConnected(false);
      player0.setMoney((-968.72455F));
      player0.getTimeOfDeath();
      player0.getZ();
      player0.getZ();
      MockPrintStream mockPrintStream0 = new MockPrintStream("aaE|;e_)j7Nf");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      char[] charArray0 = new char[9];
      charArray0[0] = '-';
      charArray0[1] = 'h';
      charArray0[2] = 'i';
      charArray0[3] = '.';
      charArray0[4] = 'D';
      charArray0[5] = '=';
      charArray0[6] = '[';
      charArray0[7] = '5';
      charArray0[8] = 'w';
      mockPrintStream0.println(charArray0);
      player0.pack(dataOutputStream0);
      PrintStream printStream0 = mockPrintStream0.append('4');
      DataOutputStream dataOutputStream1 = new DataOutputStream(printStream0);
      player0.pack(dataOutputStream1);
      boolean boolean0 = player0.isConnected();
      assertEquals((-968.72455F), player0.getMoney(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(4919);
      player0.setDead((long) 4919);
      Party party0 = new Party();
      player0.boss = party0;
      player0.getStrength();
      player0.pack();
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, (String) null, (String) null, (short)4919, (short)4919);
      // Undeclared exception!
      try { 
        player1.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player(15, (String) null, (String) null, (short)4919, (short)4919);
      player0.head = (Party) player1;
      assertEquals(4919, player1.getPictureId());
      
      int int0 = player0.gangStrength();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals(4920, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, false);
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0.0F);
      Player player1 = new Player();
      player1.getX();
      player1.getX();
      player1.getStrength();
      float float0 = player0.getX();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player(27648, "", "", 219);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-1);
      player0.unpack(byteArray0);
      player0.getSubparty();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)44);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.isConnected();
      assertTrue(boolean0);
      
      System.setCurrentTimeMillis((byte)55);
      int int0 = player0.getStrength();
      assertEquals(1, int0);
      
      player0.toString();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(219, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player((-1228), "1_?ylZ/R", "1_?ylZ/R", 2, (-1228));
      int int0 = player0.gangStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(2, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals((-1228), int0);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player((-2477), (String) null, 4919);
      player0.isConnected();
      Player player1 = new Player(4919, (String) null, (String) null, (-2477));
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)111;
      byteArray0[0] = (byte)111;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)111;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 27759, (-719));
      byteArrayInputStream0.reset();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream1);
      player0.unpack(dataInputStream0);
      Player player2 = new Player();
      player1.setDead();
      player0.getName();
      boolean boolean0 = player1.isConnected();
      assertEquals(1392409281320L, player1.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.7567169975450474
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(2669L);
      Player player0 = new Player();
      player0.setConnected(false);
      player0.boss = null;
      byte[] byteArray0 = player0.pack();
      player0.gangStrength();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readUnsignedByte();
      player0.getStrength();
      player0.pack();
      player0.getName();
      player0.setMoney(1);
      player0.gangStrength();
      player0.gangStrength();
      player0.getMoney();
      player0.gangStrength();
      int int0 = player0.gangStrength();
      assertEquals(1.0F, player0.getMoney(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.92819476520619
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(1212);
      byte[] byteArray0 = new byte[8];
      Player player1 = new Player();
      player1.unpack(byteArray0);
      player0.getSubparty();
      player0.getStrength();
      byte[] byteArray1 = player0.pack();
      player1.getName();
      player0.setMoney((byte) (-1));
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.gangStrength();
      Player player2 = new Player();
      player2.setConnected(false);
      player0.getMoney();
      player2.unpack(byteArray1);
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(0.0F);
      player0.setY((-1.0F));
      float float0 = player0.getY();
      assertEquals((-1.0F), float0, 0.01F);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.2203308977994833
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((-1109), "", "", (-1109));
      player0.setY((-1109));
      player0.setZ(2423.868F);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-97);
      byteArray0[3] = (byte)70;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)1;
      player0.unpack(byteArray0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("3@h`!\"r<", true);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      dataOutputStream0.flush();
      player0.pack(dataOutputStream0);
      player0.isConnected();
      player0.getIP();
      assertEquals(2423.868F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.2240585736572336
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      player0.gangStrength();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      dataInputStream0.readUnsignedByte();
      Player player1 = new Player();
      player1.unpack(dataInputStream0);
      assertEquals(26, byteArrayInputStream0.available());
      
      System.setCurrentTimeMillis((short)4919);
      MockFile mockFile0 = new MockFile("T/Wo&1(n5d", "T/Wo&1(n5d");
      player1.pack();
      assertEquals("Player-1", player1.toString());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-45);
      byteArray0[1] = (byte) (-92);
      byteArray0[2] = (byte)70;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1614), 11308);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MockFile mockFile0 = new MockFile((String) null, "");
      Player player0 = new Player(256, "Player", "", 256, 219);
      assertEquals(219, player0.getStrength());
      assertEquals("Player", player0.getIP());
      
      Player player1 = new Player(219, "state.Party", (String) null, 256);
      player1.toString();
      float float0 = player1.getZ();
      assertFalse(player1.isDead());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(256, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      
      Player player1 = new Player((short)4919, "d)f\"(/(-#0nysBW", "d)f\"(/(-#0nysBW", (short)4919, (short)4919);
      int int0 = player1.getStrength();
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals(4919, int0);
      assertEquals(4919, player1.getPictureId());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.9397928111645655
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player();
      player0.setConnected(false);
      player0.setDead();
      player0.setConnected(true);
      player0.isDead();
      player0.pack();
      player0.setY(0.1F);
      player0.type();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/27_gangup");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "l");
      int int0 = player0.gangStrength();
      assertEquals(0.1F, player0.getY(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int int0 = (-248);
      Player player0 = new Player((-248), "US63Z}qM", (-909));
      player0.pack();
      player0.getPictureId();
      player0.getStrength();
      player0.getName();
      String string0 = "D$sKar3:T1>~.;#Hua";
      File file0 = MockFile.createTempFile("US63Z}qM", "D$sKar3:T1>~.;#Hua");
      try { 
        MockFile.createTempFile("US63Z}qM", "state.Party", file0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(10, "", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", 3, 3);
      player0.reset(false);
      int int0 = player0.getPictureId();
      int int1 = player0.getStrength();
      assertTrue(int1 == int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(3, int1);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertFalse(player1.isDead());
      assertFalse(boolean0);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertEquals("Player4919", player1.toString());
      assertEquals(0, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player();
      float float0 = player0.getY();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = null;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(1, player0.getStrength());
      
      Player player1 = new Player((short)4919, "d)f\"(/(-#0nysBW", "d)f\"(/(-#0nysBW", (short)4919, (short)4919);
      player1.pack();
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(4919, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals(4919, player1.getStrength());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      
      int int0 = Packable.ACTION;
      Player player1 = new Player((short)4919, "d)f\"(/(-#0nsBW", "d)f\"(/(-#0nsBW", (short)4919, 2);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(4919, player1.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(2, player1.getStrength());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(1106, "I{|2Pi3x{mM>$zZt", "I{|2Pi3x{mM>$zZt", 1106);
      player0.getIP();
      player0.isConnected();
      Party party0 = player0.prev;
      player0.prev = null;
      player0.setConnected(true);
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      Player player1 = new Player(528, "I{|2Pi3x{mM>$zZt", 1106);
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(1106, player1.getPictureId());
      assertFalse(boolean0);
      
      int int0 = player0.getStrength();
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1, int0);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(1, (String) null, "HQ4ed?Xb&", 1);
      String string0 = player0.getIP();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertNull(string0);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getPictureId());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(true);
      player0.pack();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      boolean boolean0 = player1.isDead();
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-1", player1.toString());
      assertEquals(0, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertFalse(boolean0);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)28;
      byteArray0[1] = (byte) (-119);
      byteArray0[2] = (byte) (-48);
      player0.unpack(byteArray0);
      player0.pack();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.getName());
      
      Player player1 = new Player((short)4919, "{", "{", (short)4919);
      player1.pack();
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(4919, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player((-2477));
      Player player1 = new Player((-2477));
      int int0 = player1.getStrength();
      assertEquals(1, int0);
      
      String string0 = player0.toString();
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals("Player-2477", string0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player(5);
      player0.setY(5);
      assertEquals(5.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player((-269));
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      float float0 = player0.getMoney();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-269", player0.toString());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player();
      DataInputStream dataInputStream0 = null;
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead((-2510L), false);
      player0.pack();
      assertEquals((-2510L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead((-2330L), true);
      Player player1 = new Player((-1), (String) null, "", (-1531));
      player0.isJoinOK(player1, true);
      player0.getTimeOfDeath();
      player1.getName();
      player0.getIP();
      player0.setDead((long) (-1531));
      assertEquals((-1531L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(boolean0);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(false);
      player0.pack();
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
  }
}
