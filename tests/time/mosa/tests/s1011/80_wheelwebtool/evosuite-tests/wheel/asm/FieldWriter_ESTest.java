/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 22:47:09 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5054468211832073
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(48);
      classWriter0.version = 48;
      classWriter0.version = 48;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)51;
      byteArray0[1] = (byte)49;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[2] = (byte)29;
      classWriter0.invalidFrames = true;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4099, "", "", "", "");
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("", false);
      fieldWriter0.getSize();
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 48, "> ", ";Gq4}iTD", "> ", "");
      fieldWriter1.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.putUTF8("> ");
      FieldWriter fieldWriter2 = classWriter0.lastField;
      fieldWriter2.put(byteVector0);
      fieldWriter2.put(byteVector0);
      fieldWriter0.put(byteVector0);
      byteVector0.data = byteArray0;
      fieldWriter2.getSize();
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation("InnerClasses", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-14));
      classWriter0.version = (-14);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "'[@u5uW", "'[@u5uW", "'[@u5uW", "'[@u5uW");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(55);
      classWriter0.version = 55;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "{", "{", "{", "{");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.343193896232072
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(51);
      classWriter0.version = 51;
      classWriter0.index = (-911);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-911), "4X#;ZhKb)oV',OQ<R", "4X#;ZhKb)oV',OQ<R", "4X#;ZhKb)oV',OQ<R", "4X#;ZhKb)oV',OQ<R");
      fieldWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = 2;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0108643020548935
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      classWriter0.index = (-254);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 8, ":>4", ":>4", ":>4", ":>4");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(68);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "G?#VETW", "G?#VETW", "G?#VETW", "G?#VETW");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("G?#VETW", true);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(87);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 87, "|@mfH=J7h4>,Hm", "|@mfH=J7h4>,Hm", "|@mfH=J7h4>,Hm", "|@mfH=J7h4>,Hm");
      ByteVector byteVector0 = new ByteVector(1);
      byteVector0.length = 2;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0829081047004716
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(87);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "?&/HGL-#4", "?&/HGL-#4", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.039435730626322
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 8, "N-:>N.", "N-:>N.", "N-:>N.", "N-:>N.");
      fieldWriter0.visitAnnotation("N-:>N.", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1611));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1611), "N-:>N.", "N-:>N.", "N-:>N.", "N-:>N.");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 73, "[]", "eZQmMsLdK3^:[k", (String) null, (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(47);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 47, "/tKC!ok,c+/G", "/tKC!ok,c+/G", "/tKC!ok,c+/G", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(117);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 117, "eC0XF9G2*`", "eC0XF9G2*`", "eC0XF9G2*`", "eC0XF9G2*`");
      Attribute attribute0 = new Attribute("eC0XF9G2*`");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-10));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-10), "N-:>N.", "N-:>N.", "N-:>N.", "N-:>N.");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.259967281035505
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(94);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 94, "qYo", "qYo", "qYo", "qYo");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.039435730626322
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(54);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 54, "/tK!ok,c+/G", "/tK!ok,c+/G", "/tK!ok,c+/G", "/tK!ok,c+/G");
      fieldWriter0.getSize();
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("/tK!ok,c+/G", true);
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 73, "eZQmMsLdK3^:[k", "eZQmMsLdK3^:[k", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector(2);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 8, "<TG~o*W$BBcr/8vHQe", "<TG~o*W$BBcr/8vHQe", "<TG~o*W$BBcr/8vHQe", "<TG~o*W$BBcr/8vHQe");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 8, "<TG~o*W$BBcr/8vHQe", "<TG~o*W$BBcr/8vHQe", "<TG~o*W$BBcr/8vHQe", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, "Class not found", "Class not found", "Class not found", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.2885387096069334
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 49, "wheel.asmAnnot~tionWrite'", "wheel.asmAnnot~tionWrite'", "wheel.asmAnnot~tionWrite'", "wheel.asmAnnot~tionWrite'");
      Attribute attribute0 = new Attribute("wheel.asmAnnot~tionWrite'");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(525);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1480, "eZQmMsLdK3^:[k", "[]", "[]", (Object) null);
      fieldWriter0.visitEnd();
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(90);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 90, (String) null, (String) null, (String) null, classWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
