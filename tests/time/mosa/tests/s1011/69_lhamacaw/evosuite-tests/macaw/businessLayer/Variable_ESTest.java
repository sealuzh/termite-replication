/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 22:40:53 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier((-1984));
      boolean boolean1 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(boolean1 == boolean0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = ">l!DE}aM";
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.setCleaningStatus(">l!DE}aM");
      derivedVariable0.isNewRecord();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = ">l!DE}aM";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = null;
      ontologyTerm0.clone();
      ontologyTerm0.setIdentifier(260);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.9069611899142003
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setForm((String) null);
      rawVariable0.getOntologyTerms();
      assertFalse(rawVariable0.isCleaned());
      
      rawVariable0.setCleaned(true);
      rawVariable0.getForm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("D,:]Cg^5P$l(`", (String) null);
      Variable.validateFields(rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.2085716838811678
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart((String) null);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      String string0 = derivedVariable0.getColumnStart();
      assertNull(string0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument((SupportingDocument) null);
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.8283285411829557
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.getNotes();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAvailability("");
      derivedVariable0.setQuestionNumber("XT1X!,LM(fdd(bi");
      derivedVariable0.codeBookNumber = "1^/";
      Variable.validateFields(rawVariable0);
      rawVariable0.clone();
      derivedVariable0.cloneAttributes(rawVariable0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.getCleaningDescription();
      derivedVariable0.setAvailability("UNABLE_TO_VALIDATE_USER");
      derivedVariable0.setYear("UNABLE_TO_VALIDATE_USER");
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.7505233567644387
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable1.setAlias("2Q#haUCN5?*uiT)l");
      derivedVariable1.form = "2Q#haUCN5?*uiT)l";
      derivedVariable0.setColumnEnd("DUPLICATE_DOCUMENT_ASSOCIATION");
      derivedVariable0.getSourceVariables();
      derivedVariable0.getYear();
      derivedVariable0.clone();
      derivedVariable1.getAlias();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.createVariableSummary();
      assertEquals("DUPLICATE_DOCUMENT_ASSOCIATION", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = false;
      rawVariable0.setIsNewRecord(false);
      rawVariable0.questionNumber = "variable.columnStart.label";
      rawVariable0.setCodeBookNumber("variable.columnStart.label");
      String string0 = "l>&bPM\\>n\"4ix1g=j.";
      rawVariable0.setColumnEnd("l>&bPM>n\"4ix1g=j.");
      rawVariable0.setIdentifier((-1841862325));
      rawVariable0.setFilePath((String) null);
      rawVariable0.getSupportingDocuments();
      rawVariable0.getOntologyTerms();
      rawVariable0.getAlias();
      rawVariable0.getAlias();
      rawVariable0.getFilePath();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        RawVariable.validateFields((RawVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.585666109272293
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("9");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlias("9");
      derivedVariable1.setColumnEnd("variable.columnEnd.label");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("9", derivedVariable0.getDisplayName());
      assertEquals("variable.columnEnd.label", derivedVariable1.getColumnEnd());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.8664250774589934
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "a_";
      User user0 = new User("#V.1v5yj,K%g?u ", "variable.columnStart.label");
      user0.setAffiliation("%}s");
      user0.setPhone("variable.columnStart.label");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setCoded(true);
      derivedVariable0.getDisplayName();
      derivedVariable0.getAvailability();
      derivedVariable0.createVariableSummary();
      derivedVariable0.getDisplayName();
      derivedVariable0.getColumnEnd();
      derivedVariable0.getCodeBookNumber();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.notes = "";
      derivedVariable0.isCoded();
      derivedVariable0.createVariableSummary();
      rawVariable0.setAlias("variable.columnStart.label");
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.getSupportingDocuments();
      assertEquals("variable.columnStart.label", rawVariable0.getAlias());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, (Variable) null);
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.684989220951399
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("ggvx");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.getLabel();
      assertEquals("ggvx", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("q");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAvailability("q");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("q", derivedVariable1.getAvailability());
      assertEquals("q", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      arrayList0.add(valueLabel0);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.getLabel();
      derivedVariable0.getValueLabels();
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      derivedVariable0.getAvailability();
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.203456186693981
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setIdentifier(91);
      rawVariable0.createVariableSummary();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertEquals(91, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("Oke");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getQuestionNumber();
      assertEquals("Oke", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("q", "q");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setForm("variable.name.label");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("variable.name.label", derivedVariable1.getForm());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.958281374357401
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      User user0 = new User();
      derivedVariable0.setColumnStart((String) null);
      user0.setUserID((String) null);
      user0.setFirstName("c42<GQOp{(");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("c42<GQOp{(");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.getNotes();
      derivedVariable0.getName();
      derivedVariable1.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable0.getFilePath();
      derivedVariable1.getSupportingDocuments();
      derivedVariable1.getCategory();
      derivedVariable1.getCleaningStatus();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      assertEquals("c42<GQOp{(", derivedVariable0.getQuestionNumber());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("9");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.questionNumber = "9";
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("9", derivedVariable0.getName());
      assertEquals("", derivedVariable1.getYear());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.625071549495739
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber((String) null);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      String string0 = derivedVariable1.getQuestionNumber();
      assertNull(string0);
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals(0, derivedVariable1.getIdentifier());
      
      derivedVariable0.getCleaningStatus();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("a");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("a", derivedVariable0.getLabel());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("q");
      User user0 = new User("q", "q");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("q", derivedVariable0.getLabel());
      assertFalse(arrayList0.isEmpty());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("q");
      derivedVariable0.setLabel("q");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("q", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("%F5");
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("%F5", derivedVariable1.getLabel());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.6305437208796447
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertFalse(derivedVariable2.isCoded());
      assertFalse(derivedVariable2.isNewRecord());
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertEquals(0, derivedVariable2.getIdentifier());
      assertFalse(derivedVariable2.isCleaned());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.282360045759959
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertTrue(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.383522442827672
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertFalse(derivedVariable1.isCleaned());
      assertTrue(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.9971515848932915
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertNotNull(macawChangeEvent0);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.5822632023047225
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("_' LkuC+N[<BS");
      rawVariable0.setNotes("blank");
      rawVariable0.setFilePath("dg4RFFGx");
      rawVariable0.getFilePath();
      rawVariable0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setCodeBookNumber("_' LkuC+N[<BS");
      // Undeclared exception!
      try { 
        arrayList0.add((-4001), (Variable) derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -4001, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.5386400847822452
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setColumnStart((String) null);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setColumnStart("u~&%T2YjTDHVC9Q`n");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("u~&%T2YjTDHVC9Q`n", derivedVariable1.getColumnStart());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.146102255087602
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-1932735280));
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("-1932735280", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.setCleaningStatus("nzy`ZJXKtSS");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User();
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      assertEquals("nzy`ZJXKtSS", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("q");
      User user0 = new User();
      derivedVariable0.clone();
      derivedVariable0.getName();
      assertEquals("q", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.6852661909001596
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("Un\"w`&~2v_Eo", "Un\"w`&~2v_Eo");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setYear("variable.saveChanges.valueChanged");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      rawVariable1.getYear();
      assertEquals("variable.saveChanges.valueChanged", rawVariable1.getYear());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("R\"?@(0J cV|U,~+a");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("R\"?@(0J cV|U,~+a", derivedVariable0.getYear());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.780592076664845
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.columnEnd = "!D~u";
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setCleaningDescription("]");
      User user0 = new User("Q2m7{}Lm0\"n", (String) null);
      user0.setUserID("!D~u");
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      user0.setCounty("Q2m7{}Lm0\"n");
      user0.setAddressLine1("Q2m7{}Lm0\"n");
      user0.setIdentifier(28);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getIdentifier();
      derivedVariable0.getCleaningStatus();
      Variable.validateFields(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSourceVariable(derivedVariable0);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable1.getAlternativeVariable();
      derivedVariable0.removeSourceVariables(arrayList0);
      assertEquals("]", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setIdentifier((-4144));
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.createVariableSummary();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.createVariableSummary();
      assertEquals((-4144), rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("Unknown", derivedVariable0.getCategory());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setCategory("");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setForm((String) null);
      arrayList0.stream();
      derivedVariable0.removeSourceVariables(arrayList0);
      String string0 = derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertNotNull(string0);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.6851309643957646
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("a");
      derivedVariable0.notes = "a";
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("a", derivedVariable0.getNotes());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.columnStart = "E3.TS-&dA";
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getForm());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getNotes());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("E3.TS-&dA", derivedVariable1.getColumnStart());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.getSupportingDocuments();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("q");
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("q");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("q", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertNull(macawChangeEvent0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.067461933429295
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.7039917864324616
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1970863915));
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      int int0 = rawVariable0.getIdentifier();
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, int0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.setNotes("1?5~cX|2}rtQ");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getFilePath();
      derivedVariable0.getLabel();
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getAlternativeVariable();
      assertEquals("1?5~cX|2}rtQ", derivedVariable0.getNotes());
      
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, rawVariable0);
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.7130415601881177
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setNameSpace("`SU XY<nA[bG 2eovE ");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setOntologyName("`SU XY<nA[bG 2eovE ");
      ontologyTerm0.setIdentifier(1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      derivedVariable0.setFilePath("|e4");
      assertEquals("|e4", derivedVariable0.getFilePath());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.558992217066017
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-1879048189));
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.0398974673852632
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("\"");
      User user0 = new User();
      derivedVariable0.setColumnEnd("\"");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("\"", derivedVariable0.getName());
      assertEquals("\"", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=4.185120055617699
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      derivedVariable0.setLabel("f");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCoded(true);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("f", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("q");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.getDisplayName();
      assertEquals("q", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("variable.name.label");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setOntologyName("variable.name.label");
      ontologyTerm0.setIdentifier(0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(1);
      ontologyTerm1.setDescription("variable.name.label");
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      derivedVariable0.setFilePath("variable.name.label");
      assertEquals("variable.name.label", derivedVariable0.getFilePath());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "/JCL";
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.7983998265314884
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCodeBookNumber("q");
      rawVariable0.cloneAttributes(derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      Variable.validateFields(rawVariable1);
      rawVariable0.getDisplayName();
      rawVariable0.clone();
      rawVariable0.getFilePath();
      int int0 = derivedVariable0.getIdentifier();
      assertEquals("q", derivedVariable0.getCodeBookNumber());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.6676082383884046
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.columnEnd = "aH*Fg+G;!~";
      String string0 = derivedVariable1.getFilePath();
      assertEquals("", string0);
      
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable0.clone();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable2.addSourceVariables(arrayList0);
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertFalse(derivedVariable2.isCoded());
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertEquals(0, derivedVariable2.getIdentifier());
      assertFalse(derivedVariable2.isNewRecord());
      assertFalse(derivedVariable2.isCleaned());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.6820748660026672
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "variable.alternativeVariable.label";
      String string0 = derivedVariable0.getColumnEnd();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber((String) null);
      String string0 = derivedVariable0.getCodeBookNumber();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertNotNull(string0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("`SURXY3na[bG 2eovE ", "general.fieldValue.blank");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user1 = new User();
      User.detectFieldChanges(user0, user1, user0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.203456186693981
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      int int0 = rawVariable0.getIdentifier();
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, int0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setIdentifier(960);
      derivedVariable0.removeOntologyTerms(arrayList0);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getCleaningStatus();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals(960, derivedVariable0.getIdentifier());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getOntologyTerms();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.9971515848932915
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      Variable variable0 = derivedVariable0.getAlternativeVariable();
      assertFalse(variable0.isCleaned());
      assertFalse(variable0.isNewRecord());
      assertFalse(variable0.isCoded());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.1341286000959614
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = " z3HyH3cg5!kvbm";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.createVariableSummary();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getValueLabels();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("uft");
      rawVariable0.createVariableSummary();
      int int0 = rawVariable0.getIdentifier();
      assertEquals("uft", rawVariable0.getNotes());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("q");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setColumnEnd("q");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("q", derivedVariable1.getColumnEnd());
      assertEquals("q", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.setColumnStart("0");
      rawVariable0.getLabel();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.clone();
      rawVariable0.addSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("0");
      arrayList1.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.059615150468091
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.5813690145252886
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath("variable.isCoded.label");
      rawVariable0.setAlias("4f YpDp+Y{e'_Z*p");
      rawVariable0.codeBookNumber = "Uk}W4h{}C[";
      rawVariable0.clone();
      rawVariable0.getYear();
      assertEquals("4f YpDp+Y{e'_Z*p", rawVariable0.getAlias());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("N5he2/");
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable1.getName();
      derivedVariable1.removeSourceVariable(derivedVariable0);
      assertEquals("N5he2/", derivedVariable0.getYear());
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.6806822757725426
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = null;
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList0.size());
      
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("CD");
      derivedVariable0.clone();
      assertEquals("CD", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = rawVariable0.isNewRecord();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(boolean0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.624728496322497
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      
      String string0 = derivedVariable0.getDisplayItemIdentifier();
      assertEquals("0", string0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("1-:NRyY3dxG~(:W");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getForm();
      assertEquals("1-:NRyY3dxG~(:W", derivedVariable0.getForm());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.625390528762087
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "[Ikp:";
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getAlias());
      assertEquals("[Ikp:", derivedVariable1.getForm());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("!CtDnKGAA`b");
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertEquals("!CtDnKGAA`b", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("2Np1");
      rawVariable0.createVariableSummary();
      assertEquals("2Np1", rawVariable0.getForm());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("q");
      derivedVariable0.setColumnStart("q");
      assertEquals("q", derivedVariable0.getName());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("q");
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("q", derivedVariable0.getDisplayName());
      assertEquals("q", derivedVariable0.getName());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "!";
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getColumnEnd();
      assertEquals("!", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("T8K8f]");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("T8K8f]", derivedVariable1.getDisplayName());
      assertFalse(arrayList0.isEmpty());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.clone();
      assertTrue(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("macaw.system.MacawException");
      rawVariable0.clone();
      assertEquals("macaw.system.MacawException", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("Lz9?GX]LZ", "Lz9?GX]LZ");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, arrayList0.size());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd((String) null);
      String string0 = derivedVariable0.getColumnEnd();
      assertFalse(derivedVariable0.isCoded());
      assertNull(string0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "&$-`wmATUDAh";
      derivedVariable0.getColumnStart();
      assertEquals("&$-`wmATUDAh", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("UNABLE_TO_UPDATE_ALTERNATIVE_VARIABLE");
      rawVariable0.getCodeBookNumber();
      assertEquals("UNABLE_TO_UPDATE_ALTERNATIVE_VARIABLE", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("7MDU{;I*8t");
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("7MDU{;I*8t", rawVariable0.getCleaningDescription());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("macaw.businessLayer.DerivedVariable");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("macaw.businessLayer.DerivedVariable", derivedVariable0.getYear());
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("!cj+wy");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("!cj+wy", rawVariable0.getLabel());
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.isCoded();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getColumnStart();
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      User user0 = new User("$ZXdo#1[RPcHMH\"t", "$ZXdo#1[RPcHMH\"t");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("$ZXdo#1[RPcHMH\"t");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.createVariableSummary();
      assertEquals("$ZXdo#1[RPcHMH\"t", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "UNABLE_TO_DELETE_ONTOLOGY_TERM";
      derivedVariable0.setYear("UNABLE_TO_GET_SUPPORTING_DOCUMENT_IDENTIFIER");
      Variable.validateFields(derivedVariable0);
      derivedVariable0.createVariableSummary();
      assertEquals("UNABLE_TO_GET_SUPPORTING_DOCUMENT_IDENTIFIER", derivedVariable0.getYear());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("l`+quV _e");
      rawVariable0.createVariableSummary();
      assertEquals("l`+quV _e", rawVariable0.getLabel());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.6845198108434345
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("\"");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.createVariableSummary();
      assertEquals("\"", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCoded());
      
      rawVariable0.setCoded(true);
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertTrue(rawVariable0.isCoded());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.031298644335524
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setOntologyName("`SU XY<nA[bG 2eovE ");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      derivedVariable0.setFilePath("|e4");
      assertEquals("|e4", derivedVariable0.getFilePath());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable1.removeValueLabel(valueLabel0);
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("q");
      Variable.validateFields(derivedVariable0);
      assertEquals("q", derivedVariable0.getName());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      ArrayList<String> arrayList1 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList1.size());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=3.6676082383884046
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.isCleaned();
      User user0 = new User();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      
      RawVariable rawVariable2 = new RawVariable();
      assertEquals(0, rawVariable2.getIdentifier());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("");
      derivedVariable0.columnStart = "";
      derivedVariable0.getForm();
      derivedVariable0.setCleaned(true);
      derivedVariable0.isCleaned();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("");
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.9417429777213613
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(1, arrayList0.size());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.624728496322497
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      derivedVariable0.setValueLabels(arrayList0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("NEW");
      derivedVariable0.clone();
      assertEquals("NEW", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("|~Lui[S!TZvM");
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.4435896416877303
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "s}d8M6}";
      derivedVariable0.setCleaned(false);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getNotes();
      derivedVariable0.getDisplayItemIdentifier();
      assertEquals("s}d8M6}", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("T=y v_op4$ ^/");
      rawVariable0.getForm();
      assertEquals("T=y v_op4$ ^/", rawVariable0.getNotes());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "+,qz\u0004*L6 FO";
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("+,qz\u0004*L6 FO", derivedVariable0.getQuestionNumber());
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.6845198108434345
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("9");
      derivedVariable0.setCodeBookNumber("9");
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("9", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("FuQ>,");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("FuQ>,", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart(":! ");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals(":! ", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.5173540953639257
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.notes = null;
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription(">{^a7q");
      derivedVariable0.getLabel();
      assertEquals(">{^a7q", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.setSupportingDocuments(arrayList0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=3.5341821845922365
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "variable.alias.label";
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertEquals("variable.alias.label", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("pp");
      rawVariable0.getCleaningStatus();
      assertEquals("pp", rawVariable0.getAlias());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocument((SupportingDocument) null);
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertEquals(1, arrayList0.size());
      assertFalse(rawVariable0.isCleaned());
  }
}
