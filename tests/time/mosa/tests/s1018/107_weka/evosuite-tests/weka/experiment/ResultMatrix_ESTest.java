/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 04:22:59 GMT 2019
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.349282251575593
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 1046);
      resultMatrixGnuPlot0.setColName(1, "remove-filter");
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.435348070075531
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[5];
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.setColName((-923), "remove-filter");
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.1396917369740227
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixGnuPlot0.getMean(0, 0);
      resultMatrixGnuPlot0.getMean(26, 1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.0407549634048756
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot1.getMean(1, 97);
      resultMatrixGnuPlot0.getMean(0, 1);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.1931414515126
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.m_RemoveFilterName = true;
      resultMatrixGnuPlot0.getMean(1, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultEnumerateRowNames();
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.6754083277024434
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(0, 0);
      resultMatrixGnuPlot0.getDisplayCol((-1274));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringKey();
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.3805678363275375
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColName(26, "remove-filter");
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.3940458709347854
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 1);
      resultMatrixGnuPlot0.getVisibleColCount();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringSummary();
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.getMean((-119), 26);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.844081241243311
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(7);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 7);
      resultMatrixPlainText0.assign(resultMatrixSignificance0);
      resultMatrixPlainText0.trimString("v", 2);
      resultMatrixPlainText0.getSignificanceCount(1, 0);
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixPlainText0.getDefaultStdDevPrec();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultRowNameWidth();
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.6316774220360197
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getMean(26, 26);
      resultMatrixGnuPlot0.getDisplayCol(26);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringKey();
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.4381588440292252
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.m_RowNameWidth = 2;
      resultMatrixGnuPlot0.getMean(2, 1);
      resultMatrixGnuPlot0.getDisplayCol(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringKey();
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.489065606887324
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.m_CountWidth = (-1);
      resultMatrixGnuPlot0.getVisibleColCount();
      resultMatrixGnuPlot0.headerKeys();
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.2832337305218755
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.removeFilterName("");
      int[][] intArray0 = new int[6][0];
      resultMatrixLatex0.setRanking(intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.RIGHT_PARENTHESES = ")";
      resultMatrixHTML0.meanPrecTipText();
      resultMatrixHTML0.getDefaultPrintColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.getDisplayName();
      resultMatrixHTML0.isRowName((-1597));
  }

  /**
  //Test case number: 14
  /*Coverage entropy=4.109652089859416
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getVisibleRowCount();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringSummary();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixLatex0.stdDevWidthTipText();
      resultMatrixLatex0.printRowNamesTipText();
  }

  /**
  //Test case number: 15
  /*Coverage entropy=4.032653675006146
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[6][0];
      resultMatrixLatex0.setRanking(intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.showStdDevTipText();
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixCSV0.RIGHT_PARENTHESES = "h";
      resultMatrixCSV0.getSignificance(0, 125);
      String[][] stringArray0 = new String[5][3];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      resultMatrixLatex0.m_CountWidth = 1;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.getColSize(stringArray0, 1, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.4875240636892215
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[1][8];
      resultMatrixLatex0.clearSummary();
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getSignificance(0, (-724));
  }

  /**
  //Test case number: 17
  /*Coverage entropy=4.261143368445807
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      String[] stringArray0 = new String[9];
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setShowAverage(true);
      resultMatrixCSV0.m_StdDevPrec = (-1552);
      resultMatrixCSV0.getDefaultStdDevWidth();
      resultMatrixCSV0.getRevision();
      resultMatrixCSV0.getOptions();
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.5847133394342636
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixCSV0.showStdDevTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.getVisibleRowCount();
      resultMatrixCSV0.showAverageTipText();
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.383051562881341
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(1);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(1, 1);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot1);
      resultMatrixPlainText0.trimString("v", 2477);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText1.getShowAverage();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixGnuPlot1);
      resultMatrixGnuPlot0.setStdDev(0, 2, 1);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.3982803143212656
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV0.getAverage((-9));
      resultMatrixGnuPlot0.getRowName(1298);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.9458859713120917
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int int0 = 2980;
      resultMatrixGnuPlot0.m_MeanWidth = 2980;
      int int1 = 1882;
      resultMatrixGnuPlot0.getRowName(1882);
      resultMatrixGnuPlot0.clear();
      resultMatrixGnuPlot0.addHeader("OC5|Fe>E4D~KnaGE", "KBOV5<,]Wtf;.Xvp");
      int int2 = 2284;
      resultMatrixGnuPlot0.isAverage(2284);
      resultMatrixGnuPlot0.getCount(2284);
      resultMatrixGnuPlot0.getRowNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.LEFT_PARENTHESES = "U`vuA>Yir";
      resultMatrixGnuPlot0.getStdDev(2, 2980);
      resultMatrixHTML0.toStringMatrix();
      resultMatrixGnuPlot0.printColNamesTipText();
      int int3 = 3;
      resultMatrixHTML0.getRowName(3);
      int int4 = (-2536);
      ResultMatrixPlainText resultMatrixPlainText0 = null;
      try {
        resultMatrixPlainText0 = new ResultMatrixPlainText((-2536), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.447165794573698
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultPrintColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setStdDev(2, (-1264), (-1264));
      resultMatrixLatex0.getRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1086, 1578);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.5416722242501053
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      int[] intArray0 = new int[2];
      intArray0[1] = 2;
      resultMatrixGnuPlot0.m_RowOrder = intArray0;
      resultMatrixGnuPlot0.setCountWidth(2);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(0, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot1);
      resultMatrixPlainText0.trimString(" ", 1);
      resultMatrixPlainText0.getShowAverage();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixGnuPlot0.setStdDev(1, 1, 0.0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.536942223862665
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[1][8];
      resultMatrixLatex0.clearSummary();
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 26);
      resultMatrixPlainText0.trimString(" ", 8);
      resultMatrixPlainText0.getShowAverage();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.setStdDev((-44), (-44), 0.0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.5323017892526307
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1413);
      resultMatrixGnuPlot0.setCountWidth(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot1);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.trimString("", 1403);
      resultMatrixPlainText1.getShowAverage();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixGnuPlot1);
      resultMatrixGnuPlot1.setStdDev(0, (-1303), (-2148.495601005));
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.345424076347388
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1448);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.globalInfo();
      resultMatrixLatex0.toStringKey();
      resultMatrixCSV0.getStdDev(0, (-2584));
      resultMatrixCSV0.toStringSummary();
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.477750445111375
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.TIE_STRING = "";
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      int[] intArray0 = new int[2];
      intArray0[1] = 2;
      resultMatrixGnuPlot0.m_RowOrder = intArray0;
      resultMatrixGnuPlot0.setCountWidth(2);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot1);
      resultMatrixPlainText0.trimString(" ", 1);
      resultMatrixPlainText0.getShowAverage();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixGnuPlot0.setStdDev(0, 1, 1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getColNameWidth();
  }

  /**
  //Test case number: 28
  /*Coverage entropy=4.331687959618887
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clearSummary();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRowOrder((int[]) null);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixSignificance0.setPrintColNames(true);
      resultMatrixCSV0.getAverage(1980);
      String[] stringArray0 = new String[4];
      resultMatrixSignificance0.RIGHT_PARENTHESES = "*";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "*";
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixCSV0.getSignificance(913, (-1331));
      resultMatrixGnuPlot0.getColNameWidth();
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixLatex0.setSignificance(0, (-167), 5);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.844177889295563
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex1);
      resultMatrixPlainText0.assign(resultMatrixSignificance0);
      resultMatrixPlainText0.trimString("(", 1);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(2, 12);
      resultMatrixPlainText1.getSignificanceCount(1, 2);
      resultMatrixSignificance0.toStringMatrix();
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.1475189324598443
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      resultMatrixLatex0.getDefaultMeanWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixCSV0.globalInfo();
      resultMatrixCSV0.getStdDev(0, 40);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV1.toStringSummary();
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.1904073435153335
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringKey();
      int[][] intArray0 = new int[9][0];
      int[] intArray1 = new int[4];
      intArray1[0] = 2;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[2];
      intArray2[0] = 2;
      intArray2[1] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[6];
      intArray3[0] = 2;
      intArray3[1] = 1;
      intArray3[2] = 2;
      intArray3[3] = 0;
      intArray3[4] = 1;
      intArray3[5] = 1;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[8];
      intArray4[0] = 1;
      intArray4[1] = 0;
      intArray4[2] = 1169;
      intArray4[3] = 0;
      intArray4[4] = 0;
      intArray4[5] = 1;
      intArray4[6] = 0;
      intArray4[7] = 0;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[2];
      intArray5[0] = 2;
      intArray5[1] = 2;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[8];
      intArray6[0] = 1169;
      intArray6[1] = 2;
      intArray6[2] = 1169;
      intArray6[3] = 1;
      intArray6[4] = 0;
      intArray6[5] = 2;
      intArray6[6] = 1169;
      intArray6[7] = 0;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[1];
      intArray7[0] = 1169;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[2];
      intArray8[0] = 2;
      intArray8[1] = 23;
      intArray0[7] = intArray8;
      int[] intArray9 = new int[4];
      intArray9[0] = 2;
      intArray9[1] = 23;
      intArray9[2] = 2388;
      intArray9[3] = 0;
      intArray0[8] = intArray9;
      resultMatrixGnuPlot0.m_Wins = intArray0;
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.getSignificanceWidth();
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.2268396008249587
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[6][0];
      resultMatrixLatex0.setRanking(intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.setStdDevPrec(1);
      resultMatrixHTML0.getCountWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
  }

  /**
  //Test case number: 33
  /*Coverage entropy=4.130660248882312
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 1);
      resultMatrixGnuPlot0.setCountWidth(10);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot1);
      resultMatrixPlainText0.trimString("v", 2);
      resultMatrixPlainText0.getSignificanceCount(1, 2);
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixPlainText0.getShowAverage();
      resultMatrixSignificance0.setSignificance(2, 1, 1);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.174755543790429
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 0;
      intArray0[4] = 1953;
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 2;
      intArray0[8] = 1;
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(1, 1953);
      // Undeclared exception!
      resultMatrixGnuPlot0.assign(resultMatrixGnuPlot1);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=4.137519162540268
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.setPrintColNames(false);
      resultMatrixCSV0.m_MeanPrec = 48;
      resultMatrixCSV0.getDisplayRow((-1102));
      String[] stringArray0 = new String[1];
      resultMatrixCSV0.m_PrintRowNames = false;
      stringArray0[0] = "-unsupervised..*";
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixCSV0.enumerateRowNamesTipText();
      resultMatrixCSV0.getDisplayName();
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = false;
      booleanArray0[6] = false;
      booleanArray0[7] = false;
      booleanArray0[8] = false;
      resultMatrixCSV0.m_RowHidden = booleanArray0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSize((-1), (-472));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.4423318729650356
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[1][8];
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 0);
      resultMatrixCSV0.getSignificance(1, 0);
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
      assertEquals(0, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=4.301521749582525
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      String[] stringArray0 = new String[6];
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.trimString("[", 2);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\n", string0);
      
      resultMatrixSignificance0.setSignificance(2, 2, 1889);
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=4.148076006150424
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      int[] intArray0 = new int[1];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 1);
      resultMatrixGnuPlot0.setCountWidth(10);
      resultMatrixGnuPlot0.setColOrder(intArray0);
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      assertEquals(0, resultMatrixGnuPlot1.getColNameWidth());
      
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1) (2)\n---------------\nrow0          \n", string0);
      
      resultMatrixGnuPlot1.setSignificance((-1802), 39, 37);
      assertEquals(0, resultMatrixGnuPlot1.getSignificanceWidth());
      assertEquals(0, resultMatrixGnuPlot1.getCountWidth());
      assertEquals(40, resultMatrixGnuPlot1.getRowNameWidth());
      assertEquals(2, resultMatrixGnuPlot1.getStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot1.getMeanPrec());
      assertTrue(resultMatrixGnuPlot1.getEnumerateColNames());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.80566947093136
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 1);
      resultMatrixGnuPlot0.setCountWidth(0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.assign(resultMatrixSignificance0);
      assertEquals(40, resultMatrixPlainText0.getRowNameWidth());
      
      resultMatrixGnuPlot0.getRowName((-604));
      resultMatrixGnuPlot0.getOptions();
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.8266281110948857
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.assign(resultMatrixGnuPlot0);
      String string0 = resultMatrixPlainText0.trimString("", 8);
      assertEquals("", string0);
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText1.getSignificanceCount(1, 0);
      assertEquals(0, resultMatrixPlainText1.getSignificanceWidth());
      assertEquals(2, resultMatrixPlainText1.getMeanPrec());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(108, 1);
      resultMatrixSignificance0.toStringMatrix();
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.9122165498126904
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_EnumerateRowNames = false;
      resultMatrixSignificance0.doubleToString(0.0, 1167);
      double[][] doubleArray0 = new double[0][1];
      resultMatrixSignificance0.m_Mean = doubleArray0;
      resultMatrixSignificance0.m_RowNameWidth = 1167;
      resultMatrixSignificance0.m_CountWidth = 3;
      resultMatrixSignificance0.m_StdDevWidth = 3;
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.getEnumerateRowNames();
      resultMatrixSignificance0.toStringKey();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=4.213520568094774
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.TIE_STRING = "{>S}WDE";
      resultMatrixGnuPlot0.WIN_STRING = "{>S}WDE";
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixGnuPlot0.getRevision();
      resultMatrixGnuPlot0.setRemoveFilterName(true);
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.getStdDev((-435), 19);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(18, 2);
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.getDefaultPrintColNames();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixGnuPlot0.getDefaultCountWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(9, 19);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.8610873544856914
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 1);
      resultMatrixGnuPlot0.setCountWidth(10);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.assign(resultMatrixSignificance0);
      resultMatrixPlainText0.trimString("v", 2);
      resultMatrixPlainText0.getSignificanceCount(1, 2);
      assertEquals(2, resultMatrixPlainText0.getVisibleColCount());
      
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1) (2)\n---------------\nrow0          \n", string0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.2090464751913745
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.getSignificanceCount((-922), 2297);
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.792731275942218
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setOptions((String[]) null);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.getRevision();
      resultMatrixSignificance0.stdDevPrecTipText();
      assertEquals(0, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.7164603659310003
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(34, 1);
      resultMatrixGnuPlot0.setCountWidth((-840));
      resultMatrixGnuPlot0.setColOrder(intArray0);
      String string0 = resultMatrixSignificance0.toStringKey();
      assertEquals("Key:\n(1) col0\n(2) col1\n", string0);
      
      resultMatrixGnuPlot0.toStringRanking();
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.2702039471233344
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      resultMatrixLatex0.getDefaultPrintRowNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixCSV0.globalInfo();
      resultMatrixHTML0.m_ShowAverage = true;
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      
      String string0 = resultMatrixCSV0.getColName(1);
      assertNull(string0);
      
      resultMatrixCSV0.globalInfo();
      resultMatrixCSV0.getStdDev(0, 1);
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixLatex0.setColHidden(1, false);
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.488039965861683
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.getSignificance((-362), 0);
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertFalse(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.7164834803705906
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex0.setPrintRowNames(false);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.globalInfo();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixCSV0.getDisplayRow(26);
      resultMatrixCSV0.getDefaultRowNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getRevision();
      resultMatrixHTML0.setMean((-3347), (-1), 2);
      resultMatrixCSV0.isStdDev(5220);
      resultMatrixHTML0.getDefaultPrintColNames();
      assertTrue(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=4.284139387711854
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clear();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRowName(0);
      resultMatrixGnuPlot0.assign(resultMatrixLatex0);
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      
      resultMatrixGnuPlot0.toStringMatrix();
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      
      ResultMatrixPlainText.main(stringArray0);
      assertEquals(18, stringArray0.length);
      
      resultMatrixCSV0.getSignificance(2, 2);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixPlainText0.getDisplayRow(26);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.830788079580303
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultStdDevWidth();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 1);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex1.setRemoveFilterName(false);
      resultMatrixLatex1.globalInfo();
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(0, 82);
      resultMatrixLatex2.setPrintRowNames(false);
      assertTrue(resultMatrixLatex2.getEnumerateRowNames());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setEnumerateColNames(false);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixLatex1);
      resultMatrixPlainText1.getRowName((-1));
      resultMatrixPlainText0.m_PrintRowNames = false;
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex3 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.toStringKey();
      resultMatrixPlainText0.setRowName(2, ")");
      resultMatrixCSV0.getAverage(0);
      resultMatrixPlainText0.getStdDevWidth();
      double double0 = resultMatrixPlainText0.getCount(25);
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=4.213518204806218
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[6][0];
      resultMatrixLatex0.setRanking(intArray0);
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringKey();
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixCSV0.RIGHT_PARENTHESES = "h";
      resultMatrixCSV0.getSignificance(0, 125);
      resultMatrixLatex0.m_CountWidth = 1;
      resultMatrixCSV0.getCount((-1010));
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.108064289718111
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getDefaultShowAverage();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=4.024677022932662
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setRowNameWidth(2783);
      resultMatrixCSV0.showStdDevTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals(2783, resultMatrixCSV0.getRowNameWidth());
      assertEquals("Dataset [1]\n-----------\nrow0       \n", string0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.3420067400179367
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultStdDevWidth();
      resultMatrixCSV0.showStdDevTipText();
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      int int0 = resultMatrixLatex0.getVisibleRowCount();
      assertEquals(0, int0);
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(0, resultMatrixLatex0.getVisibleColCount());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=4.28321497504887
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clear();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringMatrix();
      int[][] intArray0 = new int[0][0];
      resultMatrixGnuPlot0.getOptions();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.setOptions(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.28638388550067
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixLatex0.setRowNameWidth(0);
      resultMatrixSignificance0.setColOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex1);
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertFalse(resultMatrixHTML0.getDefaultRemoveFilterName());
      assertEquals(1, resultMatrixHTML0.getColCount());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.539027932228916
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[1][8];
      resultMatrixLatex0.clearSummary();
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.getStdDev(3, 1064);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.getDefaultPrintColNames();
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getDefaultSignificanceWidth());
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.5860919583088093
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.getRowName((-43));
      assertNull(string0);
      
      resultMatrixGnuPlot0.rowNameWidthTipText();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.861090246807445
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 1);
      resultMatrixGnuPlot0.setCountWidth(0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.assign(resultMatrixSignificance0);
      resultMatrixPlainText0.trimString("v", 2);
      resultMatrixPlainText0.getSignificanceCount(0, 260);
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      
      resultMatrixSignificance0.toStringMatrix();
      boolean boolean0 = resultMatrixSignificance0.isRowName(0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.497233194739299
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clearSummary();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 1);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      String string0 = resultMatrixPlainText0.trimString("*", 2);
      assertEquals("*", string0);
      
      resultMatrixPlainText0.getShowAverage();
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(50, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertTrue(resultMatrixSignificance0.getPrintColNames());
      
      resultMatrixGnuPlot0.setStdDev(1, 2, 1276.68124);
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.3435470471826703
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[][] stringArray0 = new String[6][1];
      String[] stringArray1 = new String[3];
      stringArray1[0] = "(";
      stringArray1[1] = "$circ$";
      stringArray1[2] = "(";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[4];
      stringArray2[0] = " ";
      stringArray2[1] = " ";
      stringArray2[2] = ")";
      stringArray2[3] = ")";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[5];
      stringArray3[0] = "$\bullet$";
      stringArray3[1] = " ";
      stringArray3[2] = ")";
      stringArray3[3] = "$circ$";
      String[] stringArray4 = new String[7];
      stringArray4[0] = ")";
      stringArray4[1] = ")";
      stringArray4[2] = "(";
      stringArray4[3] = "$circ$";
      stringArray4[4] = ")";
      stringArray4[5] = " ";
      stringArray4[6] = "$\bullet$";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[5];
      stringArray5[0] = "(";
      stringArray5[1] = ")";
      stringArray5[2] = "";
      stringArray5[3] = ")";
      stringArray5[4] = "!)";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[4];
      stringArray6[0] = "$circ$";
      stringArray6[1] = " ";
      stringArray6[2] = "(";
      stringArray6[3] = "";
      stringArray0[5] = stringArray6;
      int int0 = resultMatrixLatex0.getColSize(stringArray0, 26);
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, int0);
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.4884858967423966
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      boolean boolean0 = resultMatrixPlainText0.getColHidden(2057);
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertFalse(boolean0);
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertTrue(resultMatrixPlainText0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=4.0491213498303935
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.clearSummary();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.getColName(2);
      assertNull(string0);
      
      String string1 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string1);
      
      resultMatrixCSV0.getRowHidden((-1895));
      resultMatrixCSV0.meanWidthTipText();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(2, 58);
      resultMatrixLatex2.colNameWidthTipText();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.getDefaultStdDevWidth();
      assertFalse(resultMatrixCSV1.getRemoveFilterName());
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.341629132163693
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.632182957651004
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultPrintColNames();
      String string0 = resultMatrixLatex0.getSummaryTitle(2);
      assertEquals("c", string0);
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex0.colNameWidthTipText();
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultCountWidth());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.476718729049958
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[1][8];
      resultMatrixLatex0.clearSummary();
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      String string0 = resultMatrixLatex0.toStringKey();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption (Key)}\n\\scriptsize\n{\\centering\n\\begin{tabular}{cl}\\\\\n(1) & col0 \\\\\n\\end{tabular}\n}\n\\end{table}\n", string0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 0);
      double double0 = resultMatrixCSV0.getStdDev(81, 1);
      assertEquals(0.0, double0, 0.01);
      
      resultMatrixCSV0.toStringSummary();
      assertFalse(resultMatrixCSV0.getShowAverage());
      assertEquals(0, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.132931479804747
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setEnumerateRowNames(true);
      int[][] intArray0 = new int[6][0];
      resultMatrixLatex0.setRanking(intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertFalse(resultMatrixHTML0.getDefaultRemoveFilterName());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertTrue(resultMatrixHTML0.getEnumerateRowNames());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.341542895759036
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(40, resultMatrixHTML0.getRowNameWidth());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.globalInfo();
      String string0 = resultMatrixLatex0.toStringKey();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption (Key)}\n\\scriptsize\n{\\centering\n\\begin{tabular}{cl}\\\\\n(1) & col0 \\\\\n\\end{tabular}\n}\n\\end{table}\n", string0);
      
      resultMatrixCSV0.getStdDev(0, 0);
      resultMatrixCSV0.toStringSummary();
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.4168515916441304
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.getRowName(0);
      assertEquals("row0", string0);
      assertNotNull(string0);
      
      resultMatrixLatex0.getDefaultPrintColNames();
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertFalse(resultMatrixLatex0.getShowAverage());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=4.335372767700537
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.setMeanPrec((-1741));
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "v";
      stringArray0[1] = " ";
      stringArray0[2] = "*";
      stringArray0[3] = ")";
      stringArray0[4] = ")";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.getSignificance(0, 2);
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(40, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      
      resultMatrixLatex0.getStdDev((-645), 1);
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.632700919839764
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(0, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.globalInfo();
      String string0 = resultMatrixLatex0.toStringKey();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption (Key)}\n\\scriptsize\n{\\centering\n\\begin{tabular}{cl}\\\\\n(1) & col0 \\\\\n\\end{tabular}\n}\n\\end{table}\n", string0);
      
      resultMatrixCSV0.getStdDev(1, 0);
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.getDefaultPrintColNames();
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
      assertFalse(resultMatrixCSV0.getShowStdDev());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=4.284137030025578
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clear();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot1);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.setSignificanceWidth(2);
      assertEquals(2, resultMatrixPlainText1.getSignificanceWidth());
      
      resultMatrixPlainText0.getColName(0);
      resultMatrixPlainText0.getStdDevPrec();
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot1.clear();
      String string0 = resultMatrixPlainText0.trimString("col0", 0);
      assertEquals("col0", string0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=4.137529348000446
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      String[] stringArray0 = new String[9];
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultStdDevWidth();
      resultMatrixCSV0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.setRowName(0, "8034");
      resultMatrixCSV0.getAverage((-2016));
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("v");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=4.160340604754737
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 97);
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      resultMatrixHTML0.toString();
      resultMatrixHTML0.setRowHidden((-2195), true);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixLatex1.setMeanPrec(3167);
      resultMatrixSignificance0.setShowStdDev(true);
      resultMatrixSignificance0.meanPrecTipText();
      resultMatrixSignificance0.toStringKey();
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(0, resultMatrixSignificance0.getRowNameWidth());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      
      resultMatrixHTML0.getDefaultMeanWidth();
      resultMatrixHTML0.getDefaultStdDevWidth();
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(97, resultMatrixHTML0.getVisibleRowCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRevision();
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowStdDev());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintColNames());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.4743444804056574
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.LEFT_PARENTHESES = "kk}qr}#";
      resultMatrixLatex0.m_CountWidth = 1;
      resultMatrixLatex0.getDefaultMeanWidth();
      resultMatrixLatex0.LOSS_STRING = "kk}qr}#";
      resultMatrixLatex0.printColNamesTipText();
      resultMatrixLatex0.getDefaultPrintRowNames();
      resultMatrixLatex0.getDefaultSignificanceWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      String string0 = resultMatrixHTML0.toStringKey();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td colspan=\"2\"><b>Key</b></td></tr>\n   <tr><td><b>(1)</b></td><td>col0</td></tr>\n</table>\n", string0);
      
      int int0 = resultMatrixLatex0.getVisibleRowCount();
      assertEquals(1, int0);
      
      resultMatrixHTML0.getEnumerateRowNames();
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(1, resultMatrixHTML0.getCountWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      
      boolean boolean0 = resultMatrixLatex0.getPrintColNames();
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.6374787505424213
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[6][0];
      resultMatrixLatex0.setRanking(intArray0);
      resultMatrixLatex0.toArray();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.getDefaultPrintColNames();
      assertEquals(0, resultMatrixHTML0.getRowNameWidth());
      assertFalse(resultMatrixHTML0.getPrintColNames());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertFalse(resultMatrixHTML0.getShowStdDev());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.3844251966992696
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getRowName(2);
      resultMatrixLatex0.setPrintColNames(false);
      resultMatrixLatex0.clearHeader();
      resultMatrixLatex0.setColHidden(0, false);
      int[][] intArray0 = new int[0][2];
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.clear();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.trimString((String) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=4.109874071308109
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      String string0 = resultMatrixHTML0.toString();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>($\\circ$/ /$\\bullet$)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixHTML0.setRowHidden(944, true);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixHTML0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixLatex1.setMeanPrec(2);
      resultMatrixSignificance0.setShowStdDev(true);
      resultMatrixSignificance0.meanPrecTipText();
      resultMatrixSignificance0.toStringKey();
      resultMatrixHTML0.getDefaultStdDevWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixSignificance1);
      resultMatrixGnuPlot1.getRevision();
      assertEquals(40, resultMatrixGnuPlot1.getRowNameWidth());
      assertFalse(resultMatrixGnuPlot1.getRemoveFilterName());
      assertEquals(0, resultMatrixGnuPlot1.getDefaultSignificanceWidth());
      assertEquals(0, resultMatrixGnuPlot1.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot1.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot1.getMeanWidth());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.4903559294679694
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixGnuPlot0.toStringRanking();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.doubleToString(0.0, (-76));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.058100872134521
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[6][0];
      resultMatrixLatex0.setRanking(intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      int int0 = resultMatrixHTML0.getRowCount();
      assertEquals(1, int0);
      
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML1);
      resultMatrixSignificance0.getDefaultShowStdDev();
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.198076662645458
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[6][0];
      resultMatrixLatex0.setRanking(intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixPlainText0.getDefaultShowStdDev();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.873090372775642
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getVisibleRowCount();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.getStdDev(2, 22);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot((-285), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.390596174704372
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setSize(1, 2);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.padString("-stddev-prec", 2);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance(2, (-569));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.292892249865469
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.listOptions();
      resultMatrixGnuPlot0.getVisibleColCount();
      resultMatrixGnuPlot0.clearSummary();
      // Undeclared exception!
      resultMatrixGnuPlot0.setSize(1946, 1946);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.7556487120659585
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.getRowName(1);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot1.m_ColNames = stringArray0;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.assign(resultMatrixGnuPlot1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.780639065442357
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixLatex0.getColCount();
      int int0 = resultMatrixGnuPlot0.getMeanPrec();
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(2, int0);
      assertEquals(40, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.3210535826453573
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 1);
      resultMatrixCSV0.getSignificance(0, 0);
      resultMatrixCSV0.toStringRanking();
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getColCount());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.901511874542778
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.getRowName(97);
      resultMatrixGnuPlot0.assign(resultMatrixCSV0);
      resultMatrixGnuPlot0.padString("", (-3623));
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixSignificance1);
      assertEquals(1, resultMatrixGnuPlot1.getVisibleColCount());
      
      String string0 = resultMatrixGnuPlot1.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"(1)\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      resultMatrixCSV0.setCount(81, (-5371.549683832));
      resultMatrixGnuPlot1.getDefaultEnumerateColNames();
      resultMatrixCSV0.setRowName(2, "*");
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(40, resultMatrixCSV0.getRowNameWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.159776182455298
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.setShowStdDev(false);
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
      
      resultMatrixHTML0.m_RowNameWidth = 2;
      resultMatrixGnuPlot0.getMean(2, 1);
      resultMatrixGnuPlot0.setColName(54, "");
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.3152739318325937
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[5][8];
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      boolean boolean0 = resultMatrixLatex0.getRemoveFilterName();
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertFalse(boolean0);
      assertEquals(0, resultMatrixLatex0.getDefaultCountWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.48629831128984
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String[][] stringArray0 = new String[1][0];
      String[] stringArray1 = new String[4];
      boolean[] booleanArray0 = new boolean[2];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      resultMatrixSignificance0.m_ColHidden = booleanArray0;
      stringArray1[0] = ">-<";
      stringArray1[1] = "v";
      stringArray1[2] = "v";
      stringArray1[3] = ")";
      resultMatrixSignificance0.setRowNameWidth((-1));
      stringArray0[0] = stringArray1;
      int int0 = resultMatrixSignificance0.getColSize(stringArray0, (-715), true, true);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.5185951110432594
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[][] stringArray0 = new String[4][6];
      String[] stringArray1 = new String[1];
      stringArray1[0] = "fE(@6#VD_Z*l~N2";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[5];
      stringArray2[0] = "*";
      stringArray2[1] = "(";
      stringArray2[2] = "(";
      stringArray2[3] = "(";
      stringArray2[4] = "fE(@6#VD_Z*l~N2";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[7];
      stringArray3[0] = "fE(@6#VD_Z*l~N2";
      stringArray3[1] = "*";
      stringArray3[2] = "(";
      stringArray3[3] = "*";
      stringArray3[4] = "*";
      stringArray3[5] = ")";
      stringArray3[6] = " ";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[5];
      stringArray4[0] = ")";
      stringArray4[1] = "v";
      stringArray4[2] = "@OZ5zqq5VAzl#=";
      stringArray4[3] = "fE(@6#VD_Z*l~N2";
      stringArray4[4] = " ";
      stringArray0[3] = stringArray4;
      int int0 = resultMatrixPlainText0.getColSize(stringArray0, 21, false, false);
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(0, int0);
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.3476874612240746
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      double double0 = resultMatrixCSV0.getAverage(1);
      assertEquals(0.0, double0, 0.01);
      
      resultMatrixGnuPlot0.getRowName((-4481));
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.424780285662753
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.setRowHidden(1, true);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixHTML0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixLatex1.setMeanPrec(1);
      assertEquals(1, resultMatrixLatex1.getMeanPrec());
      
      resultMatrixSignificance0.setShowStdDev(true);
      resultMatrixSignificance0.meanPrecTipText();
      resultMatrixSignificance0.toStringKey();
      resultMatrixHTML0.getDefaultMeanWidth();
      resultMatrixHTML0.getDefaultStdDevWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRevision();
      assertEquals("The number of decimals after the decimal point for the mean.", resultMatrixGnuPlot0.meanPrecTipText());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.6752605342585607
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringKey();
      resultMatrixHTML0.setRowHidden(0, true);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixHTML0.m_StdDevWidth = 0;
      resultMatrixLatex0.setMeanPrec((-970));
      resultMatrixSignificance0.setShowStdDev(true);
      resultMatrixSignificance0.meanPrecTipText();
      resultMatrixSignificance0.toStringKey();
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      
      resultMatrixLatex0.m_MeanWidth = 25;
      resultMatrixHTML0.getDefaultMeanWidth();
      resultMatrixHTML0.getDefaultStdDevWidth();
      assertEquals(0, resultMatrixHTML0.getVisibleRowCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRevision();
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=4.088768490591432
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRowName((-1));
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      
      resultMatrixGnuPlot0.assign(resultMatrixLatex0);
      resultMatrixGnuPlot0.padString("$\bullet$", 59);
      resultMatrixGnuPlot0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 0);
      resultMatrixCSV0.setCount(5, (-3014.6153603432545));
      resultMatrixCSV0.setRowName(0, " ");
      resultMatrixGnuPlot0.toStringRanking();
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.6997270190817515
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[4];
      stringArray0[0] = " ";
      stringArray0[1] = "";
      stringArray0[2] = " ";
      stringArray0[3] = "+1? ";
      resultMatrixGnuPlot0.setOptions(stringArray0);
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      assertEquals(0, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=4.0102482632350664
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      String[] stringArray0 = new String[7];
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      try { 
        resultMatrixSignificance0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.2842228217416776
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.437192602354846
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRowOrder((int[]) null);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.getSignificance(1, 0);
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.328811953677466
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringKey();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultRemoveFilterName();
      resultMatrixCSV0.assign(resultMatrixSignificance0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.padString((String) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.911820963031574
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.getSummaryTitle(2044);
      assertEquals("q", string0);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "v";
      stringArray0[1] = "*";
      stringArray0[2] = "q";
      stringArray0[3] = "*";
      stringArray0[4] = "";
      stringArray0[5] = "v";
      stringArray0[6] = " ";
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.toStringKey();
      assertEquals(50, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertTrue(resultMatrixSignificance0.getPrintColNames());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.4977658926837
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultRowNameWidth();
      resultMatrixLatex0.clearRanking();
      resultMatrixLatex0.clearHeader();
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 2;
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.setRemoveFilterName(true);
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.setPrintRowNames(true);
      assertTrue(resultMatrixLatex0.getRemoveFilterName());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setEnumerateColNames(false);
      resultMatrixPlainText0.getRowName(0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixPlainText0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultEnumerateColNames();
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.80856538530657
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setStdDevWidth(1);
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.getOptions();
      assertEquals(1, resultMatrixGnuPlot0.getStdDevWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultCountWidth();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringRanking();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.4375896640979473
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.getSignificance(2, 0);
      assertFalse(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.5360139485981064
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(16, 114);
      resultMatrixLatex0.m_PrintColNames = true;
      int[] intArray0 = new int[0];
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.RIGHT_PARENTHESES = "){jO^D$/";
      resultMatrixLatex0.removeFilterName("){jO^D$/");
      resultMatrixLatex0.setStdDevWidth((-6577));
      resultMatrixLatex0.getDisplayName();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(1, resultMatrixPlainText0.getColCount());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = " ";
      stringArray0[1] = "$circ$";
      stringArray0[2] = "Can't normalize array. Sum is zero.";
      stringArray0[3] = " ";
      resultMatrixPlainText0.m_ColNames = stringArray0;
      resultMatrixPlainText0.toStringRanking();
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.3425812486644295
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowNameWidth((-5990));
      int int0 = resultMatrixLatex0.getVisibleRowCount();
      assertEquals(1, int0);
      assertEquals(0, resultMatrixLatex0.getDefaultSignificanceWidth());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.2980067709896765
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultRemoveFilterName();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.getDisplayName();
      resultMatrixHTML0.getDisplayName();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.getRowHidden(1);
      ResultMatrixCSV resultMatrixCSV2 = null;
      try {
        resultMatrixCSV2 = new ResultMatrixCSV((-25), 1);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.6750235273176433
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      double double0 = resultMatrixGnuPlot0.getMean(1, 1);
      assertEquals(0.0, double0, 0.01);
      
      int int0 = resultMatrixGnuPlot0.getDisplayCol(1);
      assertEquals((-1), int0);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.toStringKey();
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals("Key:\n(1) col0\n", string0);
      
      resultMatrixHTML0.significanceWidthTipText();
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertTrue(resultMatrixHTML0.getPrintColNames());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertFalse(resultMatrixHTML0.getEnumerateColNames());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.382435249959657
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[4];
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      int int0 = resultMatrixGnuPlot0.getVisibleColCount();
      assertEquals(1, int0);
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.2679594201157647
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      boolean boolean0 = resultMatrixGnuPlot0.isSignificance(97);
      assertTrue(boolean0);
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.9328655350318167
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 2);
      int[] intArray0 = new int[0];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setCountWidth(2);
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.isSignificance(0);
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      
      resultMatrixPlainText0.getCount(0);
      assertEquals(2, resultMatrixPlainText0.getCountWidth());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=3.4980678861022305
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringKey();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultRemoveFilterName();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringKey();
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.getDisplayName();
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 97;
      resultMatrixSignificance0.setColOrder(intArray0);
      boolean boolean0 = resultMatrixSignificance0.isMean(97);
      assertTrue(resultMatrixSignificance0.getDefaultEnumerateColNames());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=3.0915629244761798
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[5];
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertTrue(resultMatrixHTML0.getPrintColNames());
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      
      resultMatrixGnuPlot0.addHeader("v", "");
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.306819511933868
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int int0 = 2675;
      resultMatrixGnuPlot0.m_StdDevWidth = 2675;
      int int1 = (-835);
      resultMatrixGnuPlot0.padString("5=+<p8?yh8F", (-835), true);
      int int2 = 1970;
      resultMatrixGnuPlot0.getStdDev(2675, 1970);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      String[][] stringArray0 = new String[0][7];
      resultMatrixGnuPlot0.m_ColNameWidth = 1102;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getColSize(stringArray0, 1970, true, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.340655691661766
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      resultMatrixLatex0.getDefaultMeanWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      
      resultMatrixCSV0.globalInfo();
      resultMatrixLatex0.toStringKey();
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      
      double double0 = resultMatrixCSV0.getStdDev(0, 1);
      assertEquals(0.0, double0, 0.01);
      
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixCSV0.getColNameWidth();
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertFalse(resultMatrixCSV0.getShowStdDev());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=4.163507410312309
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[1];
      resultMatrixPlainText0.getStdDevPrec();
      ResultMatrixPlainText.main(stringArray0);
      String string0 = resultMatrixPlainText0.doubleToString((-9.87616), 2);
      assertEquals("-9.88", string0);
      
      String string1 = resultMatrixPlainText0.trimString("FlbB/-]/f(", (-1323));
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals("FlbB/-]/f(", string1);
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=3.300312115255527
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int int0 = resultMatrixGnuPlot0.getVisibleColCount();
      assertEquals(1, int0);
      
      resultMatrixGnuPlot0.getColName(1);
      assertFalse(resultMatrixGnuPlot0.getDefaultShowStdDev());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintColNames());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=4.237616205186474
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixLatex0.getRowName(2);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText1.setSignificanceWidth(4622);
      resultMatrixPlainText0.getColName(0);
      resultMatrixPlainText0.getStdDevPrec();
      String[] stringArray0 = new String[0];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.clear();
      resultMatrixPlainText1.trimString("", 0);
      assertEquals(4622, resultMatrixPlainText1.getSignificanceWidth());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=3.3244414142316545
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[1][8];
      resultMatrixLatex0.clearSummary();
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.trimString("", 58);
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getDefaultStdDevWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.253334564854392
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.LEFT_PARENTHESES = "$\bullet$";
      resultMatrixLatex0.padString("", 0, false);
      resultMatrixHTML0.setMeanPrec(0);
      resultMatrixPlainText0.setMeanPrec(5);
      resultMatrixHTML0.setMean(1, 23, (-1564.0));
      ResultMatrixCSV resultMatrixCSV0 = null;
      try {
        resultMatrixCSV0 = new ResultMatrixCSV(1, (-204));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=3.489132740827002
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clearRanking();
      int int0 = 0;
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.removeFilterName(" statistically significant improvement or degradation}");
      int int1 = 0;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      int int2 = 92;
      resultMatrixHTML0.setMeanPrec(92);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      int int3 = 967;
      resultMatrixPlainText0.setMeanPrec(967);
      resultMatrixHTML0.setMean(92, (-1), 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=3.5211446018115824
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixLatex0.setEnumerateColNames(true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      double double0 = resultMatrixCSV0.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = 1013.6473;
      resultMatrixLatex0.m_Counts = doubleArray0;
      String string0 = resultMatrixGnuPlot0.getRowName(1);
      assertNull(string0);
      
      resultMatrixPlainText0.setCount(1, 2849.464949279);
      resultMatrixGnuPlot0.isSignificance((-1290));
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getRowNameWidth());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.446574807132181
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixLatex0.getRowName(2);
      resultMatrixLatex0.setPrintColNames(true);
      resultMatrixLatex0.clearHeader();
      resultMatrixLatex0.setColHidden((-545), true);
      resultMatrixLatex0.setCount(1, 2);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "$\bullet$";
      stringArray0[1] = "(";
      resultMatrixHTML0.toStringSummary();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML1.getDisplayName();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML1);
      resultMatrixSignificance0.setColOrder((int[]) null);
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertFalse(resultMatrixSignificance0.getDefaultShowAverage());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.380167676263512
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColOrder((int[]) null);
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.7935338262622054
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(33, 33);
      resultMatrixPlainText0.setColNameWidth(33);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      // Undeclared exception!
      resultMatrixPlainText1.toString();
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.490877904621952
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[3];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setColNameWidth((-2766));
      resultMatrixHTML0.toStringSummary();
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.meanWidthTipText();
      resultMatrixCSV0.clearHeader();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=3.8995023997724814
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_ColOrder = null;
      String string0 = resultMatrixGnuPlot0.getRowName((-2749));
      assertNull(string0);
      
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(18, stringArray0.length);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string1 = resultMatrixHTML0.toStringKey();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td colspan=\"2\"><b>Key</b></td></tr>\n   <tr><td><b>(1)</b></td><td>col0</td></tr>\n</table>\n", string1);
      
      int int0 = resultMatrixHTML0.getMeanWidth();
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, int0);
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=3.755206364611079
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      double[][] doubleArray0 = new double[14][7];
      resultMatrixPlainText0.setSignificanceWidth((-720));
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      doubleArray0[0] = doubleArray1;
      resultMatrixPlainText0.m_StdDev = doubleArray0;
      resultMatrixPlainText0.getShowAverage();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      
      resultMatrixHTML0.m_MeanWidth = (-139);
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixPlainText0.globalInfo();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setMeanWidth((-5834));
      resultMatrixLatex0.getRowName(0);
      resultMatrixLatex0.clear();
      resultMatrixHTML0.getColCount();
      resultMatrixLatex0.toStringSummary();
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.540320757051153
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setSignificanceWidth((-499));
      String string0 = resultMatrixCSV0.toStringKey();
      assertEquals("Key,\n[1],col0\n", string0);
      
      resultMatrixCSV0.getRowHidden(3263);
      resultMatrixCSV0.meanWidthTipText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 26);
      resultMatrixHTML0.getDefaultPrintColNames();
      assertEquals(0, resultMatrixHTML0.getVisibleColCount());
      
      boolean boolean0 = resultMatrixCSV0.isRowName(0);
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertTrue(resultMatrixCSV0.getDefaultPrintRowNames());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=4.082877089932363
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultRowNameWidth();
      resultMatrixLatex0.clearRanking();
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 2;
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.setRemoveFilterName(true);
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.setPrintRowNames(true);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 1);
      resultMatrixHTML0.toString();
      resultMatrixHTML0.listOptions();
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixLatex0.setPrintRowNames(true);
      resultMatrixLatex0.toStringMatrix();
      assertTrue(resultMatrixLatex0.getRemoveFilterName());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=4.237615675031667
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.showStdDevTipText();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixCSV0.getSignificance(0, 2);
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertFalse(resultMatrixCSV0.getShowStdDev());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=4.0541825603239126
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.trimString("$circ$", 1);
      assertEquals("$", string0);
      
      int int0 = resultMatrixPlainText0.getSignificanceCount(2, 2);
      assertEquals(0, int0);
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string1 = resultMatrixSignificance0.toStringMatrix();
      assertFalse(resultMatrixSignificance0.getShowStdDev());
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string1);
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=3.7283361227838925
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.assign(resultMatrixLatex0);
      resultMatrixPlainText0.trimString("", (-1889));
      int int0 = resultMatrixPlainText0.getSignificanceCount((-1889), 0);
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, int0);
      assertEquals(0, resultMatrixPlainText0.getRowNameWidth());
      assertFalse(resultMatrixPlainText0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertEquals("Dataset (1)\n-----------\n", string0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=3.2411278527799965
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.setMeanPrec(0);
      resultMatrixGnuPlot1.clear();
      assertEquals(2, resultMatrixGnuPlot1.getMeanPrec());
      
      double double0 = resultMatrixGnuPlot0.getMean(0, 97);
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=3.398727041504826
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.padString("XTh", (-2941), true);
      assertEquals("XTh", string0);
      
      int int0 = resultMatrixLatex0.getVisibleRowCount();
      assertEquals(1, int0);
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=4.13624567715266
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clear();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.m_MeanWidth = 0;
      resultMatrixGnuPlot0.getRowName((-3735));
      resultMatrixGnuPlot0.assign(resultMatrixCSV0);
      resultMatrixGnuPlot0.padString(" ", (-3735));
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"[1]\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      resultMatrixCSV0.setCount((-5088), (-3735));
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      
      resultMatrixCSV0.setRowName((-5088), "*");
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=3.380937795632014
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setMeanPrec(97);
      resultMatrixGnuPlot0.setRowName(2388, "");
      assertEquals(97, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=3.5841931382898213
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clearRanking();
      double[] doubleArray0 = new double[0];
      boolean boolean0 = true;
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.removeFilterName(" statistically significant improvement or degradation}");
      resultMatrixLatex0.m_Counts = doubleArray0;
      resultMatrixLatex0.getRowName((-3963));
      resultMatrixLatex0.setPrintColNames(true);
      resultMatrixLatex0.clearHeader();
      resultMatrixLatex0.setColHidden(0, false);
      resultMatrixLatex0.m_StdDev = null;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setCount(0, 0.0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 141
  /*Coverage entropy=3.500149161552708
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.getRowName(2);
      assertNull(string0);
      
      resultMatrixLatex0.setPrintColNames(false);
      resultMatrixLatex0.clearHeader();
      resultMatrixLatex0.setColHidden(2, false);
      int[][] intArray0 = new int[0][2];
      resultMatrixLatex0.setRanking(intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      int int0 = ResultMatrix.SIGNIFICANCE_WIN;
      String string1 = resultMatrixHTML0.getColName(2);
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertNull(string1);
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertFalse(resultMatrixHTML0.getPrintColNames());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=3.6145444388645025
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.getRowName(2);
      assertNull(string0);
      
      resultMatrixLatex0.setPrintColNames(false);
      resultMatrixLatex0.clearHeader();
      resultMatrixLatex0.setColHidden(0, false);
      int[][] intArray0 = new int[0][2];
      resultMatrixLatex0.setRanking(intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      int int0 = ResultMatrix.SIGNIFICANCE_WIN;
      String string1 = resultMatrixHTML0.getColName(2);
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertNull(string1);
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=4.188813517149678
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixLatex0.getRowName(2);
      resultMatrixLatex0.setPrintColNames(false);
      resultMatrixLatex0.clearHeader();
      resultMatrixLatex0.setColHidden(0, false);
      resultMatrixLatex0.setCount(1, 2);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "$\bullet$";
      stringArray0[1] = "(";
      stringArray0[2] = "(";
      ResultMatrixGnuPlot.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(0, 40);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex1);
      resultMatrixCSV0.setCount(0, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(29, 2864);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=3.8977120289238103
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getOptions();
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixGnuPlot0.setCount(3041, 0.0);
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 0);
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals("Dataset (1) col0\n----------------\n----------------\n(v/ /*)        |\n", string0);
  }

  /**
  //Test case number: 145
  /*Coverage entropy=3.8144730690601683
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.globalInfo();
      resultMatrixPlainText0.getDefaultColNameWidth();
      String[][] stringArray0 = new String[9][8];
      String[] stringArray1 = new String[4];
      stringArray1[0] = "Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n";
      stringArray1[1] = "(";
      stringArray1[2] = "(";
      stringArray1[3] = "v";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[0];
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[7];
      stringArray3[0] = "*";
      stringArray3[1] = " ";
      stringArray3[2] = "(";
      stringArray3[3] = "Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n";
      stringArray3[4] = "v";
      stringArray3[5] = "*";
      stringArray3[6] = "v";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[2];
      stringArray4[0] = " ";
      stringArray4[1] = "*";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[3];
      stringArray5[0] = "(";
      stringArray5[1] = "v";
      stringArray5[2] = "(";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[10];
      stringArray6[0] = "Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n";
      stringArray6[1] = ")";
      stringArray6[3] = "*";
      stringArray6[4] = "v";
      stringArray6[5] = "(";
      stringArray6[6] = "v";
      stringArray6[7] = "Generates the output as plain text (for fixed width fonts).";
      stringArray6[8] = "*";
      stringArray0[5] = stringArray6;
      String[] stringArray7 = new String[8];
      stringArray7[0] = "v";
      stringArray7[1] = "Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n";
      stringArray7[2] = "Generates the output as plain text (for fixed width fonts).";
      stringArray7[3] = " ";
      stringArray7[4] = "(";
      stringArray7[7] = "*";
      stringArray0[6] = stringArray7;
      String[] stringArray8 = new String[4];
      stringArray8[0] = "(";
      stringArray8[1] = ")";
      stringArray8[2] = "v";
      stringArray8[3] = ")";
      stringArray0[7] = stringArray8;
      String[] stringArray9 = new String[1];
      stringArray9[0] = "Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n";
      stringArray0[8] = stringArray9;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getColSize(stringArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 146
  /*Coverage entropy=3.0851171470102146
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[6][0];
      resultMatrixLatex0.toStringSummary();
      resultMatrixLatex0.setRanking(intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      assertEquals(0, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      
      resultMatrixLatex0.getDefaultColNameWidth();
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(1, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=3.460337287770222
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      String string0 = resultMatrixSignificance0.getColName(0);
      assertEquals("(1)", string0);
      assertNotNull(string0);
      
      resultMatrixSignificance0.getDefaultRemoveFilterName();
      resultMatrixSignificance0.clearSummary();
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getRowHidden(0);
      resultMatrixCSV0.meanWidthTipText();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixCSV0);
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      assertEquals(25, resultMatrixLatex1.getRowNameWidth());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      
      resultMatrixLatex0.colNameWidthTipText();
      resultMatrixCSV0.getDefaultStdDevWidth();
      resultMatrixCSV0.showStdDevTipText();
      assertEquals(1, resultMatrixCSV0.getColCount());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=3.5097641602891625
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixLatex0.setEnumerateColNames(true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      
      resultMatrixPlainText0.getColName(0);
      resultMatrixGnuPlot0.m_SignificanceWidth = 545;
      resultMatrixCSV0.getAverage(0);
      resultMatrixGnuPlot0.getRowName(1);
      assertEquals(1, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=3.6835868197190123
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      boolean boolean0 = true;
      resultMatrixCSV0.m_EnumerateColNames = true;
      resultMatrixPlainText0.setSize(0, 1);
      resultMatrixCSV0.assign(resultMatrixPlainText0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.padString("*", 1);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 172);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixLatex0);
      // Undeclared exception!
      try { 
        resultMatrixHTML1.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 150
  /*Coverage entropy=3.5396680687913826
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.getRowName(1);
      assertNull(string0);
      
      String string1 = resultMatrixLatex0.doubleToString(2, 2);
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals("2.00", string1);
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=3.490877904621952
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getSignificance(1, 0);
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertTrue(resultMatrixCSV0.getDefaultPrintRowNames());
      assertFalse(resultMatrixCSV0.getShowStdDev());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=3.3423210352894626
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setEnumerateRowNames(false);
      resultMatrixGnuPlot0.setPrintRowNames(true);
      int int0 = resultMatrixGnuPlot0.getVisibleColCount();
      assertEquals(1, int0);
      
      resultMatrixGnuPlot0.getRevision();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=3.3940014245149444
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixLatex0.clearSummary();
      int[][] intArray0 = new int[0][4];
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 154
  /*Coverage entropy=3.177974776448399
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      resultMatrixLatex0.getDefaultMeanWidth();
      resultMatrixLatex0.getDefaultPrintRowNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixLatex0.colNameWidthTipText();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.getDefaultStdDevWidth();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("(");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 155
  /*Coverage entropy=4.076278037205686
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      String[] stringArray0 = new String[9];
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultStdDevWidth();
      resultMatrixCSV0.getRevision();
      String[] stringArray1 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray1.length);
      
      resultMatrixCSV0.getDefaultRemoveFilterName();
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 156
  /*Coverage entropy=3.488690020032864
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      int[] intArray0 = new int[3];
      intArray0[0] = (-1998);
      intArray0[1] = (-1998);
      intArray0[2] = 1;
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      String string0 = resultMatrixGnuPlot0.enumerateRowNamesTipText();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals("Whether to enumerate the row names (prefixing them with '(x)', with 'x' being the index).", string0);
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
  }

  /**
  //Test case number: 157
  /*Coverage entropy=3.435005016902289
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      String string0 = resultMatrixGnuPlot0.showStdDevTipText();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals("Whether to display the standard deviation column.", string0);
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=4.051588662993173
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultStdDevWidth();
      resultMatrixCSV0.getRevision();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(18, stringArray0.length);
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 159
  /*Coverage entropy=3.709748020573812
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultPrintColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 2);
      resultMatrixSignificance0.setOptions((String[]) null);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 160
  /*Coverage entropy=3.4930809918540033
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.isAverage(1);
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 161
  /*Coverage entropy=3.707519630484875
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = resultMatrixLatex0.getOptions();
      assertEquals(18, stringArray0.length);
      
      int[][] intArray0 = new int[6][0];
      resultMatrixLatex0.setRanking(intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      int[] intArray1 = resultMatrixHTML0.getColOrder();
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertNull(intArray1);
  }

  /**
  //Test case number: 162
  /*Coverage entropy=4.163488812917698
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.doubleToString(2, 0);
      resultMatrixLatex0.countWidthTipText();
      resultMatrixLatex0.toStringKey();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "(";
      stringArray0[1] = "v";
      stringArray0[2] = "v";
      stringArray0[3] = "(";
      ResultMatrixCSV.main(stringArray0);
      assertEquals(4, stringArray0.length);
  }

  /**
  //Test case number: 163
  /*Coverage entropy=3.3946975226974616
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixGnuPlot0.setRowOrder((int[]) null);
      resultMatrixCSV0.toStringSummary();
      int int0 = resultMatrixGnuPlot0.getVisibleColCount();
      assertEquals(1, int0);
      
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
  }

  /**
  //Test case number: 164
  /*Coverage entropy=4.0017433358545125
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      String[] stringArray0 = new String[9];
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultStdDevWidth();
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.getRevision();
      resultMatrixCSV0.getCount(0);
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.listOptions();
      resultMatrixCSV0.getDefaultRowNameWidth();
      assertFalse(resultMatrixCSV0.getShowStdDev());
      assertEquals(0, resultMatrixCSV0.getDefaultCountWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 165
  /*Coverage entropy=3.755564581065081
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixCSV0);
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      resultMatrixLatex1.getVisibleRowCount();
      resultMatrixGnuPlot0.getRowOrder();
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
  }

  /**
  //Test case number: 166
  /*Coverage entropy=4.05910164140707
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clear();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRowName(1);
      resultMatrixGnuPlot0.assign(resultMatrixLatex0);
      resultMatrixGnuPlot0.toStringMatrix();
      assertEquals(0, resultMatrixGnuPlot0.getRowNameWidth());
      
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixCSV0.getSignificance(2330, 26);
      resultMatrixLatex0.getEnumerateColNames();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 167
  /*Coverage entropy=3.6316182469369016
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDisplayCol((-492));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.assign(resultMatrixGnuPlot0);
      assertEquals(50, resultMatrixSignificance0.getRowNameWidth());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      String string0 = resultMatrixGnuPlot0.enumerateColNamesTipText();
      assertEquals("Whether to enumerate the column names (prefixing them with '(x)', with 'x' being the index).", string0);
  }

  /**
  //Test case number: 168
  /*Coverage entropy=3.085665894037835
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[6][0];
      resultMatrixLatex0.setRanking(intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixLatex0.setSize(0, 114);
      assertEquals(114, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 169
  /*Coverage entropy=3.6064490455582465
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 2);
      resultMatrixSignificance0.assign(resultMatrixLatex0);
      resultMatrixSignificance0.setOptions((String[]) null);
      assertEquals(0, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 170
  /*Coverage entropy=3.5354315286325124
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      String string0 = resultMatrixSignificance0.padString("  ", 0);
      assertEquals("  ", string0);
      
      int int0 = resultMatrixSignificance0.getStdDevWidth();
      assertEquals(0, int0);
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 171
  /*Coverage entropy=3.6734666743846436
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.getRowName(0);
      assertEquals("row0", string0);
      assertNotNull(string0);
      
      resultMatrixLatex0.isStdDev(1);
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
  }

  /**
  //Test case number: 172
  /*Coverage entropy=3.347965059077318
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.getDefaultCountWidth();
      resultMatrixLatex0.getColHidden(2);
      assertFalse(resultMatrixLatex0.getEnumerateColNames());
  }

  /**
  //Test case number: 173
  /*Coverage entropy=3.435005016902289
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.getShowStdDev();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 174
  /*Coverage entropy=3.3475751388335047
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.setPrintRowNames(false);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.getAverage(0);
      resultMatrixGnuPlot0.getRowName(1);
      assertTrue(resultMatrixGnuPlot0.getEnumerateRowNames());
  }

  /**
  //Test case number: 175
  /*Coverage entropy=3.540390206318463
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[6][0];
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.setRanking(intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex1);
      assertEquals(0, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      
      int int0 = resultMatrixLatex0.getDefaultRowNameWidth();
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 176
  /*Coverage entropy=3.156093262628098
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.clear();
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
  }

  /**
  //Test case number: 177
  /*Coverage entropy=3.2440881792791125
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.m_RowNameWidth = 2;
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 1;
      resultMatrixHTML0.m_RankingWins = intArray0;
      resultMatrixGnuPlot0.getMean(2, 1);
      resultMatrixGnuPlot0.getDisplayCol(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.clear();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.assign(resultMatrixHTML0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 178
  /*Coverage entropy=3.508617766255543
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      String string0 = resultMatrixLatex0.getRowName(53);
      assertNull(string0);
      
      resultMatrixGnuPlot0.clearRanking();
      int int0 = resultMatrixLatex0.getVisibleRowCount();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertFalse(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(1, int0);
      assertFalse(resultMatrixLatex0.getShowAverage());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
  }

  /**
  //Test case number: 179
  /*Coverage entropy=3.3066887378339485
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      assertTrue(resultMatrixCSV0.getPrintColNames());
      
      resultMatrixGnuPlot0.m_CountWidth = 2;
      resultMatrixCSV0.setPrintColNames(true);
      resultMatrixCSV0.getSignificance(0, 2);
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertFalse(resultMatrixCSV0.getShowAverage());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 180
  /*Coverage entropy=3.768159634587602
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRemoveFilterName(false);
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(18, stringArray0.length);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
  }

  /**
  //Test case number: 181
  /*Coverage entropy=3.2955193301273638
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.removeFilterName(" ");
      String string0 = resultMatrixGnuPlot1.getRowName(3927);
      assertNull(string0);
      assertEquals(2, resultMatrixGnuPlot1.getStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot1.getVisibleRowCount());
      assertFalse(resultMatrixGnuPlot1.getRemoveFilterName());
      assertTrue(resultMatrixGnuPlot1.getPrintColNames());
      assertEquals(1, resultMatrixGnuPlot1.getColCount());
  }

  /**
  //Test case number: 182
  /*Coverage entropy=3.5866176745972522
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.clearSummary();
      resultMatrixLatex0.setColOrder(intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      String string0 = resultMatrixCSV0.getColName((-3337));
      assertNull(string0);
      
      resultMatrixCSV0.globalInfo();
      resultMatrixCSV0.getStdDev(2, 1033);
      resultMatrixCSV0.setPrintColNames(false);
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV1.toStringSummary();
      resultMatrixCSV1.getDefaultPrintColNames();
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertEquals(1, resultMatrixCSV1.getVisibleRowCount());
      assertFalse(resultMatrixCSV1.getDefaultShowStdDev());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertEquals(0, resultMatrixCSV1.getDefaultMeanWidth());
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
      assertEquals(2, resultMatrixCSV1.getDefaultMeanPrec());
      assertTrue(resultMatrixCSV1.getPrintRowNames());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
  }

  /**
  //Test case number: 183
  /*Coverage entropy=3.537855771056755
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[1][8];
      resultMatrixLatex0.clearSummary();
      int[] intArray1 = new int[1];
      intArray1[0] = 2;
      resultMatrixLatex0.setColOrder(intArray1);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      // Undeclared exception!
      try { 
        resultMatrixLatex1.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 184
  /*Coverage entropy=3.3378301102666263
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[1][1];
      int[] intArray1 = new int[4];
      intArray1[0] = 1;
      intArray1[1] = 2;
      intArray1[2] = 1;
      intArray1[3] = 0;
      intArray0[0] = intArray1;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 185
  /*Coverage entropy=3.5866946272713576
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray1 = new int[1][9];
      intArray1[0] = intArray0;
      resultMatrixLatex0.setRanking(intArray1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertFalse(resultMatrixHTML0.getShowStdDev());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertFalse(resultMatrixHTML0.getShowAverage());
  }

  /**
  //Test case number: 186
  /*Coverage entropy=3.0927228250561303
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.RIGHT_PARENTHESES = "Illegal options: ";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertTrue(resultMatrixHTML0.getPrintColNames());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      
      resultMatrixGnuPlot0.getMean(2, 1);
      resultMatrixGnuPlot0.removeFilterNameTipText();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 187
  /*Coverage entropy=3.3805678363275375
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRowHidden(418);
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 188
  /*Coverage entropy=3.488412494194537
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      int[] intArray0 = new int[2];
      intArray0[1] = 2;
      resultMatrixGnuPlot0.m_RowOrder = intArray0;
      resultMatrixGnuPlot0.setCountWidth(2);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(0, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot1);
      resultMatrixPlainText0.trimString(" ", 1);
      resultMatrixPlainText0.getShowAverage();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixGnuPlot0.setStdDev(0, 1, 1);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getColSize((String[][]) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 189
  /*Coverage entropy=3.48629831128984
  */
  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[][] stringArray0 = new String[1][0];
      String[] stringArray1 = new String[9];
      stringArray1[0] = "*";
      stringArray1[1] = "<DR 'Cv$1,n";
      stringArray1[2] = "*";
      stringArray1[3] = ")";
      stringArray1[4] = ")";
      stringArray1[5] = "v";
      stringArray1[6] = "";
      stringArray1[7] = "1fDZpK";
      stringArray1[8] = "v";
      stringArray0[0] = stringArray1;
      int int0 = resultMatrixSignificance0.getColSize(stringArray0, 1);
      assertEquals(11, int0);
  }

  /**
  //Test case number: 190
  /*Coverage entropy=3.1333070666592073
  */
  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[6][0];
      resultMatrixLatex0.setRanking(intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixLatex0.getDefaultMeanWidth();
      resultMatrixLatex0.getDefaultSignificanceWidth();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSummary((int[][]) null, intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 191
  /*Coverage entropy=3.2634978131488714
  */
  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      boolean boolean0 = resultMatrixGnuPlot0.getRemoveFilterName();
      assertFalse(boolean0);
      
      int int0 = resultMatrixGnuPlot0.getSignificanceWidth();
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, int0);
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 192
  /*Coverage entropy=3.48629831128984
  */
  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      int int0 = resultMatrixLatex0.getDefaultMeanPrec();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
      assertEquals(2, int0);
      assertEquals(0, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getVisibleColCount());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertFalse(resultMatrixLatex0.getDefaultRemoveFilterName());
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 193
  /*Coverage entropy=3.3976994496627313
  */
  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setStdDevPrec(46);
      resultMatrixGnuPlot0.getAverage(1);
      assertEquals(46, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 194
  /*Coverage entropy=3.5396680687913826
  */
  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setStdDevPrec((-383));
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getSignificance(0, 2);
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(0, resultMatrixCSV0.getDefaultStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 195
  /*Coverage entropy=3.392406634163426
  */
  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setShowAverage(true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_ShowStdDev = true;
      resultMatrixGnuPlot0.globalInfo();
      assertTrue(resultMatrixGnuPlot0.getShowAverage());
      
      resultMatrixPlainText0.getPrintRowNames();
      assertFalse(resultMatrixPlainText0.getShowAverage());
  }

  /**
  //Test case number: 196
  /*Coverage entropy=3.4003925512917705
  */
  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      double double0 = resultMatrixCSV1.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      String string0 = resultMatrixGnuPlot0.getRowName(2300);
      assertNull(string0);
      
      String string1 = resultMatrixGnuPlot0.toStringKey();
      assertEquals("Key:\n1 col0\n", string1);
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 197
  /*Coverage entropy=3.394945641132661
  */
  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 1270);
      int int0 = resultMatrixGnuPlot0.getVisibleColCount();
      assertEquals(1270, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 198
  /*Coverage entropy=3.3337897062262223
  */
  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setMeanWidth(26);
      int[][] intArray0 = new int[6][0];
      resultMatrixLatex0.setRanking(intArray0);
      assertEquals(26, resultMatrixLatex0.getMeanWidth());
  }

  /**
  //Test case number: 199
  /*Coverage entropy=3.8368581022382067
  */
  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getOptions();
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      String string0 = resultMatrixGnuPlot0.toString();
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
  }
}
