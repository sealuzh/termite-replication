/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 27 12:46:00 GMT 2020
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.898524611583721
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 2);
      resultMatrixPlainText0.getAverage(0);
      resultMatrixPlainText0.m_ColNameWidth = 2131;
      resultMatrixCSV0.setStdDev(1006, (-1216), 0.0);
      resultMatrixPlainText0.globalInfo();
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.147528139362055
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[17][9];
      resultMatrixCSV0.setRanking(intArray0);
      resultMatrixCSV0.toStringMatrix();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getColSize((String[][]) null, 114, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[1][8];
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.getSignificanceCount((-2028), 2);
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixCSV0.getDefaultMeanPrec();
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.4620123818890542
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ResultMatrixLatex.main((String[]) null);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_CountWidth = (-996);
      resultMatrixPlainText0.toStringSummary();
      double[][] doubleArray0 = new double[9][2];
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = 0.0;
      doubleArray1[2] = (double) (-996);
      doubleArray1[3] = (double) (-996);
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) (-996);
      doubleArray1[6] = (double) 0;
      doubleArray1[7] = 84.1;
      doubleArray1[8] = (double) 1;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[4];
      doubleArray2[0] = (double) (-996);
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = (double) (-996);
      doubleArray2[3] = (double) (-996);
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[8];
      doubleArray3[0] = 0.0;
      doubleArray3[1] = (double) 0;
      doubleArray3[2] = (double) 0;
      doubleArray3[3] = 84.1;
      doubleArray3[4] = 84.1;
      doubleArray3[5] = (double) 1;
      doubleArray3[6] = 0.0;
      doubleArray3[7] = (double) (-996);
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[2];
      doubleArray4[0] = (double) (-996);
      doubleArray4[1] = (double) 1;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[9];
      doubleArray5[0] = (double) (-996);
      doubleArray5[1] = 0.0;
      doubleArray5[2] = (double) 0;
      doubleArray5[3] = 0.0;
      doubleArray5[4] = (double) (-996);
      doubleArray5[5] = (-1048.46410857);
      doubleArray5[6] = (double) (-996);
      doubleArray5[7] = 84.1;
      doubleArray5[8] = 84.1;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[4];
      doubleArray6[0] = (-801.199378);
      doubleArray6[1] = (double) (-996);
      doubleArray6[2] = (-1048.46410857);
      doubleArray6[3] = 0.0;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[1];
      doubleArray7[0] = (double) 1;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[7];
      doubleArray8[0] = (-801.199378);
      doubleArray8[1] = 2970.9339290966273;
      doubleArray8[2] = (-546.51941094);
      doubleArray8[3] = 0.0;
      doubleArray8[4] = (double) (-996);
      doubleArray8[5] = (-801.199378);
      doubleArray8[6] = (double) (-996);
      doubleArray0[7] = doubleArray8;
      double[] doubleArray9 = new double[1];
      doubleArray9[0] = (double) (-996);
      doubleArray0[8] = doubleArray9;
      resultMatrixPlainText0.m_Mean = doubleArray0;
      resultMatrixPlainText0.getShowStdDev();
      resultMatrixPlainText0.padString("", (-996), false);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.4975662355554515
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML.main((String[]) null);
      resultMatrixCSV0.getDefaultMeanPrec();
      resultMatrixCSV0.getDefaultShowAverage();
      resultMatrixCSV0.isRowName((-926));
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.5020387088790836
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[6];
      intArray0[0] = 2;
      intArray0[1] = 2;
      intArray0[2] = 0;
      intArray0[3] = 2;
      intArray0[4] = 2;
      intArray0[5] = 2;
      resultMatrixCSV0.m_RowOrder = intArray0;
      ResultMatrixHTML.main((String[]) null);
      resultMatrixCSV0.getDefaultMeanPrec();
      resultMatrixCSV0.setColHidden(2, true);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6885678425123976
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[0][2];
      Vector<String> vector0 = new Vector<String>();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixGnuPlot0.setStdDev(26, 0, 0.0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.8332133440562166
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[1][8];
      resultMatrixCSV0.setShowAverage(false);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 0);
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.setStdDev(34, 34, 1);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.484933519008672
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(3, 3);
      resultMatrixPlainText0.m_SignificanceWidth = 3;
      resultMatrixPlainText0.showStdDevTipText();
      resultMatrixPlainText0.getStdDev(3, 3);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      resultMatrixPlainText0.getSummaryTitle((-481));
      intArray0[1] = 3;
      resultMatrixLatex0.toStringMatrix();
      intArray0[2] = 0;
      intArray0[3] = 761;
      intArray0[4] = 1;
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = false;
      resultMatrixLatex0.m_ColHidden = booleanArray0;
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.toStringSummary();
      resultMatrixPlainText0.isMean(3);
      resultMatrixLatex0.getOptions();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.714277730720821
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixCSV0.setColNameWidth(1);
      resultMatrixLatex0.setRowName(3, "");
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.8583850950431837
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.WIN_STRING = " ";
      resultMatrixHTML0.getMean(1, 0);
      resultMatrixLatex0.isMean(114);
      resultMatrixLatex0.getDefaultPrintRowNames();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixLatex0.getEnumerateRowNames();
      int[][] intArray0 = new int[3][3];
      int[] intArray1 = new int[9];
      intArray1[0] = 1;
      intArray1[1] = 0;
      intArray1[2] = 1;
      intArray1[3] = 2;
      intArray1[4] = 13;
      intArray1[5] = 1;
      intArray1[6] = 1;
      intArray1[7] = 0;
      intArray1[8] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[2];
      intArray2[0] = 1;
      intArray2[1] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[6];
      intArray3[0] = 13;
      intArray3[1] = 1;
      intArray3[2] = 114;
      intArray3[3] = 0;
      intArray3[4] = 2;
      intArray3[5] = 1;
      intArray0[2] = intArray3;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.8141761725712
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getSummaryTitle((-2720));
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.setMeanPrec(0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixGnuPlot0.clearHeader();
      int int0 = 11;
      int[] intArray0 = new int[2];
      intArray0[0] = 2;
      intArray0[1] = 2424;
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      int[] intArray1 = new int[2];
      intArray1[0] = 1;
      intArray1[1] = 1;
      resultMatrixHTML0.m_RankingWins = intArray1;
      resultMatrixHTML0.setStdDevPrec(565);
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixLatex0.setShowAverage(false);
      resultMatrixLatex0.m_ColNameWidth = 11;
      resultMatrixLatex0.getRevision();
      resultMatrixHTML0.countWidthTipText();
      resultMatrixHTML0.isMean(188);
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.getRowOrder();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.6808649498588037
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setCountWidth(2);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      String[][] stringArray0 = new String[6][8];
      String[] stringArray1 = new String[4];
      stringArray1[0] = "[";
      stringArray1[1] = "[";
      stringArray1[2] = " ";
      stringArray1[3] = "*";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[2];
      stringArray2[0] = "]";
      stringArray2[1] = "[";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[1];
      stringArray3[0] = "Mu#O4]8] z{*$sm_ve2";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[1];
      stringArray4[0] = "v";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[2];
      stringArray5[0] = "";
      stringArray5[1] = "v";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[5];
      stringArray6[0] = "";
      stringArray6[1] = "Mu#O4]8] z{*$sm_ve2";
      stringArray6[2] = "v";
      stringArray6[3] = "E#";
      stringArray6[4] = "[";
      stringArray0[5] = stringArray6;
      resultMatrixPlainText0.getColSize(stringArray0, (-2916));
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.4354628530862756
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.clearRanking();
      resultMatrixPlainText0.toStringRanking();
      resultMatrixPlainText0.printRowNamesTipText();
      resultMatrixPlainText0.getColCount();
      resultMatrixPlainText0.getDefaultPrintRowNames();
      resultMatrixPlainText0.m_EnumerateRowNames = true;
      resultMatrixPlainText0.toString();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.getCountWidth();
      resultMatrixHTML0.getCount(0);
      resultMatrixPlainText0.getDefaultShowStdDev();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setSize(0, (-1887));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.7127291374784415
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[4] = 2;
      intArray0[5] = 1;
      intArray0[6] = 1;
      intArray0[7] = 2;
      intArray0[8] = 0;
      resultMatrixLatex0.setRowOrder(intArray0);
      String[][] stringArray0 = new String[0][3];
      // Undeclared exception!
      try { 
        resultMatrixLatex0.getColSize(stringArray0, 3021);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setPrintColNames(false);
      int[][] intArray0 = new int[10][9];
      resultMatrixCSV0.setRanking(intArray0);
      resultMatrixCSV0.setMean((-3010), 3, 4.6);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.9041519770279867
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setRemoveFilterName(true);
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      ResultMatrixCSV.main(stringArray0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.602380779932484
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      int[] intArray0 = new int[1];
      resultMatrixCSV0.LEFT_PARENTHESES = "[";
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixCSV0.setSize(0, 2);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.2794518157267287
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.LEFT_PARENTHESES = "";
      String[] stringArray0 = new String[0];
      resultMatrixCSV0.setOptions(stringArray0);
      resultMatrixCSV0.getEnumerateColNames();
      resultMatrixCSV0.printRowNamesTipText();
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.3068849378916276
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevPrec(2);
      resultMatrixCSV0.m_CountWidth = (-2958);
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.getCountWidth();
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.3069359039198183
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(26, 95);
      resultMatrixLatex0.WIN_STRING = ")";
      // Undeclared exception!
      resultMatrixLatex0.toArray();
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.0404387273591684
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(7, 3);
      resultMatrixPlainText0.setStdDevWidth(2);
      boolean[] booleanArray0 = new boolean[6];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      booleanArray0[5] = true;
      resultMatrixPlainText0.m_ColHidden = booleanArray0;
      resultMatrixPlainText0.setEnumerateRowNames(true);
      resultMatrixPlainText0.getStdDevPrec();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringKey();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.0280290733074104
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRowOrder();
      resultMatrixGnuPlot0.getMean(1801, 573);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.536073816505936
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      Vector<Vector<Object>> vector0 = new Vector<Vector<Object>>();
      resultMatrixCSV0.m_HeaderKeys = vector0;
      int[] intArray0 = new int[1];
      resultMatrixLatex0.setRowOrder(intArray0);
      String string0 = resultMatrixLatex0.toString();
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & [1]\\\\\n\\hline\nrow0                      &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.2156392194023287
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_ColNameWidth = 3730;
      resultMatrixLatex0.toStringMatrix();
      int int0 = resultMatrixLatex0.getColNameWidth();
      assertEquals(3730, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.0697276885062035
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      double double0 = resultMatrixPlainText0.getAverage(1);
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(Double.NaN, double0, 0.01);
      
      resultMatrixLatex0.getVisibleRowCount();
      resultMatrixCSV0.isAverage(0);
      resultMatrixCSV0.toStringSummary();
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixCSV0.getColCount());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=4.199774838880183
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultCountWidth();
      ResultMatrixHTML.main((String[]) null);
      resultMatrixCSV0.getMean(0, 1165);
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.743535678836661
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.setRowNameWidth(1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot1);
      resultMatrixSignificance0.addHeader(" ", (String) null);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDisplayName();
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixGnuPlot1.setColName(1, (String) null);
      assertEquals(1, resultMatrixGnuPlot1.getRowNameWidth());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.2958368660043296
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      double double0 = resultMatrixPlainText0.getAverage(1);
      assertEquals(Double.NaN, double0, 0.01);
      
      resultMatrixLatex0.showStdDevTipText();
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      resultMatrixPlainText0.getColHidden(2);
      assertEquals(0, resultMatrixPlainText0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixCSV0.setRowNameWidth(2);
      assertEquals(2, resultMatrixCSV0.getRowNameWidth());
      
      resultMatrixHTML0.toStringSummary();
      boolean boolean0 = resultMatrixHTML0.isRowName(0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.631612186595399
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.getColName((-285));
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader(" ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.6969008500088405
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.setMeanPrec((-885));
      resultMatrixGnuPlot0.setRowName(0, "&o/P|C[e?IuF}i");
      resultMatrixCSV0.setColNameWidth(1599);
      assertEquals(1599, resultMatrixCSV0.getColNameWidth());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      
      int[][] intArray0 = new int[2][8];
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 0);
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.setRowName((-3754), "i{ w(-I");
      assertEquals(0, resultMatrixHTML0.getDefaultStdDevWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getDefaultMeanWidth());
      assertEquals(0, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.120291565301284
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 1019);
      resultMatrixGnuPlot0.setRowName(651, "v");
      resultMatrixCSV0.setColNameWidth(651);
      assertEquals(651, resultMatrixCSV0.getColNameWidth());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.3313742750593476
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.globalInfo();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowHidden(1, false);
      resultMatrixCSV0.setColNameWidth(70);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.toStringMatrix();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      String string0 = resultMatrixGnuPlot0.toStringKey();
      assertEquals(70, resultMatrixCSV0.getColNameWidth());
      assertEquals("Key:\n[1] col0\n", string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.2794518157267287
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = new String[5];
      stringArray0[0] = " ";
      stringArray0[1] = "col-name-width";
      stringArray0[2] = " is not assignable from ";
      stringArray0[3] = " ";
      stringArray0[4] = "iK;kz(RG";
      resultMatrixCSV0.setOptions(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixCSV0.getPrintColNames();
      assertFalse(resultMatrixCSV0.getEnumerateColNames());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 2);
      assertEquals(2, resultMatrixLatex0.getColCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 2);
      int int0 = resultMatrixPlainText0.getVisibleColCount();
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertEquals(0, int0);
      assertFalse(resultMatrixPlainText0.getShowAverage());
      assertEquals(2, resultMatrixPlainText0.getRowCount());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.346944212990993
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      resultMatrixCSV0.setSize(2062, 2062);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.113837077825646
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[1][8];
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 0);
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      assertEquals(1, resultMatrixHTML0.getColCount());
      
      String string0 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      resultMatrixHTML0.getDefaultPrintColNames();
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      assertEquals(0, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.698215536154872
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixGnuPlot0.setStdDevWidth((-2431));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.setRowOrder(intArray0);
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertFalse(resultMatrixLatex0.getShowAverage());
      assertFalse(resultMatrixLatex0.getEnumerateColNames());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.90255381859477
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setMeanPrec(1);
      resultMatrixGnuPlot0.setRowName(1, "&o/P|C[e?IuF}i");
      resultMatrixCSV0.setColNameWidth(2);
      assertEquals(2, resultMatrixCSV0.getColNameWidth());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.844613583584239
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setColOrder(intArray0);
      resultMatrixCSV0.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setSignificanceWidth((-1899));
      resultMatrixGnuPlot0.toStringSummary();
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      
      resultMatrixLatex0.setRowOrder(intArray0);
      String[][] stringArray0 = new String[1][1];
      String[] stringArray1 = new String[1];
      stringArray1[0] = "v";
      stringArray0[0] = stringArray1;
      int int0 = resultMatrixCSV0.getColSize(stringArray0, (-1), true, true);
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertEquals(0, int0);
      assertEquals(0, resultMatrixCSV0.getDefaultStdDevWidth());
      assertFalse(resultMatrixCSV0.getShowAverage());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.761403969737852
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setColOrder(intArray0);
      resultMatrixCSV0.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setSignificanceWidth((-1899));
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      
      resultMatrixCSV0.printRowNamesTipText();
      String[][] stringArray0 = resultMatrixCSV0.toArray();
      assertEquals(3, stringArray0.length);
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.6511160547620025
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[1];
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 2;
      resultMatrixCSV0.m_Counts = doubleArray0;
      resultMatrixCSV0.setColOrder(intArray0);
      int[][] intArray1 = new int[1][9];
      intArray1[0] = intArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.assign(resultMatrixCSV0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.853795084521509
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setOptions((String[]) null);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.toStringMatrix();
      resultMatrixLatex0.getSignificanceCount(1087, (-1));
      resultMatrixCSV0.setRowName(25, (String) null);
      assertFalse(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      resultMatrixGnuPlot0.setRowName(2, "v");
      resultMatrixCSV0.setColNameWidth(0);
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.7964979659363363
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      double double0 = resultMatrixPlainText0.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      resultMatrixPlainText0.getRemoveFilterName();
      resultMatrixPlainText0.isStdDev((-1604));
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixPlainText0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.7437733554254993
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.padString((String) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.3653715971401277
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixCSV0.setRowNameWidth(0);
      assertEquals(0, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.8526379562735795
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex0.m_MeanPrec = 1;
      resultMatrixCSV0.setStdDevWidth(1);
      resultMatrixCSV0.setColName(0, "$circ$");
      resultMatrixCSV0.getDefaultPrintColNames();
      assertEquals(1, resultMatrixCSV0.getStdDevWidth());
      
      resultMatrixLatex0.getDefaultCountWidth();
      assertEquals(0, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultCountWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      
      int[] intArray0 = new int[0];
      resultMatrixCSV0.m_ColOrder = intArray0;
      int[][] intArray1 = new int[0][0];
      resultMatrixCSV0.setRanking(intArray1);
      int int0 = resultMatrixCSV0.getRowNameWidth();
      assertEquals(25, int0);
      
      String string0 = resultMatrixCSV0.printColNamesTipText();
      assertEquals("Whether to output column names or just numbers representing them.", string0);
      
      String string1 = resultMatrixCSV0.padString("", 0);
      assertFalse(resultMatrixCSV0.getDefaultShowAverage());
      assertEquals("", string1);
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.322692930675433
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setColNameWidth(2);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixSignificance0.toString();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.setPrintRowNames(true);
      int int0 = 788;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSize((-1418), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.945501411929144
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setColOrder(intArray0);
      resultMatrixCSV0.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixCSV0.m_RankingLosses = intArray0;
      resultMatrixGnuPlot0.setSignificanceWidth((-1899));
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.setSignificance(0, 2, 361);
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.850517756600938
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.padString("weka.experiment.ResultMatrix", 3);
      Vector<Integer> vector0 = new Vector<Integer>(3, 4);
      resultMatrixHTML0.m_HeaderKeys = vector0;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getColSize((String[][]) null, 50, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.9739718548323837
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setColOrder(intArray0);
      resultMatrixCSV0.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      booleanArray0[5] = false;
      booleanArray0[6] = true;
      booleanArray0[7] = false;
      booleanArray0[8] = false;
      resultMatrixGnuPlot0.m_RowHidden = booleanArray0;
      resultMatrixGnuPlot0.setSignificanceWidth((-1899));
      resultMatrixCSV0.m_RankingWins = intArray0;
      resultMatrixGnuPlot0.getRowHidden(0);
      resultMatrixCSV0.setRowNameWidth(9);
      assertEquals(9, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.326252441857505
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setColNameWidth(2);
      resultMatrixSignificance0.m_ColNameWidth = 497;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixSignificance0.toString();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.setCount(1, 1800.138939);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      assertEquals(0, int0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.6837912465725657
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_ColNameWidth = 0;
      int[][] intArray0 = new int[2][8];
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      String string0 = resultMatrixHTML0.toString();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(0, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setSignificance(1, 284, 0);
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.3044440912481674
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setColNameWidth(2);
      resultMatrixSignificance0.m_RowNameWidth = 4;
      resultMatrixSignificance0.toString();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixSignificance0.getDefaultRemoveFilterName();
      assertEquals(4, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.2466017120905977
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setOptions((String[]) null);
      boolean boolean0 = resultMatrixCSV0.isRowName(16);
      assertEquals(0, resultMatrixCSV0.getStdDevPrec());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.955533434743266
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      double double0 = resultMatrixPlainText0.getAverage(369);
      assertEquals(0.0, double0, 0.01);
      
      resultMatrixPlainText0.setSignificance(1067, 0, 369);
      assertEquals(0, resultMatrixPlainText0.getDefaultSignificanceWidth());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertTrue(resultMatrixPlainText0.getDefaultPrintRowNames());
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      assertEquals(2, resultMatrixPlainText0.getColCount());
      assertFalse(resultMatrixPlainText0.getShowAverage());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.43698399347168
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      int[][] intArray0 = new int[0][0];
      resultMatrixCSV0.setRanking(intArray0);
      resultMatrixCSV0.setSignificance((-1118), (-1118), (-1118));
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getDefaultCountWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.8758370872360386
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setColOrder(intArray0);
      resultMatrixCSV0.setColOrder(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setSignificanceWidth((-1899));
      resultMatrixGnuPlot0.setSignificance(0, (-2388), 361);
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.338553017492444
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 2);
      assertEquals(0, resultMatrixSignificance0.getVisibleColCount());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      
      resultMatrixCSV0.getCountWidth();
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.2501444518297604
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixCSV0.assign(resultMatrixPlainText0);
      resultMatrixCSV0.getOptions();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1);
      resultMatrixCSV0.assign(resultMatrixSignificance0);
      resultMatrixCSV0.countWidthTipText();
      resultMatrixPlainText0.getCount(0);
      assertEquals(40, resultMatrixCSV0.getRowNameWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.70648515219095
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setColNameWidth(2);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      String string0 = resultMatrixSignificance0.toString();
      assertEquals("Dataset (1\n----------\nrow0      \n", string0);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 788);
      double double0 = resultMatrixPlainText0.getAverage(1);
      assertEquals(Double.NaN, double0, 0.01);
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertEquals(788, resultMatrixPlainText0.getRowCount());
      
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixSignificance0.setStdDev(0, 2, (-330.6662101));
      assertFalse(resultMatrixSignificance0.getShowAverage());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.8179461838583633
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.removeFilterName("*");
      resultMatrixHTML0.setRowNameWidth((-347));
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.209914438997033
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_RemoveFilterName = true;
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      resultMatrixLatex0.getColNameWidth();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(50, 50);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader((String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setColOrder(intArray0);
      resultMatrixCSV0.clear();
      resultMatrixCSV0.getStdDev((-2753), (-1530));
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.7725887222397803
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[11][9];
      resultMatrixCSV0.setRanking(intArray0);
      resultMatrixCSV0.getStdDev((-1973), 16);
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertFalse(resultMatrixCSV0.getShowStdDev());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.793980783979459
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultCountWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCount((-777), 0);
      resultMatrixGnuPlot0.enumerateRowNamesTipText();
      resultMatrixGnuPlot0.stdDevPrecTipText();
      resultMatrixGnuPlot0.getDisplayCol((-777));
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 1);
      resultMatrixHTML0.getShowStdDev();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.toArray();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 391);
      resultMatrixSignificance0.getDefaultShowStdDev();
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML();
      resultMatrixHTML2.m_ShowStdDev = true;
      // Undeclared exception!
      try { 
        resultMatrixHTML2.getHeader("-stddev-prec");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.6969008500088405
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.globalInfo();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowHidden(0, true);
      resultMatrixCSV0.setColNameWidth(26);
      assertEquals(26, resultMatrixCSV0.getColNameWidth());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.9739718548323837
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      booleanArray0[5] = true;
      booleanArray0[6] = true;
      booleanArray0[7] = false;
      booleanArray0[8] = false;
      resultMatrixPlainText0.m_RowHidden = booleanArray0;
      stringArray0[1] = " ";
      stringArray0[2] = "*";
      stringArray0[3] = "v";
      stringArray0[4] = "";
      stringArray0[5] = "v";
      stringArray0[6] = " ";
      resultMatrixPlainText0.m_RowNames = stringArray0;
      resultMatrixPlainText0.getRowName(0);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      resultMatrixPlainText0.setRowHidden(2316, false);
      resultMatrixPlainText0.enumerateRowNamesTipText();
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      resultMatrixLatex0.setRowHidden((-1205), false);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.setColNameWidth(8);
      assertEquals(8, resultMatrixCSV1.getColNameWidth());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.0008303170414576
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex0.LOSS_STRING = " ";
      resultMatrixLatex0.setRowHidden(2429, true);
      resultMatrixCSV0.setColNameWidth(2);
      resultMatrixCSV0.toStringKey();
      assertEquals(2, resultMatrixCSV0.getColNameWidth());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.9889840465642794
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_ColNameWidth = 0;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixCSV0.m_StdDevWidth = 516;
      resultMatrixGnuPlot0.setCount(0, 0);
      resultMatrixGnuPlot0.enumerateRowNamesTipText();
      resultMatrixGnuPlot0.stdDevPrecTipText();
      resultMatrixGnuPlot0.getDisplayCol(0);
      resultMatrixHTML0.getShowStdDev();
      resultMatrixHTML0.toArray();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      assertEquals(0, int0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[11][9];
      resultMatrixCSV0.setRanking(intArray0);
      resultMatrixCSV0.getDefaultPrintRowNames();
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.7458535301741085
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[7][8];
      resultMatrixCSV0.getStdDev(441, 1855);
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertFalse(resultMatrixCSV0.getShowAverage());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultStdDevWidth());
      assertFalse(resultMatrixCSV0.getShowStdDev());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      boolean boolean0 = resultMatrixHTML0.getDefaultShowStdDev();
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertFalse(resultMatrixHTML0.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertFalse(boolean0);
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(1, resultMatrixHTML0.getRowCount());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.7995589165321357
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int int0 = resultMatrixCSV0.getVisibleColCount();
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getDefaultSignificanceWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(1, int0);
      assertFalse(resultMatrixCSV0.getShowStdDev());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.338553017492444
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getOptions();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(3369, 0);
      // Undeclared exception!
      resultMatrixCSV0.assign(resultMatrixSignificance0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.8421151244608924
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 2);
      double double0 = resultMatrixPlainText0.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals(2, resultMatrixPlainText0.getVisibleRowCount());
      
      resultMatrixCSV0.getDefaultEnumerateColNames();
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.8918202981106305
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.isSignificance(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(4, 326);
      resultMatrixGnuPlot0.enumerateRowNamesTipText();
      resultMatrixGnuPlot0.stdDevPrecTipText();
      resultMatrixGnuPlot0.getDisplayCol(2);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getShowStdDev();
      resultMatrixHTML0.toArray();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      assertEquals(0, int0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.0114392699977865
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixLatex0.setRowOrder(intArray0);
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(0, resultMatrixLatex0.getVisibleRowCount());
      
      resultMatrixGnuPlot0.setCount(322, 2003.3997336);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.9963067983056155
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setEnumerateColNames(true);
      String string0 = resultMatrixPlainText0.toStringKey();
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertFalse(resultMatrixPlainText0.getShowAverage());
      assertEquals("Key:\n(1) col0\n", string0);
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.7127291374784415
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      int[] intArray0 = new int[6];
      intArray0[0] = 1;
      intArray0[1] = 40;
      intArray0[2] = 2;
      intArray0[3] = (-2580);
      intArray0[4] = 1;
      intArray0[5] = 1;
      resultMatrixCSV0.setColOrder(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixGnuPlot0.getSignificance(1, 2);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.7485862395721843
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_ColNameWidth = 0;
      int[] intArray0 = new int[0];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.stdDevPrecTipText();
      resultMatrixGnuPlot0.getDisplayCol(1);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.getShowStdDev();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.toArray();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      assertEquals(0, int0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[2][8];
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 0);
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      assertEquals(0, resultMatrixHTML0.getVisibleRowCount());
      
      resultMatrixCSV0.getDefaultStdDevWidth();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getDefaultMeanWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.8243648409235025
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[11][9];
      resultMatrixCSV0.addHeader("", "");
      resultMatrixCSV0.setRanking(intArray0);
      int[] intArray1 = resultMatrixCSV0.getColOrder();
      assertNull(intArray1);
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertFalse(resultMatrixCSV0.getShowAverage());
      assertFalse(resultMatrixCSV0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.3905311299237604
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setShowStdDev(true);
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader(")");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.4384228730034643
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.isSignificance(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixCSV0.getOptions();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(720, 0);
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.getAverage(1);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV1.clearSummary();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixPlainText0.getRowCount();
      resultMatrixGnuPlot0.toStringKey();
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.7458535301741085
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[0];
      resultMatrixCSV0.setColOrder(intArray0);
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(0, resultMatrixCSV0.getDefaultSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultCountWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.7725887222397803
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[15][9];
      resultMatrixCSV0.setRanking(intArray0);
      int int0 = resultMatrixCSV0.getMeanWidth();
      assertEquals(0, int0);
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDisplayName();
      assertEquals(0, resultMatrixHTML0.getDefaultMeanWidth());
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(0, resultMatrixHTML0.getDefaultSignificanceWidth());
      assertFalse(resultMatrixHTML0.getDefaultRemoveFilterName());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.3425359764412272
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixCSV0.setPrintColNames(true);
      resultMatrixLatex0.m_EnumerateColNames = true;
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(19, stringArray0.length);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 2);
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(2, resultMatrixSignificance0.getVisibleRowCount());
      assertTrue(resultMatrixSignificance0.getDefaultEnumerateColNames());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getVisibleColCount());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.942494171552879
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      String string0 = resultMatrixPlainText0.getRowName(1);
      assertNull(string0);
      
      double double0 = resultMatrixPlainText0.getAverage(1);
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(2, resultMatrixPlainText0.getColCount());
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.344349708360959
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV1.addHeader("v", (String) null);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      resultMatrixPlainText0.setStdDevWidth(5);
      double double0 = resultMatrixPlainText0.getAverage(1);
      assertEquals(Double.NaN, double0, 0.01);
      
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & [1]\\\\\n\\hline\nrow0                      &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      resultMatrixCSV1.getPrintRowNames();
      assertEquals(0, resultMatrixCSV1.getDefaultColNameWidth());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultCountWidth();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      
      resultMatrixCSV0.getRowNameWidth();
      resultMatrixCSV0.rowNameWidthTipText();
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.356733980419546
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setColNameWidth(2);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      int[][] intArray0 = new int[0][1];
      resultMatrixCSV0.setRanking(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2849, 0);
      // Undeclared exception!
      resultMatrixHTML0.toString();
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.8373289105382637
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setColOrder(intArray0);
      int int0 = resultMatrixCSV0.getVisibleRowCount();
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(1, int0);
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setRemoveFilterName(true);
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setColOrder(intArray0);
      assertTrue(resultMatrixCSV0.getRemoveFilterName());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.044404464687264
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.isSignificance(0);
      resultMatrixCSV0.getDefaultCountWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[0][2];
      resultMatrixCSV0.setRanking(intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 2);
      resultMatrixPlainText0.getAverage(26);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.trimString((String) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.6280156368701584
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getOptions();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixCSV0.getRevision();
      resultMatrixHTML0.setMean(2, 1, 0.0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader(" ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.2805161272792067
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & [1]\\\\\n\\hline\nrow0                      &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      resultMatrixLatex0.getColNameWidth();
      resultMatrixLatex0.setMean(2792, (-423), 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.getRevision();
      resultMatrixLatex0.removeFilterNameTipText();
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.0280290733074104
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setMean(3, 3, 3);
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertFalse(resultMatrixCSV0.getShowAverage());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.8615696093361764
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.getRowName(0);
      assertEquals("row0", string0);
      
      int[][] intArray0 = new int[11][9];
      resultMatrixCSV0.setRanking(intArray0);
      resultMatrixCSV0.getEnumerateRowNames();
      resultMatrixCSV0.getDefaultPrintColNames();
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.6316121865953988
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      int int0 = resultMatrixCSV0.getStdDevPrec();
      assertEquals(2, int0);
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getRowNameWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV0.getDefaultStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertFalse(resultMatrixCSV0.getShowAverage());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.761964958905495
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "]";
      stringArray0[1] = "*";
      stringArray0[2] = "*";
      stringArray0[3] = " ";
      stringArray0[4] = " ";
      stringArray0[5] = " ";
      resultMatrixCSV0.setOptions(stringArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV1.getCount((-2025));
      resultMatrixCSV0.getRowHidden(0);
      resultMatrixCSV1.getStdDevPrec();
      resultMatrixCSV0.getOptions();
      assertFalse(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=4.041472343777737
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.enumerateColNamesTipText();
      resultMatrixSignificance0.getMeanPrec();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(26, 1);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.toStringMatrix();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "v";
      stringArray0[1] = "*";
      stringArray0[2] = "Whether to enumerate the column names (prefixing them with '(x)', with 'x' being the index).";
      stringArray0[3] = "(";
      stringArray0[4] = "Whether to enumerate the column names (prefixing them with '(x)', with 'x' being the index).";
      stringArray0[5] = "(";
      stringArray0[6] = ")";
      stringArray0[7] = " ";
      double[][] doubleArray0 = new double[8][7];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) 2;
      doubleArray1[1] = (double) 2;
      doubleArray1[2] = (double) 0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[8];
      doubleArray2[0] = (double) 26;
      doubleArray2[1] = (double) 1;
      doubleArray2[2] = (double) 2;
      doubleArray2[3] = (double) 0;
      doubleArray2[4] = (double) 2;
      doubleArray2[5] = (double) 0;
      doubleArray2[6] = (double) 2;
      doubleArray2[7] = (double) 0;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[0];
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[8];
      doubleArray4[0] = (double) 0;
      doubleArray4[1] = (double) 1;
      doubleArray4[2] = (double) 2;
      doubleArray4[3] = (double) 0;
      doubleArray4[4] = (double) 1;
      doubleArray4[5] = (double) 1;
      doubleArray4[6] = (double) 2;
      doubleArray4[7] = (double) 2;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[8];
      doubleArray5[0] = (double) 0;
      doubleArray5[1] = (double) 0;
      doubleArray5[2] = 0.0;
      doubleArray5[3] = (double) 1;
      doubleArray5[4] = (double) 2;
      doubleArray5[5] = (-1383.0343434);
      doubleArray5[6] = (double) 2;
      doubleArray5[7] = (double) 2;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[4];
      doubleArray6[0] = (double) 1;
      doubleArray6[1] = (double) 1;
      doubleArray6[2] = (double) 2;
      doubleArray6[3] = (double) 0;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[6];
      doubleArray7[0] = 0.0;
      doubleArray7[1] = (double) 26;
      doubleArray7[2] = (double) 1;
      doubleArray7[3] = (double) 2;
      doubleArray7[4] = (double) 2;
      doubleArray7[5] = (-1383.0343434);
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[3];
      doubleArray8[0] = (double) 0;
      doubleArray8[1] = 0.0;
      doubleArray8[2] = 1.0;
      doubleArray0[7] = doubleArray8;
      resultMatrixPlainText0.m_Mean = doubleArray0;
      stringArray0[8] = "<5?4D[@e~2bj%Vm>!}y";
      resultMatrixPlainText1.setOptions(stringArray0);
      assertEquals(5, resultMatrixPlainText1.getStdDevPrec());
      
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixSignificance0.setColHidden((-2010), false);
      resultMatrixCSV0.setColName((-2010), "v");
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[10][9];
      resultMatrixCSV0.setRanking(intArray0);
      int int0 = resultMatrixCSV0.getColCount();
      assertEquals(1, int0);
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertFalse(resultMatrixCSV0.getDefaultRemoveFilterName());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultSignificanceWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(13, 2);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      assertEquals(2, resultMatrixPlainText0.getRowCount());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertFalse(resultMatrixPlainText0.getShowAverage());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertEquals(13, resultMatrixPlainText0.getVisibleColCount());
      assertFalse(resultMatrixPlainText0.getDefaultRemoveFilterName());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.7725887222397803
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.getSummaryTitle((-1638));
      assertEquals("a", string0);
      
      int[][] intArray0 = new int[10][9];
      resultMatrixCSV0.setRanking(intArray0);
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertFalse(resultMatrixCSV0.getDefaultRemoveFilterName());
      assertTrue(resultMatrixCSV0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.851334537329745
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(62, 2);
      resultMatrixPlainText0.getAverage(1);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=3.637586159726386
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setMeanPrec((-5194));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(18, stringArray0.length);
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.addHeader((String) null, "t9BO@O4!!4&");
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setColOrder(intArray0);
      resultMatrixCSV0.getRemoveFilterName();
      assertEquals(0, resultMatrixCSV0.getDefaultStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(0, resultMatrixCSV0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.6888794541139402
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setMeanPrec(0);
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.assign(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.showAverageTipText();
      assertEquals(0, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.6234065798021993
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML.main((String[]) null);
      resultMatrixCSV0.setOptions((String[]) null);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getColSize((String[][]) null, 1813);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.2444926304072967
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      resultMatrixCSV0.setMeanWidth(0);
      int[][] intArray0 = new int[1][9];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      resultMatrixCSV0.setRanking(intArray0);
      String[][] stringArray0 = new String[1][1];
      String[] stringArray1 = new String[3];
      stringArray1[0] = " ";
      stringArray1[1] = "v";
      resultMatrixLatex0.setColNameWidth(78);
      stringArray1[2] = "$\bullet$";
      stringArray0[0] = stringArray1;
      resultMatrixLatex0.setColNameWidth(3383);
      assertEquals(3383, resultMatrixLatex0.getColNameWidth());
      
      int int0 = resultMatrixCSV0.getColSize(stringArray0, 97);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=3.282693997278065
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.m_MeanPrec = 0;
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      
      resultMatrixHTML0.m_StdDevPrec = 157;
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      String[][] stringArray0 = new String[1][5];
      String[] stringArray1 = new String[2];
      stringArray1[0] = " ";
      stringArray1[1] = ")";
      stringArray0[0] = stringArray1;
      resultMatrixPlainText0.getColSize(stringArray0, 2);
      resultMatrixPlainText0.getSignificanceWidth();
      resultMatrixGnuPlot0.setRowName(0, "-col-name-width");
      assertEquals(5, resultMatrixHTML0.getCountWidth());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.809811901453221
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 1069);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.setSignificanceWidth(0);
      resultMatrixCSV0.setColName(0, "qJ{^ph{I2Q1?O");
      assertEquals(5, resultMatrixCSV0.getCountWidth());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(1069, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=4.356708826689594
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.clearSummary();
      resultMatrixPlainText1.TIE_STRING = ")";
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.m_ColNameWidth = (-783);
      resultMatrixPlainText1.setShowStdDev(false);
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixSignificance0.removeFilterNameTipText();
      resultMatrixPlainText1.getShowStdDev();
      resultMatrixSignificance0.enumerateRowNamesTipText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(25, 1);
      resultMatrixGnuPlot0.getRowName((-1219));
      ResultMatrixSignificance.main((String[]) null);
      resultMatrixSignificance0.setColHidden(1, false);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(334, 2);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.headerKeys();
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=3.5513153017248933
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      resultMatrixLatex0.getColNameWidth();
      resultMatrixCSV0.setStdDev(26, 807, 0);
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.743535678836661
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 108);
      int int0 = resultMatrixLatex0.getColNameWidth();
      assertEquals(0, int0);
      assertEquals(108, resultMatrixLatex0.getRowCount());
      
      String string0 = resultMatrixCSV0.trimString("", 110);
      assertEquals("", string0);
      
      String string1 = resultMatrixCSV0.getSummaryTitle(0);
      assertEquals("a", string1);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertTrue(resultMatrixPlainText0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.6808649498588037
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.setMeanPrec(0);
      resultMatrixCSV0.assign(resultMatrixGnuPlot0);
      resultMatrixCSV0.setShowAverage(true);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixCSV0.getDefaultShowAverage();
      String string0 = resultMatrixGnuPlot0.trimString(" is not assignable from ", 0);
      assertTrue(resultMatrixCSV0.getShowAverage());
      assertEquals(" is not assignable from ", string0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.2958368660043296
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 2);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV1.setColName((-557), "");
      // Undeclared exception!
      try { 
        resultMatrixCSV1.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.9533716670910732
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setShowAverage(true);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      assertEquals(0, resultMatrixLatex0.getVisibleRowCount());
      
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(1, resultMatrixCSV0.getColCount());
      
      ResultMatrixHTML.main(stringArray0);
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setColOrder((int[]) null);
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertFalse(resultMatrixCSV0.getDefaultRemoveFilterName());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=3.189550866482298
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_EnumerateRowNames = true;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixCSV0.getRevision();
      resultMatrixGnuPlot0.setMeanPrec(0);
      resultMatrixCSV0.getOptions();
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      
      resultMatrixCSV0.assign(resultMatrixGnuPlot0);
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setColOrder(intArray0);
      resultMatrixCSV0.getDefaultShowAverage();
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(0, resultMatrixCSV0.getDefaultCountWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.635082509874864
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.isSignificance(1311);
      resultMatrixCSV0.getDefaultCountWidth();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "v";
      stringArray0[1] = "]";
      resultMatrixCSV0.m_NonSigWins = null;
      stringArray0[2] = "*";
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      
      resultMatrixCSV0.setOptions(stringArray0);
      resultMatrixCSV0.getRowNameWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixLatex0.getDefaultRemoveFilterName();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.69690085000884
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixLatex0.getDefaultMeanWidth();
      resultMatrixHTML0.isSignificance(1);
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(0, resultMatrixHTML0.getRowNameWidth());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=3.616116963708194
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.WIN_STRING = "h%0) J[`Ke^@~,VGZ";
      resultMatrixCSV0.setColHidden(556, false);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      
      String string0 = resultMatrixCSV0.toStringMatrix();
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals("Dataset,[1]\nrow0,''\n'[h\\%0) J[`Ke^@~,VGZ/ /*]',''\n", string0);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.8993704198937236
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 0);
      double double0 = resultMatrixPlainText0.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 2);
      resultMatrixSignificance0.getRevision();
      assertEquals(2, resultMatrixSignificance0.getRowCount());
      
      resultMatrixCSV0.setColHidden(0, false);
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=3.1634240504234032
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.setColName(0, "qJ{^ph{I2Q1?O");
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(5, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=3.3068849378916276
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      int int0 = resultMatrixCSV0.getMeanWidth();
      assertEquals(0, int0);
      
      resultMatrixCSV0.addHeader("[W^t;N", "[W^t;N");
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.addHeader("*", "");
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.665394159983388
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.getAverage(8);
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      
      String string0 = resultMatrixCSV0.getColName(8);
      assertNull(string0);
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=2.7633422074702487
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV1.LOSS_STRING = "";
      resultMatrixCSV1.removeFilterNameTipText();
      resultMatrixCSV1.getDisplayRow(0);
      int[][] intArray0 = new int[2][3];
      int[] intArray1 = new int[2];
      intArray1[0] = 1;
      intArray1[1] = 2;
      intArray0[1] = intArray1;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=4.343805421853679
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setMeanWidth(97);
      resultMatrixCSV0.stdDevWidthTipText();
      resultMatrixCSV0.getRowName(26);
      resultMatrixCSV0.getDefaultShowAverage();
      resultMatrixCSV0.enumerateColNamesTipText();
      ResultMatrixLatex.main((String[]) null);
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.isAverage(1201);
      resultMatrixCSV0.padString("Whether to enumerate the column names (prefixing them with '(x)', with 'x' being the index).", (-2982));
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.getDefaultCountWidth();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.toStringMatrix();
      resultMatrixCSV0.significanceWidthTipText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.getRevision();
      resultMatrixLatex0.toStringMatrix();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringSummary();
      resultMatrixGnuPlot0.getDisplayRow(1);
      resultMatrixLatex0.getCount(0);
      resultMatrixLatex0.getRowCount();
      resultMatrixLatex0.toStringKey();
      resultMatrixPlainText0.getDefaultSignificanceWidth();
      resultMatrixCSV0.meanPrecTipText();
      assertEquals(97, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.removeFilterName("-col-name-width <int>");
      resultMatrixHTML0.setRemoveFilterName(true);
      resultMatrixHTML0.toStringRanking();
      assertTrue(resultMatrixHTML0.getRemoveFilterName());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=2.7437733554254993
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setColOrder(intArray0);
      int[][] intArray1 = new int[1][9];
      intArray1[0] = intArray0;
      resultMatrixCSV0.setRanking(intArray1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.getDisplayName();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.padString((String) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 143
  /*Coverage entropy=3.8918202981106305
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixCSV0.getRevision();
      resultMatrixGnuPlot0.setMeanPrec(0);
      resultMatrixCSV0.getOptions();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(0, 468);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot1.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=2.6808649498588037
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.doubleToString(0, (-1437));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 145
  /*Coverage entropy=3.3068849378916276
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevPrec((-3140));
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(18, stringArray0.length);
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=3.6633268003583805
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      resultMatrixCSV0.toArray();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      double double0 = resultMatrixPlainText0.getAverage(1);
      assertEquals(Double.NaN, double0, 0.01);
      
      resultMatrixCSV0.meanWidthTipText();
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getDefaultPrintRowNames());
      assertFalse(resultMatrixCSV0.getShowStdDev());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[2][8];
      resultMatrixCSV0.toStringSummary();
      String string0 = resultMatrixCSV0.getRowName((-494));
      assertNull(string0);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 0);
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixCSV0.getSignificance((-494), 57);
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.removeFilterName((String) null);
      assertNull(string0);
      
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setColOrder(intArray0);
      assertFalse(resultMatrixCSV0.getShowAverage());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=2.698215536154872
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.removeFilterName("");
      assertEquals("", string0);
      
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.setRowOrder(intArray0);
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=3.973472380358747
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixHTML0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "v";
      stringArray0[1] = "Generates the output as plain text (for fixed width fonts).";
      stringArray0[2] = " ";
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 0;
      resultMatrixCSV1.setColOrder(intArray0);
      assertEquals(0, resultMatrixCSV1.getVisibleRowCount());
      
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 2428);
      resultMatrixLatex0.getDisplayRow(1);
      resultMatrixCSV1.setShowAverage(true);
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultShowStdDev();
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=3.1732580921416824
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      String string0 = resultMatrixCSV0.toString();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.setRowOrder(intArray0);
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=3.2128189783784378
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateColNames(false);
      resultMatrixCSV0.setOptions((String[]) null);
      assertEquals(0, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=2.933181970611719
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      double double0 = resultMatrixPlainText0.getAverage(1);
      assertEquals(Double.NaN, double0, 0.01);
      
      boolean boolean0 = resultMatrixCSV0.getPrintRowNames();
      assertTrue(boolean0);
      
      resultMatrixCSV0.getRowOrder();
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=3.4981561271568866
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getColName(1);
      ResultMatrixHTML.main((String[]) null);
      int int0 = resultMatrixCSV0.getSignificanceCount(0, 373);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 155
  /*Coverage entropy=3.4962322706581745
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultCountWidth();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      ResultMatrixHTML.main((String[]) null);
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixCSV0.getSignificanceCount(148, 373);
      resultMatrixCSV0.toStringSummary();
      assertFalse(resultMatrixCSV0.getShowStdDev());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 156
  /*Coverage entropy=2.8332133440562166
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[10][9];
      resultMatrixCSV0.setRanking(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultPrintColNames();
      int int0 = resultMatrixCSV0.getSignificanceCount(1, 0);
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(0, int0);
      assertEquals(1, resultMatrixCSV0.getColCount());
  }

  /**
  //Test case number: 157
  /*Coverage entropy=2.8526379562735795
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(0, resultMatrixCSV0.getDefaultCountWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      double double0 = resultMatrixPlainText0.getAverage(1);
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(0, resultMatrixPlainText0.getDefaultStdDevWidth());
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 158
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixPlainText0);
      assertEquals(1, resultMatrixHTML1.getColCount());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 2);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      double double0 = resultMatrixCSV0.getCount((-3782));
      assertEquals(0.0, double0, 0.01);
      
      Vector<String> vector0 = new Vector<String>();
      resultMatrixCSV0.getRowHidden((-1950));
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(40, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(2, resultMatrixCSV0.getVisibleColCount());
  }

  /**
  //Test case number: 159
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.listOptions();
      resultMatrixLatex0.getDefaultRowNameWidth();
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=3.3163794790616064
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = new String[0];
      resultMatrixCSV0.setOptions(stringArray0);
      resultMatrixCSV0.headerKeys();
      resultMatrixCSV0.isSignificance((-2008));
      assertEquals(0, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 161
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixLatex0);
      String string0 = resultMatrixCSV1.printRowNamesTipText();
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      assertEquals("Whether to output row names or just numbers representing them.", string0);
      assertFalse(resultMatrixCSV1.getEnumerateRowNames());
      assertTrue(resultMatrixCSV1.getPrintRowNames());
      assertEquals(1, resultMatrixCSV1.getColCount());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertTrue(resultMatrixCSV1.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertEquals(1, resultMatrixCSV1.getRowCount());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=2.973971854832384
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setRemoveFilterName(false);
      int[][] intArray0 = new int[10][9];
      resultMatrixCSV0.setRanking(intArray0);
      String string0 = resultMatrixCSV0.toStringRanking();
      assertEquals(">-<,>,<,Resultset\n0,0,0,col0\n", string0);
      
      int int0 = resultMatrixCSV0.getCountWidth();
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, int0);
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=3.401197381662154
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 164
  /*Coverage entropy=3.367295829986472
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.padString("v", 0, true);
      resultMatrixGnuPlot0.setMeanPrec(0);
      resultMatrixCSV0.setShowStdDev(true);
      resultMatrixCSV0.assign(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 165
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.getAverage((-641));
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(0, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
  }

  /**
  //Test case number: 166
  /*Coverage entropy=2.882005086088324
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setMeanWidth(899);
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setColOrder(intArray0);
      resultMatrixCSV0.getCount(92);
      assertEquals(899, resultMatrixCSV0.getMeanWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clear();
      assertEquals(1, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 167
  /*Coverage entropy=3.691921715860045
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRowHidden(8);
      resultMatrixCSV0.setRowNameWidth(2);
      assertEquals(2, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 168
  /*Coverage entropy=3.282693997278065
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.enumerateColNamesTipText();
      int int0 = resultMatrixSignificance0.getMeanPrec();
      assertEquals(2, int0);
      
      String string0 = resultMatrixCSV0.getSummaryTitle(1);
      assertEquals("b", string0);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixHTML0);
      double double0 = resultMatrixCSV1.getCount(1);
      assertFalse(resultMatrixCSV1.getEnumerateRowNames());
      assertEquals(1, resultMatrixCSV1.getVisibleColCount());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertTrue(resultMatrixCSV1.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV1.getDefaultColNameWidth());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 169
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 0);
      resultMatrixHTML0.setCountWidth((-3660));
      resultMatrixHTML0.m_RowNameWidth = 2;
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
  }

  /**
  //Test case number: 170
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringRanking();
      int[] intArray0 = new int[0];
      resultMatrixLatex0.setRowOrder(intArray0);
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
  }

  /**
  //Test case number: 171
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSize((-683), (-683));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 172
  /*Coverage entropy=3.2128189783784378
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setSize(92, 92);
      resultMatrixCSV0.setOptions((String[]) null);
      assertEquals(92, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 173
  /*Coverage entropy=2.9025538185947704
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      resultMatrixPlainText0.clear();
      resultMatrixPlainText0.getAverage(3027);
      assertEquals(2, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      
      resultMatrixLatex0.getDisplayName();
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultCountWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 174
  /*Coverage entropy=3.2103913397883903
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      double double0 = resultMatrixPlainText0.getAverage(1);
      assertEquals(Double.NaN, double0, 0.01);
      
      resultMatrixLatex0.colNameWidthTipText();
      resultMatrixCSV0.getSignificance(2, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRevision();
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintRowNames());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
  }

  /**
  //Test case number: 175
  /*Coverage entropy=2.6663758259158366
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      double double0 = resultMatrixPlainText0.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      resultMatrixPlainText0.getDefaultStdDevPrec();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
  }

  /**
  //Test case number: 176
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[0][1];
      resultMatrixGnuPlot0.m_Significance = intArray0;
      resultMatrixGnuPlot0.setMeanWidth((-2628));
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 177
  /*Coverage entropy=3.2128189783784378
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setOptions((String[]) null);
      resultMatrixCSV0.setColNameWidth((-2149));
      assertEquals(0, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 178
  /*Coverage entropy=3.246601712090598
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.padString((String) null, 120, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 179
  /*Coverage entropy=2.950391601025311
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      String string0 = resultMatrixPlainText0.getSummaryTitle(0);
      assertEquals("a", string0);
      
      resultMatrixGnuPlot0.LOSS_STRING = "print-row-names";
      resultMatrixPlainText0.setRowOrder((int[]) null);
      resultMatrixPlainText0.getDisplayName();
      resultMatrixGnuPlot0.removeFilterNameTipText();
      int int0 = resultMatrixPlainText0.getDisplayRow(185);
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(50, resultMatrixPlainText0.getRowNameWidth());
      assertEquals((-1), int0);
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 180
  /*Coverage entropy=3.1634240504234032
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.getMean(1, 1);
      resultMatrixGnuPlot0.getSignificance(2, 1);
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(40, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
  }

  /**
  //Test case number: 181
  /*Coverage entropy=2.7438550678980884
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setColOrder(intArray0);
      resultMatrixCSV0.padString("", 1760, false);
      assertFalse(resultMatrixCSV0.getShowAverage());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 182
  /*Coverage entropy=2.7438550678980884
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[1][8];
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 0);
      resultMatrixHTML0.padString("v", 1010, true);
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(0, resultMatrixHTML0.getRowCount());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 183
  /*Coverage entropy=3.2522695733518288
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.padString("9A", (-857), true);
      resultMatrixCSV0.setOptions((String[]) null);
      assertFalse(resultMatrixCSV0.getPrintRowNames());
      assertTrue(resultMatrixCSV0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 184
  /*Coverage entropy=3.3068849378916276
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.getSummaryTitle(537);
      assertEquals("r", string0);
      
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(18, stringArray0.length);
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
  }

  /**
  //Test case number: 185
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = new String[12];
      stringArray0[0] = "[";
      try { 
        resultMatrixCSV0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 186
  /*Coverage entropy=3.4975662355554515
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      ResultMatrixHTML.main((String[]) null);
      resultMatrixCSV0.getDefaultMeanPrec();
      resultMatrixCSV0.getMeanPrec();
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 187
  /*Coverage entropy=2.9711651615417107
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      double double0 = resultMatrixPlainText0.getAverage(1);
      assertEquals(Double.NaN, double0, 0.01);
      
      boolean boolean0 = resultMatrixPlainText0.isMean(1298);
      assertTrue(boolean0);
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
  }

  /**
  //Test case number: 188
  /*Coverage entropy=2.984950720635543
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      double double0 = resultMatrixPlainText0.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      String string0 = resultMatrixCSV0.toStringKey();
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals("Key,\n[1],col0\n", string0);
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 189
  /*Coverage entropy=2.813355404500615
  */
  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setColOrder(intArray0);
      resultMatrixCSV0.clear();
      boolean boolean0 = resultMatrixCSV0.isMean(1645);
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertFalse(boolean0);
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 190
  /*Coverage entropy=3.367295829986472
  */
  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.getDefaultEnumerateRowNames();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.setShowStdDev(false);
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.isMean(0);
      resultMatrixCSV0.toStringKey();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringSummary();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, (-2063));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 191
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.clearSummary();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader("v");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 192
  /*Coverage entropy=2.7725887222397803
  */
  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[11][9];
      resultMatrixCSV0.setRanking(intArray0);
      boolean boolean0 = resultMatrixCSV0.getShowStdDev();
      assertFalse(boolean0);
      
      resultMatrixCSV0.globalInfo();
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 193
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setShowStdDev(false);
      resultMatrixCSV0.getDefaultCountWidth();
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getDefaultShowAverage());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
  }

  /**
  //Test case number: 194
  /*Coverage entropy=3.3635290015986854
  */
  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 2);
      double double0 = resultMatrixPlainText0.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\nrow1                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixPlainText0.getDefaultRowNameWidth();
      assertEquals(2, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 195
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setSignificanceWidth(3);
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setColOrder(intArray0);
      assertEquals(3, resultMatrixCSV0.getSignificanceWidth());
  }

  /**
  //Test case number: 196
  /*Coverage entropy=3.539149789470278
  */
  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      ResultMatrixCSV.main(stringArray0);
      ResultMatrixSignificance.main(stringArray0);
      assertEquals(18, stringArray0.length);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 197
  /*Coverage entropy=4.100507145153615
  */
  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setOptions((String[]) null);
      String[] stringArray0 = new String[0];
      resultMatrixCSV0.setOptions(stringArray0);
      ResultMatrixGnuPlot.main(stringArray0);
      assertEquals(0, stringArray0.length);
  }

  /**
  //Test case number: 198
  /*Coverage entropy=3.610917912644226
  */
  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixCSV0.removeFilterNameTipText();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
  }

  /**
  //Test case number: 199
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateRowNames(false);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 200
  /*Coverage entropy=3.4975662355554515
  */
  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultCountWidth();
      ResultMatrixHTML.main((String[]) null);
      String[][] stringArray0 = new String[0][2];
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getColSize(stringArray0, 819, false, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 201
  /*Coverage entropy=2.813355404500615
  */
  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setColOrder(intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray1 = new int[1][7];
      resultMatrixHTML0.setEnumerateRowNames(true);
      intArray1[0] = intArray0;
      resultMatrixHTML0.setSummary(intArray1, intArray1);
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
  }

  /**
  //Test case number: 202
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setPrintColNames(false);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
  }

  /**
  //Test case number: 203
  /*Coverage entropy=2.7823559208895667
  */
  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[11][9];
      resultMatrixCSV0.setRanking(intArray0);
      resultMatrixCSV0.getColHidden(6);
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 204
  /*Coverage entropy=4.248495242049361
  */
  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixHTML0.m_EnumerateColNames = true;
      resultMatrixHTML0.stdDevPrecTipText();
      resultMatrixHTML0.setPrintColNames(true);
      resultMatrixHTML0.getColHidden((-1392));
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.RIGHT_PARENTHESES = ")";
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.toStringRanking();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-ranking data not set-";
      stringArray0[1] = "v";
      stringArray0[2] = ")";
      ResultMatrixCSV.main(stringArray0);
      resultMatrixHTML0.countWidthTipText();
      assertTrue(resultMatrixHTML0.getPrintColNames());
      
      resultMatrixCSV0.printColNamesTipText();
      resultMatrixCSV0.getDefaultRowNameWidth();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 205
  /*Coverage entropy=2.7284075400342926
  */
  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixCSV0.setPrintColNames(true);
      resultMatrixCSV0.assign(resultMatrixPlainText0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader(" ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 206
  /*Coverage entropy=3.543664937160882
  */
  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.getDefaultColNameWidth();
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
  }

  /**
  //Test case number: 207
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[1][8];
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 0);
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.printColNamesTipText();
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getRowCount());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
  }

  /**
  //Test case number: 208
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 2);
      resultMatrixPlainText0.getAverage(2);
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(2, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 209
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultCountWidth();
      int[][] intArray0 = new int[6][7];
      int[] intArray1 = new int[2];
      intArray1[0] = 1;
      intArray0[0] = intArray1;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 210
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[2][8];
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 211
  /*Coverage entropy=2.791039810954727
  */
  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixCSV0.padString(" IfLPO~Q!X", 1);
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(" ", string0);
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 212
  /*Coverage entropy=3.4047349594201815
  */
  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(18, stringArray0.length);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 0);
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
      assertEquals("Dataset (1) col0\n----------------\n----------------\n(v/ /*)        |\n", string0);
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 213
  /*Coverage entropy=2.782355920889567
  */
  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[2][8];
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 0);
      resultMatrixHTML0.getRowName(1);
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertFalse(resultMatrixHTML0.getDefaultRemoveFilterName());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 214
  /*Coverage entropy=2.7964979659363363
  */
  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      String string0 = resultMatrixCSV0.getRowName((-99));
      assertNull(string0);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      double double0 = resultMatrixPlainText0.getAverage(1);
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      assertEquals(Double.NaN, double0, 0.01);
      
      resultMatrixCSV1.assign(resultMatrixCSV0);
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertEquals(2, resultMatrixCSV1.getDefaultMeanPrec());
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
      assertFalse(resultMatrixCSV1.getShowAverage());
      assertTrue(resultMatrixCSV1.getPrintRowNames());
      assertTrue(resultMatrixCSV1.getEnumerateColNames());
      assertFalse(resultMatrixCSV1.getDefaultShowStdDev());
      assertEquals(1, resultMatrixCSV1.getVisibleRowCount());
      assertFalse(resultMatrixCSV1.getEnumerateRowNames());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
  }

  /**
  //Test case number: 215
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      double double0 = resultMatrixPlainText0.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      resultMatrixPlainText0.listOptions();
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
  }

  /**
  //Test case number: 216
  /*Coverage entropy=2.8243648409235025
  */
  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[10][9];
      resultMatrixCSV0.setRanking(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.globalInfo();
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintColNames());
      
      boolean boolean0 = resultMatrixCSV0.getEnumerateColNames();
      assertTrue(boolean0);
      assertEquals(1, resultMatrixCSV0.getColCount());
  }

  /**
  //Test case number: 217
  /*Coverage entropy=2.933181970611719
  */
  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      double double0 = resultMatrixPlainText0.getAverage(1);
      assertEquals(Double.NaN, double0, 0.01);
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      
      resultMatrixLatex0.getShowAverage();
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 218
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_EnumerateColNames = false;
      int int0 = resultMatrixLatex0.getSignificanceWidth();
      assertEquals(0, int0);
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertFalse(resultMatrixLatex0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 219
  /*Coverage entropy=3.602223036051675
  */
  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setRemoveFilterName(false);
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      
      resultMatrixCSV0.setOptions(stringArray0);
      assertEquals(0, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 220
  /*Coverage entropy=3.2128189783784378
  */
  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setPrintRowNames(false);
      resultMatrixCSV0.setOptions((String[]) null);
      assertEquals(0, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 221
  /*Coverage entropy=3.220660906912691
  */
  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setPrintRowNames(true);
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      resultMatrixLatex0.getColNameWidth();
      assertTrue(resultMatrixLatex0.getPrintRowNames());
  }

  /**
  //Test case number: 222
  /*Coverage entropy=2.992196960885483
  */
  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      int int0 = 0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.assign((ResultMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 223
  /*Coverage entropy=2.9258082227981856
  */
  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[1][8];
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 0);
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixCSV0.getAverage(1);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 224
  /*Coverage entropy=3.5301703824676576
  */
  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "[";
      stringArray0[1] = "]";
      stringArray0[2] = "*";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.setStdDevPrec(0);
      assertEquals(0, resultMatrixGnuPlot0.getStdDevPrec());
      
      resultMatrixGnuPlot0.clear();
      assertEquals(0, resultMatrixCSV0.getCountWidth());
  }

  /**
  //Test case number: 225
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setShowAverage(false);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader("v");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 226
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringSummary();
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertFalse(resultMatrixCSV0.getDefaultShowAverage());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 227
  /*Coverage entropy=3.3653715971401277
  */
  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixCSV0.isStdDev(2);
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 228
  /*Coverage entropy=2.5805376244873655
  */
  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      
      resultMatrixLatex0.m_PrintRowNames = true;
      int int0 = resultMatrixLatex0.getColNameWidth();
      assertEquals(0, int0);
      
      int int1 = resultMatrixLatex0.getRowCount();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(1, int1);
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 229
  /*Coverage entropy=2.835984533622656
  */
  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      String string0 = resultMatrixGnuPlot0.padString("", 452);
      assertEquals("                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ", string0);
      
      String string1 = resultMatrixGnuPlot0.toStringKey();
      assertEquals("Key:\n(1) col0\n", string1);
      
      resultMatrixGnuPlot0.getDefaultPrintColNames();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(40, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 230
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      boolean boolean0 = resultMatrixGnuPlot0.getRemoveFilterName();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertFalse(boolean0);
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintColNames());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowStdDev());
  }

  /**
  //Test case number: 231
  /*Coverage entropy=2.6982155361548723
  */
  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixCSV0.m_HeaderValues = vector0;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixLatex0.isStdDev(0);
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
  }

  /**
  //Test case number: 232
  /*Coverage entropy=2.7725887222397803
  */
  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setShowAverage(true);
      int[][] intArray0 = new int[11][9];
      resultMatrixCSV0.setRanking(intArray0);
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 233
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 0);
      resultMatrixHTML0.getSummaryTitle(0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader(" ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 234
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[1];
      resultMatrixCSV0.setColOrder(intArray0);
      resultMatrixCSV0.getCount((-3813));
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertFalse(resultMatrixCSV0.getDefaultShowAverage());
      assertEquals(0, resultMatrixCSV0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 235
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      String string0 = resultMatrixPlainText0.meanPrecTipText();
      assertEquals("The number of decimals after the decimal point for the mean.", string0);
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      assertFalse(resultMatrixPlainText0.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      assertEquals(0, resultMatrixPlainText0.getDefaultSignificanceWidth());
      assertEquals(0, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
  }

  /**
  //Test case number: 236
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV1.setStdDevWidth(2);
      assertEquals(2, resultMatrixCSV1.getStdDevWidth());
      
      resultMatrixCSV0.setColName(2, "qJ{^ph{I2Q1?O");
      assertEquals(1, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 237
  /*Coverage entropy=2.8098119014532212
  */
  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 1038);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.setStdDevWidth(0);
      resultMatrixCSV0.setColName(0, "qJ{^ph{I2Q1?O");
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertEquals(5, resultMatrixCSV0.getCountWidth());
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
      assertEquals(1038, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 238
  /*Coverage entropy=3.2000728953968203
  */
  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clearRanking();
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      resultMatrixLatex0.getColNameWidth();
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
  }

  /**
  //Test case number: 239
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 240
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      int[][] intArray0 = new int[0][1];
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 241
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[2][8];
      resultMatrixCSV0.setCountWidth(0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixCSV0.globalInfo();
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getDefaultShowAverage());
      assertEquals(1, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 242
  /*Coverage entropy=2.933181970611719
  */
  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      resultMatrixPlainText0.setCountWidth(1);
      double double0 = resultMatrixPlainText0.getAverage(1);
      assertEquals(1, resultMatrixPlainText0.getCountWidth());
      assertEquals(Double.NaN, double0, 0.01);
  }

  /**
  //Test case number: 243
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.enumerateColNamesTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[3][5];
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 244
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearHeader();
      resultMatrixCSV0.clear();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertFalse(resultMatrixCSV0.getDefaultRemoveFilterName());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getDefaultCountWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertFalse(resultMatrixCSV0.getShowStdDev());
  }

  /**
  //Test case number: 245
  /*Coverage entropy=3.338553017492444
  */
  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getOptions();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.doubleToString(1, (-606));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 246
  /*Coverage entropy=3.2252752967228866
  */
  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      
      String string0 = resultMatrixLatex0.getColName(0);
      assertEquals("(1)", string0);
      
      resultMatrixLatex0.globalInfo();
      assertEquals(0, resultMatrixLatex0.getDefaultSignificanceWidth());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
  }

  /**
  //Test case number: 247
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 2);
      int int0 = resultMatrixPlainText0.getStdDevWidth();
      assertEquals(2, resultMatrixPlainText0.getRowCount());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(0, int0);
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
  }

  /**
  //Test case number: 248
  /*Coverage entropy=3.4186834206781342
  */
  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixCSV0.m_RowHidden = null;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixCSV0.doubleToString(0, 0);
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      
      resultMatrixCSV0.setRowNameWidth((-1));
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixGnuPlot0.toStringKey();
      assertFalse(resultMatrixGnuPlot0.getEnumerateColNames());
  }

  /**
  //Test case number: 249
  /*Coverage entropy=2.7458535301741085
  */
  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.doubleToString((-661.367412012), 14);
      assertEquals("-661.36741201200008", string0);
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultMeanPrec();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(0, resultMatrixCSV0.getDefaultStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultCountWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 250
  /*Coverage entropy=3.0752205480543715
  */
  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      
      resultMatrixSignificance0.m_MeanPrec = 0;
      resultMatrixSignificance0.getRowName(0);
      resultMatrixSignificance0.getColName(0);
      assertFalse(resultMatrixSignificance0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 251
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.stdDevWidthTipText();
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertFalse(resultMatrixPlainText0.getShowAverage());
      assertFalse(resultMatrixPlainText0.getShowStdDev());
  }

  /**
  //Test case number: 252
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(431, 0);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      
      resultMatrixGnuPlot0.m_StdDevPrec = 0;
      resultMatrixGnuPlot0.getPrintColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.WIN_STRING = " ";
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.toStringSummary();
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
  }

  /**
  //Test case number: 253
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.stdDevWidthTipText();
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }
}
