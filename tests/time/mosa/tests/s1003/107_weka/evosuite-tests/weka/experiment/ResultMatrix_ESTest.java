/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 17:08:36 GMT 2019
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.4475969268067583
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.padString("6Hh", (-3212));
      resultMatrixSignificance0.getShowStdDev();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 222;
      intArray0[2] = 0;
      intArray0[3] = 1;
      intArray0[4] = 2;
      intArray0[5] = 1;
      resultMatrixSignificance0.setRowOrder(intArray0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.doubleToString((-320.7), (-2879));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.711361980936663
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = false;
      resultMatrixHTML0.m_RowHidden = booleanArray0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixHTML0.getVisibleRowCount();
      resultMatrixHTML0.toString();
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.585160100417138
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[8][1];
      int[] intArray1 = new int[8];
      intArray1[0] = 0;
      intArray1[1] = 2;
      intArray1[2] = 1;
      intArray1[3] = 2;
      intArray1[4] = 2;
      intArray1[5] = 1;
      intArray1[6] = 2;
      intArray1[7] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[9];
      intArray2[0] = 1;
      intArray2[1] = 2;
      intArray2[2] = 2;
      intArray2[3] = 2;
      intArray2[4] = 2;
      intArray2[5] = 2;
      intArray2[6] = 2;
      intArray2[7] = 0;
      intArray2[8] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[2];
      intArray3[0] = 14;
      intArray3[1] = 1;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[0];
      intArray0[3] = intArray4;
      int[] intArray5 = new int[2];
      intArray5[0] = 1864;
      intArray5[1] = 14;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[5];
      intArray6[0] = 14;
      intArray6[1] = 0;
      intArray6[2] = 14;
      intArray6[3] = 14;
      intArray6[4] = 1;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[3];
      intArray7[0] = 0;
      intArray7[1] = 1864;
      intArray7[2] = 14;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[1];
      intArray8[0] = 1864;
      intArray0[7] = intArray8;
      resultMatrixGnuPlot0.m_Wins = intArray0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.m_MeanWidth = (-1549);
      int[] intArray9 = new int[0];
      resultMatrixCSV0.m_RankingDiff = intArray9;
      resultMatrixCSV0.headerKeys();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.9482693665909743
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setStdDevWidth(636);
      resultMatrixGnuPlot0.setColNameWidth((-60));
      resultMatrixGnuPlot0.getMean(636, 1916);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(823, 2);
      int[] intArray0 = new int[7];
      intArray0[0] = 823;
      intArray0[1] = 2;
      intArray0[2] = 636;
      intArray0[3] = (-236);
      intArray0[4] = 1916;
      intArray0[5] = 0;
      intArray0[6] = 1;
      resultMatrixSignificance0.m_ColOrder = intArray0;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.810517987763889
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getRowName(787);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.isSignificance((-1570));
      resultMatrixCSV0.getDefaultCountWidth();
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[9];
      intArray0[1] = 0;
      resultMatrixLatex0.m_ColOrder = intArray0;
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[5] = 2;
      intArray0[6] = 2;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.clearRanking();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(0, 2);
      resultMatrixCSV0.getDefaultRowNameWidth();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getStdDev(0, 0);
      resultMatrixHTML0.getSignificance(0, 1);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.1974517659138444
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex1);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(1335, 0);
      resultMatrixCSV1.getDisplayCol(2);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.2990052063386157
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML1.toStringKey();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 336);
      resultMatrixLatex0.clearHeader();
      resultMatrixLatex0.setColName(0, (String) null);
      resultMatrixHTML0.getRevision();
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.1751178234220223
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML1);
      resultMatrixSignificance0.m_ShowAverage = false;
      resultMatrixHTML1.m_RowNameWidth = 5933;
      resultMatrixSignificance0.stdDevWidthTipText();
      resultMatrixSignificance0.showAverageTipText();
      resultMatrixHTML0.getEnumerateRowNames();
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.9965003959868937
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      Vector<String> vector0 = new Vector<String>();
      resultMatrixHTML0.toStringKey();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 671);
      resultMatrixLatex0.clearHeader();
      resultMatrixLatex0.setRowNameWidth(2);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.setColName(1, "*");
      resultMatrixLatex0.colNameWidthTipText();
      // Undeclared exception!
      resultMatrixLatex0.toStringMatrix();
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.303983698439802
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 1);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixLatex0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex0.getDisplayRow(0);
      resultMatrixHTML0.trimString("*", 1);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=4.0541825603239126
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_ShowStdDev = true;
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.toArray();
      resultMatrixGnuPlot0.m_CountWidth = (-851);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixSignificance0.getRowName(97);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringKey();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance1);
      resultMatrixSignificance1.clear();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.755303241932098
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 1);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      int[] intArray0 = new int[7];
      intArray0[0] = (-1167);
      intArray0[1] = 26;
      intArray0[2] = 2;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 2;
      intArray0[6] = 1;
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixHTML0.getRowName(0);
      resultMatrixCSV0.printRowNamesTipText();
      resultMatrixHTML0.rowNameWidthTipText();
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.9794337984444548
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 1);
      resultMatrixHTML0.toStringMatrix();
      resultMatrixLatex0.setColName(602, "(");
      resultMatrixHTML0.getRevision();
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.6323095025533534
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixHTML0.getColName(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixLatex0.setColName((-987), "v");
      resultMatrixHTML0.getRevision();
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.269821118760746
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      int[] intArray0 = new int[1];
      intArray0[0] = (-24);
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixHTML0.getRowName(2);
      resultMatrixCSV0.getShowAverage();
      int[][] intArray1 = new int[1][8];
      intArray1[0] = intArray0;
      resultMatrixCSV0.setRanking(intArray1);
      resultMatrixHTML0.getDisplayName();
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.2406207378890874
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.clearRanking();
      resultMatrixSignificance0.setMeanPrec(411);
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.isAverage(37);
      resultMatrixSignificance0.getDefaultShowAverage();
      int[][] intArray0 = new int[4][1];
      int[] intArray1 = new int[5];
      intArray1[0] = (-1213);
      intArray1[1] = 2;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray1[4] = 30;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[2];
      intArray2[0] = 37;
      intArray2[1] = 37;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[9];
      intArray3[0] = 37;
      intArray3[1] = 30;
      intArray3[2] = 411;
      intArray3[3] = 37;
      intArray3[4] = 2;
      intArray3[5] = 0;
      intArray3[6] = 30;
      intArray3[7] = 0;
      intArray3[8] = (-1213);
      intArray0[2] = intArray3;
      int[] intArray4 = new int[2];
      intArray4[0] = 411;
      intArray4[1] = (-1213);
      intArray0[3] = intArray4;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.3468490410875944
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getAverage(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      double[][] doubleArray0 = new double[2][4];
      double[] doubleArray1 = new double[0];
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[3];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = Double.NaN;
      doubleArray2[2] = (double) 0;
      doubleArray0[1] = doubleArray2;
      resultMatrixHTML0.m_StdDev = doubleArray0;
      resultMatrixCSV0.setRowNameWidth(2);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.assign(resultMatrixHTML0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=4.100020130472117
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.setColOrder(intArray0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixLatex0.getDefaultEnumerateColNames();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "(";
      stringArray0[1] = "$\bullet$";
      resultMatrixGnuPlot0.m_RowNames = stringArray0;
      resultMatrixGnuPlot0.getVisibleColCount();
      resultMatrixLatex0.toStringMatrix();
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      resultMatrixHTML1.setMean(3576, 1, 2);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.74763188901569
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      Vector<Object> vector0 = new Vector<Object>();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.globalInfo();
      resultMatrixSignificance0.getOptions();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      resultMatrixLatex0.getVisibleColCount();
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.6171614404383257
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      int[][] intArray0 = new int[7][5];
      int[] intArray1 = new int[5];
      intArray1[0] = 1;
      intArray1[1] = 0;
      intArray1[2] = 594;
      intArray1[3] = 2;
      intArray1[4] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[9];
      intArray2[0] = 2;
      intArray2[1] = 1;
      intArray2[2] = 1;
      intArray2[3] = 1;
      intArray2[4] = 594;
      intArray2[5] = 1;
      intArray2[6] = 0;
      intArray2[7] = 0;
      intArray2[8] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[4];
      intArray3[0] = 1;
      intArray3[1] = 2;
      intArray3[2] = 189;
      intArray3[3] = 594;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[6];
      intArray4[0] = 594;
      intArray4[1] = (-1010);
      intArray4[2] = 0;
      intArray4[3] = 46;
      intArray4[4] = 2;
      intArray4[5] = 1;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[4];
      intArray5[0] = (-1010);
      intArray5[1] = 0;
      intArray5[2] = 1;
      intArray5[3] = (-1010);
      intArray0[4] = intArray5;
      int[] intArray6 = new int[3];
      intArray6[0] = 594;
      intArray6[1] = 0;
      intArray6[2] = 26;
      int[] intArray7 = new int[9];
      intArray7[0] = 2;
      intArray7[1] = 2;
      intArray7[2] = 26;
      intArray7[3] = 0;
      intArray7[4] = 46;
      intArray7[5] = 0;
      intArray7[7] = 1;
      intArray7[8] = 46;
      intArray0[6] = intArray7;
      resultMatrixLatex0.m_NonSigWins = intArray0;
      resultMatrixHTML0.getColName(594);
      resultMatrixLatex0.listOptions();
      resultMatrixLatex0.getSignificance(0, (-1175));
      ResultMatrixCSV resultMatrixCSV0 = null;
      try {
        resultMatrixCSV0 = new ResultMatrixCSV((-1797), 628);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.0951344031208894
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      int[] intArray0 = new int[1];
      intArray0[0] = (-24);
      int[][] intArray1 = new int[5][1];
      resultMatrixCSV0.setRanking(intArray1);
      resultMatrixHTML0.getDefaultColNameWidth();
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.2595254135771192
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(26, 1);
      resultMatrixLatex0.getSignificance(5, 0);
      resultMatrixHTML0.getRowName(1);
      resultMatrixLatex0.getDisplayRow((-2964));
      resultMatrixHTML0.getRowName((-419));
      resultMatrixCSV0.getColCount();
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.9643032380432777
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      Vector<Object> vector0 = new Vector<Object>();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(97, 2);
      resultMatrixHTML0.toStringMatrix();
      resultMatrixLatex0.getSignificanceCount(2, (-2619));
      resultMatrixHTML0.meanWidthTipText();
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.2563432812828674
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      Vector<Integer> vector0 = new Vector<Integer>();
      Object object0 = new Object();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      resultMatrixGnuPlot0.setCount(0, 1);
      resultMatrixGnuPlot0.getColOrder();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixHTML1);
      resultMatrixSignificance1.globalInfo();
      resultMatrixHTML1.getSignificanceCount(1, 1);
      resultMatrixSignificance0.getDefaultRowNameWidth();
  }

  /**
  //Test case number: 24
  /*Coverage entropy=4.0542634627909315
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.setColOrder(intArray0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRowHidden(0, false);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getVisibleColCount();
      resultMatrixLatex0.toStringMatrix();
      resultMatrixGnuPlot0.getDefaultMeanWidth();
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.2405416668606133
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 1);
      resultMatrixGnuPlot0.setRowHidden((-2731), true);
      resultMatrixHTML0.getSignificanceCount(1, 1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=4.125331268607023
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setPrintRowNames(false);
      resultMatrixLatex0.enumerateRowNamesTipText();
      resultMatrixLatex0.m_ShowStdDev = false;
      resultMatrixLatex0.getRowHidden((-2618));
      resultMatrixLatex0.m_StdDevWidth = (-47);
      resultMatrixLatex0.getShowAverage();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.getRowNameWidth();
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixGnuPlot0.setRowHidden(1, false);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getVisibleColCount();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 2;
      intArray0[3] = 2;
      intArray0[4] = 0;
      intArray0[5] = 0;
      resultMatrixLatex0.m_RankingLosses = intArray0;
      resultMatrixLatex0.toStringMatrix();
      resultMatrixGnuPlot0.getDefaultMeanWidth();
  }

  /**
  //Test case number: 27
  /*Coverage entropy=4.050338321675575
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRowHidden(258, false);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML1);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getVisibleColCount();
      resultMatrixLatex0.toStringMatrix();
      resultMatrixGnuPlot0.getDefaultMeanWidth();
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.5419956237075145
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      Object object0 = new Object();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 1);
      resultMatrixGnuPlot0.setCount(1, 1);
      resultMatrixGnuPlot0.getColOrder();
      resultMatrixGnuPlot0.getDefaultSignificanceWidth();
      resultMatrixHTML0.setSize(286, 1);
      resultMatrixCSV0.toStringKey();
      resultMatrixGnuPlot0.getSignificance(0, 2);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.5419843666574318
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(resultMatrixCSV1);
      resultMatrixCSV2.getDisplayCol(1);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.7354355005965627
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      Vector<Integer> vector0 = new Vector<Integer>();
      Object object0 = new Object();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 1);
      resultMatrixGnuPlot0.getColOrder();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.padString("", 0, false);
      resultMatrixSignificance0.globalInfo();
      resultMatrixHTML0.getSignificanceCount(0, 2);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixCSV0.toStringSummary();
      resultMatrixHTML0.toStringMatrix();
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.1913662210863785
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      int[] intArray0 = new int[1];
      intArray0[0] = (-24);
      int[][] intArray1 = new int[5][1];
      resultMatrixCSV0.setRanking(intArray1);
      resultMatrixHTML0.getColSize((String[][]) null, (-24));
      resultMatrixCSV0.getDefaultShowAverage();
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.2852024312961516
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      Vector<Object> vector0 = new Vector<Object>();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixHTML0.getRowName(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 60);
      resultMatrixSignificance0.getDefaultMeanPrec();
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.4589946948828465
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.getColName(0);
      resultMatrixLatex0.getSignificance(2, 265);
      resultMatrixHTML0.getRowName(265);
      resultMatrixLatex0.getDisplayRow(0);
      resultMatrixHTML0.setRowName(2, "(");
      resultMatrixLatex0.getColName(0);
      resultMatrixHTML0.setSize(0, 265);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.675228971590884
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.m_SignificanceWidth = 0;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 26);
      resultMatrixHTML0.getColName(1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.getDefaultSignificanceWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.clearHeader();
      resultMatrixCSV0.setShowStdDev(false);
      resultMatrixCSV0.assign(resultMatrixLatex0);
      resultMatrixHTML0.toStringSummary();
      resultMatrixCSV0.getMean(0, (-2413));
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.2441902677744063
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      Vector<Object> vector0 = new Vector<Object>();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDisplayRow(0);
      resultMatrixHTML0.getStdDev((-794), 427);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.784860616375021
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      Vector<Integer> vector0 = new Vector<Integer>();
      Object object0 = new Object();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 1);
      resultMatrixGnuPlot0.setCount(1, 1);
      resultMatrixGnuPlot0.getColOrder();
      resultMatrixGnuPlot0.getDefaultSignificanceWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.getOptions();
      resultMatrixGnuPlot0.isRowName(196);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.198427604158897
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      Vector<Object> vector0 = new Vector<Object>();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixLatex0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(1, 33);
      resultMatrixLatex2.getDisplayRow(18);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.7545700564039204
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 1);
      resultMatrixGnuPlot0.setRowHidden(18, false);
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.getMean(1, 18);
      resultMatrixLatex0.getSignificanceCount(2, (-1180));
      ResultMatrixHTML resultMatrixHTML1 = null;
      try {
        resultMatrixHTML1 = new ResultMatrixHTML(1, (-2731));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.58676894908481
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_RowNameWidth = (-1232);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.getDisplayCol((-1232));
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.536441891227721
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      boolean boolean0 = false;
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixHTML0.m_HeaderKeys = vector0;
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(1229, 2);
      vector0.add((Object) resultMatrixHTML0.m_HeaderKeys);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML1);
      resultMatrixLatex0.getSignificance(1, 2);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.493293249163747
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      Vector<Object> vector0 = new Vector<Object>();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_SignificanceWidth = 1;
      resultMatrixLatex0.setColName(1389, "85d");
      resultMatrixLatex0.getSignificance(0, 1389);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=4.05185155799291
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getAverage(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_ShowAverage = true;
      resultMatrixSignificance0.globalInfo();
      resultMatrixSignificance0.getOptions();
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.1469838233570435
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      int[] intArray0 = new int[1];
      resultMatrixCSV0.getMean(0, 0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringSummary();
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.5374801842022947
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      int int0 = (-24);
      int[] intArray0 = new int[1];
      intArray0[0] = (-24);
      int int1 = (-43);
      resultMatrixCSV0.getMean((-24), (-43));
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex((-2862), 1);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.3824529211787215
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.setColOrder(intArray0);
      resultMatrixLatex1.getRevision();
      resultMatrixLatex1.stdDevWidthTipText();
      resultMatrixLatex1.removeFilterName("");
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(34, 2);
      resultMatrixHTML0.getDisplayName();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.752538951939042
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.isSignificance(9);
      resultMatrixCSV0.getDefaultCountWidth();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(2, 9);
      resultMatrixCSV1.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixHTML0.clearSummary();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixCSV1);
      resultMatrixHTML0.clearRanking();
      resultMatrixHTML1.toString();
      ResultMatrixCSV resultMatrixCSV2 = null;
      try {
        resultMatrixCSV2 = new ResultMatrixCSV(30, (-1424));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=4.019037391495731
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.m_EnumerateColNames = false;
      resultMatrixHTML0.getColName(0);
      resultMatrixLatex0.getSignificance(2, 265);
      resultMatrixHTML0.getRowName(265);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      ResultMatrixHTML.main(stringArray0);
      resultMatrixLatex0.getDisplayRow(0);
      resultMatrixHTML0.setRowName(1, (String) null);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.padString((String) null, (-2));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.4914587692804866
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.setRowOrder((int[]) null);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      int[][] intArray0 = new int[3][7];
      intArray0[0] = null;
      intArray0[1] = null;
      intArray0[2] = null;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSummary(intArray0, intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=4.0540288002756935
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex1.stdDevWidthTipText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      double double0 = resultMatrixCSV0.getMean(2, 1);
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(0.0, double0, 0.01);
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.3945638331235455
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      Vector<Integer> vector0 = new Vector<Integer>();
      Object object0 = new Object();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 294);
      resultMatrixGnuPlot0.setCount((-887), 1);
      resultMatrixGnuPlot0.getColOrder();
      int int0 = ResultMatrix.SIGNIFICANCE_WIN;
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(resultMatrixCSV0);
      assertEquals(25, resultMatrixCSV2.getRowNameWidth());
      assertEquals(0, resultMatrixCSV2.getSignificanceWidth());
      assertTrue(resultMatrixCSV2.getPrintRowNames());
      assertEquals(2, resultMatrixCSV2.getMeanPrec());
      assertEquals(2, resultMatrixCSV2.getStdDevPrec());
      assertEquals(0, resultMatrixCSV2.getStdDevWidth());
      assertEquals(0, resultMatrixCSV2.getMeanWidth());
      assertEquals(0, resultMatrixCSV2.getCountWidth());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.301010218869944
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setStdDevPrec(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 26;
      resultMatrixCSV0.setRowOrder(intArray0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(resultMatrixCSV0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.globalInfo();
      resultMatrixHTML1.getSignificanceCount(1, 1);
      resultMatrixHTML0.getDefaultRemoveFilterName();
      assertEquals(0, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.3281951888891284
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.WIN_STRING = "#set xlabel \"Datasets\"\n";
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.m_StdDevPrec = 8;
      resultMatrixPlainText0.getStdDevPrec();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultRowNameWidth();
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixPlainText0.m_HeaderKeys = vector0;
      resultMatrixCSV0.setMeanPrec(69);
      resultMatrixCSV0.m_StdDevWidth = 8;
      resultMatrixCSV0.getDefaultPrintRowNames();
      resultMatrixCSV0.getColOrder();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.585018356972772
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.setShowStdDev(true);
      resultMatrixCSV0.assign(resultMatrixHTML0);
      resultMatrixCSV0.printRowNamesTipText();
      resultMatrixCSV0.toStringSummary();
      assertFalse(resultMatrixCSV0.getShowStdDev());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.76267092741941
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getRowName(787);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.isSignificance((-1570));
      resultMatrixCSV0.getDefaultCountWidth();
      String string0 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[9];
      intArray0[1] = 0;
      resultMatrixLatex0.m_ColOrder = intArray0;
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[5] = 2;
      intArray0[6] = 2;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.clearRanking();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(0, 2);
      assertEquals(0, resultMatrixCSV1.getVisibleColCount());
      assertEquals(2, resultMatrixCSV1.getVisibleRowCount());
      
      resultMatrixCSV0.getDefaultRowNameWidth();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.getStdDev(0, 1);
      resultMatrixHTML0.getSignificance(0, 0);
      assertEquals(0, resultMatrixHTML0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(40, resultMatrixHTML0.getRowNameWidth());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.0198268431492625
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.meanPrecTipText();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.2777356018953436
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      int[] intArray0 = new int[1];
      intArray0[0] = (-24);
      resultMatrixCSV0.setRowOrder(intArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixCSV0);
      double double0 = resultMatrixSignificance1.getStdDev(0, (-24));
      assertTrue(resultMatrixSignificance1.getDefaultEnumerateColNames());
      assertEquals(0, resultMatrixSignificance1.getMeanWidth());
      assertEquals(0, resultMatrixSignificance1.getCountWidth());
      assertTrue(resultMatrixSignificance1.getPrintRowNames());
      assertEquals(25, resultMatrixSignificance1.getRowNameWidth());
      assertEquals(0.0, double0, 0.01);
      assertTrue(resultMatrixSignificance1.getEnumerateColNames());
      assertEquals(2, resultMatrixSignificance1.getStdDevPrec());
      assertEquals(2, resultMatrixSignificance1.getMeanPrec());
      
      resultMatrixHTML0.getSignificance(0, 1884);
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=4.084094985530154
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultCountWidth();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(2, 1);
      String string0 = resultMatrixCSV1.toStringMatrix();
      assertEquals("Dataset,[1],[2],''\nrow0,'','',''\n'[v/ /*]','','',[0/0/0]\n", string0);
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.clearRanking();
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(1, 7);
      resultMatrixCSV1.getDefaultRowNameWidth();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(7, 1);
      resultMatrixSignificance1.getStdDev(1, 2);
      int int0 = resultMatrixHTML0.getSignificance((-4122), 642);
      assertEquals(0, int0);
      
      resultMatrixHTML0.setColName(0, " ");
      resultMatrixCSV0.assign(resultMatrixSignificance1);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.867231221879434
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.m_EnumerateColNames = false;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixHTML0.toStringSummary();
      Vector<Object> vector0 = new Vector<Object>();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML0.clearRanking();
      String string0 = resultMatrixHTML0.toString();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 1);
      resultMatrixCSV0.getDefaultRowNameWidth();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getStdDev(1, 2764);
      String string1 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & \\\\\n\\hline\nrow0                      & \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string1);
      
      int int0 = resultMatrixHTML1.getDefaultStdDevPrec();
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
      assertEquals(2, resultMatrixHTML1.getStdDevPrec());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.2371066887588325
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      Vector<Object> vector0 = new Vector<Object>();
      String string0 = resultMatrixHTML0.getRowName(0);
      assertEquals("row0", string0);
      assertNotNull(string0);
      
      int int0 = resultMatrixLatex0.getMeanWidth();
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, int0);
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.424127283667469
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      String string0 = resultMatrixHTML0.toStringKey();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td colspan=\"2\"><b>Key</b></td></tr>\n   <tr><td><b>(1)</b></td><td>col0</td></tr>\n</table>\n", string0);
      
      resultMatrixLatex0.listOptions();
      resultMatrixLatex0.getSignificance(1, 248);
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      
      int[][] intArray0 = new int[9][2];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.toStringRanking();
      assertFalse(resultMatrixPlainText0.getShowStdDev());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.39805061650142
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      
      resultMatrixLatex0.m_EnumerateColNames = false;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.toStringSummary();
      Vector<Object> vector0 = new Vector<Object>();
      Vector<Integer> vector1 = new Vector<Integer>();
      vector0.add((Object) vector1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 1);
      resultMatrixGnuPlot0.setCount(1, 2);
      resultMatrixGnuPlot0.getColOrder();
      resultMatrixGnuPlot0.getDefaultSignificanceWidth();
      vector0.clear();
      resultMatrixGnuPlot0.enumerateColNamesTipText();
      resultMatrixGnuPlot0.getCount(0);
      resultMatrixGnuPlot0.toStringKey();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(2, 2);
      resultMatrixHTML1.getDisplayName();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixLatex0);
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(0, 47);
      resultMatrixSignificance2.globalInfo();
      resultMatrixGnuPlot0.setColHidden(2, true);
      resultMatrixSignificance1.getDefaultEnumerateColNames();
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.568891434130321
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixLatex0.m_Mean = null;
      resultMatrixHTML0.setRowName((-1572), ": no version-string for comparTo povided!");
      String string0 = resultMatrixLatex0.getColName(9);
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertNull(string0);
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      
      resultMatrixHTML0.setSize(3, 0);
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.5880484413822664
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      Vector<Integer> vector0 = new Vector<Integer>();
      Object object0 = new Object();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 2);
      resultMatrixGnuPlot0.setCount(1, 999.8574);
      resultMatrixGnuPlot0.getColOrder();
      assertEquals(2, resultMatrixGnuPlot0.getVisibleColCount());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.globalInfo();
      int int0 = resultMatrixHTML0.getSignificanceCount((-1571), 471);
      assertEquals(0, int0);
      
      resultMatrixSignificance0.getDefaultRowNameWidth();
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertFalse(resultMatrixSignificance0.getShowStdDev());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.8993247224861243
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixCSV0.setRowOrder(intArray0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringMatrix();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.8996776248232483
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setMeanWidth((-740));
      resultMatrixHTML0.toStringRanking();
      resultMatrixHTML0.toStringRanking();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.2544079396009615
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixHTML0.toStringSummary();
      Vector<Object> vector0 = new Vector<Object>();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      String string0 = resultMatrixHTML0.getRowName(0);
      assertNotNull(string0);
      assertEquals("row0", string0);
      
      resultMatrixLatex0.setCount(2, (-800.00711931));
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertFalse(resultMatrixLatex0.getShowStdDev());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.194150495504465
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.setColOrder(intArray0);
      String string0 = resultMatrixLatex1.stdDevWidthTipText();
      assertEquals("The width of the standard deviation (0 = optimal).", string0);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(34, 2);
      resultMatrixHTML0.getDisplayName();
      assertEquals(34, resultMatrixHTML0.getVisibleColCount());
      
      resultMatrixLatex1.getDefaultPrintRowNames();
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      assertFalse(resultMatrixLatex1.getEnumerateRowNames());
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
      assertEquals(1, resultMatrixLatex1.getRowCount());
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.807626786377261
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixHTML0.m_HeaderKeys = vector0;
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(1229, 2);
      resultMatrixHTML1.getColName(0);
      vector0.add((Object) resultMatrixHTML0.m_HeaderKeys);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML1);
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML3 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML3.clearRanking();
      // Undeclared exception!
      resultMatrixHTML1.toString();
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.773438159334477
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.m_EnumerateColNames = false;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.getMeanPrec();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 0);
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 2);
      resultMatrixCSV0.isMean(2);
      resultMatrixCSV0.toStringKey();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.toStringSummary();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot((-1), (-916));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.632700919839764
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.globalInfo();
      int int0 = resultMatrixHTML0.getSignificanceCount((-1838), 0);
      assertEquals(0, int0);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      assertTrue(resultMatrixSignificance2.getPrintColNames());
      assertEquals(0, resultMatrixSignificance2.getSignificanceWidth());
      assertEquals(0, resultMatrixSignificance2.getMeanWidth());
      assertEquals(50, resultMatrixSignificance2.getRowNameWidth());
      assertEquals(2, resultMatrixSignificance2.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance2.getCountWidth());
      assertTrue(resultMatrixSignificance2.getDefaultEnumerateColNames());
      assertFalse(resultMatrixSignificance2.getDefaultEnumerateRowNames());
      assertEquals(2, resultMatrixSignificance2.getMeanPrec());
      assertEquals(0, resultMatrixSignificance2.getDefaultColNameWidth());
      assertFalse(resultMatrixSignificance2.getEnumerateColNames());
      
      resultMatrixGnuPlot0.showAverageTipText();
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.1938705469785376
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.globalInfo();
      resultMatrixHTML0.getSignificanceCount(1, 1047);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.getHeader("v");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.418116992909532
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex0.setColOrder(intArray0);
      String string0 = resultMatrixLatex0.stdDevWidthTipText();
      assertEquals("The width of the standard deviation (0 = optimal).", string0);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 0);
      resultMatrixHTML0.getDisplayName();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      
      resultMatrixLatex1.setRowOrder(intArray0);
      assertFalse(resultMatrixLatex1.getEnumerateRowNames());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
      
      resultMatrixHTML0.setColHidden((-1), false);
      assertEquals(0, resultMatrixHTML0.getRowCount());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=4.177954954964396
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "]";
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getSummaryTitle(40);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setMeanWidth(40);
      resultMatrixHTML0.toStringRanking();
      resultMatrixHTML0.toStringRanking();
      resultMatrixSignificance0.getOptions();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 206);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        resultMatrixCSV1.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=4.03067595297576
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      String string0 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,(1)\nrow0,''\n'(v/ /*)',''\n", string0);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      int[] intArray0 = new int[0];
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixHTML0.getRowName((-2205));
      resultMatrixSignificance0.setStdDev((-2650), (-857), 2);
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=4.3317184473539205
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "]";
      stringArray0[1] = "*";
      stringArray0[2] = "*";
      stringArray0[3] = " ";
      stringArray0[4] = " ";
      stringArray0[5] = " ";
      resultMatrixCSV0.setOptions(stringArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getRowName(0);
      String[] stringArray1 = new String[8];
      stringArray1[0] = "v";
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setOptions(stringArray0);
      ResultMatrixSignificance.main(stringArray1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setColHidden(1, true);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=4.212970381987103
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 1);
      resultMatrixGnuPlot0.setRowHidden((-2731), true);
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.getMean(0, 1);
      int int0 = resultMatrixLatex0.getSignificanceCount((-2731), 0);
      assertEquals(0, int0);
      
      String string1 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lrr@{\\hspace{0.1cm}}c}\n\\\\\n\\hline\nDataset & (1)& (2) & \\\\\n\\hline\nrow0 &     &     &        \\\\\n\\hline\n\\multicolumn{4}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string1);
      
      resultMatrixCSV0.getDefaultMeanWidth();
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=4.054392038544863
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.m_EnumerateColNames = false;
      resultMatrixHTML0.getColName(1);
      resultMatrixLatex0.getSignificance(2, 265);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixHTML0.toString();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot(resultMatrixGnuPlot1);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot2.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.077470139824789
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setSize((-706), 117);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.188411614586244
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      // Undeclared exception!
      resultMatrixHTML0.setSize(176, 176);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.2412315313712234
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 1);
      resultMatrixGnuPlot0.setRowHidden((-2731), false);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.getColName((-1121));
      resultMatrixHTML0.setSignificance(70, 1, 2);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.assign(resultMatrixLatex1);
      assertEquals(0, resultMatrixHTML0.getRowNameWidth());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.491384447467034
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      double double0 = resultMatrixHTML0.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 0);
      resultMatrixSignificance0.m_RowOrder = null;
      resultMatrixHTML0.setRowName(1, "(");
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(1, resultMatrixHTML0.getColCount());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.4242571819138425
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.m_EnumerateColNames = false;
      resultMatrixHTML0.getColName(1);
      resultMatrixLatex0.getSignificance(2, 265);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.getEnumerateColNames();
      resultMatrixSignificance0.clearHeader();
      resultMatrixSignificance0.getDefaultEnumerateRowNames();
      resultMatrixSignificance0.setMeanPrec(7);
      resultMatrixSignificance0.getShowAverage();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixHTML0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixSignificance1);
      resultMatrixLatex1.setRowNameWidth(745);
      resultMatrixSignificance0.getSignificanceWidth();
      resultMatrixLatex1.getPrintColNames();
      boolean boolean0 = resultMatrixSignificance0.getDefaultEnumerateRowNames();
      assertEquals(7, resultMatrixSignificance0.getMeanPrec());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.9641586157334787
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.globalInfo();
      int int0 = resultMatrixHTML0.getSignificanceCount((-2186), 97);
      assertEquals(0, int0);
      
      String[][] stringArray0 = resultMatrixSignificance0.toArray();
      assertEquals(3, stringArray0.length);
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertFalse(resultMatrixSignificance0.getPrintColNames());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.6169803070231388
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 1);
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintColNames());
      
      int int0 = resultMatrixLatex0.getSignificance((-1236), (-1236));
      assertEquals(0, int0);
      assertEquals(2, resultMatrixLatex0.getColCount());
      
      int int1 = ResultMatrix.SIGNIFICANCE_WIN;
      resultMatrixHTML0.setRowName(3, "Cu7Sv<");
      assertFalse(resultMatrixHTML0.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixHTML0.getDefaultStdDevWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getDefaultCountWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.788785623003506
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      Vector<String> vector0 = new Vector<String>();
      resultMatrixHTML0.toStringKey();
      resultMatrixHTML0.m_PrintRowNames = false;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 671);
      resultMatrixLatex0.setShowStdDev(true);
      resultMatrixLatex0.clearHeader();
      resultMatrixLatex0.setColName(1, "*");
      // Undeclared exception!
      resultMatrixLatex0.toStringMatrix();
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.4940012424264406
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(285, 1);
      resultMatrixHTML0.setStdDevPrec((-2387));
      double double0 = resultMatrixHTML0.getAverage(1);
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(Double.NaN, double0, 0.01);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      resultMatrixSignificance0.clearRanking();
      resultMatrixSignificance0.globalInfo();
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.630989711424645
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setShowStdDev(true);
      resultMatrixCSV0.padString("0", 0);
      resultMatrixCSV0.clearSummary();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(3551, 1);
      // Undeclared exception!
      resultMatrixCSV0.assign(resultMatrixGnuPlot0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.7468764779735513
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setStdDevWidth((-110));
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.globalInfo();
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixSignificance0.getDefaultStdDevPrec();
      String string0 = resultMatrixCSV0.getSummaryTitle(981);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals("t", string0);
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      
      resultMatrixSignificance0.getDefaultStdDevPrec();
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.489065606887324
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[1] = 2;
      intArray0[2] = 0;
      resultMatrixCSV0.setRowOrder(intArray0);
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      
      String string0 = resultMatrixHTML0.getRowName(1);
      assertTrue(resultMatrixHTML0.getDefaultPrintRowNames());
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
      assertNull(string0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.491384447467034
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setColOrder((int[]) null);
      resultMatrixHTML0.getAverage(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.getHeader(")");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.629999710434644
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      double[][] doubleArray0 = new double[0][9];
      resultMatrixHTML0.m_StdDev = doubleArray0;
      resultMatrixPlainText0.setRemoveFilterName(true);
      resultMatrixPlainText0.removeFilterName(")");
      resultMatrixPlainText0.getDefaultStdDevWidth();
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertTrue(resultMatrixPlainText0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(0, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.402053567067324
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      int[] intArray0 = new int[1];
      resultMatrixHTML0.setEnumerateRowNames(false);
      intArray0[0] = (-24);
      resultMatrixCSV0.setRowOrder(intArray0);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      
      String string0 = resultMatrixHTML0.getRowName(2);
      assertNull(string0);
      
      resultMatrixHTML0.setColHidden(287, false);
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.540390206318463
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      int[] intArray0 = new int[0];
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.stdDevWidthTipText();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(722, 1);
      resultMatrixHTML1.getDisplayName();
      assertFalse(resultMatrixHTML1.getDefaultEnumerateRowNames());
      assertFalse(resultMatrixHTML1.getShowStdDev());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.253618751478243
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.setColOrder(intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixCSV0.getCount(2);
      boolean boolean0 = resultMatrixLatex1.getPrintRowNames();
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      assertEquals(1, resultMatrixLatex1.getVisibleRowCount());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=4.023415341499475
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.m_EnumerateColNames = false;
      resultMatrixHTML0.getColName(0);
      resultMatrixLatex0.getSignificance(2, 265);
      resultMatrixHTML0.getRowName(265);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "v";
      ResultMatrixHTML.main(stringArray0);
      resultMatrixLatex0.getDisplayRow(0);
      assertFalse(resultMatrixLatex0.getEnumerateColNames());
      
      resultMatrixHTML0.setRowName(2, "(");
      resultMatrixHTML0.getRowHidden(2);
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.3279303875360364
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 2);
      resultMatrixLatex0.m_EnumerateColNames = false;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      
      resultMatrixHTML0.toStringSummary();
      resultMatrixSignificance0.setRowNameWidth(2);
      Vector<Object> vector0 = new Vector<Object>();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      assertEquals(2, resultMatrixSignificance0.getRowNameWidth());
      
      resultMatrixHTML0.getRowName(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 60);
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.4010533403405447
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.globalInfo();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getEnumerateColNames();
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      
      resultMatrixSignificance1.clearHeader();
      resultMatrixSignificance1.getDefaultEnumerateRowNames();
      resultMatrixSignificance0.setMeanPrec(0);
      resultMatrixSignificance1.getShowAverage();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance1);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex1.setRowNameWidth(0);
      resultMatrixSignificance1.getSignificanceWidth();
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(resultMatrixSignificance1);
      resultMatrixLatex2.getPrintColNames();
      resultMatrixSignificance0.getDefaultEnumerateRowNames();
      assertEquals(0, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.5354315286325124
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.removeFilterName(" ");
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertFalse(resultMatrixPlainText0.getDefaultEnumerateRowNames());
      assertTrue(resultMatrixPlainText0.getDefaultPrintRowNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(" ", string0);
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getDefaultMeanWidth());
      assertFalse(resultMatrixPlainText0.getDefaultShowAverage());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.6328204191377056
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      int[] intArray0 = new int[1];
      intArray0[0] = (-24);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      int[][] intArray1 = new int[5][1];
      intArray1[0] = intArray0;
      intArray1[3] = intArray0;
      intArray1[3] = intArray0;
      resultMatrixCSV0.setSummary(intArray1, intArray1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      assertEquals(2, resultMatrixSignificance0.getColCount());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      int int0 = resultMatrixCSV0.getDisplayCol(0);
      assertEquals(0, int0);
      
      resultMatrixCSV0.getRowHidden((-24));
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.372409921016239
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      Vector<Object> vector0 = new Vector<Object>();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixCSV0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 418);
      resultMatrixPlainText0.toStringSummary();
      resultMatrixCSV0.stdDevWidthTipText();
      resultMatrixPlainText0.getColNameWidth();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.1285065965332874
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.globalInfo();
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      
      resultMatrixSignificance0.m_MeanPrec = 1;
      int int0 = ResultMatrix.SIGNIFICANCE_WIN;
      resultMatrixSignificance0.globalInfo();
      resultMatrixSignificance0.getSignificanceCount((-232), 0);
      resultMatrixHTML1.getDefaultEnumerateColNames();
      assertTrue(resultMatrixHTML1.getPrintRowNames());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.540017933218917
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      boolean boolean0 = false;
      resultMatrixLatex0.m_EnumerateColNames = false;
      resultMatrixHTML0.getColName(1);
      resultMatrixLatex0.getSignificance(2, 265);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      int[][] intArray0 = new int[1][2];
      int[] intArray1 = new int[1];
      intArray1[0] = 0;
      intArray0[0] = intArray1;
      resultMatrixCSV0.setRanking(intArray0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.2894431557048893
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      double double0 = resultMatrixHTML0.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultRowNameWidth();
      assertFalse(resultMatrixSignificance0.getDefaultRemoveFilterName());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.53984954052716
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      int[] intArray0 = new int[5];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.stdDevWidthTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setRowOrder(intArray0);
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertEquals(1, resultMatrixCSV0.getColCount());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.125588090209857
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.setShowStdDev(true);
      resultMatrixCSV0.assign(resultMatrixHTML0);
      int int0 = resultMatrixCSV0.getRowNameWidth();
      assertFalse(resultMatrixCSV0.getShowStdDev());
      assertEquals(25, int0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.3477835873415405
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getAverage(6);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.getHeader("v");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.6739215989429876
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      String string0 = resultMatrixHTML0.getColName(0);
      assertEquals("(1)", string0);
      
      resultMatrixLatex0.getSignificance(2, 2);
      resultMatrixLatex0.setMeanPrec((-1307));
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      String string1 = resultMatrixHTML0.getRowName(0);
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertNotNull(string1);
      assertEquals("row0", string1);
      assertFalse(resultMatrixHTML0.getDefaultShowAverage());
      assertEquals(0, resultMatrixHTML0.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.674785856491737
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 0;
      resultMatrixCSV1.setCountWidth((-1453));
      intArray0[4] = (-24);
      intArray0[5] = 2;
      intArray0[6] = 0;
      intArray0[7] = 299;
      resultMatrixCSV1.setRowOrder(intArray0);
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertFalse(resultMatrixCSV1.getEnumerateRowNames());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      
      String string0 = resultMatrixHTML0.getRowName((-988));
      assertNull(string0);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringKey();
      assertEquals(1, resultMatrixPlainText0.getRowCount());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.5861880844262752
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixCSV0.getDefaultStdDevPrec();
      resultMatrixPlainText0.setEnumerateRowNames(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(5, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getColCount());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.4866413644630816
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getRowName((-428));
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.padString((String) null, (-428), true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.2981774488715536
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.toStringRanking();
      String string0 = resultMatrixHTML0.getColName(1);
      assertNull(string0);
      
      resultMatrixLatex0.listOptions();
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixLatex0.getSignificanceCount(1, 2);
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      
      resultMatrixHTML0.meanWidthTipText();
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertFalse(resultMatrixHTML0.getShowAverage());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.6174982692118984
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.globalInfo();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      String string0 = resultMatrixLatex0.getColName(546);
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertNull(string0);
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 6);
      assertEquals(0, resultMatrixGnuPlot0.getDefaultSignificanceWidth());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
      assertEquals(0, resultMatrixGnuPlot0.getColCount());
      assertEquals(6, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.5402489334499174
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      
      int[] intArray0 = new int[1];
      intArray0[0] = (-24);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int int0 = resultMatrixLatex0.getDisplayRow((-24));
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=3.1867222611559662
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixHTML0.padString("", 2734, true);
      resultMatrixCSV0.setShowStdDev(false);
      resultMatrixCSV0.assign(resultMatrixHTML0);
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getDefaultCountWidth());
      assertFalse(resultMatrixCSV0.getDefaultRemoveFilterName());
      assertFalse(resultMatrixCSV0.getShowStdDev());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(1, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=3.4823930393168556
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      int int0 = 0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "]";
      stringArray0[1] = "*";
      stringArray0[2] = "*";
      stringArray0[4] = " ";
      stringArray0[5] = " ";
      try { 
        resultMatrixCSV0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Utils", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.6519273415899933
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      String string0 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,(1)\nrow0,''\n'(v/ /*)',''\n", string0);
      
      resultMatrixCSV0.setShowStdDev(true);
      resultMatrixCSV0.assign(resultMatrixHTML0);
      assertFalse(resultMatrixCSV0.getPrintColNames());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      
      int int0 = resultMatrixHTML0.getMeanPrec();
      assertEquals(2, int0);
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.6749482402858344
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.getDefaultEnumerateRowNames();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.setShowStdDev(false);
      resultMatrixCSV0.toStringRanking();
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      
      resultMatrixCSV0.m_EnumerateRowNames = false;
      boolean boolean0 = resultMatrixCSV0.isMean(0);
      assertFalse(boolean0);
      
      String string0 = resultMatrixCSV0.toStringKey();
      assertFalse(resultMatrixCSV0.getShowStdDev());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals("Key,\n(1),col0\n", string0);
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(40, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 0);
      resultMatrixGnuPlot0.toStringSummary();
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.4859283519853634
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.showStdDevTipText();
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals("Whether to display the standard deviation column.", string0);
      assertFalse(resultMatrixSignificance0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=3.2913789160859594
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.getRowName(787);
      assertNull(string0);
      
      int[][] intArray0 = new int[0][4];
      int int0 = resultMatrixSignificance0.getCountWidth();
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertFalse(resultMatrixSignificance0.getDefaultRemoveFilterName());
      assertEquals(0, int0);
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=3.2691289730272586
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.clearSummary();
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      
      resultMatrixPlainText0.assign(resultMatrixPlainText1);
      resultMatrixPlainText1.TIE_STRING = ")";
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=3.3304808701089295
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.m_SignificanceWidth = 0;
      resultMatrixSignificance0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.setStdDevWidth(1);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixSignificance0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance0.globalInfo();
      resultMatrixSignificance0.getShowStdDev();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(13, 0);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.513875849430069
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      Vector<String> vector0 = new Vector<String>();
      resultMatrixCSV0.m_ColNameWidth = 3;
      resultMatrixHTML0.toStringKey();
      resultMatrixHTML1.setSignificanceWidth(2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDisplayRow(0);
      resultMatrixHTML1.trimString(")", 39);
      assertEquals(2, resultMatrixHTML1.getSignificanceWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 2);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixHTML0.getAverage((-1));
      assertEquals(1, resultMatrixHTML0.getRowCount());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=4.053947501265323
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      
      resultMatrixLatex0.setPrintRowNames(false);
      resultMatrixLatex0.enumerateRowNamesTipText();
      resultMatrixLatex0.m_ShowStdDev = false;
      resultMatrixLatex0.getRowHidden((-2618));
      resultMatrixLatex0.m_StdDevWidth = (-47);
      resultMatrixLatex0.getShowAverage();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.getRowNameWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setShowStdDev(false);
      resultMatrixCSV0.assign(resultMatrixGnuPlot0);
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=4.237603137762158
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 1);
      resultMatrixLatex0.setRemoveFilterName(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 1);
      resultMatrixGnuPlot0.setRowHidden((-2731), false);
      resultMatrixGnuPlot0.getRevision();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.getMean(0, 1);
      resultMatrixLatex0.getSignificanceCount((-2731), 0);
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.removeFilterNameTipText();
      String[] stringArray0 = new String[3];
      stringArray0[0] = ")";
      stringArray0[1] = "Dataset";
      stringArray0[2] = "";
      ResultMatrixGnuPlot.main(stringArray0);
      assertEquals(3, stringArray0.length);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.092581081611764
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      String[][] stringArray0 = new String[0][7];
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getColSize(stringArray0, 2, false, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.3456532698726704
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setEnumerateRowNames(false);
      int int0 = resultMatrixLatex0.getVisibleColCount();
      assertEquals(1, int0);
      
      resultMatrixLatex0.listOptions();
      int int1 = resultMatrixCSV0.getRowNameWidth();
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(25, int1);
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getDefaultShowAverage());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=4.053907139299212
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance0.globalInfo();
      resultMatrixSignificance0.clearSummary();
      resultMatrixHTML0.getSignificanceCount(0, 18);
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(resultMatrixSignificance1);
      String string0 = resultMatrixSignificance0.toString();
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.4709043701698077
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixHTML0.getColName(0);
      assertNotNull(string0);
      assertEquals("(1)", string0);
      
      resultMatrixLatex0.stdDevWidthTipText();
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(0, 2);
      resultMatrixHTML0.getDisplayName();
      resultMatrixHTML0.getColHidden(0);
      resultMatrixHTML0.getDefaultShowStdDev();
      assertFalse(resultMatrixHTML0.getShowAverage());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=3.5721902450240686
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      int int0 = resultMatrixCSV0.getDisplayCol(125);
      assertEquals((-1), int0);
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertFalse(resultMatrixCSV0.getShowAverage());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertFalse(resultMatrixCSV0.getShowStdDev());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=3.350333808808142
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      Vector<Object> vector0 = new Vector<Object>();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixCSV0);
      assertEquals(0, resultMatrixHTML1.getCountWidth());
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
      assertTrue(resultMatrixHTML1.getPrintRowNames());
      assertEquals(25, resultMatrixHTML1.getRowNameWidth());
      assertEquals(0, resultMatrixHTML1.getStdDevWidth());
      assertTrue(resultMatrixHTML1.getEnumerateColNames());
      assertEquals(0, resultMatrixHTML1.getMeanWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      int int0 = resultMatrixLatex1.getDisplayRow(1);
      assertEquals((-1), int0);
      assertEquals(1, resultMatrixLatex1.getVisibleColCount());
      assertEquals(1, resultMatrixLatex1.getRowCount());
      assertEquals(2, resultMatrixLatex1.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=4.213499508294792
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int int0 = resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixHTML0.m_EnumerateColNames = true;
      resultMatrixHTML0.stdDevPrecTipText();
      resultMatrixHTML0.setPrintColNames(true);
      resultMatrixHTML0.getColHidden((-1392));
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.RIGHT_PARENTHESES = ")";
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.toStringRanking();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-ranking data not set-";
      stringArray0[1] = "v";
      stringArray0[2] = ")";
      ResultMatrixCSV.main(stringArray0);
      resultMatrixHTML0.countWidthTipText();
      resultMatrixCSV0.printColNamesTipText();
      int int1 = resultMatrixCSV0.getDefaultRowNameWidth();
      assertTrue(int1 == int0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=4.1134859469901635
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_EnumerateColNames = true;
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixHTML0.getAverage(3661);
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.m_SignificanceWidth = 3661;
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      resultMatrixSignificance0.setPrintColNames(true);
      resultMatrixSignificance0.getRemoveFilterName();
      assertTrue(resultMatrixSignificance0.getPrintColNames());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=3.674053830347946
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      
      Vector<Object> vector0 = new Vector<Object>();
      String string0 = resultMatrixHTML0.getRowName(0);
      assertEquals("row0", string0);
      assertNotNull(string0);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.addHeader("*", "}\n");
      resultMatrixPlainText0.toStringSummary();
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=3.5866946272713576
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixHTML0.getColName(0);
      assertNotNull(string0);
      assertEquals("(1)", string0);
      
      int int0 = resultMatrixLatex0.getSignificance(2, 2);
      assertEquals(0, int0);
      
      int int1 = ResultMatrix.SIGNIFICANCE_LOSS;
      resultMatrixHTML0.setRowName(0, " ");
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertFalse(resultMatrixHTML0.getDefaultShowAverage());
      assertEquals(0, resultMatrixHTML0.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=3.491384447467034
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int int0 = resultMatrixLatex0.getVisibleColCount();
      assertEquals(1, int0);
      
      String string0 = resultMatrixLatex0.getColName((-1512));
      assertNull(string0);
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      
      resultMatrixHTML0.setSignificance(1, 1, 123);
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=3.5420834133331778
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      double double0 = resultMatrixSignificance0.getStdDev(2, 0);
      assertEquals(0.0, double0, 0.01);
      
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.getSignificance(0, 0);
      assertEquals(1, resultMatrixHTML1.getRowCount());
      assertEquals(0, resultMatrixHTML1.getColNameWidth());
      assertEquals(2, resultMatrixHTML1.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixHTML1.getColCount());
      assertFalse(resultMatrixHTML1.getShowAverage());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=4.049674060907585
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringSummary();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.globalInfo();
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      
      String[] stringArray1 = new String[0];
      resultMatrixSignificance0.setOptions(stringArray1);
      resultMatrixLatex0.getVisibleColCount();
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixCSV0.getColHidden(126);
      assertEquals(0, resultMatrixLatex0.getCountWidth());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=3.492664788891414
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.LOSS_STRING = "=6M1+8b1B'";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 1);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.getVisibleColCount();
      resultMatrixLatex0.setColHidden(0, false);
      assertEquals(2, resultMatrixLatex0.getVisibleColCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertFalse(resultMatrixLatex0.getShowStdDev());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=4.025216359856438
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      String string0 = resultMatrixHTML0.getColName(0);
      assertEquals("(1)", string0);
      
      resultMatrixLatex0.getSignificance(2, 265);
      resultMatrixHTML0.getRowName(265);
      resultMatrixLatex0.getDisplayRow(0);
      resultMatrixHTML0.setRowName(2, "(");
      resultMatrixLatex0.printColNamesTipText();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML1);
      String string1 = resultMatrixPlainText0.toStringMatrix();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals("Dataset                      (1) \n---------------------------------\nrow0                     (0)    |\n---------------------------------\n(v/ /*)                         |\n", string1);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=3.5879368632962025
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      double double0 = resultMatrixHTML0.getAverage(0);
      assertEquals(Double.NaN, double0, 0.01);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 0);
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.globalInfo();
      resultMatrixHTML0.countWidthTipText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(2, resultMatrixGnuPlot0.getColCount());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(40, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=3.5861880844262752
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[1][4];
      int[] intArray1 = new int[1];
      intArray1[0] = 1;
      resultMatrixLatex0.setSummary(intArray0, intArray0);
      resultMatrixSignificance0.stdDevPrecTipText();
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=3.490781778504486
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      double double0 = resultMatrixHTML0.getAverage(1);
      assertEquals(0.0, double0, 0.01);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(20, 2);
      resultMatrixSignificance0.globalInfo();
      assertTrue(resultMatrixSignificance0.getDefaultPrintRowNames());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(2, resultMatrixSignificance0.getRowCount());
      assertEquals(0, resultMatrixSignificance0.getDefaultMeanWidth());
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=3.2995538877251707
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getAverage(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 1);
      int[][] intArray0 = new int[1][2];
      int[] intArray1 = new int[2];
      intArray1[0] = 2;
      intArray1[1] = (-621);
      intArray0[0] = intArray1;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=3.4882695869868265
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      int[] intArray0 = new int[1];
      intArray0[0] = (-24);
      int[][] intArray1 = new int[5][1];
      intArray1[0] = intArray0;
      intArray1[3] = intArray0;
      resultMatrixCSV0.setRanking(intArray1);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=3.6314942159291497
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.padString("$\bullet$", 25);
      resultMatrixLatex1.setColOrder(intArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.getHeader("A1q8UYL}\"SW4y^o^5RP");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 146
  /*Coverage entropy=3.7771834035385696
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_RowNameWidth = (-1232);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      assertEquals(1, resultMatrixLatex1.getVisibleColCount());
      
      String string0 = resultMatrixLatex0.toString();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      resultMatrixLatex1.setColOrder(intArray0);
      resultMatrixLatex0.stdDevWidthTipText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=3.5374801842022947
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringSummary();
      resultMatrixLatex0.listOptions();
      resultMatrixLatex0.getDefaultRowNameWidth();
      assertFalse(resultMatrixLatex0.getDefaultRemoveFilterName());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=3.5412544638672125
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.globalInfo();
      resultMatrixPlainText0.getRowHidden(0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex1);
      resultMatrixGnuPlot0.getRevision();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=3.269233017541794
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[1][4];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setSummary(intArray0, intArray0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixCSV0.getDefaultEnumerateRowNames();
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=3.582567877087128
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.m_SignificanceWidth = 0;
      resultMatrixSignificance0.m_PrintRowNames = false;
      resultMatrixSignificance0.setRemoveFilterName(false);
      resultMatrixSignificance0.globalInfo();
      resultMatrixSignificance0.m_EnumerateRowNames = false;
      resultMatrixSignificance0.globalInfo();
      resultMatrixSignificance0.getEnumerateColNames();
      resultMatrixSignificance0.getDefaultEnumerateRowNames();
      resultMatrixSignificance0.setMeanPrec(0);
      resultMatrixSignificance0.getSignificanceWidth();
      assertEquals(0, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=3.2371066887588325
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      
      Vector<Object> vector0 = new Vector<Object>();
      String string0 = resultMatrixHTML0.getRowName(0);
      assertEquals("row0", string0);
      assertNotNull(string0);
      
      resultMatrixHTML0.getShowAverage();
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=3.193197146305137
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_Significance = null;
      resultMatrixSignificance0.globalInfo();
      int int0 = resultMatrixHTML0.getSignificanceCount(2, (-34));
      int int1 = resultMatrixLatex0.getSignificanceWidth();
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertTrue(int1 == int0);
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(0, int1);
  }

  /**
  //Test case number: 153
  /*Coverage entropy=3.076778225991125
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.m_EnumerateColNames = false;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(518, 0);
      resultMatrixCSV0.setShowStdDev(false);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.assign((ResultMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 154
  /*Coverage entropy=3.2218890022285134
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.isSignificance(0);
      resultMatrixCSV0.getDefaultCountWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setMeanPrec(1);
      int[][] intArray0 = new int[8][8];
      int[] intArray1 = new int[4];
      intArray1[0] = 2;
      intArray1[2] = 1;
      intArray0[7] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = 0;
      intArray2[1] = 97;
      intArray2[2] = 0;
      intArray1[0] = 0;
      intArray0[2] = intArray2;
      int[] intArray3 = new int[5];
      intArray3[0] = 97;
      resultMatrixCSV0.setShowAverage(false);
      intArray3[1] = (-2317);
      intArray3[2] = 1;
      intArray3[3] = 0;
      intArray3[4] = 1;
      intArray0[3] = intArray3;
      intArray1[0] = 0;
      intArray1[0] = 97;
      int[] intArray4 = new int[19];
      intArray4[0] = 97;
      intArray4[1] = 1;
      intArray0[7] = intArray4;
      resultMatrixGnuPlot0.m_NonSigWins = intArray0;
      resultMatrixCSV0.setShowStdDev(true);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.assign(resultMatrixGnuPlot0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 155
  /*Coverage entropy=3.5888590472447772
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[1][4];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setSummary(intArray0, intArray0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixLatex0);
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(resultMatrixCSV0);
      assertEquals(2, resultMatrixSignificance2.getStdDevPrec());
      assertEquals(1, resultMatrixSignificance2.getRowCount());
      assertEquals(2, resultMatrixSignificance2.getMeanPrec());
      assertTrue(resultMatrixSignificance2.getEnumerateColNames());
      assertEquals(25, resultMatrixSignificance2.getRowNameWidth());
      assertTrue(resultMatrixSignificance2.getPrintRowNames());
  }

  /**
  //Test case number: 156
  /*Coverage entropy=3.6263638520156105
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixCSV0.setRowNameWidth((-937));
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixCSV1.setColNameWidth(0);
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertEquals(0, resultMatrixCSV1.getColNameWidth());
      
      resultMatrixSignificance0.globalInfo();
      int int0 = resultMatrixHTML0.getSignificanceCount(0, 0);
      assertEquals(0, int0);
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertTrue(resultMatrixHTML0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 157
  /*Coverage entropy=3.775567282543885
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toArray();
      resultMatrixHTML0.clearRanking();
      resultMatrixHTML0.m_SignificanceWidth = 3;
      resultMatrixHTML0.getSignificance(3, 3);
      resultMatrixHTML0.getMeanWidth();
      resultMatrixHTML0.getSignificanceWidth();
      resultMatrixHTML0.m_RowNameWidth = 12;
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixHTML0.getRowNameWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.globalInfo();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.setRemoveFilterName(true);
      resultMatrixCSV0.getRevision();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 158
  /*Coverage entropy=3.8246427547416975
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      Vector<Object> vector0 = new Vector<Object>();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      assertEquals(2, resultMatrixHTML1.getStdDevPrec());
      assertFalse(resultMatrixHTML1.getEnumerateRowNames());
      assertTrue(resultMatrixHTML1.getPrintRowNames());
      assertEquals(25, resultMatrixHTML1.getRowNameWidth());
      assertTrue(resultMatrixHTML1.getEnumerateColNames());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDisplayRow(0);
      resultMatrixLatex0.setColNameWidth((-1288));
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      
      ResultMatrixSignificance.main((String[]) null);
      resultMatrixLatex0.getRevision();
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertFalse(resultMatrixLatex0.getShowStdDev());
  }

  /**
  //Test case number: 159
  /*Coverage entropy=3.1981428210686835
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      Vector<Object> vector0 = new Vector<Object>();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixCSV0);
      assertEquals(25, resultMatrixHTML1.getRowNameWidth());
      assertTrue(resultMatrixHTML1.getEnumerateColNames());
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
      assertEquals(0, resultMatrixHTML1.getStdDevWidth());
      assertEquals(0, resultMatrixHTML1.getSignificanceWidth());
      assertEquals(0, resultMatrixHTML1.getMeanWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int int0 = resultMatrixLatex0.getDisplayRow(0);
      assertEquals(0, int0);
      
      resultMatrixCSV0.toStringSummary();
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertTrue(resultMatrixCSV0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=3.2227895625062026
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertFalse(resultMatrixLatex1.getEnumerateRowNames());
      
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixHTML0.getRowName((-322));
      resultMatrixHTML0.isStdDev((-247));
      int int0 = resultMatrixHTML0.getCountWidth();
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertFalse(resultMatrixHTML0.getDefaultShowAverage());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 161
  /*Coverage entropy=3.8442976704969665
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      Vector<String> vector0 = new Vector<String>();
      resultMatrixHTML0.toStringKey();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRowHidden(25, true);
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      
      String string0 = resultMatrixHTML1.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.getMean(25, 13);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      int int0 = resultMatrixLatex0.getSignificanceCount(0, 0);
      assertEquals(0, int0);
      
      String string1 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0                      &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string1);
      
      resultMatrixCSV0.getRowCount();
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=3.735553770221223
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.m_EnumerateColNames = false;
      resultMatrixLatex0.WIN_STRING = null;
      int[] intArray0 = new int[4];
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = false;
      booleanArray0[6] = false;
      resultMatrixLatex0.m_RowHidden = booleanArray0;
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 2;
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getSummaryTitle(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixLatex0.getColOrder();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.globalInfo();
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixLatex0.isStdDev(0);
      resultMatrixPlainText0.setStdDevPrec(2);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.setColNameWidth(2);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixGnuPlot0.getDefaultPrintColNames();
      resultMatrixSignificance0.getDefaultRowNameWidth();
      assertEquals(2, resultMatrixSignificance0.getColNameWidth());
      
      resultMatrixPlainText0.getRowCount();
      resultMatrixGnuPlot0.setShowAverage(true);
      resultMatrixLatex0.getRemoveFilterName();
      resultMatrixLatex0.clearHeader();
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=3.345930600637635
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      int int0 = resultMatrixHTML1.getVisibleRowCount();
      assertEquals(1, int0);
      
      resultMatrixHTML0.getRemoveFilterName();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(0, resultMatrixHTML0.getDefaultStdDevWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 164
  /*Coverage entropy=3.633146798088774
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      Vector<Object> vector0 = new Vector<Object>();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixCSV0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 2);
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      String string0 = resultMatrixHTML1.getSummaryTitle(25);
      assertEquals("z", string0);
      assertEquals(0, resultMatrixHTML1.getCountWidth());
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
      assertEquals(2, resultMatrixHTML1.getStdDevPrec());
      assertTrue(resultMatrixHTML1.getEnumerateColNames());
      assertEquals(0, resultMatrixHTML1.getStdDevWidth());
      assertFalse(resultMatrixHTML1.getEnumerateRowNames());
      assertEquals(25, resultMatrixHTML1.getRowNameWidth());
      assertEquals(1, resultMatrixHTML1.getVisibleRowCount());
      assertEquals(1, resultMatrixHTML1.getVisibleColCount());
      assertTrue(resultMatrixHTML1.getPrintRowNames());
      assertEquals(0, resultMatrixHTML1.getSignificanceWidth());
  }

  /**
  //Test case number: 165
  /*Coverage entropy=3.491530592881722
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setShowStdDev(true);
      assertTrue(resultMatrixCSV0.getShowStdDev());
      
      resultMatrixCSV0.assign(resultMatrixHTML0);
      resultMatrixHTML0.getDefaultCountWidth();
      resultMatrixCSV0.getCount(1);
      assertFalse(resultMatrixCSV0.getShowAverage());
  }

  /**
  //Test case number: 166
  /*Coverage entropy=3.4899851471172094
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV1.getCount((-2025));
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertTrue(resultMatrixCSV1.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixCSV1.getPrintRowNames());
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
      
      resultMatrixCSV0.getRowHidden(0);
      assertEquals(0, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 167
  /*Coverage entropy=3.5350884754592706
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      String string0 = resultMatrixPlainText0.meanPrecTipText();
      assertEquals(0, resultMatrixPlainText0.getRowCount());
      assertEquals("The number of decimals after the decimal point for the mean.", string0);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
  }

  /**
  //Test case number: 168
  /*Coverage entropy=3.1285065965332874
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.globalInfo();
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertTrue(resultMatrixSignificance0.getDefaultEnumerateColNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 0);
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
  }

  /**
  //Test case number: 169
  /*Coverage entropy=3.3414164793194616
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.LEFT_PARENTHESES = "";
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixGnuPlot0.setSignificanceWidth((-732));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.setShowAverage(true);
      resultMatrixLatex0.getRevision();
      assertTrue(resultMatrixLatex0.getShowAverage());
      
      resultMatrixGnuPlot0.getMeanWidth();
      int int0 = resultMatrixGnuPlot0.getVisibleColCount();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 170
  /*Coverage entropy=4.02489424895634
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      int[] intArray0 = new int[5];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex1.stdDevWidthTipText();
      assertEquals(1, resultMatrixLatex1.getVisibleColCount());
      
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
  }

  /**
  //Test case number: 171
  /*Coverage entropy=3.8996776248232483
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      int int0 = resultMatrixCSV0.getSignificanceCount((-1043), 1);
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, int0);
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 172
  /*Coverage entropy=3.2902085081437598
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      Vector<Integer> vector0 = new Vector<Integer>();
      Object object0 = new Object();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 1);
      int[][] intArray0 = new int[0][5];
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 173
  /*Coverage entropy=3.4882695869868265
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.clearRanking();
      String string0 = resultMatrixGnuPlot0.colNameWidthTipText();
      assertEquals("The maximum width of the column names (0 = optimal).", string0);
      
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.toStringRanking();
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertFalse(resultMatrixLatex0.getEnumerateColNames());
  }

  /**
  //Test case number: 174
  /*Coverage entropy=3.5880838734766574
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setCountWidth(0);
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      
      Vector<Integer> vector0 = new Vector<Integer>();
      Object object0 = new Object();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 1);
      resultMatrixGnuPlot0.setCount(1, 1);
      resultMatrixGnuPlot0.getColOrder();
      resultMatrixGnuPlot0.getDefaultSignificanceWidth();
      assertEquals(2, resultMatrixGnuPlot0.getColCount());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixHTML0);
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertEquals(0, resultMatrixCSV1.getDefaultColNameWidth());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertTrue(resultMatrixCSV1.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
  }

  /**
  //Test case number: 175
  /*Coverage entropy=3.716653602645976
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setStdDevPrec(24);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.getRevision();
      resultMatrixGnuPlot0.getRowNameWidth();
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      resultMatrixHTML0.m_ColNameWidth = 2;
      resultMatrixGnuPlot0.enumerateColNamesTipText();
      resultMatrixHTML0.getAverage(95);
      assertEquals(24, resultMatrixHTML0.getStdDevPrec());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.clear();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1045);
      resultMatrixSignificance0.globalInfo();
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 176
  /*Coverage entropy=3.7923403625078262
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      String[] stringArray0 = new String[0];
      resultMatrixCSV0.m_ColNames = stringArray0;
      resultMatrixCSV0.setCountWidth(1);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 177
  /*Coverage entropy=3.5372760609118274
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      boolean boolean0 = resultMatrixSignificance0.isSignificance(0);
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertFalse(boolean0);
      assertFalse(resultMatrixSignificance0.getDefaultRemoveFilterName());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertFalse(resultMatrixSignificance0.getShowStdDev());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(0, resultMatrixSignificance0.getDefaultColNameWidth());
  }

  /**
  //Test case number: 178
  /*Coverage entropy=3.829137025512627
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setStdDevPrec(3090);
      resultMatrixPlainText0.getColName(0);
      resultMatrixPlainText0.doubleToString((-1981.191407566), 0);
      resultMatrixPlainText0.clearHeader();
      resultMatrixPlainText0.getStdDevWidth();
      resultMatrixPlainText0.toStringKey();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      resultMatrixGnuPlot0.enumerateColNamesTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.setShowStdDev(false);
      resultMatrixCSV0.assign(resultMatrixGnuPlot0);
      ResultMatrixCSV resultMatrixCSV1 = null;
      try {
        resultMatrixCSV1 = new ResultMatrixCSV(0, (-1236));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 179
  /*Coverage entropy=3.6760930460342207
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.setColNameWidth(1);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance();
      resultMatrixSignificance2.getSummaryTitle(1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setMeanWidth(1);
      resultMatrixHTML0.toStringRanking();
      resultMatrixHTML0.toStringRanking();
      ResultMatrixSignificance resultMatrixSignificance3 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV0.setShowStdDev(false);
      resultMatrixHTML0.getSignificanceCount(4780, 0);
      assertEquals(1, resultMatrixHTML0.getMeanWidth());
      
      int int0 = resultMatrixCSV0.getStdDevWidth();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 180
  /*Coverage entropy=3.8996776248232483
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setMeanWidth(0);
      resultMatrixHTML0.toStringRanking();
      resultMatrixHTML0.toStringRanking();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
  }

  /**
  //Test case number: 181
  /*Coverage entropy=3.9322922892309093
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixHTML0.getVisibleRowCount();
      String string1 = resultMatrixHTML0.doubleToString((-2731), 1);
      assertEquals("-2731.0", string1);
      
      resultMatrixHTML0.setMean((-2731), 1, (-2731));
      int int0 = resultMatrixHTML0.getCountWidth();
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 182
  /*Coverage entropy=3.6323095025533534
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixHTML0.getColName(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.getHeader("*");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 183
  /*Coverage entropy=3.2372798489319927
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setEnumerateColNames(true);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      
      Vector<Object> vector0 = new Vector<Object>();
      String string0 = resultMatrixHTML0.getRowName(0);
      assertNotNull(string0);
      assertEquals("row0", string0);
      
      resultMatrixHTML0.getDefaultStdDevWidth();
      assertFalse(resultMatrixHTML0.getDefaultShowAverage());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 184
  /*Coverage entropy=3.6752913994087195
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setPrintRowNames(true);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixHTML0.getColName(0);
      assertEquals("(1)", string0);
      assertNotNull(string0);
      
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      assertEquals(2, resultMatrixHTML1.getStdDevPrec());
      assertTrue(resultMatrixHTML1.getEnumerateColNames());
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
      assertTrue(resultMatrixHTML1.getPrintRowNames());
      assertFalse(resultMatrixHTML1.getEnumerateRowNames());
      assertEquals(25, resultMatrixHTML1.getRowNameWidth());
      assertEquals(0, resultMatrixHTML1.getSignificanceWidth());
      assertEquals(0, resultMatrixHTML1.getCountWidth());
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      int int0 = resultMatrixLatex0.getDisplayRow(0);
      assertEquals(0, resultMatrixLatex0.getDefaultStdDevWidth());
      assertEquals(0, int0);
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 185
  /*Coverage entropy=3.3456633876688984
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setPrintColNames(false);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML1.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 186
  /*Coverage entropy=3.9647574292185115
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRemoveFilterName(false);
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      resultMatrixGnuPlot0.toString();
      resultMatrixGnuPlot0.toStringSummary();
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      resultMatrixGnuPlot0.toStringRanking();
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 187
  /*Coverage entropy=3.5875941774962454
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.globalInfo();
      resultMatrixCSV0.assign(resultMatrixLatex0);
      resultMatrixCSV0.setShowAverage(false);
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertFalse(resultMatrixCSV0.getDefaultShowAverage());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertFalse(resultMatrixCSV0.getPrintColNames());
  }

  /**
  //Test case number: 188
  /*Coverage entropy=3.588626994421116
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      int[] intArray0 = new int[5];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.setStdDevWidth(44);
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex1.stdDevWidthTipText();
      assertEquals(44, resultMatrixLatex1.getStdDevWidth());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals("The width of the standard deviation (0 = optimal).", resultMatrixSignificance0.stdDevWidthTipText());
  }

  /**
  //Test case number: 189
  /*Coverage entropy=3.89973110600233
  */
  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setMeanWidth(1787);
      resultMatrixHTML0.toStringKey();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixHTML0.toStringMatrix();
      assertEquals(1787, resultMatrixHTML0.getMeanWidth());
  }

  /**
  //Test case number: 190
  /*Coverage entropy=3.491307494792929
  */
  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setStdDevPrec(0);
      double double0 = resultMatrixHTML0.getAverage(0);
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(Double.NaN, double0, 0.01);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1045);
      resultMatrixSignificance0.globalInfo();
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
      assertEquals(1045, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 191
  /*Coverage entropy=3.074513528101823
  */
  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getRowCount());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.setMeanPrec(0);
      resultMatrixCSV0.setShowStdDev(true);
      assertTrue(resultMatrixCSV0.getShowStdDev());
      
      resultMatrixCSV0.assign(resultMatrixHTML0);
      resultMatrixHTML0.getDefaultRowNameWidth();
      assertEquals(1, resultMatrixHTML0.getColCount());
  }

  /**
  //Test case number: 192
  /*Coverage entropy=4.213516169555065
  */
  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setStdDevPrec(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setOptions((String[]) null);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixCSV0);
      assertFalse(resultMatrixCSV0.getEnumerateColNames());
      
      ResultMatrixHTML.main((String[]) null);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDisplayRow(34);
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
  }

  /**
  //Test case number: 193
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(431, 0);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      
      resultMatrixGnuPlot0.m_StdDevPrec = 0;
      resultMatrixGnuPlot0.getPrintColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.WIN_STRING = " ";
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.toStringSummary();
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
  }
}
