/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 17:31:19 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.sql.dictionary.GenericDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBTrigger;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.hsqldb.rowio.RowOutputTextLog;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter session");
      assertFalse(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.mutatesDataOrStructure("/*");
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("inner");
      Object object0 = new Object();
      defaultDBTable0.equals(object0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("inner", defaultDBTable0, 95, "");
      defaultDBColumn0.setNullable(false);
      SQLUtil.renderColumn(defaultDBColumn0);
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0264805138932787
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("upda", true, "upda", "upda");
      StringBuilder stringBuilder0 = new StringBuilder();
      dBCheckConstraint0.setName((String) null);
      stringBuilder0.append((Object) dBCheckConstraint0);
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0);
      assertEquals("CHECK upda", stringBuilder0.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("MalA", stringBuilder0);
      Object object0 = new Object();
      SQLUtil.substituteMarkers("mH]rX7nY]ALPi", "drop tableorg.apache.derby.impl.sql.execute.columninfo", object0);
      // Undeclared exception!
      SQLUtil.isDDL("/*");
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.join("execd", "execd", stringArray0, "execd", "execd", stringArray0);
      assertEquals("execd join execd as execd on execd.null = execd.null", string0);
      
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("execd join execd as execd on execd.null = execd.null", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("execd join execd as execd on execd.null = execd.null", dBSchema0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("execd join execd as execd on execd.null = execd.null", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string1 = SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY () REFERENCES execd join execd as execd on execd.null = execd.null()", string1);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(654);
      String string0 = "/*";
      // Undeclared exception!
      SQLUtil.isProcedureCall("/*");
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("alter tablec.sko+.");
      defaultDBTable0.getPrimaryKeyConstraint();
      DBDataType dBDataType0 = DBDataType.getInstance(41, "QY1v#TMh`d]gX");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, dBDataType0, integer0);
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("", string0);
      
      String string1 = SQLUtil.removeComments("");
      assertTrue(string1.equals((Object)string0));
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7396950032562923
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      String[] stringArray0 = new String[4];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      // Undeclared exception!
      SQLUtil.isDML("!O)\"5\"W6}*L{5Y/*");
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringBuilder stringBuilder0 = new StringBuilder();
      DBCatalog dBCatalog0 = new DBCatalog("alter tablenclob join p1i_l[:6i^zv8j as d on p1i_l[:6i^zv8j.null = d.null and p1i_l[:6i^zv8j.null = d.null and p1i_l[:6i^zv8j.null = d.null");
      DBSchema dBSchema0 = new DBSchema((String) null, dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("alter tablenclob join p1i_l[:6i^zv8j as d on p1i_l[:6i^zv8j.null = d.null and p1i_l[:6i^zv8j.null = d.null and p1i_l[:6i^zv8j.null = d.null", dBSchema0);
      dBCatalog0.getSchemas();
      String string0 = "nclob join p1i_l[:6i^zv";
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("nclob join p1i_l[:6i^zv", defaultDBTable0, (-2034716256), "nclob join p1i_l[:6i^zv");
      defaultDBColumn0.setDefaultValue("create materialized view");
      SQLUtil.renderColumn(defaultDBColumn0);
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      SQLUtil.normalize("--", false);
      Integer integer0 = new Integer(90);
      assertEquals(90, (int)integer0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint(" Yda", false, " Yda", " Yda");
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0);
      assertEquals("CONSTRAINT \" Yda\" ", stringBuilder0.toString());
      
      boolean boolean0 = SQLUtil.isProcedureCall(" Yda");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.5407108604577937
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("e?nFl*{eq/gW1Acn,n:", defaultDBTable0, 2396, "");
      defaultDBColumn0.toString();
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("e?nFl*{eq/gW1Acn,n:");
      assertNull(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.4689241470847967
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("cannot:");
      SQLUtil.mutatesDataOrStructure("cannot:");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-235), "cannot:");
      Integer integer0 = new Integer((-235));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("cannot:", defaultDBTable0, dBDataType0, integer0, integer0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "cannot:");
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("cannot:CANNOT:(-235,-235)", stringBuilder0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.5407108604577937
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.mutatesDataOrStructure("k{A9MDu8");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("k{A9MDu8", defaultDBTable0, 2333, "k{A9MDu8");
      StringBuilder stringBuilder0 = new StringBuilder("k{A9MDu8");
      StringBuilder stringBuilder1 = stringBuilder0.append(2333);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder1);
      assertEquals("k{A9MDu82333K{A9MDU8", stringBuilder1.toString());
      assertEquals("k{A9MDu82333K{A9MDU8", stringBuilder0.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      SQLUtil.isProcedureCall("Cannot find parameter with the specified position.");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.renderValue(defaultDBTable0);
      assertNull(string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3265171534282083
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL(" pdate");
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = " pdate";
      stringArray0[1] = " pdate";
      stringArray0[2] = "inner";
      stringArray0[3] = null;
      String string0 = SQLUtil.join("inner", (String) null, stringArray0, "inner", "inner", stringArray0);
      assertEquals("inner as inner on null. pdate = inner. pdate and null. pdate = inner. pdate and null.inner = inner.inner and null.null = inner.null", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.402886181440778
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance(2070, " pdate");
      Integer integer0 = new Integer(2070);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(" pdate", (DBTable) null, dBDataType0, integer0);
      boolean boolean0 = SQLUtil.isProcedureCall(" pdate");
      assertFalse(boolean0);
      
      String string0 = defaultDBColumn0.toString();
      assertEquals(" pdate :  PDATE(2070)", string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = SQLUtil.renderValue(stringBuilder0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      boolean boolean0 = SQLUtil.isProcedureCall("exec6ixt2k-0ymvk0s5-");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.051681985465941
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      SQLUtil.isQuery(" = ");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "CS4hF<,ckXbsn7Q";
      stringArray0[1] = " = ";
      stringArray0[2] = " = ";
      stringArray0[3] = "z/>plHXh}mPrk6ysJc";
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize(" = ");
      SQLUtil.isQuery("z/>plHXh}mPrk6ysJc");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select ino");
      assertFalse(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      SQLUtil.isQuery("atan2(double,double)");
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      String[] stringArray0 = new String[3];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "'Gg@{/N>};Twm>+Nw^", true, (String[]) null);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("C8K", true, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      NameSpec nameSpec0 = NameSpec.NEVER;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("C8K");
      SQLUtil.renderCreateTable(dBTable0, false, nameSpec0, mockPrintWriter0);
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBUniqueConstraint0, nameSpec0);
      assertEquals("", stringBuilder0.toString());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(650);
      stringBuilder0.append("R");
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("_@FB6mGru", true, "R", "upda");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      String string0 = SQLUtil.normalize("updatem*of!x41me1mcmw[", false);
      assertEquals("updatem * of ! x41me1mcmw [", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SQLUtil.isDML("update");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("drop table)w", dBCatalog0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("update", dBSchema0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("alter materialized view", true, defaultDBTable1, (String[]) null, defaultDBTable0, (String[]) null);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0);
      Locale locale0 = new Locale("alter materialized view");
      PrintWriter printWriter0 = mockPrintWriter0.printf(locale0, "alter table", (Object[]) null);
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, printWriter0);
      assertEquals(105, charArrayWriter0.size());
      assertEquals("alter tableALTER TABLE update ADD \n\tCONSTRAINT \"alter materialized view\" FOREIGN KEY () REFERENCES null()", charArrayWriter0.toString());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.2708735688999964
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("3[>-p^4aF", true, "call", "pj");
      dBCheckConstraint0.setDoc("org.databene.jdbacl.SQLUtil");
      String string0 = SQLUtil.normalize("call", true);
      assertEquals("call", string0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "call";
      stringArray0[1] = "call";
      stringArray0[2] = "8";
      stringArray0[3] = "pj";
      String string1 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("call = 'call' AND call = 'call' AND 8 = '8' AND pj = 'pj'", string1);
      
      SQLUtil.removeComments("pj");
      String string2 = SQLUtil.normalize("/*", false);
      assertEquals("/*", string2);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[5];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, true, stringArray0);
      String string0 = SQLUtil.constraintName(dBUniqueConstraint0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      String[] stringArray0 = new String[3];
      SQLUtil.removeComments("E1HzznJ%c}s");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-732), "drop # ablepdate");
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("drop # ablepdate", defaultDBTable0, dBDataType0, integer0);
      DBColumn[] dBColumnArray0 = new DBColumn[16];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      genericDescriptorList0.add((Object) "#_}j/9/igIK");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) genericDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.330347924447853
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("execd");
      assertNull(boolean0);
      
      SQLUtil.mutatesStructure("execd");
      boolean boolean1 = SQLUtil.isDML("execd");
      assertFalse(boolean1);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "1%r[*{u*_xqnf^u";
      stringArray0[1] = "1%r[*{u*_xqnf^u";
      stringArray0[2] = "1%r[*{u*_xqnf^u";
      stringArray0[3] = "1%r[*{u*_xqnf^u";
      stringArray0[5] = "1%r[*{u*_xqnf^u";
      stringArray0[6] = "1%r[*{u*_xqnf^u";
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("1%r[*{u*_xqnf^u", stringArray0, "1%r[*{u*_xqnf^u", "drop materialized viewcrete tble", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      String[] stringArray0 = new String[4];
      String string0 = SQLUtil.join((String) null, "jSmvQ", stringArray0, "jSmvQ", (String) null, stringArray0);
      assertEquals("jSmvQ as null on jSmvQ.null = null.null and jSmvQ.null = null.null and jSmvQ.null = null.null and jSmvQ.null = null.null", string0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "create unique indexupdatem*&f!x41me1mc>w[";
      stringArray0[1] = "select ino";
      String[] stringArray1 = new String[1];
      stringArray1[0] = "create unique indexupdatem*&f!x41me1mc>w[";
      // Undeclared exception!
      try { 
        SQLUtil.join("create unique indexupdatem*&f!x41me1mc>w[", "create unique indexupdatem*&f!x41me1mc>w[", stringArray0, "create unique indexupdatem*&f!x41me1mc>w[", "select ino", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("sA-P$Z(mX#Y 9");
      SQLUtil.addRequiredCondition("sA-P$Z(mX#Y 9", stringBuilder0);
      assertEquals("sA-P$Z(mX#Y 9 and sA-P$Z(mX#Y 9", stringBuilder0.toString());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("delete", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addRequiredCondition("delete", stringBuilder0);
      assertEquals("delete", stringBuilder0.toString());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      SQLUtil.substituteMarkers("only", "(", "(");
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("5:jZP,~Z]M(6QpC)Ldr");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"6QpC\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      String string0 = "getBinaryStream(long, long)";
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("getBinaryStream(long, long)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"long\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-732), "drop # ablepdate");
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("drop # ablepdate", defaultDBTable0, dBDataType0, integer0);
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("drop # ablepdate", string0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.isQuery("/*");
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("upda", false, "upda", "upda");
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      assertSame(stringBuilder0, stringBuilder1);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("create materialized viewjq=k", stringBuilder0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("insert", true, "org.apache.derby.impl.sql.compile.CallStatementNode", "into");
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, (StringBuilder) null, nameSpec0);
      assertNull(stringBuilder1);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance(351, "alter index.");
      Integer integer0 = new Integer(351);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter index.", (DBTable) null, dBDataType0, integer0, integer0);
      String string0 = SQLUtil.renderValue(defaultDBColumn0);
      assertEquals("alter index. : ALTER INDEX.(351,351)", string0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("#");
      DBDataType dBDataType0 = DBDataType.getInstance((-70286632), "#");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("#", defaultDBTable0, dBDataType0, integer0);
      String string0 = SQLUtil.renderValue(defaultDBColumn0);
      assertEquals("# : #(2)", string0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("alter materialized viewnot null");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      String string0 = SQLUtil.normalize("sA-P(mX#Y*~9%", true);
      assertEquals("sA - P (mX # Y * ~ 9 %", string0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Character character0 = new Character('.');
      String string0 = SQLUtil.renderValue(character0);
      assertEquals("'.'", string0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      String string0 = SQLUtil.normalize("", false);
      assertEquals("", string0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("select ino");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("select into");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.833271495382875
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize("n '`g*A0_");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("insert");
      assertTrue(boolean0);
      assertNotNull(boolean0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "insert";
      stringArray0[1] = "insert#_}j/9/igik";
      stringArray0[2] = "";
      stringArray0[5] = "insert#_}j/9/igik";
      stringArray0[6] = "insert";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex(stringArray0[3], true, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      String[] stringArray1 = new String[4];
      stringArray1[0] = "insert";
      stringArray1[1] = "{a/\"Y&Ma'";
      stringArray1[2] = "drop index";
      stringArray1[3] = "insert";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(dBTable0, "Yn<'~0um:", false, stringArray1);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("insert", dBTable0, (-5223), "insert#_}j/9/igik");
      DBDataType dBDataType0 = DBDataType.getInstance((-5223), "");
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("insert", dBTable0, dBDataType0, (Integer) null, (Integer) null);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn1);
      assertEquals("", string0);
      
      String string1 = SQLUtil.renderWhereClause(stringArray1, stringArray0);
      assertEquals("insert = 'insert' AND {a/\"Y&Ma' = 'insert#_}j/9/igik' AND drop index = '' AND insert = null", string1);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.1629081047004717
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("getBinary4ream(long, lng)");
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("\u0001\u01E9", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("getBinary4ream(long, lng)", dBSchema0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      RowOutputTextLog rowOutputTextLog0 = new RowOutputTextLog();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(rowOutputTextLog0);
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      assertNull(defaultDBTable0.getDoc());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("sA-P(mX#Y*~9%");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: sA-P(mX#Y*~9%
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "aUNJW");
      SQLUtil.addOptionalCondition("aUNJW", stringBuilder0);
      assertEquals("aUNJW or aUNJW", stringBuilder0.toString());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("NCLOB", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      String string0 = SQLUtil.normalize("K'#nIcB?", false);
      assertEquals("K '#nIcB?'", string0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      String string0 = SQLUtil.normalize("axy\":6E?#~", true);
      assertEquals("axy \":6E?#~\"", string0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("'AqrF4$&.N");
      DBTrigger dBTrigger0 = new DBTrigger("IU%ztLQ0kh^9~", dBSchema0);
      String string0 = SQLUtil.ownerDotComponent(dBTrigger0);
      assertEquals("'AqrF4$&.N.IU%ztLQ0kh^9~", string0);
      
      boolean boolean0 = SQLUtil.isDDL("'AqrF4$&.N.IU%ztLQ0kh^9~");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      String string0 = SQLUtil.normalize("dS`t9,xwo", false);
      assertEquals("dS ` t9, x  wo", string0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      String[] stringArray0 = new String[3];
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.6396316382218536
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("updatem*&f!x41me1mc>w[");
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, false, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY ()", string0);
      
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("updatem*&f!x41me1mc>w[");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("UYie1");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("UYie1", defaultDBTable0, (-188463515), "inner");
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("UYie1 INNER NULL", string0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.4048159937786893
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("select ino");
      assertFalse(boolean0);
      
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("select ino", (DBTable) null, 39, "select ino");
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("SELECT INO", string0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("org.h2.engine.User");
      String string0 = SQLUtil.typeAndName(dBCatalog0);
      assertEquals("catalog org.h2.engine.User", string0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertNotNull(string0);
      assertEquals("table null", string0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      String string0 = SQLUtil.normalize("k+GP/ih2:8", true);
      assertEquals("k + GP / ih2 : 8", string0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("upda", false, "upda", "upda");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBCheckConstraint0, nameSpec0);
      SQLUtil.addRequiredCondition("upda", stringBuilder0);
      assertEquals("CONSTRAINT upda  and upda", stringBuilder0.toString());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("cn6|DDWV");
      String string0 = SQLUtil.ownerDotComponent(tableContainer0);
      assertEquals("cn6|DDWV", string0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.986245854568605
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      String[] stringArray0 = new String[4];
      String string0 = SQLUtil.join("jSmvQ", "jSmvQ", stringArray0, stringArray0[2], "jSmvQ", stringArray0);
      assertEquals("jSmvQ join null as jSmvQ on jSmvQ.null = jSmvQ.null and jSmvQ.null = jSmvQ.null and jSmvQ.null = jSmvQ.null and jSmvQ.null = jSmvQ.null", string0);
      
      DBSchema dBSchema0 = new DBSchema("jSmvQ join null as jSmvQ on jSmvQ.null = jSmvQ.null and jSmvQ.null = jSmvQ.null and jSmvQ.null = jSmvQ.null and jSmvQ.null = jSmvQ.null");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("jSmvQ", dBSchema0);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "jSmvQ join null as jSmvQ on jSmvQ.null = jSmvQ.null and jSmvQ.null = jSmvQ.null and jSmvQ.null = jSmvQ.null and jSmvQ.null = jSmvQ.null", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string1 = SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("CONSTRAINT \"jSmvQ join null as jSmvQ on jSmvQ.null = jSmvQ.null and jSmvQ.null = jSmvQ.null and jSmvQ.null = jSmvQ.null and jSmvQ.null = jSmvQ.null\" UNIQUE (, , , )", string1);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      String[] stringArray0 = new String[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("wRU xAMU5xV3");
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "+Q]nf#8]A'5WjcaQ", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("CONSTRAINT +Q]nf#8]A'5WjcaQ UNIQUE ()", string0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DBColumn dBColumn0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.7573118415977054
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      String[] stringArray0 = new String[4];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      SQLUtil.mutatesDataOrStructure("null = null AND null = null AND null = null AND null = null");
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("8P1'h#:kzECH~w]&", stringArray0, "E$h+7P\"iRn4EkhP Y", "E$h+7P\"iRn4EkhP Y", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      MockFileWriter mockFileWriter0 = new MockFileWriter("z(>plHXk}mPrk6ysJc");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0, true);
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      TableContainer tableContainer0 = new TableContainer("z(>plHXk}mPrk6ysJc");
      boolean boolean0 = SQLUtil.isQuery("z(>plHXk}mPrk6ysJc");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("B<C:Go}Z3WJ\"");
      dBSchema0.getTable("B<C:Go}Z3WJ\"");
      NameSpec nameSpec0 = NameSpec.NEVER;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("<C(!v");
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, false, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      String string0 = SQLUtil.normalize("Cannot find parameter with the specified position.", false);
      assertEquals("Cannot find parameter with the specified position.", string0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      String string0 = SQLUtil.normalize("org.apache.derby.impl.store.raw.data.StoredRecordHeader", false);
      assertEquals("org.apache.derby.impl.store.raw.data.StoredRecordHeader", string0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.95571359982777
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("upda", false, "upda", "upda");
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0);
      assertEquals("CONSTRAINT upda ", stringBuilder0.toString());
      
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CHECK upda", string0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("renameselect ino");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("drop tableyqm");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.829466014823356
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("");
      assertNull(boolean0);
      
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("Y;VBa\\N^WK|");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable1, "Y;VBa\\N^WK|", true, (String[]) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT Y;VBa\\N^WK| PRIMARY KEY ()", string0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("create materialized view", true, "org.apache.derby.impl.store.raw.data.BaseContainer", "DEPENDENTID");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("CONSTRAINT \"create materialized view\" ", string0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "<m`";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "<m`", true, stringArray0);
      String string0 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT <m` PRIMARY KEY (<m`)", string0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers("b@$^1iP", (String) null, "b@$^1iP");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String string0 = SQLUtil.normalize("nbL_Mhj)<|Wa", false);
      assertEquals("nbL_   Mhj) < | Wa", string0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "org.databene.jdbacl.SQLUtil";
      // Undeclared exception!
      try { 
        SQLUtil.join((String) null, (String) null, (String[]) null, "SCOPE_IDENTITY", "org.databene.jdbacl.SQLUtil", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[4];
      stringArray1[0] = ")";
      stringArray1[1] = ")";
      stringArray1[2] = "_OG7r4yc";
      stringArray1[3] = "drop table";
      String string0 = SQLUtil.leftJoin("_OG7r4yc", stringArray0, ")", ")", stringArray1);
      assertEquals("left join ) as ) on ", string0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("inner", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.7653291326451686
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("org.databene.commons.condition.ComparationCondition");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DBColumn dBColumn0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("upda", false, "upda", "upda");
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CHECK upda", string0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("upda", true, "upda", "upda");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      assertEquals("CONSTRAINT upda ", stringBuilder0.toString());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("alter table", false, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY () REFERENCES null()", string0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      SQLUtil.isQuery("");
      String string0 = SQLUtil.removeComments("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      String[] stringArray0 = new String[16];
      String string0 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("(, , , , , , , , , , , , , , , )", string0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("seleet ino");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      String string0 = SQLUtil.renderValue("sA-P(mX#Y*~9%");
      assertEquals("'sA-P(mX#Y*~9%'", string0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SQLUtil.isQuery("CBk1_~VC");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, (String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("K'#nIcB?");
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM K'#nIcB? WHERE ", string0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.6886642774367198
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      String[] stringArray0 = new String[12];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      String string1 = SQLUtil.leftJoin("null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", stringArray0, "null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", "executej;='x4u0", stringArray0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.6663317712332457
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      String[] stringArray0 = new String[3];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null AND null = null AND null = null", string0);
      
      String string1 = SQLUtil.leftJoin("Fetch size must be a value greater to or equal to 0.", stringArray0, "SCa?k", "Fetch size must be a value greater to or equal to 0.", stringArray0);
      assertEquals("left join SCa?k as Fetch size must be a value greater to or equal to 0. on Fetch size must be a value greater to or equal to 0..null = Fetch size must be a value greater to or equal to 0..null and Fetch size must be a value greater to or equal to 0..null = Fetch size must be a value greater to or equal to 0..null and Fetch size must be a value greater to or equal to 0..null = Fetch size must be a value greater to or equal to 0..null", string1);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.3238614379613667
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("seleFt in4o");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, true, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      String[] stringArray0 = new String[3];
      String string0 = SQLUtil.renderColumnListWithTableName("Y", stringArray0);
      assertEquals("Y.null, Y.null, Y.null", string0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnListWithTableName(":g#8Vr}'50#Fa", stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader(":vbU%w");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      DBSchema dBSchema0 = new DBSchema("org.apache.derby.iapi.sql.dictionary.PermissionsDescriptor");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("", dBSchema0);
      int int0 = 25;
      // Undeclared exception!
      try { 
        defaultDBTable0.getProvider(25);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 25, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("cr2eate unique index", (String[]) null, "cr2eate unique index", "cr2eate unique index", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin(" sU=zG@.A", (String[]) null, " sU=zG@.A", "mo2xs5j,@VG", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("43Y", "43Y", (String[]) null, "43Y", "43Y", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      String[] stringArray0 = new String[3];
      String string0 = SQLUtil.innerJoin(")w", stringArray0, "C8K", "C8K", stringArray0);
      assertEquals("C8K as C8K on )w.null = C8K.null and )w.null = C8K.null and )w.null = C8K.null", string0);
  }
}
