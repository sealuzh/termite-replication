/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 16:52:56 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.911729417674094
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead((-1L), true);
      Player player1 = new Player((short)4919);
      player1.setDead((-15L));
      player0.setJoinOK(player1, false);
      player0.isJoinOK(player1, false);
      player0.prev = (Party) player1;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      Player player2 = new Player((short)4919, (String) null, "]uc{", 710, (short)4919);
      player2.pack();
      player0.isJoinOK(player2, true);
      long long0 = player0.getTimeOfDeath();
      assertEquals((-1L), long0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.7971377304062592
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(4977, "Player.unpack(): *** WARNING *** data is not of proper type!", " ^`Bj#ZY\"gH$0CJ=M", 5376, 4977);
      Player player1 = new Player(684, (String) null, " ", 52, 684);
      player0.setJoinOK(player1, true);
      player0.remove(player1);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertTrue(boolean0);
      
      player1.pack();
      player1.getIP();
      float float0 = player1.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      player0.pack();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(5376, player0.getPictureId());
      assertEquals("Player.unpack(): *** WARNING *** data is not of proper type!", player0.getIP());
      assertEquals(4977, player0.getStrength());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "", "", 0);
      player0.boss = (Party) player1;
      player0.setConnected(true);
      player0.setJoinOK(player0, false);
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(5, "", "", 5, 5);
      player0.getIP();
      assertTrue(player0.isConnected());
      assertEquals(5, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(5, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-102);
      byteArray0[1] = (byte)58;
      byteArray0[2] = (byte)43;
      byteArray0[3] = (byte)43;
      byteArray0[4] = (byte) (-21);
      byteArray0[5] = (byte) (-102);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byteArrayInputStream0.mark((byte) (-21));
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      Player player1 = new Player(349);
      player1.setZ((byte) (-102));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      player1.pack();
      player1.getZ();
      player0.type();
      player0.getIP();
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals((-102.0F), player1.getZ(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.0506636431758234
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)82;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte) (-7);
      byteArray0[4] = (byte)55;
      byteArray0[5] = (byte)77;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".-6(ZgO_<M;rE5");
      Player player0 = new Player(10, ".-6(ZgO_<M;rE5", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", 5, 10);
      player0.pack();
      player0.setY((byte) (-7));
      player0.getTimeOfDeath();
      Player player1 = new Player(5, ".-6(ZgO_<M;rE5", 5);
      player0.reset(true);
      player0.isJoinOK(player1, false);
      player0.getZ();
      player0.remove(player1);
      player0.getY();
      player0.getIP();
      System.setCurrentTimeMillis((-1231L));
      player0.pack();
      assertEquals((-7.0F), player0.getY(), 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(1589);
      player0.pack();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)51;
      byteArray0[4] = (byte)5;
      byteArray0[5] = (byte)62;
      byteArray0[6] = (byte) (-59);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.read();
      DataInputStream dataInputStream2 = new DataInputStream(byteArrayInputStream0);
      Player player1 = new Player((byte)51);
      Player player2 = new Player((byte)62, "P: u;*WfSj`$7-_fl", "P: u;*WfSj`$7-_fl", (-2285), 0);
      player2.unpack(dataInputStream2);
      assertEquals(4, byteArrayInputStream0.available());
      
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      player0.pack();
      player2.getTimeOfDeath();
      int int0 = player2.getStrength();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney((-1.0F));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      player0.getY();
      player0.getMoney();
      Player player1 = new Player((short)4919, "_>Pz2m<?a[ _ VW'u", (short)4919);
      player1.prev = (Party) player0;
      player0.isJoinOK(player1, false);
      int int0 = player0.getStrength();
      assertEquals((-1.0F), player0.getMoney(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(1589);
      player0.setJoinOK(player0, false);
      player0.isJoinOK(player0, false);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      player0.pack();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(53, player0.getId());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(10);
      Player player1 = new Player(10, "3CBG=%8vLqvm", "&ZQ$p", (short)4919, 10);
      player1.setConnected(false);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)21;
      byteArray0[2] = (byte)6;
      player1.prev = (Party) player0;
      byteArray0[3] = (byte)21;
      byteArray0[4] = (byte)2;
      player0.unpack(byteArray0);
      player1.isConnected();
      player0.getStrength();
      player0.reset(false);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1551), (byte)6);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player1.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)82;
      byteArray0[1] = (byte)25;
      Player player0 = new Player(30, (String) null, (String) null, 5);
      player0.toString();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(5, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.4459311899497576
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      player0.add(player1);
      String string0 = player0.getName();
      assertEquals("Player-1", string0);
      
      player1.setJoinOK(player0, true);
      boolean boolean0 = player1.isJoinOK(player0, true);
      int int0 = player1.gangStrength();
      assertEquals(2, int0);
      
      boolean boolean1 = player1.isDead();
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(boolean1 == boolean0);
      assertTrue(player1.isConnected());
      assertEquals(0, player1.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)82;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.read();
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      Player player0 = new Player(0);
      player0.unpack(dataInputStream0);
      assertEquals(2, byteArrayInputStream0.available());
      
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player((-1), "", "", (-1));
      player0.toString();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-1), player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = 10;
      Player player0 = new Player(10);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("`,fizetZ!$UL");
      mockFileOutputStream0.close();
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.3805678363275375
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player((-1834), "", "", (-1834), 3670);
      Player player1 = new Player((-1834), "+8<4\"+zJ[!8'r`9", "", (short)4919);
      player1.reset(false);
      player0.setY(955.5845F);
      player1.setDead();
      player0.remove(player1);
      player0.getY();
      player0.setConnected(false);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)21;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)0;
      player1.prev = (Party) player0;
      byteArray0[3] = (byte)0;
      player0.unpack(byteArray0);
      player1.isConnected();
      player0.getStrength();
      player1.reset(true);
      player1.setMoney(0.0F);
      player0.isDead();
      player1.pack();
      player0.getPictureId();
      int int0 = player1.type();
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(4);
      Player player1 = new Player((short)4919);
      player0.add(player1);
      player0.getName();
      player0.setJoinOK(player1, true);
      player1.setMoney((-1179.4042F));
      assertEquals((-1179.4042F), player1.getMoney(), 0.01F);
      
      player0.isDead();
      player0.pack();
      Player player2 = new Player(1859, "Player4", "Player4", 30937);
      player2.getPictureId();
      int int0 = player2.type();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      
      player0.setMoney(0.1F);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      player0.getY();
      player0.getMoney();
      int int0 = player0.getStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(9);
      Player player1 = new Player(9, "h^Cw;", "", (-1311));
      player0.getZ();
      player1.getName();
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(28);
      int int0 = player0.getPictureId();
      assertEquals(0, int0);
      
      int int1 = player0.type();
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player28", player0.getName());
      assertEquals(5, int1);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.196939089991099
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(863, ".*[.]class$", "", 863, 863);
      player0.setDead((long) 863);
      player0.getSubparty();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)4;
      player0.setMoney(863);
      player0.setZ((byte)77);
      byteArray0[1] = (byte)77;
      Player player1 = new Player((byte)77, "", (String) null, 1);
      player0.head = (Party) player1;
      player0.reset(false);
      player0.unpack(byteArray0);
      player0.isConnected();
      player0.getZ();
      player0.setDead((-128L));
      player0.setDead(0L);
      assertEquals(77.0F, player0.getZ(), 0.01F);
      
      player1.getName();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, (byte)77);
      boolean boolean0 = player1.isDead();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(5, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 5);
      player0.setX(5);
      player0.setZ(5);
      player0.reset(false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.getZ();
      player0.getName();
      assertEquals(5.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(4977, "KGNc.qs%Z>/^ ", "KGNc.qs%Z>/^ ", 4977);
      player0.toString();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(4977, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player((-3372), (String) null, (-3372));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player((-215), "Vn,*O ps", "Vn,*O ps", (-215), (-503));
      player0.gangStrength();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)120;
      player0.setDead((long) (-215), false);
      player0.gangStrength();
      boolean boolean0 = player0.isDead();
      assertEquals((-215L), player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player();
      float float0 = player0.getMoney();
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(1, "(K$?Pz>}2oM-z4;,bO", 1508);
      player0.setY(10.0F);
      player0.setConnected(false);
      player0.setX(1508);
      player0.getY();
      player0.getZ();
      player0.remove((Party) null);
      player0.setX((-2720.0F));
      player0.isDead();
      player0.isConnected();
      float float0 = player0.getX();
      assertEquals(10.0F, player0.getY(), 0.01F);
      assertEquals((-2720.0F), float0, 0.01F);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player();
      player0.setX((-2859.93F));
      player0.pack();
      assertEquals((-2859.93F), player0.getX(), 0.01F);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player();
      float float0 = player0.getZ();
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, float0, 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(5);
      player0.setY(659.131F);
      player0.boss = null;
      player0.pack();
      float float0 = player0.getY();
      assertEquals(659.131F, float0, 0.01F);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(true);
      player0.pack();
      float float0 = player0.getY();
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, float0, 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte)3;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Player player0 = new Player(5, "I", "I", 5, (byte)0);
      player0.unpack(dataInputStream0);
      assertEquals(2, byteArrayInputStream0.available());
      
      player0.gangStrength();
      boolean boolean0 = player0.isDead();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player((-215), "Vn,*O ps", "Vn,*O ps", 2412, (-503));
      int int0 = player0.gangStrength();
      assertEquals((-503), int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(2412, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player();
      player0.setY((-3369.9163F));
      player0.pack();
      assertEquals((-3369.9163F), player0.getY(), 0.01F);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead(1392409281320L);
      player0.pack();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream1);
      dataInputStream0.read();
      DataInputStream dataInputStream1 = new DataInputStream(sequenceInputStream1);
      Player player1 = new Player(10);
      boolean boolean0 = player1.unpack(dataInputStream0);
      assertFalse(boolean0);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      player0.pack();
      long long0 = player1.getTimeOfDeath();
      assertEquals(1, player1.getStrength());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0L, long0);
      assertEquals("Player10", player1.toString());
      assertEquals(0, player1.getPictureId());
      
      Player player2 = new Player((-11263), "", "", 1, (-11263));
      int int0 = player2.getStrength();
      assertEquals((-11263), int0);
      assertFalse(player2.isDead());
      assertEquals(1, player2.getPictureId());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertTrue(player2.isConnected());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(4977, "KGNc.qs%Z>/^ ", "KGNc.qs%Z>/^ ", 544, 544);
      player0.pack();
      assertEquals(544, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(544, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(4, "m3+:0!9rS&06?$J", "m3+:0!9rS&06?$J", 4, 5376);
      long long0 = player0.getTimeOfDeath();
      assertEquals(5376, player0.getStrength());
      assertEquals(0L, long0);
      assertTrue(player0.isConnected());
      assertEquals(4, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player();
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      byte[] byteArray0 = player0.pack();
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(29, byteArray0.length);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      
      Player player1 = new Player((short)4919, "]v#H@symg<4rzbB;", (String) null, (short)4919);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals(1, player1.getStrength());
      assertEquals(4919, player1.getPictureId());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(930);
      float float0 = Player.TOLERANCE;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("Player930", player0.getName());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player(2450, "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", 85);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("@_IXn >_sA", false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      System.setCurrentTimeMillis(85);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.8148657896913192
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(1589);
      player0.setJoinOK(player0, true);
      player0.pack();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player1589", player0.getName());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, false);
      boolean boolean0 = player0.isDead();
      assertFalse(boolean0);
      
      player0.pack();
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-1", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(false);
      player0.pack();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, false);
      boolean boolean0 = player0.isConnected();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player-1", player0.getName());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player((-15));
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player(28);
      byte[] byteArray0 = new byte[9];
      player0.unpack(byteArray0);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player28", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead(1531L, true);
      player0.pack();
      long long0 = player0.getTimeOfDeath();
      assertEquals(1531L, long0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player();
      float float0 = player0.getX();
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, float0, 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player(5);
      player0.setDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Player player0 = new Player(10);
      player0.setConnected(true);
      player0.pack();
      player0.pack();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player10", player0.toString());
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
  }
}
