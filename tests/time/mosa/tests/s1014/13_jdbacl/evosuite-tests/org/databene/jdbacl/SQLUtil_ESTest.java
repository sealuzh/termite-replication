/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 27 22:27:23 GMT 2020
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.util.List;
import java.util.Vector;
import javax.management.remote.JMXPrincipal;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.sql.dictionary.TableDescriptor;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.apache.derby.impl.io.vfmem.DataStore;
import org.apache.derby.impl.io.vfmem.VirtualFile;
import org.apache.derby.impl.sql.catalog.DataDictionaryImpl;
import org.apache.derby.impl.sql.compile.AllResultColumn;
import org.apache.derby.impl.sql.compile.FromBaseTable;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.h2.jdbcx.JdbcConnectionPool;
import org.hsqldb.lib.HsqlByteArrayOutputStream;
import org.hsqldb.rowio.RowOutputBinary;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint((String) null, true, "&<v[t363Xbh9elK,", "into");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      DBSchema dBSchema0 = new DBSchema((String) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("TKe_", dBSchema0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "TKe_";
      stringArray0[1] = null;
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.ukSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("UNIQUE (TKe_, )", string0);
      
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("update", dBSchema0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("43Y07.U", defaultDBTable1, (-42718070), "");
      String string1 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("", string1);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9743147528693494
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("create unique indexinsert");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("create unique indexinsert", dBSchema0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "create unique indexinsert";
      stringArray0[1] = "create unique indexinsert";
      stringArray0[2] = "create unique indexinsert";
      stringArray0[3] = "create unique indexinsert";
      stringArray0[4] = "create unique indexinsert";
      stringArray0[5] = "create unique indexinsert";
      stringArray0[6] = "create unique indexinsert";
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "create unique indexinsert";
      objectArray0[1] = (Object) "create unique indexinsert";
      objectArray0[2] = (Object) defaultDBTable0;
      objectArray0[3] = (Object) "create unique indexinsert";
      objectArray0[4] = (Object) "create unique indexinsert";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("(P~");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (P~
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = new StringBuilder();
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint(" REqERENCE| ", false, "HH:mm:ss.SSS", "IDLE");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("CONSTRAINT \" REqERENCE| \" ", string0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance(772, "REFERENCJS ");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer2 = RawTransaction.COMMIT;
      Integer integer3 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("REFERENCJS ", defaultDBTable0, dBDataType0, integer2, integer3);
      SQLUtil.renderColumn(defaultDBColumn0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("REFERENCJS ");
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "REFERENCJS ";
      objectArray0[1] = (Object) integer2;
      Object object0 = new Object();
      objectArray0[2] = object0;
      objectArray0[3] = objectArray0[0];
      Object object1 = new Object();
      objectArray0[4] = object1;
      Object object2 = new Object();
      objectArray0[5] = object2;
      objectArray0[6] = (Object) "REFERENCJS  REFERENCJS (0,3) NULL";
      Object object3 = new Object();
      objectArray0[7] = object3;
      objectArray0[8] = (Object) defaultDBTable0;
      PrintWriter printWriter0 = mockPrintWriter0.printf("REFERENCJS  REFERENCJS (0,3) NULL", objectArray0);
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, printWriter0);
      assertSame(mockPrintWriter0, printWriter0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.2798542258336674
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBDataType dBDataType0 = DBDataType.getInstance(97, "W)");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("W)", defaultDBTable0, dBDataType0, integer1, integer1);
      SQLUtil.renderColumn(defaultDBColumn0);
      SQLUtil.parseColumnTypeAndSize("W) W)(2,2) NULL");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "W)";
      stringArray0[1] = "W) W)(2,2) NULL";
      stringArray0[2] = "W) W)(2,2) NULL";
      stringArray0[3] = "W)";
      stringArray0[4] = "W)";
      stringArray0[5] = "W) W)(2,2) NULL";
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      String string0 = "setClob(int, Reader)";
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("setClob(int, Reader)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"int\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      defaultDBTable1.getPrimaryKeyConstraint();
      defaultDBTable1.setDoc("insert");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "insert";
      stringArray0[1] = "insert";
      stringArray0[2] = "insert";
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.8866967846580784
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer2 = RawTransaction.ABORT;
      SQLUtil.removeComments("/([kh7eePBF");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "/([kh7eePBF";
      stringArray0[1] = "/([kh7eePBF";
      stringArray0[2] = "/([kh7eePBF";
      stringArray0[3] = "select into";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "/([kh7eePBF", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("CONSTRAINT /([kh7eePBF UNIQUE (/([kh7eePBF, /([kh7eePBF, /([kh7eePBF, select into)", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DBDataType dBDataType0 = DBDataType.getInstance(46, "Specified statement was:not created y this connection.");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Specified statement was:not created y this connection.", (DBTable) null, dBDataType0);
      DBColumn[] dBColumnArray0 = new DBColumn[2];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("Specified statement was:not created y this connection., Specified statement was:not created y this connection.", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.mutatesDataOrStructure("/*Fg!/a");
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter session");
      assertFalse(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("oG) ceF|");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("oG) ceF|", dBSchema0);
      defaultDBTable0.getReferrers();
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM oG) ceF| WHERE ", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7214023220140038
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("SELECT * FROM ");
      assertFalse(boolean0);
      assertNotNull(boolean0);
      
      boolean boolean1 = SQLUtil.isQuery("SELECT * FROM ");
      assertTrue(boolean1);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.substituteMarkers("CONSTRAINT ", "", "5{pbHb6HK:(vV</2]");
      assertEquals("'5{pbHb6HK:(vV</2]'C'5{pbHb6HK:(vV</2]'O'5{pbHb6HK:(vV</2]'N'5{pbHb6HK:(vV</2]'S'5{pbHb6HK:(vV</2]'T'5{pbHb6HK:(vV</2]'R'5{pbHb6HK:(vV</2]'A'5{pbHb6HK:(vV</2]'I'5{pbHb6HK:(vV</2]'N'5{pbHb6HK:(vV</2]'T'5{pbHb6HK:(vV</2]' '5{pbHb6HK:(vV</2]'", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "XP6");
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      columnDescriptorList0.add((Object) null);
      columnDescriptorList0.listIterator();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.48509409130221154
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize("--");
      String string0 = SQLUtil.normalize("--", false);
      assertEquals("--", string0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "--";
      stringArray0[1] = "--";
      stringArray0[2] = "--";
      stringArray0[3] = "--";
      stringArray0[4] = "--";
      stringArray0[5] = "--";
      String string1 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("(--, --, --, --, --, --)", string1);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = new StringBuilder();
      String string0 = SQLUtil.renderValue(stringBuilder0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.310783678099714
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.7356219397587946
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "drop indexprepare transaction '";
      stringArray0[1] = "drop indexprepare transaction '";
      stringArray0[2] = "drop indexprepare transaction '";
      SQLUtil.leftJoin("drop indexprepare transaction '", stringArray0, "42Z47.U", "ACCESS_MODE_DATA", stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "left join 42Z47.U as ACCESS_MODE_DATA on drop indexprepare transaction '.drop indexprepare transaction ' = ACCESS_MODE_DATA.drop indexprepare transaction ' and drop indexprepare transaction '.drop indexprepare transaction ' = ACCESS_MODE_DATA.drop indexprepare transaction ' and drop indexprepare transaction '.drop indexprepare transaction ' = ACCESS_MODE_DATA.drop indexprepare transaction '");
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.0592293789763123
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("REFERENCJS ");
      String[] stringArray0 = new String[0];
      SQLUtil.renderColumnListWithTableName("REFERENCJS ", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getUniqueConstraint(stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.809514255849282
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("j7?hTr@t8h\"jM\"", false, "j7?hTr@t8h\"jM\"", "y");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "j7?hTr@t8h\"jM\"";
      stringArray0[1] = "y";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "y");
      SQLUtil.isDML("j7?hTr@t8h\"jM\" = 'j7?hTr@t8h\"jM\"' AND y = 'y'");
      SQLUtil.typeAndName(dBCheckConstraint0);
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0);
      assertEquals("yCONSTRAINT j7?hTr@t8h\"jM\" ", stringBuilder0.toString());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      SQLUtil.isDML("");
      String string0 = "select null as TABLE_CAT, null as TABLE_SCHEM, RDB$RELATION_NAME as TABLE_NAME, cast('SYSTEM TABLE' as varchar(31)) as TABLE_TYPE, RDB$DESCRIPTION as REMARKS, RDB$OWNER_NAME as OWNER_NAME from RDB$RELATIONS where ? = 'T' and RDB$SYSTEM_FLAG = 1 and RDB$VIEW_SOURCE is null and ? = RDB$RELATION_NAME union select null as TABLE_CAT, null as TABLE_SCHEM, RDB$RELATION_NAME as TABLE_NAME, cast('TABLE' as varchar(31)) as TABLE_TYPE, RDB$DESCRIPTION as REMARKS, RDB$OWNER_NAME as OWNER_NAME from RDB$RELATIONS where ? = 'T' and RDB$SYSTEM_FLAG = 0 and RDB$VIEW_SOURCE is null and ? = RDB$RELATION_NAME union select null as TABLE_CAT, null as TABLE_SCHEM, RDB$RELATION_NAME as TABLE_NAME, cast('VIEW' as varchar(31)) as TABLE_TYPE, RDB$DESCRIPTION as REMARKS, RDB$OWNER_NAME as OWNER_NAME from RDB$RELATIONS where ? = 'T' and RDB$VIEW_SOURCE is not null and ? = RDB$RELATION_NAME";
      VersionNumber versionNumber0 = VersionNumber.valueOf("select null as TABLE_CAT, null as TABLE_SCHEM, RDB$RELATION_NAME as TABLE_NAME, cast('SYSTEM TABLE' as varchar(31)) as TABLE_TYPE, RDB$DESCRIPTION as REMARKS, RDB$OWNER_NAME as OWNER_NAME from RDB$RELATIONS where ? = 'T' and RDB$SYSTEM_FLAG = 1 and RDB$VIEW_SOURCE is null and ? = RDB$RELATION_NAME union select null as TABLE_CAT, null as TABLE_SCHEM, RDB$RELATION_NAME as TABLE_NAME, cast('TABLE' as varchar(31)) as TABLE_TYPE, RDB$DESCRIPTION as REMARKS, RDB$OWNER_NAME as OWNER_NAME from RDB$RELATIONS where ? = 'T' and RDB$SYSTEM_FLAG = 0 and RDB$VIEW_SOURCE is null and ? = RDB$RELATION_NAME union select null as TABLE_CAT, null as TABLE_SCHEM, RDB$RELATION_NAME as TABLE_NAME, cast('VIEW' as varchar(31)) as TABLE_TYPE, RDB$DESCRIPTION as REMARKS, RDB$OWNER_NAME as OWNER_NAME from RDB$RELATIONS where ? = 'T' and RDB$VIEW_SOURCE is not null and ? = RDB$RELATION_NAME");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("&UE>)#{?N", "&UE>)#{?N", versionNumber0);
      String string1 = null;
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("select null as TABLE_CAT, null as TABLE_SCHEM, RDB$RELATION_NAME as TABLE_NAME, cast('SYSTEM TABLE' as varchar(31)) as TABLE_TYPE, RDB$DESCRIPTION as REMARKS, RDB$OWNER_NAME as OWNER_NAME from RDB$RELATIONS where ? = 'T' and RDB$SYSTEM_FLAG = 1 and RDB$VIEW_SOURCE is null and ? = RDB$RELATION_NAME union select null as TABLE_CAT, null as TABLE_SCHEM, RDB$RELATION_NAME as TABLE_NAME, cast('TABLE' as varchar(31)) as TABLE_TYPE, RDB$DESCRIPTION as REMARKS, RDB$OWNER_NAME as OWNER_NAME from RDB$RELATIONS where ? = 'T' and RDB$SYSTEM_FLAG = 0 and RDB$VIEW_SOURCE is null and ? = RDB$RELATION_NAME union select null as TABLE_CAT, null as TABLE_SCHEM, RDB$RELATION_NAME as TABLE_NAME, cast('VIEW' as varchar(31)) as TABLE_TYPE, RDB$DESCRIPTION as REMARKS, RDB$OWNER_NAME as OWNER_NAME from RDB$RELATIONS where ? = 'T' and RDB$VIEW_SOURCE is not null and ? = RDB$RELATION_NAME");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"'SYSTEM TABLE' as varchar(31\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("calljelete");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0735428464085233
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("");
      SQLUtil.addOptionalCondition("", stringBuilder0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "isPoolable";
      SQLUtil.innerJoin("", stringArray0, "isPoolable", "i7sb.O9laR7", stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      File file0 = MockFile.createTempFile("isPoolable", "isPoolable");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0, true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey((DBForeignKeyConstraint) null, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.6434177197931796
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "tGY=+#?b}>;";
      stringArray0[1] = "tGY=+#?b}>;";
      stringArray0[2] = "JAVA_CLASS";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("tGY=+#?b}>;", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      RowOutputBinary rowOutputBinary0 = new RowOutputBinary((-2310));
      HsqlByteArrayOutputStream hsqlByteArrayOutputStream0 = rowOutputBinary0.getOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(hsqlByteArrayOutputStream0);
      PrintWriter printWriter0 = mockPrintWriter0.printf("tGY=+#?b}>;", (Object[]) stringArray0);
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, printWriter0);
      NameSpec nameSpec1 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec1);
      assertEquals("FOREIGN KEY (tGY=+#?b}>;, tGY=+#?b}>;, JAVA_CLASS) REFERENCES null(tGY=+#?b}>;, tGY=+#?b}>;, JAVA_CLASS)", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "CHECK ");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "42Z15";
      stringArray0[1] = "42Z15";
      stringArray0[2] = "42Z15";
      stringArray0[3] = "42Z15";
      SQLUtil.join("42Z15", "42Z15", stringArray0, "", (String) null, stringArray0);
      Boolean boolean0 = Boolean.valueOf(false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.9559838465843622
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("REFERENCJS ");
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.9559838465843624
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("REFERENCJS ");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("REFERENCJS ");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "REFERENCJS ";
      stringArray0[1] = "";
      stringArray0[2] = "REFERENCJS ";
      stringArray0[3] = "getNewRow()";
      stringArray0[4] = "getNewRow()";
      stringArray0[5] = "7vS6yI Np_'X/F.sd";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "getNewRow()", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("getNewRow()", false, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-267), "getNewRow()");
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("G1", dBTable0, dBDataType0, integer0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBDataType dBDataType0 = DBDataType.getInstance(97, "W)");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("W)", defaultDBTable0, dBDataType0, integer0, integer0);
      defaultDBColumn0.setDoc("W)");
      SQLUtil.renderColumn(defaultDBColumn0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("W)(2,2)", stringBuilder0.toString());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.361738366770769
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("deletereferencjs");
      assertTrue(boolean0);
      assertNotNull(boolean0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(")?.");
      String[] stringArray0 = new String[1];
      stringArray0[0] = ")?.";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("VnSQkKgp!,U5w<V", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT VnSQkKgp!,U5w<V FOREIGN KEY ()?.) REFERENCES )?.()?.)", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      SQLUtil.isDML("deleteupc");
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "exception flshiFg outp";
      stringArray0[1] = "exception flshiFg outp";
      stringArray0[2] = "exception flshiFg outp";
      stringArray0[3] = "exception flshiFg outp";
      stringArray0[4] = ".Kv";
      stringArray0[5] = "exception flshiFg outp";
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.join(".Kv", "exception flshiFg outp", stringArray0, "3n", ".Kv", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("j7?hTr@t8h\"jM\"", true, (String) null, "ZK");
      CompositeDBObject<DBForeignKeyConstraint> compositeDBObject0 = (CompositeDBObject<DBForeignKeyConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      SQLUtil.typeAndName(dBCheckConstraint0);
      String string0 = "RMo:^S/nCz";
      TableContainer tableContainer0 = new TableContainer("j7?hTr@t8h\"jM\"");
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("RMo:^S/nCz", (DBSchema) null);
      SQLUtil.isDML("check constraint j7?hTr@t8h\"jM\"");
      DBDataType.getInstance(8, "p/jlY`MJeFIF%T");
      Integer integer0 = RawTransaction.COMMIT;
      tableContainer0.getSequences(false);
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, (String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "create materialized view57p03";
      String string0 = SQLUtil.join("create materialized view57p03", "42X39", stringArray0, stringArray0[1], stringArray0[1], stringArray0);
      assertEquals("create materialized view57p03 join null as null on 42X39.create materialized view57p03 = null.create materialized view57p03 and 42X39.null = null.null and 42X39.null = null.null and 42X39.null = null.null and 42X39.null = null.null and 42X39.null = null.null and 42X39.null = null.null and 42X39.null = null.null and 42X39.null = null.null", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("smJ^<ipl4", (String) null, (String[]) null, (String) null, ", rowCount == ", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.9862665178647387
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.join((String) null, "&UE>)#{?N", stringArray0, "&UE>)#{?N", "&UE>)#{?N", stringArray0);
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("&UE>)#{?N");
      assertNull(boolean0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance(45, "truncate");
      SQLUtil.parseColumnTypeAndSize("selectcallgetcursorname");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("truncate");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(" NOT NULL", defaultDBTable0, dBDataType0, integer0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals(" NOT NULL TRUNCATE(2) NULL", string0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        SQLUtil.join("", "", (String[]) null, "deleteup", "", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("aTn7z0aeu]9L\"44k", (DBTable) null, (-2152), "aTn7z0aeu]9L\"44k");
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("ATN7Z0AEU]9L\"44K", string0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.9862665178647387
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("REFERENCJS ");
      assertNull(boolean0);
      
      String string0 = SQLUtil.renderValue((Object) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Boolean.valueOf("select into");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "select into");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("getByts(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: getByts(
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      String string0 = SQLUtil.normalize("-4J", true);
      assertEquals("- 4J", string0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("", stringBuilder0);
      assertEquals("", stringBuilder1.toString());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(7, "vOF5pd0{Jm^++fUJ9");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("conn", defaultDBTable0, dBDataType0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("conn VOF5PD0{JM^++FUJ9 NULL", string0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.8438614379613667
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select into");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("");
      assertEquals(1, objectArray0.length);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.8310204811135162
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("execspecified statement was not created by this connection.");
      assertNull(boolean0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, true, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("42X90");
      PrintWriter printWriter0 = mockPrintWriter0.append(':');
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, printWriter0);
      assertSame(mockPrintWriter0, printWriter0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("exec");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "exec";
      stringArray0[1] = "exec";
      stringArray0[2] = "exec";
      stringArray0[3] = "a&Z~";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "a&Z~", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("a&Z~", true, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      DataStore dataStore0 = new DataStore("PRIMARY KEY ");
      VirtualFile virtualFile0 = new VirtualFile("'Q'6a,(", dataStore0);
      OutputStream outputStream0 = virtualFile0.getOutputStream(false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(outputStream0);
      SQLUtil.renderCreateTable(dBTable0, false, nameSpec0, mockPrintWriter0);
      assertNull(dBTable0.getDoc());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      String string0 = SQLUtil.normalize("h2.l", false);
      assertEquals("h2.l", string0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      Boolean boolean0 = Boolean.valueOf("aW](`bO,'M,:]");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "57/)I--#fn+[Ym&kn";
      stringArray0[1] = "57/)I--#fn+[Ym&kn";
      stringArray0[2] = "57/)I--#fn+[Ym&kn";
      String string0 = SQLUtil.leftJoin("57/)I--#fn+[Ym&kn", stringArray0, "57/)I--#fn+[Ym&kn", "", stringArray0);
      assertEquals("left join 57/)I--#fn+[Ym&kn as  on 57/)I--#fn+[Ym&kn.57/)I--#fn+[Ym&kn = .57/)I--#fn+[Ym&kn and 57/)I--#fn+[Ym&kn.57/)I--#fn+[Ym&kn = .57/)I--#fn+[Ym&kn and 57/)I--#fn+[Ym&kn.57/)I--#fn+[Ym&kn = .57/)I--#fn+[Ym&kn and 57/)I--#fn+[Ym&kn.null = .null and 57/)I--#fn+[Ym&kn.null = .null and 57/)I--#fn+[Ym&kn.null = .null and 57/)I--#fn+[Ym&kn.null = .null and 57/)I--#fn+[Ym&kn.null = .null", string0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.9559838465843622
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("REFERENCJS ");
      assertNull(boolean0);
      
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("()", string0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      String string0 = SQLUtil.normalize("/([kh7eePBF", false);
      assertEquals("/ ([ kh7eePBF", string0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.4985690796770057
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      String[] stringArray0 = new String[4];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      String string0 = " hqGI^{T)";
      String string1 = "K14";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("drop index");
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("K14", true, defaultDBTable0, "into");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBCheckConstraint0, nameSpec0);
      int int0 = (-2381);
      // Undeclared exception!
      try { 
        stringBuilder0.insert((-2381), (Object) defaultDBTable0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2381
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.7815134238387222
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("j7?hTr@t8h\"jM\"", false, "j7?hTr@t8h\"jM\"", "y");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("j7?hTr@t8h\"jM\"");
      assertNull(boolean0);
      
      SQLUtil.parseColumnTypeAndSize("xky)sb4cAiGTv&\"1Z");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.createConstraintSpecBuilder(dBCheckConstraint0, nameSpec0);
      String string0 = SQLUtil.normalize("j7?hTr@t8h\"jM\"", false);
      assertEquals("j7 ? hTr @ t8h \"jM\"", string0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("-y(w[-", "-y(w[-", (String[]) null, "-y(w[-", "-y(w[-", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("REFERENCJS ", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition((String) null, stringBuilder0);
      assertEquals("null", stringBuilder0.toString());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("Specified statement was not created by this connection.");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("enFh5*:");
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.NEVER;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "enFh5*:";
      stringArray0[1] = "enFh5*:";
      stringArray0[2] = "truncatecon";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "truncatecon", false, stringArray0);
      String string0 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY (enFh5*:, enFh5*:, truncatecon)", string0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.8310204811135162
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      boolean boolean0 = SQLUtil.isDML("&UE>)#{?N");
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[0];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, true, stringArray0);
      dBUniqueConstraint0.setOwner(defaultDBTable0);
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, (StringBuilder) null);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE ()", string0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.1639556568820564
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("REFERENCJS ");
      Character character0 = Character.valueOf('#');
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers("REFERENCJS ", (String) null, character0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnListWithTableName((String) null, stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("ShLE[TIDITY(", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("pa8w^b'{", (String[]) null, "~6VIoE :g", "delete", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addRequiredCondition((String) null, stringBuilder0);
      assertEquals("null", stringBuilder0.toString());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("alter materialized viewkyh%??}ut5id%r`");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      TableContainer tableContainer0 = new TableContainer("create uniqu");
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("", (DBSchema) null);
      boolean boolean0 = SQLUtil.isDML("");
      assertFalse(boolean0);
      
      String string0 = SQLUtil.ownerDotComponent(defaultDBTable0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("");
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition("", stringBuilder0);
      assertEquals("", stringBuilder1.toString());
      
      boolean boolean0 = SQLUtil.isDDL("ALTER TABLE ");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("f=HrV.|gyw1EW[w F/", true, "IDLE", "IDLE");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("CONSTRAINT \"f=HrV.|gyw1EW[w F/\" ", string0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.808045719583997
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("insert");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.979562444957137
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("SELECT * FROM ");
      SQLUtil.mutatesDataOrStructure("SELECT * FROM ");
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("insertpgeny'", false, "SELECT * FROM ", "SELECT * FROM ");
      StringBuilder stringBuilder0 = new StringBuilder("derby.language.permissionsCacheSize");
      StringBuilder stringBuilder1 = stringBuilder0.append('r');
      StringBuffer stringBuffer0 = new StringBuffer(815);
      StringBuilder stringBuilder2 = stringBuilder1.append(stringBuffer0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder3 = SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder2, nameSpec0);
      SQLUtil.addOptionalCondition("SELECT * FROM ", stringBuilder3);
      assertEquals("derby.language.permissionsCacheSizer or SELECT * FROM ", stringBuilder3.toString());
      assertEquals("derby.language.permissionsCacheSizer or SELECT * FROM ", stringBuilder0.toString());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.leftJoin((String) null, stringArray0, (String) null, "delete", stringArray0);
      SQLUtil.removeComments("left join null as delete on ");
      System.setCurrentTimeMillis((-1716L));
  }

  /**
  //Test case number: 91
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((DBColumn[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String[] stringArray0 = new String[4];
      String[] stringArray1 = new String[5];
      stringArray1[0] = "WD0[a 2'2-5UIH7<zny";
      stringArray1[1] = "WD0[a 2'2-5UIH7<zny";
      stringArray1[2] = "delte";
      stringArray1[4] = "select intor#g";
      stringArray1[4] = "select intor#g";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("WD0[a 2'2-5UIH7<zny", stringArray1, "insertExecuteselectivity(", "WD0[a 2'2-5UIH7<zny", stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.0854684353173742
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("truncate4+271");
      assertNotNull(boolean0);
      assertTrue(boolean0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("truncate4+271", true, defaultDBTable0, "truncate4+271");
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder1 = SQLUtil.createConstraintSpecBuilder(dBCheckConstraint0, nameSpec0);
      assertEquals("", stringBuilder1.toString());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.8866967846580784
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "SYSCS_CHECKPOINT_DATABASE", true, (String[]) null);
      String string0 = SQLUtil.substituteMarkers("create unique index", "1|", dBUniqueConstraint0);
      assertEquals("create unique index", string0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("j7?hTr@t8h\"jM\"", false, "j7?hTr@t8h\"jM\"", "y");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("j7?hTr@t8h\"jM\"");
      assertNull(boolean0);
      
      dBCheckConstraint0.toString();
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CHECK y", string0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("j7?hTr@t8h\"jM\"", true, (String) null, "ZK");
      CompositeDBObject<DBForeignKeyConstraint> compositeDBObject0 = (CompositeDBObject<DBForeignKeyConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(compositeDBObject0).toString();
      dBCheckConstraint0.setOwner(compositeDBObject0);
      dBCheckConstraint0.equals((Object) null);
      String string0 = SQLUtil.ownerDotComponent(dBCheckConstraint0);
      assertEquals("null.j7?hTr@t8h\"jM\"", string0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String string0 = SQLUtil.normalize("$bJ<\"}/,_=nnC|7", false);
      assertEquals("$ bJ < \"}/,_=nnC|7\"", string0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      SQLUtil.mutatesStructure("\")");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("\")");
      JdbcConnectionPool jdbcConnectionPool0 = JdbcConnectionPool.create("\")", "V~de;", "JMT'm9WUeE+m9<");
      jdbcConnectionPool0.getLogWriter();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("\")", true, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey((DBForeignKeyConstraint) null, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.2554823251787535
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      SQLUtil.normalize("", false);
      SQLUtil.isProcedureCall("");
      TableContainer tableContainer0 = new TableContainer(",");
      tableContainer0.getTable("");
      String[] stringArray0 = new String[0];
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, stringArray0, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("smQwXs y`Pdz2");
      String[] stringArray0 = new String[1];
      defaultDBTable0.toString();
      stringArray0[0] = "smQwXs y`Pdz2";
      String string0 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM smQwXs y`Pdz2 WHERE smQwXs y`Pdz2 = 'smQwXs y`Pdz2'", string0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.0543563043733695
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("/b)T2NP6");
      assertNull(boolean0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "/b)T2NP6";
      String[] stringArray1 = new String[1];
      stringArray1[0] = "/b)T2NP6";
      String string0 = SQLUtil.leftJoin("", stringArray0, "", "org.apache.derby.impl.sql.compile.GetCurrentConnectionNode", stringArray1);
      assertEquals("left join  as org.apache.derby.impl.sql.compile.GetCurrentConnectionNode on ./b)T2NP6 = org.apache.derby.impl.sql.compile.GetCurrentConnectionNode./b)T2NP6", string0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringReader stringReader0 = new StringReader("SELExTIDITY(");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string0);
      
      String[] stringArray0 = new String[0];
      String string1 = SQLUtil.innerJoin((String) null, stringArray0, "SELExTIDITY(", "- 0", stringArray0);
      assertEquals("SELExTIDITY( as - 0 on ", string1);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.796311640173813
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize("')");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "r";
      String string0 = SQLUtil.innerJoin("r", stringArray0, "", "I* db0", stringArray0);
      assertEquals(" as I* db0 on r.r = I* db0.r", string0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("", (String[]) null, "2>p,*Vq", "", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      String string0 = SQLUtil.removeComments("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.9559838465843622
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("jelete");
      assertNull(boolean0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("jelete");
      String string0 = SQLUtil.ownerDotComponent(defaultDBTable0);
      assertEquals("jelete", string0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.8438614379613667
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("");
      assertNull(boolean0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String string0 = SQLUtil.renderColumnNames((String[]) null);
      assertEquals("()", string0);
      
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("()");
      String string1 = SQLUtil.renderValue(jMXPrincipal0);
      assertEquals("JMXPrincipal:  ()", string1);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("Unknown constraiv. type: ");
      SQLUtil.addRequiredCondition("Unknown constraiv. type: ", stringBuilder0);
      assertEquals("Unknown constraiv. type:  and Unknown constraiv. type: ", stringBuilder0.toString());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      String string0 = SQLUtil.normalize("select null as TABLE_CAT, null as TABLE_SCHEM, RDB$RELATION_NAME as TABLE_NAME, cast('SYSTEM TABLE' as varchar(31)) as TABLE_TYPE, RDB$DESCRIPTION as REMARKS, RDB$OWNER_NAME as OWNER_NAME from RDB$RELATIONS where ? = 'T' and RDB$SYSTEM_FLAG = 1 and RDB$VIEW_SOURCE is null and ? = RDB$RELATION_NAME union select null as TABLE_CAT, null as TABLE_SCHEM, RDB$RELATION_NAME as TABLE_NAME, cast('TABLE' as varchar(31)) as TABLE_TYPE, RDB$DESCRIPTION as REMARKS, RDB$OWNER_NAME as OWNER_NAME from RDB$RELATIONS where ? = 'T' and RDB$SYSTEM_FLAG = 0 and RDB$VIEW_SOURCE is null and ? = RDB$RELATION_NAME union select null as TABLE_CAT, null as TABLE_SCHEM, RDB$RELATION_NAME as TABLE_NAME, cast('VIEW' as varchar(31)) as TABLE_TYPE, RDB$DESCRIPTION as REMARKS, RDB$OWNER_NAME as OWNER_NAME from RDB$RELATIONS where ? = 'T' and RDB$VIEW_SOURE is not null and ? = RDB$RELATION_NAME", true);
      assertEquals("select null as TABLE_CAT, null as TABLE_SCHEM, RDB $ RELATION_NAME as TABLE_NAME, cast ('SYSTEM TABLE' as varchar (31)) as TABLE_TYPE, RDB $ DESCRIPTION as REMARKS, RDB $ OWNER_NAME as OWNER_NAME from RDB $ RELATIONS where ? = 'T' and RDB $ SYSTEM_FLAG = 1 and RDB $ VIEW_SOURCE is null and ? = RDB $ RELATION_NAME union select null as TABLE_CAT, null as TABLE_SCHEM, RDB $ RELATION_NAME as TABLE_NAME, cast ('TABLE' as varchar (31)) as TABLE_TYPE, RDB $ DESCRIPTION as REMARKS, RDB $ OWNER_NAME as OWNER_NAME from RDB $ RELATIONS where ? = 'T' and RDB $ SYSTEM_FLAG = 0 and RDB $ VIEW_SOURCE is null and ? = RDB $ RELATION_NAME union select null as TABLE_CAT, null as TABLE_SCHEM, RDB $ RELATION_NAME as TABLE_NAME, cast ('VIEW' as varchar (31)) as TABLE_TYPE, RDB $ DESCRIPTION as REMARKS, RDB $ OWNER_NAME as OWNER_NAME from RDB $ RELATIONS where ? = 'T' and RDB $ VIEW_SOURE is not null and ? = RDB $ RELATION_NAME", string0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addRequiredCondition("Unknown constraiv. type: ", stringBuilder0);
      assertEquals("Unknown constraiv. type: ", stringBuilder0.toString());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("<4");
      SQLUtil.addOptionalCondition("<4", stringBuilder0);
      assertEquals("<4 or <4", stringBuilder0.toString());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("\")");
      assertFalse(boolean0);
      
      boolean boolean1 = SQLUtil.isQuery("");
      assertFalse(boolean1);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      FromBaseTable fromBaseTable0 = new FromBaseTable();
      fromBaseTable0.getTableDescriptor();
      // Undeclared exception!
      try { 
        dataDictionaryImpl0.getTriggerDescriptors((TableDescriptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.catalog.DataDictionaryImpl", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.137379891542258
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.mutatesDataOrStructure("call42z15 join 5sqs6r&/u:e= as pwznqh<ksx.5] on 42z15.42z15 = pwznqh<ksx.5].42z15 and 42z15.42z15 = pwznqh<ksx.5].42z15 and 42z15.42z15 = pwznqh<ksx.5].42z15 and 42z15.42z15 = pwznqh<ksx.5].42z15");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "call42z15 join 5sqs6r&/u:e= as pwznqh<ksx.5] on 42z15.42z15 = pwznqh<ksx.5].42z15 and 42z15.42z15 = pwznqh<ksx.5].42z15 and 42z15.42z15 = pwznqh<ksx.5].42z15 and 42z15.42z15 = pwznqh<ksx.5].42z15";
      SQLUtil.innerJoin("call42z15 join 5sqs6r&/u:e= as pwznqh<ksx.5] on 42z15.42z15 = pwznqh<ksx.5].42z15 and 42z15.42z15 = pwznqh<ksx.5].42z15 and 42z15.42z15 = pwznqh<ksx.5].42z15 and 42z15.42z15 = pwznqh<ksx.5].42z15", stringArray0, (String) null, (String) null, stringArray0);
      DBSchema dBSchema0 = new DBSchema("null as null on call42z15 join 5sqs6r&/u:e= as pwznqh<ksx.5] on 42z15.42z15 = pwznqh<ksx.5].42z15 and 42z15.42z15 = pwznqh<ksx.5].42z15 and 42z15.42z15 = pwznqh<ksx.5].42z15 and 42z15.42z15 = pwznqh<ksx.5].42z15.call42z15 join 5sqs6r&/u:e= as pwznqh<ksx.5] on 42z15.42z15 = pwznqh<ksx.5].42z15 and 42z15.42z15 = pwznqh<ksx.5].42z15 and 42z15.42z15 = pwznqh<ksx.5].42z15 and 42z15.42z15 = pwznqh<ksx.5].42z15 = null.call42z15 join 5sqs6r&/u:e= as pwznqh<ksx.5] on 42z15.42z15 = pwznqh<ksx.5].42z15 and 42z15.42z15 = pwznqh<ksx.5].42z15 and 42z15.42z15 = pwznqh<ksx.5].42z15 and 42z15.42z15 = pwznqh<ksx.5].42z15");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("update42z15 join 5sqs6r&/u:e= as pwznqh<ksx.5] on 42z15.42z15 = pwznqh<ksx.5].42z15 and 42z15.42z15 = pwznqh<ksx.5].42z15 and 42z15.42z15 = pwznqh<ksx.5].42z15 and 42z15.42z15 = pwznqh<ksx.5].42z15", dBSchema0);
      defaultDBTable0.getIndex((String) null);
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize("')");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "r";
      String string0 = SQLUtil.innerJoin("r", stringArray0, "r", "r", stringArray0);
      assertEquals("r as r on r.r = r.r", string0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("deleteexception flshifg outp");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Boolean boolean0 = new Boolean("Mt6*+7+*uCs");
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("*`c4U>b", (String[]) null, (String) null, "Mt6*+7+*uCs", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("SGLLE[TIDITu(");
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("SGLLE[TIDITu(", (String[]) null, "SGLLE[TIDITu(", "SGLLE[TIDITu(", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null", string0);
      
      String string1 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("()", string1);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      SQLUtil.substituteMarkers("", "88>`yo8(9]OV", (Object) null);
      DBCheckConstraint dBCheckConstraint0 = null;
      try {
        dBCheckConstraint0 = new DBCheckConstraint("'", true, "", "'");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error parsing SQL
         //
         verifyException("org.databene.jdbacl.sql.SQLParserUtil", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      AllResultColumn allResultColumn0 = new AllResultColumn();
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, "deletei$0/bkvcp*xel`t", allResultColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.6769877743224173
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter materialized viewkyh%??}ut5id%r`");
      assertTrue(boolean0);
      assertNotNull(boolean0);
      
      String string0 = SQLUtil.substituteMarkers("alter materialized viewkyh%??}ut5id%r`", "alter materialized viewkyh%??}ut5id%r`", "alter materialized viewkyh%??}ut5id%r`");
      assertEquals("'alter materialized viewkyh%??}ut5id%r`'", string0);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("executeselectivity(");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("IDLE", false, "IDLE", "IDLE");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("CONSTRAINT IDLE ", string0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      String string0 = SQLUtil.typeAndName(dBCatalog0);
      assertNotNull(string0);
      assertEquals("catalog null", string0);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.660947433286918
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select intoorg.apah");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      SQLUtil.renderColumnListWithTableName("", stringArray0);
      String[] stringArray1 = new String[1];
      stringArray1[0] = "., .";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("., .", stringArray0, "p@9|", "update", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.2554823251787535
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.isDML("");
      SQLUtil.isProcedureCall("");
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnListWithTableName("", stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=0.6615632381579821
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.renderColumnListWithTableName("Specified statement was:not created y this connection.", stringArray0);
      assertEquals("Specified statement was:not created y this connection..null", string0);
      
      String string1 = SQLUtil.join("Specified statement was:not created y this connection.", "Specified statement was:not created y this connection.", stringArray0, "*C<L{*F((~r;E}vD", "Specified statement was:not created y this connection..null", stringArray0);
      assertEquals("Specified statement was:not created y this connection. join *C<L{*F((~r;E}vD as Specified statement was:not created y this connection..null on Specified statement was:not created y this connection..null = Specified statement was:not created y this connection..null.null", string1);
  }

  /**
  //Test case number: 145
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.leftJoin("CONSTRAINT ", stringArray0, "CONSTRAINT ", (String) null, stringArray0);
      assertEquals("left join CONSTRAINT  as null on ", string0);
  }

  /**
  //Test case number: 146
  /*Coverage entropy=0.7963116401738131
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SQLUtil.removeComments("Nfo$hW/@");
      String[] stringArray1 = new String[1];
      stringArray1[0] = "Nfo$hW/@";
      String string0 = SQLUtil.leftJoin("select", stringArray0, "Nfo$hW/@", "Nfo$hW/@", stringArray1);
      assertEquals("left join Nfo$hW/@ as Nfo$hW/@ on select.null = Nfo$hW/@.Nfo$hW/@", string0);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("Q", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 148
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      String[] stringArray0 = new String[3];
      String string0 = SQLUtil.renderColumnListWithTableName("Specified statement was:not created by this connection.", stringArray0);
      assertEquals("Specified statement was:not created by this connection..null, Specified statement was:not created by this connection..null, Specified statement was:not created by this connection..null", string0);
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.0114042647073518
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      String[] stringArray0 = new String[4];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null AND null = null AND null = null AND null = null", string0);
      
      String string1 = SQLUtil.join("b~3T&t[c9]F4", "b~3T&t[c9]F4", stringArray0, " ADD ", " ADD ", stringArray0);
      assertEquals("b~3T&t[c9]F4 join  ADD  as  ADD  on b~3T&t[c9]F4.null =  ADD .null and b~3T&t[c9]F4.null =  ADD .null and b~3T&t[c9]F4.null =  ADD .null and b~3T&t[c9]F4.null =  ADD .null", string1);
  }

  /**
  //Test case number: 150
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.join("j7?hTr@t8h\"jM\"", "j7?hTr@t8h\"jM\"", stringArray0, "j7?hTr@t8h\"jM\"", "j7?hTr@t8h\"jM\"", stringArray0);
      assertEquals("j7?hTr@t8h\"jM\" join j7?hTr@t8h\"jM\" as j7?hTr@t8h\"jM\" on ", string0);
  }

  /**
  //Test case number: 151
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.leftJoin("*S1rA^o<ohUqB)", stringArray0, "callgetcursorname", "callgetcursorname", stringArray0);
      assertEquals("left join callgetcursorname as callgetcursorname on ", string0);
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.310783678099714
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("SLE[TIDITY");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 153
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 154
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("]");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 155
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      String string0 = SQLUtil.normalize("enF;9*:", false);
      assertEquals("enF ; 9 * :", string0);
  }
}
