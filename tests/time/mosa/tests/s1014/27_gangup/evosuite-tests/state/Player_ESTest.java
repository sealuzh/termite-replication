/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 01:12:33 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.847642989259894
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player((-3169), "module.ModuleBrowserDialog$ModuleFilter", (-1));
      player0.setY((-1650.6045F));
      player0.pack();
      player0.gangStrength();
      player0.getY();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-49);
      byteArray0[1] = (byte)98;
      byteArray0[2] = (byte)10;
      player0.unpack(byteArray0);
      player0.getStrength();
      float float0 = player0.getZ();
      assertEquals((-1650.6045F), player0.getY(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(295, (String) null, 295);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player((-1), "-*NA", "-*NA", (-1));
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX((-1));
      float float0 = player0.getX();
      assertEquals((-1.0F), float0, 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player((-1174), "", (-1174));
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-78);
      byteArray0[1] = (byte) (-7);
      byteArray0[2] = (byte)3;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(1, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[25];
      byteArray0[0] = (byte) (-57);
      byteArray0[2] = (byte) (-41);
      byteArray0[3] = (byte) (-45);
      byteArray0[11] = (byte)21;
      byteArray0[5] = (byte) (-29);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-41), (byte)27);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      Player player1 = new Player(1, "=<H|NQ", ".w1lf5kU2d5y", (short)4919);
      player1.getSubparty();
      // Undeclared exception!
      try { 
        player1.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(14557, (String) null, (String) null, 14557);
      Party party0 = new Party();
      party0.prev = (Party) player0;
      player0.boss = party0;
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((-19824), "B|j`l", "B|j`l", (short)4919);
      player0.head = (Party) player1;
      assertEquals(4919, player1.getPictureId());
      
      int int0 = player0.gangStrength();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertFalse(player0.isDead());
      assertEquals(2, int0);
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(23, "j9)_A9", 23);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-72);
      byteArray0[1] = (byte) (-36);
      player0.unpack(byteArray0);
      player0.setY(23);
      player0.type();
      player0.getZ();
      float float0 = player0.getY();
      assertEquals(23.0F, float0, 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.174834213558677
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      player1.setJoinOK(player0, false);
      player0.pack();
      player1.setDead();
      player1.getX();
      player1.getTimeOfDeath();
      player1.getTimeOfDeath();
      player1.getZ();
      player0.isJoinOK(player1, true);
      assertTrue(player1.isDead());
      
      player0.gangStrength();
      Player player2 = new Player();
      System.setCurrentTimeMillis(1392409281320L);
      System.setCurrentTimeMillis((short)4919);
      player2.pack();
      player0.getName();
      System.setCurrentTimeMillis(1392409281320L);
      float float0 = player2.getX();
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(295, (String) null, 295);
      Party party0 = player0.prev;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Player player1 = new Player(295, (String) null, (String) null, 0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      player0.setJoinOK(player1, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.getX();
      player0.getTimeOfDeath();
      player0.getTimeOfDeath();
      player1.getIP();
      // Undeclared exception!
      try { 
        player1.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(0, ";4%l`t^", ";4%l`t^", 0);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(5, "1[0R,RS", (String) null, 2841);
      player0.getName();
      assertEquals(2841, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.885700150847151
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((-872), (String) null, 0);
      player0.type();
      Player player1 = new Player();
      player1.add(player0);
      Player player2 = new Player(0, "state.Party", "=7txX1ay~@4u7j,*c[", 14247);
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.isConnected();
      player1.pack();
      Player player3 = new Player((short)4919, "n4W*_c7)B,l@G", (String) null, 801);
      player1.setMoney((-718));
      assertEquals((-718.0F), player1.getMoney(), 0.01F);
      
      Player player4 = new Player();
      player4.type();
      player0.toString();
      int int0 = player3.getStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.9417429777213613
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertTrue(boolean0);
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
      assertEquals(0, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("Player-1", player1.getName());
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertTrue(player1.isConnected());
      assertEquals(0, player1.getPictureId());
      assertFalse(boolean0);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("Player4919", player1.toString());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.3797334600238247
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player((-946), "", 10);
      player0.setMoney((-946));
      player0.setY(1152.2F);
      player0.getMoney();
      player0.getX();
      player0.setDead((-1815L), true);
      player0.setX(10);
      player0.setX(15.2F);
      player0.setY(0.0F);
      player0.setMoney(15.2F);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = player0.pack();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(374);
      byteArrayOutputStream0.flush();
      byteArrayOutputStream0.close();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      player0.type();
      player0.toString();
      player0.reset(true);
      player0.unpack(byteArray0);
      player0.getIP();
      float float0 = player0.getY();
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(295, (String) null, 295);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(2841, (String) null, 2841);
      player0.setDead();
      boolean boolean0 = player0.isDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player((-946), "", 10);
      player0.setMoney((-946));
      player0.setY(1152.2F);
      player0.getMoney();
      player0.getX();
      player0.setDead((-1815L), true);
      player0.setX(10);
      player0.setX(15.2F);
      player0.setY(0.0F);
      player0.setMoney(15.2F);
      player0.pack();
      boolean boolean0 = player0.isDead();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.126862207664039
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party();
      player0.next = party0;
      party0.prev = player0.next;
      player0.setMoney((-3713.4397F));
      player0.setConnected(false);
      player0.id = (-1531);
      player0.getStrength();
      player0.getStrength();
      player0.setMoney(0.0F);
      Player player1 = new Player((-734), "", "hr&$.Igq", (-1), (-2789));
      player1.setDead();
      player1.setDead((long) (-734), true);
      player0.setJoinOK(player1, false);
      player0.isConnected();
      player0.setDead((-86L));
      assertEquals((-86L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.852140740384332
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((-103), "b@ubfSuX", (-103));
      player0.setDead();
      player0.getPictureId();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-49);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)119;
      byteArray0[5] = (byte) (-99);
      player0.getMoney();
      player0.getTimeOfDeath();
      player0.setDead(0L, true);
      player0.setMoney((byte)2);
      player0.getZ();
      player0.getTimeOfDeath();
      player0.gangStrength();
      player0.setDead((long) (-103), true);
      assertEquals((-103L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(2841, "Player", (-489));
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)107;
      byteArray0[1] = (byte)107;
      byteArray0[2] = (byte)107;
      player0.unpack(byteArray0);
      player0.setX((-2707.27F));
      assertEquals((-2707.27F), player0.getX(), 0.01F);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player((-2786), "Player.unpack(): *** WARNING *** data is not of proper type!", "Player.unpack(): *** WARNING *** data is not of proper type!", (-2786), (-2786));
      int int0 = player0.getStrength();
      assertEquals((-2786), int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals((-2786), player0.getPictureId());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(806, "Ft1bl>-VWY@W1FK2", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", 0, 0);
      Player player1 = new Player();
      player0.prev = (Party) player1;
      Player player2 = new Player(806, "", "0.0.0.0", 4919, 0);
      player0.setJoinOK(player2, false);
      player2.setY(0);
      player2.setX(0.1F);
      player2.setDead((-1L));
      long long0 = player2.getTimeOfDeath();
      assertEquals(0.1F, player2.getX(), 0.01F);
      assertEquals((-1L), long0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(10, "Play", "Play", 10, 10);
      int int0 = player0.getStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = null;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertFalse(boolean0);
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player();
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      player0.pack();
      assertFalse(player0.isConnected());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(0, "Player", "", 256);
      player0.getName();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(256, player0.getPictureId());
      assertEquals("Player", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.9720861369674885
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player((-5343), "R", "", 2294, (-5343));
      player0.setDead((long) 2294);
      player0.isConnected();
      player0.setY((-5343));
      player0.setMoney(1.0F);
      player0.getName();
      player0.id = (-5343);
      player0.gangStrength();
      player0.getMoney();
      player0.setY(1.0F);
      player0.setMoney(2294);
      player0.isConnected();
      player0.setDead((-1702L));
      player0.head = null;
      player0.type();
      player0.getName();
      InputStream inputStream0 = null;
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-5343));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(1, player0.getStrength());
      
      Player player1 = new Player((short)4919, "=<H|NQ", "=<H|NQ", (short)4919, (short)4919);
      player1.pack();
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(4919, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals(4919, player1.getStrength());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(2020.162F);
      float float0 = player0.getZ();
      assertEquals(2020.162F, player0.getY(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "", "", 31837, (-1));
      player0.add(player1);
      assertEquals(31837, player1.getPictureId());
      
      player0.pack();
      int int0 = player0.gangStrength();
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, int0);
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.getName());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player();
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      
      Player player1 = new Player((short)4919, "yj", "yj", (short)4919, (short)4919);
      int int0 = player1.gangStrength();
      assertEquals(4919, int0);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(4919, player1.getPictureId());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(4919);
      player0.setMoney(4919);
      player0.pack();
      assertEquals(4919.0F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("P");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = player0.gangStrength();
      int int1 = player0.getStrength();
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(int1 == int0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(1, int1);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.0960333620007234
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "c?HB", "z)X!`v80hug", (short)4919);
      assertEquals("c?HB", player1.getIP());
      
      int int0 = Packable.PLAYER;
      String string0 = player0.toString();
      assertEquals("Player-1", string0);
      
      Player player2 = new Player((short)4919, "z)X!`v80hug", (short)4919);
      player2.reset(false);
      assertEquals(0L, player2.getTimeOfDeath());
      assertFalse(player2.isDead());
      assertEquals(4919, player2.getPictureId());
      
      byte[] byteArray0 = new byte[1];
      player0.unpack(byteArray0);
      String string1 = player0.getIP();
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", string1);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0, 0);
      player0.getIP();
      Player player1 = new Player((short)4919, "", 87);
      player1.remove(player0);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(87, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(1, player1.getStrength());
      
      boolean boolean1 = player0.isDead();
      assertEquals(0, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(boolean1 == boolean0);
      assertTrue(player0.isConnected());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player();
      player0.setX((short)4919);
      assertEquals(4919.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(10, "Player", "Player", 10);
      player0.pack();
      assertTrue(player0.isConnected());
      assertEquals(10, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.0506636431758234
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player(2, "eyY!fS(AZ~O+,G/pmP$", 2);
      player0.isConnected();
      player0.gangStrength();
      player0.pack();
      player0.setDead(0L);
      player0.setDead((long) 2);
      player0.getIP();
      player0.type();
      player0.getPictureId();
      player0.getStrength();
      player0.getIP();
      player0.getY();
      float float0 = player0.getMoney();
      assertTrue(player0.isDead());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.969755134636486
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      player0.setDead(5684L);
      Player player1 = new Player((short)4919);
      player1.setDead(1L);
      player1.getIP();
      player1.type();
      player0.getPictureId();
      player0.getStrength();
      player1.getIP();
      player1.getY();
      float float0 = player0.getMoney();
      assertEquals(5684L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Player player0 = new Player(2724);
      player0.setZ(2724);
      player0.getZ();
      player0.getX();
      player0.pack();
      assertEquals(2724.0F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player((byte) (-69));
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte) (-69);
      player0.unpack(byteArray0);
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals("Player-69", player0.toString());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ(674.0F);
      player0.gangStrength();
      float float0 = player0.getX();
      assertEquals(674.0F, player0.getZ(), 0.01F);
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player(2, "eyY!fS(AZ~O+,G/pmP$", 2);
      player0.isBoss();
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      boolean boolean0 = player0.isDead();
      assertFalse(boolean0);
      
      long long0 = player0.getTimeOfDeath();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, long0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(2, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(true);
      player0.pack();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-1", player0.toString());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(false);
      player0.pack();
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }
}
